; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_mcomp.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_mcomp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.mv = type { i16, i16 }
%struct.MvLimits = type { i32, i32, i32, i32 }
%struct.search_site_config = type { [88 x %struct.mv], [88 x i64], i32, i32 }
%struct.macroblock = type { [3 x %struct.macroblock_plane], %struct.macroblockd, %struct.MB_MODE_INFO_EXT*, %struct.MB_MODE_INFO_EXT*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [4 x i32], [4 x i32], i32, [4 x i32], [4 x i32], [4 x i32], [2 x i32*], [2 x i32*], i32**, [4 x i32], [2 x i32*], [2 x i32*], i32**, i32, i32, %struct.MvLimits, [4 x [256 x i8]], [4 x i32], i32, i32, [4 x [2 x [2 x [6 x [2 x [6 x [12 x i32]]]]]]], i32, i32, i32, i32, i32, [12 x i8], [12 x i64], [4 x %struct.mv], [2 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, [25 x i8], i8, i8, void (i16*, i32*, i32)*, void (i32*, i8*, i32, i32)*, void (i32*, i16*, i32, i32, i32)*, [8 x i8], [4096 x i8], %struct.scale_factors*, [8 x i8] }
%struct.macroblock_plane = type { [4096 x i16], i32*, i32*, i16*, %struct.buf_2d, [8 x i8], [8 x i16], i16*, i16*, i16*, i16*, i16*, [2 x i64], [8 x i8] }
%struct.buf_2d = type { i8*, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.MB_MODE_INFO_EXT = type { [4 x [2 x %union.int_mv]], [4 x i8] }
%struct.vp9_variance_vtable = type { i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8*, i32, i32*)* }
%struct.VP9_COMP = type { %struct.FRAME_INFO, [8 x i8], %struct.QUANTS, %struct.ThreadData, %struct.MB_MODE_INFO_EXT*, [8 x i8], [256 x [8 x i16]], [256 x [8 x i16]], %struct.VP9Common, %struct.VP9EncoderConfig, %struct.lookahead_ctx*, %struct.lookahead_entry*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, %struct.yv12_buffer_config*, i8, [50 x %struct.TplDepFrame], [8 x %struct.yv12_buffer_config*], [8 x %struct.EncFrameBuf], %union.pthread_mutex_t, i32, %struct.KMEANS_DATA*, i32, i32, [8 x double], [8 x double], [8 x i32], i32, %struct.TileDataEnc*, i32, i32, [3 x i32], i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64*, i32, i32, double*, %struct.yv12_buffer_config, [4 x [64 x %struct.TOKENEXTRA*]], [4 x [64 x %struct.TOKENLIST*]], i64, %struct.RD_OPT, %struct.CODING_CONTEXT, [2 x i32*], [2 x i32*], [2 x i32*], [2 x i32*], i64, i64, i64, %struct.RATE_CONTROL, double, [8 x [4 x i32]], %struct.vpx_codec_pkt_list*, [25 x %struct.MBGRAPH_FRAME_STATS], i32, i32, i32, %struct.SPEED_FEATURES, i32, i32, i32, i32, i32, i8*, i8*, [8 x i32], %struct.CYCLIC_REFRESH*, %struct.ActiveMap, i32 (%struct.macroblock*, %struct.mv*, %struct.mv*, i32, i32, %struct.vp9_variance_vtable*, i32, i32, i32*, i32*, i32**, i32*, i32*, i8*, i32, i32, i32)*, %struct.scale_factors, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, [13 x %struct.vp9_variance_vtable], i64, i64, i64, i64, %struct.TWO_PASS, i8, %struct.yv12_buffer_config, %struct.ALT_REF_AQ*, i32, i32, i32, i32, i32, i32, %struct.SVC, %struct.diff*, i32, i32, i32, %struct.search_site_config, [10 x i32], [7 x [4 x i32]], [2 x [10 x [10 x i32]]], [10 x [10 x [10 x i32]]], [4 x [3 x i32]], [16 x [4 x i32]], [3 x [2 x [4 x i32]]], %struct.vp9_denoiser, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.noise_estimate, i8*, [4 x i64], i64, i64, i64, i8, i32, %struct.VPxWorker*, %struct.EncWorkerData*, %struct.VP9LfSyncData, %struct.VP9BitstreamWorkerData*, i32, %struct.Vp9LevelInfo, %struct.MultiThreadHandle, void (%struct.VP9RowMTSyncData*, i32, i32)*, void (%struct.VP9RowMTSyncData*, i32, i32, i32)*, %struct.ARNRFilterData, i32, i32, i8*, i8*, i8*, i8*, i8, i8, i8*, i32, %struct.LevelConstraint, i8*, i8*, i32, %struct.vpx_roi_map, i32, %struct.EXT_RATECTRL, [8 x i8] }
%struct.FRAME_INFO = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.QUANTS = type { [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]], [256 x [8 x i16]] }
%struct.ThreadData = type { %struct.macroblock, %struct.RD_COUNTS, %struct.FRAME_COUNTS*, %struct.PICK_MODE_CONTEXT*, %struct.PC_TREE*, %struct.PC_TREE*, [8 x i8] }
%struct.RD_COUNTS = type { [4 x [2 x [2 x [6 x [6 x [12 x i32]]]]]], [3 x i64], [4 x i64] }
%struct.PICK_MODE_CONTEXT = type { %struct.MODE_INFO, %struct.MB_MODE_INFO_EXT, i8*, [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i32*]], [3 x [3 x i16*]], i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, [4 x i64], i32, i64, i64, i32, i32, i32, i8, %union.int_mv, i8, i8, i32, [4 x %struct.mv], i8, i32, i8 }
%struct.PC_TREE = type { i32, i32, i8, %struct.PICK_MODE_CONTEXT, [2 x %struct.PICK_MODE_CONTEXT], [2 x %struct.PICK_MODE_CONTEXT], %union.anon, %struct.mv }
%union.anon = type { [4 x %struct.PC_TREE*] }
%struct.VP9Common = type { %struct.vpx_internal_error_info, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], [8 x i32], [3 x %struct.RefBuffer], i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], i32, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, %struct.MODE_INFO*, i32 (%struct.VP9Common*, i32)*, void (%struct.VP9Common*)*, void (%struct.VP9Common*)*, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, %struct.MODE_INFO**, i32, i32, i32, [2 x i8*], i8*, i8*, i32, i8, [11 x i8], %struct.loop_filter_info_n, i32, [4 x i32], %struct.loopfilter, %struct.segmentation, i8, [2 x i8], i32, %struct.frame_contexts*, %struct.frame_contexts*, i32, %struct.FRAME_COUNTS, i32, i32, i32, i32, i32, %struct.postproc_state, i32, i32, i32, i32, i32, i32, %struct.BufferPool*, i8*, i8*, i32, i32, [8 x i8] }
%struct.RefCntBuffer = type { i32, %struct.MV_REF*, i32, i32, i8, i32, i32, %struct.vpx_codec_frame_buffer, %struct.yv12_buffer_config }
%struct.MV_REF = type { [2 x %union.int_mv], [2 x i8] }
%struct.vpx_codec_frame_buffer = type { i8*, i64, i8* }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [8 x [4 x [2 x i8]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { i32, i32, i32, i32, i8, i8, [4 x i8], [4 x i8], [2 x i8], [2 x i8], %struct.LOOP_FILTER_MASK*, i32 }
%struct.LOOP_FILTER_MASK = type { [4 x i64], [4 x i64], i64, [4 x i16], [4 x i16], i16, [64 x i8] }
%struct.segmentation = type { i8, i8, i8, i8, i8, [7 x i8], [3 x i8], [8 x [4 x i16]], [8 x i32], i32 }
%struct.postproc_state = type { i32, i32, i32, i32, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i8*, i8* }
%struct.BufferPool = type { i8*, i32 (i8*, i64, %struct.vpx_codec_frame_buffer*)*, i32 (i8*, %struct.vpx_codec_frame_buffer*)*, [12 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.VP9EncoderConfig = type { i32, i32, i32, i32, i32, double, %struct.vpx_rational, %struct.vpx_rational64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i32], [5 x i32], [5 x i32], [5 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_rational64 = type { i64, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%struct.lookahead_ctx = type { i32, i32, i32, i32, i32, %struct.lookahead_entry* }
%struct.lookahead_entry = type { %struct.yv12_buffer_config, i64, i64, i32, i64 }
%struct.TplDepFrame = type { i8, %struct.TplDepStats*, i32, i32, i32, i32, i32, i32 }
%struct.TplDepStats = type { i64, i64, i64, i64, i64, i32, %union.int_mv }
%struct.EncFrameBuf = type { i32, i32, %struct.yv12_buffer_config }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.KMEANS_DATA = type { double, i32, i32 }
%struct.TileDataEnc = type { %struct.TileInfo, [13 x [30 x i32]], [13 x [30 x i8]], %struct.FIRSTPASS_DATA, %struct.VP9RowMTSyncData, i32* }
%struct.FIRSTPASS_DATA = type { double, double, i64, i64, i64, i64, i32, i32, double, double, double, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32 }
%struct.VP9RowMTSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%struct.TOKENEXTRA = type { i8*, i16, i32 }
%struct.TOKENLIST = type { %struct.TOKENEXTRA*, %struct.TOKENEXTRA*, i32 }
%struct.RD_OPT = type { [30 x i32], [6 x i32], [8 x [13 x [30 x i32]]], [4 x [3 x i64]], [4 x [4 x i64]], i32, i32, double }
%struct.CODING_CONTEXT = type { [4 x i32], [2 x [32767 x i32]], [2 x [32767 x i32]], [3 x i8], i8*, [4 x i8], [2 x i8], %struct.frame_contexts }
%struct.RATE_CONTROL = type { i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, [5 x double], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], double, double, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], [5 x i32], i32, i32, [25 x i64], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, [5 x i32], double, i32, i32, i32, i32 }
%struct.vpx_codec_pkt_list = type { i32, i32, [1 x %struct.vpx_codec_cx_pkt] }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.3 }
%union.anon.3 = type { %struct.anon.4, [40 x i8] }
%struct.anon.4 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%struct.MBGRAPH_FRAME_STATS = type { %struct.MBGRAPH_MB_STATS* }
%struct.MBGRAPH_MB_STATS = type { [4 x %struct.anon.5] }
%struct.anon.5 = type { i32, %union.anon.6 }
%union.anon.6 = type { %union.int_mv }
%struct.SPEED_FEATURES = type { %struct.MV_SPEED_FEATURES, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i8, i8, i32, i32, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x %struct.MESH_PATTERN], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [13 x i32], i32, i32, i32, i32, i32, [13 x i32], i32, i32, i32, i8, i32, i32, i32, i8, i32, i32, i32, %struct.PARTITION_SEARCH_BREAKOUT_THR, %struct.anon.7, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.MV_SPEED_FEATURES = type { i32, i32, i32, i32, i32, i32, i32, %struct.ADAPT_SUBPEL_FORCE_STOP, i32 }
%struct.ADAPT_SUBPEL_FORCE_STOP = type { i32, i32, i32 }
%struct.MESH_PATTERN = type { i32, i32 }
%struct.PARTITION_SEARCH_BREAKOUT_THR = type { i64, i32 }
%struct.anon.7 = type { i32, [3 x float], i32, i32, [4 x i32] }
%struct.CYCLIC_REFRESH = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i64, i16, double, i32, double, [3 x i32], i32, double, i32, i32, i32 }
%struct.ActiveMap = type { i32, i32, i8* }
%struct.TWO_PASS = type { i32, i32, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRSTPASS_STATS*, %struct.FIRST_PASS_INFO, %struct.FIRSTPASS_STATS, i32, i64, double, double, double, double, %struct.FP_MB_FLOAT_STATS*, i32, i64, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], %struct.GF_GROUP }
%struct.FIRST_PASS_INFO = type { %struct.FIRSTPASS_STATS*, i32 }
%struct.FIRSTPASS_STATS = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, i64 }
%struct.FP_MB_FLOAT_STATS = type { double, double, double }
%struct.GF_GROUP = type { i8, [252 x i32], [252 x i32], [252 x i8], [252 x i8], [252 x i8], [252 x i32], [252 x i32], i32, i32, [50 x i32], i32, i32, i32, i32, i32, i32 }
%struct.ALT_REF_AQ = type opaque
%struct.SVC = type { i32, i32, i32, i32, i32, i32, %struct.lookahead_entry, i32, [25 x %struct.yv12_buffer_config], %struct.yv12_buffer_config, i32, i32, [12 x %struct.LAYER_CONTEXT], i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [2 x %struct.BUFFER_LONGTERM_REF], i32, i32, i32, i32, [5 x i8], [5 x i32], i8*, [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, [12 x i32], [12 x i32], [12 x i32], [12 x i32], [12 x i32], i32, i32, i32, i32, i32, [5 x i32], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i8], [5 x i32], [8 x i8], [8 x i8], [5 x i32], i8, i8, i8, [8 x i8], i32, [5 x i32], i32, [5 x i64], i64, i64, [5 x i64], i32, i32, i32, i32 }
%struct.LAYER_CONTEXT = type { %struct.RATE_CONTROL, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, %struct.TWO_PASS, %struct.vpx_fixed_buf, i32, i32, i32, i32, %struct.lookahead_entry*, i32, i32, i32, i64, i32, i8*, i8*, i8*, i32, i32, i32, i8, i32 }
%struct.BUFFER_LONGTERM_REF = type { i32, i32 }
%struct.diff = type { i32, i32, i32 }
%struct.vp9_denoiser = type { %struct.yv12_buffer_config*, %struct.yv12_buffer_config*, %struct.yv12_buffer_config, i32, i32, i32, i32, i32, i32, i32 }
%struct.noise_estimate = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VPxWorker = type { %struct.VPxWorkerImpl*, i32, i32 (i8*, i8*)*, i8*, i8*, i32 }
%struct.VPxWorkerImpl = type opaque
%struct.EncWorkerData = type { %struct.VP9_COMP*, %struct.ThreadData*, i32, i32, [64 x i32] }
%struct.VP9LfSyncData = type { %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32, i32, %struct.LoopFilterWorkerData*, i32, i32, %union.pthread_mutex_t*, %union.pthread_mutex_t*, %union.pthread_cond_t*, i32*, i32 }
%struct.LoopFilterWorkerData = type { %struct.yv12_buffer_config*, %struct.VP9Common*, [3 x %struct.macroblockd_plane], i32, i32, i32 }
%struct.VP9BitstreamWorkerData = type opaque
%struct.Vp9LevelInfo = type { %struct.Vp9LevelStats, %struct.Vp9LevelSpec }
%struct.Vp9LevelStats = type { i8, i32, i64, i64, double, %struct.FrameWindowBuffer, i32 }
%struct.FrameWindowBuffer = type { [128 x %struct.FrameRecord], i8, i8 }
%struct.FrameRecord = type { i64, i32, i32 }
%struct.Vp9LevelSpec = type { i32, i64, i32, i32, double, double, double, i8, i32, i8 }
%struct.MultiThreadHandle = type { i32, i32, i32, [4 x i32], %struct.JobQueue*, i32, [64 x %struct.RowMTInfo], [80 x i32] }
%struct.JobQueue = type { i8*, %struct.JobNode }
%struct.JobNode = type { i32, i32, i32 }
%struct.RowMTInfo = type { %struct.JobQueueHandle, %union.pthread_mutex_t }
%struct.JobQueueHandle = type { i8*, i32 }
%struct.ARNRFilterData = type { [25 x %struct.yv12_buffer_config*], i32, i32, i32, %struct.scale_factors }
%struct.LevelConstraint = type { i8, i8, i32, double }
%struct.vpx_roi_map = type { i8, i8*, i32, i32, [8 x i32], [8 x i32], [8 x i32], [8 x i32], [4 x i32] }
%struct.EXT_RATECTRL = type { i32, i8*, %struct.vpx_rc_funcs, %struct.vpx_rc_config, %struct.vpx_rc_firstpass_stats }
%struct.vpx_rc_funcs = type { i32 (i8*, %struct.vpx_rc_config*, i8**)*, i32 (i8*, %struct.vpx_rc_firstpass_stats*)*, i32 (i8*, %struct.vpx_rc_encodeframe_info*, %struct.vpx_rc_encodeframe_decision*)*, i32 (i8*, %struct.vpx_rc_encodeframe_result*)*, i32 (i8*)*, i8* }
%struct.vpx_rc_encodeframe_info = type { i32, i32, i32, i32, [3 x i32], [3 x i32] }
%struct.vpx_rc_encodeframe_decision = type { i32 }
%struct.vpx_rc_encodeframe_result = type { i64, i64, i64 }
%struct.vpx_rc_config = type { i32, i32, i32, i32, i32, i32 }
%struct.vpx_rc_firstpass_stats = type { %struct.vpx_rc_frame_stats*, i32 }
%struct.vpx_rc_frame_stats = type { double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }

@search_step_table = internal unnamed_addr constant [12 x %struct.mv] [%struct.mv { i16 0, i16 -4 }, %struct.mv { i16 0, i16 4 }, %struct.mv { i16 -4, i16 0 }, %struct.mv { i16 4, i16 0 }, %struct.mv { i16 0, i16 -2 }, %struct.mv { i16 0, i16 2 }, %struct.mv { i16 -2, i16 0 }, %struct.mv { i16 2, i16 0 }, %struct.mv { i16 0, i16 -1 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 -1, i16 0 }, %struct.mv { i16 1, i16 0 }], align 16
@vp9_filter_kernels = external local_unnamed_addr global [5 x [8 x i16]*], align 16
@b_width_log2_lookup = external local_unnamed_addr constant [13 x i8], align 1
@b_height_log2_lookup = external local_unnamed_addr constant [13 x i8], align 1
@vp9_refining_search_sad.neighbors = internal unnamed_addr constant [4 x %struct.mv] [%struct.mv { i16 -1, i16 0 }, %struct.mv { i16 0, i16 -1 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 1, i16 0 }], align 16
@vp9_refining_search_8p_c.neighbors = internal unnamed_addr constant [8 x %struct.mv] [%struct.mv { i16 -1, i16 0 }, %struct.mv { i16 0, i16 -1 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 1, i16 0 }, %struct.mv { i16 -1, i16 -1 }, %struct.mv { i16 1, i16 -1 }, %struct.mv { i16 -1, i16 1 }, %struct.mv { i16 1, i16 1 }], align 16
@hex_search.hex_num_candidates = internal constant [11 x i32] [i32 8, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6], align 16
@hex_search.hex_candidates = internal constant [11 x [8 x %struct.mv]] [[8 x %struct.mv] [%struct.mv { i16 -1, i16 -1 }, %struct.mv { i16 0, i16 -1 }, %struct.mv { i16 1, i16 -1 }, %struct.mv { i16 1, i16 0 }, %struct.mv { i16 1, i16 1 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 -1, i16 1 }, %struct.mv { i16 -1, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -1, i16 -2 }, %struct.mv { i16 1, i16 -2 }, %struct.mv { i16 2, i16 0 }, %struct.mv { i16 1, i16 2 }, %struct.mv { i16 -1, i16 2 }, %struct.mv { i16 -2, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -2, i16 -4 }, %struct.mv { i16 2, i16 -4 }, %struct.mv { i16 4, i16 0 }, %struct.mv { i16 2, i16 4 }, %struct.mv { i16 -2, i16 4 }, %struct.mv { i16 -4, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -4, i16 -8 }, %struct.mv { i16 4, i16 -8 }, %struct.mv { i16 8, i16 0 }, %struct.mv { i16 4, i16 8 }, %struct.mv { i16 -4, i16 8 }, %struct.mv { i16 -8, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -8, i16 -16 }, %struct.mv { i16 8, i16 -16 }, %struct.mv { i16 16, i16 0 }, %struct.mv { i16 8, i16 16 }, %struct.mv { i16 -8, i16 16 }, %struct.mv { i16 -16, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -16, i16 -32 }, %struct.mv { i16 16, i16 -32 }, %struct.mv { i16 32, i16 0 }, %struct.mv { i16 16, i16 32 }, %struct.mv { i16 -16, i16 32 }, %struct.mv { i16 -32, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -32, i16 -64 }, %struct.mv { i16 32, i16 -64 }, %struct.mv { i16 64, i16 0 }, %struct.mv { i16 32, i16 64 }, %struct.mv { i16 -32, i16 64 }, %struct.mv { i16 -64, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -64, i16 -128 }, %struct.mv { i16 64, i16 -128 }, %struct.mv { i16 128, i16 0 }, %struct.mv { i16 64, i16 128 }, %struct.mv { i16 -64, i16 128 }, %struct.mv { i16 -128, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -128, i16 -256 }, %struct.mv { i16 128, i16 -256 }, %struct.mv { i16 256, i16 0 }, %struct.mv { i16 128, i16 256 }, %struct.mv { i16 -128, i16 256 }, %struct.mv { i16 -256, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -256, i16 -512 }, %struct.mv { i16 256, i16 -512 }, %struct.mv { i16 512, i16 0 }, %struct.mv { i16 256, i16 512 }, %struct.mv { i16 -256, i16 512 }, %struct.mv { i16 -512, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -512, i16 -1024 }, %struct.mv { i16 512, i16 -1024 }, %struct.mv { i16 1024, i16 0 }, %struct.mv { i16 512, i16 1024 }, %struct.mv { i16 -512, i16 1024 }, %struct.mv { i16 -1024, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer]], align 16
@square_search.square_num_candidates = internal constant [11 x i32] [i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8], align 16
@square_search.square_candidates = internal constant [11 x [8 x %struct.mv]] [[8 x %struct.mv] [%struct.mv { i16 -1, i16 -1 }, %struct.mv { i16 0, i16 -1 }, %struct.mv { i16 1, i16 -1 }, %struct.mv { i16 1, i16 0 }, %struct.mv { i16 1, i16 1 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 -1, i16 1 }, %struct.mv { i16 -1, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -2, i16 -2 }, %struct.mv { i16 0, i16 -2 }, %struct.mv { i16 2, i16 -2 }, %struct.mv { i16 2, i16 0 }, %struct.mv { i16 2, i16 2 }, %struct.mv { i16 0, i16 2 }, %struct.mv { i16 -2, i16 2 }, %struct.mv { i16 -2, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -4, i16 -4 }, %struct.mv { i16 0, i16 -4 }, %struct.mv { i16 4, i16 -4 }, %struct.mv { i16 4, i16 0 }, %struct.mv { i16 4, i16 4 }, %struct.mv { i16 0, i16 4 }, %struct.mv { i16 -4, i16 4 }, %struct.mv { i16 -4, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -8, i16 -8 }, %struct.mv { i16 0, i16 -8 }, %struct.mv { i16 8, i16 -8 }, %struct.mv { i16 8, i16 0 }, %struct.mv { i16 8, i16 8 }, %struct.mv { i16 0, i16 8 }, %struct.mv { i16 -8, i16 8 }, %struct.mv { i16 -8, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -16, i16 -16 }, %struct.mv { i16 0, i16 -16 }, %struct.mv { i16 16, i16 -16 }, %struct.mv { i16 16, i16 0 }, %struct.mv { i16 16, i16 16 }, %struct.mv { i16 0, i16 16 }, %struct.mv { i16 -16, i16 16 }, %struct.mv { i16 -16, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -32, i16 -32 }, %struct.mv { i16 0, i16 -32 }, %struct.mv { i16 32, i16 -32 }, %struct.mv { i16 32, i16 0 }, %struct.mv { i16 32, i16 32 }, %struct.mv { i16 0, i16 32 }, %struct.mv { i16 -32, i16 32 }, %struct.mv { i16 -32, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -64, i16 -64 }, %struct.mv { i16 0, i16 -64 }, %struct.mv { i16 64, i16 -64 }, %struct.mv { i16 64, i16 0 }, %struct.mv { i16 64, i16 64 }, %struct.mv { i16 0, i16 64 }, %struct.mv { i16 -64, i16 64 }, %struct.mv { i16 -64, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -128, i16 -128 }, %struct.mv { i16 0, i16 -128 }, %struct.mv { i16 128, i16 -128 }, %struct.mv { i16 128, i16 0 }, %struct.mv { i16 128, i16 128 }, %struct.mv { i16 0, i16 128 }, %struct.mv { i16 -128, i16 128 }, %struct.mv { i16 -128, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -256, i16 -256 }, %struct.mv { i16 0, i16 -256 }, %struct.mv { i16 256, i16 -256 }, %struct.mv { i16 256, i16 0 }, %struct.mv { i16 256, i16 256 }, %struct.mv { i16 0, i16 256 }, %struct.mv { i16 -256, i16 256 }, %struct.mv { i16 -256, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -512, i16 -512 }, %struct.mv { i16 0, i16 -512 }, %struct.mv { i16 512, i16 -512 }, %struct.mv { i16 512, i16 0 }, %struct.mv { i16 512, i16 512 }, %struct.mv { i16 0, i16 512 }, %struct.mv { i16 -512, i16 512 }, %struct.mv { i16 -512, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -1024, i16 -1024 }, %struct.mv { i16 0, i16 -1024 }, %struct.mv { i16 1024, i16 -1024 }, %struct.mv { i16 1024, i16 0 }, %struct.mv { i16 1024, i16 1024 }, %struct.mv { i16 0, i16 1024 }, %struct.mv { i16 -1024, i16 1024 }, %struct.mv { i16 -1024, i16 0 }]], align 16
@bigdia_search.bigdia_num_candidates = internal unnamed_addr constant [11 x i32] [i32 4, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8], align 16
@bigdia_search.bigdia_candidates = internal unnamed_addr constant [11 x [8 x %struct.mv]] [[8 x %struct.mv] [%struct.mv { i16 0, i16 -1 }, %struct.mv { i16 1, i16 0 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 -1, i16 0 }, %struct.mv zeroinitializer, %struct.mv zeroinitializer, %struct.mv zeroinitializer, %struct.mv zeroinitializer], [8 x %struct.mv] [%struct.mv { i16 -1, i16 -1 }, %struct.mv { i16 0, i16 -2 }, %struct.mv { i16 1, i16 -1 }, %struct.mv { i16 2, i16 0 }, %struct.mv { i16 1, i16 1 }, %struct.mv { i16 0, i16 2 }, %struct.mv { i16 -1, i16 1 }, %struct.mv { i16 -2, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -2, i16 -2 }, %struct.mv { i16 0, i16 -4 }, %struct.mv { i16 2, i16 -2 }, %struct.mv { i16 4, i16 0 }, %struct.mv { i16 2, i16 2 }, %struct.mv { i16 0, i16 4 }, %struct.mv { i16 -2, i16 2 }, %struct.mv { i16 -4, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -4, i16 -4 }, %struct.mv { i16 0, i16 -8 }, %struct.mv { i16 4, i16 -4 }, %struct.mv { i16 8, i16 0 }, %struct.mv { i16 4, i16 4 }, %struct.mv { i16 0, i16 8 }, %struct.mv { i16 -4, i16 4 }, %struct.mv { i16 -8, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -8, i16 -8 }, %struct.mv { i16 0, i16 -16 }, %struct.mv { i16 8, i16 -8 }, %struct.mv { i16 16, i16 0 }, %struct.mv { i16 8, i16 8 }, %struct.mv { i16 0, i16 16 }, %struct.mv { i16 -8, i16 8 }, %struct.mv { i16 -16, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -16, i16 -16 }, %struct.mv { i16 0, i16 -32 }, %struct.mv { i16 16, i16 -16 }, %struct.mv { i16 32, i16 0 }, %struct.mv { i16 16, i16 16 }, %struct.mv { i16 0, i16 32 }, %struct.mv { i16 -16, i16 16 }, %struct.mv { i16 -32, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -32, i16 -32 }, %struct.mv { i16 0, i16 -64 }, %struct.mv { i16 32, i16 -32 }, %struct.mv { i16 64, i16 0 }, %struct.mv { i16 32, i16 32 }, %struct.mv { i16 0, i16 64 }, %struct.mv { i16 -32, i16 32 }, %struct.mv { i16 -64, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -64, i16 -64 }, %struct.mv { i16 0, i16 -128 }, %struct.mv { i16 64, i16 -64 }, %struct.mv { i16 128, i16 0 }, %struct.mv { i16 64, i16 64 }, %struct.mv { i16 0, i16 128 }, %struct.mv { i16 -64, i16 64 }, %struct.mv { i16 -128, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -128, i16 -128 }, %struct.mv { i16 0, i16 -256 }, %struct.mv { i16 128, i16 -128 }, %struct.mv { i16 256, i16 0 }, %struct.mv { i16 128, i16 128 }, %struct.mv { i16 0, i16 256 }, %struct.mv { i16 -128, i16 128 }, %struct.mv { i16 -256, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -256, i16 -256 }, %struct.mv { i16 0, i16 -512 }, %struct.mv { i16 256, i16 -256 }, %struct.mv { i16 512, i16 0 }, %struct.mv { i16 256, i16 256 }, %struct.mv { i16 0, i16 512 }, %struct.mv { i16 -256, i16 256 }, %struct.mv { i16 -512, i16 0 }], [8 x %struct.mv] [%struct.mv { i16 -512, i16 -512 }, %struct.mv { i16 0, i16 -1024 }, %struct.mv { i16 512, i16 -512 }, %struct.mv { i16 1024, i16 0 }, %struct.mv { i16 512, i16 512 }, %struct.mv { i16 0, i16 1024 }, %struct.mv { i16 -512, i16 512 }, %struct.mv { i16 -1024, i16 0 }]], align 16
@vp9_pattern_search_sad.search_param_to_steps = internal unnamed_addr constant [11 x i32] [i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0], align 16
@vp9_pattern_search_sad.neighbors = internal unnamed_addr constant [4 x %struct.mv] [%struct.mv { i16 0, i16 -1 }, %struct.mv { i16 1, i16 0 }, %struct.mv { i16 0, i16 1 }, %struct.mv { i16 -1, i16 0 }], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_set_mv_search_range(%struct.MvLimits* nocapture, %struct.mv* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %4 = load i16, i16* %3, align 2
  %5 = sext i16 %4 to i32
  %6 = ashr i32 %5, 3
  %7 = add nsw i32 %6, -1023
  %8 = and i32 %5, 7
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i32
  %11 = add nsw i32 %7, %10
  %12 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  %14 = sext i16 %13 to i32
  %15 = ashr i32 %14, 3
  %16 = add nsw i32 %15, -1023
  %17 = and i32 %14, 7
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i32
  %20 = add nsw i32 %16, %19
  %21 = icmp sgt i32 %11, -2047
  %22 = select i1 %21, i32 %11, i32 -2047
  %23 = icmp sgt i32 %20, -2047
  %24 = select i1 %23, i32 %20, i32 -2047
  %25 = icmp slt i32 %6, 1023
  %26 = select i1 %25, i32 %6, i32 1023
  %27 = add nsw i32 %26, 1023
  %28 = icmp slt i32 %15, 1023
  %29 = select i1 %28, i32 %15, i32 1023
  %30 = add nsw i32 %29, 1023
  %31 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, %22
  br i1 %33, label %34, label %35

34:                                               ; preds = %2
  store i32 %22, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %2
  %36 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %27
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 %27, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  %41 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, %24
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i32 %24, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  %46 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, %30
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 %30, i32* %46, align 4
  br label %50

50:                                               ; preds = %49, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vp9_set_subpel_mv_search_range(%struct.MvLimits* nocapture, %struct.MvLimits* nocapture readonly, %struct.mv* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = shl nsw i32 %5, 3
  %7 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = add nsw i32 %9, -8184
  %11 = icmp sgt i32 %6, %10
  %12 = select i1 %11, i32 %6, i32 %10
  %13 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = shl nsw i32 %15, 3
  %17 = load i16, i16* %7, align 2
  %18 = sext i16 %17 to i32
  %19 = add nsw i32 %18, 8184
  %20 = icmp slt i32 %16, %19
  %21 = select i1 %20, i32 %16, i32 %19
  %22 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 1
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = shl nsw i32 %24, 3
  %26 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = sext i16 %27 to i32
  %29 = add nsw i32 %28, -8184
  %30 = icmp sgt i32 %25, %29
  %31 = select i1 %30, i32 %25, i32 %29
  %32 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %1, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = shl nsw i32 %34, 3
  %36 = load i16, i16* %26, align 2
  %37 = sext i16 %36 to i32
  %38 = add nsw i32 %37, 8184
  %39 = icmp slt i32 %35, %38
  %40 = select i1 %39, i32 %35, i32 %38
  %41 = getelementptr inbounds %struct.MvLimits, %struct.MvLimits* %0, i64 0, i32 3
  %42 = icmp sgt i32 %12, -16383
  %43 = select i1 %42, i32 %12, i32 -16383
  store i32 %43, i32* %13, align 4
  %44 = icmp slt i32 %21, 16382
  %45 = select i1 %44, i32 %21, i32 16382
  store i32 %45, i32* %22, align 4
  %46 = icmp sgt i32 %31, -16383
  %47 = select i1 %46, i32 %31, i32 -16383
  store i32 %47, i32* %32, align 4
  %48 = icmp slt i32 %40, 16382
  %49 = select i1 %48, i32 %40, i32 16382
  store i32 %49, i32* %41, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @vp9_init_search_range(i32) local_unnamed_addr #2 {
  %2 = icmp sgt i32 %0, 16
  %3 = select i1 %2, i32 %0, i32 16
  br label %4

4:                                                ; preds = %4, %1
  %5 = phi i32 [ 0, %1 ], [ %8, %4 ]
  %6 = shl i32 %3, %5
  %7 = icmp slt i32 %6, 1023
  %8 = add nuw nsw i32 %5, 1
  br i1 %7, label %4, label %9

9:                                                ; preds = %4
  %10 = icmp ult i32 %5, 9
  %11 = select i1 %10, i32 %5, i32 9
  ret i32 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @vp9_mv_bit_cost(%struct.mv* nocapture readonly, %struct.mv* nocapture readonly, i32* nocapture readonly, i32** nocapture readonly, i32) local_unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.mv, %struct.mv* %0, i64 0, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = sub i16 %7, %9
  %11 = getelementptr inbounds %struct.mv, %struct.mv* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = sub i16 %12, %14
  %16 = icmp eq i16 %10, 0
  %17 = icmp eq i16 %15, 0
  %18 = xor i1 %17, true
  %19 = zext i1 %18 to i64
  %20 = select i1 %17, i64 2, i64 3
  %21 = select i1 %16, i64 %19, i64 %20
  %22 = getelementptr inbounds i32, i32* %2, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = load i32*, i32** %3, align 8
  %25 = sext i16 %10 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, %23
  %29 = getelementptr inbounds i32*, i32** %3, i64 1
  %30 = load i32*, i32** %29, align 8
  %31 = sext i16 %15 to i64
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %28, %33
  %35 = mul nsw i32 %34, %4
  %36 = add nsw i32 %35, 64
  %37 = ashr i32 %36, 7
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @vp9_init_dsmotion_compensation(%struct.search_site_config* nocapture, i32) local_unnamed_addr #4 {
  %3 = alloca <4 x i32>, align 16
  %4 = bitcast <4 x i32>* %3 to [4 x %struct.mv]*
  %5 = bitcast <4 x i32>* %3 to i8*
  %6 = bitcast <4 x i32>* %3 to i16*
  %7 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 0, i32 1
  %8 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 1, i32 0
  %9 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 1, i32 1
  %10 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 2, i32 0
  %11 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 2, i32 1
  %12 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 3, i32 0
  %13 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* %4, i64 0, i64 3, i32 1
  br label %14

14:                                               ; preds = %2, %14
  %15 = phi i64 [ 0, %2 ], [ %56, %14 ]
  %16 = phi i32 [ 1024, %2 ], [ %54, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %17 = trunc i32 %16 to i16
  %18 = sub i16 0, %17
  store i16 %18, i16* %6, align 16
  store i16 0, i16* %7, align 2
  store i16 %17, i16* %8, align 4
  store i16 0, i16* %9, align 2
  store i16 0, i16* %10, align 8
  store i16 %18, i16* %11, align 2
  store i16 0, i16* %12, align 4
  store i16 %17, i16* %13, align 2
  %19 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 0, i64 %15
  %20 = load <4 x i32>, <4 x i32>* %3, align 16
  %21 = extractelement <4 x i32> %20, i32 0
  %22 = shl i32 %21, 16
  %23 = ashr exact i32 %22, 16
  %24 = mul nsw i32 %23, %1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %15
  %27 = or i64 %15, 1
  %28 = add nuw nsw i64 %27, 1
  %29 = or i64 %15, 3
  %30 = bitcast %struct.mv* %19 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %30, align 4
  store i64 %25, i64* %26, align 8
  %31 = extractelement <4 x i32> %20, i32 1
  %32 = shl i32 %31, 16
  %33 = ashr exact i32 %32, 16
  %34 = mul nsw i32 %33, %1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %27
  store i64 %35, i64* %36, align 8
  %37 = extractelement <4 x i32> %20, i32 2
  %38 = shl i32 %37, 16
  %39 = ashr exact i32 %38, 16
  %40 = mul nsw i32 %39, %1
  %41 = sext i16 %18 to i32
  %42 = add nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %28
  store i64 %43, i64* %44, align 8
  %45 = extractelement <4 x i32> %20, i32 3
  %46 = shl i32 %45, 16
  %47 = ashr exact i32 %46, 16
  %48 = mul nsw i32 %47, %1
  %49 = shl i32 %16, 16
  %50 = ashr exact i32 %49, 16
  %51 = add nsw i32 %48, %50
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %29
  store i64 %52, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  %54 = sdiv i32 %16, 2
  %55 = icmp sgt i32 %16, 1
  %56 = add nuw nsw i64 %15, 4
  br i1 %55, label %14, label %57

57:                                               ; preds = %14
  %58 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 2
  store i32 4, i32* %58, align 8
  %59 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 3
  store i32 11, i32* %59, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @vp9_init3smotion_compensation(%struct.search_site_config* nocapture, i32) local_unnamed_addr #4 {
  %3 = alloca [8 x %struct.mv], align 16
  %4 = bitcast [8 x %struct.mv]* %3 to i8*
  %5 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 0, i32 0
  %6 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 0, i32 1
  %7 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 1, i32 0
  %8 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 1, i32 1
  %9 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 2, i32 0
  %10 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 2, i32 1
  %11 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 3, i32 0
  %12 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 3, i32 1
  %13 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 4, i32 0
  %14 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 4, i32 1
  %15 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 5, i32 0
  %16 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 5, i32 1
  %17 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 6, i32 0
  %18 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 6, i32 1
  %19 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 7, i32 0
  %20 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 7, i32 1
  %21 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %3, i64 0, i64 4
  %22 = bitcast [8 x %struct.mv]* %3 to <4 x i32>*
  %23 = bitcast %struct.mv* %21 to <4 x i32>*
  br label %24

24:                                               ; preds = %2, %24
  %25 = phi i64 [ 0, %2 ], [ %105, %24 ]
  %26 = phi i32 [ 1024, %2 ], [ %103, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  %27 = trunc i32 %26 to i16
  %28 = sub i16 0, %27
  store i16 %28, i16* %5, align 16
  store i16 0, i16* %6, align 2
  store i16 %27, i16* %7, align 4
  store i16 0, i16* %8, align 2
  store i16 0, i16* %9, align 8
  store i16 %28, i16* %10, align 2
  store i16 0, i16* %11, align 4
  store i16 %27, i16* %12, align 2
  store i16 %28, i16* %13, align 16
  store i16 %28, i16* %14, align 2
  store i16 %28, i16* %15, align 4
  store i16 %27, i16* %16, align 2
  store i16 %27, i16* %17, align 8
  store i16 %28, i16* %18, align 2
  store i16 %27, i16* %19, align 4
  store i16 %27, i16* %20, align 2
  %29 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 0, i64 %25
  %30 = load <4 x i32>, <4 x i32>* %22, align 16
  %31 = extractelement <4 x i32> %30, i32 0
  %32 = shl i32 %31, 16
  %33 = ashr exact i32 %32, 16
  %34 = mul nsw i32 %33, %1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %25
  %37 = or i64 %25, 1
  %38 = add nuw nsw i64 %37, 1
  %39 = or i64 %25, 3
  %40 = bitcast %struct.mv* %29 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %40, align 4
  store i64 %35, i64* %36, align 8
  %41 = extractelement <4 x i32> %30, i32 1
  %42 = shl i32 %41, 16
  %43 = ashr exact i32 %42, 16
  %44 = mul nsw i32 %43, %1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %37
  store i64 %45, i64* %46, align 8
  %47 = extractelement <4 x i32> %30, i32 2
  %48 = shl i32 %47, 16
  %49 = ashr exact i32 %48, 16
  %50 = mul nsw i32 %49, %1
  %51 = sext i16 %28 to i32
  %52 = add nsw i32 %50, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %38
  store i64 %53, i64* %54, align 8
  %55 = extractelement <4 x i32> %30, i32 3
  %56 = shl i32 %55, 16
  %57 = ashr exact i32 %56, 16
  %58 = mul nsw i32 %57, %1
  %59 = shl i32 %26, 16
  %60 = ashr exact i32 %59, 16
  %61 = add nsw i32 %58, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %39
  store i64 %62, i64* %63, align 8
  %64 = add nuw nsw i64 %39, 1
  %65 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 0, i64 %64
  %66 = load <4 x i32>, <4 x i32>* %23, align 16
  %67 = extractelement <4 x i32> %66, i32 0
  %68 = shl i32 %67, 16
  %69 = ashr exact i32 %68, 16
  %70 = mul nsw i32 %69, %1
  %71 = add nsw i32 %70, %51
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %64
  %74 = add nuw nsw i64 %39, 2
  %75 = add nuw nsw i64 %39, 3
  %76 = or i64 %25, 7
  %77 = bitcast %struct.mv* %65 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %77, align 4
  store i64 %72, i64* %73, align 8
  %78 = extractelement <4 x i32> %66, i32 1
  %79 = shl i32 %78, 16
  %80 = ashr exact i32 %79, 16
  %81 = mul nsw i32 %80, %1
  %82 = add nsw i32 %81, %60
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %74
  store i64 %83, i64* %84, align 8
  %85 = extractelement <4 x i32> %66, i32 2
  %86 = shl i32 %85, 16
  %87 = ashr exact i32 %86, 16
  %88 = mul nsw i32 %87, %1
  %89 = load i16, i16* %18, align 2
  %90 = sext i16 %89 to i32
  %91 = add nsw i32 %88, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %75
  store i64 %92, i64* %93, align 8
  %94 = extractelement <4 x i32> %66, i32 3
  %95 = shl i32 %94, 16
  %96 = ashr exact i32 %95, 16
  %97 = mul nsw i32 %96, %1
  %98 = load i16, i16* %20, align 2
  %99 = sext i16 %98 to i32
  %100 = add nsw i32 %97, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 1, i64 %76
  store i64 %101, i64* %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  %103 = sdiv i32 %26, 2
  %104 = icmp sgt i32 %26, 1
  %105 = add nuw nsw i64 %25, 8
  br i1 %104, label %24, label %106

106:                                              ; preds = %24
  %107 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 2
  store i32 8, i32* %107, align 8
  %108 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %0, i64 0, i32 3
  store i32 11, i32* %108, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_skip_sub_pixel_tree(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* nocapture readonly, i32, i32, i32* nocapture readnone, i32* nocapture readonly, i32** readonly, i32* nocapture, i32*, i8*, i32, i32, i32) local_unnamed_addr #5 {
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = mul nsw i32 %24, %27
  %29 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = add nsw i32 %28, %31
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = shl i16 %26, 3
  store i16 %35, i16* %25, align 2
  %36 = shl i16 %30, 3
  store i16 %36, i16* %29, align 2
  %37 = tail call fastcc i32 @setup_center_error(%struct.macroblockd* %22, %struct.mv* %1, %struct.mv* %2, i32 %4, %struct.vp9_variance_vtable* %5, i8* %19, i32 %21, i8* %34, i32 %24, i8* %13, i32 %14, i32 %15, i32 %32, i32* %9, i32** %10, i32* %12, i32* %11)
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @setup_center_error(%struct.macroblockd* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture readonly, i32, %struct.vp9_variance_vtable* nocapture readonly, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32* nocapture readonly, i32** readonly, i32*, i32* nocapture) unnamed_addr #5 {
  %18 = alloca [4096 x i16], align 16
  %19 = alloca [4096 x i8], align 16
  %20 = icmp eq i8* %9, null
  br i1 %20, label %52, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 18
  %23 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %22, align 8
  %24 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %23, i64 0, i32 29
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %45, label %28

28:                                               ; preds = %21
  %29 = bitcast [4096 x i16]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %29) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 8192, i1 false)
  %30 = getelementptr inbounds [4096 x i16], [4096 x i16]* %18, i64 0, i64 0
  %31 = ptrtoint i8* %9 to i64
  %32 = shl i64 %31, 1
  %33 = inttoptr i64 %32 to i16*
  %34 = sext i32 %12 to i64
  %35 = getelementptr inbounds i8, i8* %7, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = shl i64 %36, 1
  %38 = inttoptr i64 %37 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %30, i16* %33, i32 %10, i32 %11, i16* %38, i32 %8) #8
  %39 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %40 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %39, align 8
  %41 = ptrtoint [4096 x i16]* %18 to i64
  %42 = lshr exact i64 %41, 1
  %43 = inttoptr i64 %42 to i8*
  %44 = call i32 %40(i8* nonnull %43, i32 %10, i8* %5, i32 %6, i32* %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %29) #8
  br label %58

45:                                               ; preds = %21
  %46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %46) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 4096, i1 false)
  %47 = sext i32 %12 to i64
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  call void @vpx_comp_avg_pred_sse2(i8* nonnull %46, i8* nonnull %9, i32 %10, i32 %11, i8* %48, i32 %8) #8
  %49 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %50 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %49, align 8
  %51 = call i32 %50(i8* nonnull %46, i32 %10, i8* %5, i32 %6, i32* %15) #8
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %46) #8
  br label %58

52:                                               ; preds = %17
  %53 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %54 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %53, align 8
  %55 = sext i32 %12 to i64
  %56 = getelementptr inbounds i8, i8* %7, i64 %55
  %57 = tail call i32 %54(i8* %56, i32 %8, i8* %5, i32 %6, i32* %15) #8
  br label %58

58:                                               ; preds = %28, %45, %52
  %59 = phi i32 [ %44, %28 ], [ %51, %45 ], [ %57, %52 ]
  %60 = zext i32 %59 to i64
  store i32 %59, i32* %16, align 4
  %61 = icmp eq i32** %14, null
  br i1 %61, label %98, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %64 = load i16, i16* %63, align 2
  %65 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %66 = load i16, i16* %65, align 2
  %67 = sub i16 %64, %66
  %68 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %69 = load i16, i16* %68, align 2
  %70 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %71 = load i16, i16* %70, align 2
  %72 = sub i16 %69, %71
  %73 = icmp eq i16 %67, 0
  %74 = icmp eq i16 %72, 0
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i64
  %77 = select i1 %74, i64 2, i64 3
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = getelementptr inbounds i32, i32* %13, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %14, align 8
  %82 = sext i16 %67 to i64
  %83 = getelementptr inbounds i32, i32* %81, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = add nsw i32 %84, %80
  %86 = getelementptr inbounds i32*, i32** %14, i64 1
  %87 = load i32*, i32** %86, align 8
  %88 = sext i16 %72 to i64
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %85, %90
  %92 = sext i32 %91 to i64
  %93 = sext i32 %3 to i64
  %94 = shl nsw i64 %93, 18
  %95 = mul i64 %94, %92
  %96 = add i64 %95, 2147483648
  %97 = ashr i64 %96, 32
  br label %98

98:                                               ; preds = %58, %62
  %99 = phi i64 [ %97, %62 ], [ 0, %58 ]
  %100 = add nsw i64 %99, %60
  %101 = icmp ugt i64 %100, 4294967294
  %102 = trunc i64 %100 to i32
  %103 = select i1 %101, i32 -1, i32 %102
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_find_best_sub_pixel_tree_pruned_evenmore(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* readonly, i32, i32, i32* readonly, i32* readonly, i32** readonly, i32*, i32*, i8*, i32, i32, i32) local_unnamed_addr #5 {
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %24 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 -1431655766, i32* %18, align 4
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = sext i16 %28 to i32
  %30 = mul nsw i32 %26, %29
  %31 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = add nsw i32 %30, %33
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = shl nsw i32 %29, 3
  %42 = shl nsw i32 %33, 3
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = shl nsw i32 %44, 3
  %46 = sext i16 %40 to i32
  %47 = add nsw i32 %46, -8184
  %48 = icmp sgt i32 %45, %47
  %49 = select i1 %48, i32 %45, i32 %47
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = shl nsw i32 %51, 3
  %53 = add nsw i32 %46, 8184
  %54 = icmp slt i32 %52, %53
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = shl nsw i32 %57, 3
  %59 = sext i16 %38 to i32
  %60 = add nsw i32 %59, -8184
  %61 = icmp sgt i32 %58, %60
  %62 = select i1 %61, i32 %58, i32 %60
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = shl nsw i32 %64, 3
  %66 = add nsw i32 %59, 8184
  %67 = icmp slt i32 %65, %66
  %68 = select i1 %67, i32 %65, i32 %66
  %69 = icmp sgt i32 %49, -16383
  %70 = select i1 %69, i32 %49, i32 -16383
  %71 = icmp slt i32 %55, 16382
  %72 = select i1 %71, i32 %55, i32 16382
  %73 = icmp sgt i32 %62, -16383
  %74 = select i1 %73, i32 %62, i32 -16383
  %75 = icmp slt i32 %68, 16382
  %76 = select i1 %75, i32 %68, i32 16382
  %77 = shl i16 %28, 3
  store i16 %77, i16* %27, align 2
  %78 = shl i16 %32, 3
  store i16 %78, i16* %31, align 2
  %79 = tail call fastcc i32 @setup_center_error(%struct.macroblockd* %23, %struct.mv* %1, %struct.mv* %2, i32 %4, %struct.vp9_variance_vtable* %5, i8* %20, i32 %22, i8* %36, i32 %26, i8* %13, i32 %14, i32 %15, i32 %34, i32* %9, i32** %10, i32* %12, i32* %11)
  %80 = icmp eq i32* %8, null
  br i1 %80, label %224, label %81

81:                                               ; preds = %17
  %82 = load i32, i32* %8, align 4
  %83 = icmp eq i32 %82, 2147483647
  br i1 %83, label %224, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds i32, i32* %8, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 2147483647
  br i1 %87, label %224, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i32, i32* %8, i64 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 2147483647
  br i1 %91, label %224, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds i32, i32* %8, i64 3
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 2147483647
  br i1 %95, label %224, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds i32, i32* %8, i64 4
  %98 = load i32, i32* %97, align 4
  %99 = icmp ne i32 %98, 2147483647
  %100 = icmp slt i32 %82, %86
  %101 = and i1 %100, %99
  %102 = icmp slt i32 %82, %90
  %103 = and i1 %102, %101
  %104 = icmp slt i32 %82, %94
  %105 = and i1 %104, %103
  %106 = icmp slt i32 %82, %98
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %224

108:                                              ; preds = %96
  %109 = sext i32 %86 to i64
  %110 = sext i32 %94 to i64
  %111 = sub nsw i64 %109, %110
  %112 = sext i32 %82 to i64
  %113 = shl nsw i64 %112, 1
  %114 = sub nsw i64 %109, %113
  %115 = add nsw i64 %114, %110
  %116 = sext i32 %98 to i64
  %117 = sext i32 %90 to i64
  %118 = sub nsw i64 %116, %117
  %119 = sub nsw i64 %116, %113
  %120 = add nsw i64 %119, %117
  %121 = shl nsw i64 %111, 1
  %122 = xor i64 %121, %115
  %123 = icmp slt i64 %122, 0
  %124 = sdiv i64 %115, 2
  %125 = sub nsw i64 0, %124
  %126 = select i1 %123, i64 %125, i64 %124
  %127 = add nsw i64 %126, %121
  %128 = sdiv i64 %127, %115
  %129 = shl nsw i64 %118, 1
  %130 = xor i64 %129, %120
  %131 = icmp slt i64 %130, 0
  %132 = sdiv i64 %120, 2
  %133 = sub nsw i64 0, %132
  %134 = select i1 %131, i64 %133, i64 %132
  %135 = add nsw i64 %134, %129
  %136 = sdiv i64 %135, %120
  %137 = trunc i64 %136 to i32
  %138 = or i64 %136, %128
  %139 = trunc i64 %138 to i32
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %3026, label %141

141:                                              ; preds = %108
  %142 = trunc i64 %128 to i32
  %143 = shl nsw i32 %142, 1
  %144 = add nsw i32 %143, %42
  %145 = icmp slt i32 %144, %70
  %146 = icmp sgt i32 %144, %72
  %147 = or i1 %145, %146
  br i1 %147, label %3026, label %148

148:                                              ; preds = %141
  %149 = shl nsw i32 %137, 1
  %150 = add nsw i32 %149, %41
  %151 = icmp slt i32 %150, %74
  %152 = icmp sgt i32 %150, %76
  %153 = or i1 %151, %152
  br i1 %153, label %3026, label %154

154:                                              ; preds = %148
  %155 = trunc i32 %150 to i16
  %156 = trunc i32 %144 to i16
  %157 = icmp eq i8* %13, null
  br i1 %157, label %158, label %170

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %160 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %159, align 8
  %161 = ashr i32 %150, 3
  %162 = mul nsw i32 %161, %26
  %163 = ashr i32 %144, 3
  %164 = add nsw i32 %162, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %36, i64 %165
  %167 = and i32 %144, 6
  %168 = and i32 %150, 6
  %169 = call i32 %160(i8* %166, i32 %26, i32 %167, i32 %168, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %182

170:                                              ; preds = %154
  %171 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %172 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %171, align 8
  %173 = ashr i32 %150, 3
  %174 = mul nsw i32 %173, %26
  %175 = ashr i32 %144, 3
  %176 = add nsw i32 %174, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %36, i64 %177
  %179 = and i32 %144, 6
  %180 = and i32 %150, 6
  %181 = call i32 %172(i8* %178, i32 %26, i32 %179, i32 %180, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %182

182:                                              ; preds = %170, %158
  %183 = phi i32 [ %169, %158 ], [ %181, %170 ]
  %184 = sext i32 %183 to i64
  %185 = icmp eq i32** %10, null
  br i1 %185, label %213, label %186

186:                                              ; preds = %182
  %187 = sub i16 %155, %38
  %188 = sub i16 %156, %40
  %189 = icmp eq i16 %187, 0
  %190 = icmp eq i16 %188, 0
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i64
  %193 = select i1 %190, i64 2, i64 3
  %194 = select i1 %189, i64 %192, i64 %193
  %195 = getelementptr inbounds i32, i32* %9, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = load i32*, i32** %10, align 8
  %198 = sext i16 %187 to i64
  %199 = getelementptr inbounds i32, i32* %197, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = add nsw i32 %200, %196
  %202 = getelementptr inbounds i32*, i32** %10, i64 1
  %203 = load i32*, i32** %202, align 8
  %204 = sext i16 %188 to i64
  %205 = getelementptr inbounds i32, i32* %203, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = add nsw i32 %201, %206
  %208 = sext i32 %207 to i64
  %209 = sext i32 %4 to i64
  %210 = mul nsw i64 %208, %209
  %211 = add nsw i64 %210, 8192
  %212 = lshr i64 %211, 14
  br label %213

213:                                              ; preds = %182, %186
  %214 = phi i64 [ %212, %186 ], [ 0, %182 ]
  %215 = shl i64 %214, 32
  %216 = ashr exact i64 %215, 32
  %217 = add nsw i64 %216, %184
  %218 = icmp sgt i64 %217, 2147483646
  br i1 %218, label %3026, label %219

219:                                              ; preds = %213
  %220 = trunc i64 %217 to i32
  %221 = icmp ugt i32 %79, %220
  br i1 %221, label %222, label %3026

222:                                              ; preds = %219
  store i32 %183, i32* %11, align 4
  %223 = load i32, i32* %18, align 4
  store i32 %223, i32* %12, align 4
  br label %3026

224:                                              ; preds = %96, %92, %88, %84, %81, %17
  %225 = add nsw i32 %42, -4
  %226 = icmp slt i32 %225, %70
  %227 = icmp sgt i32 %225, %72
  %228 = or i1 %226, %227
  %229 = icmp slt i32 %41, %74
  %230 = or i1 %228, %229
  %231 = icmp sgt i32 %41, %76
  %232 = or i1 %230, %231
  br i1 %232, label %295, label %233

233:                                              ; preds = %224
  %234 = trunc i32 %41 to i16
  %235 = trunc i32 %225 to i16
  %236 = icmp eq i8* %13, null
  br i1 %236, label %237, label %245

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %239 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %238, align 8
  %240 = ashr i32 %225, 3
  %241 = add nsw i32 %240, %30
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %36, i64 %242
  %244 = call i32 %239(i8* %243, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %253

245:                                              ; preds = %233
  %246 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %247 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %246, align 8
  %248 = ashr i32 %225, 3
  %249 = add nsw i32 %248, %30
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %36, i64 %250
  %252 = call i32 %247(i8* %251, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %253

253:                                              ; preds = %245, %237
  %254 = phi i32 [ %244, %237 ], [ %252, %245 ]
  %255 = sext i32 %254 to i64
  %256 = icmp eq i32** %10, null
  br i1 %256, label %284, label %257

257:                                              ; preds = %253
  %258 = sub i16 %234, %38
  %259 = sub i16 %235, %40
  %260 = icmp eq i16 %258, 0
  %261 = icmp eq i16 %259, 0
  %262 = xor i1 %261, true
  %263 = zext i1 %262 to i64
  %264 = select i1 %261, i64 2, i64 3
  %265 = select i1 %260, i64 %263, i64 %264
  %266 = getelementptr inbounds i32, i32* %9, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = load i32*, i32** %10, align 8
  %269 = sext i16 %258 to i64
  %270 = getelementptr inbounds i32, i32* %268, i64 %269
  %271 = load i32, i32* %270, align 4
  %272 = add nsw i32 %271, %267
  %273 = getelementptr inbounds i32*, i32** %10, i64 1
  %274 = load i32*, i32** %273, align 8
  %275 = sext i16 %259 to i64
  %276 = getelementptr inbounds i32, i32* %274, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = add nsw i32 %272, %277
  %279 = sext i32 %278 to i64
  %280 = sext i32 %4 to i64
  %281 = mul nsw i64 %279, %280
  %282 = add nsw i64 %281, 8192
  %283 = lshr i64 %282, 14
  br label %284

284:                                              ; preds = %253, %257
  %285 = phi i64 [ %283, %257 ], [ 0, %253 ]
  %286 = shl i64 %285, 32
  %287 = ashr exact i64 %286, 32
  %288 = add nsw i64 %287, %255
  %289 = icmp sgt i64 %288, 2147483646
  br i1 %289, label %295, label %290

290:                                              ; preds = %284
  %291 = trunc i64 %288 to i32
  %292 = icmp ugt i32 %79, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  store i32 %254, i32* %11, align 4
  %294 = load i32, i32* %18, align 4
  store i32 %294, i32* %12, align 4
  br label %295

295:                                              ; preds = %293, %290, %284, %224
  %296 = phi i32 [ %79, %224 ], [ %291, %293 ], [ %79, %290 ], [ %79, %284 ]
  %297 = phi i32 [ %42, %224 ], [ %225, %293 ], [ %42, %290 ], [ %42, %284 ]
  %298 = phi i32 [ 2147483647, %224 ], [ %291, %293 ], [ %291, %290 ], [ 2147483647, %284 ]
  %299 = or i32 %42, 4
  %300 = icmp slt i32 %299, %70
  %301 = icmp sgt i32 %299, %72
  %302 = or i1 %300, %301
  %303 = or i1 %302, %229
  %304 = or i1 %303, %231
  br i1 %304, label %363, label %305

305:                                              ; preds = %295
  %306 = trunc i32 %41 to i16
  %307 = trunc i32 %299 to i16
  %308 = icmp eq i8* %13, null
  br i1 %308, label %309, label %315

309:                                              ; preds = %305
  %310 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %311 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %310, align 8
  %312 = sext i32 %34 to i64
  %313 = getelementptr inbounds i8, i8* %36, i64 %312
  %314 = call i32 %311(i8* %313, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %321

315:                                              ; preds = %305
  %316 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %317 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %316, align 8
  %318 = sext i32 %34 to i64
  %319 = getelementptr inbounds i8, i8* %36, i64 %318
  %320 = call i32 %317(i8* %319, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %321

321:                                              ; preds = %315, %309
  %322 = phi i32 [ %314, %309 ], [ %320, %315 ]
  %323 = sext i32 %322 to i64
  %324 = icmp eq i32** %10, null
  br i1 %324, label %352, label %325

325:                                              ; preds = %321
  %326 = sub i16 %306, %38
  %327 = sub i16 %307, %40
  %328 = icmp eq i16 %326, 0
  %329 = icmp eq i16 %327, 0
  %330 = xor i1 %329, true
  %331 = zext i1 %330 to i64
  %332 = select i1 %329, i64 2, i64 3
  %333 = select i1 %328, i64 %331, i64 %332
  %334 = getelementptr inbounds i32, i32* %9, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = load i32*, i32** %10, align 8
  %337 = sext i16 %326 to i64
  %338 = getelementptr inbounds i32, i32* %336, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = add nsw i32 %339, %335
  %341 = getelementptr inbounds i32*, i32** %10, i64 1
  %342 = load i32*, i32** %341, align 8
  %343 = sext i16 %327 to i64
  %344 = getelementptr inbounds i32, i32* %342, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = add nsw i32 %340, %345
  %347 = sext i32 %346 to i64
  %348 = sext i32 %4 to i64
  %349 = mul nsw i64 %347, %348
  %350 = add nsw i64 %349, 8192
  %351 = lshr i64 %350, 14
  br label %352

352:                                              ; preds = %321, %325
  %353 = phi i64 [ %351, %325 ], [ 0, %321 ]
  %354 = shl i64 %353, 32
  %355 = ashr exact i64 %354, 32
  %356 = add nsw i64 %355, %323
  %357 = icmp sgt i64 %356, 2147483646
  br i1 %357, label %363, label %358

358:                                              ; preds = %352
  %359 = trunc i64 %356 to i32
  %360 = icmp ugt i32 %296, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %358
  store i32 %322, i32* %11, align 4
  %362 = load i32, i32* %18, align 4
  store i32 %362, i32* %12, align 4
  br label %363

363:                                              ; preds = %361, %358, %352, %295
  %364 = phi i32 [ %296, %295 ], [ %359, %361 ], [ %296, %358 ], [ %296, %352 ]
  %365 = phi i32 [ %297, %295 ], [ %299, %361 ], [ %297, %358 ], [ %297, %352 ]
  %366 = phi i32 [ 2147483647, %295 ], [ %359, %361 ], [ %359, %358 ], [ 2147483647, %352 ]
  %367 = icmp slt i32 %42, %70
  %368 = icmp sgt i32 %42, %72
  %369 = or i1 %367, %368
  br i1 %369, label %506, label %370

370:                                              ; preds = %363
  %371 = add nsw i32 %41, -4
  %372 = icmp slt i32 %371, %74
  %373 = icmp sgt i32 %371, %76
  %374 = or i1 %372, %373
  br i1 %374, label %439, label %375

375:                                              ; preds = %370
  %376 = trunc i32 %371 to i16
  %377 = trunc i32 %42 to i16
  %378 = icmp eq i8* %13, null
  br i1 %378, label %379, label %388

379:                                              ; preds = %375
  %380 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %381 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %380, align 8
  %382 = ashr i32 %371, 3
  %383 = mul nsw i32 %382, %26
  %384 = add nsw i32 %383, %33
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, i8* %36, i64 %385
  %387 = call i32 %381(i8* %386, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %397

388:                                              ; preds = %375
  %389 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %390 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %389, align 8
  %391 = ashr i32 %371, 3
  %392 = mul nsw i32 %391, %26
  %393 = add nsw i32 %392, %33
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds i8, i8* %36, i64 %394
  %396 = call i32 %390(i8* %395, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %397

397:                                              ; preds = %388, %379
  %398 = phi i32 [ %387, %379 ], [ %396, %388 ]
  %399 = sext i32 %398 to i64
  %400 = icmp eq i32** %10, null
  br i1 %400, label %428, label %401

401:                                              ; preds = %397
  %402 = sub i16 %376, %38
  %403 = sub i16 %377, %40
  %404 = icmp eq i16 %402, 0
  %405 = icmp eq i16 %403, 0
  %406 = xor i1 %405, true
  %407 = zext i1 %406 to i64
  %408 = select i1 %405, i64 2, i64 3
  %409 = select i1 %404, i64 %407, i64 %408
  %410 = getelementptr inbounds i32, i32* %9, i64 %409
  %411 = load i32, i32* %410, align 4
  %412 = load i32*, i32** %10, align 8
  %413 = sext i16 %402 to i64
  %414 = getelementptr inbounds i32, i32* %412, i64 %413
  %415 = load i32, i32* %414, align 4
  %416 = add nsw i32 %415, %411
  %417 = getelementptr inbounds i32*, i32** %10, i64 1
  %418 = load i32*, i32** %417, align 8
  %419 = sext i16 %403 to i64
  %420 = getelementptr inbounds i32, i32* %418, i64 %419
  %421 = load i32, i32* %420, align 4
  %422 = add nsw i32 %416, %421
  %423 = sext i32 %422 to i64
  %424 = sext i32 %4 to i64
  %425 = mul nsw i64 %423, %424
  %426 = add nsw i64 %425, 8192
  %427 = lshr i64 %426, 14
  br label %428

428:                                              ; preds = %397, %401
  %429 = phi i64 [ %427, %401 ], [ 0, %397 ]
  %430 = shl i64 %429, 32
  %431 = ashr exact i64 %430, 32
  %432 = add nsw i64 %431, %399
  %433 = icmp sgt i64 %432, 2147483646
  br i1 %433, label %439, label %434

434:                                              ; preds = %428
  %435 = trunc i64 %432 to i32
  %436 = icmp ugt i32 %364, %435
  br i1 %436, label %437, label %439

437:                                              ; preds = %434
  store i32 %398, i32* %11, align 4
  %438 = load i32, i32* %18, align 4
  store i32 %438, i32* %12, align 4
  br label %439

439:                                              ; preds = %437, %434, %428, %370
  %440 = phi i32 [ %364, %428 ], [ %364, %434 ], [ %435, %437 ], [ %364, %370 ]
  %441 = phi i32 [ %41, %428 ], [ %41, %434 ], [ %371, %437 ], [ %41, %370 ]
  %442 = phi i32 [ %365, %428 ], [ %365, %434 ], [ %42, %437 ], [ %365, %370 ]
  %443 = phi i32 [ 2147483647, %428 ], [ %435, %434 ], [ %435, %437 ], [ 2147483647, %370 ]
  %444 = or i32 %41, 4
  %445 = icmp slt i32 %444, %74
  %446 = icmp sgt i32 %444, %76
  %447 = or i1 %445, %446
  br i1 %447, label %506, label %448

448:                                              ; preds = %439
  %449 = trunc i32 %444 to i16
  %450 = trunc i32 %42 to i16
  %451 = icmp eq i8* %13, null
  br i1 %451, label %452, label %458

452:                                              ; preds = %448
  %453 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %454 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %453, align 8
  %455 = sext i32 %34 to i64
  %456 = getelementptr inbounds i8, i8* %36, i64 %455
  %457 = call i32 %454(i8* %456, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %464

458:                                              ; preds = %448
  %459 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %460 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %459, align 8
  %461 = sext i32 %34 to i64
  %462 = getelementptr inbounds i8, i8* %36, i64 %461
  %463 = call i32 %460(i8* %462, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %464

464:                                              ; preds = %458, %452
  %465 = phi i32 [ %457, %452 ], [ %463, %458 ]
  %466 = sext i32 %465 to i64
  %467 = icmp eq i32** %10, null
  br i1 %467, label %495, label %468

468:                                              ; preds = %464
  %469 = sub i16 %449, %38
  %470 = sub i16 %450, %40
  %471 = icmp eq i16 %469, 0
  %472 = icmp eq i16 %470, 0
  %473 = xor i1 %472, true
  %474 = zext i1 %473 to i64
  %475 = select i1 %472, i64 2, i64 3
  %476 = select i1 %471, i64 %474, i64 %475
  %477 = getelementptr inbounds i32, i32* %9, i64 %476
  %478 = load i32, i32* %477, align 4
  %479 = load i32*, i32** %10, align 8
  %480 = sext i16 %469 to i64
  %481 = getelementptr inbounds i32, i32* %479, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = add nsw i32 %482, %478
  %484 = getelementptr inbounds i32*, i32** %10, i64 1
  %485 = load i32*, i32** %484, align 8
  %486 = sext i16 %470 to i64
  %487 = getelementptr inbounds i32, i32* %485, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = add nsw i32 %483, %488
  %490 = sext i32 %489 to i64
  %491 = sext i32 %4 to i64
  %492 = mul nsw i64 %490, %491
  %493 = add nsw i64 %492, 8192
  %494 = lshr i64 %493, 14
  br label %495

495:                                              ; preds = %464, %468
  %496 = phi i64 [ %494, %468 ], [ 0, %464 ]
  %497 = shl i64 %496, 32
  %498 = ashr exact i64 %497, 32
  %499 = add nsw i64 %498, %466
  %500 = icmp sgt i64 %499, 2147483646
  br i1 %500, label %506, label %501

501:                                              ; preds = %495
  %502 = trunc i64 %499 to i32
  %503 = icmp ugt i32 %440, %502
  br i1 %503, label %504, label %506

504:                                              ; preds = %501
  store i32 %465, i32* %11, align 4
  %505 = load i32, i32* %18, align 4
  store i32 %505, i32* %12, align 4
  br label %506

506:                                              ; preds = %504, %501, %495, %363, %439
  %507 = phi i32 [ %443, %439 ], [ 2147483647, %363 ], [ %443, %495 ], [ %443, %501 ], [ %443, %504 ]
  %508 = phi i32 [ %440, %439 ], [ %364, %363 ], [ %440, %495 ], [ %440, %501 ], [ %502, %504 ]
  %509 = phi i32 [ %441, %439 ], [ %41, %363 ], [ %441, %495 ], [ %441, %501 ], [ %444, %504 ]
  %510 = phi i32 [ %442, %439 ], [ %365, %363 ], [ %442, %495 ], [ %442, %501 ], [ %42, %504 ]
  %511 = phi i32 [ 2147483647, %439 ], [ 2147483647, %363 ], [ 2147483647, %495 ], [ %502, %501 ], [ %502, %504 ]
  %512 = icmp uge i32 %298, %366
  %513 = zext i1 %512 to i32
  %514 = icmp ult i32 %507, %511
  %515 = select i1 %514, i32 0, i32 2
  %516 = or i32 %515, %513
  switch i32 %516, label %791 [
    i32 0, label %517
    i32 1, label %589
    i32 2, label %659
    i32 3, label %727
  ]

517:                                              ; preds = %506
  br i1 %228, label %792, label %518

518:                                              ; preds = %517
  %519 = add nsw i32 %41, -4
  %520 = icmp slt i32 %519, %74
  %521 = icmp sgt i32 %519, %76
  %522 = or i1 %520, %521
  br i1 %522, label %792, label %523

523:                                              ; preds = %518
  %524 = trunc i32 %519 to i16
  %525 = trunc i32 %225 to i16
  %526 = icmp eq i8* %13, null
  br i1 %526, label %527, label %537

527:                                              ; preds = %523
  %528 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %529 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %528, align 8
  %530 = ashr i32 %519, 3
  %531 = mul nsw i32 %530, %26
  %532 = ashr i32 %225, 3
  %533 = add nsw i32 %531, %532
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds i8, i8* %36, i64 %534
  %536 = call i32 %529(i8* %535, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %547

537:                                              ; preds = %523
  %538 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %539 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %538, align 8
  %540 = ashr i32 %519, 3
  %541 = mul nsw i32 %540, %26
  %542 = ashr i32 %225, 3
  %543 = add nsw i32 %541, %542
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds i8, i8* %36, i64 %544
  %546 = call i32 %539(i8* %545, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %547

547:                                              ; preds = %537, %527
  %548 = phi i32 [ %536, %527 ], [ %546, %537 ]
  %549 = sext i32 %548 to i64
  %550 = icmp eq i32** %10, null
  br i1 %550, label %578, label %551

551:                                              ; preds = %547
  %552 = sub i16 %524, %38
  %553 = sub i16 %525, %40
  %554 = icmp eq i16 %552, 0
  %555 = icmp eq i16 %553, 0
  %556 = xor i1 %555, true
  %557 = zext i1 %556 to i64
  %558 = select i1 %555, i64 2, i64 3
  %559 = select i1 %554, i64 %557, i64 %558
  %560 = getelementptr inbounds i32, i32* %9, i64 %559
  %561 = load i32, i32* %560, align 4
  %562 = load i32*, i32** %10, align 8
  %563 = sext i16 %552 to i64
  %564 = getelementptr inbounds i32, i32* %562, i64 %563
  %565 = load i32, i32* %564, align 4
  %566 = add nsw i32 %565, %561
  %567 = getelementptr inbounds i32*, i32** %10, i64 1
  %568 = load i32*, i32** %567, align 8
  %569 = sext i16 %553 to i64
  %570 = getelementptr inbounds i32, i32* %568, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = add nsw i32 %566, %571
  %573 = sext i32 %572 to i64
  %574 = sext i32 %4 to i64
  %575 = mul nsw i64 %573, %574
  %576 = add nsw i64 %575, 8192
  %577 = lshr i64 %576, 14
  br label %578

578:                                              ; preds = %547, %551
  %579 = phi i64 [ %577, %551 ], [ 0, %547 ]
  %580 = shl i64 %579, 32
  %581 = ashr exact i64 %580, 32
  %582 = add nsw i64 %581, %549
  %583 = icmp sgt i64 %582, 2147483646
  br i1 %583, label %792, label %584

584:                                              ; preds = %578
  %585 = trunc i64 %582 to i32
  %586 = icmp ugt i32 %508, %585
  br i1 %586, label %587, label %792

587:                                              ; preds = %584
  store i32 %548, i32* %11, align 4
  %588 = load i32, i32* %18, align 4
  store i32 %588, i32* %12, align 4
  br label %792

589:                                              ; preds = %506
  br i1 %302, label %792, label %590

590:                                              ; preds = %589
  %591 = add nsw i32 %41, -4
  %592 = icmp slt i32 %591, %74
  %593 = icmp sgt i32 %591, %76
  %594 = or i1 %592, %593
  br i1 %594, label %792, label %595

595:                                              ; preds = %590
  %596 = trunc i32 %591 to i16
  %597 = trunc i32 %299 to i16
  %598 = icmp eq i8* %13, null
  br i1 %598, label %599, label %608

599:                                              ; preds = %595
  %600 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %601 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %600, align 8
  %602 = ashr i32 %591, 3
  %603 = mul nsw i32 %602, %26
  %604 = add nsw i32 %603, %33
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds i8, i8* %36, i64 %605
  %607 = call i32 %601(i8* %606, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %617

608:                                              ; preds = %595
  %609 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %610 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %609, align 8
  %611 = ashr i32 %591, 3
  %612 = mul nsw i32 %611, %26
  %613 = add nsw i32 %612, %33
  %614 = sext i32 %613 to i64
  %615 = getelementptr inbounds i8, i8* %36, i64 %614
  %616 = call i32 %610(i8* %615, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %617

617:                                              ; preds = %608, %599
  %618 = phi i32 [ %607, %599 ], [ %616, %608 ]
  %619 = sext i32 %618 to i64
  %620 = icmp eq i32** %10, null
  br i1 %620, label %648, label %621

621:                                              ; preds = %617
  %622 = sub i16 %596, %38
  %623 = sub i16 %597, %40
  %624 = icmp eq i16 %622, 0
  %625 = icmp eq i16 %623, 0
  %626 = xor i1 %625, true
  %627 = zext i1 %626 to i64
  %628 = select i1 %625, i64 2, i64 3
  %629 = select i1 %624, i64 %627, i64 %628
  %630 = getelementptr inbounds i32, i32* %9, i64 %629
  %631 = load i32, i32* %630, align 4
  %632 = load i32*, i32** %10, align 8
  %633 = sext i16 %622 to i64
  %634 = getelementptr inbounds i32, i32* %632, i64 %633
  %635 = load i32, i32* %634, align 4
  %636 = add nsw i32 %635, %631
  %637 = getelementptr inbounds i32*, i32** %10, i64 1
  %638 = load i32*, i32** %637, align 8
  %639 = sext i16 %623 to i64
  %640 = getelementptr inbounds i32, i32* %638, i64 %639
  %641 = load i32, i32* %640, align 4
  %642 = add nsw i32 %636, %641
  %643 = sext i32 %642 to i64
  %644 = sext i32 %4 to i64
  %645 = mul nsw i64 %643, %644
  %646 = add nsw i64 %645, 8192
  %647 = lshr i64 %646, 14
  br label %648

648:                                              ; preds = %617, %621
  %649 = phi i64 [ %647, %621 ], [ 0, %617 ]
  %650 = shl i64 %649, 32
  %651 = ashr exact i64 %650, 32
  %652 = add nsw i64 %651, %619
  %653 = icmp sgt i64 %652, 2147483646
  br i1 %653, label %792, label %654

654:                                              ; preds = %648
  %655 = trunc i64 %652 to i32
  %656 = icmp ugt i32 %508, %655
  br i1 %656, label %657, label %792

657:                                              ; preds = %654
  store i32 %618, i32* %11, align 4
  %658 = load i32, i32* %18, align 4
  store i32 %658, i32* %12, align 4
  br label %792

659:                                              ; preds = %506
  br i1 %228, label %792, label %660

660:                                              ; preds = %659
  %661 = or i32 %41, 4
  %662 = icmp slt i32 %661, %74
  %663 = icmp sgt i32 %661, %76
  %664 = or i1 %662, %663
  br i1 %664, label %792, label %665

665:                                              ; preds = %660
  %666 = trunc i32 %661 to i16
  %667 = trunc i32 %225 to i16
  %668 = icmp eq i8* %13, null
  br i1 %668, label %669, label %677

669:                                              ; preds = %665
  %670 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %671 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %670, align 8
  %672 = ashr i32 %225, 3
  %673 = add nsw i32 %672, %30
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds i8, i8* %36, i64 %674
  %676 = call i32 %671(i8* %675, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %685

677:                                              ; preds = %665
  %678 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %679 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %678, align 8
  %680 = ashr i32 %225, 3
  %681 = add nsw i32 %680, %30
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds i8, i8* %36, i64 %682
  %684 = call i32 %679(i8* %683, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %685

685:                                              ; preds = %677, %669
  %686 = phi i32 [ %676, %669 ], [ %684, %677 ]
  %687 = sext i32 %686 to i64
  %688 = icmp eq i32** %10, null
  br i1 %688, label %716, label %689

689:                                              ; preds = %685
  %690 = sub i16 %666, %38
  %691 = sub i16 %667, %40
  %692 = icmp eq i16 %690, 0
  %693 = icmp eq i16 %691, 0
  %694 = xor i1 %693, true
  %695 = zext i1 %694 to i64
  %696 = select i1 %693, i64 2, i64 3
  %697 = select i1 %692, i64 %695, i64 %696
  %698 = getelementptr inbounds i32, i32* %9, i64 %697
  %699 = load i32, i32* %698, align 4
  %700 = load i32*, i32** %10, align 8
  %701 = sext i16 %690 to i64
  %702 = getelementptr inbounds i32, i32* %700, i64 %701
  %703 = load i32, i32* %702, align 4
  %704 = add nsw i32 %703, %699
  %705 = getelementptr inbounds i32*, i32** %10, i64 1
  %706 = load i32*, i32** %705, align 8
  %707 = sext i16 %691 to i64
  %708 = getelementptr inbounds i32, i32* %706, i64 %707
  %709 = load i32, i32* %708, align 4
  %710 = add nsw i32 %704, %709
  %711 = sext i32 %710 to i64
  %712 = sext i32 %4 to i64
  %713 = mul nsw i64 %711, %712
  %714 = add nsw i64 %713, 8192
  %715 = lshr i64 %714, 14
  br label %716

716:                                              ; preds = %685, %689
  %717 = phi i64 [ %715, %689 ], [ 0, %685 ]
  %718 = shl i64 %717, 32
  %719 = ashr exact i64 %718, 32
  %720 = add nsw i64 %719, %687
  %721 = icmp sgt i64 %720, 2147483646
  br i1 %721, label %792, label %722

722:                                              ; preds = %716
  %723 = trunc i64 %720 to i32
  %724 = icmp ugt i32 %508, %723
  br i1 %724, label %725, label %792

725:                                              ; preds = %722
  store i32 %686, i32* %11, align 4
  %726 = load i32, i32* %18, align 4
  store i32 %726, i32* %12, align 4
  br label %792

727:                                              ; preds = %506
  br i1 %302, label %792, label %728

728:                                              ; preds = %727
  %729 = or i32 %41, 4
  %730 = icmp slt i32 %729, %74
  %731 = icmp sgt i32 %729, %76
  %732 = or i1 %730, %731
  br i1 %732, label %792, label %733

733:                                              ; preds = %728
  %734 = trunc i32 %729 to i16
  %735 = trunc i32 %299 to i16
  %736 = icmp eq i8* %13, null
  br i1 %736, label %737, label %743

737:                                              ; preds = %733
  %738 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %739 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %738, align 8
  %740 = sext i32 %34 to i64
  %741 = getelementptr inbounds i8, i8* %36, i64 %740
  %742 = call i32 %739(i8* %741, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %749

743:                                              ; preds = %733
  %744 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %745 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %744, align 8
  %746 = sext i32 %34 to i64
  %747 = getelementptr inbounds i8, i8* %36, i64 %746
  %748 = call i32 %745(i8* %747, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %749

749:                                              ; preds = %743, %737
  %750 = phi i32 [ %742, %737 ], [ %748, %743 ]
  %751 = sext i32 %750 to i64
  %752 = icmp eq i32** %10, null
  br i1 %752, label %780, label %753

753:                                              ; preds = %749
  %754 = sub i16 %734, %38
  %755 = sub i16 %735, %40
  %756 = icmp eq i16 %754, 0
  %757 = icmp eq i16 %755, 0
  %758 = xor i1 %757, true
  %759 = zext i1 %758 to i64
  %760 = select i1 %757, i64 2, i64 3
  %761 = select i1 %756, i64 %759, i64 %760
  %762 = getelementptr inbounds i32, i32* %9, i64 %761
  %763 = load i32, i32* %762, align 4
  %764 = load i32*, i32** %10, align 8
  %765 = sext i16 %754 to i64
  %766 = getelementptr inbounds i32, i32* %764, i64 %765
  %767 = load i32, i32* %766, align 4
  %768 = add nsw i32 %767, %763
  %769 = getelementptr inbounds i32*, i32** %10, i64 1
  %770 = load i32*, i32** %769, align 8
  %771 = sext i16 %755 to i64
  %772 = getelementptr inbounds i32, i32* %770, i64 %771
  %773 = load i32, i32* %772, align 4
  %774 = add nsw i32 %768, %773
  %775 = sext i32 %774 to i64
  %776 = sext i32 %4 to i64
  %777 = mul nsw i64 %775, %776
  %778 = add nsw i64 %777, 8192
  %779 = lshr i64 %778, 14
  br label %780

780:                                              ; preds = %749, %753
  %781 = phi i64 [ %779, %753 ], [ 0, %749 ]
  %782 = shl i64 %781, 32
  %783 = ashr exact i64 %782, 32
  %784 = add nsw i64 %783, %751
  %785 = icmp sgt i64 %784, 2147483646
  br i1 %785, label %792, label %786

786:                                              ; preds = %780
  %787 = trunc i64 %784 to i32
  %788 = icmp ugt i32 %508, %787
  br i1 %788, label %789, label %792

789:                                              ; preds = %786
  store i32 %750, i32* %11, align 4
  %790 = load i32, i32* %18, align 4
  store i32 %790, i32* %12, align 4
  br label %792

791:                                              ; preds = %506
  unreachable

792:                                              ; preds = %789, %786, %780, %725, %722, %716, %657, %654, %648, %587, %584, %578, %728, %727, %660, %659, %590, %589, %518, %517
  %793 = phi i32 [ %508, %517 ], [ %508, %518 ], [ %508, %589 ], [ %508, %590 ], [ %508, %659 ], [ %508, %660 ], [ %508, %727 ], [ %508, %728 ], [ %585, %587 ], [ %508, %584 ], [ %508, %578 ], [ %655, %657 ], [ %508, %654 ], [ %508, %648 ], [ %723, %725 ], [ %508, %722 ], [ %508, %716 ], [ %787, %789 ], [ %508, %786 ], [ %508, %780 ]
  %794 = phi i32 [ %509, %517 ], [ %509, %518 ], [ %509, %589 ], [ %509, %590 ], [ %509, %659 ], [ %509, %660 ], [ %509, %727 ], [ %509, %728 ], [ %519, %587 ], [ %509, %584 ], [ %509, %578 ], [ %591, %657 ], [ %509, %654 ], [ %509, %648 ], [ %661, %725 ], [ %509, %722 ], [ %509, %716 ], [ %729, %789 ], [ %509, %786 ], [ %509, %780 ]
  %795 = phi i32 [ %510, %517 ], [ %510, %518 ], [ %510, %589 ], [ %510, %590 ], [ %510, %659 ], [ %510, %660 ], [ %510, %727 ], [ %510, %728 ], [ %225, %587 ], [ %510, %584 ], [ %510, %578 ], [ %299, %657 ], [ %510, %654 ], [ %510, %648 ], [ %225, %725 ], [ %510, %722 ], [ %510, %716 ], [ %299, %789 ], [ %510, %786 ], [ %510, %780 ]
  %796 = icmp ugt i32 %7, 1
  br i1 %796, label %797, label %1575

797:                                              ; preds = %792
  %798 = icmp ne i32 %794, %41
  %799 = xor i1 %798, true
  %800 = icmp eq i32 %795, %42
  %801 = or i1 %800, %799
  br i1 %801, label %966, label %802

802:                                              ; preds = %797
  %803 = sub nsw i32 %794, %41
  %804 = sub nsw i32 %795, %42
  %805 = shl nsw i32 %804, 1
  %806 = add nsw i32 %805, %42
  %807 = icmp slt i32 %806, %70
  %808 = icmp sgt i32 %806, %72
  %809 = or i1 %807, %808
  %810 = icmp slt i32 %794, %74
  %811 = or i1 %810, %809
  %812 = icmp sgt i32 %794, %76
  %813 = or i1 %812, %811
  br i1 %813, label %884, label %814

814:                                              ; preds = %802
  %815 = trunc i32 %794 to i16
  %816 = trunc i32 %806 to i16
  %817 = icmp eq i8* %13, null
  br i1 %817, label %818, label %830

818:                                              ; preds = %814
  %819 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %820 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %819, align 8
  %821 = ashr i32 %794, 3
  %822 = mul nsw i32 %821, %26
  %823 = ashr i32 %806, 3
  %824 = add nsw i32 %823, %822
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds i8, i8* %36, i64 %825
  %827 = and i32 %806, 6
  %828 = and i32 %794, 7
  %829 = call i32 %820(i8* %826, i32 %26, i32 %827, i32 %828, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %842

830:                                              ; preds = %814
  %831 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %832 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %831, align 8
  %833 = ashr i32 %794, 3
  %834 = mul nsw i32 %833, %26
  %835 = ashr i32 %806, 3
  %836 = add nsw i32 %835, %834
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds i8, i8* %36, i64 %837
  %839 = and i32 %806, 6
  %840 = and i32 %794, 7
  %841 = call i32 %832(i8* %838, i32 %26, i32 %839, i32 %840, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %842

842:                                              ; preds = %830, %818
  %843 = phi i32 [ %829, %818 ], [ %841, %830 ]
  %844 = sext i32 %843 to i64
  %845 = icmp eq i32** %10, null
  br i1 %845, label %873, label %846

846:                                              ; preds = %842
  %847 = sub i16 %815, %38
  %848 = sub i16 %816, %40
  %849 = icmp eq i16 %847, 0
  %850 = icmp eq i16 %848, 0
  %851 = xor i1 %850, true
  %852 = zext i1 %851 to i64
  %853 = select i1 %850, i64 2, i64 3
  %854 = select i1 %849, i64 %852, i64 %853
  %855 = getelementptr inbounds i32, i32* %9, i64 %854
  %856 = load i32, i32* %855, align 4
  %857 = load i32*, i32** %10, align 8
  %858 = sext i16 %847 to i64
  %859 = getelementptr inbounds i32, i32* %857, i64 %858
  %860 = load i32, i32* %859, align 4
  %861 = add nsw i32 %860, %856
  %862 = getelementptr inbounds i32*, i32** %10, i64 1
  %863 = load i32*, i32** %862, align 8
  %864 = sext i16 %848 to i64
  %865 = getelementptr inbounds i32, i32* %863, i64 %864
  %866 = load i32, i32* %865, align 4
  %867 = add nsw i32 %861, %866
  %868 = sext i32 %867 to i64
  %869 = sext i32 %4 to i64
  %870 = mul nsw i64 %868, %869
  %871 = add nsw i64 %870, 8192
  %872 = lshr i64 %871, 14
  br label %873

873:                                              ; preds = %842, %846
  %874 = phi i64 [ %872, %846 ], [ 0, %842 ]
  %875 = shl i64 %874, 32
  %876 = ashr exact i64 %875, 32
  %877 = add nsw i64 %876, %844
  %878 = icmp sgt i64 %877, 2147483646
  br i1 %878, label %884, label %879

879:                                              ; preds = %873
  %880 = trunc i64 %877 to i32
  %881 = icmp ugt i32 %793, %880
  br i1 %881, label %882, label %884

882:                                              ; preds = %879
  store i32 %843, i32* %11, align 4
  %883 = load i32, i32* %18, align 4
  store i32 %883, i32* %12, align 4
  br label %884

884:                                              ; preds = %882, %879, %873, %802
  %885 = phi i32 [ %793, %802 ], [ %880, %882 ], [ %793, %879 ], [ %793, %873 ]
  %886 = phi i32 [ %795, %802 ], [ %806, %882 ], [ %795, %879 ], [ %795, %873 ]
  %887 = icmp slt i32 %795, %70
  %888 = icmp sgt i32 %795, %72
  %889 = or i1 %887, %888
  br i1 %889, label %1575, label %890

890:                                              ; preds = %884
  %891 = shl nsw i32 %803, 1
  %892 = add nsw i32 %891, %41
  %893 = icmp slt i32 %892, %74
  %894 = icmp sgt i32 %892, %76
  %895 = or i1 %893, %894
  br i1 %895, label %1575, label %896

896:                                              ; preds = %890
  %897 = trunc i32 %892 to i16
  %898 = trunc i32 %795 to i16
  %899 = icmp eq i8* %13, null
  br i1 %899, label %900, label %912

900:                                              ; preds = %896
  %901 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %902 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %901, align 8
  %903 = ashr i32 %892, 3
  %904 = mul nsw i32 %903, %26
  %905 = ashr i32 %795, 3
  %906 = add nsw i32 %904, %905
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds i8, i8* %36, i64 %907
  %909 = and i32 %795, 7
  %910 = and i32 %892, 6
  %911 = call i32 %902(i8* %908, i32 %26, i32 %909, i32 %910, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %924

912:                                              ; preds = %896
  %913 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %914 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %913, align 8
  %915 = ashr i32 %892, 3
  %916 = mul nsw i32 %915, %26
  %917 = ashr i32 %795, 3
  %918 = add nsw i32 %916, %917
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds i8, i8* %36, i64 %919
  %921 = and i32 %795, 7
  %922 = and i32 %892, 6
  %923 = call i32 %914(i8* %920, i32 %26, i32 %921, i32 %922, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %924

924:                                              ; preds = %912, %900
  %925 = phi i32 [ %911, %900 ], [ %923, %912 ]
  %926 = sext i32 %925 to i64
  %927 = icmp eq i32** %10, null
  br i1 %927, label %955, label %928

928:                                              ; preds = %924
  %929 = sub i16 %897, %38
  %930 = sub i16 %898, %40
  %931 = icmp eq i16 %929, 0
  %932 = icmp eq i16 %930, 0
  %933 = xor i1 %932, true
  %934 = zext i1 %933 to i64
  %935 = select i1 %932, i64 2, i64 3
  %936 = select i1 %931, i64 %934, i64 %935
  %937 = getelementptr inbounds i32, i32* %9, i64 %936
  %938 = load i32, i32* %937, align 4
  %939 = load i32*, i32** %10, align 8
  %940 = sext i16 %929 to i64
  %941 = getelementptr inbounds i32, i32* %939, i64 %940
  %942 = load i32, i32* %941, align 4
  %943 = add nsw i32 %942, %938
  %944 = getelementptr inbounds i32*, i32** %10, i64 1
  %945 = load i32*, i32** %944, align 8
  %946 = sext i16 %930 to i64
  %947 = getelementptr inbounds i32, i32* %945, i64 %946
  %948 = load i32, i32* %947, align 4
  %949 = add nsw i32 %943, %948
  %950 = sext i32 %949 to i64
  %951 = sext i32 %4 to i64
  %952 = mul nsw i64 %950, %951
  %953 = add nsw i64 %952, 8192
  %954 = lshr i64 %953, 14
  br label %955

955:                                              ; preds = %924, %928
  %956 = phi i64 [ %954, %928 ], [ 0, %924 ]
  %957 = shl i64 %956, 32
  %958 = ashr exact i64 %957, 32
  %959 = add nsw i64 %958, %926
  %960 = icmp sgt i64 %959, 2147483646
  br i1 %960, label %1575, label %961

961:                                              ; preds = %955
  %962 = trunc i64 %959 to i32
  %963 = icmp ugt i32 %885, %962
  br i1 %963, label %964, label %1575

964:                                              ; preds = %961
  store i32 %925, i32* %11, align 4
  %965 = load i32, i32* %18, align 4
  store i32 %965, i32* %12, align 4
  br label %1575

966:                                              ; preds = %797
  %967 = or i1 %798, %800
  br i1 %967, label %1272, label %968

968:                                              ; preds = %966
  %969 = sub nsw i32 %795, %42
  %970 = shl nsw i32 %969, 1
  %971 = add nsw i32 %970, %42
  %972 = icmp slt i32 %971, %70
  %973 = icmp sgt i32 %971, %72
  %974 = or i1 %972, %973
  br i1 %974, label %1120, label %975

975:                                              ; preds = %968
  %976 = or i32 %41, 4
  %977 = icmp slt i32 %976, %74
  %978 = icmp sgt i32 %976, %76
  %979 = or i1 %977, %978
  br i1 %979, label %1044, label %980

980:                                              ; preds = %975
  %981 = trunc i32 %976 to i16
  %982 = trunc i32 %971 to i16
  %983 = icmp eq i8* %13, null
  br i1 %983, label %984, label %993

984:                                              ; preds = %980
  %985 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %986 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %985, align 8
  %987 = ashr i32 %971, 3
  %988 = add nsw i32 %987, %30
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i8, i8* %36, i64 %989
  %991 = and i32 %971, 6
  %992 = call i32 %986(i8* %990, i32 %26, i32 %991, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1002

993:                                              ; preds = %980
  %994 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %995 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %994, align 8
  %996 = ashr i32 %971, 3
  %997 = add nsw i32 %996, %30
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds i8, i8* %36, i64 %998
  %1000 = and i32 %971, 6
  %1001 = call i32 %995(i8* %999, i32 %26, i32 %1000, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1002

1002:                                             ; preds = %993, %984
  %1003 = phi i32 [ %992, %984 ], [ %1001, %993 ]
  %1004 = sext i32 %1003 to i64
  %1005 = icmp eq i32** %10, null
  br i1 %1005, label %1033, label %1006

1006:                                             ; preds = %1002
  %1007 = sub i16 %981, %38
  %1008 = sub i16 %982, %40
  %1009 = icmp eq i16 %1007, 0
  %1010 = icmp eq i16 %1008, 0
  %1011 = xor i1 %1010, true
  %1012 = zext i1 %1011 to i64
  %1013 = select i1 %1010, i64 2, i64 3
  %1014 = select i1 %1009, i64 %1012, i64 %1013
  %1015 = getelementptr inbounds i32, i32* %9, i64 %1014
  %1016 = load i32, i32* %1015, align 4
  %1017 = load i32*, i32** %10, align 8
  %1018 = sext i16 %1007 to i64
  %1019 = getelementptr inbounds i32, i32* %1017, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = add nsw i32 %1020, %1016
  %1022 = getelementptr inbounds i32*, i32** %10, i64 1
  %1023 = load i32*, i32** %1022, align 8
  %1024 = sext i16 %1008 to i64
  %1025 = getelementptr inbounds i32, i32* %1023, i64 %1024
  %1026 = load i32, i32* %1025, align 4
  %1027 = add nsw i32 %1021, %1026
  %1028 = sext i32 %1027 to i64
  %1029 = sext i32 %4 to i64
  %1030 = mul nsw i64 %1028, %1029
  %1031 = add nsw i64 %1030, 8192
  %1032 = lshr i64 %1031, 14
  br label %1033

1033:                                             ; preds = %1002, %1006
  %1034 = phi i64 [ %1032, %1006 ], [ 0, %1002 ]
  %1035 = shl i64 %1034, 32
  %1036 = ashr exact i64 %1035, 32
  %1037 = add nsw i64 %1036, %1004
  %1038 = icmp sgt i64 %1037, 2147483646
  br i1 %1038, label %1044, label %1039

1039:                                             ; preds = %1033
  %1040 = trunc i64 %1037 to i32
  %1041 = icmp ugt i32 %793, %1040
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1039
  store i32 %1003, i32* %11, align 4
  %1043 = load i32, i32* %18, align 4
  store i32 %1043, i32* %12, align 4
  br label %1044

1044:                                             ; preds = %1042, %1039, %1033, %975
  %1045 = phi i32 [ %793, %1033 ], [ %793, %1039 ], [ %1040, %1042 ], [ %793, %975 ]
  %1046 = phi i32 [ %41, %1033 ], [ %41, %1039 ], [ %976, %1042 ], [ %41, %975 ]
  %1047 = phi i32 [ %795, %1033 ], [ %795, %1039 ], [ %971, %1042 ], [ %795, %975 ]
  %1048 = add nsw i32 %41, -4
  %1049 = icmp slt i32 %1048, %74
  %1050 = icmp sgt i32 %1048, %76
  %1051 = or i1 %1049, %1050
  br i1 %1051, label %1120, label %1052

1052:                                             ; preds = %1044
  %1053 = trunc i32 %1048 to i16
  %1054 = trunc i32 %971 to i16
  %1055 = icmp eq i8* %13, null
  br i1 %1055, label %1056, label %1067

1056:                                             ; preds = %1052
  %1057 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1058 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1057, align 8
  %1059 = ashr i32 %1048, 3
  %1060 = mul nsw i32 %1059, %26
  %1061 = ashr i32 %971, 3
  %1062 = add nsw i32 %1061, %1060
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds i8, i8* %36, i64 %1063
  %1065 = and i32 %971, 6
  %1066 = call i32 %1058(i8* %1064, i32 %26, i32 %1065, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1078

1067:                                             ; preds = %1052
  %1068 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1069 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1068, align 8
  %1070 = ashr i32 %1048, 3
  %1071 = mul nsw i32 %1070, %26
  %1072 = ashr i32 %971, 3
  %1073 = add nsw i32 %1072, %1071
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds i8, i8* %36, i64 %1074
  %1076 = and i32 %971, 6
  %1077 = call i32 %1069(i8* %1075, i32 %26, i32 %1076, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1078

1078:                                             ; preds = %1067, %1056
  %1079 = phi i32 [ %1066, %1056 ], [ %1077, %1067 ]
  %1080 = sext i32 %1079 to i64
  %1081 = icmp eq i32** %10, null
  br i1 %1081, label %1109, label %1082

1082:                                             ; preds = %1078
  %1083 = sub i16 %1053, %38
  %1084 = sub i16 %1054, %40
  %1085 = icmp eq i16 %1083, 0
  %1086 = icmp eq i16 %1084, 0
  %1087 = xor i1 %1086, true
  %1088 = zext i1 %1087 to i64
  %1089 = select i1 %1086, i64 2, i64 3
  %1090 = select i1 %1085, i64 %1088, i64 %1089
  %1091 = getelementptr inbounds i32, i32* %9, i64 %1090
  %1092 = load i32, i32* %1091, align 4
  %1093 = load i32*, i32** %10, align 8
  %1094 = sext i16 %1083 to i64
  %1095 = getelementptr inbounds i32, i32* %1093, i64 %1094
  %1096 = load i32, i32* %1095, align 4
  %1097 = add nsw i32 %1096, %1092
  %1098 = getelementptr inbounds i32*, i32** %10, i64 1
  %1099 = load i32*, i32** %1098, align 8
  %1100 = sext i16 %1084 to i64
  %1101 = getelementptr inbounds i32, i32* %1099, i64 %1100
  %1102 = load i32, i32* %1101, align 4
  %1103 = add nsw i32 %1097, %1102
  %1104 = sext i32 %1103 to i64
  %1105 = sext i32 %4 to i64
  %1106 = mul nsw i64 %1104, %1105
  %1107 = add nsw i64 %1106, 8192
  %1108 = lshr i64 %1107, 14
  br label %1109

1109:                                             ; preds = %1078, %1082
  %1110 = phi i64 [ %1108, %1082 ], [ 0, %1078 ]
  %1111 = shl i64 %1110, 32
  %1112 = ashr exact i64 %1111, 32
  %1113 = add nsw i64 %1112, %1080
  %1114 = icmp sgt i64 %1113, 2147483646
  br i1 %1114, label %1120, label %1115

1115:                                             ; preds = %1109
  %1116 = trunc i64 %1113 to i32
  %1117 = icmp ugt i32 %1045, %1116
  br i1 %1117, label %1118, label %1120

1118:                                             ; preds = %1115
  store i32 %1079, i32* %11, align 4
  %1119 = load i32, i32* %18, align 4
  store i32 %1119, i32* %12, align 4
  br label %1120

1120:                                             ; preds = %1118, %1115, %1109, %968, %1044
  %1121 = phi i32 [ %1045, %1044 ], [ %793, %968 ], [ %1116, %1118 ], [ %1045, %1115 ], [ %1045, %1109 ]
  %1122 = phi i32 [ %1046, %1044 ], [ %41, %968 ], [ %1048, %1118 ], [ %1046, %1115 ], [ %1046, %1109 ]
  %1123 = phi i32 [ %1047, %1044 ], [ %795, %968 ], [ %971, %1118 ], [ %1047, %1115 ], [ %1047, %1109 ]
  %1124 = icmp ult i32 %516, 2
  %1125 = icmp slt i32 %795, %70
  %1126 = icmp sgt i32 %795, %72
  %1127 = or i1 %1125, %1126
  br i1 %1124, label %1128, label %1198

1128:                                             ; preds = %1120
  br i1 %1127, label %1575, label %1129

1129:                                             ; preds = %1128
  %1130 = or i32 %41, 4
  %1131 = icmp slt i32 %1130, %74
  %1132 = icmp sgt i32 %1130, %76
  %1133 = or i1 %1131, %1132
  br i1 %1133, label %1575, label %1134

1134:                                             ; preds = %1129
  %1135 = trunc i32 %1130 to i16
  %1136 = trunc i32 %795 to i16
  %1137 = icmp eq i8* %13, null
  br i1 %1137, label %1138, label %1147

1138:                                             ; preds = %1134
  %1139 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1140 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1139, align 8
  %1141 = ashr i32 %795, 3
  %1142 = add nsw i32 %1141, %30
  %1143 = sext i32 %1142 to i64
  %1144 = getelementptr inbounds i8, i8* %36, i64 %1143
  %1145 = and i32 %795, 7
  %1146 = call i32 %1140(i8* %1144, i32 %26, i32 %1145, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1156

1147:                                             ; preds = %1134
  %1148 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1149 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1148, align 8
  %1150 = ashr i32 %795, 3
  %1151 = add nsw i32 %1150, %30
  %1152 = sext i32 %1151 to i64
  %1153 = getelementptr inbounds i8, i8* %36, i64 %1152
  %1154 = and i32 %795, 7
  %1155 = call i32 %1149(i8* %1153, i32 %26, i32 %1154, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1156

1156:                                             ; preds = %1147, %1138
  %1157 = phi i32 [ %1146, %1138 ], [ %1155, %1147 ]
  %1158 = sext i32 %1157 to i64
  %1159 = icmp eq i32** %10, null
  br i1 %1159, label %1187, label %1160

1160:                                             ; preds = %1156
  %1161 = sub i16 %1135, %38
  %1162 = sub i16 %1136, %40
  %1163 = icmp eq i16 %1161, 0
  %1164 = icmp eq i16 %1162, 0
  %1165 = xor i1 %1164, true
  %1166 = zext i1 %1165 to i64
  %1167 = select i1 %1164, i64 2, i64 3
  %1168 = select i1 %1163, i64 %1166, i64 %1167
  %1169 = getelementptr inbounds i32, i32* %9, i64 %1168
  %1170 = load i32, i32* %1169, align 4
  %1171 = load i32*, i32** %10, align 8
  %1172 = sext i16 %1161 to i64
  %1173 = getelementptr inbounds i32, i32* %1171, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = add nsw i32 %1174, %1170
  %1176 = getelementptr inbounds i32*, i32** %10, i64 1
  %1177 = load i32*, i32** %1176, align 8
  %1178 = sext i16 %1162 to i64
  %1179 = getelementptr inbounds i32, i32* %1177, i64 %1178
  %1180 = load i32, i32* %1179, align 4
  %1181 = add nsw i32 %1175, %1180
  %1182 = sext i32 %1181 to i64
  %1183 = sext i32 %4 to i64
  %1184 = mul nsw i64 %1182, %1183
  %1185 = add nsw i64 %1184, 8192
  %1186 = lshr i64 %1185, 14
  br label %1187

1187:                                             ; preds = %1156, %1160
  %1188 = phi i64 [ %1186, %1160 ], [ 0, %1156 ]
  %1189 = shl i64 %1188, 32
  %1190 = ashr exact i64 %1189, 32
  %1191 = add nsw i64 %1190, %1158
  %1192 = icmp sgt i64 %1191, 2147483646
  br i1 %1192, label %1575, label %1193

1193:                                             ; preds = %1187
  %1194 = trunc i64 %1191 to i32
  %1195 = icmp ugt i32 %1121, %1194
  br i1 %1195, label %1196, label %1575

1196:                                             ; preds = %1193
  store i32 %1157, i32* %11, align 4
  %1197 = load i32, i32* %18, align 4
  store i32 %1197, i32* %12, align 4
  br label %1575

1198:                                             ; preds = %1120
  br i1 %1127, label %1575, label %1199

1199:                                             ; preds = %1198
  %1200 = add nsw i32 %41, -4
  %1201 = icmp slt i32 %1200, %74
  %1202 = icmp sgt i32 %1200, %76
  %1203 = or i1 %1201, %1202
  br i1 %1203, label %1575, label %1204

1204:                                             ; preds = %1199
  %1205 = trunc i32 %1200 to i16
  %1206 = trunc i32 %795 to i16
  %1207 = icmp eq i8* %13, null
  br i1 %1207, label %1208, label %1219

1208:                                             ; preds = %1204
  %1209 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1210 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1209, align 8
  %1211 = ashr i32 %1200, 3
  %1212 = mul nsw i32 %1211, %26
  %1213 = ashr i32 %795, 3
  %1214 = add nsw i32 %1213, %1212
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds i8, i8* %36, i64 %1215
  %1217 = and i32 %795, 7
  %1218 = call i32 %1210(i8* %1216, i32 %26, i32 %1217, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1230

1219:                                             ; preds = %1204
  %1220 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1221 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1220, align 8
  %1222 = ashr i32 %1200, 3
  %1223 = mul nsw i32 %1222, %26
  %1224 = ashr i32 %795, 3
  %1225 = add nsw i32 %1224, %1223
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds i8, i8* %36, i64 %1226
  %1228 = and i32 %795, 7
  %1229 = call i32 %1221(i8* %1227, i32 %26, i32 %1228, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1230

1230:                                             ; preds = %1219, %1208
  %1231 = phi i32 [ %1218, %1208 ], [ %1229, %1219 ]
  %1232 = sext i32 %1231 to i64
  %1233 = icmp eq i32** %10, null
  br i1 %1233, label %1261, label %1234

1234:                                             ; preds = %1230
  %1235 = sub i16 %1205, %38
  %1236 = sub i16 %1206, %40
  %1237 = icmp eq i16 %1235, 0
  %1238 = icmp eq i16 %1236, 0
  %1239 = xor i1 %1238, true
  %1240 = zext i1 %1239 to i64
  %1241 = select i1 %1238, i64 2, i64 3
  %1242 = select i1 %1237, i64 %1240, i64 %1241
  %1243 = getelementptr inbounds i32, i32* %9, i64 %1242
  %1244 = load i32, i32* %1243, align 4
  %1245 = load i32*, i32** %10, align 8
  %1246 = sext i16 %1235 to i64
  %1247 = getelementptr inbounds i32, i32* %1245, i64 %1246
  %1248 = load i32, i32* %1247, align 4
  %1249 = add nsw i32 %1248, %1244
  %1250 = getelementptr inbounds i32*, i32** %10, i64 1
  %1251 = load i32*, i32** %1250, align 8
  %1252 = sext i16 %1236 to i64
  %1253 = getelementptr inbounds i32, i32* %1251, i64 %1252
  %1254 = load i32, i32* %1253, align 4
  %1255 = add nsw i32 %1249, %1254
  %1256 = sext i32 %1255 to i64
  %1257 = sext i32 %4 to i64
  %1258 = mul nsw i64 %1256, %1257
  %1259 = add nsw i64 %1258, 8192
  %1260 = lshr i64 %1259, 14
  br label %1261

1261:                                             ; preds = %1230, %1234
  %1262 = phi i64 [ %1260, %1234 ], [ 0, %1230 ]
  %1263 = shl i64 %1262, 32
  %1264 = ashr exact i64 %1263, 32
  %1265 = add nsw i64 %1264, %1232
  %1266 = icmp sgt i64 %1265, 2147483646
  br i1 %1266, label %1575, label %1267

1267:                                             ; preds = %1261
  %1268 = trunc i64 %1265 to i32
  %1269 = icmp ugt i32 %1121, %1268
  br i1 %1269, label %1270, label %1575

1270:                                             ; preds = %1267
  store i32 %1231, i32* %11, align 4
  %1271 = load i32, i32* %18, align 4
  store i32 %1271, i32* %12, align 4
  br label %1575

1272:                                             ; preds = %966
  %1273 = and i1 %798, %800
  br i1 %1273, label %1274, label %1575

1274:                                             ; preds = %1272
  %1275 = sub nsw i32 %794, %41
  br i1 %302, label %1348, label %1276

1276:                                             ; preds = %1274
  %1277 = shl nsw i32 %1275, 1
  %1278 = add nsw i32 %1277, %41
  %1279 = icmp slt i32 %1278, %74
  %1280 = icmp sgt i32 %1278, %76
  %1281 = or i1 %1279, %1280
  br i1 %1281, label %1348, label %1282

1282:                                             ; preds = %1276
  %1283 = trunc i32 %1278 to i16
  %1284 = trunc i32 %299 to i16
  %1285 = icmp eq i8* %13, null
  br i1 %1285, label %1286, label %1296

1286:                                             ; preds = %1282
  %1287 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1288 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1287, align 8
  %1289 = ashr i32 %1278, 3
  %1290 = mul nsw i32 %1289, %26
  %1291 = add nsw i32 %1290, %33
  %1292 = sext i32 %1291 to i64
  %1293 = getelementptr inbounds i8, i8* %36, i64 %1292
  %1294 = and i32 %1278, 6
  %1295 = call i32 %1288(i8* %1293, i32 %26, i32 4, i32 %1294, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1306

1296:                                             ; preds = %1282
  %1297 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1298 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1297, align 8
  %1299 = ashr i32 %1278, 3
  %1300 = mul nsw i32 %1299, %26
  %1301 = add nsw i32 %1300, %33
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds i8, i8* %36, i64 %1302
  %1304 = and i32 %1278, 6
  %1305 = call i32 %1298(i8* %1303, i32 %26, i32 4, i32 %1304, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1306

1306:                                             ; preds = %1296, %1286
  %1307 = phi i32 [ %1295, %1286 ], [ %1305, %1296 ]
  %1308 = sext i32 %1307 to i64
  %1309 = icmp eq i32** %10, null
  br i1 %1309, label %1337, label %1310

1310:                                             ; preds = %1306
  %1311 = sub i16 %1283, %38
  %1312 = sub i16 %1284, %40
  %1313 = icmp eq i16 %1311, 0
  %1314 = icmp eq i16 %1312, 0
  %1315 = xor i1 %1314, true
  %1316 = zext i1 %1315 to i64
  %1317 = select i1 %1314, i64 2, i64 3
  %1318 = select i1 %1313, i64 %1316, i64 %1317
  %1319 = getelementptr inbounds i32, i32* %9, i64 %1318
  %1320 = load i32, i32* %1319, align 4
  %1321 = load i32*, i32** %10, align 8
  %1322 = sext i16 %1311 to i64
  %1323 = getelementptr inbounds i32, i32* %1321, i64 %1322
  %1324 = load i32, i32* %1323, align 4
  %1325 = add nsw i32 %1324, %1320
  %1326 = getelementptr inbounds i32*, i32** %10, i64 1
  %1327 = load i32*, i32** %1326, align 8
  %1328 = sext i16 %1312 to i64
  %1329 = getelementptr inbounds i32, i32* %1327, i64 %1328
  %1330 = load i32, i32* %1329, align 4
  %1331 = add nsw i32 %1325, %1330
  %1332 = sext i32 %1331 to i64
  %1333 = sext i32 %4 to i64
  %1334 = mul nsw i64 %1332, %1333
  %1335 = add nsw i64 %1334, 8192
  %1336 = lshr i64 %1335, 14
  br label %1337

1337:                                             ; preds = %1306, %1310
  %1338 = phi i64 [ %1336, %1310 ], [ 0, %1306 ]
  %1339 = shl i64 %1338, 32
  %1340 = ashr exact i64 %1339, 32
  %1341 = add nsw i64 %1340, %1308
  %1342 = icmp sgt i64 %1341, 2147483646
  br i1 %1342, label %1348, label %1343

1343:                                             ; preds = %1337
  %1344 = trunc i64 %1341 to i32
  %1345 = icmp ugt i32 %793, %1344
  br i1 %1345, label %1346, label %1348

1346:                                             ; preds = %1343
  store i32 %1307, i32* %11, align 4
  %1347 = load i32, i32* %18, align 4
  store i32 %1347, i32* %12, align 4
  br label %1348

1348:                                             ; preds = %1346, %1343, %1337, %1276, %1274
  %1349 = phi i32 [ %793, %1274 ], [ %793, %1276 ], [ %1344, %1346 ], [ %793, %1343 ], [ %793, %1337 ]
  %1350 = phi i32 [ %794, %1274 ], [ %794, %1276 ], [ %1278, %1346 ], [ %794, %1343 ], [ %794, %1337 ]
  %1351 = phi i32 [ %42, %1274 ], [ %42, %1276 ], [ %299, %1346 ], [ %42, %1343 ], [ %42, %1337 ]
  br i1 %228, label %1426, label %1352

1352:                                             ; preds = %1348
  %1353 = shl nsw i32 %1275, 1
  %1354 = add nsw i32 %1353, %41
  %1355 = icmp slt i32 %1354, %74
  %1356 = icmp sgt i32 %1354, %76
  %1357 = or i1 %1355, %1356
  br i1 %1357, label %1426, label %1358

1358:                                             ; preds = %1352
  %1359 = trunc i32 %1354 to i16
  %1360 = trunc i32 %225 to i16
  %1361 = icmp eq i8* %13, null
  br i1 %1361, label %1362, label %1373

1362:                                             ; preds = %1358
  %1363 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1364 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1363, align 8
  %1365 = ashr i32 %1354, 3
  %1366 = mul nsw i32 %1365, %26
  %1367 = ashr i32 %225, 3
  %1368 = add nsw i32 %1366, %1367
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds i8, i8* %36, i64 %1369
  %1371 = and i32 %1354, 6
  %1372 = call i32 %1364(i8* %1370, i32 %26, i32 4, i32 %1371, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1384

1373:                                             ; preds = %1358
  %1374 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1375 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1374, align 8
  %1376 = ashr i32 %1354, 3
  %1377 = mul nsw i32 %1376, %26
  %1378 = ashr i32 %225, 3
  %1379 = add nsw i32 %1377, %1378
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds i8, i8* %36, i64 %1380
  %1382 = and i32 %1354, 6
  %1383 = call i32 %1375(i8* %1381, i32 %26, i32 4, i32 %1382, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1384

1384:                                             ; preds = %1373, %1362
  %1385 = phi i32 [ %1372, %1362 ], [ %1383, %1373 ]
  %1386 = sext i32 %1385 to i64
  %1387 = icmp eq i32** %10, null
  br i1 %1387, label %1415, label %1388

1388:                                             ; preds = %1384
  %1389 = sub i16 %1359, %38
  %1390 = sub i16 %1360, %40
  %1391 = icmp eq i16 %1389, 0
  %1392 = icmp eq i16 %1390, 0
  %1393 = xor i1 %1392, true
  %1394 = zext i1 %1393 to i64
  %1395 = select i1 %1392, i64 2, i64 3
  %1396 = select i1 %1391, i64 %1394, i64 %1395
  %1397 = getelementptr inbounds i32, i32* %9, i64 %1396
  %1398 = load i32, i32* %1397, align 4
  %1399 = load i32*, i32** %10, align 8
  %1400 = sext i16 %1389 to i64
  %1401 = getelementptr inbounds i32, i32* %1399, i64 %1400
  %1402 = load i32, i32* %1401, align 4
  %1403 = add nsw i32 %1402, %1398
  %1404 = getelementptr inbounds i32*, i32** %10, i64 1
  %1405 = load i32*, i32** %1404, align 8
  %1406 = sext i16 %1390 to i64
  %1407 = getelementptr inbounds i32, i32* %1405, i64 %1406
  %1408 = load i32, i32* %1407, align 4
  %1409 = add nsw i32 %1403, %1408
  %1410 = sext i32 %1409 to i64
  %1411 = sext i32 %4 to i64
  %1412 = mul nsw i64 %1410, %1411
  %1413 = add nsw i64 %1412, 8192
  %1414 = lshr i64 %1413, 14
  br label %1415

1415:                                             ; preds = %1384, %1388
  %1416 = phi i64 [ %1414, %1388 ], [ 0, %1384 ]
  %1417 = shl i64 %1416, 32
  %1418 = ashr exact i64 %1417, 32
  %1419 = add nsw i64 %1418, %1386
  %1420 = icmp sgt i64 %1419, 2147483646
  br i1 %1420, label %1426, label %1421

1421:                                             ; preds = %1415
  %1422 = trunc i64 %1419 to i32
  %1423 = icmp ugt i32 %1349, %1422
  br i1 %1423, label %1424, label %1426

1424:                                             ; preds = %1421
  store i32 %1385, i32* %11, align 4
  %1425 = load i32, i32* %18, align 4
  store i32 %1425, i32* %12, align 4
  br label %1426

1426:                                             ; preds = %1424, %1421, %1415, %1352, %1348
  %1427 = phi i32 [ %1349, %1348 ], [ %1349, %1352 ], [ %1422, %1424 ], [ %1349, %1421 ], [ %1349, %1415 ]
  %1428 = phi i32 [ %1350, %1348 ], [ %1350, %1352 ], [ %1354, %1424 ], [ %1350, %1421 ], [ %1350, %1415 ]
  %1429 = phi i32 [ %1351, %1348 ], [ %1351, %1352 ], [ %225, %1424 ], [ %1351, %1421 ], [ %1351, %1415 ]
  switch i32 %516, label %1574 [
    i32 0, label %1430
    i32 2, label %1430
    i32 1, label %1501
    i32 3, label %1501
  ]

1430:                                             ; preds = %1426, %1426
  %1431 = icmp slt i32 %794, %74
  %1432 = or i1 %302, %1431
  %1433 = icmp sgt i32 %794, %76
  %1434 = or i1 %1433, %1432
  br i1 %1434, label %1575, label %1435

1435:                                             ; preds = %1430
  %1436 = trunc i32 %794 to i16
  %1437 = trunc i32 %299 to i16
  %1438 = icmp eq i8* %13, null
  br i1 %1438, label %1439, label %1449

1439:                                             ; preds = %1435
  %1440 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1441 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1440, align 8
  %1442 = ashr i32 %794, 3
  %1443 = mul nsw i32 %1442, %26
  %1444 = add nsw i32 %1443, %33
  %1445 = sext i32 %1444 to i64
  %1446 = getelementptr inbounds i8, i8* %36, i64 %1445
  %1447 = and i32 %794, 7
  %1448 = call i32 %1441(i8* %1446, i32 %26, i32 4, i32 %1447, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1459

1449:                                             ; preds = %1435
  %1450 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1451 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1450, align 8
  %1452 = ashr i32 %794, 3
  %1453 = mul nsw i32 %1452, %26
  %1454 = add nsw i32 %1453, %33
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i8, i8* %36, i64 %1455
  %1457 = and i32 %794, 7
  %1458 = call i32 %1451(i8* %1456, i32 %26, i32 4, i32 %1457, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1459

1459:                                             ; preds = %1449, %1439
  %1460 = phi i32 [ %1448, %1439 ], [ %1458, %1449 ]
  %1461 = sext i32 %1460 to i64
  %1462 = icmp eq i32** %10, null
  br i1 %1462, label %1490, label %1463

1463:                                             ; preds = %1459
  %1464 = sub i16 %1436, %38
  %1465 = sub i16 %1437, %40
  %1466 = icmp eq i16 %1464, 0
  %1467 = icmp eq i16 %1465, 0
  %1468 = xor i1 %1467, true
  %1469 = zext i1 %1468 to i64
  %1470 = select i1 %1467, i64 2, i64 3
  %1471 = select i1 %1466, i64 %1469, i64 %1470
  %1472 = getelementptr inbounds i32, i32* %9, i64 %1471
  %1473 = load i32, i32* %1472, align 4
  %1474 = load i32*, i32** %10, align 8
  %1475 = sext i16 %1464 to i64
  %1476 = getelementptr inbounds i32, i32* %1474, i64 %1475
  %1477 = load i32, i32* %1476, align 4
  %1478 = add nsw i32 %1477, %1473
  %1479 = getelementptr inbounds i32*, i32** %10, i64 1
  %1480 = load i32*, i32** %1479, align 8
  %1481 = sext i16 %1465 to i64
  %1482 = getelementptr inbounds i32, i32* %1480, i64 %1481
  %1483 = load i32, i32* %1482, align 4
  %1484 = add nsw i32 %1478, %1483
  %1485 = sext i32 %1484 to i64
  %1486 = sext i32 %4 to i64
  %1487 = mul nsw i64 %1485, %1486
  %1488 = add nsw i64 %1487, 8192
  %1489 = lshr i64 %1488, 14
  br label %1490

1490:                                             ; preds = %1459, %1463
  %1491 = phi i64 [ %1489, %1463 ], [ 0, %1459 ]
  %1492 = shl i64 %1491, 32
  %1493 = ashr exact i64 %1492, 32
  %1494 = add nsw i64 %1493, %1461
  %1495 = icmp sgt i64 %1494, 2147483646
  br i1 %1495, label %1575, label %1496

1496:                                             ; preds = %1490
  %1497 = trunc i64 %1494 to i32
  %1498 = icmp ugt i32 %1427, %1497
  br i1 %1498, label %1499, label %1575

1499:                                             ; preds = %1496
  store i32 %1460, i32* %11, align 4
  %1500 = load i32, i32* %18, align 4
  store i32 %1500, i32* %12, align 4
  br label %1575

1501:                                             ; preds = %1426, %1426
  %1502 = icmp slt i32 %794, %74
  %1503 = or i1 %228, %1502
  %1504 = icmp sgt i32 %794, %76
  %1505 = or i1 %1504, %1503
  br i1 %1505, label %1575, label %1506

1506:                                             ; preds = %1501
  %1507 = trunc i32 %794 to i16
  %1508 = trunc i32 %225 to i16
  %1509 = icmp eq i8* %13, null
  br i1 %1509, label %1510, label %1521

1510:                                             ; preds = %1506
  %1511 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1512 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1511, align 8
  %1513 = ashr i32 %794, 3
  %1514 = mul nsw i32 %1513, %26
  %1515 = ashr i32 %225, 3
  %1516 = add nsw i32 %1514, %1515
  %1517 = sext i32 %1516 to i64
  %1518 = getelementptr inbounds i8, i8* %36, i64 %1517
  %1519 = and i32 %794, 7
  %1520 = call i32 %1512(i8* %1518, i32 %26, i32 4, i32 %1519, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1532

1521:                                             ; preds = %1506
  %1522 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1523 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1522, align 8
  %1524 = ashr i32 %794, 3
  %1525 = mul nsw i32 %1524, %26
  %1526 = ashr i32 %225, 3
  %1527 = add nsw i32 %1525, %1526
  %1528 = sext i32 %1527 to i64
  %1529 = getelementptr inbounds i8, i8* %36, i64 %1528
  %1530 = and i32 %794, 7
  %1531 = call i32 %1523(i8* %1529, i32 %26, i32 4, i32 %1530, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1532

1532:                                             ; preds = %1521, %1510
  %1533 = phi i32 [ %1520, %1510 ], [ %1531, %1521 ]
  %1534 = sext i32 %1533 to i64
  %1535 = icmp eq i32** %10, null
  br i1 %1535, label %1563, label %1536

1536:                                             ; preds = %1532
  %1537 = sub i16 %1507, %38
  %1538 = sub i16 %1508, %40
  %1539 = icmp eq i16 %1537, 0
  %1540 = icmp eq i16 %1538, 0
  %1541 = xor i1 %1540, true
  %1542 = zext i1 %1541 to i64
  %1543 = select i1 %1540, i64 2, i64 3
  %1544 = select i1 %1539, i64 %1542, i64 %1543
  %1545 = getelementptr inbounds i32, i32* %9, i64 %1544
  %1546 = load i32, i32* %1545, align 4
  %1547 = load i32*, i32** %10, align 8
  %1548 = sext i16 %1537 to i64
  %1549 = getelementptr inbounds i32, i32* %1547, i64 %1548
  %1550 = load i32, i32* %1549, align 4
  %1551 = add nsw i32 %1550, %1546
  %1552 = getelementptr inbounds i32*, i32** %10, i64 1
  %1553 = load i32*, i32** %1552, align 8
  %1554 = sext i16 %1538 to i64
  %1555 = getelementptr inbounds i32, i32* %1553, i64 %1554
  %1556 = load i32, i32* %1555, align 4
  %1557 = add nsw i32 %1551, %1556
  %1558 = sext i32 %1557 to i64
  %1559 = sext i32 %4 to i64
  %1560 = mul nsw i64 %1558, %1559
  %1561 = add nsw i64 %1560, 8192
  %1562 = lshr i64 %1561, 14
  br label %1563

1563:                                             ; preds = %1532, %1536
  %1564 = phi i64 [ %1562, %1536 ], [ 0, %1532 ]
  %1565 = shl i64 %1564, 32
  %1566 = ashr exact i64 %1565, 32
  %1567 = add nsw i64 %1566, %1534
  %1568 = icmp sgt i64 %1567, 2147483646
  br i1 %1568, label %1575, label %1569

1569:                                             ; preds = %1563
  %1570 = trunc i64 %1567 to i32
  %1571 = icmp ugt i32 %1427, %1570
  br i1 %1571, label %1572, label %1575

1572:                                             ; preds = %1569
  store i32 %1533, i32* %11, align 4
  %1573 = load i32, i32* %18, align 4
  store i32 %1573, i32* %12, align 4
  br label %1575

1574:                                             ; preds = %1426
  unreachable

1575:                                             ; preds = %1572, %1569, %1563, %1499, %1496, %1490, %1270, %1267, %1261, %1196, %1193, %1187, %964, %961, %955, %1272, %890, %884, %1129, %1128, %1199, %1198, %1430, %1501, %792
  %1576 = phi i32 [ %793, %792 ], [ %793, %1272 ], [ %885, %890 ], [ %885, %884 ], [ %1121, %1129 ], [ %1121, %1128 ], [ %1121, %1199 ], [ %1121, %1198 ], [ %1427, %1430 ], [ %1427, %1501 ], [ %962, %964 ], [ %885, %961 ], [ %885, %955 ], [ %1194, %1196 ], [ %1121, %1193 ], [ %1121, %1187 ], [ %1268, %1270 ], [ %1121, %1267 ], [ %1121, %1261 ], [ %1497, %1499 ], [ %1427, %1496 ], [ %1427, %1490 ], [ %1570, %1572 ], [ %1427, %1569 ], [ %1427, %1563 ]
  %1577 = phi i32 [ %794, %792 ], [ %794, %1272 ], [ %794, %890 ], [ %794, %884 ], [ %1122, %1129 ], [ %1122, %1128 ], [ %1122, %1199 ], [ %1122, %1198 ], [ %1428, %1430 ], [ %1428, %1501 ], [ %892, %964 ], [ %794, %961 ], [ %794, %955 ], [ %1130, %1196 ], [ %1122, %1193 ], [ %1122, %1187 ], [ %1200, %1270 ], [ %1122, %1267 ], [ %1122, %1261 ], [ %794, %1499 ], [ %1428, %1496 ], [ %1428, %1490 ], [ %794, %1572 ], [ %1428, %1569 ], [ %1428, %1563 ]
  %1578 = phi i32 [ %795, %792 ], [ %795, %1272 ], [ %886, %890 ], [ %886, %884 ], [ %1123, %1129 ], [ %1123, %1128 ], [ %1123, %1199 ], [ %1123, %1198 ], [ %1429, %1430 ], [ %1429, %1501 ], [ %795, %964 ], [ %886, %961 ], [ %886, %955 ], [ %795, %1196 ], [ %1123, %1193 ], [ %1123, %1187 ], [ %795, %1270 ], [ %1123, %1267 ], [ %1123, %1261 ], [ %299, %1499 ], [ %1429, %1496 ], [ %1429, %1490 ], [ %225, %1572 ], [ %1429, %1569 ], [ %1429, %1563 ]
  %1579 = icmp eq i32 %6, 2
  br i1 %1579, label %3026, label %1580

1580:                                             ; preds = %1575
  %1581 = add nsw i32 %1578, -2
  %1582 = icmp slt i32 %1581, %70
  %1583 = icmp sgt i32 %1581, %72
  %1584 = or i1 %1582, %1583
  %1585 = icmp slt i32 %1577, %74
  %1586 = or i1 %1585, %1584
  %1587 = icmp sgt i32 %1577, %76
  %1588 = or i1 %1587, %1586
  br i1 %1588, label %1659, label %1589

1589:                                             ; preds = %1580
  %1590 = trunc i32 %1577 to i16
  %1591 = trunc i32 %1581 to i16
  %1592 = icmp eq i8* %13, null
  br i1 %1592, label %1593, label %1605

1593:                                             ; preds = %1589
  %1594 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1595 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1594, align 8
  %1596 = ashr i32 %1577, 3
  %1597 = mul nsw i32 %1596, %26
  %1598 = ashr i32 %1581, 3
  %1599 = add nsw i32 %1598, %1597
  %1600 = sext i32 %1599 to i64
  %1601 = getelementptr inbounds i8, i8* %36, i64 %1600
  %1602 = and i32 %1581, 7
  %1603 = and i32 %1577, 7
  %1604 = call i32 %1595(i8* %1601, i32 %26, i32 %1602, i32 %1603, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1617

1605:                                             ; preds = %1589
  %1606 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1607 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1606, align 8
  %1608 = ashr i32 %1577, 3
  %1609 = mul nsw i32 %1608, %26
  %1610 = ashr i32 %1581, 3
  %1611 = add nsw i32 %1610, %1609
  %1612 = sext i32 %1611 to i64
  %1613 = getelementptr inbounds i8, i8* %36, i64 %1612
  %1614 = and i32 %1581, 7
  %1615 = and i32 %1577, 7
  %1616 = call i32 %1607(i8* %1613, i32 %26, i32 %1614, i32 %1615, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1617

1617:                                             ; preds = %1605, %1593
  %1618 = phi i32 [ %1604, %1593 ], [ %1616, %1605 ]
  %1619 = sext i32 %1618 to i64
  %1620 = icmp eq i32** %10, null
  br i1 %1620, label %1648, label %1621

1621:                                             ; preds = %1617
  %1622 = sub i16 %1590, %38
  %1623 = sub i16 %1591, %40
  %1624 = icmp eq i16 %1622, 0
  %1625 = icmp eq i16 %1623, 0
  %1626 = xor i1 %1625, true
  %1627 = zext i1 %1626 to i64
  %1628 = select i1 %1625, i64 2, i64 3
  %1629 = select i1 %1624, i64 %1627, i64 %1628
  %1630 = getelementptr inbounds i32, i32* %9, i64 %1629
  %1631 = load i32, i32* %1630, align 4
  %1632 = load i32*, i32** %10, align 8
  %1633 = sext i16 %1622 to i64
  %1634 = getelementptr inbounds i32, i32* %1632, i64 %1633
  %1635 = load i32, i32* %1634, align 4
  %1636 = add nsw i32 %1635, %1631
  %1637 = getelementptr inbounds i32*, i32** %10, i64 1
  %1638 = load i32*, i32** %1637, align 8
  %1639 = sext i16 %1623 to i64
  %1640 = getelementptr inbounds i32, i32* %1638, i64 %1639
  %1641 = load i32, i32* %1640, align 4
  %1642 = add nsw i32 %1636, %1641
  %1643 = sext i32 %1642 to i64
  %1644 = sext i32 %4 to i64
  %1645 = mul nsw i64 %1643, %1644
  %1646 = add nsw i64 %1645, 8192
  %1647 = lshr i64 %1646, 14
  br label %1648

1648:                                             ; preds = %1617, %1621
  %1649 = phi i64 [ %1647, %1621 ], [ 0, %1617 ]
  %1650 = shl i64 %1649, 32
  %1651 = ashr exact i64 %1650, 32
  %1652 = add nsw i64 %1651, %1619
  %1653 = icmp sgt i64 %1652, 2147483646
  br i1 %1653, label %1659, label %1654

1654:                                             ; preds = %1648
  %1655 = trunc i64 %1652 to i32
  %1656 = icmp ugt i32 %1576, %1655
  br i1 %1656, label %1657, label %1659

1657:                                             ; preds = %1654
  store i32 %1618, i32* %11, align 4
  %1658 = load i32, i32* %18, align 4
  store i32 %1658, i32* %12, align 4
  br label %1659

1659:                                             ; preds = %1657, %1654, %1648, %1580
  %1660 = phi i32 [ %1576, %1580 ], [ %1655, %1657 ], [ %1576, %1654 ], [ %1576, %1648 ]
  %1661 = phi i32 [ %1578, %1580 ], [ %1581, %1657 ], [ %1578, %1654 ], [ %1578, %1648 ]
  %1662 = phi i32 [ 2147483647, %1580 ], [ %1655, %1657 ], [ %1655, %1654 ], [ 2147483647, %1648 ]
  %1663 = add nsw i32 %1578, 2
  %1664 = icmp slt i32 %1663, %70
  %1665 = icmp sgt i32 %1663, %72
  %1666 = or i1 %1664, %1665
  %1667 = or i1 %1585, %1666
  %1668 = or i1 %1587, %1667
  br i1 %1668, label %1739, label %1669

1669:                                             ; preds = %1659
  %1670 = trunc i32 %1577 to i16
  %1671 = trunc i32 %1663 to i16
  %1672 = icmp eq i8* %13, null
  br i1 %1672, label %1673, label %1685

1673:                                             ; preds = %1669
  %1674 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1675 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1674, align 8
  %1676 = ashr i32 %1577, 3
  %1677 = mul nsw i32 %1676, %26
  %1678 = ashr i32 %1663, 3
  %1679 = add nsw i32 %1678, %1677
  %1680 = sext i32 %1679 to i64
  %1681 = getelementptr inbounds i8, i8* %36, i64 %1680
  %1682 = and i32 %1663, 7
  %1683 = and i32 %1577, 7
  %1684 = call i32 %1675(i8* %1681, i32 %26, i32 %1682, i32 %1683, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1697

1685:                                             ; preds = %1669
  %1686 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1687 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1686, align 8
  %1688 = ashr i32 %1577, 3
  %1689 = mul nsw i32 %1688, %26
  %1690 = ashr i32 %1663, 3
  %1691 = add nsw i32 %1690, %1689
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds i8, i8* %36, i64 %1692
  %1694 = and i32 %1663, 7
  %1695 = and i32 %1577, 7
  %1696 = call i32 %1687(i8* %1693, i32 %26, i32 %1694, i32 %1695, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1697

1697:                                             ; preds = %1685, %1673
  %1698 = phi i32 [ %1684, %1673 ], [ %1696, %1685 ]
  %1699 = sext i32 %1698 to i64
  %1700 = icmp eq i32** %10, null
  br i1 %1700, label %1728, label %1701

1701:                                             ; preds = %1697
  %1702 = sub i16 %1670, %38
  %1703 = sub i16 %1671, %40
  %1704 = icmp eq i16 %1702, 0
  %1705 = icmp eq i16 %1703, 0
  %1706 = xor i1 %1705, true
  %1707 = zext i1 %1706 to i64
  %1708 = select i1 %1705, i64 2, i64 3
  %1709 = select i1 %1704, i64 %1707, i64 %1708
  %1710 = getelementptr inbounds i32, i32* %9, i64 %1709
  %1711 = load i32, i32* %1710, align 4
  %1712 = load i32*, i32** %10, align 8
  %1713 = sext i16 %1702 to i64
  %1714 = getelementptr inbounds i32, i32* %1712, i64 %1713
  %1715 = load i32, i32* %1714, align 4
  %1716 = add nsw i32 %1715, %1711
  %1717 = getelementptr inbounds i32*, i32** %10, i64 1
  %1718 = load i32*, i32** %1717, align 8
  %1719 = sext i16 %1703 to i64
  %1720 = getelementptr inbounds i32, i32* %1718, i64 %1719
  %1721 = load i32, i32* %1720, align 4
  %1722 = add nsw i32 %1716, %1721
  %1723 = sext i32 %1722 to i64
  %1724 = sext i32 %4 to i64
  %1725 = mul nsw i64 %1723, %1724
  %1726 = add nsw i64 %1725, 8192
  %1727 = lshr i64 %1726, 14
  br label %1728

1728:                                             ; preds = %1697, %1701
  %1729 = phi i64 [ %1727, %1701 ], [ 0, %1697 ]
  %1730 = shl i64 %1729, 32
  %1731 = ashr exact i64 %1730, 32
  %1732 = add nsw i64 %1731, %1699
  %1733 = icmp sgt i64 %1732, 2147483646
  br i1 %1733, label %1739, label %1734

1734:                                             ; preds = %1728
  %1735 = trunc i64 %1732 to i32
  %1736 = icmp ugt i32 %1660, %1735
  br i1 %1736, label %1737, label %1739

1737:                                             ; preds = %1734
  store i32 %1698, i32* %11, align 4
  %1738 = load i32, i32* %18, align 4
  store i32 %1738, i32* %12, align 4
  br label %1739

1739:                                             ; preds = %1737, %1734, %1728, %1659
  %1740 = phi i32 [ %1660, %1659 ], [ %1735, %1737 ], [ %1660, %1734 ], [ %1660, %1728 ]
  %1741 = phi i32 [ %1661, %1659 ], [ %1663, %1737 ], [ %1661, %1734 ], [ %1661, %1728 ]
  %1742 = phi i32 [ 2147483647, %1659 ], [ %1735, %1737 ], [ %1735, %1734 ], [ 2147483647, %1728 ]
  %1743 = icmp slt i32 %1578, %70
  %1744 = icmp sgt i32 %1578, %72
  %1745 = or i1 %1743, %1744
  br i1 %1745, label %1900, label %1746

1746:                                             ; preds = %1739
  %1747 = add nsw i32 %1577, -2
  %1748 = icmp slt i32 %1747, %74
  %1749 = icmp sgt i32 %1747, %76
  %1750 = or i1 %1748, %1749
  br i1 %1750, label %1821, label %1751

1751:                                             ; preds = %1746
  %1752 = trunc i32 %1747 to i16
  %1753 = trunc i32 %1578 to i16
  %1754 = icmp eq i8* %13, null
  br i1 %1754, label %1755, label %1767

1755:                                             ; preds = %1751
  %1756 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1757 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1756, align 8
  %1758 = ashr i32 %1747, 3
  %1759 = mul nsw i32 %1758, %26
  %1760 = ashr i32 %1578, 3
  %1761 = add nsw i32 %1759, %1760
  %1762 = sext i32 %1761 to i64
  %1763 = getelementptr inbounds i8, i8* %36, i64 %1762
  %1764 = and i32 %1578, 7
  %1765 = and i32 %1747, 7
  %1766 = call i32 %1757(i8* %1763, i32 %26, i32 %1764, i32 %1765, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1779

1767:                                             ; preds = %1751
  %1768 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1769 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1768, align 8
  %1770 = ashr i32 %1747, 3
  %1771 = mul nsw i32 %1770, %26
  %1772 = ashr i32 %1578, 3
  %1773 = add nsw i32 %1771, %1772
  %1774 = sext i32 %1773 to i64
  %1775 = getelementptr inbounds i8, i8* %36, i64 %1774
  %1776 = and i32 %1578, 7
  %1777 = and i32 %1747, 7
  %1778 = call i32 %1769(i8* %1775, i32 %26, i32 %1776, i32 %1777, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1779

1779:                                             ; preds = %1767, %1755
  %1780 = phi i32 [ %1766, %1755 ], [ %1778, %1767 ]
  %1781 = sext i32 %1780 to i64
  %1782 = icmp eq i32** %10, null
  br i1 %1782, label %1810, label %1783

1783:                                             ; preds = %1779
  %1784 = sub i16 %1752, %38
  %1785 = sub i16 %1753, %40
  %1786 = icmp eq i16 %1784, 0
  %1787 = icmp eq i16 %1785, 0
  %1788 = xor i1 %1787, true
  %1789 = zext i1 %1788 to i64
  %1790 = select i1 %1787, i64 2, i64 3
  %1791 = select i1 %1786, i64 %1789, i64 %1790
  %1792 = getelementptr inbounds i32, i32* %9, i64 %1791
  %1793 = load i32, i32* %1792, align 4
  %1794 = load i32*, i32** %10, align 8
  %1795 = sext i16 %1784 to i64
  %1796 = getelementptr inbounds i32, i32* %1794, i64 %1795
  %1797 = load i32, i32* %1796, align 4
  %1798 = add nsw i32 %1797, %1793
  %1799 = getelementptr inbounds i32*, i32** %10, i64 1
  %1800 = load i32*, i32** %1799, align 8
  %1801 = sext i16 %1785 to i64
  %1802 = getelementptr inbounds i32, i32* %1800, i64 %1801
  %1803 = load i32, i32* %1802, align 4
  %1804 = add nsw i32 %1798, %1803
  %1805 = sext i32 %1804 to i64
  %1806 = sext i32 %4 to i64
  %1807 = mul nsw i64 %1805, %1806
  %1808 = add nsw i64 %1807, 8192
  %1809 = lshr i64 %1808, 14
  br label %1810

1810:                                             ; preds = %1779, %1783
  %1811 = phi i64 [ %1809, %1783 ], [ 0, %1779 ]
  %1812 = shl i64 %1811, 32
  %1813 = ashr exact i64 %1812, 32
  %1814 = add nsw i64 %1813, %1781
  %1815 = icmp sgt i64 %1814, 2147483646
  br i1 %1815, label %1821, label %1816

1816:                                             ; preds = %1810
  %1817 = trunc i64 %1814 to i32
  %1818 = icmp ugt i32 %1740, %1817
  br i1 %1818, label %1819, label %1821

1819:                                             ; preds = %1816
  store i32 %1780, i32* %11, align 4
  %1820 = load i32, i32* %18, align 4
  store i32 %1820, i32* %12, align 4
  br label %1821

1821:                                             ; preds = %1819, %1816, %1810, %1746
  %1822 = phi i32 [ %1740, %1810 ], [ %1740, %1816 ], [ %1817, %1819 ], [ %1740, %1746 ]
  %1823 = phi i32 [ %1577, %1810 ], [ %1577, %1816 ], [ %1747, %1819 ], [ %1577, %1746 ]
  %1824 = phi i32 [ %1741, %1810 ], [ %1741, %1816 ], [ %1578, %1819 ], [ %1741, %1746 ]
  %1825 = phi i32 [ 2147483647, %1810 ], [ %1817, %1816 ], [ %1817, %1819 ], [ 2147483647, %1746 ]
  %1826 = add nsw i32 %1577, 2
  %1827 = icmp slt i32 %1826, %74
  %1828 = icmp sgt i32 %1826, %76
  %1829 = or i1 %1827, %1828
  br i1 %1829, label %1900, label %1830

1830:                                             ; preds = %1821
  %1831 = trunc i32 %1826 to i16
  %1832 = trunc i32 %1578 to i16
  %1833 = icmp eq i8* %13, null
  br i1 %1833, label %1834, label %1846

1834:                                             ; preds = %1830
  %1835 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1836 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1835, align 8
  %1837 = ashr i32 %1826, 3
  %1838 = mul nsw i32 %1837, %26
  %1839 = ashr i32 %1578, 3
  %1840 = add nsw i32 %1838, %1839
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds i8, i8* %36, i64 %1841
  %1843 = and i32 %1578, 7
  %1844 = and i32 %1826, 7
  %1845 = call i32 %1836(i8* %1842, i32 %26, i32 %1843, i32 %1844, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1858

1846:                                             ; preds = %1830
  %1847 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1848 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1847, align 8
  %1849 = ashr i32 %1826, 3
  %1850 = mul nsw i32 %1849, %26
  %1851 = ashr i32 %1578, 3
  %1852 = add nsw i32 %1850, %1851
  %1853 = sext i32 %1852 to i64
  %1854 = getelementptr inbounds i8, i8* %36, i64 %1853
  %1855 = and i32 %1578, 7
  %1856 = and i32 %1826, 7
  %1857 = call i32 %1848(i8* %1854, i32 %26, i32 %1855, i32 %1856, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1858

1858:                                             ; preds = %1846, %1834
  %1859 = phi i32 [ %1845, %1834 ], [ %1857, %1846 ]
  %1860 = sext i32 %1859 to i64
  %1861 = icmp eq i32** %10, null
  br i1 %1861, label %1889, label %1862

1862:                                             ; preds = %1858
  %1863 = sub i16 %1831, %38
  %1864 = sub i16 %1832, %40
  %1865 = icmp eq i16 %1863, 0
  %1866 = icmp eq i16 %1864, 0
  %1867 = xor i1 %1866, true
  %1868 = zext i1 %1867 to i64
  %1869 = select i1 %1866, i64 2, i64 3
  %1870 = select i1 %1865, i64 %1868, i64 %1869
  %1871 = getelementptr inbounds i32, i32* %9, i64 %1870
  %1872 = load i32, i32* %1871, align 4
  %1873 = load i32*, i32** %10, align 8
  %1874 = sext i16 %1863 to i64
  %1875 = getelementptr inbounds i32, i32* %1873, i64 %1874
  %1876 = load i32, i32* %1875, align 4
  %1877 = add nsw i32 %1876, %1872
  %1878 = getelementptr inbounds i32*, i32** %10, i64 1
  %1879 = load i32*, i32** %1878, align 8
  %1880 = sext i16 %1864 to i64
  %1881 = getelementptr inbounds i32, i32* %1879, i64 %1880
  %1882 = load i32, i32* %1881, align 4
  %1883 = add nsw i32 %1877, %1882
  %1884 = sext i32 %1883 to i64
  %1885 = sext i32 %4 to i64
  %1886 = mul nsw i64 %1884, %1885
  %1887 = add nsw i64 %1886, 8192
  %1888 = lshr i64 %1887, 14
  br label %1889

1889:                                             ; preds = %1858, %1862
  %1890 = phi i64 [ %1888, %1862 ], [ 0, %1858 ]
  %1891 = shl i64 %1890, 32
  %1892 = ashr exact i64 %1891, 32
  %1893 = add nsw i64 %1892, %1860
  %1894 = icmp sgt i64 %1893, 2147483646
  br i1 %1894, label %1900, label %1895

1895:                                             ; preds = %1889
  %1896 = trunc i64 %1893 to i32
  %1897 = icmp ugt i32 %1822, %1896
  br i1 %1897, label %1898, label %1900

1898:                                             ; preds = %1895
  store i32 %1859, i32* %11, align 4
  %1899 = load i32, i32* %18, align 4
  store i32 %1899, i32* %12, align 4
  br label %1900

1900:                                             ; preds = %1898, %1895, %1889, %1739, %1821
  %1901 = phi i32 [ %1825, %1821 ], [ 2147483647, %1739 ], [ %1825, %1889 ], [ %1825, %1895 ], [ %1825, %1898 ]
  %1902 = phi i32 [ %1822, %1821 ], [ %1740, %1739 ], [ %1822, %1889 ], [ %1822, %1895 ], [ %1896, %1898 ]
  %1903 = phi i32 [ %1823, %1821 ], [ %1577, %1739 ], [ %1823, %1889 ], [ %1823, %1895 ], [ %1826, %1898 ]
  %1904 = phi i32 [ %1824, %1821 ], [ %1741, %1739 ], [ %1824, %1889 ], [ %1824, %1895 ], [ %1578, %1898 ]
  %1905 = phi i32 [ 2147483647, %1821 ], [ 2147483647, %1739 ], [ 2147483647, %1889 ], [ %1896, %1895 ], [ %1896, %1898 ]
  %1906 = icmp uge i32 %1662, %1742
  %1907 = zext i1 %1906 to i32
  %1908 = icmp ult i32 %1901, %1905
  %1909 = select i1 %1908, i32 0, i32 2
  %1910 = or i32 %1909, %1907
  switch i32 %1910, label %2215 [
    i32 0, label %1911
    i32 1, label %1987
    i32 2, label %2063
    i32 3, label %2139
  ]

1911:                                             ; preds = %1900
  br i1 %1584, label %2216, label %1912

1912:                                             ; preds = %1911
  %1913 = add nsw i32 %1577, -2
  %1914 = icmp slt i32 %1913, %74
  %1915 = icmp sgt i32 %1913, %76
  %1916 = or i1 %1914, %1915
  br i1 %1916, label %2216, label %1917

1917:                                             ; preds = %1912
  %1918 = trunc i32 %1913 to i16
  %1919 = trunc i32 %1581 to i16
  %1920 = icmp eq i8* %13, null
  br i1 %1920, label %1921, label %1933

1921:                                             ; preds = %1917
  %1922 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1923 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1922, align 8
  %1924 = ashr i32 %1913, 3
  %1925 = mul nsw i32 %1924, %26
  %1926 = ashr i32 %1581, 3
  %1927 = add nsw i32 %1925, %1926
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds i8, i8* %36, i64 %1928
  %1930 = and i32 %1581, 7
  %1931 = and i32 %1913, 7
  %1932 = call i32 %1923(i8* %1929, i32 %26, i32 %1930, i32 %1931, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1945

1933:                                             ; preds = %1917
  %1934 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1935 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1934, align 8
  %1936 = ashr i32 %1913, 3
  %1937 = mul nsw i32 %1936, %26
  %1938 = ashr i32 %1581, 3
  %1939 = add nsw i32 %1937, %1938
  %1940 = sext i32 %1939 to i64
  %1941 = getelementptr inbounds i8, i8* %36, i64 %1940
  %1942 = and i32 %1581, 7
  %1943 = and i32 %1913, 7
  %1944 = call i32 %1935(i8* %1941, i32 %26, i32 %1942, i32 %1943, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1945

1945:                                             ; preds = %1933, %1921
  %1946 = phi i32 [ %1932, %1921 ], [ %1944, %1933 ]
  %1947 = sext i32 %1946 to i64
  %1948 = icmp eq i32** %10, null
  br i1 %1948, label %1976, label %1949

1949:                                             ; preds = %1945
  %1950 = sub i16 %1918, %38
  %1951 = sub i16 %1919, %40
  %1952 = icmp eq i16 %1950, 0
  %1953 = icmp eq i16 %1951, 0
  %1954 = xor i1 %1953, true
  %1955 = zext i1 %1954 to i64
  %1956 = select i1 %1953, i64 2, i64 3
  %1957 = select i1 %1952, i64 %1955, i64 %1956
  %1958 = getelementptr inbounds i32, i32* %9, i64 %1957
  %1959 = load i32, i32* %1958, align 4
  %1960 = load i32*, i32** %10, align 8
  %1961 = sext i16 %1950 to i64
  %1962 = getelementptr inbounds i32, i32* %1960, i64 %1961
  %1963 = load i32, i32* %1962, align 4
  %1964 = add nsw i32 %1963, %1959
  %1965 = getelementptr inbounds i32*, i32** %10, i64 1
  %1966 = load i32*, i32** %1965, align 8
  %1967 = sext i16 %1951 to i64
  %1968 = getelementptr inbounds i32, i32* %1966, i64 %1967
  %1969 = load i32, i32* %1968, align 4
  %1970 = add nsw i32 %1964, %1969
  %1971 = sext i32 %1970 to i64
  %1972 = sext i32 %4 to i64
  %1973 = mul nsw i64 %1971, %1972
  %1974 = add nsw i64 %1973, 8192
  %1975 = lshr i64 %1974, 14
  br label %1976

1976:                                             ; preds = %1945, %1949
  %1977 = phi i64 [ %1975, %1949 ], [ 0, %1945 ]
  %1978 = shl i64 %1977, 32
  %1979 = ashr exact i64 %1978, 32
  %1980 = add nsw i64 %1979, %1947
  %1981 = icmp sgt i64 %1980, 2147483646
  br i1 %1981, label %2216, label %1982

1982:                                             ; preds = %1976
  %1983 = trunc i64 %1980 to i32
  %1984 = icmp ugt i32 %1902, %1983
  br i1 %1984, label %1985, label %2216

1985:                                             ; preds = %1982
  store i32 %1946, i32* %11, align 4
  %1986 = load i32, i32* %18, align 4
  store i32 %1986, i32* %12, align 4
  br label %2216

1987:                                             ; preds = %1900
  br i1 %1666, label %2216, label %1988

1988:                                             ; preds = %1987
  %1989 = add nsw i32 %1577, -2
  %1990 = icmp slt i32 %1989, %74
  %1991 = icmp sgt i32 %1989, %76
  %1992 = or i1 %1990, %1991
  br i1 %1992, label %2216, label %1993

1993:                                             ; preds = %1988
  %1994 = trunc i32 %1989 to i16
  %1995 = trunc i32 %1663 to i16
  %1996 = icmp eq i8* %13, null
  br i1 %1996, label %1997, label %2009

1997:                                             ; preds = %1993
  %1998 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1999 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1998, align 8
  %2000 = ashr i32 %1989, 3
  %2001 = mul nsw i32 %2000, %26
  %2002 = ashr i32 %1663, 3
  %2003 = add nsw i32 %2001, %2002
  %2004 = sext i32 %2003 to i64
  %2005 = getelementptr inbounds i8, i8* %36, i64 %2004
  %2006 = and i32 %1663, 7
  %2007 = and i32 %1989, 7
  %2008 = call i32 %1999(i8* %2005, i32 %26, i32 %2006, i32 %2007, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2021

2009:                                             ; preds = %1993
  %2010 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2011 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2010, align 8
  %2012 = ashr i32 %1989, 3
  %2013 = mul nsw i32 %2012, %26
  %2014 = ashr i32 %1663, 3
  %2015 = add nsw i32 %2013, %2014
  %2016 = sext i32 %2015 to i64
  %2017 = getelementptr inbounds i8, i8* %36, i64 %2016
  %2018 = and i32 %1663, 7
  %2019 = and i32 %1989, 7
  %2020 = call i32 %2011(i8* %2017, i32 %26, i32 %2018, i32 %2019, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2021

2021:                                             ; preds = %2009, %1997
  %2022 = phi i32 [ %2008, %1997 ], [ %2020, %2009 ]
  %2023 = sext i32 %2022 to i64
  %2024 = icmp eq i32** %10, null
  br i1 %2024, label %2052, label %2025

2025:                                             ; preds = %2021
  %2026 = sub i16 %1994, %38
  %2027 = sub i16 %1995, %40
  %2028 = icmp eq i16 %2026, 0
  %2029 = icmp eq i16 %2027, 0
  %2030 = xor i1 %2029, true
  %2031 = zext i1 %2030 to i64
  %2032 = select i1 %2029, i64 2, i64 3
  %2033 = select i1 %2028, i64 %2031, i64 %2032
  %2034 = getelementptr inbounds i32, i32* %9, i64 %2033
  %2035 = load i32, i32* %2034, align 4
  %2036 = load i32*, i32** %10, align 8
  %2037 = sext i16 %2026 to i64
  %2038 = getelementptr inbounds i32, i32* %2036, i64 %2037
  %2039 = load i32, i32* %2038, align 4
  %2040 = add nsw i32 %2039, %2035
  %2041 = getelementptr inbounds i32*, i32** %10, i64 1
  %2042 = load i32*, i32** %2041, align 8
  %2043 = sext i16 %2027 to i64
  %2044 = getelementptr inbounds i32, i32* %2042, i64 %2043
  %2045 = load i32, i32* %2044, align 4
  %2046 = add nsw i32 %2040, %2045
  %2047 = sext i32 %2046 to i64
  %2048 = sext i32 %4 to i64
  %2049 = mul nsw i64 %2047, %2048
  %2050 = add nsw i64 %2049, 8192
  %2051 = lshr i64 %2050, 14
  br label %2052

2052:                                             ; preds = %2021, %2025
  %2053 = phi i64 [ %2051, %2025 ], [ 0, %2021 ]
  %2054 = shl i64 %2053, 32
  %2055 = ashr exact i64 %2054, 32
  %2056 = add nsw i64 %2055, %2023
  %2057 = icmp sgt i64 %2056, 2147483646
  br i1 %2057, label %2216, label %2058

2058:                                             ; preds = %2052
  %2059 = trunc i64 %2056 to i32
  %2060 = icmp ugt i32 %1902, %2059
  br i1 %2060, label %2061, label %2216

2061:                                             ; preds = %2058
  store i32 %2022, i32* %11, align 4
  %2062 = load i32, i32* %18, align 4
  store i32 %2062, i32* %12, align 4
  br label %2216

2063:                                             ; preds = %1900
  br i1 %1584, label %2216, label %2064

2064:                                             ; preds = %2063
  %2065 = add nsw i32 %1577, 2
  %2066 = icmp slt i32 %2065, %74
  %2067 = icmp sgt i32 %2065, %76
  %2068 = or i1 %2066, %2067
  br i1 %2068, label %2216, label %2069

2069:                                             ; preds = %2064
  %2070 = trunc i32 %2065 to i16
  %2071 = trunc i32 %1581 to i16
  %2072 = icmp eq i8* %13, null
  br i1 %2072, label %2073, label %2085

2073:                                             ; preds = %2069
  %2074 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2075 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2074, align 8
  %2076 = ashr i32 %2065, 3
  %2077 = mul nsw i32 %2076, %26
  %2078 = ashr i32 %1581, 3
  %2079 = add nsw i32 %2077, %2078
  %2080 = sext i32 %2079 to i64
  %2081 = getelementptr inbounds i8, i8* %36, i64 %2080
  %2082 = and i32 %1581, 7
  %2083 = and i32 %2065, 7
  %2084 = call i32 %2075(i8* %2081, i32 %26, i32 %2082, i32 %2083, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2097

2085:                                             ; preds = %2069
  %2086 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2087 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2086, align 8
  %2088 = ashr i32 %2065, 3
  %2089 = mul nsw i32 %2088, %26
  %2090 = ashr i32 %1581, 3
  %2091 = add nsw i32 %2089, %2090
  %2092 = sext i32 %2091 to i64
  %2093 = getelementptr inbounds i8, i8* %36, i64 %2092
  %2094 = and i32 %1581, 7
  %2095 = and i32 %2065, 7
  %2096 = call i32 %2087(i8* %2093, i32 %26, i32 %2094, i32 %2095, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2097

2097:                                             ; preds = %2085, %2073
  %2098 = phi i32 [ %2084, %2073 ], [ %2096, %2085 ]
  %2099 = sext i32 %2098 to i64
  %2100 = icmp eq i32** %10, null
  br i1 %2100, label %2128, label %2101

2101:                                             ; preds = %2097
  %2102 = sub i16 %2070, %38
  %2103 = sub i16 %2071, %40
  %2104 = icmp eq i16 %2102, 0
  %2105 = icmp eq i16 %2103, 0
  %2106 = xor i1 %2105, true
  %2107 = zext i1 %2106 to i64
  %2108 = select i1 %2105, i64 2, i64 3
  %2109 = select i1 %2104, i64 %2107, i64 %2108
  %2110 = getelementptr inbounds i32, i32* %9, i64 %2109
  %2111 = load i32, i32* %2110, align 4
  %2112 = load i32*, i32** %10, align 8
  %2113 = sext i16 %2102 to i64
  %2114 = getelementptr inbounds i32, i32* %2112, i64 %2113
  %2115 = load i32, i32* %2114, align 4
  %2116 = add nsw i32 %2115, %2111
  %2117 = getelementptr inbounds i32*, i32** %10, i64 1
  %2118 = load i32*, i32** %2117, align 8
  %2119 = sext i16 %2103 to i64
  %2120 = getelementptr inbounds i32, i32* %2118, i64 %2119
  %2121 = load i32, i32* %2120, align 4
  %2122 = add nsw i32 %2116, %2121
  %2123 = sext i32 %2122 to i64
  %2124 = sext i32 %4 to i64
  %2125 = mul nsw i64 %2123, %2124
  %2126 = add nsw i64 %2125, 8192
  %2127 = lshr i64 %2126, 14
  br label %2128

2128:                                             ; preds = %2097, %2101
  %2129 = phi i64 [ %2127, %2101 ], [ 0, %2097 ]
  %2130 = shl i64 %2129, 32
  %2131 = ashr exact i64 %2130, 32
  %2132 = add nsw i64 %2131, %2099
  %2133 = icmp sgt i64 %2132, 2147483646
  br i1 %2133, label %2216, label %2134

2134:                                             ; preds = %2128
  %2135 = trunc i64 %2132 to i32
  %2136 = icmp ugt i32 %1902, %2135
  br i1 %2136, label %2137, label %2216

2137:                                             ; preds = %2134
  store i32 %2098, i32* %11, align 4
  %2138 = load i32, i32* %18, align 4
  store i32 %2138, i32* %12, align 4
  br label %2216

2139:                                             ; preds = %1900
  br i1 %1666, label %2216, label %2140

2140:                                             ; preds = %2139
  %2141 = add nsw i32 %1577, 2
  %2142 = icmp slt i32 %2141, %74
  %2143 = icmp sgt i32 %2141, %76
  %2144 = or i1 %2142, %2143
  br i1 %2144, label %2216, label %2145

2145:                                             ; preds = %2140
  %2146 = trunc i32 %2141 to i16
  %2147 = trunc i32 %1663 to i16
  %2148 = icmp eq i8* %13, null
  br i1 %2148, label %2149, label %2161

2149:                                             ; preds = %2145
  %2150 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2151 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2150, align 8
  %2152 = ashr i32 %2141, 3
  %2153 = mul nsw i32 %2152, %26
  %2154 = ashr i32 %1663, 3
  %2155 = add nsw i32 %2153, %2154
  %2156 = sext i32 %2155 to i64
  %2157 = getelementptr inbounds i8, i8* %36, i64 %2156
  %2158 = and i32 %1663, 7
  %2159 = and i32 %2141, 7
  %2160 = call i32 %2151(i8* %2157, i32 %26, i32 %2158, i32 %2159, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2173

2161:                                             ; preds = %2145
  %2162 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2163 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2162, align 8
  %2164 = ashr i32 %2141, 3
  %2165 = mul nsw i32 %2164, %26
  %2166 = ashr i32 %1663, 3
  %2167 = add nsw i32 %2165, %2166
  %2168 = sext i32 %2167 to i64
  %2169 = getelementptr inbounds i8, i8* %36, i64 %2168
  %2170 = and i32 %1663, 7
  %2171 = and i32 %2141, 7
  %2172 = call i32 %2163(i8* %2169, i32 %26, i32 %2170, i32 %2171, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2173

2173:                                             ; preds = %2161, %2149
  %2174 = phi i32 [ %2160, %2149 ], [ %2172, %2161 ]
  %2175 = sext i32 %2174 to i64
  %2176 = icmp eq i32** %10, null
  br i1 %2176, label %2204, label %2177

2177:                                             ; preds = %2173
  %2178 = sub i16 %2146, %38
  %2179 = sub i16 %2147, %40
  %2180 = icmp eq i16 %2178, 0
  %2181 = icmp eq i16 %2179, 0
  %2182 = xor i1 %2181, true
  %2183 = zext i1 %2182 to i64
  %2184 = select i1 %2181, i64 2, i64 3
  %2185 = select i1 %2180, i64 %2183, i64 %2184
  %2186 = getelementptr inbounds i32, i32* %9, i64 %2185
  %2187 = load i32, i32* %2186, align 4
  %2188 = load i32*, i32** %10, align 8
  %2189 = sext i16 %2178 to i64
  %2190 = getelementptr inbounds i32, i32* %2188, i64 %2189
  %2191 = load i32, i32* %2190, align 4
  %2192 = add nsw i32 %2191, %2187
  %2193 = getelementptr inbounds i32*, i32** %10, i64 1
  %2194 = load i32*, i32** %2193, align 8
  %2195 = sext i16 %2179 to i64
  %2196 = getelementptr inbounds i32, i32* %2194, i64 %2195
  %2197 = load i32, i32* %2196, align 4
  %2198 = add nsw i32 %2192, %2197
  %2199 = sext i32 %2198 to i64
  %2200 = sext i32 %4 to i64
  %2201 = mul nsw i64 %2199, %2200
  %2202 = add nsw i64 %2201, 8192
  %2203 = lshr i64 %2202, 14
  br label %2204

2204:                                             ; preds = %2173, %2177
  %2205 = phi i64 [ %2203, %2177 ], [ 0, %2173 ]
  %2206 = shl i64 %2205, 32
  %2207 = ashr exact i64 %2206, 32
  %2208 = add nsw i64 %2207, %2175
  %2209 = icmp sgt i64 %2208, 2147483646
  br i1 %2209, label %2216, label %2210

2210:                                             ; preds = %2204
  %2211 = trunc i64 %2208 to i32
  %2212 = icmp ugt i32 %1902, %2211
  br i1 %2212, label %2213, label %2216

2213:                                             ; preds = %2210
  store i32 %2174, i32* %11, align 4
  %2214 = load i32, i32* %18, align 4
  store i32 %2214, i32* %12, align 4
  br label %2216

2215:                                             ; preds = %1900
  unreachable

2216:                                             ; preds = %2213, %2210, %2204, %2137, %2134, %2128, %2061, %2058, %2052, %1985, %1982, %1976, %2140, %2139, %2064, %2063, %1988, %1987, %1912, %1911
  %2217 = phi i32 [ %1902, %1911 ], [ %1902, %1912 ], [ %1902, %1987 ], [ %1902, %1988 ], [ %1902, %2063 ], [ %1902, %2064 ], [ %1902, %2139 ], [ %1902, %2140 ], [ %1983, %1985 ], [ %1902, %1982 ], [ %1902, %1976 ], [ %2059, %2061 ], [ %1902, %2058 ], [ %1902, %2052 ], [ %2135, %2137 ], [ %1902, %2134 ], [ %1902, %2128 ], [ %2211, %2213 ], [ %1902, %2210 ], [ %1902, %2204 ]
  %2218 = phi i32 [ %1903, %1911 ], [ %1903, %1912 ], [ %1903, %1987 ], [ %1903, %1988 ], [ %1903, %2063 ], [ %1903, %2064 ], [ %1903, %2139 ], [ %1903, %2140 ], [ %1913, %1985 ], [ %1903, %1982 ], [ %1903, %1976 ], [ %1989, %2061 ], [ %1903, %2058 ], [ %1903, %2052 ], [ %2065, %2137 ], [ %1903, %2134 ], [ %1903, %2128 ], [ %2141, %2213 ], [ %1903, %2210 ], [ %1903, %2204 ]
  %2219 = phi i32 [ %1904, %1911 ], [ %1904, %1912 ], [ %1904, %1987 ], [ %1904, %1988 ], [ %1904, %2063 ], [ %1904, %2064 ], [ %1904, %2139 ], [ %1904, %2140 ], [ %1581, %1985 ], [ %1904, %1982 ], [ %1904, %1976 ], [ %1663, %2061 ], [ %1904, %2058 ], [ %1904, %2052 ], [ %1581, %2137 ], [ %1904, %2134 ], [ %1904, %2128 ], [ %1663, %2213 ], [ %1904, %2210 ], [ %1904, %2204 ]
  br i1 %796, label %2220, label %3026

2220:                                             ; preds = %2216
  %2221 = icmp ne i32 %2218, %1577
  %2222 = xor i1 %2221, true
  %2223 = icmp eq i32 %2219, %1578
  %2224 = or i1 %2223, %2222
  br i1 %2224, label %2389, label %2225

2225:                                             ; preds = %2220
  %2226 = sub nsw i32 %2218, %1577
  %2227 = sub nsw i32 %2219, %1578
  %2228 = shl nsw i32 %2227, 1
  %2229 = add nsw i32 %2228, %1578
  %2230 = icmp slt i32 %2229, %70
  %2231 = icmp sgt i32 %2229, %72
  %2232 = or i1 %2230, %2231
  %2233 = icmp slt i32 %2218, %74
  %2234 = or i1 %2233, %2232
  %2235 = icmp sgt i32 %2218, %76
  %2236 = or i1 %2235, %2234
  br i1 %2236, label %2307, label %2237

2237:                                             ; preds = %2225
  %2238 = trunc i32 %2218 to i16
  %2239 = trunc i32 %2229 to i16
  %2240 = icmp eq i8* %13, null
  br i1 %2240, label %2241, label %2253

2241:                                             ; preds = %2237
  %2242 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2243 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2242, align 8
  %2244 = ashr i32 %2218, 3
  %2245 = mul nsw i32 %2244, %26
  %2246 = ashr i32 %2229, 3
  %2247 = add nsw i32 %2246, %2245
  %2248 = sext i32 %2247 to i64
  %2249 = getelementptr inbounds i8, i8* %36, i64 %2248
  %2250 = and i32 %2229, 7
  %2251 = and i32 %2218, 7
  %2252 = call i32 %2243(i8* %2249, i32 %26, i32 %2250, i32 %2251, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2265

2253:                                             ; preds = %2237
  %2254 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2255 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2254, align 8
  %2256 = ashr i32 %2218, 3
  %2257 = mul nsw i32 %2256, %26
  %2258 = ashr i32 %2229, 3
  %2259 = add nsw i32 %2258, %2257
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds i8, i8* %36, i64 %2260
  %2262 = and i32 %2229, 7
  %2263 = and i32 %2218, 7
  %2264 = call i32 %2255(i8* %2261, i32 %26, i32 %2262, i32 %2263, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2265

2265:                                             ; preds = %2253, %2241
  %2266 = phi i32 [ %2252, %2241 ], [ %2264, %2253 ]
  %2267 = sext i32 %2266 to i64
  %2268 = icmp eq i32** %10, null
  br i1 %2268, label %2296, label %2269

2269:                                             ; preds = %2265
  %2270 = sub i16 %2238, %38
  %2271 = sub i16 %2239, %40
  %2272 = icmp eq i16 %2270, 0
  %2273 = icmp eq i16 %2271, 0
  %2274 = xor i1 %2273, true
  %2275 = zext i1 %2274 to i64
  %2276 = select i1 %2273, i64 2, i64 3
  %2277 = select i1 %2272, i64 %2275, i64 %2276
  %2278 = getelementptr inbounds i32, i32* %9, i64 %2277
  %2279 = load i32, i32* %2278, align 4
  %2280 = load i32*, i32** %10, align 8
  %2281 = sext i16 %2270 to i64
  %2282 = getelementptr inbounds i32, i32* %2280, i64 %2281
  %2283 = load i32, i32* %2282, align 4
  %2284 = add nsw i32 %2283, %2279
  %2285 = getelementptr inbounds i32*, i32** %10, i64 1
  %2286 = load i32*, i32** %2285, align 8
  %2287 = sext i16 %2271 to i64
  %2288 = getelementptr inbounds i32, i32* %2286, i64 %2287
  %2289 = load i32, i32* %2288, align 4
  %2290 = add nsw i32 %2284, %2289
  %2291 = sext i32 %2290 to i64
  %2292 = sext i32 %4 to i64
  %2293 = mul nsw i64 %2291, %2292
  %2294 = add nsw i64 %2293, 8192
  %2295 = lshr i64 %2294, 14
  br label %2296

2296:                                             ; preds = %2265, %2269
  %2297 = phi i64 [ %2295, %2269 ], [ 0, %2265 ]
  %2298 = shl i64 %2297, 32
  %2299 = ashr exact i64 %2298, 32
  %2300 = add nsw i64 %2299, %2267
  %2301 = icmp sgt i64 %2300, 2147483646
  br i1 %2301, label %2307, label %2302

2302:                                             ; preds = %2296
  %2303 = trunc i64 %2300 to i32
  %2304 = icmp ugt i32 %2217, %2303
  br i1 %2304, label %2305, label %2307

2305:                                             ; preds = %2302
  store i32 %2266, i32* %11, align 4
  %2306 = load i32, i32* %18, align 4
  store i32 %2306, i32* %12, align 4
  br label %2307

2307:                                             ; preds = %2305, %2302, %2296, %2225
  %2308 = phi i32 [ %2217, %2225 ], [ %2303, %2305 ], [ %2217, %2302 ], [ %2217, %2296 ]
  %2309 = phi i32 [ %2219, %2225 ], [ %2229, %2305 ], [ %2219, %2302 ], [ %2219, %2296 ]
  %2310 = icmp slt i32 %2219, %70
  %2311 = icmp sgt i32 %2219, %72
  %2312 = or i1 %2310, %2311
  br i1 %2312, label %3026, label %2313

2313:                                             ; preds = %2307
  %2314 = shl nsw i32 %2226, 1
  %2315 = add nsw i32 %2314, %1577
  %2316 = icmp slt i32 %2315, %74
  %2317 = icmp sgt i32 %2315, %76
  %2318 = or i1 %2316, %2317
  br i1 %2318, label %3026, label %2319

2319:                                             ; preds = %2313
  %2320 = trunc i32 %2315 to i16
  %2321 = trunc i32 %2219 to i16
  %2322 = icmp eq i8* %13, null
  br i1 %2322, label %2323, label %2335

2323:                                             ; preds = %2319
  %2324 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2325 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2324, align 8
  %2326 = ashr i32 %2315, 3
  %2327 = mul nsw i32 %2326, %26
  %2328 = ashr i32 %2219, 3
  %2329 = add nsw i32 %2327, %2328
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds i8, i8* %36, i64 %2330
  %2332 = and i32 %2219, 7
  %2333 = and i32 %2315, 7
  %2334 = call i32 %2325(i8* %2331, i32 %26, i32 %2332, i32 %2333, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2347

2335:                                             ; preds = %2319
  %2336 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2337 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2336, align 8
  %2338 = ashr i32 %2315, 3
  %2339 = mul nsw i32 %2338, %26
  %2340 = ashr i32 %2219, 3
  %2341 = add nsw i32 %2339, %2340
  %2342 = sext i32 %2341 to i64
  %2343 = getelementptr inbounds i8, i8* %36, i64 %2342
  %2344 = and i32 %2219, 7
  %2345 = and i32 %2315, 7
  %2346 = call i32 %2337(i8* %2343, i32 %26, i32 %2344, i32 %2345, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2347

2347:                                             ; preds = %2335, %2323
  %2348 = phi i32 [ %2334, %2323 ], [ %2346, %2335 ]
  %2349 = sext i32 %2348 to i64
  %2350 = icmp eq i32** %10, null
  br i1 %2350, label %2378, label %2351

2351:                                             ; preds = %2347
  %2352 = sub i16 %2320, %38
  %2353 = sub i16 %2321, %40
  %2354 = icmp eq i16 %2352, 0
  %2355 = icmp eq i16 %2353, 0
  %2356 = xor i1 %2355, true
  %2357 = zext i1 %2356 to i64
  %2358 = select i1 %2355, i64 2, i64 3
  %2359 = select i1 %2354, i64 %2357, i64 %2358
  %2360 = getelementptr inbounds i32, i32* %9, i64 %2359
  %2361 = load i32, i32* %2360, align 4
  %2362 = load i32*, i32** %10, align 8
  %2363 = sext i16 %2352 to i64
  %2364 = getelementptr inbounds i32, i32* %2362, i64 %2363
  %2365 = load i32, i32* %2364, align 4
  %2366 = add nsw i32 %2365, %2361
  %2367 = getelementptr inbounds i32*, i32** %10, i64 1
  %2368 = load i32*, i32** %2367, align 8
  %2369 = sext i16 %2353 to i64
  %2370 = getelementptr inbounds i32, i32* %2368, i64 %2369
  %2371 = load i32, i32* %2370, align 4
  %2372 = add nsw i32 %2366, %2371
  %2373 = sext i32 %2372 to i64
  %2374 = sext i32 %4 to i64
  %2375 = mul nsw i64 %2373, %2374
  %2376 = add nsw i64 %2375, 8192
  %2377 = lshr i64 %2376, 14
  br label %2378

2378:                                             ; preds = %2347, %2351
  %2379 = phi i64 [ %2377, %2351 ], [ 0, %2347 ]
  %2380 = shl i64 %2379, 32
  %2381 = ashr exact i64 %2380, 32
  %2382 = add nsw i64 %2381, %2349
  %2383 = icmp sgt i64 %2382, 2147483646
  br i1 %2383, label %3026, label %2384

2384:                                             ; preds = %2378
  %2385 = trunc i64 %2382 to i32
  %2386 = icmp ugt i32 %2308, %2385
  br i1 %2386, label %2387, label %3026

2387:                                             ; preds = %2384
  store i32 %2348, i32* %11, align 4
  %2388 = load i32, i32* %18, align 4
  store i32 %2388, i32* %12, align 4
  br label %3026

2389:                                             ; preds = %2220
  %2390 = or i1 %2221, %2223
  br i1 %2390, label %2711, label %2391

2391:                                             ; preds = %2389
  %2392 = sub nsw i32 %2219, %1578
  %2393 = shl nsw i32 %2392, 1
  %2394 = add nsw i32 %2393, %1578
  %2395 = icmp slt i32 %2394, %70
  %2396 = icmp sgt i32 %2394, %72
  %2397 = or i1 %2395, %2396
  br i1 %2397, label %2551, label %2398

2398:                                             ; preds = %2391
  %2399 = add nsw i32 %1577, 2
  %2400 = icmp slt i32 %2399, %74
  %2401 = icmp sgt i32 %2399, %76
  %2402 = or i1 %2400, %2401
  br i1 %2402, label %2473, label %2403

2403:                                             ; preds = %2398
  %2404 = trunc i32 %2399 to i16
  %2405 = trunc i32 %2394 to i16
  %2406 = icmp eq i8* %13, null
  br i1 %2406, label %2407, label %2419

2407:                                             ; preds = %2403
  %2408 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2409 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2408, align 8
  %2410 = ashr i32 %2399, 3
  %2411 = mul nsw i32 %2410, %26
  %2412 = ashr i32 %2394, 3
  %2413 = add nsw i32 %2412, %2411
  %2414 = sext i32 %2413 to i64
  %2415 = getelementptr inbounds i8, i8* %36, i64 %2414
  %2416 = and i32 %2394, 7
  %2417 = and i32 %2399, 7
  %2418 = call i32 %2409(i8* %2415, i32 %26, i32 %2416, i32 %2417, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2431

2419:                                             ; preds = %2403
  %2420 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2421 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2420, align 8
  %2422 = ashr i32 %2399, 3
  %2423 = mul nsw i32 %2422, %26
  %2424 = ashr i32 %2394, 3
  %2425 = add nsw i32 %2424, %2423
  %2426 = sext i32 %2425 to i64
  %2427 = getelementptr inbounds i8, i8* %36, i64 %2426
  %2428 = and i32 %2394, 7
  %2429 = and i32 %2399, 7
  %2430 = call i32 %2421(i8* %2427, i32 %26, i32 %2428, i32 %2429, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2431

2431:                                             ; preds = %2419, %2407
  %2432 = phi i32 [ %2418, %2407 ], [ %2430, %2419 ]
  %2433 = sext i32 %2432 to i64
  %2434 = icmp eq i32** %10, null
  br i1 %2434, label %2462, label %2435

2435:                                             ; preds = %2431
  %2436 = sub i16 %2404, %38
  %2437 = sub i16 %2405, %40
  %2438 = icmp eq i16 %2436, 0
  %2439 = icmp eq i16 %2437, 0
  %2440 = xor i1 %2439, true
  %2441 = zext i1 %2440 to i64
  %2442 = select i1 %2439, i64 2, i64 3
  %2443 = select i1 %2438, i64 %2441, i64 %2442
  %2444 = getelementptr inbounds i32, i32* %9, i64 %2443
  %2445 = load i32, i32* %2444, align 4
  %2446 = load i32*, i32** %10, align 8
  %2447 = sext i16 %2436 to i64
  %2448 = getelementptr inbounds i32, i32* %2446, i64 %2447
  %2449 = load i32, i32* %2448, align 4
  %2450 = add nsw i32 %2449, %2445
  %2451 = getelementptr inbounds i32*, i32** %10, i64 1
  %2452 = load i32*, i32** %2451, align 8
  %2453 = sext i16 %2437 to i64
  %2454 = getelementptr inbounds i32, i32* %2452, i64 %2453
  %2455 = load i32, i32* %2454, align 4
  %2456 = add nsw i32 %2450, %2455
  %2457 = sext i32 %2456 to i64
  %2458 = sext i32 %4 to i64
  %2459 = mul nsw i64 %2457, %2458
  %2460 = add nsw i64 %2459, 8192
  %2461 = lshr i64 %2460, 14
  br label %2462

2462:                                             ; preds = %2431, %2435
  %2463 = phi i64 [ %2461, %2435 ], [ 0, %2431 ]
  %2464 = shl i64 %2463, 32
  %2465 = ashr exact i64 %2464, 32
  %2466 = add nsw i64 %2465, %2433
  %2467 = icmp sgt i64 %2466, 2147483646
  br i1 %2467, label %2473, label %2468

2468:                                             ; preds = %2462
  %2469 = trunc i64 %2466 to i32
  %2470 = icmp ugt i32 %2217, %2469
  br i1 %2470, label %2471, label %2473

2471:                                             ; preds = %2468
  store i32 %2432, i32* %11, align 4
  %2472 = load i32, i32* %18, align 4
  store i32 %2472, i32* %12, align 4
  br label %2473

2473:                                             ; preds = %2471, %2468, %2462, %2398
  %2474 = phi i32 [ %2217, %2462 ], [ %2217, %2468 ], [ %2469, %2471 ], [ %2217, %2398 ]
  %2475 = phi i32 [ %1577, %2462 ], [ %1577, %2468 ], [ %2399, %2471 ], [ %1577, %2398 ]
  %2476 = phi i32 [ %2219, %2462 ], [ %2219, %2468 ], [ %2394, %2471 ], [ %2219, %2398 ]
  %2477 = add nsw i32 %1577, -2
  %2478 = icmp slt i32 %2477, %74
  %2479 = icmp sgt i32 %2477, %76
  %2480 = or i1 %2478, %2479
  br i1 %2480, label %2551, label %2481

2481:                                             ; preds = %2473
  %2482 = trunc i32 %2477 to i16
  %2483 = trunc i32 %2394 to i16
  %2484 = icmp eq i8* %13, null
  br i1 %2484, label %2485, label %2497

2485:                                             ; preds = %2481
  %2486 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2487 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2486, align 8
  %2488 = ashr i32 %2477, 3
  %2489 = mul nsw i32 %2488, %26
  %2490 = ashr i32 %2394, 3
  %2491 = add nsw i32 %2490, %2489
  %2492 = sext i32 %2491 to i64
  %2493 = getelementptr inbounds i8, i8* %36, i64 %2492
  %2494 = and i32 %2394, 7
  %2495 = and i32 %2477, 7
  %2496 = call i32 %2487(i8* %2493, i32 %26, i32 %2494, i32 %2495, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2509

2497:                                             ; preds = %2481
  %2498 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2499 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2498, align 8
  %2500 = ashr i32 %2477, 3
  %2501 = mul nsw i32 %2500, %26
  %2502 = ashr i32 %2394, 3
  %2503 = add nsw i32 %2502, %2501
  %2504 = sext i32 %2503 to i64
  %2505 = getelementptr inbounds i8, i8* %36, i64 %2504
  %2506 = and i32 %2394, 7
  %2507 = and i32 %2477, 7
  %2508 = call i32 %2499(i8* %2505, i32 %26, i32 %2506, i32 %2507, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2509

2509:                                             ; preds = %2497, %2485
  %2510 = phi i32 [ %2496, %2485 ], [ %2508, %2497 ]
  %2511 = sext i32 %2510 to i64
  %2512 = icmp eq i32** %10, null
  br i1 %2512, label %2540, label %2513

2513:                                             ; preds = %2509
  %2514 = sub i16 %2482, %38
  %2515 = sub i16 %2483, %40
  %2516 = icmp eq i16 %2514, 0
  %2517 = icmp eq i16 %2515, 0
  %2518 = xor i1 %2517, true
  %2519 = zext i1 %2518 to i64
  %2520 = select i1 %2517, i64 2, i64 3
  %2521 = select i1 %2516, i64 %2519, i64 %2520
  %2522 = getelementptr inbounds i32, i32* %9, i64 %2521
  %2523 = load i32, i32* %2522, align 4
  %2524 = load i32*, i32** %10, align 8
  %2525 = sext i16 %2514 to i64
  %2526 = getelementptr inbounds i32, i32* %2524, i64 %2525
  %2527 = load i32, i32* %2526, align 4
  %2528 = add nsw i32 %2527, %2523
  %2529 = getelementptr inbounds i32*, i32** %10, i64 1
  %2530 = load i32*, i32** %2529, align 8
  %2531 = sext i16 %2515 to i64
  %2532 = getelementptr inbounds i32, i32* %2530, i64 %2531
  %2533 = load i32, i32* %2532, align 4
  %2534 = add nsw i32 %2528, %2533
  %2535 = sext i32 %2534 to i64
  %2536 = sext i32 %4 to i64
  %2537 = mul nsw i64 %2535, %2536
  %2538 = add nsw i64 %2537, 8192
  %2539 = lshr i64 %2538, 14
  br label %2540

2540:                                             ; preds = %2509, %2513
  %2541 = phi i64 [ %2539, %2513 ], [ 0, %2509 ]
  %2542 = shl i64 %2541, 32
  %2543 = ashr exact i64 %2542, 32
  %2544 = add nsw i64 %2543, %2511
  %2545 = icmp sgt i64 %2544, 2147483646
  br i1 %2545, label %2551, label %2546

2546:                                             ; preds = %2540
  %2547 = trunc i64 %2544 to i32
  %2548 = icmp ugt i32 %2474, %2547
  br i1 %2548, label %2549, label %2551

2549:                                             ; preds = %2546
  store i32 %2510, i32* %11, align 4
  %2550 = load i32, i32* %18, align 4
  store i32 %2550, i32* %12, align 4
  br label %2551

2551:                                             ; preds = %2549, %2546, %2540, %2391, %2473
  %2552 = phi i32 [ %2474, %2473 ], [ %2217, %2391 ], [ %2547, %2549 ], [ %2474, %2546 ], [ %2474, %2540 ]
  %2553 = phi i32 [ %2475, %2473 ], [ %1577, %2391 ], [ %2477, %2549 ], [ %2475, %2546 ], [ %2475, %2540 ]
  %2554 = phi i32 [ %2476, %2473 ], [ %2219, %2391 ], [ %2394, %2549 ], [ %2476, %2546 ], [ %2476, %2540 ]
  %2555 = icmp ult i32 %1910, 2
  %2556 = icmp slt i32 %2219, %70
  %2557 = icmp sgt i32 %2219, %72
  %2558 = or i1 %2556, %2557
  br i1 %2555, label %2559, label %2635

2559:                                             ; preds = %2551
  br i1 %2558, label %3026, label %2560

2560:                                             ; preds = %2559
  %2561 = add nsw i32 %1577, 2
  %2562 = icmp slt i32 %2561, %74
  %2563 = icmp sgt i32 %2561, %76
  %2564 = or i1 %2562, %2563
  br i1 %2564, label %3026, label %2565

2565:                                             ; preds = %2560
  %2566 = trunc i32 %2561 to i16
  %2567 = trunc i32 %2219 to i16
  %2568 = icmp eq i8* %13, null
  br i1 %2568, label %2569, label %2581

2569:                                             ; preds = %2565
  %2570 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2571 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2570, align 8
  %2572 = ashr i32 %2561, 3
  %2573 = mul nsw i32 %2572, %26
  %2574 = ashr i32 %2219, 3
  %2575 = add nsw i32 %2574, %2573
  %2576 = sext i32 %2575 to i64
  %2577 = getelementptr inbounds i8, i8* %36, i64 %2576
  %2578 = and i32 %2219, 7
  %2579 = and i32 %2561, 7
  %2580 = call i32 %2571(i8* %2577, i32 %26, i32 %2578, i32 %2579, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2593

2581:                                             ; preds = %2565
  %2582 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2583 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2582, align 8
  %2584 = ashr i32 %2561, 3
  %2585 = mul nsw i32 %2584, %26
  %2586 = ashr i32 %2219, 3
  %2587 = add nsw i32 %2586, %2585
  %2588 = sext i32 %2587 to i64
  %2589 = getelementptr inbounds i8, i8* %36, i64 %2588
  %2590 = and i32 %2219, 7
  %2591 = and i32 %2561, 7
  %2592 = call i32 %2583(i8* %2589, i32 %26, i32 %2590, i32 %2591, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2593

2593:                                             ; preds = %2581, %2569
  %2594 = phi i32 [ %2580, %2569 ], [ %2592, %2581 ]
  %2595 = sext i32 %2594 to i64
  %2596 = icmp eq i32** %10, null
  br i1 %2596, label %2624, label %2597

2597:                                             ; preds = %2593
  %2598 = sub i16 %2566, %38
  %2599 = sub i16 %2567, %40
  %2600 = icmp eq i16 %2598, 0
  %2601 = icmp eq i16 %2599, 0
  %2602 = xor i1 %2601, true
  %2603 = zext i1 %2602 to i64
  %2604 = select i1 %2601, i64 2, i64 3
  %2605 = select i1 %2600, i64 %2603, i64 %2604
  %2606 = getelementptr inbounds i32, i32* %9, i64 %2605
  %2607 = load i32, i32* %2606, align 4
  %2608 = load i32*, i32** %10, align 8
  %2609 = sext i16 %2598 to i64
  %2610 = getelementptr inbounds i32, i32* %2608, i64 %2609
  %2611 = load i32, i32* %2610, align 4
  %2612 = add nsw i32 %2611, %2607
  %2613 = getelementptr inbounds i32*, i32** %10, i64 1
  %2614 = load i32*, i32** %2613, align 8
  %2615 = sext i16 %2599 to i64
  %2616 = getelementptr inbounds i32, i32* %2614, i64 %2615
  %2617 = load i32, i32* %2616, align 4
  %2618 = add nsw i32 %2612, %2617
  %2619 = sext i32 %2618 to i64
  %2620 = sext i32 %4 to i64
  %2621 = mul nsw i64 %2619, %2620
  %2622 = add nsw i64 %2621, 8192
  %2623 = lshr i64 %2622, 14
  br label %2624

2624:                                             ; preds = %2593, %2597
  %2625 = phi i64 [ %2623, %2597 ], [ 0, %2593 ]
  %2626 = shl i64 %2625, 32
  %2627 = ashr exact i64 %2626, 32
  %2628 = add nsw i64 %2627, %2595
  %2629 = icmp sgt i64 %2628, 2147483646
  br i1 %2629, label %3026, label %2630

2630:                                             ; preds = %2624
  %2631 = trunc i64 %2628 to i32
  %2632 = icmp ugt i32 %2552, %2631
  br i1 %2632, label %2633, label %3026

2633:                                             ; preds = %2630
  store i32 %2594, i32* %11, align 4
  %2634 = load i32, i32* %18, align 4
  store i32 %2634, i32* %12, align 4
  br label %3026

2635:                                             ; preds = %2551
  br i1 %2558, label %3026, label %2636

2636:                                             ; preds = %2635
  %2637 = add nsw i32 %1577, -2
  %2638 = icmp slt i32 %2637, %74
  %2639 = icmp sgt i32 %2637, %76
  %2640 = or i1 %2638, %2639
  br i1 %2640, label %3026, label %2641

2641:                                             ; preds = %2636
  %2642 = trunc i32 %2637 to i16
  %2643 = trunc i32 %2219 to i16
  %2644 = icmp eq i8* %13, null
  br i1 %2644, label %2645, label %2657

2645:                                             ; preds = %2641
  %2646 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2647 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2646, align 8
  %2648 = ashr i32 %2637, 3
  %2649 = mul nsw i32 %2648, %26
  %2650 = ashr i32 %2219, 3
  %2651 = add nsw i32 %2650, %2649
  %2652 = sext i32 %2651 to i64
  %2653 = getelementptr inbounds i8, i8* %36, i64 %2652
  %2654 = and i32 %2219, 7
  %2655 = and i32 %2637, 7
  %2656 = call i32 %2647(i8* %2653, i32 %26, i32 %2654, i32 %2655, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2669

2657:                                             ; preds = %2641
  %2658 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2659 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2658, align 8
  %2660 = ashr i32 %2637, 3
  %2661 = mul nsw i32 %2660, %26
  %2662 = ashr i32 %2219, 3
  %2663 = add nsw i32 %2662, %2661
  %2664 = sext i32 %2663 to i64
  %2665 = getelementptr inbounds i8, i8* %36, i64 %2664
  %2666 = and i32 %2219, 7
  %2667 = and i32 %2637, 7
  %2668 = call i32 %2659(i8* %2665, i32 %26, i32 %2666, i32 %2667, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2669

2669:                                             ; preds = %2657, %2645
  %2670 = phi i32 [ %2656, %2645 ], [ %2668, %2657 ]
  %2671 = sext i32 %2670 to i64
  %2672 = icmp eq i32** %10, null
  br i1 %2672, label %2700, label %2673

2673:                                             ; preds = %2669
  %2674 = sub i16 %2642, %38
  %2675 = sub i16 %2643, %40
  %2676 = icmp eq i16 %2674, 0
  %2677 = icmp eq i16 %2675, 0
  %2678 = xor i1 %2677, true
  %2679 = zext i1 %2678 to i64
  %2680 = select i1 %2677, i64 2, i64 3
  %2681 = select i1 %2676, i64 %2679, i64 %2680
  %2682 = getelementptr inbounds i32, i32* %9, i64 %2681
  %2683 = load i32, i32* %2682, align 4
  %2684 = load i32*, i32** %10, align 8
  %2685 = sext i16 %2674 to i64
  %2686 = getelementptr inbounds i32, i32* %2684, i64 %2685
  %2687 = load i32, i32* %2686, align 4
  %2688 = add nsw i32 %2687, %2683
  %2689 = getelementptr inbounds i32*, i32** %10, i64 1
  %2690 = load i32*, i32** %2689, align 8
  %2691 = sext i16 %2675 to i64
  %2692 = getelementptr inbounds i32, i32* %2690, i64 %2691
  %2693 = load i32, i32* %2692, align 4
  %2694 = add nsw i32 %2688, %2693
  %2695 = sext i32 %2694 to i64
  %2696 = sext i32 %4 to i64
  %2697 = mul nsw i64 %2695, %2696
  %2698 = add nsw i64 %2697, 8192
  %2699 = lshr i64 %2698, 14
  br label %2700

2700:                                             ; preds = %2669, %2673
  %2701 = phi i64 [ %2699, %2673 ], [ 0, %2669 ]
  %2702 = shl i64 %2701, 32
  %2703 = ashr exact i64 %2702, 32
  %2704 = add nsw i64 %2703, %2671
  %2705 = icmp sgt i64 %2704, 2147483646
  br i1 %2705, label %3026, label %2706

2706:                                             ; preds = %2700
  %2707 = trunc i64 %2704 to i32
  %2708 = icmp ugt i32 %2552, %2707
  br i1 %2708, label %2709, label %3026

2709:                                             ; preds = %2706
  store i32 %2670, i32* %11, align 4
  %2710 = load i32, i32* %18, align 4
  store i32 %2710, i32* %12, align 4
  br label %3026

2711:                                             ; preds = %2389
  %2712 = and i1 %2221, %2223
  br i1 %2712, label %2713, label %3026

2713:                                             ; preds = %2711
  %2714 = sub nsw i32 %2218, %1577
  br i1 %1666, label %2791, label %2715

2715:                                             ; preds = %2713
  %2716 = shl nsw i32 %2714, 1
  %2717 = add nsw i32 %2716, %1577
  %2718 = icmp slt i32 %2717, %74
  %2719 = icmp sgt i32 %2717, %76
  %2720 = or i1 %2718, %2719
  br i1 %2720, label %2791, label %2721

2721:                                             ; preds = %2715
  %2722 = trunc i32 %2717 to i16
  %2723 = trunc i32 %1663 to i16
  %2724 = icmp eq i8* %13, null
  br i1 %2724, label %2725, label %2737

2725:                                             ; preds = %2721
  %2726 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2727 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2726, align 8
  %2728 = ashr i32 %2717, 3
  %2729 = mul nsw i32 %2728, %26
  %2730 = ashr i32 %1663, 3
  %2731 = add nsw i32 %2729, %2730
  %2732 = sext i32 %2731 to i64
  %2733 = getelementptr inbounds i8, i8* %36, i64 %2732
  %2734 = and i32 %1663, 7
  %2735 = and i32 %2717, 7
  %2736 = call i32 %2727(i8* %2733, i32 %26, i32 %2734, i32 %2735, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2749

2737:                                             ; preds = %2721
  %2738 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2739 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2738, align 8
  %2740 = ashr i32 %2717, 3
  %2741 = mul nsw i32 %2740, %26
  %2742 = ashr i32 %1663, 3
  %2743 = add nsw i32 %2741, %2742
  %2744 = sext i32 %2743 to i64
  %2745 = getelementptr inbounds i8, i8* %36, i64 %2744
  %2746 = and i32 %1663, 7
  %2747 = and i32 %2717, 7
  %2748 = call i32 %2739(i8* %2745, i32 %26, i32 %2746, i32 %2747, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2749

2749:                                             ; preds = %2737, %2725
  %2750 = phi i32 [ %2736, %2725 ], [ %2748, %2737 ]
  %2751 = sext i32 %2750 to i64
  %2752 = icmp eq i32** %10, null
  br i1 %2752, label %2780, label %2753

2753:                                             ; preds = %2749
  %2754 = sub i16 %2722, %38
  %2755 = sub i16 %2723, %40
  %2756 = icmp eq i16 %2754, 0
  %2757 = icmp eq i16 %2755, 0
  %2758 = xor i1 %2757, true
  %2759 = zext i1 %2758 to i64
  %2760 = select i1 %2757, i64 2, i64 3
  %2761 = select i1 %2756, i64 %2759, i64 %2760
  %2762 = getelementptr inbounds i32, i32* %9, i64 %2761
  %2763 = load i32, i32* %2762, align 4
  %2764 = load i32*, i32** %10, align 8
  %2765 = sext i16 %2754 to i64
  %2766 = getelementptr inbounds i32, i32* %2764, i64 %2765
  %2767 = load i32, i32* %2766, align 4
  %2768 = add nsw i32 %2767, %2763
  %2769 = getelementptr inbounds i32*, i32** %10, i64 1
  %2770 = load i32*, i32** %2769, align 8
  %2771 = sext i16 %2755 to i64
  %2772 = getelementptr inbounds i32, i32* %2770, i64 %2771
  %2773 = load i32, i32* %2772, align 4
  %2774 = add nsw i32 %2768, %2773
  %2775 = sext i32 %2774 to i64
  %2776 = sext i32 %4 to i64
  %2777 = mul nsw i64 %2775, %2776
  %2778 = add nsw i64 %2777, 8192
  %2779 = lshr i64 %2778, 14
  br label %2780

2780:                                             ; preds = %2749, %2753
  %2781 = phi i64 [ %2779, %2753 ], [ 0, %2749 ]
  %2782 = shl i64 %2781, 32
  %2783 = ashr exact i64 %2782, 32
  %2784 = add nsw i64 %2783, %2751
  %2785 = icmp sgt i64 %2784, 2147483646
  br i1 %2785, label %2791, label %2786

2786:                                             ; preds = %2780
  %2787 = trunc i64 %2784 to i32
  %2788 = icmp ugt i32 %2217, %2787
  br i1 %2788, label %2789, label %2791

2789:                                             ; preds = %2786
  store i32 %2750, i32* %11, align 4
  %2790 = load i32, i32* %18, align 4
  store i32 %2790, i32* %12, align 4
  br label %2791

2791:                                             ; preds = %2789, %2786, %2780, %2715, %2713
  %2792 = phi i32 [ %2217, %2713 ], [ %2217, %2715 ], [ %2787, %2789 ], [ %2217, %2786 ], [ %2217, %2780 ]
  %2793 = phi i32 [ %2218, %2713 ], [ %2218, %2715 ], [ %2717, %2789 ], [ %2218, %2786 ], [ %2218, %2780 ]
  %2794 = phi i32 [ %1578, %2713 ], [ %1578, %2715 ], [ %1663, %2789 ], [ %1578, %2786 ], [ %1578, %2780 ]
  br i1 %1584, label %2871, label %2795

2795:                                             ; preds = %2791
  %2796 = shl nsw i32 %2714, 1
  %2797 = add nsw i32 %2796, %1577
  %2798 = icmp slt i32 %2797, %74
  %2799 = icmp sgt i32 %2797, %76
  %2800 = or i1 %2798, %2799
  br i1 %2800, label %2871, label %2801

2801:                                             ; preds = %2795
  %2802 = trunc i32 %2797 to i16
  %2803 = trunc i32 %1581 to i16
  %2804 = icmp eq i8* %13, null
  br i1 %2804, label %2805, label %2817

2805:                                             ; preds = %2801
  %2806 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2807 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2806, align 8
  %2808 = ashr i32 %2797, 3
  %2809 = mul nsw i32 %2808, %26
  %2810 = ashr i32 %1581, 3
  %2811 = add nsw i32 %2809, %2810
  %2812 = sext i32 %2811 to i64
  %2813 = getelementptr inbounds i8, i8* %36, i64 %2812
  %2814 = and i32 %1581, 7
  %2815 = and i32 %2797, 7
  %2816 = call i32 %2807(i8* %2813, i32 %26, i32 %2814, i32 %2815, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2829

2817:                                             ; preds = %2801
  %2818 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2819 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2818, align 8
  %2820 = ashr i32 %2797, 3
  %2821 = mul nsw i32 %2820, %26
  %2822 = ashr i32 %1581, 3
  %2823 = add nsw i32 %2821, %2822
  %2824 = sext i32 %2823 to i64
  %2825 = getelementptr inbounds i8, i8* %36, i64 %2824
  %2826 = and i32 %1581, 7
  %2827 = and i32 %2797, 7
  %2828 = call i32 %2819(i8* %2825, i32 %26, i32 %2826, i32 %2827, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2829

2829:                                             ; preds = %2817, %2805
  %2830 = phi i32 [ %2816, %2805 ], [ %2828, %2817 ]
  %2831 = sext i32 %2830 to i64
  %2832 = icmp eq i32** %10, null
  br i1 %2832, label %2860, label %2833

2833:                                             ; preds = %2829
  %2834 = sub i16 %2802, %38
  %2835 = sub i16 %2803, %40
  %2836 = icmp eq i16 %2834, 0
  %2837 = icmp eq i16 %2835, 0
  %2838 = xor i1 %2837, true
  %2839 = zext i1 %2838 to i64
  %2840 = select i1 %2837, i64 2, i64 3
  %2841 = select i1 %2836, i64 %2839, i64 %2840
  %2842 = getelementptr inbounds i32, i32* %9, i64 %2841
  %2843 = load i32, i32* %2842, align 4
  %2844 = load i32*, i32** %10, align 8
  %2845 = sext i16 %2834 to i64
  %2846 = getelementptr inbounds i32, i32* %2844, i64 %2845
  %2847 = load i32, i32* %2846, align 4
  %2848 = add nsw i32 %2847, %2843
  %2849 = getelementptr inbounds i32*, i32** %10, i64 1
  %2850 = load i32*, i32** %2849, align 8
  %2851 = sext i16 %2835 to i64
  %2852 = getelementptr inbounds i32, i32* %2850, i64 %2851
  %2853 = load i32, i32* %2852, align 4
  %2854 = add nsw i32 %2848, %2853
  %2855 = sext i32 %2854 to i64
  %2856 = sext i32 %4 to i64
  %2857 = mul nsw i64 %2855, %2856
  %2858 = add nsw i64 %2857, 8192
  %2859 = lshr i64 %2858, 14
  br label %2860

2860:                                             ; preds = %2829, %2833
  %2861 = phi i64 [ %2859, %2833 ], [ 0, %2829 ]
  %2862 = shl i64 %2861, 32
  %2863 = ashr exact i64 %2862, 32
  %2864 = add nsw i64 %2863, %2831
  %2865 = icmp sgt i64 %2864, 2147483646
  br i1 %2865, label %2871, label %2866

2866:                                             ; preds = %2860
  %2867 = trunc i64 %2864 to i32
  %2868 = icmp ugt i32 %2792, %2867
  br i1 %2868, label %2869, label %2871

2869:                                             ; preds = %2866
  store i32 %2830, i32* %11, align 4
  %2870 = load i32, i32* %18, align 4
  store i32 %2870, i32* %12, align 4
  br label %2871

2871:                                             ; preds = %2869, %2866, %2860, %2795, %2791
  %2872 = phi i32 [ %2792, %2791 ], [ %2792, %2795 ], [ %2867, %2869 ], [ %2792, %2866 ], [ %2792, %2860 ]
  %2873 = phi i32 [ %2793, %2791 ], [ %2793, %2795 ], [ %2797, %2869 ], [ %2793, %2866 ], [ %2793, %2860 ]
  %2874 = phi i32 [ %2794, %2791 ], [ %2794, %2795 ], [ %1581, %2869 ], [ %2794, %2866 ], [ %2794, %2860 ]
  switch i32 %1910, label %3025 [
    i32 0, label %2875
    i32 2, label %2875
    i32 1, label %2950
    i32 3, label %2950
  ]

2875:                                             ; preds = %2871, %2871
  %2876 = icmp slt i32 %2218, %74
  %2877 = or i1 %1666, %2876
  %2878 = icmp sgt i32 %2218, %76
  %2879 = or i1 %2878, %2877
  br i1 %2879, label %3026, label %2880

2880:                                             ; preds = %2875
  %2881 = trunc i32 %2218 to i16
  %2882 = trunc i32 %1663 to i16
  %2883 = icmp eq i8* %13, null
  br i1 %2883, label %2884, label %2896

2884:                                             ; preds = %2880
  %2885 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2886 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2885, align 8
  %2887 = ashr i32 %2218, 3
  %2888 = mul nsw i32 %2887, %26
  %2889 = ashr i32 %1663, 3
  %2890 = add nsw i32 %2888, %2889
  %2891 = sext i32 %2890 to i64
  %2892 = getelementptr inbounds i8, i8* %36, i64 %2891
  %2893 = and i32 %1663, 7
  %2894 = and i32 %2218, 7
  %2895 = call i32 %2886(i8* %2892, i32 %26, i32 %2893, i32 %2894, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2908

2896:                                             ; preds = %2880
  %2897 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2898 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2897, align 8
  %2899 = ashr i32 %2218, 3
  %2900 = mul nsw i32 %2899, %26
  %2901 = ashr i32 %1663, 3
  %2902 = add nsw i32 %2900, %2901
  %2903 = sext i32 %2902 to i64
  %2904 = getelementptr inbounds i8, i8* %36, i64 %2903
  %2905 = and i32 %1663, 7
  %2906 = and i32 %2218, 7
  %2907 = call i32 %2898(i8* %2904, i32 %26, i32 %2905, i32 %2906, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2908

2908:                                             ; preds = %2896, %2884
  %2909 = phi i32 [ %2895, %2884 ], [ %2907, %2896 ]
  %2910 = sext i32 %2909 to i64
  %2911 = icmp eq i32** %10, null
  br i1 %2911, label %2939, label %2912

2912:                                             ; preds = %2908
  %2913 = sub i16 %2881, %38
  %2914 = sub i16 %2882, %40
  %2915 = icmp eq i16 %2913, 0
  %2916 = icmp eq i16 %2914, 0
  %2917 = xor i1 %2916, true
  %2918 = zext i1 %2917 to i64
  %2919 = select i1 %2916, i64 2, i64 3
  %2920 = select i1 %2915, i64 %2918, i64 %2919
  %2921 = getelementptr inbounds i32, i32* %9, i64 %2920
  %2922 = load i32, i32* %2921, align 4
  %2923 = load i32*, i32** %10, align 8
  %2924 = sext i16 %2913 to i64
  %2925 = getelementptr inbounds i32, i32* %2923, i64 %2924
  %2926 = load i32, i32* %2925, align 4
  %2927 = add nsw i32 %2926, %2922
  %2928 = getelementptr inbounds i32*, i32** %10, i64 1
  %2929 = load i32*, i32** %2928, align 8
  %2930 = sext i16 %2914 to i64
  %2931 = getelementptr inbounds i32, i32* %2929, i64 %2930
  %2932 = load i32, i32* %2931, align 4
  %2933 = add nsw i32 %2927, %2932
  %2934 = sext i32 %2933 to i64
  %2935 = sext i32 %4 to i64
  %2936 = mul nsw i64 %2934, %2935
  %2937 = add nsw i64 %2936, 8192
  %2938 = lshr i64 %2937, 14
  br label %2939

2939:                                             ; preds = %2908, %2912
  %2940 = phi i64 [ %2938, %2912 ], [ 0, %2908 ]
  %2941 = shl i64 %2940, 32
  %2942 = ashr exact i64 %2941, 32
  %2943 = add nsw i64 %2942, %2910
  %2944 = icmp sgt i64 %2943, 2147483646
  br i1 %2944, label %3026, label %2945

2945:                                             ; preds = %2939
  %2946 = trunc i64 %2943 to i32
  %2947 = icmp ugt i32 %2872, %2946
  br i1 %2947, label %2948, label %3026

2948:                                             ; preds = %2945
  store i32 %2909, i32* %11, align 4
  %2949 = load i32, i32* %18, align 4
  store i32 %2949, i32* %12, align 4
  br label %3026

2950:                                             ; preds = %2871, %2871
  %2951 = icmp slt i32 %2218, %74
  %2952 = or i1 %1584, %2951
  %2953 = icmp sgt i32 %2218, %76
  %2954 = or i1 %2953, %2952
  br i1 %2954, label %3026, label %2955

2955:                                             ; preds = %2950
  %2956 = trunc i32 %2218 to i16
  %2957 = trunc i32 %1581 to i16
  %2958 = icmp eq i8* %13, null
  br i1 %2958, label %2959, label %2971

2959:                                             ; preds = %2955
  %2960 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2961 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2960, align 8
  %2962 = ashr i32 %2218, 3
  %2963 = mul nsw i32 %2962, %26
  %2964 = ashr i32 %1581, 3
  %2965 = add nsw i32 %2963, %2964
  %2966 = sext i32 %2965 to i64
  %2967 = getelementptr inbounds i8, i8* %36, i64 %2966
  %2968 = and i32 %1581, 7
  %2969 = and i32 %2218, 7
  %2970 = call i32 %2961(i8* %2967, i32 %26, i32 %2968, i32 %2969, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2983

2971:                                             ; preds = %2955
  %2972 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2973 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2972, align 8
  %2974 = ashr i32 %2218, 3
  %2975 = mul nsw i32 %2974, %26
  %2976 = ashr i32 %1581, 3
  %2977 = add nsw i32 %2975, %2976
  %2978 = sext i32 %2977 to i64
  %2979 = getelementptr inbounds i8, i8* %36, i64 %2978
  %2980 = and i32 %1581, 7
  %2981 = and i32 %2218, 7
  %2982 = call i32 %2973(i8* %2979, i32 %26, i32 %2980, i32 %2981, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2983

2983:                                             ; preds = %2971, %2959
  %2984 = phi i32 [ %2970, %2959 ], [ %2982, %2971 ]
  %2985 = sext i32 %2984 to i64
  %2986 = icmp eq i32** %10, null
  br i1 %2986, label %3014, label %2987

2987:                                             ; preds = %2983
  %2988 = sub i16 %2956, %38
  %2989 = sub i16 %2957, %40
  %2990 = icmp eq i16 %2988, 0
  %2991 = icmp eq i16 %2989, 0
  %2992 = xor i1 %2991, true
  %2993 = zext i1 %2992 to i64
  %2994 = select i1 %2991, i64 2, i64 3
  %2995 = select i1 %2990, i64 %2993, i64 %2994
  %2996 = getelementptr inbounds i32, i32* %9, i64 %2995
  %2997 = load i32, i32* %2996, align 4
  %2998 = load i32*, i32** %10, align 8
  %2999 = sext i16 %2988 to i64
  %3000 = getelementptr inbounds i32, i32* %2998, i64 %2999
  %3001 = load i32, i32* %3000, align 4
  %3002 = add nsw i32 %3001, %2997
  %3003 = getelementptr inbounds i32*, i32** %10, i64 1
  %3004 = load i32*, i32** %3003, align 8
  %3005 = sext i16 %2989 to i64
  %3006 = getelementptr inbounds i32, i32* %3004, i64 %3005
  %3007 = load i32, i32* %3006, align 4
  %3008 = add nsw i32 %3002, %3007
  %3009 = sext i32 %3008 to i64
  %3010 = sext i32 %4 to i64
  %3011 = mul nsw i64 %3009, %3010
  %3012 = add nsw i64 %3011, 8192
  %3013 = lshr i64 %3012, 14
  br label %3014

3014:                                             ; preds = %2983, %2987
  %3015 = phi i64 [ %3013, %2987 ], [ 0, %2983 ]
  %3016 = shl i64 %3015, 32
  %3017 = ashr exact i64 %3016, 32
  %3018 = add nsw i64 %3017, %2985
  %3019 = icmp sgt i64 %3018, 2147483646
  br i1 %3019, label %3026, label %3020

3020:                                             ; preds = %3014
  %3021 = trunc i64 %3018 to i32
  %3022 = icmp ugt i32 %2872, %3021
  br i1 %3022, label %3023, label %3026

3023:                                             ; preds = %3020
  store i32 %2984, i32* %11, align 4
  %3024 = load i32, i32* %18, align 4
  store i32 %3024, i32* %12, align 4
  br label %3026

3025:                                             ; preds = %2871
  unreachable

3026:                                             ; preds = %3023, %3020, %3014, %2948, %2945, %2939, %2709, %2706, %2700, %2633, %2630, %2624, %2387, %2384, %2378, %108, %148, %141, %213, %219, %222, %2711, %2313, %2307, %2560, %2559, %2636, %2635, %2875, %2950, %1575, %2216
  %3027 = phi i32 [ %2217, %2216 ], [ %1576, %1575 ], [ %2217, %2711 ], [ %2308, %2313 ], [ %2308, %2307 ], [ %2552, %2560 ], [ %2552, %2559 ], [ %2552, %2636 ], [ %2552, %2635 ], [ %2872, %2875 ], [ %2872, %2950 ], [ %79, %108 ], [ %79, %148 ], [ %79, %141 ], [ %220, %222 ], [ %79, %219 ], [ %79, %213 ], [ %2385, %2387 ], [ %2308, %2384 ], [ %2308, %2378 ], [ %2631, %2633 ], [ %2552, %2630 ], [ %2552, %2624 ], [ %2707, %2709 ], [ %2552, %2706 ], [ %2552, %2700 ], [ %2946, %2948 ], [ %2872, %2945 ], [ %2872, %2939 ], [ %3021, %3023 ], [ %2872, %3020 ], [ %2872, %3014 ]
  %3028 = phi i32 [ %2218, %2216 ], [ %1577, %1575 ], [ %2218, %2711 ], [ %2218, %2313 ], [ %2218, %2307 ], [ %2553, %2560 ], [ %2553, %2559 ], [ %2553, %2636 ], [ %2553, %2635 ], [ %2873, %2875 ], [ %2873, %2950 ], [ %41, %108 ], [ %41, %148 ], [ %41, %141 ], [ %150, %222 ], [ %41, %219 ], [ %41, %213 ], [ %2315, %2387 ], [ %2218, %2384 ], [ %2218, %2378 ], [ %2561, %2633 ], [ %2553, %2630 ], [ %2553, %2624 ], [ %2637, %2709 ], [ %2553, %2706 ], [ %2553, %2700 ], [ %2218, %2948 ], [ %2873, %2945 ], [ %2873, %2939 ], [ %2218, %3023 ], [ %2873, %3020 ], [ %2873, %3014 ]
  %3029 = phi i32 [ %2219, %2216 ], [ %1578, %1575 ], [ %2219, %2711 ], [ %2309, %2313 ], [ %2309, %2307 ], [ %2554, %2560 ], [ %2554, %2559 ], [ %2554, %2636 ], [ %2554, %2635 ], [ %2874, %2875 ], [ %2874, %2950 ], [ %42, %108 ], [ %42, %148 ], [ %42, %141 ], [ %144, %222 ], [ %42, %219 ], [ %42, %213 ], [ %2219, %2387 ], [ %2309, %2384 ], [ %2309, %2378 ], [ %2219, %2633 ], [ %2554, %2630 ], [ %2554, %2624 ], [ %2219, %2709 ], [ %2554, %2706 ], [ %2554, %2700 ], [ %1663, %2948 ], [ %2874, %2945 ], [ %2874, %2939 ], [ %1581, %3023 ], [ %2874, %3020 ], [ %2874, %3014 ]
  %3030 = phi i32 [ 1, %2216 ], [ 2, %1575 ], [ 1, %2711 ], [ 1, %2313 ], [ 1, %2307 ], [ 1, %2560 ], [ 1, %2559 ], [ 1, %2636 ], [ 1, %2635 ], [ 1, %2875 ], [ 1, %2950 ], [ 2, %108 ], [ 2, %148 ], [ 2, %141 ], [ 2, %222 ], [ 2, %219 ], [ 2, %213 ], [ 1, %2387 ], [ 1, %2384 ], [ 1, %2378 ], [ 1, %2633 ], [ 1, %2630 ], [ 1, %2624 ], [ 1, %2709 ], [ 1, %2706 ], [ 1, %2700 ], [ 1, %2948 ], [ 1, %2945 ], [ 1, %2939 ], [ 1, %3023 ], [ 1, %3020 ], [ 1, %3014 ]
  %3031 = icmp eq i32 %3, 0
  br i1 %3031, label %4487, label %3032

3032:                                             ; preds = %3026
  %3033 = load i16, i16* %37, align 2
  %3034 = sext i16 %3033 to i32
  %3035 = icmp slt i32 %3034, 0
  %3036 = sub nsw i32 0, %3034
  %3037 = select i1 %3035, i32 %3036, i32 %3034
  %3038 = icmp slt i32 %3037, 64
  br i1 %3038, label %3039, label %4487

3039:                                             ; preds = %3032
  %3040 = load i16, i16* %39, align 2
  %3041 = sext i16 %3040 to i32
  %3042 = icmp slt i32 %3041, 0
  %3043 = sub nsw i32 0, %3041
  %3044 = select i1 %3042, i32 %3043, i32 %3041
  %3045 = icmp slt i32 %3044, 64
  %3046 = icmp eq i32 %6, 0
  %3047 = and i1 %3046, %3045
  br i1 %3047, label %3048, label %4487

3048:                                             ; preds = %3039
  %3049 = sub nsw i32 %3029, %3030
  %3050 = icmp slt i32 %3049, %70
  %3051 = icmp sgt i32 %3049, %72
  %3052 = or i1 %3050, %3051
  %3053 = icmp slt i32 %3028, %74
  %3054 = or i1 %3053, %3052
  %3055 = icmp sgt i32 %3028, %76
  %3056 = or i1 %3055, %3054
  br i1 %3056, label %3127, label %3057

3057:                                             ; preds = %3048
  %3058 = trunc i32 %3028 to i16
  %3059 = trunc i32 %3049 to i16
  %3060 = icmp eq i8* %13, null
  br i1 %3060, label %3061, label %3073

3061:                                             ; preds = %3057
  %3062 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3063 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3062, align 8
  %3064 = ashr i32 %3028, 3
  %3065 = mul nsw i32 %3064, %26
  %3066 = ashr i32 %3049, 3
  %3067 = add nsw i32 %3066, %3065
  %3068 = sext i32 %3067 to i64
  %3069 = getelementptr inbounds i8, i8* %36, i64 %3068
  %3070 = and i32 %3049, 7
  %3071 = and i32 %3028, 7
  %3072 = call i32 %3063(i8* %3069, i32 %26, i32 %3070, i32 %3071, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3085

3073:                                             ; preds = %3057
  %3074 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3075 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3074, align 8
  %3076 = ashr i32 %3028, 3
  %3077 = mul nsw i32 %3076, %26
  %3078 = ashr i32 %3049, 3
  %3079 = add nsw i32 %3078, %3077
  %3080 = sext i32 %3079 to i64
  %3081 = getelementptr inbounds i8, i8* %36, i64 %3080
  %3082 = and i32 %3049, 7
  %3083 = and i32 %3028, 7
  %3084 = call i32 %3075(i8* %3081, i32 %26, i32 %3082, i32 %3083, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3085

3085:                                             ; preds = %3073, %3061
  %3086 = phi i32 [ %3072, %3061 ], [ %3084, %3073 ]
  %3087 = sext i32 %3086 to i64
  %3088 = icmp eq i32** %10, null
  br i1 %3088, label %3116, label %3089

3089:                                             ; preds = %3085
  %3090 = sub i16 %3058, %38
  %3091 = sub i16 %3059, %40
  %3092 = icmp eq i16 %3090, 0
  %3093 = icmp eq i16 %3091, 0
  %3094 = xor i1 %3093, true
  %3095 = zext i1 %3094 to i64
  %3096 = select i1 %3093, i64 2, i64 3
  %3097 = select i1 %3092, i64 %3095, i64 %3096
  %3098 = getelementptr inbounds i32, i32* %9, i64 %3097
  %3099 = load i32, i32* %3098, align 4
  %3100 = load i32*, i32** %10, align 8
  %3101 = sext i16 %3090 to i64
  %3102 = getelementptr inbounds i32, i32* %3100, i64 %3101
  %3103 = load i32, i32* %3102, align 4
  %3104 = add nsw i32 %3103, %3099
  %3105 = getelementptr inbounds i32*, i32** %10, i64 1
  %3106 = load i32*, i32** %3105, align 8
  %3107 = sext i16 %3091 to i64
  %3108 = getelementptr inbounds i32, i32* %3106, i64 %3107
  %3109 = load i32, i32* %3108, align 4
  %3110 = add nsw i32 %3104, %3109
  %3111 = sext i32 %3110 to i64
  %3112 = sext i32 %4 to i64
  %3113 = mul nsw i64 %3111, %3112
  %3114 = add nsw i64 %3113, 8192
  %3115 = lshr i64 %3114, 14
  br label %3116

3116:                                             ; preds = %3085, %3089
  %3117 = phi i64 [ %3115, %3089 ], [ 0, %3085 ]
  %3118 = shl i64 %3117, 32
  %3119 = ashr exact i64 %3118, 32
  %3120 = add nsw i64 %3119, %3087
  %3121 = icmp sgt i64 %3120, 2147483646
  br i1 %3121, label %3127, label %3122

3122:                                             ; preds = %3116
  %3123 = trunc i64 %3120 to i32
  %3124 = icmp ugt i32 %3027, %3123
  br i1 %3124, label %3125, label %3127

3125:                                             ; preds = %3122
  store i32 %3086, i32* %11, align 4
  %3126 = load i32, i32* %18, align 4
  store i32 %3126, i32* %12, align 4
  br label %3127

3127:                                             ; preds = %3125, %3122, %3116, %3048
  %3128 = phi i32 [ %3027, %3048 ], [ %3123, %3125 ], [ %3027, %3122 ], [ %3027, %3116 ]
  %3129 = phi i32 [ %3029, %3048 ], [ %3049, %3125 ], [ %3029, %3122 ], [ %3029, %3116 ]
  %3130 = phi i32 [ 2147483647, %3048 ], [ %3123, %3125 ], [ %3123, %3122 ], [ 2147483647, %3116 ]
  %3131 = add nsw i32 %3030, %3029
  %3132 = icmp slt i32 %3131, %70
  %3133 = icmp sgt i32 %3131, %72
  %3134 = or i1 %3132, %3133
  %3135 = or i1 %3053, %3134
  %3136 = or i1 %3055, %3135
  br i1 %3136, label %3207, label %3137

3137:                                             ; preds = %3127
  %3138 = trunc i32 %3028 to i16
  %3139 = trunc i32 %3131 to i16
  %3140 = icmp eq i8* %13, null
  br i1 %3140, label %3141, label %3153

3141:                                             ; preds = %3137
  %3142 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3143 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3142, align 8
  %3144 = ashr i32 %3028, 3
  %3145 = mul nsw i32 %3144, %26
  %3146 = ashr i32 %3131, 3
  %3147 = add nsw i32 %3146, %3145
  %3148 = sext i32 %3147 to i64
  %3149 = getelementptr inbounds i8, i8* %36, i64 %3148
  %3150 = and i32 %3131, 7
  %3151 = and i32 %3028, 7
  %3152 = call i32 %3143(i8* %3149, i32 %26, i32 %3150, i32 %3151, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3165

3153:                                             ; preds = %3137
  %3154 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3155 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3154, align 8
  %3156 = ashr i32 %3028, 3
  %3157 = mul nsw i32 %3156, %26
  %3158 = ashr i32 %3131, 3
  %3159 = add nsw i32 %3158, %3157
  %3160 = sext i32 %3159 to i64
  %3161 = getelementptr inbounds i8, i8* %36, i64 %3160
  %3162 = and i32 %3131, 7
  %3163 = and i32 %3028, 7
  %3164 = call i32 %3155(i8* %3161, i32 %26, i32 %3162, i32 %3163, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3165

3165:                                             ; preds = %3153, %3141
  %3166 = phi i32 [ %3152, %3141 ], [ %3164, %3153 ]
  %3167 = sext i32 %3166 to i64
  %3168 = icmp eq i32** %10, null
  br i1 %3168, label %3196, label %3169

3169:                                             ; preds = %3165
  %3170 = sub i16 %3138, %38
  %3171 = sub i16 %3139, %40
  %3172 = icmp eq i16 %3170, 0
  %3173 = icmp eq i16 %3171, 0
  %3174 = xor i1 %3173, true
  %3175 = zext i1 %3174 to i64
  %3176 = select i1 %3173, i64 2, i64 3
  %3177 = select i1 %3172, i64 %3175, i64 %3176
  %3178 = getelementptr inbounds i32, i32* %9, i64 %3177
  %3179 = load i32, i32* %3178, align 4
  %3180 = load i32*, i32** %10, align 8
  %3181 = sext i16 %3170 to i64
  %3182 = getelementptr inbounds i32, i32* %3180, i64 %3181
  %3183 = load i32, i32* %3182, align 4
  %3184 = add nsw i32 %3183, %3179
  %3185 = getelementptr inbounds i32*, i32** %10, i64 1
  %3186 = load i32*, i32** %3185, align 8
  %3187 = sext i16 %3171 to i64
  %3188 = getelementptr inbounds i32, i32* %3186, i64 %3187
  %3189 = load i32, i32* %3188, align 4
  %3190 = add nsw i32 %3184, %3189
  %3191 = sext i32 %3190 to i64
  %3192 = sext i32 %4 to i64
  %3193 = mul nsw i64 %3191, %3192
  %3194 = add nsw i64 %3193, 8192
  %3195 = lshr i64 %3194, 14
  br label %3196

3196:                                             ; preds = %3165, %3169
  %3197 = phi i64 [ %3195, %3169 ], [ 0, %3165 ]
  %3198 = shl i64 %3197, 32
  %3199 = ashr exact i64 %3198, 32
  %3200 = add nsw i64 %3199, %3167
  %3201 = icmp sgt i64 %3200, 2147483646
  br i1 %3201, label %3207, label %3202

3202:                                             ; preds = %3196
  %3203 = trunc i64 %3200 to i32
  %3204 = icmp ugt i32 %3128, %3203
  br i1 %3204, label %3205, label %3207

3205:                                             ; preds = %3202
  store i32 %3166, i32* %11, align 4
  %3206 = load i32, i32* %18, align 4
  store i32 %3206, i32* %12, align 4
  br label %3207

3207:                                             ; preds = %3205, %3202, %3196, %3127
  %3208 = phi i32 [ %3128, %3127 ], [ %3203, %3205 ], [ %3128, %3202 ], [ %3128, %3196 ]
  %3209 = phi i32 [ %3129, %3127 ], [ %3131, %3205 ], [ %3129, %3202 ], [ %3129, %3196 ]
  %3210 = phi i32 [ 2147483647, %3127 ], [ %3203, %3205 ], [ %3203, %3202 ], [ 2147483647, %3196 ]
  %3211 = icmp slt i32 %3029, %70
  %3212 = icmp sgt i32 %3029, %72
  %3213 = or i1 %3211, %3212
  br i1 %3213, label %3368, label %3214

3214:                                             ; preds = %3207
  %3215 = sub nsw i32 %3028, %3030
  %3216 = icmp slt i32 %3215, %74
  %3217 = icmp sgt i32 %3215, %76
  %3218 = or i1 %3216, %3217
  br i1 %3218, label %3289, label %3219

3219:                                             ; preds = %3214
  %3220 = trunc i32 %3215 to i16
  %3221 = trunc i32 %3029 to i16
  %3222 = icmp eq i8* %13, null
  br i1 %3222, label %3223, label %3235

3223:                                             ; preds = %3219
  %3224 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3225 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3224, align 8
  %3226 = ashr i32 %3215, 3
  %3227 = mul nsw i32 %3226, %26
  %3228 = ashr i32 %3029, 3
  %3229 = add nsw i32 %3227, %3228
  %3230 = sext i32 %3229 to i64
  %3231 = getelementptr inbounds i8, i8* %36, i64 %3230
  %3232 = and i32 %3029, 7
  %3233 = and i32 %3215, 7
  %3234 = call i32 %3225(i8* %3231, i32 %26, i32 %3232, i32 %3233, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3247

3235:                                             ; preds = %3219
  %3236 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3237 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3236, align 8
  %3238 = ashr i32 %3215, 3
  %3239 = mul nsw i32 %3238, %26
  %3240 = ashr i32 %3029, 3
  %3241 = add nsw i32 %3239, %3240
  %3242 = sext i32 %3241 to i64
  %3243 = getelementptr inbounds i8, i8* %36, i64 %3242
  %3244 = and i32 %3029, 7
  %3245 = and i32 %3215, 7
  %3246 = call i32 %3237(i8* %3243, i32 %26, i32 %3244, i32 %3245, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3247

3247:                                             ; preds = %3235, %3223
  %3248 = phi i32 [ %3234, %3223 ], [ %3246, %3235 ]
  %3249 = sext i32 %3248 to i64
  %3250 = icmp eq i32** %10, null
  br i1 %3250, label %3278, label %3251

3251:                                             ; preds = %3247
  %3252 = sub i16 %3220, %38
  %3253 = sub i16 %3221, %40
  %3254 = icmp eq i16 %3252, 0
  %3255 = icmp eq i16 %3253, 0
  %3256 = xor i1 %3255, true
  %3257 = zext i1 %3256 to i64
  %3258 = select i1 %3255, i64 2, i64 3
  %3259 = select i1 %3254, i64 %3257, i64 %3258
  %3260 = getelementptr inbounds i32, i32* %9, i64 %3259
  %3261 = load i32, i32* %3260, align 4
  %3262 = load i32*, i32** %10, align 8
  %3263 = sext i16 %3252 to i64
  %3264 = getelementptr inbounds i32, i32* %3262, i64 %3263
  %3265 = load i32, i32* %3264, align 4
  %3266 = add nsw i32 %3265, %3261
  %3267 = getelementptr inbounds i32*, i32** %10, i64 1
  %3268 = load i32*, i32** %3267, align 8
  %3269 = sext i16 %3253 to i64
  %3270 = getelementptr inbounds i32, i32* %3268, i64 %3269
  %3271 = load i32, i32* %3270, align 4
  %3272 = add nsw i32 %3266, %3271
  %3273 = sext i32 %3272 to i64
  %3274 = sext i32 %4 to i64
  %3275 = mul nsw i64 %3273, %3274
  %3276 = add nsw i64 %3275, 8192
  %3277 = lshr i64 %3276, 14
  br label %3278

3278:                                             ; preds = %3247, %3251
  %3279 = phi i64 [ %3277, %3251 ], [ 0, %3247 ]
  %3280 = shl i64 %3279, 32
  %3281 = ashr exact i64 %3280, 32
  %3282 = add nsw i64 %3281, %3249
  %3283 = icmp sgt i64 %3282, 2147483646
  br i1 %3283, label %3289, label %3284

3284:                                             ; preds = %3278
  %3285 = trunc i64 %3282 to i32
  %3286 = icmp ugt i32 %3208, %3285
  br i1 %3286, label %3287, label %3289

3287:                                             ; preds = %3284
  store i32 %3248, i32* %11, align 4
  %3288 = load i32, i32* %18, align 4
  store i32 %3288, i32* %12, align 4
  br label %3289

3289:                                             ; preds = %3287, %3284, %3278, %3214
  %3290 = phi i32 [ %3208, %3278 ], [ %3208, %3284 ], [ %3285, %3287 ], [ %3208, %3214 ]
  %3291 = phi i32 [ %3028, %3278 ], [ %3028, %3284 ], [ %3215, %3287 ], [ %3028, %3214 ]
  %3292 = phi i32 [ %3209, %3278 ], [ %3209, %3284 ], [ %3029, %3287 ], [ %3209, %3214 ]
  %3293 = phi i32 [ 2147483647, %3278 ], [ %3285, %3284 ], [ %3285, %3287 ], [ 2147483647, %3214 ]
  %3294 = add nsw i32 %3030, %3028
  %3295 = icmp slt i32 %3294, %74
  %3296 = icmp sgt i32 %3294, %76
  %3297 = or i1 %3295, %3296
  br i1 %3297, label %3368, label %3298

3298:                                             ; preds = %3289
  %3299 = trunc i32 %3294 to i16
  %3300 = trunc i32 %3029 to i16
  %3301 = icmp eq i8* %13, null
  br i1 %3301, label %3302, label %3314

3302:                                             ; preds = %3298
  %3303 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3304 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3303, align 8
  %3305 = ashr i32 %3294, 3
  %3306 = mul nsw i32 %3305, %26
  %3307 = ashr i32 %3029, 3
  %3308 = add nsw i32 %3306, %3307
  %3309 = sext i32 %3308 to i64
  %3310 = getelementptr inbounds i8, i8* %36, i64 %3309
  %3311 = and i32 %3029, 7
  %3312 = and i32 %3294, 7
  %3313 = call i32 %3304(i8* %3310, i32 %26, i32 %3311, i32 %3312, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3326

3314:                                             ; preds = %3298
  %3315 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3316 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3315, align 8
  %3317 = ashr i32 %3294, 3
  %3318 = mul nsw i32 %3317, %26
  %3319 = ashr i32 %3029, 3
  %3320 = add nsw i32 %3318, %3319
  %3321 = sext i32 %3320 to i64
  %3322 = getelementptr inbounds i8, i8* %36, i64 %3321
  %3323 = and i32 %3029, 7
  %3324 = and i32 %3294, 7
  %3325 = call i32 %3316(i8* %3322, i32 %26, i32 %3323, i32 %3324, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3326

3326:                                             ; preds = %3314, %3302
  %3327 = phi i32 [ %3313, %3302 ], [ %3325, %3314 ]
  %3328 = sext i32 %3327 to i64
  %3329 = icmp eq i32** %10, null
  br i1 %3329, label %3357, label %3330

3330:                                             ; preds = %3326
  %3331 = sub i16 %3299, %38
  %3332 = sub i16 %3300, %40
  %3333 = icmp eq i16 %3331, 0
  %3334 = icmp eq i16 %3332, 0
  %3335 = xor i1 %3334, true
  %3336 = zext i1 %3335 to i64
  %3337 = select i1 %3334, i64 2, i64 3
  %3338 = select i1 %3333, i64 %3336, i64 %3337
  %3339 = getelementptr inbounds i32, i32* %9, i64 %3338
  %3340 = load i32, i32* %3339, align 4
  %3341 = load i32*, i32** %10, align 8
  %3342 = sext i16 %3331 to i64
  %3343 = getelementptr inbounds i32, i32* %3341, i64 %3342
  %3344 = load i32, i32* %3343, align 4
  %3345 = add nsw i32 %3344, %3340
  %3346 = getelementptr inbounds i32*, i32** %10, i64 1
  %3347 = load i32*, i32** %3346, align 8
  %3348 = sext i16 %3332 to i64
  %3349 = getelementptr inbounds i32, i32* %3347, i64 %3348
  %3350 = load i32, i32* %3349, align 4
  %3351 = add nsw i32 %3345, %3350
  %3352 = sext i32 %3351 to i64
  %3353 = sext i32 %4 to i64
  %3354 = mul nsw i64 %3352, %3353
  %3355 = add nsw i64 %3354, 8192
  %3356 = lshr i64 %3355, 14
  br label %3357

3357:                                             ; preds = %3326, %3330
  %3358 = phi i64 [ %3356, %3330 ], [ 0, %3326 ]
  %3359 = shl i64 %3358, 32
  %3360 = ashr exact i64 %3359, 32
  %3361 = add nsw i64 %3360, %3328
  %3362 = icmp sgt i64 %3361, 2147483646
  br i1 %3362, label %3368, label %3363

3363:                                             ; preds = %3357
  %3364 = trunc i64 %3361 to i32
  %3365 = icmp ugt i32 %3290, %3364
  br i1 %3365, label %3366, label %3368

3366:                                             ; preds = %3363
  store i32 %3327, i32* %11, align 4
  %3367 = load i32, i32* %18, align 4
  store i32 %3367, i32* %12, align 4
  br label %3368

3368:                                             ; preds = %3366, %3363, %3357, %3207, %3289
  %3369 = phi i32 [ %3293, %3289 ], [ 2147483647, %3207 ], [ %3293, %3357 ], [ %3293, %3363 ], [ %3293, %3366 ]
  %3370 = phi i32 [ %3290, %3289 ], [ %3208, %3207 ], [ %3290, %3357 ], [ %3290, %3363 ], [ %3364, %3366 ]
  %3371 = phi i32 [ %3291, %3289 ], [ %3028, %3207 ], [ %3291, %3357 ], [ %3291, %3363 ], [ %3294, %3366 ]
  %3372 = phi i32 [ %3292, %3289 ], [ %3209, %3207 ], [ %3292, %3357 ], [ %3292, %3363 ], [ %3029, %3366 ]
  %3373 = phi i32 [ 2147483647, %3289 ], [ 2147483647, %3207 ], [ 2147483647, %3357 ], [ %3364, %3363 ], [ %3364, %3366 ]
  %3374 = icmp uge i32 %3130, %3210
  %3375 = zext i1 %3374 to i32
  %3376 = icmp ult i32 %3369, %3373
  %3377 = select i1 %3376, i32 0, i32 2
  %3378 = or i32 %3377, %3375
  switch i32 %3378, label %3683 [
    i32 0, label %3379
    i32 1, label %3455
    i32 2, label %3531
    i32 3, label %3607
  ]

3379:                                             ; preds = %3368
  br i1 %3052, label %3684, label %3380

3380:                                             ; preds = %3379
  %3381 = sub nsw i32 %3028, %3030
  %3382 = icmp slt i32 %3381, %74
  %3383 = icmp sgt i32 %3381, %76
  %3384 = or i1 %3382, %3383
  br i1 %3384, label %3684, label %3385

3385:                                             ; preds = %3380
  %3386 = trunc i32 %3381 to i16
  %3387 = trunc i32 %3049 to i16
  %3388 = icmp eq i8* %13, null
  br i1 %3388, label %3389, label %3401

3389:                                             ; preds = %3385
  %3390 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3391 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3390, align 8
  %3392 = ashr i32 %3381, 3
  %3393 = mul nsw i32 %3392, %26
  %3394 = ashr i32 %3049, 3
  %3395 = add nsw i32 %3393, %3394
  %3396 = sext i32 %3395 to i64
  %3397 = getelementptr inbounds i8, i8* %36, i64 %3396
  %3398 = and i32 %3049, 7
  %3399 = and i32 %3381, 7
  %3400 = call i32 %3391(i8* %3397, i32 %26, i32 %3398, i32 %3399, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3413

3401:                                             ; preds = %3385
  %3402 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3403 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3402, align 8
  %3404 = ashr i32 %3381, 3
  %3405 = mul nsw i32 %3404, %26
  %3406 = ashr i32 %3049, 3
  %3407 = add nsw i32 %3405, %3406
  %3408 = sext i32 %3407 to i64
  %3409 = getelementptr inbounds i8, i8* %36, i64 %3408
  %3410 = and i32 %3049, 7
  %3411 = and i32 %3381, 7
  %3412 = call i32 %3403(i8* %3409, i32 %26, i32 %3410, i32 %3411, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3413

3413:                                             ; preds = %3401, %3389
  %3414 = phi i32 [ %3400, %3389 ], [ %3412, %3401 ]
  %3415 = sext i32 %3414 to i64
  %3416 = icmp eq i32** %10, null
  br i1 %3416, label %3444, label %3417

3417:                                             ; preds = %3413
  %3418 = sub i16 %3386, %38
  %3419 = sub i16 %3387, %40
  %3420 = icmp eq i16 %3418, 0
  %3421 = icmp eq i16 %3419, 0
  %3422 = xor i1 %3421, true
  %3423 = zext i1 %3422 to i64
  %3424 = select i1 %3421, i64 2, i64 3
  %3425 = select i1 %3420, i64 %3423, i64 %3424
  %3426 = getelementptr inbounds i32, i32* %9, i64 %3425
  %3427 = load i32, i32* %3426, align 4
  %3428 = load i32*, i32** %10, align 8
  %3429 = sext i16 %3418 to i64
  %3430 = getelementptr inbounds i32, i32* %3428, i64 %3429
  %3431 = load i32, i32* %3430, align 4
  %3432 = add nsw i32 %3431, %3427
  %3433 = getelementptr inbounds i32*, i32** %10, i64 1
  %3434 = load i32*, i32** %3433, align 8
  %3435 = sext i16 %3419 to i64
  %3436 = getelementptr inbounds i32, i32* %3434, i64 %3435
  %3437 = load i32, i32* %3436, align 4
  %3438 = add nsw i32 %3432, %3437
  %3439 = sext i32 %3438 to i64
  %3440 = sext i32 %4 to i64
  %3441 = mul nsw i64 %3439, %3440
  %3442 = add nsw i64 %3441, 8192
  %3443 = lshr i64 %3442, 14
  br label %3444

3444:                                             ; preds = %3413, %3417
  %3445 = phi i64 [ %3443, %3417 ], [ 0, %3413 ]
  %3446 = shl i64 %3445, 32
  %3447 = ashr exact i64 %3446, 32
  %3448 = add nsw i64 %3447, %3415
  %3449 = icmp sgt i64 %3448, 2147483646
  br i1 %3449, label %3684, label %3450

3450:                                             ; preds = %3444
  %3451 = trunc i64 %3448 to i32
  %3452 = icmp ugt i32 %3370, %3451
  br i1 %3452, label %3453, label %3684

3453:                                             ; preds = %3450
  store i32 %3414, i32* %11, align 4
  %3454 = load i32, i32* %18, align 4
  store i32 %3454, i32* %12, align 4
  br label %3684

3455:                                             ; preds = %3368
  br i1 %3134, label %3684, label %3456

3456:                                             ; preds = %3455
  %3457 = sub nsw i32 %3028, %3030
  %3458 = icmp slt i32 %3457, %74
  %3459 = icmp sgt i32 %3457, %76
  %3460 = or i1 %3458, %3459
  br i1 %3460, label %3684, label %3461

3461:                                             ; preds = %3456
  %3462 = trunc i32 %3457 to i16
  %3463 = trunc i32 %3131 to i16
  %3464 = icmp eq i8* %13, null
  br i1 %3464, label %3465, label %3477

3465:                                             ; preds = %3461
  %3466 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3467 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3466, align 8
  %3468 = ashr i32 %3457, 3
  %3469 = mul nsw i32 %3468, %26
  %3470 = ashr i32 %3131, 3
  %3471 = add nsw i32 %3469, %3470
  %3472 = sext i32 %3471 to i64
  %3473 = getelementptr inbounds i8, i8* %36, i64 %3472
  %3474 = and i32 %3131, 7
  %3475 = and i32 %3457, 7
  %3476 = call i32 %3467(i8* %3473, i32 %26, i32 %3474, i32 %3475, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3489

3477:                                             ; preds = %3461
  %3478 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3479 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3478, align 8
  %3480 = ashr i32 %3457, 3
  %3481 = mul nsw i32 %3480, %26
  %3482 = ashr i32 %3131, 3
  %3483 = add nsw i32 %3481, %3482
  %3484 = sext i32 %3483 to i64
  %3485 = getelementptr inbounds i8, i8* %36, i64 %3484
  %3486 = and i32 %3131, 7
  %3487 = and i32 %3457, 7
  %3488 = call i32 %3479(i8* %3485, i32 %26, i32 %3486, i32 %3487, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3489

3489:                                             ; preds = %3477, %3465
  %3490 = phi i32 [ %3476, %3465 ], [ %3488, %3477 ]
  %3491 = sext i32 %3490 to i64
  %3492 = icmp eq i32** %10, null
  br i1 %3492, label %3520, label %3493

3493:                                             ; preds = %3489
  %3494 = sub i16 %3462, %38
  %3495 = sub i16 %3463, %40
  %3496 = icmp eq i16 %3494, 0
  %3497 = icmp eq i16 %3495, 0
  %3498 = xor i1 %3497, true
  %3499 = zext i1 %3498 to i64
  %3500 = select i1 %3497, i64 2, i64 3
  %3501 = select i1 %3496, i64 %3499, i64 %3500
  %3502 = getelementptr inbounds i32, i32* %9, i64 %3501
  %3503 = load i32, i32* %3502, align 4
  %3504 = load i32*, i32** %10, align 8
  %3505 = sext i16 %3494 to i64
  %3506 = getelementptr inbounds i32, i32* %3504, i64 %3505
  %3507 = load i32, i32* %3506, align 4
  %3508 = add nsw i32 %3507, %3503
  %3509 = getelementptr inbounds i32*, i32** %10, i64 1
  %3510 = load i32*, i32** %3509, align 8
  %3511 = sext i16 %3495 to i64
  %3512 = getelementptr inbounds i32, i32* %3510, i64 %3511
  %3513 = load i32, i32* %3512, align 4
  %3514 = add nsw i32 %3508, %3513
  %3515 = sext i32 %3514 to i64
  %3516 = sext i32 %4 to i64
  %3517 = mul nsw i64 %3515, %3516
  %3518 = add nsw i64 %3517, 8192
  %3519 = lshr i64 %3518, 14
  br label %3520

3520:                                             ; preds = %3489, %3493
  %3521 = phi i64 [ %3519, %3493 ], [ 0, %3489 ]
  %3522 = shl i64 %3521, 32
  %3523 = ashr exact i64 %3522, 32
  %3524 = add nsw i64 %3523, %3491
  %3525 = icmp sgt i64 %3524, 2147483646
  br i1 %3525, label %3684, label %3526

3526:                                             ; preds = %3520
  %3527 = trunc i64 %3524 to i32
  %3528 = icmp ugt i32 %3370, %3527
  br i1 %3528, label %3529, label %3684

3529:                                             ; preds = %3526
  store i32 %3490, i32* %11, align 4
  %3530 = load i32, i32* %18, align 4
  store i32 %3530, i32* %12, align 4
  br label %3684

3531:                                             ; preds = %3368
  br i1 %3052, label %3684, label %3532

3532:                                             ; preds = %3531
  %3533 = add nsw i32 %3030, %3028
  %3534 = icmp slt i32 %3533, %74
  %3535 = icmp sgt i32 %3533, %76
  %3536 = or i1 %3534, %3535
  br i1 %3536, label %3684, label %3537

3537:                                             ; preds = %3532
  %3538 = trunc i32 %3533 to i16
  %3539 = trunc i32 %3049 to i16
  %3540 = icmp eq i8* %13, null
  br i1 %3540, label %3541, label %3553

3541:                                             ; preds = %3537
  %3542 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3543 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3542, align 8
  %3544 = ashr i32 %3533, 3
  %3545 = mul nsw i32 %3544, %26
  %3546 = ashr i32 %3049, 3
  %3547 = add nsw i32 %3545, %3546
  %3548 = sext i32 %3547 to i64
  %3549 = getelementptr inbounds i8, i8* %36, i64 %3548
  %3550 = and i32 %3049, 7
  %3551 = and i32 %3533, 7
  %3552 = call i32 %3543(i8* %3549, i32 %26, i32 %3550, i32 %3551, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3565

3553:                                             ; preds = %3537
  %3554 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3555 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3554, align 8
  %3556 = ashr i32 %3533, 3
  %3557 = mul nsw i32 %3556, %26
  %3558 = ashr i32 %3049, 3
  %3559 = add nsw i32 %3557, %3558
  %3560 = sext i32 %3559 to i64
  %3561 = getelementptr inbounds i8, i8* %36, i64 %3560
  %3562 = and i32 %3049, 7
  %3563 = and i32 %3533, 7
  %3564 = call i32 %3555(i8* %3561, i32 %26, i32 %3562, i32 %3563, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3565

3565:                                             ; preds = %3553, %3541
  %3566 = phi i32 [ %3552, %3541 ], [ %3564, %3553 ]
  %3567 = sext i32 %3566 to i64
  %3568 = icmp eq i32** %10, null
  br i1 %3568, label %3596, label %3569

3569:                                             ; preds = %3565
  %3570 = sub i16 %3538, %38
  %3571 = sub i16 %3539, %40
  %3572 = icmp eq i16 %3570, 0
  %3573 = icmp eq i16 %3571, 0
  %3574 = xor i1 %3573, true
  %3575 = zext i1 %3574 to i64
  %3576 = select i1 %3573, i64 2, i64 3
  %3577 = select i1 %3572, i64 %3575, i64 %3576
  %3578 = getelementptr inbounds i32, i32* %9, i64 %3577
  %3579 = load i32, i32* %3578, align 4
  %3580 = load i32*, i32** %10, align 8
  %3581 = sext i16 %3570 to i64
  %3582 = getelementptr inbounds i32, i32* %3580, i64 %3581
  %3583 = load i32, i32* %3582, align 4
  %3584 = add nsw i32 %3583, %3579
  %3585 = getelementptr inbounds i32*, i32** %10, i64 1
  %3586 = load i32*, i32** %3585, align 8
  %3587 = sext i16 %3571 to i64
  %3588 = getelementptr inbounds i32, i32* %3586, i64 %3587
  %3589 = load i32, i32* %3588, align 4
  %3590 = add nsw i32 %3584, %3589
  %3591 = sext i32 %3590 to i64
  %3592 = sext i32 %4 to i64
  %3593 = mul nsw i64 %3591, %3592
  %3594 = add nsw i64 %3593, 8192
  %3595 = lshr i64 %3594, 14
  br label %3596

3596:                                             ; preds = %3565, %3569
  %3597 = phi i64 [ %3595, %3569 ], [ 0, %3565 ]
  %3598 = shl i64 %3597, 32
  %3599 = ashr exact i64 %3598, 32
  %3600 = add nsw i64 %3599, %3567
  %3601 = icmp sgt i64 %3600, 2147483646
  br i1 %3601, label %3684, label %3602

3602:                                             ; preds = %3596
  %3603 = trunc i64 %3600 to i32
  %3604 = icmp ugt i32 %3370, %3603
  br i1 %3604, label %3605, label %3684

3605:                                             ; preds = %3602
  store i32 %3566, i32* %11, align 4
  %3606 = load i32, i32* %18, align 4
  store i32 %3606, i32* %12, align 4
  br label %3684

3607:                                             ; preds = %3368
  br i1 %3134, label %3684, label %3608

3608:                                             ; preds = %3607
  %3609 = add nsw i32 %3030, %3028
  %3610 = icmp slt i32 %3609, %74
  %3611 = icmp sgt i32 %3609, %76
  %3612 = or i1 %3610, %3611
  br i1 %3612, label %3684, label %3613

3613:                                             ; preds = %3608
  %3614 = trunc i32 %3609 to i16
  %3615 = trunc i32 %3131 to i16
  %3616 = icmp eq i8* %13, null
  br i1 %3616, label %3617, label %3629

3617:                                             ; preds = %3613
  %3618 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3619 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3618, align 8
  %3620 = ashr i32 %3609, 3
  %3621 = mul nsw i32 %3620, %26
  %3622 = ashr i32 %3131, 3
  %3623 = add nsw i32 %3621, %3622
  %3624 = sext i32 %3623 to i64
  %3625 = getelementptr inbounds i8, i8* %36, i64 %3624
  %3626 = and i32 %3131, 7
  %3627 = and i32 %3609, 7
  %3628 = call i32 %3619(i8* %3625, i32 %26, i32 %3626, i32 %3627, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3641

3629:                                             ; preds = %3613
  %3630 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3631 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3630, align 8
  %3632 = ashr i32 %3609, 3
  %3633 = mul nsw i32 %3632, %26
  %3634 = ashr i32 %3131, 3
  %3635 = add nsw i32 %3633, %3634
  %3636 = sext i32 %3635 to i64
  %3637 = getelementptr inbounds i8, i8* %36, i64 %3636
  %3638 = and i32 %3131, 7
  %3639 = and i32 %3609, 7
  %3640 = call i32 %3631(i8* %3637, i32 %26, i32 %3638, i32 %3639, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3641

3641:                                             ; preds = %3629, %3617
  %3642 = phi i32 [ %3628, %3617 ], [ %3640, %3629 ]
  %3643 = sext i32 %3642 to i64
  %3644 = icmp eq i32** %10, null
  br i1 %3644, label %3672, label %3645

3645:                                             ; preds = %3641
  %3646 = sub i16 %3614, %38
  %3647 = sub i16 %3615, %40
  %3648 = icmp eq i16 %3646, 0
  %3649 = icmp eq i16 %3647, 0
  %3650 = xor i1 %3649, true
  %3651 = zext i1 %3650 to i64
  %3652 = select i1 %3649, i64 2, i64 3
  %3653 = select i1 %3648, i64 %3651, i64 %3652
  %3654 = getelementptr inbounds i32, i32* %9, i64 %3653
  %3655 = load i32, i32* %3654, align 4
  %3656 = load i32*, i32** %10, align 8
  %3657 = sext i16 %3646 to i64
  %3658 = getelementptr inbounds i32, i32* %3656, i64 %3657
  %3659 = load i32, i32* %3658, align 4
  %3660 = add nsw i32 %3659, %3655
  %3661 = getelementptr inbounds i32*, i32** %10, i64 1
  %3662 = load i32*, i32** %3661, align 8
  %3663 = sext i16 %3647 to i64
  %3664 = getelementptr inbounds i32, i32* %3662, i64 %3663
  %3665 = load i32, i32* %3664, align 4
  %3666 = add nsw i32 %3660, %3665
  %3667 = sext i32 %3666 to i64
  %3668 = sext i32 %4 to i64
  %3669 = mul nsw i64 %3667, %3668
  %3670 = add nsw i64 %3669, 8192
  %3671 = lshr i64 %3670, 14
  br label %3672

3672:                                             ; preds = %3641, %3645
  %3673 = phi i64 [ %3671, %3645 ], [ 0, %3641 ]
  %3674 = shl i64 %3673, 32
  %3675 = ashr exact i64 %3674, 32
  %3676 = add nsw i64 %3675, %3643
  %3677 = icmp sgt i64 %3676, 2147483646
  br i1 %3677, label %3684, label %3678

3678:                                             ; preds = %3672
  %3679 = trunc i64 %3676 to i32
  %3680 = icmp ugt i32 %3370, %3679
  br i1 %3680, label %3681, label %3684

3681:                                             ; preds = %3678
  store i32 %3642, i32* %11, align 4
  %3682 = load i32, i32* %18, align 4
  store i32 %3682, i32* %12, align 4
  br label %3684

3683:                                             ; preds = %3368
  unreachable

3684:                                             ; preds = %3681, %3678, %3672, %3605, %3602, %3596, %3529, %3526, %3520, %3453, %3450, %3444, %3608, %3607, %3532, %3531, %3456, %3455, %3380, %3379
  %3685 = phi i32 [ %3370, %3379 ], [ %3370, %3380 ], [ %3370, %3455 ], [ %3370, %3456 ], [ %3370, %3531 ], [ %3370, %3532 ], [ %3370, %3607 ], [ %3370, %3608 ], [ %3451, %3453 ], [ %3370, %3450 ], [ %3370, %3444 ], [ %3527, %3529 ], [ %3370, %3526 ], [ %3370, %3520 ], [ %3603, %3605 ], [ %3370, %3602 ], [ %3370, %3596 ], [ %3679, %3681 ], [ %3370, %3678 ], [ %3370, %3672 ]
  %3686 = phi i32 [ %3371, %3379 ], [ %3371, %3380 ], [ %3371, %3455 ], [ %3371, %3456 ], [ %3371, %3531 ], [ %3371, %3532 ], [ %3371, %3607 ], [ %3371, %3608 ], [ %3381, %3453 ], [ %3371, %3450 ], [ %3371, %3444 ], [ %3457, %3529 ], [ %3371, %3526 ], [ %3371, %3520 ], [ %3533, %3605 ], [ %3371, %3602 ], [ %3371, %3596 ], [ %3609, %3681 ], [ %3371, %3678 ], [ %3371, %3672 ]
  %3687 = phi i32 [ %3372, %3379 ], [ %3372, %3380 ], [ %3372, %3455 ], [ %3372, %3456 ], [ %3372, %3531 ], [ %3372, %3532 ], [ %3372, %3607 ], [ %3372, %3608 ], [ %3049, %3453 ], [ %3372, %3450 ], [ %3372, %3444 ], [ %3131, %3529 ], [ %3372, %3526 ], [ %3372, %3520 ], [ %3049, %3605 ], [ %3372, %3602 ], [ %3372, %3596 ], [ %3131, %3681 ], [ %3372, %3678 ], [ %3372, %3672 ]
  %3688 = icmp ugt i32 %7, 1
  br i1 %3688, label %3689, label %4487

3689:                                             ; preds = %3684
  %3690 = icmp ne i32 %3686, %3028
  %3691 = xor i1 %3690, true
  %3692 = icmp eq i32 %3687, %3029
  %3693 = or i1 %3692, %3691
  br i1 %3693, label %3856, label %3694

3694:                                             ; preds = %3689
  %3695 = sub nsw i32 %3686, %3028
  %3696 = sub nsw i32 %3687, %3029
  %3697 = shl nsw i32 %3696, 1
  %3698 = add nsw i32 %3697, %3029
  %3699 = icmp slt i32 %3698, %70
  %3700 = icmp sgt i32 %3698, %72
  %3701 = or i1 %3699, %3700
  %3702 = icmp slt i32 %3686, %74
  %3703 = or i1 %3702, %3701
  %3704 = icmp sgt i32 %3686, %76
  %3705 = or i1 %3704, %3703
  br i1 %3705, label %3775, label %3706

3706:                                             ; preds = %3694
  %3707 = trunc i32 %3686 to i16
  %3708 = trunc i32 %3698 to i16
  %3709 = icmp eq i8* %13, null
  br i1 %3709, label %3710, label %3722

3710:                                             ; preds = %3706
  %3711 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3712 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3711, align 8
  %3713 = ashr i32 %3686, 3
  %3714 = mul nsw i32 %3713, %26
  %3715 = ashr i32 %3698, 3
  %3716 = add nsw i32 %3715, %3714
  %3717 = sext i32 %3716 to i64
  %3718 = getelementptr inbounds i8, i8* %36, i64 %3717
  %3719 = and i32 %3698, 7
  %3720 = and i32 %3686, 7
  %3721 = call i32 %3712(i8* %3718, i32 %26, i32 %3719, i32 %3720, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3734

3722:                                             ; preds = %3706
  %3723 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3724 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3723, align 8
  %3725 = ashr i32 %3686, 3
  %3726 = mul nsw i32 %3725, %26
  %3727 = ashr i32 %3698, 3
  %3728 = add nsw i32 %3727, %3726
  %3729 = sext i32 %3728 to i64
  %3730 = getelementptr inbounds i8, i8* %36, i64 %3729
  %3731 = and i32 %3698, 7
  %3732 = and i32 %3686, 7
  %3733 = call i32 %3724(i8* %3730, i32 %26, i32 %3731, i32 %3732, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3734

3734:                                             ; preds = %3722, %3710
  %3735 = phi i32 [ %3721, %3710 ], [ %3733, %3722 ]
  %3736 = sext i32 %3735 to i64
  %3737 = icmp eq i32** %10, null
  br i1 %3737, label %3766, label %3738

3738:                                             ; preds = %3734
  %3739 = sub i16 %3707, %38
  %3740 = sub i16 %3708, %40
  %3741 = icmp eq i16 %3739, 0
  %3742 = icmp eq i16 %3740, 0
  %3743 = xor i1 %3742, true
  %3744 = zext i1 %3743 to i64
  %3745 = select i1 %3742, i64 2, i64 3
  %3746 = select i1 %3741, i64 %3744, i64 %3745
  %3747 = getelementptr inbounds i32, i32* %9, i64 %3746
  %3748 = load i32, i32* %3747, align 4
  %3749 = load i32*, i32** %10, align 8
  %3750 = sext i16 %3739 to i64
  %3751 = getelementptr inbounds i32, i32* %3749, i64 %3750
  %3752 = load i32, i32* %3751, align 4
  %3753 = add nsw i32 %3752, %3748
  %3754 = getelementptr inbounds i32*, i32** %10, i64 1
  %3755 = load i32*, i32** %3754, align 8
  %3756 = sext i16 %3740 to i64
  %3757 = getelementptr inbounds i32, i32* %3755, i64 %3756
  %3758 = load i32, i32* %3757, align 4
  %3759 = add nsw i32 %3753, %3758
  %3760 = sext i32 %3759 to i64
  %3761 = sext i32 %4 to i64
  %3762 = shl nsw i64 %3761, 18
  %3763 = mul i64 %3762, %3760
  %3764 = add i64 %3763, 2147483648
  %3765 = ashr i64 %3764, 32
  br label %3766

3766:                                             ; preds = %3734, %3738
  %3767 = phi i64 [ %3765, %3738 ], [ 0, %3734 ]
  %3768 = add nsw i64 %3767, %3736
  %3769 = icmp sgt i64 %3768, 2147483646
  br i1 %3769, label %3775, label %3770

3770:                                             ; preds = %3766
  %3771 = trunc i64 %3768 to i32
  %3772 = icmp ugt i32 %3685, %3771
  br i1 %3772, label %3773, label %3775

3773:                                             ; preds = %3770
  store i32 %3735, i32* %11, align 4
  %3774 = load i32, i32* %18, align 4
  store i32 %3774, i32* %12, align 4
  br label %3775

3775:                                             ; preds = %3773, %3770, %3766, %3694
  %3776 = phi i32 [ %3685, %3694 ], [ %3771, %3773 ], [ %3685, %3770 ], [ %3685, %3766 ]
  %3777 = phi i32 [ %3687, %3694 ], [ %3698, %3773 ], [ %3687, %3770 ], [ %3687, %3766 ]
  %3778 = icmp slt i32 %3687, %70
  %3779 = icmp sgt i32 %3687, %72
  %3780 = or i1 %3778, %3779
  br i1 %3780, label %4487, label %3781

3781:                                             ; preds = %3775
  %3782 = shl nsw i32 %3695, 1
  %3783 = add nsw i32 %3782, %3028
  %3784 = icmp slt i32 %3783, %74
  %3785 = icmp sgt i32 %3783, %76
  %3786 = or i1 %3784, %3785
  br i1 %3786, label %4487, label %3787

3787:                                             ; preds = %3781
  %3788 = trunc i32 %3783 to i16
  %3789 = trunc i32 %3687 to i16
  %3790 = icmp eq i8* %13, null
  br i1 %3790, label %3791, label %3803

3791:                                             ; preds = %3787
  %3792 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3793 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3792, align 8
  %3794 = ashr i32 %3783, 3
  %3795 = mul nsw i32 %3794, %26
  %3796 = ashr i32 %3687, 3
  %3797 = add nsw i32 %3795, %3796
  %3798 = sext i32 %3797 to i64
  %3799 = getelementptr inbounds i8, i8* %36, i64 %3798
  %3800 = and i32 %3687, 7
  %3801 = and i32 %3783, 7
  %3802 = call i32 %3793(i8* %3799, i32 %26, i32 %3800, i32 %3801, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3815

3803:                                             ; preds = %3787
  %3804 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3805 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3804, align 8
  %3806 = ashr i32 %3783, 3
  %3807 = mul nsw i32 %3806, %26
  %3808 = ashr i32 %3687, 3
  %3809 = add nsw i32 %3807, %3808
  %3810 = sext i32 %3809 to i64
  %3811 = getelementptr inbounds i8, i8* %36, i64 %3810
  %3812 = and i32 %3687, 7
  %3813 = and i32 %3783, 7
  %3814 = call i32 %3805(i8* %3811, i32 %26, i32 %3812, i32 %3813, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3815

3815:                                             ; preds = %3803, %3791
  %3816 = phi i32 [ %3802, %3791 ], [ %3814, %3803 ]
  %3817 = sext i32 %3816 to i64
  %3818 = icmp eq i32** %10, null
  br i1 %3818, label %3847, label %3819

3819:                                             ; preds = %3815
  %3820 = sub i16 %3788, %38
  %3821 = sub i16 %3789, %40
  %3822 = icmp eq i16 %3820, 0
  %3823 = icmp eq i16 %3821, 0
  %3824 = xor i1 %3823, true
  %3825 = zext i1 %3824 to i64
  %3826 = select i1 %3823, i64 2, i64 3
  %3827 = select i1 %3822, i64 %3825, i64 %3826
  %3828 = getelementptr inbounds i32, i32* %9, i64 %3827
  %3829 = load i32, i32* %3828, align 4
  %3830 = load i32*, i32** %10, align 8
  %3831 = sext i16 %3820 to i64
  %3832 = getelementptr inbounds i32, i32* %3830, i64 %3831
  %3833 = load i32, i32* %3832, align 4
  %3834 = add nsw i32 %3833, %3829
  %3835 = getelementptr inbounds i32*, i32** %10, i64 1
  %3836 = load i32*, i32** %3835, align 8
  %3837 = sext i16 %3821 to i64
  %3838 = getelementptr inbounds i32, i32* %3836, i64 %3837
  %3839 = load i32, i32* %3838, align 4
  %3840 = add nsw i32 %3834, %3839
  %3841 = sext i32 %3840 to i64
  %3842 = sext i32 %4 to i64
  %3843 = shl nsw i64 %3842, 18
  %3844 = mul i64 %3843, %3841
  %3845 = add i64 %3844, 2147483648
  %3846 = ashr i64 %3845, 32
  br label %3847

3847:                                             ; preds = %3815, %3819
  %3848 = phi i64 [ %3846, %3819 ], [ 0, %3815 ]
  %3849 = add nsw i64 %3848, %3817
  %3850 = icmp sgt i64 %3849, 2147483646
  br i1 %3850, label %4487, label %3851

3851:                                             ; preds = %3847
  %3852 = trunc i64 %3849 to i32
  %3853 = icmp ugt i32 %3776, %3852
  br i1 %3853, label %3854, label %4487

3854:                                             ; preds = %3851
  store i32 %3816, i32* %11, align 4
  %3855 = load i32, i32* %18, align 4
  store i32 %3855, i32* %12, align 4
  br label %4487

3856:                                             ; preds = %3689
  %3857 = or i1 %3690, %3692
  br i1 %3857, label %4175, label %3858

3858:                                             ; preds = %3856
  %3859 = sub nsw i32 %3687, %3029
  %3860 = shl nsw i32 %3859, 1
  %3861 = add nsw i32 %3860, %3029
  %3862 = icmp slt i32 %3861, %70
  %3863 = icmp sgt i32 %3861, %72
  %3864 = or i1 %3862, %3863
  br i1 %3864, label %4017, label %3865

3865:                                             ; preds = %3858
  %3866 = add nsw i32 %3030, %3028
  %3867 = icmp slt i32 %3866, %74
  %3868 = icmp sgt i32 %3866, %76
  %3869 = or i1 %3867, %3868
  br i1 %3869, label %3940, label %3870

3870:                                             ; preds = %3865
  %3871 = trunc i32 %3866 to i16
  %3872 = trunc i32 %3861 to i16
  %3873 = icmp eq i8* %13, null
  br i1 %3873, label %3874, label %3886

3874:                                             ; preds = %3870
  %3875 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3876 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3875, align 8
  %3877 = ashr i32 %3866, 3
  %3878 = mul nsw i32 %3877, %26
  %3879 = ashr i32 %3861, 3
  %3880 = add nsw i32 %3879, %3878
  %3881 = sext i32 %3880 to i64
  %3882 = getelementptr inbounds i8, i8* %36, i64 %3881
  %3883 = and i32 %3861, 7
  %3884 = and i32 %3866, 7
  %3885 = call i32 %3876(i8* %3882, i32 %26, i32 %3883, i32 %3884, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3898

3886:                                             ; preds = %3870
  %3887 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3888 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3887, align 8
  %3889 = ashr i32 %3866, 3
  %3890 = mul nsw i32 %3889, %26
  %3891 = ashr i32 %3861, 3
  %3892 = add nsw i32 %3891, %3890
  %3893 = sext i32 %3892 to i64
  %3894 = getelementptr inbounds i8, i8* %36, i64 %3893
  %3895 = and i32 %3861, 7
  %3896 = and i32 %3866, 7
  %3897 = call i32 %3888(i8* %3894, i32 %26, i32 %3895, i32 %3896, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3898

3898:                                             ; preds = %3886, %3874
  %3899 = phi i32 [ %3885, %3874 ], [ %3897, %3886 ]
  %3900 = sext i32 %3899 to i64
  %3901 = icmp eq i32** %10, null
  br i1 %3901, label %3929, label %3902

3902:                                             ; preds = %3898
  %3903 = sub i16 %3871, %38
  %3904 = sub i16 %3872, %40
  %3905 = icmp eq i16 %3903, 0
  %3906 = icmp eq i16 %3904, 0
  %3907 = xor i1 %3906, true
  %3908 = zext i1 %3907 to i64
  %3909 = select i1 %3906, i64 2, i64 3
  %3910 = select i1 %3905, i64 %3908, i64 %3909
  %3911 = getelementptr inbounds i32, i32* %9, i64 %3910
  %3912 = load i32, i32* %3911, align 4
  %3913 = load i32*, i32** %10, align 8
  %3914 = sext i16 %3903 to i64
  %3915 = getelementptr inbounds i32, i32* %3913, i64 %3914
  %3916 = load i32, i32* %3915, align 4
  %3917 = add nsw i32 %3916, %3912
  %3918 = getelementptr inbounds i32*, i32** %10, i64 1
  %3919 = load i32*, i32** %3918, align 8
  %3920 = sext i16 %3904 to i64
  %3921 = getelementptr inbounds i32, i32* %3919, i64 %3920
  %3922 = load i32, i32* %3921, align 4
  %3923 = add nsw i32 %3917, %3922
  %3924 = sext i32 %3923 to i64
  %3925 = sext i32 %4 to i64
  %3926 = mul nsw i64 %3924, %3925
  %3927 = add nsw i64 %3926, 8192
  %3928 = lshr i64 %3927, 14
  br label %3929

3929:                                             ; preds = %3898, %3902
  %3930 = phi i64 [ %3928, %3902 ], [ 0, %3898 ]
  %3931 = shl i64 %3930, 32
  %3932 = ashr exact i64 %3931, 32
  %3933 = add nsw i64 %3932, %3900
  %3934 = icmp sgt i64 %3933, 2147483646
  br i1 %3934, label %3940, label %3935

3935:                                             ; preds = %3929
  %3936 = trunc i64 %3933 to i32
  %3937 = icmp ugt i32 %3685, %3936
  br i1 %3937, label %3938, label %3940

3938:                                             ; preds = %3935
  store i32 %3899, i32* %11, align 4
  %3939 = load i32, i32* %18, align 4
  store i32 %3939, i32* %12, align 4
  br label %3940

3940:                                             ; preds = %3938, %3935, %3929, %3865
  %3941 = phi i32 [ %3685, %3929 ], [ %3685, %3935 ], [ %3936, %3938 ], [ %3685, %3865 ]
  %3942 = phi i32 [ %3028, %3929 ], [ %3028, %3935 ], [ %3866, %3938 ], [ %3028, %3865 ]
  %3943 = phi i32 [ %3687, %3929 ], [ %3687, %3935 ], [ %3861, %3938 ], [ %3687, %3865 ]
  %3944 = sub nsw i32 %3028, %3030
  %3945 = icmp slt i32 %3944, %74
  %3946 = icmp sgt i32 %3944, %76
  %3947 = or i1 %3945, %3946
  br i1 %3947, label %4017, label %3948

3948:                                             ; preds = %3940
  %3949 = trunc i32 %3944 to i16
  %3950 = trunc i32 %3861 to i16
  %3951 = icmp eq i8* %13, null
  br i1 %3951, label %3952, label %3964

3952:                                             ; preds = %3948
  %3953 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3954 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3953, align 8
  %3955 = ashr i32 %3944, 3
  %3956 = mul nsw i32 %3955, %26
  %3957 = ashr i32 %3861, 3
  %3958 = add nsw i32 %3957, %3956
  %3959 = sext i32 %3958 to i64
  %3960 = getelementptr inbounds i8, i8* %36, i64 %3959
  %3961 = and i32 %3861, 7
  %3962 = and i32 %3944, 7
  %3963 = call i32 %3954(i8* %3960, i32 %26, i32 %3961, i32 %3962, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3976

3964:                                             ; preds = %3948
  %3965 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3966 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3965, align 8
  %3967 = ashr i32 %3944, 3
  %3968 = mul nsw i32 %3967, %26
  %3969 = ashr i32 %3861, 3
  %3970 = add nsw i32 %3969, %3968
  %3971 = sext i32 %3970 to i64
  %3972 = getelementptr inbounds i8, i8* %36, i64 %3971
  %3973 = and i32 %3861, 7
  %3974 = and i32 %3944, 7
  %3975 = call i32 %3966(i8* %3972, i32 %26, i32 %3973, i32 %3974, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3976

3976:                                             ; preds = %3964, %3952
  %3977 = phi i32 [ %3963, %3952 ], [ %3975, %3964 ]
  %3978 = sext i32 %3977 to i64
  %3979 = icmp eq i32** %10, null
  br i1 %3979, label %4008, label %3980

3980:                                             ; preds = %3976
  %3981 = sub i16 %3949, %38
  %3982 = sub i16 %3950, %40
  %3983 = icmp eq i16 %3981, 0
  %3984 = icmp eq i16 %3982, 0
  %3985 = xor i1 %3984, true
  %3986 = zext i1 %3985 to i64
  %3987 = select i1 %3984, i64 2, i64 3
  %3988 = select i1 %3983, i64 %3986, i64 %3987
  %3989 = getelementptr inbounds i32, i32* %9, i64 %3988
  %3990 = load i32, i32* %3989, align 4
  %3991 = load i32*, i32** %10, align 8
  %3992 = sext i16 %3981 to i64
  %3993 = getelementptr inbounds i32, i32* %3991, i64 %3992
  %3994 = load i32, i32* %3993, align 4
  %3995 = add nsw i32 %3994, %3990
  %3996 = getelementptr inbounds i32*, i32** %10, i64 1
  %3997 = load i32*, i32** %3996, align 8
  %3998 = sext i16 %3982 to i64
  %3999 = getelementptr inbounds i32, i32* %3997, i64 %3998
  %4000 = load i32, i32* %3999, align 4
  %4001 = add nsw i32 %3995, %4000
  %4002 = sext i32 %4001 to i64
  %4003 = sext i32 %4 to i64
  %4004 = shl nsw i64 %4003, 18
  %4005 = mul i64 %4004, %4002
  %4006 = add i64 %4005, 2147483648
  %4007 = ashr i64 %4006, 32
  br label %4008

4008:                                             ; preds = %3976, %3980
  %4009 = phi i64 [ %4007, %3980 ], [ 0, %3976 ]
  %4010 = add nsw i64 %4009, %3978
  %4011 = icmp sgt i64 %4010, 2147483646
  br i1 %4011, label %4017, label %4012

4012:                                             ; preds = %4008
  %4013 = trunc i64 %4010 to i32
  %4014 = icmp ugt i32 %3941, %4013
  br i1 %4014, label %4015, label %4017

4015:                                             ; preds = %4012
  store i32 %3977, i32* %11, align 4
  %4016 = load i32, i32* %18, align 4
  store i32 %4016, i32* %12, align 4
  br label %4017

4017:                                             ; preds = %4015, %4012, %4008, %3858, %3940
  %4018 = phi i32 [ %3941, %3940 ], [ %3685, %3858 ], [ %4013, %4015 ], [ %3941, %4012 ], [ %3941, %4008 ]
  %4019 = phi i32 [ %3942, %3940 ], [ %3028, %3858 ], [ %3944, %4015 ], [ %3942, %4012 ], [ %3942, %4008 ]
  %4020 = phi i32 [ %3943, %3940 ], [ %3687, %3858 ], [ %3861, %4015 ], [ %3943, %4012 ], [ %3943, %4008 ]
  %4021 = icmp ult i32 %3378, 2
  %4022 = icmp slt i32 %3687, %70
  %4023 = icmp sgt i32 %3687, %72
  %4024 = or i1 %4022, %4023
  br i1 %4021, label %4025, label %4100

4025:                                             ; preds = %4017
  br i1 %4024, label %4487, label %4026

4026:                                             ; preds = %4025
  %4027 = add nsw i32 %3030, %3028
  %4028 = icmp slt i32 %4027, %74
  %4029 = icmp sgt i32 %4027, %76
  %4030 = or i1 %4028, %4029
  br i1 %4030, label %4487, label %4031

4031:                                             ; preds = %4026
  %4032 = trunc i32 %4027 to i16
  %4033 = trunc i32 %3687 to i16
  %4034 = icmp eq i8* %13, null
  br i1 %4034, label %4035, label %4047

4035:                                             ; preds = %4031
  %4036 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4037 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4036, align 8
  %4038 = ashr i32 %4027, 3
  %4039 = mul nsw i32 %4038, %26
  %4040 = ashr i32 %3687, 3
  %4041 = add nsw i32 %4040, %4039
  %4042 = sext i32 %4041 to i64
  %4043 = getelementptr inbounds i8, i8* %36, i64 %4042
  %4044 = and i32 %3687, 7
  %4045 = and i32 %4027, 7
  %4046 = call i32 %4037(i8* %4043, i32 %26, i32 %4044, i32 %4045, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4059

4047:                                             ; preds = %4031
  %4048 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4049 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4048, align 8
  %4050 = ashr i32 %4027, 3
  %4051 = mul nsw i32 %4050, %26
  %4052 = ashr i32 %3687, 3
  %4053 = add nsw i32 %4052, %4051
  %4054 = sext i32 %4053 to i64
  %4055 = getelementptr inbounds i8, i8* %36, i64 %4054
  %4056 = and i32 %3687, 7
  %4057 = and i32 %4027, 7
  %4058 = call i32 %4049(i8* %4055, i32 %26, i32 %4056, i32 %4057, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4059

4059:                                             ; preds = %4047, %4035
  %4060 = phi i32 [ %4046, %4035 ], [ %4058, %4047 ]
  %4061 = sext i32 %4060 to i64
  %4062 = icmp eq i32** %10, null
  br i1 %4062, label %4091, label %4063

4063:                                             ; preds = %4059
  %4064 = sub i16 %4032, %38
  %4065 = sub i16 %4033, %40
  %4066 = icmp eq i16 %4064, 0
  %4067 = icmp eq i16 %4065, 0
  %4068 = xor i1 %4067, true
  %4069 = zext i1 %4068 to i64
  %4070 = select i1 %4067, i64 2, i64 3
  %4071 = select i1 %4066, i64 %4069, i64 %4070
  %4072 = getelementptr inbounds i32, i32* %9, i64 %4071
  %4073 = load i32, i32* %4072, align 4
  %4074 = load i32*, i32** %10, align 8
  %4075 = sext i16 %4064 to i64
  %4076 = getelementptr inbounds i32, i32* %4074, i64 %4075
  %4077 = load i32, i32* %4076, align 4
  %4078 = add nsw i32 %4077, %4073
  %4079 = getelementptr inbounds i32*, i32** %10, i64 1
  %4080 = load i32*, i32** %4079, align 8
  %4081 = sext i16 %4065 to i64
  %4082 = getelementptr inbounds i32, i32* %4080, i64 %4081
  %4083 = load i32, i32* %4082, align 4
  %4084 = add nsw i32 %4078, %4083
  %4085 = sext i32 %4084 to i64
  %4086 = sext i32 %4 to i64
  %4087 = shl nsw i64 %4086, 18
  %4088 = mul i64 %4087, %4085
  %4089 = add i64 %4088, 2147483648
  %4090 = ashr i64 %4089, 32
  br label %4091

4091:                                             ; preds = %4059, %4063
  %4092 = phi i64 [ %4090, %4063 ], [ 0, %4059 ]
  %4093 = add nsw i64 %4092, %4061
  %4094 = icmp sgt i64 %4093, 2147483646
  br i1 %4094, label %4487, label %4095

4095:                                             ; preds = %4091
  %4096 = trunc i64 %4093 to i32
  %4097 = icmp ugt i32 %4018, %4096
  br i1 %4097, label %4098, label %4487

4098:                                             ; preds = %4095
  store i32 %4060, i32* %11, align 4
  %4099 = load i32, i32* %18, align 4
  store i32 %4099, i32* %12, align 4
  br label %4487

4100:                                             ; preds = %4017
  br i1 %4024, label %4487, label %4101

4101:                                             ; preds = %4100
  %4102 = sub nsw i32 %3028, %3030
  %4103 = icmp slt i32 %4102, %74
  %4104 = icmp sgt i32 %4102, %76
  %4105 = or i1 %4103, %4104
  br i1 %4105, label %4487, label %4106

4106:                                             ; preds = %4101
  %4107 = trunc i32 %4102 to i16
  %4108 = trunc i32 %3687 to i16
  %4109 = icmp eq i8* %13, null
  br i1 %4109, label %4110, label %4122

4110:                                             ; preds = %4106
  %4111 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4112 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4111, align 8
  %4113 = ashr i32 %4102, 3
  %4114 = mul nsw i32 %4113, %26
  %4115 = ashr i32 %3687, 3
  %4116 = add nsw i32 %4115, %4114
  %4117 = sext i32 %4116 to i64
  %4118 = getelementptr inbounds i8, i8* %36, i64 %4117
  %4119 = and i32 %3687, 7
  %4120 = and i32 %4102, 7
  %4121 = call i32 %4112(i8* %4118, i32 %26, i32 %4119, i32 %4120, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4134

4122:                                             ; preds = %4106
  %4123 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4124 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4123, align 8
  %4125 = ashr i32 %4102, 3
  %4126 = mul nsw i32 %4125, %26
  %4127 = ashr i32 %3687, 3
  %4128 = add nsw i32 %4127, %4126
  %4129 = sext i32 %4128 to i64
  %4130 = getelementptr inbounds i8, i8* %36, i64 %4129
  %4131 = and i32 %3687, 7
  %4132 = and i32 %4102, 7
  %4133 = call i32 %4124(i8* %4130, i32 %26, i32 %4131, i32 %4132, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4134

4134:                                             ; preds = %4122, %4110
  %4135 = phi i32 [ %4121, %4110 ], [ %4133, %4122 ]
  %4136 = sext i32 %4135 to i64
  %4137 = icmp eq i32** %10, null
  br i1 %4137, label %4166, label %4138

4138:                                             ; preds = %4134
  %4139 = sub i16 %4107, %38
  %4140 = sub i16 %4108, %40
  %4141 = icmp eq i16 %4139, 0
  %4142 = icmp eq i16 %4140, 0
  %4143 = xor i1 %4142, true
  %4144 = zext i1 %4143 to i64
  %4145 = select i1 %4142, i64 2, i64 3
  %4146 = select i1 %4141, i64 %4144, i64 %4145
  %4147 = getelementptr inbounds i32, i32* %9, i64 %4146
  %4148 = load i32, i32* %4147, align 4
  %4149 = load i32*, i32** %10, align 8
  %4150 = sext i16 %4139 to i64
  %4151 = getelementptr inbounds i32, i32* %4149, i64 %4150
  %4152 = load i32, i32* %4151, align 4
  %4153 = add nsw i32 %4152, %4148
  %4154 = getelementptr inbounds i32*, i32** %10, i64 1
  %4155 = load i32*, i32** %4154, align 8
  %4156 = sext i16 %4140 to i64
  %4157 = getelementptr inbounds i32, i32* %4155, i64 %4156
  %4158 = load i32, i32* %4157, align 4
  %4159 = add nsw i32 %4153, %4158
  %4160 = sext i32 %4159 to i64
  %4161 = sext i32 %4 to i64
  %4162 = shl nsw i64 %4161, 18
  %4163 = mul i64 %4162, %4160
  %4164 = add i64 %4163, 2147483648
  %4165 = ashr i64 %4164, 32
  br label %4166

4166:                                             ; preds = %4134, %4138
  %4167 = phi i64 [ %4165, %4138 ], [ 0, %4134 ]
  %4168 = add nsw i64 %4167, %4136
  %4169 = icmp sgt i64 %4168, 2147483646
  br i1 %4169, label %4487, label %4170

4170:                                             ; preds = %4166
  %4171 = trunc i64 %4168 to i32
  %4172 = icmp ugt i32 %4018, %4171
  br i1 %4172, label %4173, label %4487

4173:                                             ; preds = %4170
  store i32 %4135, i32* %11, align 4
  %4174 = load i32, i32* %18, align 4
  store i32 %4174, i32* %12, align 4
  br label %4487

4175:                                             ; preds = %3856
  %4176 = and i1 %3690, %3692
  br i1 %4176, label %4177, label %4487

4177:                                             ; preds = %4175
  %4178 = sub nsw i32 %3686, %3028
  br i1 %3134, label %4255, label %4179

4179:                                             ; preds = %4177
  %4180 = shl nsw i32 %4178, 1
  %4181 = add nsw i32 %4180, %3028
  %4182 = icmp slt i32 %4181, %74
  %4183 = icmp sgt i32 %4181, %76
  %4184 = or i1 %4182, %4183
  br i1 %4184, label %4255, label %4185

4185:                                             ; preds = %4179
  %4186 = trunc i32 %4181 to i16
  %4187 = trunc i32 %3131 to i16
  %4188 = icmp eq i8* %13, null
  br i1 %4188, label %4189, label %4201

4189:                                             ; preds = %4185
  %4190 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4191 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4190, align 8
  %4192 = ashr i32 %4181, 3
  %4193 = mul nsw i32 %4192, %26
  %4194 = ashr i32 %3131, 3
  %4195 = add nsw i32 %4193, %4194
  %4196 = sext i32 %4195 to i64
  %4197 = getelementptr inbounds i8, i8* %36, i64 %4196
  %4198 = and i32 %3131, 7
  %4199 = and i32 %4181, 7
  %4200 = call i32 %4191(i8* %4197, i32 %26, i32 %4198, i32 %4199, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4213

4201:                                             ; preds = %4185
  %4202 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4203 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4202, align 8
  %4204 = ashr i32 %4181, 3
  %4205 = mul nsw i32 %4204, %26
  %4206 = ashr i32 %3131, 3
  %4207 = add nsw i32 %4205, %4206
  %4208 = sext i32 %4207 to i64
  %4209 = getelementptr inbounds i8, i8* %36, i64 %4208
  %4210 = and i32 %3131, 7
  %4211 = and i32 %4181, 7
  %4212 = call i32 %4203(i8* %4209, i32 %26, i32 %4210, i32 %4211, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4213

4213:                                             ; preds = %4201, %4189
  %4214 = phi i32 [ %4200, %4189 ], [ %4212, %4201 ]
  %4215 = sext i32 %4214 to i64
  %4216 = icmp eq i32** %10, null
  br i1 %4216, label %4244, label %4217

4217:                                             ; preds = %4213
  %4218 = sub i16 %4186, %38
  %4219 = sub i16 %4187, %40
  %4220 = icmp eq i16 %4218, 0
  %4221 = icmp eq i16 %4219, 0
  %4222 = xor i1 %4221, true
  %4223 = zext i1 %4222 to i64
  %4224 = select i1 %4221, i64 2, i64 3
  %4225 = select i1 %4220, i64 %4223, i64 %4224
  %4226 = getelementptr inbounds i32, i32* %9, i64 %4225
  %4227 = load i32, i32* %4226, align 4
  %4228 = load i32*, i32** %10, align 8
  %4229 = sext i16 %4218 to i64
  %4230 = getelementptr inbounds i32, i32* %4228, i64 %4229
  %4231 = load i32, i32* %4230, align 4
  %4232 = add nsw i32 %4231, %4227
  %4233 = getelementptr inbounds i32*, i32** %10, i64 1
  %4234 = load i32*, i32** %4233, align 8
  %4235 = sext i16 %4219 to i64
  %4236 = getelementptr inbounds i32, i32* %4234, i64 %4235
  %4237 = load i32, i32* %4236, align 4
  %4238 = add nsw i32 %4232, %4237
  %4239 = sext i32 %4238 to i64
  %4240 = sext i32 %4 to i64
  %4241 = mul nsw i64 %4239, %4240
  %4242 = add nsw i64 %4241, 8192
  %4243 = lshr i64 %4242, 14
  br label %4244

4244:                                             ; preds = %4213, %4217
  %4245 = phi i64 [ %4243, %4217 ], [ 0, %4213 ]
  %4246 = shl i64 %4245, 32
  %4247 = ashr exact i64 %4246, 32
  %4248 = add nsw i64 %4247, %4215
  %4249 = icmp sgt i64 %4248, 2147483646
  br i1 %4249, label %4255, label %4250

4250:                                             ; preds = %4244
  %4251 = trunc i64 %4248 to i32
  %4252 = icmp ugt i32 %3685, %4251
  br i1 %4252, label %4253, label %4255

4253:                                             ; preds = %4250
  store i32 %4214, i32* %11, align 4
  %4254 = load i32, i32* %18, align 4
  store i32 %4254, i32* %12, align 4
  br label %4255

4255:                                             ; preds = %4253, %4250, %4244, %4179, %4177
  %4256 = phi i32 [ %3685, %4177 ], [ %3685, %4179 ], [ %4251, %4253 ], [ %3685, %4250 ], [ %3685, %4244 ]
  %4257 = phi i32 [ %3686, %4177 ], [ %3686, %4179 ], [ %4181, %4253 ], [ %3686, %4250 ], [ %3686, %4244 ]
  %4258 = phi i32 [ %3029, %4177 ], [ %3029, %4179 ], [ %3131, %4253 ], [ %3029, %4250 ], [ %3029, %4244 ]
  br i1 %3052, label %4334, label %4259

4259:                                             ; preds = %4255
  %4260 = shl nsw i32 %4178, 1
  %4261 = add nsw i32 %4260, %3028
  %4262 = icmp slt i32 %4261, %74
  %4263 = icmp sgt i32 %4261, %76
  %4264 = or i1 %4262, %4263
  br i1 %4264, label %4334, label %4265

4265:                                             ; preds = %4259
  %4266 = trunc i32 %4261 to i16
  %4267 = trunc i32 %3049 to i16
  %4268 = icmp eq i8* %13, null
  br i1 %4268, label %4269, label %4281

4269:                                             ; preds = %4265
  %4270 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4271 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4270, align 8
  %4272 = ashr i32 %4261, 3
  %4273 = mul nsw i32 %4272, %26
  %4274 = ashr i32 %3049, 3
  %4275 = add nsw i32 %4273, %4274
  %4276 = sext i32 %4275 to i64
  %4277 = getelementptr inbounds i8, i8* %36, i64 %4276
  %4278 = and i32 %3049, 7
  %4279 = and i32 %4261, 7
  %4280 = call i32 %4271(i8* %4277, i32 %26, i32 %4278, i32 %4279, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4293

4281:                                             ; preds = %4265
  %4282 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4283 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4282, align 8
  %4284 = ashr i32 %4261, 3
  %4285 = mul nsw i32 %4284, %26
  %4286 = ashr i32 %3049, 3
  %4287 = add nsw i32 %4285, %4286
  %4288 = sext i32 %4287 to i64
  %4289 = getelementptr inbounds i8, i8* %36, i64 %4288
  %4290 = and i32 %3049, 7
  %4291 = and i32 %4261, 7
  %4292 = call i32 %4283(i8* %4289, i32 %26, i32 %4290, i32 %4291, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4293

4293:                                             ; preds = %4281, %4269
  %4294 = phi i32 [ %4280, %4269 ], [ %4292, %4281 ]
  %4295 = sext i32 %4294 to i64
  %4296 = icmp eq i32** %10, null
  br i1 %4296, label %4325, label %4297

4297:                                             ; preds = %4293
  %4298 = sub i16 %4266, %38
  %4299 = sub i16 %4267, %40
  %4300 = icmp eq i16 %4298, 0
  %4301 = icmp eq i16 %4299, 0
  %4302 = xor i1 %4301, true
  %4303 = zext i1 %4302 to i64
  %4304 = select i1 %4301, i64 2, i64 3
  %4305 = select i1 %4300, i64 %4303, i64 %4304
  %4306 = getelementptr inbounds i32, i32* %9, i64 %4305
  %4307 = load i32, i32* %4306, align 4
  %4308 = load i32*, i32** %10, align 8
  %4309 = sext i16 %4298 to i64
  %4310 = getelementptr inbounds i32, i32* %4308, i64 %4309
  %4311 = load i32, i32* %4310, align 4
  %4312 = add nsw i32 %4311, %4307
  %4313 = getelementptr inbounds i32*, i32** %10, i64 1
  %4314 = load i32*, i32** %4313, align 8
  %4315 = sext i16 %4299 to i64
  %4316 = getelementptr inbounds i32, i32* %4314, i64 %4315
  %4317 = load i32, i32* %4316, align 4
  %4318 = add nsw i32 %4312, %4317
  %4319 = sext i32 %4318 to i64
  %4320 = sext i32 %4 to i64
  %4321 = shl nsw i64 %4320, 18
  %4322 = mul i64 %4321, %4319
  %4323 = add i64 %4322, 2147483648
  %4324 = ashr i64 %4323, 32
  br label %4325

4325:                                             ; preds = %4293, %4297
  %4326 = phi i64 [ %4324, %4297 ], [ 0, %4293 ]
  %4327 = add nsw i64 %4326, %4295
  %4328 = icmp sgt i64 %4327, 2147483646
  br i1 %4328, label %4334, label %4329

4329:                                             ; preds = %4325
  %4330 = trunc i64 %4327 to i32
  %4331 = icmp ugt i32 %4256, %4330
  br i1 %4331, label %4332, label %4334

4332:                                             ; preds = %4329
  store i32 %4294, i32* %11, align 4
  %4333 = load i32, i32* %18, align 4
  store i32 %4333, i32* %12, align 4
  br label %4334

4334:                                             ; preds = %4332, %4329, %4325, %4259, %4255
  %4335 = phi i32 [ %4256, %4255 ], [ %4256, %4259 ], [ %4330, %4332 ], [ %4256, %4329 ], [ %4256, %4325 ]
  %4336 = phi i32 [ %4257, %4255 ], [ %4257, %4259 ], [ %4261, %4332 ], [ %4257, %4329 ], [ %4257, %4325 ]
  %4337 = phi i32 [ %4258, %4255 ], [ %4258, %4259 ], [ %3049, %4332 ], [ %4258, %4329 ], [ %4258, %4325 ]
  switch i32 %3378, label %4486 [
    i32 0, label %4338
    i32 2, label %4338
    i32 1, label %4412
    i32 3, label %4412
  ]

4338:                                             ; preds = %4334, %4334
  %4339 = icmp slt i32 %3686, %74
  %4340 = or i1 %3134, %4339
  %4341 = icmp sgt i32 %3686, %76
  %4342 = or i1 %4341, %4340
  br i1 %4342, label %4487, label %4343

4343:                                             ; preds = %4338
  %4344 = trunc i32 %3686 to i16
  %4345 = trunc i32 %3131 to i16
  %4346 = icmp eq i8* %13, null
  br i1 %4346, label %4347, label %4359

4347:                                             ; preds = %4343
  %4348 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4349 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4348, align 8
  %4350 = ashr i32 %3686, 3
  %4351 = mul nsw i32 %4350, %26
  %4352 = ashr i32 %3131, 3
  %4353 = add nsw i32 %4351, %4352
  %4354 = sext i32 %4353 to i64
  %4355 = getelementptr inbounds i8, i8* %36, i64 %4354
  %4356 = and i32 %3131, 7
  %4357 = and i32 %3686, 7
  %4358 = call i32 %4349(i8* %4355, i32 %26, i32 %4356, i32 %4357, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4371

4359:                                             ; preds = %4343
  %4360 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4361 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4360, align 8
  %4362 = ashr i32 %3686, 3
  %4363 = mul nsw i32 %4362, %26
  %4364 = ashr i32 %3131, 3
  %4365 = add nsw i32 %4363, %4364
  %4366 = sext i32 %4365 to i64
  %4367 = getelementptr inbounds i8, i8* %36, i64 %4366
  %4368 = and i32 %3131, 7
  %4369 = and i32 %3686, 7
  %4370 = call i32 %4361(i8* %4367, i32 %26, i32 %4368, i32 %4369, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4371

4371:                                             ; preds = %4359, %4347
  %4372 = phi i32 [ %4358, %4347 ], [ %4370, %4359 ]
  %4373 = sext i32 %4372 to i64
  %4374 = icmp eq i32** %10, null
  br i1 %4374, label %4403, label %4375

4375:                                             ; preds = %4371
  %4376 = sub i16 %4344, %38
  %4377 = sub i16 %4345, %40
  %4378 = icmp eq i16 %4376, 0
  %4379 = icmp eq i16 %4377, 0
  %4380 = xor i1 %4379, true
  %4381 = zext i1 %4380 to i64
  %4382 = select i1 %4379, i64 2, i64 3
  %4383 = select i1 %4378, i64 %4381, i64 %4382
  %4384 = getelementptr inbounds i32, i32* %9, i64 %4383
  %4385 = load i32, i32* %4384, align 4
  %4386 = load i32*, i32** %10, align 8
  %4387 = sext i16 %4376 to i64
  %4388 = getelementptr inbounds i32, i32* %4386, i64 %4387
  %4389 = load i32, i32* %4388, align 4
  %4390 = add nsw i32 %4389, %4385
  %4391 = getelementptr inbounds i32*, i32** %10, i64 1
  %4392 = load i32*, i32** %4391, align 8
  %4393 = sext i16 %4377 to i64
  %4394 = getelementptr inbounds i32, i32* %4392, i64 %4393
  %4395 = load i32, i32* %4394, align 4
  %4396 = add nsw i32 %4390, %4395
  %4397 = sext i32 %4396 to i64
  %4398 = sext i32 %4 to i64
  %4399 = shl nsw i64 %4398, 18
  %4400 = mul i64 %4399, %4397
  %4401 = add i64 %4400, 2147483648
  %4402 = ashr i64 %4401, 32
  br label %4403

4403:                                             ; preds = %4371, %4375
  %4404 = phi i64 [ %4402, %4375 ], [ 0, %4371 ]
  %4405 = add nsw i64 %4404, %4373
  %4406 = icmp sgt i64 %4405, 2147483646
  br i1 %4406, label %4487, label %4407

4407:                                             ; preds = %4403
  %4408 = trunc i64 %4405 to i32
  %4409 = icmp ugt i32 %4335, %4408
  br i1 %4409, label %4410, label %4487

4410:                                             ; preds = %4407
  store i32 %4372, i32* %11, align 4
  %4411 = load i32, i32* %18, align 4
  store i32 %4411, i32* %12, align 4
  br label %4487

4412:                                             ; preds = %4334, %4334
  %4413 = icmp slt i32 %3686, %74
  %4414 = or i1 %3052, %4413
  %4415 = icmp sgt i32 %3686, %76
  %4416 = or i1 %4415, %4414
  br i1 %4416, label %4487, label %4417

4417:                                             ; preds = %4412
  %4418 = trunc i32 %3686 to i16
  %4419 = trunc i32 %3049 to i16
  %4420 = icmp eq i8* %13, null
  br i1 %4420, label %4421, label %4433

4421:                                             ; preds = %4417
  %4422 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4423 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4422, align 8
  %4424 = ashr i32 %3686, 3
  %4425 = mul nsw i32 %4424, %26
  %4426 = ashr i32 %3049, 3
  %4427 = add nsw i32 %4425, %4426
  %4428 = sext i32 %4427 to i64
  %4429 = getelementptr inbounds i8, i8* %36, i64 %4428
  %4430 = and i32 %3049, 7
  %4431 = and i32 %3686, 7
  %4432 = call i32 %4423(i8* %4429, i32 %26, i32 %4430, i32 %4431, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4445

4433:                                             ; preds = %4417
  %4434 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4435 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4434, align 8
  %4436 = ashr i32 %3686, 3
  %4437 = mul nsw i32 %4436, %26
  %4438 = ashr i32 %3049, 3
  %4439 = add nsw i32 %4437, %4438
  %4440 = sext i32 %4439 to i64
  %4441 = getelementptr inbounds i8, i8* %36, i64 %4440
  %4442 = and i32 %3049, 7
  %4443 = and i32 %3686, 7
  %4444 = call i32 %4435(i8* %4441, i32 %26, i32 %4442, i32 %4443, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4445

4445:                                             ; preds = %4433, %4421
  %4446 = phi i32 [ %4432, %4421 ], [ %4444, %4433 ]
  %4447 = sext i32 %4446 to i64
  %4448 = icmp eq i32** %10, null
  br i1 %4448, label %4477, label %4449

4449:                                             ; preds = %4445
  %4450 = sub i16 %4418, %38
  %4451 = sub i16 %4419, %40
  %4452 = icmp eq i16 %4450, 0
  %4453 = icmp eq i16 %4451, 0
  %4454 = xor i1 %4453, true
  %4455 = zext i1 %4454 to i64
  %4456 = select i1 %4453, i64 2, i64 3
  %4457 = select i1 %4452, i64 %4455, i64 %4456
  %4458 = getelementptr inbounds i32, i32* %9, i64 %4457
  %4459 = load i32, i32* %4458, align 4
  %4460 = load i32*, i32** %10, align 8
  %4461 = sext i16 %4450 to i64
  %4462 = getelementptr inbounds i32, i32* %4460, i64 %4461
  %4463 = load i32, i32* %4462, align 4
  %4464 = add nsw i32 %4463, %4459
  %4465 = getelementptr inbounds i32*, i32** %10, i64 1
  %4466 = load i32*, i32** %4465, align 8
  %4467 = sext i16 %4451 to i64
  %4468 = getelementptr inbounds i32, i32* %4466, i64 %4467
  %4469 = load i32, i32* %4468, align 4
  %4470 = add nsw i32 %4464, %4469
  %4471 = sext i32 %4470 to i64
  %4472 = sext i32 %4 to i64
  %4473 = shl nsw i64 %4472, 18
  %4474 = mul i64 %4473, %4471
  %4475 = add i64 %4474, 2147483648
  %4476 = ashr i64 %4475, 32
  br label %4477

4477:                                             ; preds = %4445, %4449
  %4478 = phi i64 [ %4476, %4449 ], [ 0, %4445 ]
  %4479 = add nsw i64 %4478, %4447
  %4480 = icmp sgt i64 %4479, 2147483646
  br i1 %4480, label %4487, label %4481

4481:                                             ; preds = %4477
  %4482 = trunc i64 %4479 to i32
  %4483 = icmp ugt i32 %4335, %4482
  br i1 %4483, label %4484, label %4487

4484:                                             ; preds = %4481
  store i32 %4446, i32* %11, align 4
  %4485 = load i32, i32* %18, align 4
  store i32 %4485, i32* %12, align 4
  br label %4487

4486:                                             ; preds = %4334
  unreachable

4487:                                             ; preds = %3032, %4484, %4481, %4477, %4410, %4407, %4403, %4173, %4170, %4166, %4098, %4095, %4091, %3854, %3851, %3847, %4175, %3781, %3775, %4026, %4025, %4101, %4100, %4338, %4412, %3026, %3684, %3039
  %4488 = phi i32 [ %3685, %3684 ], [ %3027, %3039 ], [ %3027, %3026 ], [ %3685, %4175 ], [ %3776, %3781 ], [ %3776, %3775 ], [ %4018, %4026 ], [ %4018, %4025 ], [ %4018, %4101 ], [ %4018, %4100 ], [ %4335, %4338 ], [ %4335, %4412 ], [ %3852, %3854 ], [ %3776, %3851 ], [ %3776, %3847 ], [ %4096, %4098 ], [ %4018, %4095 ], [ %4018, %4091 ], [ %4171, %4173 ], [ %4018, %4170 ], [ %4018, %4166 ], [ %4408, %4410 ], [ %4335, %4407 ], [ %4335, %4403 ], [ %4482, %4484 ], [ %4335, %4481 ], [ %4335, %4477 ], [ %3027, %3032 ]
  %4489 = phi i32 [ %3686, %3684 ], [ %3028, %3039 ], [ %3028, %3026 ], [ %3686, %4175 ], [ %3686, %3781 ], [ %3686, %3775 ], [ %4019, %4026 ], [ %4019, %4025 ], [ %4019, %4101 ], [ %4019, %4100 ], [ %4336, %4338 ], [ %4336, %4412 ], [ %3783, %3854 ], [ %3686, %3851 ], [ %3686, %3847 ], [ %4027, %4098 ], [ %4019, %4095 ], [ %4019, %4091 ], [ %4102, %4173 ], [ %4019, %4170 ], [ %4019, %4166 ], [ %3686, %4410 ], [ %4336, %4407 ], [ %4336, %4403 ], [ %3686, %4484 ], [ %4336, %4481 ], [ %4336, %4477 ], [ %3028, %3032 ]
  %4490 = phi i32 [ %3687, %3684 ], [ %3029, %3039 ], [ %3029, %3026 ], [ %3687, %4175 ], [ %3777, %3781 ], [ %3777, %3775 ], [ %4020, %4026 ], [ %4020, %4025 ], [ %4020, %4101 ], [ %4020, %4100 ], [ %4337, %4338 ], [ %4337, %4412 ], [ %3687, %3854 ], [ %3777, %3851 ], [ %3777, %3847 ], [ %3687, %4098 ], [ %4020, %4095 ], [ %4020, %4091 ], [ %3687, %4173 ], [ %4020, %4170 ], [ %4020, %4166 ], [ %3131, %4410 ], [ %4337, %4407 ], [ %4337, %4403 ], [ %3049, %4484 ], [ %4337, %4481 ], [ %4337, %4477 ], [ %3029, %3032 ]
  %4491 = trunc i32 %4489 to i16
  store i16 %4491, i16* %27, align 2
  %4492 = trunc i32 %4490 to i16
  store i16 %4492, i16* %31, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  ret i32 %4488
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_find_best_sub_pixel_tree_pruned_more(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* readonly, i32, i32, i32* readonly, i32* readonly, i32** readonly, i32*, i32*, i8*, i32, i32, i32) local_unnamed_addr #5 {
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %24 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 -1431655766, i32* %18, align 4
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = sext i16 %28 to i32
  %30 = mul nsw i32 %26, %29
  %31 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = add nsw i32 %30, %33
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = shl nsw i32 %29, 3
  %42 = shl nsw i32 %33, 3
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = shl nsw i32 %44, 3
  %46 = sext i16 %40 to i32
  %47 = add nsw i32 %46, -8184
  %48 = icmp sgt i32 %45, %47
  %49 = select i1 %48, i32 %45, i32 %47
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = shl nsw i32 %51, 3
  %53 = add nsw i32 %46, 8184
  %54 = icmp slt i32 %52, %53
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = shl nsw i32 %57, 3
  %59 = sext i16 %38 to i32
  %60 = add nsw i32 %59, -8184
  %61 = icmp sgt i32 %58, %60
  %62 = select i1 %61, i32 %58, i32 %60
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = shl nsw i32 %64, 3
  %66 = add nsw i32 %59, 8184
  %67 = icmp slt i32 %65, %66
  %68 = select i1 %67, i32 %65, i32 %66
  %69 = icmp sgt i32 %49, -16383
  %70 = select i1 %69, i32 %49, i32 -16383
  %71 = icmp slt i32 %55, 16382
  %72 = select i1 %71, i32 %55, i32 16382
  %73 = icmp sgt i32 %62, -16383
  %74 = select i1 %73, i32 %62, i32 -16383
  %75 = icmp slt i32 %68, 16382
  %76 = select i1 %75, i32 %68, i32 16382
  %77 = shl i16 %28, 3
  store i16 %77, i16* %27, align 2
  %78 = shl i16 %32, 3
  store i16 %78, i16* %31, align 2
  %79 = tail call fastcc i32 @setup_center_error(%struct.macroblockd* %23, %struct.mv* %1, %struct.mv* %2, i32 %4, %struct.vp9_variance_vtable* %5, i8* %20, i32 %22, i8* %36, i32 %26, i8* %13, i32 %14, i32 %15, i32 %34, i32* %9, i32** %10, i32* %12, i32* %11)
  %80 = icmp eq i32* %8, null
  br i1 %80, label %222, label %81

81:                                               ; preds = %17
  %82 = load i32, i32* %8, align 4
  %83 = icmp eq i32 %82, 2147483647
  br i1 %83, label %222, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds i32, i32* %8, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 2147483647
  br i1 %87, label %222, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i32, i32* %8, i64 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 2147483647
  br i1 %91, label %222, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds i32, i32* %8, i64 3
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 2147483647
  br i1 %95, label %222, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds i32, i32* %8, i64 4
  %98 = load i32, i32* %97, align 4
  %99 = icmp ne i32 %98, 2147483647
  %100 = icmp slt i32 %82, %86
  %101 = and i1 %100, %99
  %102 = icmp slt i32 %82, %90
  %103 = and i1 %102, %101
  %104 = icmp slt i32 %82, %94
  %105 = and i1 %104, %103
  %106 = icmp slt i32 %82, %98
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %222

108:                                              ; preds = %96
  %109 = sext i32 %86 to i64
  %110 = sext i32 %94 to i64
  %111 = sub nsw i64 %109, %110
  %112 = sext i32 %82 to i64
  %113 = shl nsw i64 %112, 1
  %114 = sub nsw i64 %109, %113
  %115 = add nsw i64 %114, %110
  %116 = sext i32 %98 to i64
  %117 = sext i32 %90 to i64
  %118 = sub nsw i64 %116, %117
  %119 = sub nsw i64 %116, %113
  %120 = add nsw i64 %119, %117
  %121 = xor i64 %115, %111
  %122 = icmp slt i64 %121, 0
  %123 = sdiv i64 %115, 2
  %124 = sub nsw i64 0, %123
  %125 = select i1 %122, i64 %124, i64 %123
  %126 = add nsw i64 %125, %111
  %127 = sdiv i64 %126, %115
  %128 = xor i64 %120, %118
  %129 = icmp slt i64 %128, 0
  %130 = sdiv i64 %120, 2
  %131 = sub nsw i64 0, %130
  %132 = select i1 %129, i64 %131, i64 %130
  %133 = add nsw i64 %132, %118
  %134 = sdiv i64 %133, %120
  %135 = trunc i64 %134 to i32
  %136 = or i64 %134, %127
  %137 = trunc i64 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %1573, label %139

139:                                              ; preds = %108
  %140 = trunc i64 %127 to i32
  %141 = shl nsw i32 %140, 2
  %142 = add nsw i32 %141, %42
  %143 = icmp slt i32 %142, %70
  %144 = icmp sgt i32 %142, %72
  %145 = or i1 %143, %144
  br i1 %145, label %1573, label %146

146:                                              ; preds = %139
  %147 = shl nsw i32 %135, 2
  %148 = add nsw i32 %147, %41
  %149 = icmp slt i32 %148, %74
  %150 = icmp sgt i32 %148, %76
  %151 = or i1 %149, %150
  br i1 %151, label %1573, label %152

152:                                              ; preds = %146
  %153 = trunc i32 %148 to i16
  %154 = trunc i32 %142 to i16
  %155 = icmp eq i8* %13, null
  br i1 %155, label %156, label %168

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %158 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %157, align 8
  %159 = ashr i32 %148, 3
  %160 = mul nsw i32 %159, %26
  %161 = ashr i32 %142, 3
  %162 = add nsw i32 %160, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %36, i64 %163
  %165 = and i32 %142, 4
  %166 = and i32 %148, 4
  %167 = call i32 %158(i8* %164, i32 %26, i32 %165, i32 %166, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %180

168:                                              ; preds = %152
  %169 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %170 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %169, align 8
  %171 = ashr i32 %148, 3
  %172 = mul nsw i32 %171, %26
  %173 = ashr i32 %142, 3
  %174 = add nsw i32 %172, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %36, i64 %175
  %177 = and i32 %142, 4
  %178 = and i32 %148, 4
  %179 = call i32 %170(i8* %176, i32 %26, i32 %177, i32 %178, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %180

180:                                              ; preds = %168, %156
  %181 = phi i32 [ %167, %156 ], [ %179, %168 ]
  %182 = sext i32 %181 to i64
  %183 = icmp eq i32** %10, null
  br i1 %183, label %211, label %184

184:                                              ; preds = %180
  %185 = sub i16 %153, %38
  %186 = sub i16 %154, %40
  %187 = icmp eq i16 %185, 0
  %188 = icmp eq i16 %186, 0
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i64
  %191 = select i1 %188, i64 2, i64 3
  %192 = select i1 %187, i64 %190, i64 %191
  %193 = getelementptr inbounds i32, i32* %9, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = load i32*, i32** %10, align 8
  %196 = sext i16 %185 to i64
  %197 = getelementptr inbounds i32, i32* %195, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = add nsw i32 %198, %194
  %200 = getelementptr inbounds i32*, i32** %10, i64 1
  %201 = load i32*, i32** %200, align 8
  %202 = sext i16 %186 to i64
  %203 = getelementptr inbounds i32, i32* %201, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = add nsw i32 %199, %204
  %206 = sext i32 %205 to i64
  %207 = sext i32 %4 to i64
  %208 = mul nsw i64 %206, %207
  %209 = add nsw i64 %208, 8192
  %210 = lshr i64 %209, 14
  br label %211

211:                                              ; preds = %180, %184
  %212 = phi i64 [ %210, %184 ], [ 0, %180 ]
  %213 = shl i64 %212, 32
  %214 = ashr exact i64 %213, 32
  %215 = add nsw i64 %214, %182
  %216 = icmp sgt i64 %215, 2147483646
  br i1 %216, label %1573, label %217

217:                                              ; preds = %211
  %218 = trunc i64 %215 to i32
  %219 = icmp ugt i32 %79, %218
  br i1 %219, label %220, label %1573

220:                                              ; preds = %217
  store i32 %181, i32* %11, align 4
  %221 = load i32, i32* %18, align 4
  store i32 %221, i32* %12, align 4
  br label %1573

222:                                              ; preds = %96, %92, %88, %84, %81, %17
  %223 = add nsw i32 %42, -4
  %224 = icmp slt i32 %223, %70
  %225 = icmp sgt i32 %223, %72
  %226 = or i1 %224, %225
  %227 = icmp slt i32 %41, %74
  %228 = or i1 %226, %227
  %229 = icmp sgt i32 %41, %76
  %230 = or i1 %228, %229
  br i1 %230, label %293, label %231

231:                                              ; preds = %222
  %232 = trunc i32 %41 to i16
  %233 = trunc i32 %223 to i16
  %234 = icmp eq i8* %13, null
  br i1 %234, label %235, label %243

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %237 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %236, align 8
  %238 = ashr i32 %223, 3
  %239 = add nsw i32 %238, %30
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %36, i64 %240
  %242 = call i32 %237(i8* %241, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %251

243:                                              ; preds = %231
  %244 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %245 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %244, align 8
  %246 = ashr i32 %223, 3
  %247 = add nsw i32 %246, %30
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %36, i64 %248
  %250 = call i32 %245(i8* %249, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %251

251:                                              ; preds = %243, %235
  %252 = phi i32 [ %242, %235 ], [ %250, %243 ]
  %253 = sext i32 %252 to i64
  %254 = icmp eq i32** %10, null
  br i1 %254, label %282, label %255

255:                                              ; preds = %251
  %256 = sub i16 %232, %38
  %257 = sub i16 %233, %40
  %258 = icmp eq i16 %256, 0
  %259 = icmp eq i16 %257, 0
  %260 = xor i1 %259, true
  %261 = zext i1 %260 to i64
  %262 = select i1 %259, i64 2, i64 3
  %263 = select i1 %258, i64 %261, i64 %262
  %264 = getelementptr inbounds i32, i32* %9, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load i32*, i32** %10, align 8
  %267 = sext i16 %256 to i64
  %268 = getelementptr inbounds i32, i32* %266, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = add nsw i32 %269, %265
  %271 = getelementptr inbounds i32*, i32** %10, i64 1
  %272 = load i32*, i32** %271, align 8
  %273 = sext i16 %257 to i64
  %274 = getelementptr inbounds i32, i32* %272, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = add nsw i32 %270, %275
  %277 = sext i32 %276 to i64
  %278 = sext i32 %4 to i64
  %279 = mul nsw i64 %277, %278
  %280 = add nsw i64 %279, 8192
  %281 = lshr i64 %280, 14
  br label %282

282:                                              ; preds = %251, %255
  %283 = phi i64 [ %281, %255 ], [ 0, %251 ]
  %284 = shl i64 %283, 32
  %285 = ashr exact i64 %284, 32
  %286 = add nsw i64 %285, %253
  %287 = icmp sgt i64 %286, 2147483646
  br i1 %287, label %293, label %288

288:                                              ; preds = %282
  %289 = trunc i64 %286 to i32
  %290 = icmp ugt i32 %79, %289
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  store i32 %252, i32* %11, align 4
  %292 = load i32, i32* %18, align 4
  store i32 %292, i32* %12, align 4
  br label %293

293:                                              ; preds = %291, %288, %282, %222
  %294 = phi i32 [ %79, %222 ], [ %289, %291 ], [ %79, %288 ], [ %79, %282 ]
  %295 = phi i32 [ %42, %222 ], [ %223, %291 ], [ %42, %288 ], [ %42, %282 ]
  %296 = phi i32 [ 2147483647, %222 ], [ %289, %291 ], [ %289, %288 ], [ 2147483647, %282 ]
  %297 = or i32 %42, 4
  %298 = icmp slt i32 %297, %70
  %299 = icmp sgt i32 %297, %72
  %300 = or i1 %298, %299
  %301 = or i1 %300, %227
  %302 = or i1 %301, %229
  br i1 %302, label %361, label %303

303:                                              ; preds = %293
  %304 = trunc i32 %41 to i16
  %305 = trunc i32 %297 to i16
  %306 = icmp eq i8* %13, null
  br i1 %306, label %307, label %313

307:                                              ; preds = %303
  %308 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %309 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %308, align 8
  %310 = sext i32 %34 to i64
  %311 = getelementptr inbounds i8, i8* %36, i64 %310
  %312 = call i32 %309(i8* %311, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %319

313:                                              ; preds = %303
  %314 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %315 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %314, align 8
  %316 = sext i32 %34 to i64
  %317 = getelementptr inbounds i8, i8* %36, i64 %316
  %318 = call i32 %315(i8* %317, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %319

319:                                              ; preds = %313, %307
  %320 = phi i32 [ %312, %307 ], [ %318, %313 ]
  %321 = sext i32 %320 to i64
  %322 = icmp eq i32** %10, null
  br i1 %322, label %350, label %323

323:                                              ; preds = %319
  %324 = sub i16 %304, %38
  %325 = sub i16 %305, %40
  %326 = icmp eq i16 %324, 0
  %327 = icmp eq i16 %325, 0
  %328 = xor i1 %327, true
  %329 = zext i1 %328 to i64
  %330 = select i1 %327, i64 2, i64 3
  %331 = select i1 %326, i64 %329, i64 %330
  %332 = getelementptr inbounds i32, i32* %9, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = load i32*, i32** %10, align 8
  %335 = sext i16 %324 to i64
  %336 = getelementptr inbounds i32, i32* %334, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = add nsw i32 %337, %333
  %339 = getelementptr inbounds i32*, i32** %10, i64 1
  %340 = load i32*, i32** %339, align 8
  %341 = sext i16 %325 to i64
  %342 = getelementptr inbounds i32, i32* %340, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = add nsw i32 %338, %343
  %345 = sext i32 %344 to i64
  %346 = sext i32 %4 to i64
  %347 = mul nsw i64 %345, %346
  %348 = add nsw i64 %347, 8192
  %349 = lshr i64 %348, 14
  br label %350

350:                                              ; preds = %319, %323
  %351 = phi i64 [ %349, %323 ], [ 0, %319 ]
  %352 = shl i64 %351, 32
  %353 = ashr exact i64 %352, 32
  %354 = add nsw i64 %353, %321
  %355 = icmp sgt i64 %354, 2147483646
  br i1 %355, label %361, label %356

356:                                              ; preds = %350
  %357 = trunc i64 %354 to i32
  %358 = icmp ugt i32 %294, %357
  br i1 %358, label %359, label %361

359:                                              ; preds = %356
  store i32 %320, i32* %11, align 4
  %360 = load i32, i32* %18, align 4
  store i32 %360, i32* %12, align 4
  br label %361

361:                                              ; preds = %359, %356, %350, %293
  %362 = phi i32 [ %294, %293 ], [ %357, %359 ], [ %294, %356 ], [ %294, %350 ]
  %363 = phi i32 [ %295, %293 ], [ %297, %359 ], [ %295, %356 ], [ %295, %350 ]
  %364 = phi i32 [ 2147483647, %293 ], [ %357, %359 ], [ %357, %356 ], [ 2147483647, %350 ]
  %365 = icmp slt i32 %42, %70
  %366 = icmp sgt i32 %42, %72
  %367 = or i1 %365, %366
  br i1 %367, label %504, label %368

368:                                              ; preds = %361
  %369 = add nsw i32 %41, -4
  %370 = icmp slt i32 %369, %74
  %371 = icmp sgt i32 %369, %76
  %372 = or i1 %370, %371
  br i1 %372, label %437, label %373

373:                                              ; preds = %368
  %374 = trunc i32 %369 to i16
  %375 = trunc i32 %42 to i16
  %376 = icmp eq i8* %13, null
  br i1 %376, label %377, label %386

377:                                              ; preds = %373
  %378 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %379 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %378, align 8
  %380 = ashr i32 %369, 3
  %381 = mul nsw i32 %380, %26
  %382 = add nsw i32 %381, %33
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, i8* %36, i64 %383
  %385 = call i32 %379(i8* %384, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %395

386:                                              ; preds = %373
  %387 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %388 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %387, align 8
  %389 = ashr i32 %369, 3
  %390 = mul nsw i32 %389, %26
  %391 = add nsw i32 %390, %33
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, i8* %36, i64 %392
  %394 = call i32 %388(i8* %393, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %395

395:                                              ; preds = %386, %377
  %396 = phi i32 [ %385, %377 ], [ %394, %386 ]
  %397 = sext i32 %396 to i64
  %398 = icmp eq i32** %10, null
  br i1 %398, label %426, label %399

399:                                              ; preds = %395
  %400 = sub i16 %374, %38
  %401 = sub i16 %375, %40
  %402 = icmp eq i16 %400, 0
  %403 = icmp eq i16 %401, 0
  %404 = xor i1 %403, true
  %405 = zext i1 %404 to i64
  %406 = select i1 %403, i64 2, i64 3
  %407 = select i1 %402, i64 %405, i64 %406
  %408 = getelementptr inbounds i32, i32* %9, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = load i32*, i32** %10, align 8
  %411 = sext i16 %400 to i64
  %412 = getelementptr inbounds i32, i32* %410, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = add nsw i32 %413, %409
  %415 = getelementptr inbounds i32*, i32** %10, i64 1
  %416 = load i32*, i32** %415, align 8
  %417 = sext i16 %401 to i64
  %418 = getelementptr inbounds i32, i32* %416, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %414, %419
  %421 = sext i32 %420 to i64
  %422 = sext i32 %4 to i64
  %423 = mul nsw i64 %421, %422
  %424 = add nsw i64 %423, 8192
  %425 = lshr i64 %424, 14
  br label %426

426:                                              ; preds = %395, %399
  %427 = phi i64 [ %425, %399 ], [ 0, %395 ]
  %428 = shl i64 %427, 32
  %429 = ashr exact i64 %428, 32
  %430 = add nsw i64 %429, %397
  %431 = icmp sgt i64 %430, 2147483646
  br i1 %431, label %437, label %432

432:                                              ; preds = %426
  %433 = trunc i64 %430 to i32
  %434 = icmp ugt i32 %362, %433
  br i1 %434, label %435, label %437

435:                                              ; preds = %432
  store i32 %396, i32* %11, align 4
  %436 = load i32, i32* %18, align 4
  store i32 %436, i32* %12, align 4
  br label %437

437:                                              ; preds = %435, %432, %426, %368
  %438 = phi i32 [ %362, %426 ], [ %362, %432 ], [ %433, %435 ], [ %362, %368 ]
  %439 = phi i32 [ %41, %426 ], [ %41, %432 ], [ %369, %435 ], [ %41, %368 ]
  %440 = phi i32 [ %363, %426 ], [ %363, %432 ], [ %42, %435 ], [ %363, %368 ]
  %441 = phi i32 [ 2147483647, %426 ], [ %433, %432 ], [ %433, %435 ], [ 2147483647, %368 ]
  %442 = or i32 %41, 4
  %443 = icmp slt i32 %442, %74
  %444 = icmp sgt i32 %442, %76
  %445 = or i1 %443, %444
  br i1 %445, label %504, label %446

446:                                              ; preds = %437
  %447 = trunc i32 %442 to i16
  %448 = trunc i32 %42 to i16
  %449 = icmp eq i8* %13, null
  br i1 %449, label %450, label %456

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %452 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %451, align 8
  %453 = sext i32 %34 to i64
  %454 = getelementptr inbounds i8, i8* %36, i64 %453
  %455 = call i32 %452(i8* %454, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %462

456:                                              ; preds = %446
  %457 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %458 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %457, align 8
  %459 = sext i32 %34 to i64
  %460 = getelementptr inbounds i8, i8* %36, i64 %459
  %461 = call i32 %458(i8* %460, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %462

462:                                              ; preds = %456, %450
  %463 = phi i32 [ %455, %450 ], [ %461, %456 ]
  %464 = sext i32 %463 to i64
  %465 = icmp eq i32** %10, null
  br i1 %465, label %493, label %466

466:                                              ; preds = %462
  %467 = sub i16 %447, %38
  %468 = sub i16 %448, %40
  %469 = icmp eq i16 %467, 0
  %470 = icmp eq i16 %468, 0
  %471 = xor i1 %470, true
  %472 = zext i1 %471 to i64
  %473 = select i1 %470, i64 2, i64 3
  %474 = select i1 %469, i64 %472, i64 %473
  %475 = getelementptr inbounds i32, i32* %9, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = load i32*, i32** %10, align 8
  %478 = sext i16 %467 to i64
  %479 = getelementptr inbounds i32, i32* %477, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = add nsw i32 %480, %476
  %482 = getelementptr inbounds i32*, i32** %10, i64 1
  %483 = load i32*, i32** %482, align 8
  %484 = sext i16 %468 to i64
  %485 = getelementptr inbounds i32, i32* %483, i64 %484
  %486 = load i32, i32* %485, align 4
  %487 = add nsw i32 %481, %486
  %488 = sext i32 %487 to i64
  %489 = sext i32 %4 to i64
  %490 = mul nsw i64 %488, %489
  %491 = add nsw i64 %490, 8192
  %492 = lshr i64 %491, 14
  br label %493

493:                                              ; preds = %462, %466
  %494 = phi i64 [ %492, %466 ], [ 0, %462 ]
  %495 = shl i64 %494, 32
  %496 = ashr exact i64 %495, 32
  %497 = add nsw i64 %496, %464
  %498 = icmp sgt i64 %497, 2147483646
  br i1 %498, label %504, label %499

499:                                              ; preds = %493
  %500 = trunc i64 %497 to i32
  %501 = icmp ugt i32 %438, %500
  br i1 %501, label %502, label %504

502:                                              ; preds = %499
  store i32 %463, i32* %11, align 4
  %503 = load i32, i32* %18, align 4
  store i32 %503, i32* %12, align 4
  br label %504

504:                                              ; preds = %502, %499, %493, %361, %437
  %505 = phi i32 [ %441, %437 ], [ 2147483647, %361 ], [ %441, %493 ], [ %441, %499 ], [ %441, %502 ]
  %506 = phi i32 [ %438, %437 ], [ %362, %361 ], [ %438, %493 ], [ %438, %499 ], [ %500, %502 ]
  %507 = phi i32 [ %439, %437 ], [ %41, %361 ], [ %439, %493 ], [ %439, %499 ], [ %442, %502 ]
  %508 = phi i32 [ %440, %437 ], [ %363, %361 ], [ %440, %493 ], [ %440, %499 ], [ %42, %502 ]
  %509 = phi i32 [ 2147483647, %437 ], [ 2147483647, %361 ], [ 2147483647, %493 ], [ %500, %499 ], [ %500, %502 ]
  %510 = icmp uge i32 %296, %364
  %511 = zext i1 %510 to i32
  %512 = icmp ult i32 %505, %509
  %513 = select i1 %512, i32 0, i32 2
  %514 = or i32 %513, %511
  switch i32 %514, label %789 [
    i32 0, label %515
    i32 1, label %587
    i32 2, label %657
    i32 3, label %725
  ]

515:                                              ; preds = %504
  br i1 %226, label %790, label %516

516:                                              ; preds = %515
  %517 = add nsw i32 %41, -4
  %518 = icmp slt i32 %517, %74
  %519 = icmp sgt i32 %517, %76
  %520 = or i1 %518, %519
  br i1 %520, label %790, label %521

521:                                              ; preds = %516
  %522 = trunc i32 %517 to i16
  %523 = trunc i32 %223 to i16
  %524 = icmp eq i8* %13, null
  br i1 %524, label %525, label %535

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %527 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %526, align 8
  %528 = ashr i32 %517, 3
  %529 = mul nsw i32 %528, %26
  %530 = ashr i32 %223, 3
  %531 = add nsw i32 %529, %530
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %36, i64 %532
  %534 = call i32 %527(i8* %533, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %545

535:                                              ; preds = %521
  %536 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %537 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %536, align 8
  %538 = ashr i32 %517, 3
  %539 = mul nsw i32 %538, %26
  %540 = ashr i32 %223, 3
  %541 = add nsw i32 %539, %540
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, i8* %36, i64 %542
  %544 = call i32 %537(i8* %543, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %545

545:                                              ; preds = %535, %525
  %546 = phi i32 [ %534, %525 ], [ %544, %535 ]
  %547 = sext i32 %546 to i64
  %548 = icmp eq i32** %10, null
  br i1 %548, label %576, label %549

549:                                              ; preds = %545
  %550 = sub i16 %522, %38
  %551 = sub i16 %523, %40
  %552 = icmp eq i16 %550, 0
  %553 = icmp eq i16 %551, 0
  %554 = xor i1 %553, true
  %555 = zext i1 %554 to i64
  %556 = select i1 %553, i64 2, i64 3
  %557 = select i1 %552, i64 %555, i64 %556
  %558 = getelementptr inbounds i32, i32* %9, i64 %557
  %559 = load i32, i32* %558, align 4
  %560 = load i32*, i32** %10, align 8
  %561 = sext i16 %550 to i64
  %562 = getelementptr inbounds i32, i32* %560, i64 %561
  %563 = load i32, i32* %562, align 4
  %564 = add nsw i32 %563, %559
  %565 = getelementptr inbounds i32*, i32** %10, i64 1
  %566 = load i32*, i32** %565, align 8
  %567 = sext i16 %551 to i64
  %568 = getelementptr inbounds i32, i32* %566, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = add nsw i32 %564, %569
  %571 = sext i32 %570 to i64
  %572 = sext i32 %4 to i64
  %573 = mul nsw i64 %571, %572
  %574 = add nsw i64 %573, 8192
  %575 = lshr i64 %574, 14
  br label %576

576:                                              ; preds = %545, %549
  %577 = phi i64 [ %575, %549 ], [ 0, %545 ]
  %578 = shl i64 %577, 32
  %579 = ashr exact i64 %578, 32
  %580 = add nsw i64 %579, %547
  %581 = icmp sgt i64 %580, 2147483646
  br i1 %581, label %790, label %582

582:                                              ; preds = %576
  %583 = trunc i64 %580 to i32
  %584 = icmp ugt i32 %506, %583
  br i1 %584, label %585, label %790

585:                                              ; preds = %582
  store i32 %546, i32* %11, align 4
  %586 = load i32, i32* %18, align 4
  store i32 %586, i32* %12, align 4
  br label %790

587:                                              ; preds = %504
  br i1 %300, label %790, label %588

588:                                              ; preds = %587
  %589 = add nsw i32 %41, -4
  %590 = icmp slt i32 %589, %74
  %591 = icmp sgt i32 %589, %76
  %592 = or i1 %590, %591
  br i1 %592, label %790, label %593

593:                                              ; preds = %588
  %594 = trunc i32 %589 to i16
  %595 = trunc i32 %297 to i16
  %596 = icmp eq i8* %13, null
  br i1 %596, label %597, label %606

597:                                              ; preds = %593
  %598 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %599 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %598, align 8
  %600 = ashr i32 %589, 3
  %601 = mul nsw i32 %600, %26
  %602 = add nsw i32 %601, %33
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds i8, i8* %36, i64 %603
  %605 = call i32 %599(i8* %604, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %615

606:                                              ; preds = %593
  %607 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %608 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %607, align 8
  %609 = ashr i32 %589, 3
  %610 = mul nsw i32 %609, %26
  %611 = add nsw i32 %610, %33
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %36, i64 %612
  %614 = call i32 %608(i8* %613, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %615

615:                                              ; preds = %606, %597
  %616 = phi i32 [ %605, %597 ], [ %614, %606 ]
  %617 = sext i32 %616 to i64
  %618 = icmp eq i32** %10, null
  br i1 %618, label %646, label %619

619:                                              ; preds = %615
  %620 = sub i16 %594, %38
  %621 = sub i16 %595, %40
  %622 = icmp eq i16 %620, 0
  %623 = icmp eq i16 %621, 0
  %624 = xor i1 %623, true
  %625 = zext i1 %624 to i64
  %626 = select i1 %623, i64 2, i64 3
  %627 = select i1 %622, i64 %625, i64 %626
  %628 = getelementptr inbounds i32, i32* %9, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = load i32*, i32** %10, align 8
  %631 = sext i16 %620 to i64
  %632 = getelementptr inbounds i32, i32* %630, i64 %631
  %633 = load i32, i32* %632, align 4
  %634 = add nsw i32 %633, %629
  %635 = getelementptr inbounds i32*, i32** %10, i64 1
  %636 = load i32*, i32** %635, align 8
  %637 = sext i16 %621 to i64
  %638 = getelementptr inbounds i32, i32* %636, i64 %637
  %639 = load i32, i32* %638, align 4
  %640 = add nsw i32 %634, %639
  %641 = sext i32 %640 to i64
  %642 = sext i32 %4 to i64
  %643 = mul nsw i64 %641, %642
  %644 = add nsw i64 %643, 8192
  %645 = lshr i64 %644, 14
  br label %646

646:                                              ; preds = %615, %619
  %647 = phi i64 [ %645, %619 ], [ 0, %615 ]
  %648 = shl i64 %647, 32
  %649 = ashr exact i64 %648, 32
  %650 = add nsw i64 %649, %617
  %651 = icmp sgt i64 %650, 2147483646
  br i1 %651, label %790, label %652

652:                                              ; preds = %646
  %653 = trunc i64 %650 to i32
  %654 = icmp ugt i32 %506, %653
  br i1 %654, label %655, label %790

655:                                              ; preds = %652
  store i32 %616, i32* %11, align 4
  %656 = load i32, i32* %18, align 4
  store i32 %656, i32* %12, align 4
  br label %790

657:                                              ; preds = %504
  br i1 %226, label %790, label %658

658:                                              ; preds = %657
  %659 = or i32 %41, 4
  %660 = icmp slt i32 %659, %74
  %661 = icmp sgt i32 %659, %76
  %662 = or i1 %660, %661
  br i1 %662, label %790, label %663

663:                                              ; preds = %658
  %664 = trunc i32 %659 to i16
  %665 = trunc i32 %223 to i16
  %666 = icmp eq i8* %13, null
  br i1 %666, label %667, label %675

667:                                              ; preds = %663
  %668 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %669 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %668, align 8
  %670 = ashr i32 %223, 3
  %671 = add nsw i32 %670, %30
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i8, i8* %36, i64 %672
  %674 = call i32 %669(i8* %673, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %683

675:                                              ; preds = %663
  %676 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %677 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %676, align 8
  %678 = ashr i32 %223, 3
  %679 = add nsw i32 %678, %30
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds i8, i8* %36, i64 %680
  %682 = call i32 %677(i8* %681, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %683

683:                                              ; preds = %675, %667
  %684 = phi i32 [ %674, %667 ], [ %682, %675 ]
  %685 = sext i32 %684 to i64
  %686 = icmp eq i32** %10, null
  br i1 %686, label %714, label %687

687:                                              ; preds = %683
  %688 = sub i16 %664, %38
  %689 = sub i16 %665, %40
  %690 = icmp eq i16 %688, 0
  %691 = icmp eq i16 %689, 0
  %692 = xor i1 %691, true
  %693 = zext i1 %692 to i64
  %694 = select i1 %691, i64 2, i64 3
  %695 = select i1 %690, i64 %693, i64 %694
  %696 = getelementptr inbounds i32, i32* %9, i64 %695
  %697 = load i32, i32* %696, align 4
  %698 = load i32*, i32** %10, align 8
  %699 = sext i16 %688 to i64
  %700 = getelementptr inbounds i32, i32* %698, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = add nsw i32 %701, %697
  %703 = getelementptr inbounds i32*, i32** %10, i64 1
  %704 = load i32*, i32** %703, align 8
  %705 = sext i16 %689 to i64
  %706 = getelementptr inbounds i32, i32* %704, i64 %705
  %707 = load i32, i32* %706, align 4
  %708 = add nsw i32 %702, %707
  %709 = sext i32 %708 to i64
  %710 = sext i32 %4 to i64
  %711 = mul nsw i64 %709, %710
  %712 = add nsw i64 %711, 8192
  %713 = lshr i64 %712, 14
  br label %714

714:                                              ; preds = %683, %687
  %715 = phi i64 [ %713, %687 ], [ 0, %683 ]
  %716 = shl i64 %715, 32
  %717 = ashr exact i64 %716, 32
  %718 = add nsw i64 %717, %685
  %719 = icmp sgt i64 %718, 2147483646
  br i1 %719, label %790, label %720

720:                                              ; preds = %714
  %721 = trunc i64 %718 to i32
  %722 = icmp ugt i32 %506, %721
  br i1 %722, label %723, label %790

723:                                              ; preds = %720
  store i32 %684, i32* %11, align 4
  %724 = load i32, i32* %18, align 4
  store i32 %724, i32* %12, align 4
  br label %790

725:                                              ; preds = %504
  br i1 %300, label %790, label %726

726:                                              ; preds = %725
  %727 = or i32 %41, 4
  %728 = icmp slt i32 %727, %74
  %729 = icmp sgt i32 %727, %76
  %730 = or i1 %728, %729
  br i1 %730, label %790, label %731

731:                                              ; preds = %726
  %732 = trunc i32 %727 to i16
  %733 = trunc i32 %297 to i16
  %734 = icmp eq i8* %13, null
  br i1 %734, label %735, label %741

735:                                              ; preds = %731
  %736 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %737 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %736, align 8
  %738 = sext i32 %34 to i64
  %739 = getelementptr inbounds i8, i8* %36, i64 %738
  %740 = call i32 %737(i8* %739, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %747

741:                                              ; preds = %731
  %742 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %743 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %742, align 8
  %744 = sext i32 %34 to i64
  %745 = getelementptr inbounds i8, i8* %36, i64 %744
  %746 = call i32 %743(i8* %745, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %747

747:                                              ; preds = %741, %735
  %748 = phi i32 [ %740, %735 ], [ %746, %741 ]
  %749 = sext i32 %748 to i64
  %750 = icmp eq i32** %10, null
  br i1 %750, label %778, label %751

751:                                              ; preds = %747
  %752 = sub i16 %732, %38
  %753 = sub i16 %733, %40
  %754 = icmp eq i16 %752, 0
  %755 = icmp eq i16 %753, 0
  %756 = xor i1 %755, true
  %757 = zext i1 %756 to i64
  %758 = select i1 %755, i64 2, i64 3
  %759 = select i1 %754, i64 %757, i64 %758
  %760 = getelementptr inbounds i32, i32* %9, i64 %759
  %761 = load i32, i32* %760, align 4
  %762 = load i32*, i32** %10, align 8
  %763 = sext i16 %752 to i64
  %764 = getelementptr inbounds i32, i32* %762, i64 %763
  %765 = load i32, i32* %764, align 4
  %766 = add nsw i32 %765, %761
  %767 = getelementptr inbounds i32*, i32** %10, i64 1
  %768 = load i32*, i32** %767, align 8
  %769 = sext i16 %753 to i64
  %770 = getelementptr inbounds i32, i32* %768, i64 %769
  %771 = load i32, i32* %770, align 4
  %772 = add nsw i32 %766, %771
  %773 = sext i32 %772 to i64
  %774 = sext i32 %4 to i64
  %775 = mul nsw i64 %773, %774
  %776 = add nsw i64 %775, 8192
  %777 = lshr i64 %776, 14
  br label %778

778:                                              ; preds = %747, %751
  %779 = phi i64 [ %777, %751 ], [ 0, %747 ]
  %780 = shl i64 %779, 32
  %781 = ashr exact i64 %780, 32
  %782 = add nsw i64 %781, %749
  %783 = icmp sgt i64 %782, 2147483646
  br i1 %783, label %790, label %784

784:                                              ; preds = %778
  %785 = trunc i64 %782 to i32
  %786 = icmp ugt i32 %506, %785
  br i1 %786, label %787, label %790

787:                                              ; preds = %784
  store i32 %748, i32* %11, align 4
  %788 = load i32, i32* %18, align 4
  store i32 %788, i32* %12, align 4
  br label %790

789:                                              ; preds = %504
  unreachable

790:                                              ; preds = %787, %784, %778, %723, %720, %714, %655, %652, %646, %585, %582, %576, %726, %725, %658, %657, %588, %587, %516, %515
  %791 = phi i32 [ %506, %515 ], [ %506, %516 ], [ %506, %587 ], [ %506, %588 ], [ %506, %657 ], [ %506, %658 ], [ %506, %725 ], [ %506, %726 ], [ %583, %585 ], [ %506, %582 ], [ %506, %576 ], [ %653, %655 ], [ %506, %652 ], [ %506, %646 ], [ %721, %723 ], [ %506, %720 ], [ %506, %714 ], [ %785, %787 ], [ %506, %784 ], [ %506, %778 ]
  %792 = phi i32 [ %507, %515 ], [ %507, %516 ], [ %507, %587 ], [ %507, %588 ], [ %507, %657 ], [ %507, %658 ], [ %507, %725 ], [ %507, %726 ], [ %517, %585 ], [ %507, %582 ], [ %507, %576 ], [ %589, %655 ], [ %507, %652 ], [ %507, %646 ], [ %659, %723 ], [ %507, %720 ], [ %507, %714 ], [ %727, %787 ], [ %507, %784 ], [ %507, %778 ]
  %793 = phi i32 [ %508, %515 ], [ %508, %516 ], [ %508, %587 ], [ %508, %588 ], [ %508, %657 ], [ %508, %658 ], [ %508, %725 ], [ %508, %726 ], [ %223, %585 ], [ %508, %582 ], [ %508, %576 ], [ %297, %655 ], [ %508, %652 ], [ %508, %646 ], [ %223, %723 ], [ %508, %720 ], [ %508, %714 ], [ %297, %787 ], [ %508, %784 ], [ %508, %778 ]
  %794 = icmp ugt i32 %7, 1
  br i1 %794, label %795, label %1573

795:                                              ; preds = %790
  %796 = icmp ne i32 %792, %41
  %797 = xor i1 %796, true
  %798 = icmp eq i32 %793, %42
  %799 = or i1 %798, %797
  br i1 %799, label %964, label %800

800:                                              ; preds = %795
  %801 = sub nsw i32 %792, %41
  %802 = sub nsw i32 %793, %42
  %803 = shl nsw i32 %802, 1
  %804 = add nsw i32 %803, %42
  %805 = icmp slt i32 %804, %70
  %806 = icmp sgt i32 %804, %72
  %807 = or i1 %805, %806
  %808 = icmp slt i32 %792, %74
  %809 = or i1 %808, %807
  %810 = icmp sgt i32 %792, %76
  %811 = or i1 %810, %809
  br i1 %811, label %882, label %812

812:                                              ; preds = %800
  %813 = trunc i32 %792 to i16
  %814 = trunc i32 %804 to i16
  %815 = icmp eq i8* %13, null
  br i1 %815, label %816, label %828

816:                                              ; preds = %812
  %817 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %818 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %817, align 8
  %819 = ashr i32 %792, 3
  %820 = mul nsw i32 %819, %26
  %821 = ashr i32 %804, 3
  %822 = add nsw i32 %821, %820
  %823 = sext i32 %822 to i64
  %824 = getelementptr inbounds i8, i8* %36, i64 %823
  %825 = and i32 %804, 6
  %826 = and i32 %792, 7
  %827 = call i32 %818(i8* %824, i32 %26, i32 %825, i32 %826, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %840

828:                                              ; preds = %812
  %829 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %830 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %829, align 8
  %831 = ashr i32 %792, 3
  %832 = mul nsw i32 %831, %26
  %833 = ashr i32 %804, 3
  %834 = add nsw i32 %833, %832
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8, i8* %36, i64 %835
  %837 = and i32 %804, 6
  %838 = and i32 %792, 7
  %839 = call i32 %830(i8* %836, i32 %26, i32 %837, i32 %838, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %840

840:                                              ; preds = %828, %816
  %841 = phi i32 [ %827, %816 ], [ %839, %828 ]
  %842 = sext i32 %841 to i64
  %843 = icmp eq i32** %10, null
  br i1 %843, label %871, label %844

844:                                              ; preds = %840
  %845 = sub i16 %813, %38
  %846 = sub i16 %814, %40
  %847 = icmp eq i16 %845, 0
  %848 = icmp eq i16 %846, 0
  %849 = xor i1 %848, true
  %850 = zext i1 %849 to i64
  %851 = select i1 %848, i64 2, i64 3
  %852 = select i1 %847, i64 %850, i64 %851
  %853 = getelementptr inbounds i32, i32* %9, i64 %852
  %854 = load i32, i32* %853, align 4
  %855 = load i32*, i32** %10, align 8
  %856 = sext i16 %845 to i64
  %857 = getelementptr inbounds i32, i32* %855, i64 %856
  %858 = load i32, i32* %857, align 4
  %859 = add nsw i32 %858, %854
  %860 = getelementptr inbounds i32*, i32** %10, i64 1
  %861 = load i32*, i32** %860, align 8
  %862 = sext i16 %846 to i64
  %863 = getelementptr inbounds i32, i32* %861, i64 %862
  %864 = load i32, i32* %863, align 4
  %865 = add nsw i32 %859, %864
  %866 = sext i32 %865 to i64
  %867 = sext i32 %4 to i64
  %868 = mul nsw i64 %866, %867
  %869 = add nsw i64 %868, 8192
  %870 = lshr i64 %869, 14
  br label %871

871:                                              ; preds = %840, %844
  %872 = phi i64 [ %870, %844 ], [ 0, %840 ]
  %873 = shl i64 %872, 32
  %874 = ashr exact i64 %873, 32
  %875 = add nsw i64 %874, %842
  %876 = icmp sgt i64 %875, 2147483646
  br i1 %876, label %882, label %877

877:                                              ; preds = %871
  %878 = trunc i64 %875 to i32
  %879 = icmp ugt i32 %791, %878
  br i1 %879, label %880, label %882

880:                                              ; preds = %877
  store i32 %841, i32* %11, align 4
  %881 = load i32, i32* %18, align 4
  store i32 %881, i32* %12, align 4
  br label %882

882:                                              ; preds = %880, %877, %871, %800
  %883 = phi i32 [ %791, %800 ], [ %878, %880 ], [ %791, %877 ], [ %791, %871 ]
  %884 = phi i32 [ %793, %800 ], [ %804, %880 ], [ %793, %877 ], [ %793, %871 ]
  %885 = icmp slt i32 %793, %70
  %886 = icmp sgt i32 %793, %72
  %887 = or i1 %885, %886
  br i1 %887, label %1573, label %888

888:                                              ; preds = %882
  %889 = shl nsw i32 %801, 1
  %890 = add nsw i32 %889, %41
  %891 = icmp slt i32 %890, %74
  %892 = icmp sgt i32 %890, %76
  %893 = or i1 %891, %892
  br i1 %893, label %1573, label %894

894:                                              ; preds = %888
  %895 = trunc i32 %890 to i16
  %896 = trunc i32 %793 to i16
  %897 = icmp eq i8* %13, null
  br i1 %897, label %898, label %910

898:                                              ; preds = %894
  %899 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %900 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %899, align 8
  %901 = ashr i32 %890, 3
  %902 = mul nsw i32 %901, %26
  %903 = ashr i32 %793, 3
  %904 = add nsw i32 %902, %903
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds i8, i8* %36, i64 %905
  %907 = and i32 %793, 7
  %908 = and i32 %890, 6
  %909 = call i32 %900(i8* %906, i32 %26, i32 %907, i32 %908, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %922

910:                                              ; preds = %894
  %911 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %912 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %911, align 8
  %913 = ashr i32 %890, 3
  %914 = mul nsw i32 %913, %26
  %915 = ashr i32 %793, 3
  %916 = add nsw i32 %914, %915
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds i8, i8* %36, i64 %917
  %919 = and i32 %793, 7
  %920 = and i32 %890, 6
  %921 = call i32 %912(i8* %918, i32 %26, i32 %919, i32 %920, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %922

922:                                              ; preds = %910, %898
  %923 = phi i32 [ %909, %898 ], [ %921, %910 ]
  %924 = sext i32 %923 to i64
  %925 = icmp eq i32** %10, null
  br i1 %925, label %953, label %926

926:                                              ; preds = %922
  %927 = sub i16 %895, %38
  %928 = sub i16 %896, %40
  %929 = icmp eq i16 %927, 0
  %930 = icmp eq i16 %928, 0
  %931 = xor i1 %930, true
  %932 = zext i1 %931 to i64
  %933 = select i1 %930, i64 2, i64 3
  %934 = select i1 %929, i64 %932, i64 %933
  %935 = getelementptr inbounds i32, i32* %9, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = load i32*, i32** %10, align 8
  %938 = sext i16 %927 to i64
  %939 = getelementptr inbounds i32, i32* %937, i64 %938
  %940 = load i32, i32* %939, align 4
  %941 = add nsw i32 %940, %936
  %942 = getelementptr inbounds i32*, i32** %10, i64 1
  %943 = load i32*, i32** %942, align 8
  %944 = sext i16 %928 to i64
  %945 = getelementptr inbounds i32, i32* %943, i64 %944
  %946 = load i32, i32* %945, align 4
  %947 = add nsw i32 %941, %946
  %948 = sext i32 %947 to i64
  %949 = sext i32 %4 to i64
  %950 = mul nsw i64 %948, %949
  %951 = add nsw i64 %950, 8192
  %952 = lshr i64 %951, 14
  br label %953

953:                                              ; preds = %922, %926
  %954 = phi i64 [ %952, %926 ], [ 0, %922 ]
  %955 = shl i64 %954, 32
  %956 = ashr exact i64 %955, 32
  %957 = add nsw i64 %956, %924
  %958 = icmp sgt i64 %957, 2147483646
  br i1 %958, label %1573, label %959

959:                                              ; preds = %953
  %960 = trunc i64 %957 to i32
  %961 = icmp ugt i32 %883, %960
  br i1 %961, label %962, label %1573

962:                                              ; preds = %959
  store i32 %923, i32* %11, align 4
  %963 = load i32, i32* %18, align 4
  store i32 %963, i32* %12, align 4
  br label %1573

964:                                              ; preds = %795
  %965 = or i1 %796, %798
  br i1 %965, label %1270, label %966

966:                                              ; preds = %964
  %967 = sub nsw i32 %793, %42
  %968 = shl nsw i32 %967, 1
  %969 = add nsw i32 %968, %42
  %970 = icmp slt i32 %969, %70
  %971 = icmp sgt i32 %969, %72
  %972 = or i1 %970, %971
  br i1 %972, label %1118, label %973

973:                                              ; preds = %966
  %974 = or i32 %41, 4
  %975 = icmp slt i32 %974, %74
  %976 = icmp sgt i32 %974, %76
  %977 = or i1 %975, %976
  br i1 %977, label %1042, label %978

978:                                              ; preds = %973
  %979 = trunc i32 %974 to i16
  %980 = trunc i32 %969 to i16
  %981 = icmp eq i8* %13, null
  br i1 %981, label %982, label %991

982:                                              ; preds = %978
  %983 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %984 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %983, align 8
  %985 = ashr i32 %969, 3
  %986 = add nsw i32 %985, %30
  %987 = sext i32 %986 to i64
  %988 = getelementptr inbounds i8, i8* %36, i64 %987
  %989 = and i32 %969, 6
  %990 = call i32 %984(i8* %988, i32 %26, i32 %989, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1000

991:                                              ; preds = %978
  %992 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %993 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %992, align 8
  %994 = ashr i32 %969, 3
  %995 = add nsw i32 %994, %30
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds i8, i8* %36, i64 %996
  %998 = and i32 %969, 6
  %999 = call i32 %993(i8* %997, i32 %26, i32 %998, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1000

1000:                                             ; preds = %991, %982
  %1001 = phi i32 [ %990, %982 ], [ %999, %991 ]
  %1002 = sext i32 %1001 to i64
  %1003 = icmp eq i32** %10, null
  br i1 %1003, label %1031, label %1004

1004:                                             ; preds = %1000
  %1005 = sub i16 %979, %38
  %1006 = sub i16 %980, %40
  %1007 = icmp eq i16 %1005, 0
  %1008 = icmp eq i16 %1006, 0
  %1009 = xor i1 %1008, true
  %1010 = zext i1 %1009 to i64
  %1011 = select i1 %1008, i64 2, i64 3
  %1012 = select i1 %1007, i64 %1010, i64 %1011
  %1013 = getelementptr inbounds i32, i32* %9, i64 %1012
  %1014 = load i32, i32* %1013, align 4
  %1015 = load i32*, i32** %10, align 8
  %1016 = sext i16 %1005 to i64
  %1017 = getelementptr inbounds i32, i32* %1015, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = add nsw i32 %1018, %1014
  %1020 = getelementptr inbounds i32*, i32** %10, i64 1
  %1021 = load i32*, i32** %1020, align 8
  %1022 = sext i16 %1006 to i64
  %1023 = getelementptr inbounds i32, i32* %1021, i64 %1022
  %1024 = load i32, i32* %1023, align 4
  %1025 = add nsw i32 %1019, %1024
  %1026 = sext i32 %1025 to i64
  %1027 = sext i32 %4 to i64
  %1028 = mul nsw i64 %1026, %1027
  %1029 = add nsw i64 %1028, 8192
  %1030 = lshr i64 %1029, 14
  br label %1031

1031:                                             ; preds = %1000, %1004
  %1032 = phi i64 [ %1030, %1004 ], [ 0, %1000 ]
  %1033 = shl i64 %1032, 32
  %1034 = ashr exact i64 %1033, 32
  %1035 = add nsw i64 %1034, %1002
  %1036 = icmp sgt i64 %1035, 2147483646
  br i1 %1036, label %1042, label %1037

1037:                                             ; preds = %1031
  %1038 = trunc i64 %1035 to i32
  %1039 = icmp ugt i32 %791, %1038
  br i1 %1039, label %1040, label %1042

1040:                                             ; preds = %1037
  store i32 %1001, i32* %11, align 4
  %1041 = load i32, i32* %18, align 4
  store i32 %1041, i32* %12, align 4
  br label %1042

1042:                                             ; preds = %1040, %1037, %1031, %973
  %1043 = phi i32 [ %791, %1031 ], [ %791, %1037 ], [ %1038, %1040 ], [ %791, %973 ]
  %1044 = phi i32 [ %41, %1031 ], [ %41, %1037 ], [ %974, %1040 ], [ %41, %973 ]
  %1045 = phi i32 [ %793, %1031 ], [ %793, %1037 ], [ %969, %1040 ], [ %793, %973 ]
  %1046 = add nsw i32 %41, -4
  %1047 = icmp slt i32 %1046, %74
  %1048 = icmp sgt i32 %1046, %76
  %1049 = or i1 %1047, %1048
  br i1 %1049, label %1118, label %1050

1050:                                             ; preds = %1042
  %1051 = trunc i32 %1046 to i16
  %1052 = trunc i32 %969 to i16
  %1053 = icmp eq i8* %13, null
  br i1 %1053, label %1054, label %1065

1054:                                             ; preds = %1050
  %1055 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1056 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1055, align 8
  %1057 = ashr i32 %1046, 3
  %1058 = mul nsw i32 %1057, %26
  %1059 = ashr i32 %969, 3
  %1060 = add nsw i32 %1059, %1058
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds i8, i8* %36, i64 %1061
  %1063 = and i32 %969, 6
  %1064 = call i32 %1056(i8* %1062, i32 %26, i32 %1063, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1076

1065:                                             ; preds = %1050
  %1066 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1067 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1066, align 8
  %1068 = ashr i32 %1046, 3
  %1069 = mul nsw i32 %1068, %26
  %1070 = ashr i32 %969, 3
  %1071 = add nsw i32 %1070, %1069
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds i8, i8* %36, i64 %1072
  %1074 = and i32 %969, 6
  %1075 = call i32 %1067(i8* %1073, i32 %26, i32 %1074, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1076

1076:                                             ; preds = %1065, %1054
  %1077 = phi i32 [ %1064, %1054 ], [ %1075, %1065 ]
  %1078 = sext i32 %1077 to i64
  %1079 = icmp eq i32** %10, null
  br i1 %1079, label %1107, label %1080

1080:                                             ; preds = %1076
  %1081 = sub i16 %1051, %38
  %1082 = sub i16 %1052, %40
  %1083 = icmp eq i16 %1081, 0
  %1084 = icmp eq i16 %1082, 0
  %1085 = xor i1 %1084, true
  %1086 = zext i1 %1085 to i64
  %1087 = select i1 %1084, i64 2, i64 3
  %1088 = select i1 %1083, i64 %1086, i64 %1087
  %1089 = getelementptr inbounds i32, i32* %9, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = load i32*, i32** %10, align 8
  %1092 = sext i16 %1081 to i64
  %1093 = getelementptr inbounds i32, i32* %1091, i64 %1092
  %1094 = load i32, i32* %1093, align 4
  %1095 = add nsw i32 %1094, %1090
  %1096 = getelementptr inbounds i32*, i32** %10, i64 1
  %1097 = load i32*, i32** %1096, align 8
  %1098 = sext i16 %1082 to i64
  %1099 = getelementptr inbounds i32, i32* %1097, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = add nsw i32 %1095, %1100
  %1102 = sext i32 %1101 to i64
  %1103 = sext i32 %4 to i64
  %1104 = mul nsw i64 %1102, %1103
  %1105 = add nsw i64 %1104, 8192
  %1106 = lshr i64 %1105, 14
  br label %1107

1107:                                             ; preds = %1076, %1080
  %1108 = phi i64 [ %1106, %1080 ], [ 0, %1076 ]
  %1109 = shl i64 %1108, 32
  %1110 = ashr exact i64 %1109, 32
  %1111 = add nsw i64 %1110, %1078
  %1112 = icmp sgt i64 %1111, 2147483646
  br i1 %1112, label %1118, label %1113

1113:                                             ; preds = %1107
  %1114 = trunc i64 %1111 to i32
  %1115 = icmp ugt i32 %1043, %1114
  br i1 %1115, label %1116, label %1118

1116:                                             ; preds = %1113
  store i32 %1077, i32* %11, align 4
  %1117 = load i32, i32* %18, align 4
  store i32 %1117, i32* %12, align 4
  br label %1118

1118:                                             ; preds = %1116, %1113, %1107, %966, %1042
  %1119 = phi i32 [ %1043, %1042 ], [ %791, %966 ], [ %1114, %1116 ], [ %1043, %1113 ], [ %1043, %1107 ]
  %1120 = phi i32 [ %1044, %1042 ], [ %41, %966 ], [ %1046, %1116 ], [ %1044, %1113 ], [ %1044, %1107 ]
  %1121 = phi i32 [ %1045, %1042 ], [ %793, %966 ], [ %969, %1116 ], [ %1045, %1113 ], [ %1045, %1107 ]
  %1122 = icmp ult i32 %514, 2
  %1123 = icmp slt i32 %793, %70
  %1124 = icmp sgt i32 %793, %72
  %1125 = or i1 %1123, %1124
  br i1 %1122, label %1126, label %1196

1126:                                             ; preds = %1118
  br i1 %1125, label %1573, label %1127

1127:                                             ; preds = %1126
  %1128 = or i32 %41, 4
  %1129 = icmp slt i32 %1128, %74
  %1130 = icmp sgt i32 %1128, %76
  %1131 = or i1 %1129, %1130
  br i1 %1131, label %1573, label %1132

1132:                                             ; preds = %1127
  %1133 = trunc i32 %1128 to i16
  %1134 = trunc i32 %793 to i16
  %1135 = icmp eq i8* %13, null
  br i1 %1135, label %1136, label %1145

1136:                                             ; preds = %1132
  %1137 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1138 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1137, align 8
  %1139 = ashr i32 %793, 3
  %1140 = add nsw i32 %1139, %30
  %1141 = sext i32 %1140 to i64
  %1142 = getelementptr inbounds i8, i8* %36, i64 %1141
  %1143 = and i32 %793, 7
  %1144 = call i32 %1138(i8* %1142, i32 %26, i32 %1143, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1154

1145:                                             ; preds = %1132
  %1146 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1147 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1146, align 8
  %1148 = ashr i32 %793, 3
  %1149 = add nsw i32 %1148, %30
  %1150 = sext i32 %1149 to i64
  %1151 = getelementptr inbounds i8, i8* %36, i64 %1150
  %1152 = and i32 %793, 7
  %1153 = call i32 %1147(i8* %1151, i32 %26, i32 %1152, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1154

1154:                                             ; preds = %1145, %1136
  %1155 = phi i32 [ %1144, %1136 ], [ %1153, %1145 ]
  %1156 = sext i32 %1155 to i64
  %1157 = icmp eq i32** %10, null
  br i1 %1157, label %1185, label %1158

1158:                                             ; preds = %1154
  %1159 = sub i16 %1133, %38
  %1160 = sub i16 %1134, %40
  %1161 = icmp eq i16 %1159, 0
  %1162 = icmp eq i16 %1160, 0
  %1163 = xor i1 %1162, true
  %1164 = zext i1 %1163 to i64
  %1165 = select i1 %1162, i64 2, i64 3
  %1166 = select i1 %1161, i64 %1164, i64 %1165
  %1167 = getelementptr inbounds i32, i32* %9, i64 %1166
  %1168 = load i32, i32* %1167, align 4
  %1169 = load i32*, i32** %10, align 8
  %1170 = sext i16 %1159 to i64
  %1171 = getelementptr inbounds i32, i32* %1169, i64 %1170
  %1172 = load i32, i32* %1171, align 4
  %1173 = add nsw i32 %1172, %1168
  %1174 = getelementptr inbounds i32*, i32** %10, i64 1
  %1175 = load i32*, i32** %1174, align 8
  %1176 = sext i16 %1160 to i64
  %1177 = getelementptr inbounds i32, i32* %1175, i64 %1176
  %1178 = load i32, i32* %1177, align 4
  %1179 = add nsw i32 %1173, %1178
  %1180 = sext i32 %1179 to i64
  %1181 = sext i32 %4 to i64
  %1182 = mul nsw i64 %1180, %1181
  %1183 = add nsw i64 %1182, 8192
  %1184 = lshr i64 %1183, 14
  br label %1185

1185:                                             ; preds = %1154, %1158
  %1186 = phi i64 [ %1184, %1158 ], [ 0, %1154 ]
  %1187 = shl i64 %1186, 32
  %1188 = ashr exact i64 %1187, 32
  %1189 = add nsw i64 %1188, %1156
  %1190 = icmp sgt i64 %1189, 2147483646
  br i1 %1190, label %1573, label %1191

1191:                                             ; preds = %1185
  %1192 = trunc i64 %1189 to i32
  %1193 = icmp ugt i32 %1119, %1192
  br i1 %1193, label %1194, label %1573

1194:                                             ; preds = %1191
  store i32 %1155, i32* %11, align 4
  %1195 = load i32, i32* %18, align 4
  store i32 %1195, i32* %12, align 4
  br label %1573

1196:                                             ; preds = %1118
  br i1 %1125, label %1573, label %1197

1197:                                             ; preds = %1196
  %1198 = add nsw i32 %41, -4
  %1199 = icmp slt i32 %1198, %74
  %1200 = icmp sgt i32 %1198, %76
  %1201 = or i1 %1199, %1200
  br i1 %1201, label %1573, label %1202

1202:                                             ; preds = %1197
  %1203 = trunc i32 %1198 to i16
  %1204 = trunc i32 %793 to i16
  %1205 = icmp eq i8* %13, null
  br i1 %1205, label %1206, label %1217

1206:                                             ; preds = %1202
  %1207 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1208 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1207, align 8
  %1209 = ashr i32 %1198, 3
  %1210 = mul nsw i32 %1209, %26
  %1211 = ashr i32 %793, 3
  %1212 = add nsw i32 %1211, %1210
  %1213 = sext i32 %1212 to i64
  %1214 = getelementptr inbounds i8, i8* %36, i64 %1213
  %1215 = and i32 %793, 7
  %1216 = call i32 %1208(i8* %1214, i32 %26, i32 %1215, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1228

1217:                                             ; preds = %1202
  %1218 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1219 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1218, align 8
  %1220 = ashr i32 %1198, 3
  %1221 = mul nsw i32 %1220, %26
  %1222 = ashr i32 %793, 3
  %1223 = add nsw i32 %1222, %1221
  %1224 = sext i32 %1223 to i64
  %1225 = getelementptr inbounds i8, i8* %36, i64 %1224
  %1226 = and i32 %793, 7
  %1227 = call i32 %1219(i8* %1225, i32 %26, i32 %1226, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1228

1228:                                             ; preds = %1217, %1206
  %1229 = phi i32 [ %1216, %1206 ], [ %1227, %1217 ]
  %1230 = sext i32 %1229 to i64
  %1231 = icmp eq i32** %10, null
  br i1 %1231, label %1259, label %1232

1232:                                             ; preds = %1228
  %1233 = sub i16 %1203, %38
  %1234 = sub i16 %1204, %40
  %1235 = icmp eq i16 %1233, 0
  %1236 = icmp eq i16 %1234, 0
  %1237 = xor i1 %1236, true
  %1238 = zext i1 %1237 to i64
  %1239 = select i1 %1236, i64 2, i64 3
  %1240 = select i1 %1235, i64 %1238, i64 %1239
  %1241 = getelementptr inbounds i32, i32* %9, i64 %1240
  %1242 = load i32, i32* %1241, align 4
  %1243 = load i32*, i32** %10, align 8
  %1244 = sext i16 %1233 to i64
  %1245 = getelementptr inbounds i32, i32* %1243, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = add nsw i32 %1246, %1242
  %1248 = getelementptr inbounds i32*, i32** %10, i64 1
  %1249 = load i32*, i32** %1248, align 8
  %1250 = sext i16 %1234 to i64
  %1251 = getelementptr inbounds i32, i32* %1249, i64 %1250
  %1252 = load i32, i32* %1251, align 4
  %1253 = add nsw i32 %1247, %1252
  %1254 = sext i32 %1253 to i64
  %1255 = sext i32 %4 to i64
  %1256 = mul nsw i64 %1254, %1255
  %1257 = add nsw i64 %1256, 8192
  %1258 = lshr i64 %1257, 14
  br label %1259

1259:                                             ; preds = %1228, %1232
  %1260 = phi i64 [ %1258, %1232 ], [ 0, %1228 ]
  %1261 = shl i64 %1260, 32
  %1262 = ashr exact i64 %1261, 32
  %1263 = add nsw i64 %1262, %1230
  %1264 = icmp sgt i64 %1263, 2147483646
  br i1 %1264, label %1573, label %1265

1265:                                             ; preds = %1259
  %1266 = trunc i64 %1263 to i32
  %1267 = icmp ugt i32 %1119, %1266
  br i1 %1267, label %1268, label %1573

1268:                                             ; preds = %1265
  store i32 %1229, i32* %11, align 4
  %1269 = load i32, i32* %18, align 4
  store i32 %1269, i32* %12, align 4
  br label %1573

1270:                                             ; preds = %964
  %1271 = and i1 %796, %798
  br i1 %1271, label %1272, label %1573

1272:                                             ; preds = %1270
  %1273 = sub nsw i32 %792, %41
  br i1 %300, label %1346, label %1274

1274:                                             ; preds = %1272
  %1275 = shl nsw i32 %1273, 1
  %1276 = add nsw i32 %1275, %41
  %1277 = icmp slt i32 %1276, %74
  %1278 = icmp sgt i32 %1276, %76
  %1279 = or i1 %1277, %1278
  br i1 %1279, label %1346, label %1280

1280:                                             ; preds = %1274
  %1281 = trunc i32 %1276 to i16
  %1282 = trunc i32 %297 to i16
  %1283 = icmp eq i8* %13, null
  br i1 %1283, label %1284, label %1294

1284:                                             ; preds = %1280
  %1285 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1286 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1285, align 8
  %1287 = ashr i32 %1276, 3
  %1288 = mul nsw i32 %1287, %26
  %1289 = add nsw i32 %1288, %33
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds i8, i8* %36, i64 %1290
  %1292 = and i32 %1276, 6
  %1293 = call i32 %1286(i8* %1291, i32 %26, i32 4, i32 %1292, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1304

1294:                                             ; preds = %1280
  %1295 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1296 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1295, align 8
  %1297 = ashr i32 %1276, 3
  %1298 = mul nsw i32 %1297, %26
  %1299 = add nsw i32 %1298, %33
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds i8, i8* %36, i64 %1300
  %1302 = and i32 %1276, 6
  %1303 = call i32 %1296(i8* %1301, i32 %26, i32 4, i32 %1302, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1304

1304:                                             ; preds = %1294, %1284
  %1305 = phi i32 [ %1293, %1284 ], [ %1303, %1294 ]
  %1306 = sext i32 %1305 to i64
  %1307 = icmp eq i32** %10, null
  br i1 %1307, label %1335, label %1308

1308:                                             ; preds = %1304
  %1309 = sub i16 %1281, %38
  %1310 = sub i16 %1282, %40
  %1311 = icmp eq i16 %1309, 0
  %1312 = icmp eq i16 %1310, 0
  %1313 = xor i1 %1312, true
  %1314 = zext i1 %1313 to i64
  %1315 = select i1 %1312, i64 2, i64 3
  %1316 = select i1 %1311, i64 %1314, i64 %1315
  %1317 = getelementptr inbounds i32, i32* %9, i64 %1316
  %1318 = load i32, i32* %1317, align 4
  %1319 = load i32*, i32** %10, align 8
  %1320 = sext i16 %1309 to i64
  %1321 = getelementptr inbounds i32, i32* %1319, i64 %1320
  %1322 = load i32, i32* %1321, align 4
  %1323 = add nsw i32 %1322, %1318
  %1324 = getelementptr inbounds i32*, i32** %10, i64 1
  %1325 = load i32*, i32** %1324, align 8
  %1326 = sext i16 %1310 to i64
  %1327 = getelementptr inbounds i32, i32* %1325, i64 %1326
  %1328 = load i32, i32* %1327, align 4
  %1329 = add nsw i32 %1323, %1328
  %1330 = sext i32 %1329 to i64
  %1331 = sext i32 %4 to i64
  %1332 = mul nsw i64 %1330, %1331
  %1333 = add nsw i64 %1332, 8192
  %1334 = lshr i64 %1333, 14
  br label %1335

1335:                                             ; preds = %1304, %1308
  %1336 = phi i64 [ %1334, %1308 ], [ 0, %1304 ]
  %1337 = shl i64 %1336, 32
  %1338 = ashr exact i64 %1337, 32
  %1339 = add nsw i64 %1338, %1306
  %1340 = icmp sgt i64 %1339, 2147483646
  br i1 %1340, label %1346, label %1341

1341:                                             ; preds = %1335
  %1342 = trunc i64 %1339 to i32
  %1343 = icmp ugt i32 %791, %1342
  br i1 %1343, label %1344, label %1346

1344:                                             ; preds = %1341
  store i32 %1305, i32* %11, align 4
  %1345 = load i32, i32* %18, align 4
  store i32 %1345, i32* %12, align 4
  br label %1346

1346:                                             ; preds = %1344, %1341, %1335, %1274, %1272
  %1347 = phi i32 [ %791, %1272 ], [ %791, %1274 ], [ %1342, %1344 ], [ %791, %1341 ], [ %791, %1335 ]
  %1348 = phi i32 [ %792, %1272 ], [ %792, %1274 ], [ %1276, %1344 ], [ %792, %1341 ], [ %792, %1335 ]
  %1349 = phi i32 [ %42, %1272 ], [ %42, %1274 ], [ %297, %1344 ], [ %42, %1341 ], [ %42, %1335 ]
  br i1 %226, label %1424, label %1350

1350:                                             ; preds = %1346
  %1351 = shl nsw i32 %1273, 1
  %1352 = add nsw i32 %1351, %41
  %1353 = icmp slt i32 %1352, %74
  %1354 = icmp sgt i32 %1352, %76
  %1355 = or i1 %1353, %1354
  br i1 %1355, label %1424, label %1356

1356:                                             ; preds = %1350
  %1357 = trunc i32 %1352 to i16
  %1358 = trunc i32 %223 to i16
  %1359 = icmp eq i8* %13, null
  br i1 %1359, label %1360, label %1371

1360:                                             ; preds = %1356
  %1361 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1362 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1361, align 8
  %1363 = ashr i32 %1352, 3
  %1364 = mul nsw i32 %1363, %26
  %1365 = ashr i32 %223, 3
  %1366 = add nsw i32 %1364, %1365
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds i8, i8* %36, i64 %1367
  %1369 = and i32 %1352, 6
  %1370 = call i32 %1362(i8* %1368, i32 %26, i32 4, i32 %1369, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1382

1371:                                             ; preds = %1356
  %1372 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1373 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1372, align 8
  %1374 = ashr i32 %1352, 3
  %1375 = mul nsw i32 %1374, %26
  %1376 = ashr i32 %223, 3
  %1377 = add nsw i32 %1375, %1376
  %1378 = sext i32 %1377 to i64
  %1379 = getelementptr inbounds i8, i8* %36, i64 %1378
  %1380 = and i32 %1352, 6
  %1381 = call i32 %1373(i8* %1379, i32 %26, i32 4, i32 %1380, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1382

1382:                                             ; preds = %1371, %1360
  %1383 = phi i32 [ %1370, %1360 ], [ %1381, %1371 ]
  %1384 = sext i32 %1383 to i64
  %1385 = icmp eq i32** %10, null
  br i1 %1385, label %1413, label %1386

1386:                                             ; preds = %1382
  %1387 = sub i16 %1357, %38
  %1388 = sub i16 %1358, %40
  %1389 = icmp eq i16 %1387, 0
  %1390 = icmp eq i16 %1388, 0
  %1391 = xor i1 %1390, true
  %1392 = zext i1 %1391 to i64
  %1393 = select i1 %1390, i64 2, i64 3
  %1394 = select i1 %1389, i64 %1392, i64 %1393
  %1395 = getelementptr inbounds i32, i32* %9, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = load i32*, i32** %10, align 8
  %1398 = sext i16 %1387 to i64
  %1399 = getelementptr inbounds i32, i32* %1397, i64 %1398
  %1400 = load i32, i32* %1399, align 4
  %1401 = add nsw i32 %1400, %1396
  %1402 = getelementptr inbounds i32*, i32** %10, i64 1
  %1403 = load i32*, i32** %1402, align 8
  %1404 = sext i16 %1388 to i64
  %1405 = getelementptr inbounds i32, i32* %1403, i64 %1404
  %1406 = load i32, i32* %1405, align 4
  %1407 = add nsw i32 %1401, %1406
  %1408 = sext i32 %1407 to i64
  %1409 = sext i32 %4 to i64
  %1410 = mul nsw i64 %1408, %1409
  %1411 = add nsw i64 %1410, 8192
  %1412 = lshr i64 %1411, 14
  br label %1413

1413:                                             ; preds = %1382, %1386
  %1414 = phi i64 [ %1412, %1386 ], [ 0, %1382 ]
  %1415 = shl i64 %1414, 32
  %1416 = ashr exact i64 %1415, 32
  %1417 = add nsw i64 %1416, %1384
  %1418 = icmp sgt i64 %1417, 2147483646
  br i1 %1418, label %1424, label %1419

1419:                                             ; preds = %1413
  %1420 = trunc i64 %1417 to i32
  %1421 = icmp ugt i32 %1347, %1420
  br i1 %1421, label %1422, label %1424

1422:                                             ; preds = %1419
  store i32 %1383, i32* %11, align 4
  %1423 = load i32, i32* %18, align 4
  store i32 %1423, i32* %12, align 4
  br label %1424

1424:                                             ; preds = %1422, %1419, %1413, %1350, %1346
  %1425 = phi i32 [ %1347, %1346 ], [ %1347, %1350 ], [ %1420, %1422 ], [ %1347, %1419 ], [ %1347, %1413 ]
  %1426 = phi i32 [ %1348, %1346 ], [ %1348, %1350 ], [ %1352, %1422 ], [ %1348, %1419 ], [ %1348, %1413 ]
  %1427 = phi i32 [ %1349, %1346 ], [ %1349, %1350 ], [ %223, %1422 ], [ %1349, %1419 ], [ %1349, %1413 ]
  switch i32 %514, label %1572 [
    i32 0, label %1428
    i32 2, label %1428
    i32 1, label %1499
    i32 3, label %1499
  ]

1428:                                             ; preds = %1424, %1424
  %1429 = icmp slt i32 %792, %74
  %1430 = or i1 %300, %1429
  %1431 = icmp sgt i32 %792, %76
  %1432 = or i1 %1431, %1430
  br i1 %1432, label %1573, label %1433

1433:                                             ; preds = %1428
  %1434 = trunc i32 %792 to i16
  %1435 = trunc i32 %297 to i16
  %1436 = icmp eq i8* %13, null
  br i1 %1436, label %1437, label %1447

1437:                                             ; preds = %1433
  %1438 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1439 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1438, align 8
  %1440 = ashr i32 %792, 3
  %1441 = mul nsw i32 %1440, %26
  %1442 = add nsw i32 %1441, %33
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds i8, i8* %36, i64 %1443
  %1445 = and i32 %792, 7
  %1446 = call i32 %1439(i8* %1444, i32 %26, i32 4, i32 %1445, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1457

1447:                                             ; preds = %1433
  %1448 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1449 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1448, align 8
  %1450 = ashr i32 %792, 3
  %1451 = mul nsw i32 %1450, %26
  %1452 = add nsw i32 %1451, %33
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds i8, i8* %36, i64 %1453
  %1455 = and i32 %792, 7
  %1456 = call i32 %1449(i8* %1454, i32 %26, i32 4, i32 %1455, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1457

1457:                                             ; preds = %1447, %1437
  %1458 = phi i32 [ %1446, %1437 ], [ %1456, %1447 ]
  %1459 = sext i32 %1458 to i64
  %1460 = icmp eq i32** %10, null
  br i1 %1460, label %1488, label %1461

1461:                                             ; preds = %1457
  %1462 = sub i16 %1434, %38
  %1463 = sub i16 %1435, %40
  %1464 = icmp eq i16 %1462, 0
  %1465 = icmp eq i16 %1463, 0
  %1466 = xor i1 %1465, true
  %1467 = zext i1 %1466 to i64
  %1468 = select i1 %1465, i64 2, i64 3
  %1469 = select i1 %1464, i64 %1467, i64 %1468
  %1470 = getelementptr inbounds i32, i32* %9, i64 %1469
  %1471 = load i32, i32* %1470, align 4
  %1472 = load i32*, i32** %10, align 8
  %1473 = sext i16 %1462 to i64
  %1474 = getelementptr inbounds i32, i32* %1472, i64 %1473
  %1475 = load i32, i32* %1474, align 4
  %1476 = add nsw i32 %1475, %1471
  %1477 = getelementptr inbounds i32*, i32** %10, i64 1
  %1478 = load i32*, i32** %1477, align 8
  %1479 = sext i16 %1463 to i64
  %1480 = getelementptr inbounds i32, i32* %1478, i64 %1479
  %1481 = load i32, i32* %1480, align 4
  %1482 = add nsw i32 %1476, %1481
  %1483 = sext i32 %1482 to i64
  %1484 = sext i32 %4 to i64
  %1485 = mul nsw i64 %1483, %1484
  %1486 = add nsw i64 %1485, 8192
  %1487 = lshr i64 %1486, 14
  br label %1488

1488:                                             ; preds = %1457, %1461
  %1489 = phi i64 [ %1487, %1461 ], [ 0, %1457 ]
  %1490 = shl i64 %1489, 32
  %1491 = ashr exact i64 %1490, 32
  %1492 = add nsw i64 %1491, %1459
  %1493 = icmp sgt i64 %1492, 2147483646
  br i1 %1493, label %1573, label %1494

1494:                                             ; preds = %1488
  %1495 = trunc i64 %1492 to i32
  %1496 = icmp ugt i32 %1425, %1495
  br i1 %1496, label %1497, label %1573

1497:                                             ; preds = %1494
  store i32 %1458, i32* %11, align 4
  %1498 = load i32, i32* %18, align 4
  store i32 %1498, i32* %12, align 4
  br label %1573

1499:                                             ; preds = %1424, %1424
  %1500 = icmp slt i32 %792, %74
  %1501 = or i1 %226, %1500
  %1502 = icmp sgt i32 %792, %76
  %1503 = or i1 %1502, %1501
  br i1 %1503, label %1573, label %1504

1504:                                             ; preds = %1499
  %1505 = trunc i32 %792 to i16
  %1506 = trunc i32 %223 to i16
  %1507 = icmp eq i8* %13, null
  br i1 %1507, label %1508, label %1519

1508:                                             ; preds = %1504
  %1509 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1510 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1509, align 8
  %1511 = ashr i32 %792, 3
  %1512 = mul nsw i32 %1511, %26
  %1513 = ashr i32 %223, 3
  %1514 = add nsw i32 %1512, %1513
  %1515 = sext i32 %1514 to i64
  %1516 = getelementptr inbounds i8, i8* %36, i64 %1515
  %1517 = and i32 %792, 7
  %1518 = call i32 %1510(i8* %1516, i32 %26, i32 4, i32 %1517, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1530

1519:                                             ; preds = %1504
  %1520 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1521 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1520, align 8
  %1522 = ashr i32 %792, 3
  %1523 = mul nsw i32 %1522, %26
  %1524 = ashr i32 %223, 3
  %1525 = add nsw i32 %1523, %1524
  %1526 = sext i32 %1525 to i64
  %1527 = getelementptr inbounds i8, i8* %36, i64 %1526
  %1528 = and i32 %792, 7
  %1529 = call i32 %1521(i8* %1527, i32 %26, i32 4, i32 %1528, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1530

1530:                                             ; preds = %1519, %1508
  %1531 = phi i32 [ %1518, %1508 ], [ %1529, %1519 ]
  %1532 = sext i32 %1531 to i64
  %1533 = icmp eq i32** %10, null
  br i1 %1533, label %1561, label %1534

1534:                                             ; preds = %1530
  %1535 = sub i16 %1505, %38
  %1536 = sub i16 %1506, %40
  %1537 = icmp eq i16 %1535, 0
  %1538 = icmp eq i16 %1536, 0
  %1539 = xor i1 %1538, true
  %1540 = zext i1 %1539 to i64
  %1541 = select i1 %1538, i64 2, i64 3
  %1542 = select i1 %1537, i64 %1540, i64 %1541
  %1543 = getelementptr inbounds i32, i32* %9, i64 %1542
  %1544 = load i32, i32* %1543, align 4
  %1545 = load i32*, i32** %10, align 8
  %1546 = sext i16 %1535 to i64
  %1547 = getelementptr inbounds i32, i32* %1545, i64 %1546
  %1548 = load i32, i32* %1547, align 4
  %1549 = add nsw i32 %1548, %1544
  %1550 = getelementptr inbounds i32*, i32** %10, i64 1
  %1551 = load i32*, i32** %1550, align 8
  %1552 = sext i16 %1536 to i64
  %1553 = getelementptr inbounds i32, i32* %1551, i64 %1552
  %1554 = load i32, i32* %1553, align 4
  %1555 = add nsw i32 %1549, %1554
  %1556 = sext i32 %1555 to i64
  %1557 = sext i32 %4 to i64
  %1558 = mul nsw i64 %1556, %1557
  %1559 = add nsw i64 %1558, 8192
  %1560 = lshr i64 %1559, 14
  br label %1561

1561:                                             ; preds = %1530, %1534
  %1562 = phi i64 [ %1560, %1534 ], [ 0, %1530 ]
  %1563 = shl i64 %1562, 32
  %1564 = ashr exact i64 %1563, 32
  %1565 = add nsw i64 %1564, %1532
  %1566 = icmp sgt i64 %1565, 2147483646
  br i1 %1566, label %1573, label %1567

1567:                                             ; preds = %1561
  %1568 = trunc i64 %1565 to i32
  %1569 = icmp ugt i32 %1425, %1568
  br i1 %1569, label %1570, label %1573

1570:                                             ; preds = %1567
  store i32 %1531, i32* %11, align 4
  %1571 = load i32, i32* %18, align 4
  store i32 %1571, i32* %12, align 4
  br label %1573

1572:                                             ; preds = %1424
  unreachable

1573:                                             ; preds = %1570, %1567, %1561, %1497, %1494, %1488, %1268, %1265, %1259, %1194, %1191, %1185, %962, %959, %953, %108, %146, %139, %211, %217, %220, %1270, %888, %882, %1127, %1126, %1197, %1196, %1428, %1499, %790
  %1574 = phi i32 [ %791, %790 ], [ %791, %1270 ], [ %883, %888 ], [ %883, %882 ], [ %1119, %1127 ], [ %1119, %1126 ], [ %1119, %1197 ], [ %1119, %1196 ], [ %1425, %1428 ], [ %1425, %1499 ], [ %79, %108 ], [ %79, %146 ], [ %79, %139 ], [ %218, %220 ], [ %79, %217 ], [ %79, %211 ], [ %960, %962 ], [ %883, %959 ], [ %883, %953 ], [ %1192, %1194 ], [ %1119, %1191 ], [ %1119, %1185 ], [ %1266, %1268 ], [ %1119, %1265 ], [ %1119, %1259 ], [ %1495, %1497 ], [ %1425, %1494 ], [ %1425, %1488 ], [ %1568, %1570 ], [ %1425, %1567 ], [ %1425, %1561 ]
  %1575 = phi i32 [ %792, %790 ], [ %792, %1270 ], [ %792, %888 ], [ %792, %882 ], [ %1120, %1127 ], [ %1120, %1126 ], [ %1120, %1197 ], [ %1120, %1196 ], [ %1426, %1428 ], [ %1426, %1499 ], [ %41, %108 ], [ %41, %146 ], [ %41, %139 ], [ %148, %220 ], [ %41, %217 ], [ %41, %211 ], [ %890, %962 ], [ %792, %959 ], [ %792, %953 ], [ %1128, %1194 ], [ %1120, %1191 ], [ %1120, %1185 ], [ %1198, %1268 ], [ %1120, %1265 ], [ %1120, %1259 ], [ %792, %1497 ], [ %1426, %1494 ], [ %1426, %1488 ], [ %792, %1570 ], [ %1426, %1567 ], [ %1426, %1561 ]
  %1576 = phi i32 [ %793, %790 ], [ %793, %1270 ], [ %884, %888 ], [ %884, %882 ], [ %1121, %1127 ], [ %1121, %1126 ], [ %1121, %1197 ], [ %1121, %1196 ], [ %1427, %1428 ], [ %1427, %1499 ], [ %42, %108 ], [ %42, %146 ], [ %42, %139 ], [ %142, %220 ], [ %42, %217 ], [ %42, %211 ], [ %793, %962 ], [ %884, %959 ], [ %884, %953 ], [ %793, %1194 ], [ %1121, %1191 ], [ %1121, %1185 ], [ %793, %1268 ], [ %1121, %1265 ], [ %1121, %1259 ], [ %297, %1497 ], [ %1427, %1494 ], [ %1427, %1488 ], [ %223, %1570 ], [ %1427, %1567 ], [ %1427, %1561 ]
  %1577 = icmp eq i32 %6, 2
  br i1 %1577, label %3025, label %1578

1578:                                             ; preds = %1573
  %1579 = add nsw i32 %1576, -2
  %1580 = icmp slt i32 %1579, %70
  %1581 = icmp sgt i32 %1579, %72
  %1582 = or i1 %1580, %1581
  %1583 = icmp slt i32 %1575, %74
  %1584 = or i1 %1583, %1582
  %1585 = icmp sgt i32 %1575, %76
  %1586 = or i1 %1585, %1584
  br i1 %1586, label %1657, label %1587

1587:                                             ; preds = %1578
  %1588 = trunc i32 %1575 to i16
  %1589 = trunc i32 %1579 to i16
  %1590 = icmp eq i8* %13, null
  br i1 %1590, label %1591, label %1603

1591:                                             ; preds = %1587
  %1592 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1593 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1592, align 8
  %1594 = ashr i32 %1575, 3
  %1595 = mul nsw i32 %1594, %26
  %1596 = ashr i32 %1579, 3
  %1597 = add nsw i32 %1596, %1595
  %1598 = sext i32 %1597 to i64
  %1599 = getelementptr inbounds i8, i8* %36, i64 %1598
  %1600 = and i32 %1579, 7
  %1601 = and i32 %1575, 7
  %1602 = call i32 %1593(i8* %1599, i32 %26, i32 %1600, i32 %1601, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1615

1603:                                             ; preds = %1587
  %1604 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1605 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1604, align 8
  %1606 = ashr i32 %1575, 3
  %1607 = mul nsw i32 %1606, %26
  %1608 = ashr i32 %1579, 3
  %1609 = add nsw i32 %1608, %1607
  %1610 = sext i32 %1609 to i64
  %1611 = getelementptr inbounds i8, i8* %36, i64 %1610
  %1612 = and i32 %1579, 7
  %1613 = and i32 %1575, 7
  %1614 = call i32 %1605(i8* %1611, i32 %26, i32 %1612, i32 %1613, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1615

1615:                                             ; preds = %1603, %1591
  %1616 = phi i32 [ %1602, %1591 ], [ %1614, %1603 ]
  %1617 = sext i32 %1616 to i64
  %1618 = icmp eq i32** %10, null
  br i1 %1618, label %1646, label %1619

1619:                                             ; preds = %1615
  %1620 = sub i16 %1588, %38
  %1621 = sub i16 %1589, %40
  %1622 = icmp eq i16 %1620, 0
  %1623 = icmp eq i16 %1621, 0
  %1624 = xor i1 %1623, true
  %1625 = zext i1 %1624 to i64
  %1626 = select i1 %1623, i64 2, i64 3
  %1627 = select i1 %1622, i64 %1625, i64 %1626
  %1628 = getelementptr inbounds i32, i32* %9, i64 %1627
  %1629 = load i32, i32* %1628, align 4
  %1630 = load i32*, i32** %10, align 8
  %1631 = sext i16 %1620 to i64
  %1632 = getelementptr inbounds i32, i32* %1630, i64 %1631
  %1633 = load i32, i32* %1632, align 4
  %1634 = add nsw i32 %1633, %1629
  %1635 = getelementptr inbounds i32*, i32** %10, i64 1
  %1636 = load i32*, i32** %1635, align 8
  %1637 = sext i16 %1621 to i64
  %1638 = getelementptr inbounds i32, i32* %1636, i64 %1637
  %1639 = load i32, i32* %1638, align 4
  %1640 = add nsw i32 %1634, %1639
  %1641 = sext i32 %1640 to i64
  %1642 = sext i32 %4 to i64
  %1643 = mul nsw i64 %1641, %1642
  %1644 = add nsw i64 %1643, 8192
  %1645 = lshr i64 %1644, 14
  br label %1646

1646:                                             ; preds = %1615, %1619
  %1647 = phi i64 [ %1645, %1619 ], [ 0, %1615 ]
  %1648 = shl i64 %1647, 32
  %1649 = ashr exact i64 %1648, 32
  %1650 = add nsw i64 %1649, %1617
  %1651 = icmp sgt i64 %1650, 2147483646
  br i1 %1651, label %1657, label %1652

1652:                                             ; preds = %1646
  %1653 = trunc i64 %1650 to i32
  %1654 = icmp ugt i32 %1574, %1653
  br i1 %1654, label %1655, label %1657

1655:                                             ; preds = %1652
  store i32 %1616, i32* %11, align 4
  %1656 = load i32, i32* %18, align 4
  store i32 %1656, i32* %12, align 4
  br label %1657

1657:                                             ; preds = %1655, %1652, %1646, %1578
  %1658 = phi i32 [ %1574, %1578 ], [ %1653, %1655 ], [ %1574, %1652 ], [ %1574, %1646 ]
  %1659 = phi i32 [ %1576, %1578 ], [ %1579, %1655 ], [ %1576, %1652 ], [ %1576, %1646 ]
  %1660 = phi i32 [ 2147483647, %1578 ], [ %1653, %1655 ], [ %1653, %1652 ], [ 2147483647, %1646 ]
  %1661 = add nsw i32 %1576, 2
  %1662 = icmp slt i32 %1661, %70
  %1663 = icmp sgt i32 %1661, %72
  %1664 = or i1 %1662, %1663
  %1665 = or i1 %1583, %1664
  %1666 = or i1 %1585, %1665
  br i1 %1666, label %1737, label %1667

1667:                                             ; preds = %1657
  %1668 = trunc i32 %1575 to i16
  %1669 = trunc i32 %1661 to i16
  %1670 = icmp eq i8* %13, null
  br i1 %1670, label %1671, label %1683

1671:                                             ; preds = %1667
  %1672 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1673 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1672, align 8
  %1674 = ashr i32 %1575, 3
  %1675 = mul nsw i32 %1674, %26
  %1676 = ashr i32 %1661, 3
  %1677 = add nsw i32 %1676, %1675
  %1678 = sext i32 %1677 to i64
  %1679 = getelementptr inbounds i8, i8* %36, i64 %1678
  %1680 = and i32 %1661, 7
  %1681 = and i32 %1575, 7
  %1682 = call i32 %1673(i8* %1679, i32 %26, i32 %1680, i32 %1681, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1695

1683:                                             ; preds = %1667
  %1684 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1685 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1684, align 8
  %1686 = ashr i32 %1575, 3
  %1687 = mul nsw i32 %1686, %26
  %1688 = ashr i32 %1661, 3
  %1689 = add nsw i32 %1688, %1687
  %1690 = sext i32 %1689 to i64
  %1691 = getelementptr inbounds i8, i8* %36, i64 %1690
  %1692 = and i32 %1661, 7
  %1693 = and i32 %1575, 7
  %1694 = call i32 %1685(i8* %1691, i32 %26, i32 %1692, i32 %1693, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1695

1695:                                             ; preds = %1683, %1671
  %1696 = phi i32 [ %1682, %1671 ], [ %1694, %1683 ]
  %1697 = sext i32 %1696 to i64
  %1698 = icmp eq i32** %10, null
  br i1 %1698, label %1726, label %1699

1699:                                             ; preds = %1695
  %1700 = sub i16 %1668, %38
  %1701 = sub i16 %1669, %40
  %1702 = icmp eq i16 %1700, 0
  %1703 = icmp eq i16 %1701, 0
  %1704 = xor i1 %1703, true
  %1705 = zext i1 %1704 to i64
  %1706 = select i1 %1703, i64 2, i64 3
  %1707 = select i1 %1702, i64 %1705, i64 %1706
  %1708 = getelementptr inbounds i32, i32* %9, i64 %1707
  %1709 = load i32, i32* %1708, align 4
  %1710 = load i32*, i32** %10, align 8
  %1711 = sext i16 %1700 to i64
  %1712 = getelementptr inbounds i32, i32* %1710, i64 %1711
  %1713 = load i32, i32* %1712, align 4
  %1714 = add nsw i32 %1713, %1709
  %1715 = getelementptr inbounds i32*, i32** %10, i64 1
  %1716 = load i32*, i32** %1715, align 8
  %1717 = sext i16 %1701 to i64
  %1718 = getelementptr inbounds i32, i32* %1716, i64 %1717
  %1719 = load i32, i32* %1718, align 4
  %1720 = add nsw i32 %1714, %1719
  %1721 = sext i32 %1720 to i64
  %1722 = sext i32 %4 to i64
  %1723 = mul nsw i64 %1721, %1722
  %1724 = add nsw i64 %1723, 8192
  %1725 = lshr i64 %1724, 14
  br label %1726

1726:                                             ; preds = %1695, %1699
  %1727 = phi i64 [ %1725, %1699 ], [ 0, %1695 ]
  %1728 = shl i64 %1727, 32
  %1729 = ashr exact i64 %1728, 32
  %1730 = add nsw i64 %1729, %1697
  %1731 = icmp sgt i64 %1730, 2147483646
  br i1 %1731, label %1737, label %1732

1732:                                             ; preds = %1726
  %1733 = trunc i64 %1730 to i32
  %1734 = icmp ugt i32 %1658, %1733
  br i1 %1734, label %1735, label %1737

1735:                                             ; preds = %1732
  store i32 %1696, i32* %11, align 4
  %1736 = load i32, i32* %18, align 4
  store i32 %1736, i32* %12, align 4
  br label %1737

1737:                                             ; preds = %1735, %1732, %1726, %1657
  %1738 = phi i32 [ %1658, %1657 ], [ %1733, %1735 ], [ %1658, %1732 ], [ %1658, %1726 ]
  %1739 = phi i32 [ %1659, %1657 ], [ %1661, %1735 ], [ %1659, %1732 ], [ %1659, %1726 ]
  %1740 = phi i32 [ 2147483647, %1657 ], [ %1733, %1735 ], [ %1733, %1732 ], [ 2147483647, %1726 ]
  %1741 = icmp slt i32 %1576, %70
  %1742 = icmp sgt i32 %1576, %72
  %1743 = or i1 %1741, %1742
  br i1 %1743, label %1898, label %1744

1744:                                             ; preds = %1737
  %1745 = add nsw i32 %1575, -2
  %1746 = icmp slt i32 %1745, %74
  %1747 = icmp sgt i32 %1745, %76
  %1748 = or i1 %1746, %1747
  br i1 %1748, label %1819, label %1749

1749:                                             ; preds = %1744
  %1750 = trunc i32 %1745 to i16
  %1751 = trunc i32 %1576 to i16
  %1752 = icmp eq i8* %13, null
  br i1 %1752, label %1753, label %1765

1753:                                             ; preds = %1749
  %1754 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1755 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1754, align 8
  %1756 = ashr i32 %1745, 3
  %1757 = mul nsw i32 %1756, %26
  %1758 = ashr i32 %1576, 3
  %1759 = add nsw i32 %1757, %1758
  %1760 = sext i32 %1759 to i64
  %1761 = getelementptr inbounds i8, i8* %36, i64 %1760
  %1762 = and i32 %1576, 7
  %1763 = and i32 %1745, 7
  %1764 = call i32 %1755(i8* %1761, i32 %26, i32 %1762, i32 %1763, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1777

1765:                                             ; preds = %1749
  %1766 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1767 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1766, align 8
  %1768 = ashr i32 %1745, 3
  %1769 = mul nsw i32 %1768, %26
  %1770 = ashr i32 %1576, 3
  %1771 = add nsw i32 %1769, %1770
  %1772 = sext i32 %1771 to i64
  %1773 = getelementptr inbounds i8, i8* %36, i64 %1772
  %1774 = and i32 %1576, 7
  %1775 = and i32 %1745, 7
  %1776 = call i32 %1767(i8* %1773, i32 %26, i32 %1774, i32 %1775, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1777

1777:                                             ; preds = %1765, %1753
  %1778 = phi i32 [ %1764, %1753 ], [ %1776, %1765 ]
  %1779 = sext i32 %1778 to i64
  %1780 = icmp eq i32** %10, null
  br i1 %1780, label %1808, label %1781

1781:                                             ; preds = %1777
  %1782 = sub i16 %1750, %38
  %1783 = sub i16 %1751, %40
  %1784 = icmp eq i16 %1782, 0
  %1785 = icmp eq i16 %1783, 0
  %1786 = xor i1 %1785, true
  %1787 = zext i1 %1786 to i64
  %1788 = select i1 %1785, i64 2, i64 3
  %1789 = select i1 %1784, i64 %1787, i64 %1788
  %1790 = getelementptr inbounds i32, i32* %9, i64 %1789
  %1791 = load i32, i32* %1790, align 4
  %1792 = load i32*, i32** %10, align 8
  %1793 = sext i16 %1782 to i64
  %1794 = getelementptr inbounds i32, i32* %1792, i64 %1793
  %1795 = load i32, i32* %1794, align 4
  %1796 = add nsw i32 %1795, %1791
  %1797 = getelementptr inbounds i32*, i32** %10, i64 1
  %1798 = load i32*, i32** %1797, align 8
  %1799 = sext i16 %1783 to i64
  %1800 = getelementptr inbounds i32, i32* %1798, i64 %1799
  %1801 = load i32, i32* %1800, align 4
  %1802 = add nsw i32 %1796, %1801
  %1803 = sext i32 %1802 to i64
  %1804 = sext i32 %4 to i64
  %1805 = mul nsw i64 %1803, %1804
  %1806 = add nsw i64 %1805, 8192
  %1807 = lshr i64 %1806, 14
  br label %1808

1808:                                             ; preds = %1777, %1781
  %1809 = phi i64 [ %1807, %1781 ], [ 0, %1777 ]
  %1810 = shl i64 %1809, 32
  %1811 = ashr exact i64 %1810, 32
  %1812 = add nsw i64 %1811, %1779
  %1813 = icmp sgt i64 %1812, 2147483646
  br i1 %1813, label %1819, label %1814

1814:                                             ; preds = %1808
  %1815 = trunc i64 %1812 to i32
  %1816 = icmp ugt i32 %1738, %1815
  br i1 %1816, label %1817, label %1819

1817:                                             ; preds = %1814
  store i32 %1778, i32* %11, align 4
  %1818 = load i32, i32* %18, align 4
  store i32 %1818, i32* %12, align 4
  br label %1819

1819:                                             ; preds = %1817, %1814, %1808, %1744
  %1820 = phi i32 [ %1738, %1808 ], [ %1738, %1814 ], [ %1815, %1817 ], [ %1738, %1744 ]
  %1821 = phi i32 [ %1575, %1808 ], [ %1575, %1814 ], [ %1745, %1817 ], [ %1575, %1744 ]
  %1822 = phi i32 [ %1739, %1808 ], [ %1739, %1814 ], [ %1576, %1817 ], [ %1739, %1744 ]
  %1823 = phi i32 [ 2147483647, %1808 ], [ %1815, %1814 ], [ %1815, %1817 ], [ 2147483647, %1744 ]
  %1824 = add nsw i32 %1575, 2
  %1825 = icmp slt i32 %1824, %74
  %1826 = icmp sgt i32 %1824, %76
  %1827 = or i1 %1825, %1826
  br i1 %1827, label %1898, label %1828

1828:                                             ; preds = %1819
  %1829 = trunc i32 %1824 to i16
  %1830 = trunc i32 %1576 to i16
  %1831 = icmp eq i8* %13, null
  br i1 %1831, label %1832, label %1844

1832:                                             ; preds = %1828
  %1833 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1834 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1833, align 8
  %1835 = ashr i32 %1824, 3
  %1836 = mul nsw i32 %1835, %26
  %1837 = ashr i32 %1576, 3
  %1838 = add nsw i32 %1836, %1837
  %1839 = sext i32 %1838 to i64
  %1840 = getelementptr inbounds i8, i8* %36, i64 %1839
  %1841 = and i32 %1576, 7
  %1842 = and i32 %1824, 7
  %1843 = call i32 %1834(i8* %1840, i32 %26, i32 %1841, i32 %1842, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1856

1844:                                             ; preds = %1828
  %1845 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1846 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1845, align 8
  %1847 = ashr i32 %1824, 3
  %1848 = mul nsw i32 %1847, %26
  %1849 = ashr i32 %1576, 3
  %1850 = add nsw i32 %1848, %1849
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds i8, i8* %36, i64 %1851
  %1853 = and i32 %1576, 7
  %1854 = and i32 %1824, 7
  %1855 = call i32 %1846(i8* %1852, i32 %26, i32 %1853, i32 %1854, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1856

1856:                                             ; preds = %1844, %1832
  %1857 = phi i32 [ %1843, %1832 ], [ %1855, %1844 ]
  %1858 = sext i32 %1857 to i64
  %1859 = icmp eq i32** %10, null
  br i1 %1859, label %1887, label %1860

1860:                                             ; preds = %1856
  %1861 = sub i16 %1829, %38
  %1862 = sub i16 %1830, %40
  %1863 = icmp eq i16 %1861, 0
  %1864 = icmp eq i16 %1862, 0
  %1865 = xor i1 %1864, true
  %1866 = zext i1 %1865 to i64
  %1867 = select i1 %1864, i64 2, i64 3
  %1868 = select i1 %1863, i64 %1866, i64 %1867
  %1869 = getelementptr inbounds i32, i32* %9, i64 %1868
  %1870 = load i32, i32* %1869, align 4
  %1871 = load i32*, i32** %10, align 8
  %1872 = sext i16 %1861 to i64
  %1873 = getelementptr inbounds i32, i32* %1871, i64 %1872
  %1874 = load i32, i32* %1873, align 4
  %1875 = add nsw i32 %1874, %1870
  %1876 = getelementptr inbounds i32*, i32** %10, i64 1
  %1877 = load i32*, i32** %1876, align 8
  %1878 = sext i16 %1862 to i64
  %1879 = getelementptr inbounds i32, i32* %1877, i64 %1878
  %1880 = load i32, i32* %1879, align 4
  %1881 = add nsw i32 %1875, %1880
  %1882 = sext i32 %1881 to i64
  %1883 = sext i32 %4 to i64
  %1884 = mul nsw i64 %1882, %1883
  %1885 = add nsw i64 %1884, 8192
  %1886 = lshr i64 %1885, 14
  br label %1887

1887:                                             ; preds = %1856, %1860
  %1888 = phi i64 [ %1886, %1860 ], [ 0, %1856 ]
  %1889 = shl i64 %1888, 32
  %1890 = ashr exact i64 %1889, 32
  %1891 = add nsw i64 %1890, %1858
  %1892 = icmp sgt i64 %1891, 2147483646
  br i1 %1892, label %1898, label %1893

1893:                                             ; preds = %1887
  %1894 = trunc i64 %1891 to i32
  %1895 = icmp ugt i32 %1820, %1894
  br i1 %1895, label %1896, label %1898

1896:                                             ; preds = %1893
  store i32 %1857, i32* %11, align 4
  %1897 = load i32, i32* %18, align 4
  store i32 %1897, i32* %12, align 4
  br label %1898

1898:                                             ; preds = %1896, %1893, %1887, %1737, %1819
  %1899 = phi i32 [ %1823, %1819 ], [ 2147483647, %1737 ], [ %1823, %1887 ], [ %1823, %1893 ], [ %1823, %1896 ]
  %1900 = phi i32 [ %1820, %1819 ], [ %1738, %1737 ], [ %1820, %1887 ], [ %1820, %1893 ], [ %1894, %1896 ]
  %1901 = phi i32 [ %1821, %1819 ], [ %1575, %1737 ], [ %1821, %1887 ], [ %1821, %1893 ], [ %1824, %1896 ]
  %1902 = phi i32 [ %1822, %1819 ], [ %1739, %1737 ], [ %1822, %1887 ], [ %1822, %1893 ], [ %1576, %1896 ]
  %1903 = phi i32 [ 2147483647, %1819 ], [ 2147483647, %1737 ], [ 2147483647, %1887 ], [ %1894, %1893 ], [ %1894, %1896 ]
  %1904 = icmp uge i32 %1660, %1740
  %1905 = zext i1 %1904 to i32
  %1906 = icmp ult i32 %1899, %1903
  %1907 = select i1 %1906, i32 0, i32 2
  %1908 = or i32 %1907, %1905
  switch i32 %1908, label %2213 [
    i32 0, label %1909
    i32 1, label %1985
    i32 2, label %2061
    i32 3, label %2137
  ]

1909:                                             ; preds = %1898
  br i1 %1582, label %2214, label %1910

1910:                                             ; preds = %1909
  %1911 = add nsw i32 %1575, -2
  %1912 = icmp slt i32 %1911, %74
  %1913 = icmp sgt i32 %1911, %76
  %1914 = or i1 %1912, %1913
  br i1 %1914, label %2214, label %1915

1915:                                             ; preds = %1910
  %1916 = trunc i32 %1911 to i16
  %1917 = trunc i32 %1579 to i16
  %1918 = icmp eq i8* %13, null
  br i1 %1918, label %1919, label %1931

1919:                                             ; preds = %1915
  %1920 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1921 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1920, align 8
  %1922 = ashr i32 %1911, 3
  %1923 = mul nsw i32 %1922, %26
  %1924 = ashr i32 %1579, 3
  %1925 = add nsw i32 %1923, %1924
  %1926 = sext i32 %1925 to i64
  %1927 = getelementptr inbounds i8, i8* %36, i64 %1926
  %1928 = and i32 %1579, 7
  %1929 = and i32 %1911, 7
  %1930 = call i32 %1921(i8* %1927, i32 %26, i32 %1928, i32 %1929, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1943

1931:                                             ; preds = %1915
  %1932 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1933 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1932, align 8
  %1934 = ashr i32 %1911, 3
  %1935 = mul nsw i32 %1934, %26
  %1936 = ashr i32 %1579, 3
  %1937 = add nsw i32 %1935, %1936
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds i8, i8* %36, i64 %1938
  %1940 = and i32 %1579, 7
  %1941 = and i32 %1911, 7
  %1942 = call i32 %1933(i8* %1939, i32 %26, i32 %1940, i32 %1941, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1943

1943:                                             ; preds = %1931, %1919
  %1944 = phi i32 [ %1930, %1919 ], [ %1942, %1931 ]
  %1945 = sext i32 %1944 to i64
  %1946 = icmp eq i32** %10, null
  br i1 %1946, label %1974, label %1947

1947:                                             ; preds = %1943
  %1948 = sub i16 %1916, %38
  %1949 = sub i16 %1917, %40
  %1950 = icmp eq i16 %1948, 0
  %1951 = icmp eq i16 %1949, 0
  %1952 = xor i1 %1951, true
  %1953 = zext i1 %1952 to i64
  %1954 = select i1 %1951, i64 2, i64 3
  %1955 = select i1 %1950, i64 %1953, i64 %1954
  %1956 = getelementptr inbounds i32, i32* %9, i64 %1955
  %1957 = load i32, i32* %1956, align 4
  %1958 = load i32*, i32** %10, align 8
  %1959 = sext i16 %1948 to i64
  %1960 = getelementptr inbounds i32, i32* %1958, i64 %1959
  %1961 = load i32, i32* %1960, align 4
  %1962 = add nsw i32 %1961, %1957
  %1963 = getelementptr inbounds i32*, i32** %10, i64 1
  %1964 = load i32*, i32** %1963, align 8
  %1965 = sext i16 %1949 to i64
  %1966 = getelementptr inbounds i32, i32* %1964, i64 %1965
  %1967 = load i32, i32* %1966, align 4
  %1968 = add nsw i32 %1962, %1967
  %1969 = sext i32 %1968 to i64
  %1970 = sext i32 %4 to i64
  %1971 = mul nsw i64 %1969, %1970
  %1972 = add nsw i64 %1971, 8192
  %1973 = lshr i64 %1972, 14
  br label %1974

1974:                                             ; preds = %1943, %1947
  %1975 = phi i64 [ %1973, %1947 ], [ 0, %1943 ]
  %1976 = shl i64 %1975, 32
  %1977 = ashr exact i64 %1976, 32
  %1978 = add nsw i64 %1977, %1945
  %1979 = icmp sgt i64 %1978, 2147483646
  br i1 %1979, label %2214, label %1980

1980:                                             ; preds = %1974
  %1981 = trunc i64 %1978 to i32
  %1982 = icmp ugt i32 %1900, %1981
  br i1 %1982, label %1983, label %2214

1983:                                             ; preds = %1980
  store i32 %1944, i32* %11, align 4
  %1984 = load i32, i32* %18, align 4
  store i32 %1984, i32* %12, align 4
  br label %2214

1985:                                             ; preds = %1898
  br i1 %1664, label %2214, label %1986

1986:                                             ; preds = %1985
  %1987 = add nsw i32 %1575, -2
  %1988 = icmp slt i32 %1987, %74
  %1989 = icmp sgt i32 %1987, %76
  %1990 = or i1 %1988, %1989
  br i1 %1990, label %2214, label %1991

1991:                                             ; preds = %1986
  %1992 = trunc i32 %1987 to i16
  %1993 = trunc i32 %1661 to i16
  %1994 = icmp eq i8* %13, null
  br i1 %1994, label %1995, label %2007

1995:                                             ; preds = %1991
  %1996 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1997 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1996, align 8
  %1998 = ashr i32 %1987, 3
  %1999 = mul nsw i32 %1998, %26
  %2000 = ashr i32 %1661, 3
  %2001 = add nsw i32 %1999, %2000
  %2002 = sext i32 %2001 to i64
  %2003 = getelementptr inbounds i8, i8* %36, i64 %2002
  %2004 = and i32 %1661, 7
  %2005 = and i32 %1987, 7
  %2006 = call i32 %1997(i8* %2003, i32 %26, i32 %2004, i32 %2005, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2019

2007:                                             ; preds = %1991
  %2008 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2009 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2008, align 8
  %2010 = ashr i32 %1987, 3
  %2011 = mul nsw i32 %2010, %26
  %2012 = ashr i32 %1661, 3
  %2013 = add nsw i32 %2011, %2012
  %2014 = sext i32 %2013 to i64
  %2015 = getelementptr inbounds i8, i8* %36, i64 %2014
  %2016 = and i32 %1661, 7
  %2017 = and i32 %1987, 7
  %2018 = call i32 %2009(i8* %2015, i32 %26, i32 %2016, i32 %2017, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2019

2019:                                             ; preds = %2007, %1995
  %2020 = phi i32 [ %2006, %1995 ], [ %2018, %2007 ]
  %2021 = sext i32 %2020 to i64
  %2022 = icmp eq i32** %10, null
  br i1 %2022, label %2050, label %2023

2023:                                             ; preds = %2019
  %2024 = sub i16 %1992, %38
  %2025 = sub i16 %1993, %40
  %2026 = icmp eq i16 %2024, 0
  %2027 = icmp eq i16 %2025, 0
  %2028 = xor i1 %2027, true
  %2029 = zext i1 %2028 to i64
  %2030 = select i1 %2027, i64 2, i64 3
  %2031 = select i1 %2026, i64 %2029, i64 %2030
  %2032 = getelementptr inbounds i32, i32* %9, i64 %2031
  %2033 = load i32, i32* %2032, align 4
  %2034 = load i32*, i32** %10, align 8
  %2035 = sext i16 %2024 to i64
  %2036 = getelementptr inbounds i32, i32* %2034, i64 %2035
  %2037 = load i32, i32* %2036, align 4
  %2038 = add nsw i32 %2037, %2033
  %2039 = getelementptr inbounds i32*, i32** %10, i64 1
  %2040 = load i32*, i32** %2039, align 8
  %2041 = sext i16 %2025 to i64
  %2042 = getelementptr inbounds i32, i32* %2040, i64 %2041
  %2043 = load i32, i32* %2042, align 4
  %2044 = add nsw i32 %2038, %2043
  %2045 = sext i32 %2044 to i64
  %2046 = sext i32 %4 to i64
  %2047 = mul nsw i64 %2045, %2046
  %2048 = add nsw i64 %2047, 8192
  %2049 = lshr i64 %2048, 14
  br label %2050

2050:                                             ; preds = %2019, %2023
  %2051 = phi i64 [ %2049, %2023 ], [ 0, %2019 ]
  %2052 = shl i64 %2051, 32
  %2053 = ashr exact i64 %2052, 32
  %2054 = add nsw i64 %2053, %2021
  %2055 = icmp sgt i64 %2054, 2147483646
  br i1 %2055, label %2214, label %2056

2056:                                             ; preds = %2050
  %2057 = trunc i64 %2054 to i32
  %2058 = icmp ugt i32 %1900, %2057
  br i1 %2058, label %2059, label %2214

2059:                                             ; preds = %2056
  store i32 %2020, i32* %11, align 4
  %2060 = load i32, i32* %18, align 4
  store i32 %2060, i32* %12, align 4
  br label %2214

2061:                                             ; preds = %1898
  br i1 %1582, label %2214, label %2062

2062:                                             ; preds = %2061
  %2063 = add nsw i32 %1575, 2
  %2064 = icmp slt i32 %2063, %74
  %2065 = icmp sgt i32 %2063, %76
  %2066 = or i1 %2064, %2065
  br i1 %2066, label %2214, label %2067

2067:                                             ; preds = %2062
  %2068 = trunc i32 %2063 to i16
  %2069 = trunc i32 %1579 to i16
  %2070 = icmp eq i8* %13, null
  br i1 %2070, label %2071, label %2083

2071:                                             ; preds = %2067
  %2072 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2073 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2072, align 8
  %2074 = ashr i32 %2063, 3
  %2075 = mul nsw i32 %2074, %26
  %2076 = ashr i32 %1579, 3
  %2077 = add nsw i32 %2075, %2076
  %2078 = sext i32 %2077 to i64
  %2079 = getelementptr inbounds i8, i8* %36, i64 %2078
  %2080 = and i32 %1579, 7
  %2081 = and i32 %2063, 7
  %2082 = call i32 %2073(i8* %2079, i32 %26, i32 %2080, i32 %2081, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2095

2083:                                             ; preds = %2067
  %2084 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2085 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2084, align 8
  %2086 = ashr i32 %2063, 3
  %2087 = mul nsw i32 %2086, %26
  %2088 = ashr i32 %1579, 3
  %2089 = add nsw i32 %2087, %2088
  %2090 = sext i32 %2089 to i64
  %2091 = getelementptr inbounds i8, i8* %36, i64 %2090
  %2092 = and i32 %1579, 7
  %2093 = and i32 %2063, 7
  %2094 = call i32 %2085(i8* %2091, i32 %26, i32 %2092, i32 %2093, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2095

2095:                                             ; preds = %2083, %2071
  %2096 = phi i32 [ %2082, %2071 ], [ %2094, %2083 ]
  %2097 = sext i32 %2096 to i64
  %2098 = icmp eq i32** %10, null
  br i1 %2098, label %2126, label %2099

2099:                                             ; preds = %2095
  %2100 = sub i16 %2068, %38
  %2101 = sub i16 %2069, %40
  %2102 = icmp eq i16 %2100, 0
  %2103 = icmp eq i16 %2101, 0
  %2104 = xor i1 %2103, true
  %2105 = zext i1 %2104 to i64
  %2106 = select i1 %2103, i64 2, i64 3
  %2107 = select i1 %2102, i64 %2105, i64 %2106
  %2108 = getelementptr inbounds i32, i32* %9, i64 %2107
  %2109 = load i32, i32* %2108, align 4
  %2110 = load i32*, i32** %10, align 8
  %2111 = sext i16 %2100 to i64
  %2112 = getelementptr inbounds i32, i32* %2110, i64 %2111
  %2113 = load i32, i32* %2112, align 4
  %2114 = add nsw i32 %2113, %2109
  %2115 = getelementptr inbounds i32*, i32** %10, i64 1
  %2116 = load i32*, i32** %2115, align 8
  %2117 = sext i16 %2101 to i64
  %2118 = getelementptr inbounds i32, i32* %2116, i64 %2117
  %2119 = load i32, i32* %2118, align 4
  %2120 = add nsw i32 %2114, %2119
  %2121 = sext i32 %2120 to i64
  %2122 = sext i32 %4 to i64
  %2123 = mul nsw i64 %2121, %2122
  %2124 = add nsw i64 %2123, 8192
  %2125 = lshr i64 %2124, 14
  br label %2126

2126:                                             ; preds = %2095, %2099
  %2127 = phi i64 [ %2125, %2099 ], [ 0, %2095 ]
  %2128 = shl i64 %2127, 32
  %2129 = ashr exact i64 %2128, 32
  %2130 = add nsw i64 %2129, %2097
  %2131 = icmp sgt i64 %2130, 2147483646
  br i1 %2131, label %2214, label %2132

2132:                                             ; preds = %2126
  %2133 = trunc i64 %2130 to i32
  %2134 = icmp ugt i32 %1900, %2133
  br i1 %2134, label %2135, label %2214

2135:                                             ; preds = %2132
  store i32 %2096, i32* %11, align 4
  %2136 = load i32, i32* %18, align 4
  store i32 %2136, i32* %12, align 4
  br label %2214

2137:                                             ; preds = %1898
  br i1 %1664, label %2214, label %2138

2138:                                             ; preds = %2137
  %2139 = add nsw i32 %1575, 2
  %2140 = icmp slt i32 %2139, %74
  %2141 = icmp sgt i32 %2139, %76
  %2142 = or i1 %2140, %2141
  br i1 %2142, label %2214, label %2143

2143:                                             ; preds = %2138
  %2144 = trunc i32 %2139 to i16
  %2145 = trunc i32 %1661 to i16
  %2146 = icmp eq i8* %13, null
  br i1 %2146, label %2147, label %2159

2147:                                             ; preds = %2143
  %2148 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2149 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2148, align 8
  %2150 = ashr i32 %2139, 3
  %2151 = mul nsw i32 %2150, %26
  %2152 = ashr i32 %1661, 3
  %2153 = add nsw i32 %2151, %2152
  %2154 = sext i32 %2153 to i64
  %2155 = getelementptr inbounds i8, i8* %36, i64 %2154
  %2156 = and i32 %1661, 7
  %2157 = and i32 %2139, 7
  %2158 = call i32 %2149(i8* %2155, i32 %26, i32 %2156, i32 %2157, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2171

2159:                                             ; preds = %2143
  %2160 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2161 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2160, align 8
  %2162 = ashr i32 %2139, 3
  %2163 = mul nsw i32 %2162, %26
  %2164 = ashr i32 %1661, 3
  %2165 = add nsw i32 %2163, %2164
  %2166 = sext i32 %2165 to i64
  %2167 = getelementptr inbounds i8, i8* %36, i64 %2166
  %2168 = and i32 %1661, 7
  %2169 = and i32 %2139, 7
  %2170 = call i32 %2161(i8* %2167, i32 %26, i32 %2168, i32 %2169, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2171

2171:                                             ; preds = %2159, %2147
  %2172 = phi i32 [ %2158, %2147 ], [ %2170, %2159 ]
  %2173 = sext i32 %2172 to i64
  %2174 = icmp eq i32** %10, null
  br i1 %2174, label %2202, label %2175

2175:                                             ; preds = %2171
  %2176 = sub i16 %2144, %38
  %2177 = sub i16 %2145, %40
  %2178 = icmp eq i16 %2176, 0
  %2179 = icmp eq i16 %2177, 0
  %2180 = xor i1 %2179, true
  %2181 = zext i1 %2180 to i64
  %2182 = select i1 %2179, i64 2, i64 3
  %2183 = select i1 %2178, i64 %2181, i64 %2182
  %2184 = getelementptr inbounds i32, i32* %9, i64 %2183
  %2185 = load i32, i32* %2184, align 4
  %2186 = load i32*, i32** %10, align 8
  %2187 = sext i16 %2176 to i64
  %2188 = getelementptr inbounds i32, i32* %2186, i64 %2187
  %2189 = load i32, i32* %2188, align 4
  %2190 = add nsw i32 %2189, %2185
  %2191 = getelementptr inbounds i32*, i32** %10, i64 1
  %2192 = load i32*, i32** %2191, align 8
  %2193 = sext i16 %2177 to i64
  %2194 = getelementptr inbounds i32, i32* %2192, i64 %2193
  %2195 = load i32, i32* %2194, align 4
  %2196 = add nsw i32 %2190, %2195
  %2197 = sext i32 %2196 to i64
  %2198 = sext i32 %4 to i64
  %2199 = mul nsw i64 %2197, %2198
  %2200 = add nsw i64 %2199, 8192
  %2201 = lshr i64 %2200, 14
  br label %2202

2202:                                             ; preds = %2171, %2175
  %2203 = phi i64 [ %2201, %2175 ], [ 0, %2171 ]
  %2204 = shl i64 %2203, 32
  %2205 = ashr exact i64 %2204, 32
  %2206 = add nsw i64 %2205, %2173
  %2207 = icmp sgt i64 %2206, 2147483646
  br i1 %2207, label %2214, label %2208

2208:                                             ; preds = %2202
  %2209 = trunc i64 %2206 to i32
  %2210 = icmp ugt i32 %1900, %2209
  br i1 %2210, label %2211, label %2214

2211:                                             ; preds = %2208
  store i32 %2172, i32* %11, align 4
  %2212 = load i32, i32* %18, align 4
  store i32 %2212, i32* %12, align 4
  br label %2214

2213:                                             ; preds = %1898
  unreachable

2214:                                             ; preds = %2211, %2208, %2202, %2135, %2132, %2126, %2059, %2056, %2050, %1983, %1980, %1974, %2138, %2137, %2062, %2061, %1986, %1985, %1910, %1909
  %2215 = phi i32 [ %1900, %1909 ], [ %1900, %1910 ], [ %1900, %1985 ], [ %1900, %1986 ], [ %1900, %2061 ], [ %1900, %2062 ], [ %1900, %2137 ], [ %1900, %2138 ], [ %1981, %1983 ], [ %1900, %1980 ], [ %1900, %1974 ], [ %2057, %2059 ], [ %1900, %2056 ], [ %1900, %2050 ], [ %2133, %2135 ], [ %1900, %2132 ], [ %1900, %2126 ], [ %2209, %2211 ], [ %1900, %2208 ], [ %1900, %2202 ]
  %2216 = phi i32 [ %1901, %1909 ], [ %1901, %1910 ], [ %1901, %1985 ], [ %1901, %1986 ], [ %1901, %2061 ], [ %1901, %2062 ], [ %1901, %2137 ], [ %1901, %2138 ], [ %1911, %1983 ], [ %1901, %1980 ], [ %1901, %1974 ], [ %1987, %2059 ], [ %1901, %2056 ], [ %1901, %2050 ], [ %2063, %2135 ], [ %1901, %2132 ], [ %1901, %2126 ], [ %2139, %2211 ], [ %1901, %2208 ], [ %1901, %2202 ]
  %2217 = phi i32 [ %1902, %1909 ], [ %1902, %1910 ], [ %1902, %1985 ], [ %1902, %1986 ], [ %1902, %2061 ], [ %1902, %2062 ], [ %1902, %2137 ], [ %1902, %2138 ], [ %1579, %1983 ], [ %1902, %1980 ], [ %1902, %1974 ], [ %1661, %2059 ], [ %1902, %2056 ], [ %1902, %2050 ], [ %1579, %2135 ], [ %1902, %2132 ], [ %1902, %2126 ], [ %1661, %2211 ], [ %1902, %2208 ], [ %1902, %2202 ]
  %2218 = icmp ugt i32 %7, 1
  br i1 %2218, label %2219, label %3025

2219:                                             ; preds = %2214
  %2220 = icmp ne i32 %2216, %1575
  %2221 = xor i1 %2220, true
  %2222 = icmp eq i32 %2217, %1576
  %2223 = or i1 %2222, %2221
  br i1 %2223, label %2388, label %2224

2224:                                             ; preds = %2219
  %2225 = sub nsw i32 %2216, %1575
  %2226 = sub nsw i32 %2217, %1576
  %2227 = shl nsw i32 %2226, 1
  %2228 = add nsw i32 %2227, %1576
  %2229 = icmp slt i32 %2228, %70
  %2230 = icmp sgt i32 %2228, %72
  %2231 = or i1 %2229, %2230
  %2232 = icmp slt i32 %2216, %74
  %2233 = or i1 %2232, %2231
  %2234 = icmp sgt i32 %2216, %76
  %2235 = or i1 %2234, %2233
  br i1 %2235, label %2306, label %2236

2236:                                             ; preds = %2224
  %2237 = trunc i32 %2216 to i16
  %2238 = trunc i32 %2228 to i16
  %2239 = icmp eq i8* %13, null
  br i1 %2239, label %2240, label %2252

2240:                                             ; preds = %2236
  %2241 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2242 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2241, align 8
  %2243 = ashr i32 %2216, 3
  %2244 = mul nsw i32 %2243, %26
  %2245 = ashr i32 %2228, 3
  %2246 = add nsw i32 %2245, %2244
  %2247 = sext i32 %2246 to i64
  %2248 = getelementptr inbounds i8, i8* %36, i64 %2247
  %2249 = and i32 %2228, 7
  %2250 = and i32 %2216, 7
  %2251 = call i32 %2242(i8* %2248, i32 %26, i32 %2249, i32 %2250, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2264

2252:                                             ; preds = %2236
  %2253 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2254 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2253, align 8
  %2255 = ashr i32 %2216, 3
  %2256 = mul nsw i32 %2255, %26
  %2257 = ashr i32 %2228, 3
  %2258 = add nsw i32 %2257, %2256
  %2259 = sext i32 %2258 to i64
  %2260 = getelementptr inbounds i8, i8* %36, i64 %2259
  %2261 = and i32 %2228, 7
  %2262 = and i32 %2216, 7
  %2263 = call i32 %2254(i8* %2260, i32 %26, i32 %2261, i32 %2262, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2264

2264:                                             ; preds = %2252, %2240
  %2265 = phi i32 [ %2251, %2240 ], [ %2263, %2252 ]
  %2266 = sext i32 %2265 to i64
  %2267 = icmp eq i32** %10, null
  br i1 %2267, label %2295, label %2268

2268:                                             ; preds = %2264
  %2269 = sub i16 %2237, %38
  %2270 = sub i16 %2238, %40
  %2271 = icmp eq i16 %2269, 0
  %2272 = icmp eq i16 %2270, 0
  %2273 = xor i1 %2272, true
  %2274 = zext i1 %2273 to i64
  %2275 = select i1 %2272, i64 2, i64 3
  %2276 = select i1 %2271, i64 %2274, i64 %2275
  %2277 = getelementptr inbounds i32, i32* %9, i64 %2276
  %2278 = load i32, i32* %2277, align 4
  %2279 = load i32*, i32** %10, align 8
  %2280 = sext i16 %2269 to i64
  %2281 = getelementptr inbounds i32, i32* %2279, i64 %2280
  %2282 = load i32, i32* %2281, align 4
  %2283 = add nsw i32 %2282, %2278
  %2284 = getelementptr inbounds i32*, i32** %10, i64 1
  %2285 = load i32*, i32** %2284, align 8
  %2286 = sext i16 %2270 to i64
  %2287 = getelementptr inbounds i32, i32* %2285, i64 %2286
  %2288 = load i32, i32* %2287, align 4
  %2289 = add nsw i32 %2283, %2288
  %2290 = sext i32 %2289 to i64
  %2291 = sext i32 %4 to i64
  %2292 = mul nsw i64 %2290, %2291
  %2293 = add nsw i64 %2292, 8192
  %2294 = lshr i64 %2293, 14
  br label %2295

2295:                                             ; preds = %2264, %2268
  %2296 = phi i64 [ %2294, %2268 ], [ 0, %2264 ]
  %2297 = shl i64 %2296, 32
  %2298 = ashr exact i64 %2297, 32
  %2299 = add nsw i64 %2298, %2266
  %2300 = icmp sgt i64 %2299, 2147483646
  br i1 %2300, label %2306, label %2301

2301:                                             ; preds = %2295
  %2302 = trunc i64 %2299 to i32
  %2303 = icmp ugt i32 %2215, %2302
  br i1 %2303, label %2304, label %2306

2304:                                             ; preds = %2301
  store i32 %2265, i32* %11, align 4
  %2305 = load i32, i32* %18, align 4
  store i32 %2305, i32* %12, align 4
  br label %2306

2306:                                             ; preds = %2304, %2301, %2295, %2224
  %2307 = phi i32 [ %2215, %2224 ], [ %2302, %2304 ], [ %2215, %2301 ], [ %2215, %2295 ]
  %2308 = phi i32 [ %2217, %2224 ], [ %2228, %2304 ], [ %2217, %2301 ], [ %2217, %2295 ]
  %2309 = icmp slt i32 %2217, %70
  %2310 = icmp sgt i32 %2217, %72
  %2311 = or i1 %2309, %2310
  br i1 %2311, label %3025, label %2312

2312:                                             ; preds = %2306
  %2313 = shl nsw i32 %2225, 1
  %2314 = add nsw i32 %2313, %1575
  %2315 = icmp slt i32 %2314, %74
  %2316 = icmp sgt i32 %2314, %76
  %2317 = or i1 %2315, %2316
  br i1 %2317, label %3025, label %2318

2318:                                             ; preds = %2312
  %2319 = trunc i32 %2314 to i16
  %2320 = trunc i32 %2217 to i16
  %2321 = icmp eq i8* %13, null
  br i1 %2321, label %2322, label %2334

2322:                                             ; preds = %2318
  %2323 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2324 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2323, align 8
  %2325 = ashr i32 %2314, 3
  %2326 = mul nsw i32 %2325, %26
  %2327 = ashr i32 %2217, 3
  %2328 = add nsw i32 %2326, %2327
  %2329 = sext i32 %2328 to i64
  %2330 = getelementptr inbounds i8, i8* %36, i64 %2329
  %2331 = and i32 %2217, 7
  %2332 = and i32 %2314, 7
  %2333 = call i32 %2324(i8* %2330, i32 %26, i32 %2331, i32 %2332, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2346

2334:                                             ; preds = %2318
  %2335 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2336 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2335, align 8
  %2337 = ashr i32 %2314, 3
  %2338 = mul nsw i32 %2337, %26
  %2339 = ashr i32 %2217, 3
  %2340 = add nsw i32 %2338, %2339
  %2341 = sext i32 %2340 to i64
  %2342 = getelementptr inbounds i8, i8* %36, i64 %2341
  %2343 = and i32 %2217, 7
  %2344 = and i32 %2314, 7
  %2345 = call i32 %2336(i8* %2342, i32 %26, i32 %2343, i32 %2344, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2346

2346:                                             ; preds = %2334, %2322
  %2347 = phi i32 [ %2333, %2322 ], [ %2345, %2334 ]
  %2348 = sext i32 %2347 to i64
  %2349 = icmp eq i32** %10, null
  br i1 %2349, label %2377, label %2350

2350:                                             ; preds = %2346
  %2351 = sub i16 %2319, %38
  %2352 = sub i16 %2320, %40
  %2353 = icmp eq i16 %2351, 0
  %2354 = icmp eq i16 %2352, 0
  %2355 = xor i1 %2354, true
  %2356 = zext i1 %2355 to i64
  %2357 = select i1 %2354, i64 2, i64 3
  %2358 = select i1 %2353, i64 %2356, i64 %2357
  %2359 = getelementptr inbounds i32, i32* %9, i64 %2358
  %2360 = load i32, i32* %2359, align 4
  %2361 = load i32*, i32** %10, align 8
  %2362 = sext i16 %2351 to i64
  %2363 = getelementptr inbounds i32, i32* %2361, i64 %2362
  %2364 = load i32, i32* %2363, align 4
  %2365 = add nsw i32 %2364, %2360
  %2366 = getelementptr inbounds i32*, i32** %10, i64 1
  %2367 = load i32*, i32** %2366, align 8
  %2368 = sext i16 %2352 to i64
  %2369 = getelementptr inbounds i32, i32* %2367, i64 %2368
  %2370 = load i32, i32* %2369, align 4
  %2371 = add nsw i32 %2365, %2370
  %2372 = sext i32 %2371 to i64
  %2373 = sext i32 %4 to i64
  %2374 = mul nsw i64 %2372, %2373
  %2375 = add nsw i64 %2374, 8192
  %2376 = lshr i64 %2375, 14
  br label %2377

2377:                                             ; preds = %2346, %2350
  %2378 = phi i64 [ %2376, %2350 ], [ 0, %2346 ]
  %2379 = shl i64 %2378, 32
  %2380 = ashr exact i64 %2379, 32
  %2381 = add nsw i64 %2380, %2348
  %2382 = icmp sgt i64 %2381, 2147483646
  br i1 %2382, label %3025, label %2383

2383:                                             ; preds = %2377
  %2384 = trunc i64 %2381 to i32
  %2385 = icmp ugt i32 %2307, %2384
  br i1 %2385, label %2386, label %3025

2386:                                             ; preds = %2383
  store i32 %2347, i32* %11, align 4
  %2387 = load i32, i32* %18, align 4
  store i32 %2387, i32* %12, align 4
  br label %3025

2388:                                             ; preds = %2219
  %2389 = or i1 %2220, %2222
  br i1 %2389, label %2710, label %2390

2390:                                             ; preds = %2388
  %2391 = sub nsw i32 %2217, %1576
  %2392 = shl nsw i32 %2391, 1
  %2393 = add nsw i32 %2392, %1576
  %2394 = icmp slt i32 %2393, %70
  %2395 = icmp sgt i32 %2393, %72
  %2396 = or i1 %2394, %2395
  br i1 %2396, label %2550, label %2397

2397:                                             ; preds = %2390
  %2398 = add nsw i32 %1575, 2
  %2399 = icmp slt i32 %2398, %74
  %2400 = icmp sgt i32 %2398, %76
  %2401 = or i1 %2399, %2400
  br i1 %2401, label %2472, label %2402

2402:                                             ; preds = %2397
  %2403 = trunc i32 %2398 to i16
  %2404 = trunc i32 %2393 to i16
  %2405 = icmp eq i8* %13, null
  br i1 %2405, label %2406, label %2418

2406:                                             ; preds = %2402
  %2407 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2408 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2407, align 8
  %2409 = ashr i32 %2398, 3
  %2410 = mul nsw i32 %2409, %26
  %2411 = ashr i32 %2393, 3
  %2412 = add nsw i32 %2411, %2410
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds i8, i8* %36, i64 %2413
  %2415 = and i32 %2393, 7
  %2416 = and i32 %2398, 7
  %2417 = call i32 %2408(i8* %2414, i32 %26, i32 %2415, i32 %2416, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2430

2418:                                             ; preds = %2402
  %2419 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2420 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2419, align 8
  %2421 = ashr i32 %2398, 3
  %2422 = mul nsw i32 %2421, %26
  %2423 = ashr i32 %2393, 3
  %2424 = add nsw i32 %2423, %2422
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds i8, i8* %36, i64 %2425
  %2427 = and i32 %2393, 7
  %2428 = and i32 %2398, 7
  %2429 = call i32 %2420(i8* %2426, i32 %26, i32 %2427, i32 %2428, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2430

2430:                                             ; preds = %2418, %2406
  %2431 = phi i32 [ %2417, %2406 ], [ %2429, %2418 ]
  %2432 = sext i32 %2431 to i64
  %2433 = icmp eq i32** %10, null
  br i1 %2433, label %2461, label %2434

2434:                                             ; preds = %2430
  %2435 = sub i16 %2403, %38
  %2436 = sub i16 %2404, %40
  %2437 = icmp eq i16 %2435, 0
  %2438 = icmp eq i16 %2436, 0
  %2439 = xor i1 %2438, true
  %2440 = zext i1 %2439 to i64
  %2441 = select i1 %2438, i64 2, i64 3
  %2442 = select i1 %2437, i64 %2440, i64 %2441
  %2443 = getelementptr inbounds i32, i32* %9, i64 %2442
  %2444 = load i32, i32* %2443, align 4
  %2445 = load i32*, i32** %10, align 8
  %2446 = sext i16 %2435 to i64
  %2447 = getelementptr inbounds i32, i32* %2445, i64 %2446
  %2448 = load i32, i32* %2447, align 4
  %2449 = add nsw i32 %2448, %2444
  %2450 = getelementptr inbounds i32*, i32** %10, i64 1
  %2451 = load i32*, i32** %2450, align 8
  %2452 = sext i16 %2436 to i64
  %2453 = getelementptr inbounds i32, i32* %2451, i64 %2452
  %2454 = load i32, i32* %2453, align 4
  %2455 = add nsw i32 %2449, %2454
  %2456 = sext i32 %2455 to i64
  %2457 = sext i32 %4 to i64
  %2458 = mul nsw i64 %2456, %2457
  %2459 = add nsw i64 %2458, 8192
  %2460 = lshr i64 %2459, 14
  br label %2461

2461:                                             ; preds = %2430, %2434
  %2462 = phi i64 [ %2460, %2434 ], [ 0, %2430 ]
  %2463 = shl i64 %2462, 32
  %2464 = ashr exact i64 %2463, 32
  %2465 = add nsw i64 %2464, %2432
  %2466 = icmp sgt i64 %2465, 2147483646
  br i1 %2466, label %2472, label %2467

2467:                                             ; preds = %2461
  %2468 = trunc i64 %2465 to i32
  %2469 = icmp ugt i32 %2215, %2468
  br i1 %2469, label %2470, label %2472

2470:                                             ; preds = %2467
  store i32 %2431, i32* %11, align 4
  %2471 = load i32, i32* %18, align 4
  store i32 %2471, i32* %12, align 4
  br label %2472

2472:                                             ; preds = %2470, %2467, %2461, %2397
  %2473 = phi i32 [ %2215, %2461 ], [ %2215, %2467 ], [ %2468, %2470 ], [ %2215, %2397 ]
  %2474 = phi i32 [ %1575, %2461 ], [ %1575, %2467 ], [ %2398, %2470 ], [ %1575, %2397 ]
  %2475 = phi i32 [ %2217, %2461 ], [ %2217, %2467 ], [ %2393, %2470 ], [ %2217, %2397 ]
  %2476 = add nsw i32 %1575, -2
  %2477 = icmp slt i32 %2476, %74
  %2478 = icmp sgt i32 %2476, %76
  %2479 = or i1 %2477, %2478
  br i1 %2479, label %2550, label %2480

2480:                                             ; preds = %2472
  %2481 = trunc i32 %2476 to i16
  %2482 = trunc i32 %2393 to i16
  %2483 = icmp eq i8* %13, null
  br i1 %2483, label %2484, label %2496

2484:                                             ; preds = %2480
  %2485 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2486 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2485, align 8
  %2487 = ashr i32 %2476, 3
  %2488 = mul nsw i32 %2487, %26
  %2489 = ashr i32 %2393, 3
  %2490 = add nsw i32 %2489, %2488
  %2491 = sext i32 %2490 to i64
  %2492 = getelementptr inbounds i8, i8* %36, i64 %2491
  %2493 = and i32 %2393, 7
  %2494 = and i32 %2476, 7
  %2495 = call i32 %2486(i8* %2492, i32 %26, i32 %2493, i32 %2494, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2508

2496:                                             ; preds = %2480
  %2497 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2498 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2497, align 8
  %2499 = ashr i32 %2476, 3
  %2500 = mul nsw i32 %2499, %26
  %2501 = ashr i32 %2393, 3
  %2502 = add nsw i32 %2501, %2500
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds i8, i8* %36, i64 %2503
  %2505 = and i32 %2393, 7
  %2506 = and i32 %2476, 7
  %2507 = call i32 %2498(i8* %2504, i32 %26, i32 %2505, i32 %2506, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2508

2508:                                             ; preds = %2496, %2484
  %2509 = phi i32 [ %2495, %2484 ], [ %2507, %2496 ]
  %2510 = sext i32 %2509 to i64
  %2511 = icmp eq i32** %10, null
  br i1 %2511, label %2539, label %2512

2512:                                             ; preds = %2508
  %2513 = sub i16 %2481, %38
  %2514 = sub i16 %2482, %40
  %2515 = icmp eq i16 %2513, 0
  %2516 = icmp eq i16 %2514, 0
  %2517 = xor i1 %2516, true
  %2518 = zext i1 %2517 to i64
  %2519 = select i1 %2516, i64 2, i64 3
  %2520 = select i1 %2515, i64 %2518, i64 %2519
  %2521 = getelementptr inbounds i32, i32* %9, i64 %2520
  %2522 = load i32, i32* %2521, align 4
  %2523 = load i32*, i32** %10, align 8
  %2524 = sext i16 %2513 to i64
  %2525 = getelementptr inbounds i32, i32* %2523, i64 %2524
  %2526 = load i32, i32* %2525, align 4
  %2527 = add nsw i32 %2526, %2522
  %2528 = getelementptr inbounds i32*, i32** %10, i64 1
  %2529 = load i32*, i32** %2528, align 8
  %2530 = sext i16 %2514 to i64
  %2531 = getelementptr inbounds i32, i32* %2529, i64 %2530
  %2532 = load i32, i32* %2531, align 4
  %2533 = add nsw i32 %2527, %2532
  %2534 = sext i32 %2533 to i64
  %2535 = sext i32 %4 to i64
  %2536 = mul nsw i64 %2534, %2535
  %2537 = add nsw i64 %2536, 8192
  %2538 = lshr i64 %2537, 14
  br label %2539

2539:                                             ; preds = %2508, %2512
  %2540 = phi i64 [ %2538, %2512 ], [ 0, %2508 ]
  %2541 = shl i64 %2540, 32
  %2542 = ashr exact i64 %2541, 32
  %2543 = add nsw i64 %2542, %2510
  %2544 = icmp sgt i64 %2543, 2147483646
  br i1 %2544, label %2550, label %2545

2545:                                             ; preds = %2539
  %2546 = trunc i64 %2543 to i32
  %2547 = icmp ugt i32 %2473, %2546
  br i1 %2547, label %2548, label %2550

2548:                                             ; preds = %2545
  store i32 %2509, i32* %11, align 4
  %2549 = load i32, i32* %18, align 4
  store i32 %2549, i32* %12, align 4
  br label %2550

2550:                                             ; preds = %2548, %2545, %2539, %2390, %2472
  %2551 = phi i32 [ %2473, %2472 ], [ %2215, %2390 ], [ %2546, %2548 ], [ %2473, %2545 ], [ %2473, %2539 ]
  %2552 = phi i32 [ %2474, %2472 ], [ %1575, %2390 ], [ %2476, %2548 ], [ %2474, %2545 ], [ %2474, %2539 ]
  %2553 = phi i32 [ %2475, %2472 ], [ %2217, %2390 ], [ %2393, %2548 ], [ %2475, %2545 ], [ %2475, %2539 ]
  %2554 = icmp ult i32 %1908, 2
  %2555 = icmp slt i32 %2217, %70
  %2556 = icmp sgt i32 %2217, %72
  %2557 = or i1 %2555, %2556
  br i1 %2554, label %2558, label %2634

2558:                                             ; preds = %2550
  br i1 %2557, label %3025, label %2559

2559:                                             ; preds = %2558
  %2560 = add nsw i32 %1575, 2
  %2561 = icmp slt i32 %2560, %74
  %2562 = icmp sgt i32 %2560, %76
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %3025, label %2564

2564:                                             ; preds = %2559
  %2565 = trunc i32 %2560 to i16
  %2566 = trunc i32 %2217 to i16
  %2567 = icmp eq i8* %13, null
  br i1 %2567, label %2568, label %2580

2568:                                             ; preds = %2564
  %2569 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2570 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2569, align 8
  %2571 = ashr i32 %2560, 3
  %2572 = mul nsw i32 %2571, %26
  %2573 = ashr i32 %2217, 3
  %2574 = add nsw i32 %2573, %2572
  %2575 = sext i32 %2574 to i64
  %2576 = getelementptr inbounds i8, i8* %36, i64 %2575
  %2577 = and i32 %2217, 7
  %2578 = and i32 %2560, 7
  %2579 = call i32 %2570(i8* %2576, i32 %26, i32 %2577, i32 %2578, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2592

2580:                                             ; preds = %2564
  %2581 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2582 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2581, align 8
  %2583 = ashr i32 %2560, 3
  %2584 = mul nsw i32 %2583, %26
  %2585 = ashr i32 %2217, 3
  %2586 = add nsw i32 %2585, %2584
  %2587 = sext i32 %2586 to i64
  %2588 = getelementptr inbounds i8, i8* %36, i64 %2587
  %2589 = and i32 %2217, 7
  %2590 = and i32 %2560, 7
  %2591 = call i32 %2582(i8* %2588, i32 %26, i32 %2589, i32 %2590, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2592

2592:                                             ; preds = %2580, %2568
  %2593 = phi i32 [ %2579, %2568 ], [ %2591, %2580 ]
  %2594 = sext i32 %2593 to i64
  %2595 = icmp eq i32** %10, null
  br i1 %2595, label %2623, label %2596

2596:                                             ; preds = %2592
  %2597 = sub i16 %2565, %38
  %2598 = sub i16 %2566, %40
  %2599 = icmp eq i16 %2597, 0
  %2600 = icmp eq i16 %2598, 0
  %2601 = xor i1 %2600, true
  %2602 = zext i1 %2601 to i64
  %2603 = select i1 %2600, i64 2, i64 3
  %2604 = select i1 %2599, i64 %2602, i64 %2603
  %2605 = getelementptr inbounds i32, i32* %9, i64 %2604
  %2606 = load i32, i32* %2605, align 4
  %2607 = load i32*, i32** %10, align 8
  %2608 = sext i16 %2597 to i64
  %2609 = getelementptr inbounds i32, i32* %2607, i64 %2608
  %2610 = load i32, i32* %2609, align 4
  %2611 = add nsw i32 %2610, %2606
  %2612 = getelementptr inbounds i32*, i32** %10, i64 1
  %2613 = load i32*, i32** %2612, align 8
  %2614 = sext i16 %2598 to i64
  %2615 = getelementptr inbounds i32, i32* %2613, i64 %2614
  %2616 = load i32, i32* %2615, align 4
  %2617 = add nsw i32 %2611, %2616
  %2618 = sext i32 %2617 to i64
  %2619 = sext i32 %4 to i64
  %2620 = mul nsw i64 %2618, %2619
  %2621 = add nsw i64 %2620, 8192
  %2622 = lshr i64 %2621, 14
  br label %2623

2623:                                             ; preds = %2592, %2596
  %2624 = phi i64 [ %2622, %2596 ], [ 0, %2592 ]
  %2625 = shl i64 %2624, 32
  %2626 = ashr exact i64 %2625, 32
  %2627 = add nsw i64 %2626, %2594
  %2628 = icmp sgt i64 %2627, 2147483646
  br i1 %2628, label %3025, label %2629

2629:                                             ; preds = %2623
  %2630 = trunc i64 %2627 to i32
  %2631 = icmp ugt i32 %2551, %2630
  br i1 %2631, label %2632, label %3025

2632:                                             ; preds = %2629
  store i32 %2593, i32* %11, align 4
  %2633 = load i32, i32* %18, align 4
  store i32 %2633, i32* %12, align 4
  br label %3025

2634:                                             ; preds = %2550
  br i1 %2557, label %3025, label %2635

2635:                                             ; preds = %2634
  %2636 = add nsw i32 %1575, -2
  %2637 = icmp slt i32 %2636, %74
  %2638 = icmp sgt i32 %2636, %76
  %2639 = or i1 %2637, %2638
  br i1 %2639, label %3025, label %2640

2640:                                             ; preds = %2635
  %2641 = trunc i32 %2636 to i16
  %2642 = trunc i32 %2217 to i16
  %2643 = icmp eq i8* %13, null
  br i1 %2643, label %2644, label %2656

2644:                                             ; preds = %2640
  %2645 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2646 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2645, align 8
  %2647 = ashr i32 %2636, 3
  %2648 = mul nsw i32 %2647, %26
  %2649 = ashr i32 %2217, 3
  %2650 = add nsw i32 %2649, %2648
  %2651 = sext i32 %2650 to i64
  %2652 = getelementptr inbounds i8, i8* %36, i64 %2651
  %2653 = and i32 %2217, 7
  %2654 = and i32 %2636, 7
  %2655 = call i32 %2646(i8* %2652, i32 %26, i32 %2653, i32 %2654, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2668

2656:                                             ; preds = %2640
  %2657 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2658 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2657, align 8
  %2659 = ashr i32 %2636, 3
  %2660 = mul nsw i32 %2659, %26
  %2661 = ashr i32 %2217, 3
  %2662 = add nsw i32 %2661, %2660
  %2663 = sext i32 %2662 to i64
  %2664 = getelementptr inbounds i8, i8* %36, i64 %2663
  %2665 = and i32 %2217, 7
  %2666 = and i32 %2636, 7
  %2667 = call i32 %2658(i8* %2664, i32 %26, i32 %2665, i32 %2666, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2668

2668:                                             ; preds = %2656, %2644
  %2669 = phi i32 [ %2655, %2644 ], [ %2667, %2656 ]
  %2670 = sext i32 %2669 to i64
  %2671 = icmp eq i32** %10, null
  br i1 %2671, label %2699, label %2672

2672:                                             ; preds = %2668
  %2673 = sub i16 %2641, %38
  %2674 = sub i16 %2642, %40
  %2675 = icmp eq i16 %2673, 0
  %2676 = icmp eq i16 %2674, 0
  %2677 = xor i1 %2676, true
  %2678 = zext i1 %2677 to i64
  %2679 = select i1 %2676, i64 2, i64 3
  %2680 = select i1 %2675, i64 %2678, i64 %2679
  %2681 = getelementptr inbounds i32, i32* %9, i64 %2680
  %2682 = load i32, i32* %2681, align 4
  %2683 = load i32*, i32** %10, align 8
  %2684 = sext i16 %2673 to i64
  %2685 = getelementptr inbounds i32, i32* %2683, i64 %2684
  %2686 = load i32, i32* %2685, align 4
  %2687 = add nsw i32 %2686, %2682
  %2688 = getelementptr inbounds i32*, i32** %10, i64 1
  %2689 = load i32*, i32** %2688, align 8
  %2690 = sext i16 %2674 to i64
  %2691 = getelementptr inbounds i32, i32* %2689, i64 %2690
  %2692 = load i32, i32* %2691, align 4
  %2693 = add nsw i32 %2687, %2692
  %2694 = sext i32 %2693 to i64
  %2695 = sext i32 %4 to i64
  %2696 = mul nsw i64 %2694, %2695
  %2697 = add nsw i64 %2696, 8192
  %2698 = lshr i64 %2697, 14
  br label %2699

2699:                                             ; preds = %2668, %2672
  %2700 = phi i64 [ %2698, %2672 ], [ 0, %2668 ]
  %2701 = shl i64 %2700, 32
  %2702 = ashr exact i64 %2701, 32
  %2703 = add nsw i64 %2702, %2670
  %2704 = icmp sgt i64 %2703, 2147483646
  br i1 %2704, label %3025, label %2705

2705:                                             ; preds = %2699
  %2706 = trunc i64 %2703 to i32
  %2707 = icmp ugt i32 %2551, %2706
  br i1 %2707, label %2708, label %3025

2708:                                             ; preds = %2705
  store i32 %2669, i32* %11, align 4
  %2709 = load i32, i32* %18, align 4
  store i32 %2709, i32* %12, align 4
  br label %3025

2710:                                             ; preds = %2388
  %2711 = and i1 %2220, %2222
  br i1 %2711, label %2712, label %3025

2712:                                             ; preds = %2710
  %2713 = sub nsw i32 %2216, %1575
  br i1 %1664, label %2790, label %2714

2714:                                             ; preds = %2712
  %2715 = shl nsw i32 %2713, 1
  %2716 = add nsw i32 %2715, %1575
  %2717 = icmp slt i32 %2716, %74
  %2718 = icmp sgt i32 %2716, %76
  %2719 = or i1 %2717, %2718
  br i1 %2719, label %2790, label %2720

2720:                                             ; preds = %2714
  %2721 = trunc i32 %2716 to i16
  %2722 = trunc i32 %1661 to i16
  %2723 = icmp eq i8* %13, null
  br i1 %2723, label %2724, label %2736

2724:                                             ; preds = %2720
  %2725 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2726 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2725, align 8
  %2727 = ashr i32 %2716, 3
  %2728 = mul nsw i32 %2727, %26
  %2729 = ashr i32 %1661, 3
  %2730 = add nsw i32 %2728, %2729
  %2731 = sext i32 %2730 to i64
  %2732 = getelementptr inbounds i8, i8* %36, i64 %2731
  %2733 = and i32 %1661, 7
  %2734 = and i32 %2716, 7
  %2735 = call i32 %2726(i8* %2732, i32 %26, i32 %2733, i32 %2734, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2748

2736:                                             ; preds = %2720
  %2737 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2738 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2737, align 8
  %2739 = ashr i32 %2716, 3
  %2740 = mul nsw i32 %2739, %26
  %2741 = ashr i32 %1661, 3
  %2742 = add nsw i32 %2740, %2741
  %2743 = sext i32 %2742 to i64
  %2744 = getelementptr inbounds i8, i8* %36, i64 %2743
  %2745 = and i32 %1661, 7
  %2746 = and i32 %2716, 7
  %2747 = call i32 %2738(i8* %2744, i32 %26, i32 %2745, i32 %2746, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2748

2748:                                             ; preds = %2736, %2724
  %2749 = phi i32 [ %2735, %2724 ], [ %2747, %2736 ]
  %2750 = sext i32 %2749 to i64
  %2751 = icmp eq i32** %10, null
  br i1 %2751, label %2779, label %2752

2752:                                             ; preds = %2748
  %2753 = sub i16 %2721, %38
  %2754 = sub i16 %2722, %40
  %2755 = icmp eq i16 %2753, 0
  %2756 = icmp eq i16 %2754, 0
  %2757 = xor i1 %2756, true
  %2758 = zext i1 %2757 to i64
  %2759 = select i1 %2756, i64 2, i64 3
  %2760 = select i1 %2755, i64 %2758, i64 %2759
  %2761 = getelementptr inbounds i32, i32* %9, i64 %2760
  %2762 = load i32, i32* %2761, align 4
  %2763 = load i32*, i32** %10, align 8
  %2764 = sext i16 %2753 to i64
  %2765 = getelementptr inbounds i32, i32* %2763, i64 %2764
  %2766 = load i32, i32* %2765, align 4
  %2767 = add nsw i32 %2766, %2762
  %2768 = getelementptr inbounds i32*, i32** %10, i64 1
  %2769 = load i32*, i32** %2768, align 8
  %2770 = sext i16 %2754 to i64
  %2771 = getelementptr inbounds i32, i32* %2769, i64 %2770
  %2772 = load i32, i32* %2771, align 4
  %2773 = add nsw i32 %2767, %2772
  %2774 = sext i32 %2773 to i64
  %2775 = sext i32 %4 to i64
  %2776 = mul nsw i64 %2774, %2775
  %2777 = add nsw i64 %2776, 8192
  %2778 = lshr i64 %2777, 14
  br label %2779

2779:                                             ; preds = %2748, %2752
  %2780 = phi i64 [ %2778, %2752 ], [ 0, %2748 ]
  %2781 = shl i64 %2780, 32
  %2782 = ashr exact i64 %2781, 32
  %2783 = add nsw i64 %2782, %2750
  %2784 = icmp sgt i64 %2783, 2147483646
  br i1 %2784, label %2790, label %2785

2785:                                             ; preds = %2779
  %2786 = trunc i64 %2783 to i32
  %2787 = icmp ugt i32 %2215, %2786
  br i1 %2787, label %2788, label %2790

2788:                                             ; preds = %2785
  store i32 %2749, i32* %11, align 4
  %2789 = load i32, i32* %18, align 4
  store i32 %2789, i32* %12, align 4
  br label %2790

2790:                                             ; preds = %2788, %2785, %2779, %2714, %2712
  %2791 = phi i32 [ %2215, %2712 ], [ %2215, %2714 ], [ %2786, %2788 ], [ %2215, %2785 ], [ %2215, %2779 ]
  %2792 = phi i32 [ %2216, %2712 ], [ %2216, %2714 ], [ %2716, %2788 ], [ %2216, %2785 ], [ %2216, %2779 ]
  %2793 = phi i32 [ %1576, %2712 ], [ %1576, %2714 ], [ %1661, %2788 ], [ %1576, %2785 ], [ %1576, %2779 ]
  br i1 %1582, label %2870, label %2794

2794:                                             ; preds = %2790
  %2795 = shl nsw i32 %2713, 1
  %2796 = add nsw i32 %2795, %1575
  %2797 = icmp slt i32 %2796, %74
  %2798 = icmp sgt i32 %2796, %76
  %2799 = or i1 %2797, %2798
  br i1 %2799, label %2870, label %2800

2800:                                             ; preds = %2794
  %2801 = trunc i32 %2796 to i16
  %2802 = trunc i32 %1579 to i16
  %2803 = icmp eq i8* %13, null
  br i1 %2803, label %2804, label %2816

2804:                                             ; preds = %2800
  %2805 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2806 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2805, align 8
  %2807 = ashr i32 %2796, 3
  %2808 = mul nsw i32 %2807, %26
  %2809 = ashr i32 %1579, 3
  %2810 = add nsw i32 %2808, %2809
  %2811 = sext i32 %2810 to i64
  %2812 = getelementptr inbounds i8, i8* %36, i64 %2811
  %2813 = and i32 %1579, 7
  %2814 = and i32 %2796, 7
  %2815 = call i32 %2806(i8* %2812, i32 %26, i32 %2813, i32 %2814, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2828

2816:                                             ; preds = %2800
  %2817 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2818 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2817, align 8
  %2819 = ashr i32 %2796, 3
  %2820 = mul nsw i32 %2819, %26
  %2821 = ashr i32 %1579, 3
  %2822 = add nsw i32 %2820, %2821
  %2823 = sext i32 %2822 to i64
  %2824 = getelementptr inbounds i8, i8* %36, i64 %2823
  %2825 = and i32 %1579, 7
  %2826 = and i32 %2796, 7
  %2827 = call i32 %2818(i8* %2824, i32 %26, i32 %2825, i32 %2826, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2828

2828:                                             ; preds = %2816, %2804
  %2829 = phi i32 [ %2815, %2804 ], [ %2827, %2816 ]
  %2830 = sext i32 %2829 to i64
  %2831 = icmp eq i32** %10, null
  br i1 %2831, label %2859, label %2832

2832:                                             ; preds = %2828
  %2833 = sub i16 %2801, %38
  %2834 = sub i16 %2802, %40
  %2835 = icmp eq i16 %2833, 0
  %2836 = icmp eq i16 %2834, 0
  %2837 = xor i1 %2836, true
  %2838 = zext i1 %2837 to i64
  %2839 = select i1 %2836, i64 2, i64 3
  %2840 = select i1 %2835, i64 %2838, i64 %2839
  %2841 = getelementptr inbounds i32, i32* %9, i64 %2840
  %2842 = load i32, i32* %2841, align 4
  %2843 = load i32*, i32** %10, align 8
  %2844 = sext i16 %2833 to i64
  %2845 = getelementptr inbounds i32, i32* %2843, i64 %2844
  %2846 = load i32, i32* %2845, align 4
  %2847 = add nsw i32 %2846, %2842
  %2848 = getelementptr inbounds i32*, i32** %10, i64 1
  %2849 = load i32*, i32** %2848, align 8
  %2850 = sext i16 %2834 to i64
  %2851 = getelementptr inbounds i32, i32* %2849, i64 %2850
  %2852 = load i32, i32* %2851, align 4
  %2853 = add nsw i32 %2847, %2852
  %2854 = sext i32 %2853 to i64
  %2855 = sext i32 %4 to i64
  %2856 = mul nsw i64 %2854, %2855
  %2857 = add nsw i64 %2856, 8192
  %2858 = lshr i64 %2857, 14
  br label %2859

2859:                                             ; preds = %2828, %2832
  %2860 = phi i64 [ %2858, %2832 ], [ 0, %2828 ]
  %2861 = shl i64 %2860, 32
  %2862 = ashr exact i64 %2861, 32
  %2863 = add nsw i64 %2862, %2830
  %2864 = icmp sgt i64 %2863, 2147483646
  br i1 %2864, label %2870, label %2865

2865:                                             ; preds = %2859
  %2866 = trunc i64 %2863 to i32
  %2867 = icmp ugt i32 %2791, %2866
  br i1 %2867, label %2868, label %2870

2868:                                             ; preds = %2865
  store i32 %2829, i32* %11, align 4
  %2869 = load i32, i32* %18, align 4
  store i32 %2869, i32* %12, align 4
  br label %2870

2870:                                             ; preds = %2868, %2865, %2859, %2794, %2790
  %2871 = phi i32 [ %2791, %2790 ], [ %2791, %2794 ], [ %2866, %2868 ], [ %2791, %2865 ], [ %2791, %2859 ]
  %2872 = phi i32 [ %2792, %2790 ], [ %2792, %2794 ], [ %2796, %2868 ], [ %2792, %2865 ], [ %2792, %2859 ]
  %2873 = phi i32 [ %2793, %2790 ], [ %2793, %2794 ], [ %1579, %2868 ], [ %2793, %2865 ], [ %2793, %2859 ]
  switch i32 %1908, label %3024 [
    i32 0, label %2874
    i32 2, label %2874
    i32 1, label %2949
    i32 3, label %2949
  ]

2874:                                             ; preds = %2870, %2870
  %2875 = icmp slt i32 %2216, %74
  %2876 = or i1 %1664, %2875
  %2877 = icmp sgt i32 %2216, %76
  %2878 = or i1 %2877, %2876
  br i1 %2878, label %3025, label %2879

2879:                                             ; preds = %2874
  %2880 = trunc i32 %2216 to i16
  %2881 = trunc i32 %1661 to i16
  %2882 = icmp eq i8* %13, null
  br i1 %2882, label %2883, label %2895

2883:                                             ; preds = %2879
  %2884 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2885 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2884, align 8
  %2886 = ashr i32 %2216, 3
  %2887 = mul nsw i32 %2886, %26
  %2888 = ashr i32 %1661, 3
  %2889 = add nsw i32 %2887, %2888
  %2890 = sext i32 %2889 to i64
  %2891 = getelementptr inbounds i8, i8* %36, i64 %2890
  %2892 = and i32 %1661, 7
  %2893 = and i32 %2216, 7
  %2894 = call i32 %2885(i8* %2891, i32 %26, i32 %2892, i32 %2893, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2907

2895:                                             ; preds = %2879
  %2896 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2897 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2896, align 8
  %2898 = ashr i32 %2216, 3
  %2899 = mul nsw i32 %2898, %26
  %2900 = ashr i32 %1661, 3
  %2901 = add nsw i32 %2899, %2900
  %2902 = sext i32 %2901 to i64
  %2903 = getelementptr inbounds i8, i8* %36, i64 %2902
  %2904 = and i32 %1661, 7
  %2905 = and i32 %2216, 7
  %2906 = call i32 %2897(i8* %2903, i32 %26, i32 %2904, i32 %2905, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2907

2907:                                             ; preds = %2895, %2883
  %2908 = phi i32 [ %2894, %2883 ], [ %2906, %2895 ]
  %2909 = sext i32 %2908 to i64
  %2910 = icmp eq i32** %10, null
  br i1 %2910, label %2938, label %2911

2911:                                             ; preds = %2907
  %2912 = sub i16 %2880, %38
  %2913 = sub i16 %2881, %40
  %2914 = icmp eq i16 %2912, 0
  %2915 = icmp eq i16 %2913, 0
  %2916 = xor i1 %2915, true
  %2917 = zext i1 %2916 to i64
  %2918 = select i1 %2915, i64 2, i64 3
  %2919 = select i1 %2914, i64 %2917, i64 %2918
  %2920 = getelementptr inbounds i32, i32* %9, i64 %2919
  %2921 = load i32, i32* %2920, align 4
  %2922 = load i32*, i32** %10, align 8
  %2923 = sext i16 %2912 to i64
  %2924 = getelementptr inbounds i32, i32* %2922, i64 %2923
  %2925 = load i32, i32* %2924, align 4
  %2926 = add nsw i32 %2925, %2921
  %2927 = getelementptr inbounds i32*, i32** %10, i64 1
  %2928 = load i32*, i32** %2927, align 8
  %2929 = sext i16 %2913 to i64
  %2930 = getelementptr inbounds i32, i32* %2928, i64 %2929
  %2931 = load i32, i32* %2930, align 4
  %2932 = add nsw i32 %2926, %2931
  %2933 = sext i32 %2932 to i64
  %2934 = sext i32 %4 to i64
  %2935 = mul nsw i64 %2933, %2934
  %2936 = add nsw i64 %2935, 8192
  %2937 = lshr i64 %2936, 14
  br label %2938

2938:                                             ; preds = %2907, %2911
  %2939 = phi i64 [ %2937, %2911 ], [ 0, %2907 ]
  %2940 = shl i64 %2939, 32
  %2941 = ashr exact i64 %2940, 32
  %2942 = add nsw i64 %2941, %2909
  %2943 = icmp sgt i64 %2942, 2147483646
  br i1 %2943, label %3025, label %2944

2944:                                             ; preds = %2938
  %2945 = trunc i64 %2942 to i32
  %2946 = icmp ugt i32 %2871, %2945
  br i1 %2946, label %2947, label %3025

2947:                                             ; preds = %2944
  store i32 %2908, i32* %11, align 4
  %2948 = load i32, i32* %18, align 4
  store i32 %2948, i32* %12, align 4
  br label %3025

2949:                                             ; preds = %2870, %2870
  %2950 = icmp slt i32 %2216, %74
  %2951 = or i1 %1582, %2950
  %2952 = icmp sgt i32 %2216, %76
  %2953 = or i1 %2952, %2951
  br i1 %2953, label %3025, label %2954

2954:                                             ; preds = %2949
  %2955 = trunc i32 %2216 to i16
  %2956 = trunc i32 %1579 to i16
  %2957 = icmp eq i8* %13, null
  br i1 %2957, label %2958, label %2970

2958:                                             ; preds = %2954
  %2959 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2960 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2959, align 8
  %2961 = ashr i32 %2216, 3
  %2962 = mul nsw i32 %2961, %26
  %2963 = ashr i32 %1579, 3
  %2964 = add nsw i32 %2962, %2963
  %2965 = sext i32 %2964 to i64
  %2966 = getelementptr inbounds i8, i8* %36, i64 %2965
  %2967 = and i32 %1579, 7
  %2968 = and i32 %2216, 7
  %2969 = call i32 %2960(i8* %2966, i32 %26, i32 %2967, i32 %2968, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2982

2970:                                             ; preds = %2954
  %2971 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2972 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2971, align 8
  %2973 = ashr i32 %2216, 3
  %2974 = mul nsw i32 %2973, %26
  %2975 = ashr i32 %1579, 3
  %2976 = add nsw i32 %2974, %2975
  %2977 = sext i32 %2976 to i64
  %2978 = getelementptr inbounds i8, i8* %36, i64 %2977
  %2979 = and i32 %1579, 7
  %2980 = and i32 %2216, 7
  %2981 = call i32 %2972(i8* %2978, i32 %26, i32 %2979, i32 %2980, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2982

2982:                                             ; preds = %2970, %2958
  %2983 = phi i32 [ %2969, %2958 ], [ %2981, %2970 ]
  %2984 = sext i32 %2983 to i64
  %2985 = icmp eq i32** %10, null
  br i1 %2985, label %3013, label %2986

2986:                                             ; preds = %2982
  %2987 = sub i16 %2955, %38
  %2988 = sub i16 %2956, %40
  %2989 = icmp eq i16 %2987, 0
  %2990 = icmp eq i16 %2988, 0
  %2991 = xor i1 %2990, true
  %2992 = zext i1 %2991 to i64
  %2993 = select i1 %2990, i64 2, i64 3
  %2994 = select i1 %2989, i64 %2992, i64 %2993
  %2995 = getelementptr inbounds i32, i32* %9, i64 %2994
  %2996 = load i32, i32* %2995, align 4
  %2997 = load i32*, i32** %10, align 8
  %2998 = sext i16 %2987 to i64
  %2999 = getelementptr inbounds i32, i32* %2997, i64 %2998
  %3000 = load i32, i32* %2999, align 4
  %3001 = add nsw i32 %3000, %2996
  %3002 = getelementptr inbounds i32*, i32** %10, i64 1
  %3003 = load i32*, i32** %3002, align 8
  %3004 = sext i16 %2988 to i64
  %3005 = getelementptr inbounds i32, i32* %3003, i64 %3004
  %3006 = load i32, i32* %3005, align 4
  %3007 = add nsw i32 %3001, %3006
  %3008 = sext i32 %3007 to i64
  %3009 = sext i32 %4 to i64
  %3010 = mul nsw i64 %3008, %3009
  %3011 = add nsw i64 %3010, 8192
  %3012 = lshr i64 %3011, 14
  br label %3013

3013:                                             ; preds = %2982, %2986
  %3014 = phi i64 [ %3012, %2986 ], [ 0, %2982 ]
  %3015 = shl i64 %3014, 32
  %3016 = ashr exact i64 %3015, 32
  %3017 = add nsw i64 %3016, %2984
  %3018 = icmp sgt i64 %3017, 2147483646
  br i1 %3018, label %3025, label %3019

3019:                                             ; preds = %3013
  %3020 = trunc i64 %3017 to i32
  %3021 = icmp ugt i32 %2871, %3020
  br i1 %3021, label %3022, label %3025

3022:                                             ; preds = %3019
  store i32 %2983, i32* %11, align 4
  %3023 = load i32, i32* %18, align 4
  store i32 %3023, i32* %12, align 4
  br label %3025

3024:                                             ; preds = %2870
  unreachable

3025:                                             ; preds = %3022, %3019, %3013, %2947, %2944, %2938, %2708, %2705, %2699, %2632, %2629, %2623, %2386, %2383, %2377, %2710, %2312, %2306, %2559, %2558, %2635, %2634, %2874, %2949, %1573, %2214
  %3026 = phi i32 [ %2215, %2214 ], [ %1574, %1573 ], [ %2215, %2710 ], [ %2307, %2312 ], [ %2307, %2306 ], [ %2551, %2559 ], [ %2551, %2558 ], [ %2551, %2635 ], [ %2551, %2634 ], [ %2871, %2874 ], [ %2871, %2949 ], [ %2384, %2386 ], [ %2307, %2383 ], [ %2307, %2377 ], [ %2630, %2632 ], [ %2551, %2629 ], [ %2551, %2623 ], [ %2706, %2708 ], [ %2551, %2705 ], [ %2551, %2699 ], [ %2945, %2947 ], [ %2871, %2944 ], [ %2871, %2938 ], [ %3020, %3022 ], [ %2871, %3019 ], [ %2871, %3013 ]
  %3027 = phi i32 [ %2216, %2214 ], [ %1575, %1573 ], [ %2216, %2710 ], [ %2216, %2312 ], [ %2216, %2306 ], [ %2552, %2559 ], [ %2552, %2558 ], [ %2552, %2635 ], [ %2552, %2634 ], [ %2872, %2874 ], [ %2872, %2949 ], [ %2314, %2386 ], [ %2216, %2383 ], [ %2216, %2377 ], [ %2560, %2632 ], [ %2552, %2629 ], [ %2552, %2623 ], [ %2636, %2708 ], [ %2552, %2705 ], [ %2552, %2699 ], [ %2216, %2947 ], [ %2872, %2944 ], [ %2872, %2938 ], [ %2216, %3022 ], [ %2872, %3019 ], [ %2872, %3013 ]
  %3028 = phi i32 [ %2217, %2214 ], [ %1576, %1573 ], [ %2217, %2710 ], [ %2308, %2312 ], [ %2308, %2306 ], [ %2553, %2559 ], [ %2553, %2558 ], [ %2553, %2635 ], [ %2553, %2634 ], [ %2873, %2874 ], [ %2873, %2949 ], [ %2217, %2386 ], [ %2308, %2383 ], [ %2308, %2377 ], [ %2217, %2632 ], [ %2553, %2629 ], [ %2553, %2623 ], [ %2217, %2708 ], [ %2553, %2705 ], [ %2553, %2699 ], [ %1661, %2947 ], [ %2873, %2944 ], [ %2873, %2938 ], [ %1579, %3022 ], [ %2873, %3019 ], [ %2873, %3013 ]
  %3029 = phi i32 [ 1, %2214 ], [ 2, %1573 ], [ 1, %2710 ], [ 1, %2312 ], [ 1, %2306 ], [ 1, %2559 ], [ 1, %2558 ], [ 1, %2635 ], [ 1, %2634 ], [ 1, %2874 ], [ 1, %2949 ], [ 1, %2386 ], [ 1, %2383 ], [ 1, %2377 ], [ 1, %2632 ], [ 1, %2629 ], [ 1, %2623 ], [ 1, %2708 ], [ 1, %2705 ], [ 1, %2699 ], [ 1, %2947 ], [ 1, %2944 ], [ 1, %2938 ], [ 1, %3022 ], [ 1, %3019 ], [ 1, %3013 ]
  %3030 = icmp eq i32 %3, 0
  br i1 %3030, label %4486, label %3031

3031:                                             ; preds = %3025
  %3032 = load i16, i16* %37, align 2
  %3033 = sext i16 %3032 to i32
  %3034 = icmp slt i32 %3033, 0
  %3035 = sub nsw i32 0, %3033
  %3036 = select i1 %3034, i32 %3035, i32 %3033
  %3037 = icmp slt i32 %3036, 64
  br i1 %3037, label %3038, label %4486

3038:                                             ; preds = %3031
  %3039 = load i16, i16* %39, align 2
  %3040 = sext i16 %3039 to i32
  %3041 = icmp slt i32 %3040, 0
  %3042 = sub nsw i32 0, %3040
  %3043 = select i1 %3041, i32 %3042, i32 %3040
  %3044 = icmp slt i32 %3043, 64
  %3045 = icmp eq i32 %6, 0
  %3046 = and i1 %3045, %3044
  br i1 %3046, label %3047, label %4486

3047:                                             ; preds = %3038
  %3048 = sub nsw i32 %3028, %3029
  %3049 = icmp slt i32 %3048, %70
  %3050 = icmp sgt i32 %3048, %72
  %3051 = or i1 %3049, %3050
  %3052 = icmp slt i32 %3027, %74
  %3053 = or i1 %3052, %3051
  %3054 = icmp sgt i32 %3027, %76
  %3055 = or i1 %3054, %3053
  br i1 %3055, label %3126, label %3056

3056:                                             ; preds = %3047
  %3057 = trunc i32 %3027 to i16
  %3058 = trunc i32 %3048 to i16
  %3059 = icmp eq i8* %13, null
  br i1 %3059, label %3060, label %3072

3060:                                             ; preds = %3056
  %3061 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3062 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3061, align 8
  %3063 = ashr i32 %3027, 3
  %3064 = mul nsw i32 %3063, %26
  %3065 = ashr i32 %3048, 3
  %3066 = add nsw i32 %3065, %3064
  %3067 = sext i32 %3066 to i64
  %3068 = getelementptr inbounds i8, i8* %36, i64 %3067
  %3069 = and i32 %3048, 7
  %3070 = and i32 %3027, 7
  %3071 = call i32 %3062(i8* %3068, i32 %26, i32 %3069, i32 %3070, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3084

3072:                                             ; preds = %3056
  %3073 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3074 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3073, align 8
  %3075 = ashr i32 %3027, 3
  %3076 = mul nsw i32 %3075, %26
  %3077 = ashr i32 %3048, 3
  %3078 = add nsw i32 %3077, %3076
  %3079 = sext i32 %3078 to i64
  %3080 = getelementptr inbounds i8, i8* %36, i64 %3079
  %3081 = and i32 %3048, 7
  %3082 = and i32 %3027, 7
  %3083 = call i32 %3074(i8* %3080, i32 %26, i32 %3081, i32 %3082, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3084

3084:                                             ; preds = %3072, %3060
  %3085 = phi i32 [ %3071, %3060 ], [ %3083, %3072 ]
  %3086 = sext i32 %3085 to i64
  %3087 = icmp eq i32** %10, null
  br i1 %3087, label %3115, label %3088

3088:                                             ; preds = %3084
  %3089 = sub i16 %3057, %38
  %3090 = sub i16 %3058, %40
  %3091 = icmp eq i16 %3089, 0
  %3092 = icmp eq i16 %3090, 0
  %3093 = xor i1 %3092, true
  %3094 = zext i1 %3093 to i64
  %3095 = select i1 %3092, i64 2, i64 3
  %3096 = select i1 %3091, i64 %3094, i64 %3095
  %3097 = getelementptr inbounds i32, i32* %9, i64 %3096
  %3098 = load i32, i32* %3097, align 4
  %3099 = load i32*, i32** %10, align 8
  %3100 = sext i16 %3089 to i64
  %3101 = getelementptr inbounds i32, i32* %3099, i64 %3100
  %3102 = load i32, i32* %3101, align 4
  %3103 = add nsw i32 %3102, %3098
  %3104 = getelementptr inbounds i32*, i32** %10, i64 1
  %3105 = load i32*, i32** %3104, align 8
  %3106 = sext i16 %3090 to i64
  %3107 = getelementptr inbounds i32, i32* %3105, i64 %3106
  %3108 = load i32, i32* %3107, align 4
  %3109 = add nsw i32 %3103, %3108
  %3110 = sext i32 %3109 to i64
  %3111 = sext i32 %4 to i64
  %3112 = mul nsw i64 %3110, %3111
  %3113 = add nsw i64 %3112, 8192
  %3114 = lshr i64 %3113, 14
  br label %3115

3115:                                             ; preds = %3084, %3088
  %3116 = phi i64 [ %3114, %3088 ], [ 0, %3084 ]
  %3117 = shl i64 %3116, 32
  %3118 = ashr exact i64 %3117, 32
  %3119 = add nsw i64 %3118, %3086
  %3120 = icmp sgt i64 %3119, 2147483646
  br i1 %3120, label %3126, label %3121

3121:                                             ; preds = %3115
  %3122 = trunc i64 %3119 to i32
  %3123 = icmp ugt i32 %3026, %3122
  br i1 %3123, label %3124, label %3126

3124:                                             ; preds = %3121
  store i32 %3085, i32* %11, align 4
  %3125 = load i32, i32* %18, align 4
  store i32 %3125, i32* %12, align 4
  br label %3126

3126:                                             ; preds = %3124, %3121, %3115, %3047
  %3127 = phi i32 [ %3026, %3047 ], [ %3122, %3124 ], [ %3026, %3121 ], [ %3026, %3115 ]
  %3128 = phi i32 [ %3028, %3047 ], [ %3048, %3124 ], [ %3028, %3121 ], [ %3028, %3115 ]
  %3129 = phi i32 [ 2147483647, %3047 ], [ %3122, %3124 ], [ %3122, %3121 ], [ 2147483647, %3115 ]
  %3130 = add nsw i32 %3029, %3028
  %3131 = icmp slt i32 %3130, %70
  %3132 = icmp sgt i32 %3130, %72
  %3133 = or i1 %3131, %3132
  %3134 = or i1 %3052, %3133
  %3135 = or i1 %3054, %3134
  br i1 %3135, label %3206, label %3136

3136:                                             ; preds = %3126
  %3137 = trunc i32 %3027 to i16
  %3138 = trunc i32 %3130 to i16
  %3139 = icmp eq i8* %13, null
  br i1 %3139, label %3140, label %3152

3140:                                             ; preds = %3136
  %3141 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3142 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3141, align 8
  %3143 = ashr i32 %3027, 3
  %3144 = mul nsw i32 %3143, %26
  %3145 = ashr i32 %3130, 3
  %3146 = add nsw i32 %3145, %3144
  %3147 = sext i32 %3146 to i64
  %3148 = getelementptr inbounds i8, i8* %36, i64 %3147
  %3149 = and i32 %3130, 7
  %3150 = and i32 %3027, 7
  %3151 = call i32 %3142(i8* %3148, i32 %26, i32 %3149, i32 %3150, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3164

3152:                                             ; preds = %3136
  %3153 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3154 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3153, align 8
  %3155 = ashr i32 %3027, 3
  %3156 = mul nsw i32 %3155, %26
  %3157 = ashr i32 %3130, 3
  %3158 = add nsw i32 %3157, %3156
  %3159 = sext i32 %3158 to i64
  %3160 = getelementptr inbounds i8, i8* %36, i64 %3159
  %3161 = and i32 %3130, 7
  %3162 = and i32 %3027, 7
  %3163 = call i32 %3154(i8* %3160, i32 %26, i32 %3161, i32 %3162, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3164

3164:                                             ; preds = %3152, %3140
  %3165 = phi i32 [ %3151, %3140 ], [ %3163, %3152 ]
  %3166 = sext i32 %3165 to i64
  %3167 = icmp eq i32** %10, null
  br i1 %3167, label %3195, label %3168

3168:                                             ; preds = %3164
  %3169 = sub i16 %3137, %38
  %3170 = sub i16 %3138, %40
  %3171 = icmp eq i16 %3169, 0
  %3172 = icmp eq i16 %3170, 0
  %3173 = xor i1 %3172, true
  %3174 = zext i1 %3173 to i64
  %3175 = select i1 %3172, i64 2, i64 3
  %3176 = select i1 %3171, i64 %3174, i64 %3175
  %3177 = getelementptr inbounds i32, i32* %9, i64 %3176
  %3178 = load i32, i32* %3177, align 4
  %3179 = load i32*, i32** %10, align 8
  %3180 = sext i16 %3169 to i64
  %3181 = getelementptr inbounds i32, i32* %3179, i64 %3180
  %3182 = load i32, i32* %3181, align 4
  %3183 = add nsw i32 %3182, %3178
  %3184 = getelementptr inbounds i32*, i32** %10, i64 1
  %3185 = load i32*, i32** %3184, align 8
  %3186 = sext i16 %3170 to i64
  %3187 = getelementptr inbounds i32, i32* %3185, i64 %3186
  %3188 = load i32, i32* %3187, align 4
  %3189 = add nsw i32 %3183, %3188
  %3190 = sext i32 %3189 to i64
  %3191 = sext i32 %4 to i64
  %3192 = mul nsw i64 %3190, %3191
  %3193 = add nsw i64 %3192, 8192
  %3194 = lshr i64 %3193, 14
  br label %3195

3195:                                             ; preds = %3164, %3168
  %3196 = phi i64 [ %3194, %3168 ], [ 0, %3164 ]
  %3197 = shl i64 %3196, 32
  %3198 = ashr exact i64 %3197, 32
  %3199 = add nsw i64 %3198, %3166
  %3200 = icmp sgt i64 %3199, 2147483646
  br i1 %3200, label %3206, label %3201

3201:                                             ; preds = %3195
  %3202 = trunc i64 %3199 to i32
  %3203 = icmp ugt i32 %3127, %3202
  br i1 %3203, label %3204, label %3206

3204:                                             ; preds = %3201
  store i32 %3165, i32* %11, align 4
  %3205 = load i32, i32* %18, align 4
  store i32 %3205, i32* %12, align 4
  br label %3206

3206:                                             ; preds = %3204, %3201, %3195, %3126
  %3207 = phi i32 [ %3127, %3126 ], [ %3202, %3204 ], [ %3127, %3201 ], [ %3127, %3195 ]
  %3208 = phi i32 [ %3128, %3126 ], [ %3130, %3204 ], [ %3128, %3201 ], [ %3128, %3195 ]
  %3209 = phi i32 [ 2147483647, %3126 ], [ %3202, %3204 ], [ %3202, %3201 ], [ 2147483647, %3195 ]
  %3210 = icmp slt i32 %3028, %70
  %3211 = icmp sgt i32 %3028, %72
  %3212 = or i1 %3210, %3211
  br i1 %3212, label %3367, label %3213

3213:                                             ; preds = %3206
  %3214 = sub nsw i32 %3027, %3029
  %3215 = icmp slt i32 %3214, %74
  %3216 = icmp sgt i32 %3214, %76
  %3217 = or i1 %3215, %3216
  br i1 %3217, label %3288, label %3218

3218:                                             ; preds = %3213
  %3219 = trunc i32 %3214 to i16
  %3220 = trunc i32 %3028 to i16
  %3221 = icmp eq i8* %13, null
  br i1 %3221, label %3222, label %3234

3222:                                             ; preds = %3218
  %3223 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3224 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3223, align 8
  %3225 = ashr i32 %3214, 3
  %3226 = mul nsw i32 %3225, %26
  %3227 = ashr i32 %3028, 3
  %3228 = add nsw i32 %3226, %3227
  %3229 = sext i32 %3228 to i64
  %3230 = getelementptr inbounds i8, i8* %36, i64 %3229
  %3231 = and i32 %3028, 7
  %3232 = and i32 %3214, 7
  %3233 = call i32 %3224(i8* %3230, i32 %26, i32 %3231, i32 %3232, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3246

3234:                                             ; preds = %3218
  %3235 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3236 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3235, align 8
  %3237 = ashr i32 %3214, 3
  %3238 = mul nsw i32 %3237, %26
  %3239 = ashr i32 %3028, 3
  %3240 = add nsw i32 %3238, %3239
  %3241 = sext i32 %3240 to i64
  %3242 = getelementptr inbounds i8, i8* %36, i64 %3241
  %3243 = and i32 %3028, 7
  %3244 = and i32 %3214, 7
  %3245 = call i32 %3236(i8* %3242, i32 %26, i32 %3243, i32 %3244, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3246

3246:                                             ; preds = %3234, %3222
  %3247 = phi i32 [ %3233, %3222 ], [ %3245, %3234 ]
  %3248 = sext i32 %3247 to i64
  %3249 = icmp eq i32** %10, null
  br i1 %3249, label %3277, label %3250

3250:                                             ; preds = %3246
  %3251 = sub i16 %3219, %38
  %3252 = sub i16 %3220, %40
  %3253 = icmp eq i16 %3251, 0
  %3254 = icmp eq i16 %3252, 0
  %3255 = xor i1 %3254, true
  %3256 = zext i1 %3255 to i64
  %3257 = select i1 %3254, i64 2, i64 3
  %3258 = select i1 %3253, i64 %3256, i64 %3257
  %3259 = getelementptr inbounds i32, i32* %9, i64 %3258
  %3260 = load i32, i32* %3259, align 4
  %3261 = load i32*, i32** %10, align 8
  %3262 = sext i16 %3251 to i64
  %3263 = getelementptr inbounds i32, i32* %3261, i64 %3262
  %3264 = load i32, i32* %3263, align 4
  %3265 = add nsw i32 %3264, %3260
  %3266 = getelementptr inbounds i32*, i32** %10, i64 1
  %3267 = load i32*, i32** %3266, align 8
  %3268 = sext i16 %3252 to i64
  %3269 = getelementptr inbounds i32, i32* %3267, i64 %3268
  %3270 = load i32, i32* %3269, align 4
  %3271 = add nsw i32 %3265, %3270
  %3272 = sext i32 %3271 to i64
  %3273 = sext i32 %4 to i64
  %3274 = mul nsw i64 %3272, %3273
  %3275 = add nsw i64 %3274, 8192
  %3276 = lshr i64 %3275, 14
  br label %3277

3277:                                             ; preds = %3246, %3250
  %3278 = phi i64 [ %3276, %3250 ], [ 0, %3246 ]
  %3279 = shl i64 %3278, 32
  %3280 = ashr exact i64 %3279, 32
  %3281 = add nsw i64 %3280, %3248
  %3282 = icmp sgt i64 %3281, 2147483646
  br i1 %3282, label %3288, label %3283

3283:                                             ; preds = %3277
  %3284 = trunc i64 %3281 to i32
  %3285 = icmp ugt i32 %3207, %3284
  br i1 %3285, label %3286, label %3288

3286:                                             ; preds = %3283
  store i32 %3247, i32* %11, align 4
  %3287 = load i32, i32* %18, align 4
  store i32 %3287, i32* %12, align 4
  br label %3288

3288:                                             ; preds = %3286, %3283, %3277, %3213
  %3289 = phi i32 [ %3207, %3277 ], [ %3207, %3283 ], [ %3284, %3286 ], [ %3207, %3213 ]
  %3290 = phi i32 [ %3027, %3277 ], [ %3027, %3283 ], [ %3214, %3286 ], [ %3027, %3213 ]
  %3291 = phi i32 [ %3208, %3277 ], [ %3208, %3283 ], [ %3028, %3286 ], [ %3208, %3213 ]
  %3292 = phi i32 [ 2147483647, %3277 ], [ %3284, %3283 ], [ %3284, %3286 ], [ 2147483647, %3213 ]
  %3293 = add nsw i32 %3029, %3027
  %3294 = icmp slt i32 %3293, %74
  %3295 = icmp sgt i32 %3293, %76
  %3296 = or i1 %3294, %3295
  br i1 %3296, label %3367, label %3297

3297:                                             ; preds = %3288
  %3298 = trunc i32 %3293 to i16
  %3299 = trunc i32 %3028 to i16
  %3300 = icmp eq i8* %13, null
  br i1 %3300, label %3301, label %3313

3301:                                             ; preds = %3297
  %3302 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3303 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3302, align 8
  %3304 = ashr i32 %3293, 3
  %3305 = mul nsw i32 %3304, %26
  %3306 = ashr i32 %3028, 3
  %3307 = add nsw i32 %3305, %3306
  %3308 = sext i32 %3307 to i64
  %3309 = getelementptr inbounds i8, i8* %36, i64 %3308
  %3310 = and i32 %3028, 7
  %3311 = and i32 %3293, 7
  %3312 = call i32 %3303(i8* %3309, i32 %26, i32 %3310, i32 %3311, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3325

3313:                                             ; preds = %3297
  %3314 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3315 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3314, align 8
  %3316 = ashr i32 %3293, 3
  %3317 = mul nsw i32 %3316, %26
  %3318 = ashr i32 %3028, 3
  %3319 = add nsw i32 %3317, %3318
  %3320 = sext i32 %3319 to i64
  %3321 = getelementptr inbounds i8, i8* %36, i64 %3320
  %3322 = and i32 %3028, 7
  %3323 = and i32 %3293, 7
  %3324 = call i32 %3315(i8* %3321, i32 %26, i32 %3322, i32 %3323, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3325

3325:                                             ; preds = %3313, %3301
  %3326 = phi i32 [ %3312, %3301 ], [ %3324, %3313 ]
  %3327 = sext i32 %3326 to i64
  %3328 = icmp eq i32** %10, null
  br i1 %3328, label %3356, label %3329

3329:                                             ; preds = %3325
  %3330 = sub i16 %3298, %38
  %3331 = sub i16 %3299, %40
  %3332 = icmp eq i16 %3330, 0
  %3333 = icmp eq i16 %3331, 0
  %3334 = xor i1 %3333, true
  %3335 = zext i1 %3334 to i64
  %3336 = select i1 %3333, i64 2, i64 3
  %3337 = select i1 %3332, i64 %3335, i64 %3336
  %3338 = getelementptr inbounds i32, i32* %9, i64 %3337
  %3339 = load i32, i32* %3338, align 4
  %3340 = load i32*, i32** %10, align 8
  %3341 = sext i16 %3330 to i64
  %3342 = getelementptr inbounds i32, i32* %3340, i64 %3341
  %3343 = load i32, i32* %3342, align 4
  %3344 = add nsw i32 %3343, %3339
  %3345 = getelementptr inbounds i32*, i32** %10, i64 1
  %3346 = load i32*, i32** %3345, align 8
  %3347 = sext i16 %3331 to i64
  %3348 = getelementptr inbounds i32, i32* %3346, i64 %3347
  %3349 = load i32, i32* %3348, align 4
  %3350 = add nsw i32 %3344, %3349
  %3351 = sext i32 %3350 to i64
  %3352 = sext i32 %4 to i64
  %3353 = mul nsw i64 %3351, %3352
  %3354 = add nsw i64 %3353, 8192
  %3355 = lshr i64 %3354, 14
  br label %3356

3356:                                             ; preds = %3325, %3329
  %3357 = phi i64 [ %3355, %3329 ], [ 0, %3325 ]
  %3358 = shl i64 %3357, 32
  %3359 = ashr exact i64 %3358, 32
  %3360 = add nsw i64 %3359, %3327
  %3361 = icmp sgt i64 %3360, 2147483646
  br i1 %3361, label %3367, label %3362

3362:                                             ; preds = %3356
  %3363 = trunc i64 %3360 to i32
  %3364 = icmp ugt i32 %3289, %3363
  br i1 %3364, label %3365, label %3367

3365:                                             ; preds = %3362
  store i32 %3326, i32* %11, align 4
  %3366 = load i32, i32* %18, align 4
  store i32 %3366, i32* %12, align 4
  br label %3367

3367:                                             ; preds = %3365, %3362, %3356, %3206, %3288
  %3368 = phi i32 [ %3292, %3288 ], [ 2147483647, %3206 ], [ %3292, %3356 ], [ %3292, %3362 ], [ %3292, %3365 ]
  %3369 = phi i32 [ %3289, %3288 ], [ %3207, %3206 ], [ %3289, %3356 ], [ %3289, %3362 ], [ %3363, %3365 ]
  %3370 = phi i32 [ %3290, %3288 ], [ %3027, %3206 ], [ %3290, %3356 ], [ %3290, %3362 ], [ %3293, %3365 ]
  %3371 = phi i32 [ %3291, %3288 ], [ %3208, %3206 ], [ %3291, %3356 ], [ %3291, %3362 ], [ %3028, %3365 ]
  %3372 = phi i32 [ 2147483647, %3288 ], [ 2147483647, %3206 ], [ 2147483647, %3356 ], [ %3363, %3362 ], [ %3363, %3365 ]
  %3373 = icmp uge i32 %3129, %3209
  %3374 = zext i1 %3373 to i32
  %3375 = icmp ult i32 %3368, %3372
  %3376 = select i1 %3375, i32 0, i32 2
  %3377 = or i32 %3376, %3374
  switch i32 %3377, label %3682 [
    i32 0, label %3378
    i32 1, label %3454
    i32 2, label %3530
    i32 3, label %3606
  ]

3378:                                             ; preds = %3367
  br i1 %3051, label %3683, label %3379

3379:                                             ; preds = %3378
  %3380 = sub nsw i32 %3027, %3029
  %3381 = icmp slt i32 %3380, %74
  %3382 = icmp sgt i32 %3380, %76
  %3383 = or i1 %3381, %3382
  br i1 %3383, label %3683, label %3384

3384:                                             ; preds = %3379
  %3385 = trunc i32 %3380 to i16
  %3386 = trunc i32 %3048 to i16
  %3387 = icmp eq i8* %13, null
  br i1 %3387, label %3388, label %3400

3388:                                             ; preds = %3384
  %3389 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3390 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3389, align 8
  %3391 = ashr i32 %3380, 3
  %3392 = mul nsw i32 %3391, %26
  %3393 = ashr i32 %3048, 3
  %3394 = add nsw i32 %3392, %3393
  %3395 = sext i32 %3394 to i64
  %3396 = getelementptr inbounds i8, i8* %36, i64 %3395
  %3397 = and i32 %3048, 7
  %3398 = and i32 %3380, 7
  %3399 = call i32 %3390(i8* %3396, i32 %26, i32 %3397, i32 %3398, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3412

3400:                                             ; preds = %3384
  %3401 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3402 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3401, align 8
  %3403 = ashr i32 %3380, 3
  %3404 = mul nsw i32 %3403, %26
  %3405 = ashr i32 %3048, 3
  %3406 = add nsw i32 %3404, %3405
  %3407 = sext i32 %3406 to i64
  %3408 = getelementptr inbounds i8, i8* %36, i64 %3407
  %3409 = and i32 %3048, 7
  %3410 = and i32 %3380, 7
  %3411 = call i32 %3402(i8* %3408, i32 %26, i32 %3409, i32 %3410, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3412

3412:                                             ; preds = %3400, %3388
  %3413 = phi i32 [ %3399, %3388 ], [ %3411, %3400 ]
  %3414 = sext i32 %3413 to i64
  %3415 = icmp eq i32** %10, null
  br i1 %3415, label %3443, label %3416

3416:                                             ; preds = %3412
  %3417 = sub i16 %3385, %38
  %3418 = sub i16 %3386, %40
  %3419 = icmp eq i16 %3417, 0
  %3420 = icmp eq i16 %3418, 0
  %3421 = xor i1 %3420, true
  %3422 = zext i1 %3421 to i64
  %3423 = select i1 %3420, i64 2, i64 3
  %3424 = select i1 %3419, i64 %3422, i64 %3423
  %3425 = getelementptr inbounds i32, i32* %9, i64 %3424
  %3426 = load i32, i32* %3425, align 4
  %3427 = load i32*, i32** %10, align 8
  %3428 = sext i16 %3417 to i64
  %3429 = getelementptr inbounds i32, i32* %3427, i64 %3428
  %3430 = load i32, i32* %3429, align 4
  %3431 = add nsw i32 %3430, %3426
  %3432 = getelementptr inbounds i32*, i32** %10, i64 1
  %3433 = load i32*, i32** %3432, align 8
  %3434 = sext i16 %3418 to i64
  %3435 = getelementptr inbounds i32, i32* %3433, i64 %3434
  %3436 = load i32, i32* %3435, align 4
  %3437 = add nsw i32 %3431, %3436
  %3438 = sext i32 %3437 to i64
  %3439 = sext i32 %4 to i64
  %3440 = mul nsw i64 %3438, %3439
  %3441 = add nsw i64 %3440, 8192
  %3442 = lshr i64 %3441, 14
  br label %3443

3443:                                             ; preds = %3412, %3416
  %3444 = phi i64 [ %3442, %3416 ], [ 0, %3412 ]
  %3445 = shl i64 %3444, 32
  %3446 = ashr exact i64 %3445, 32
  %3447 = add nsw i64 %3446, %3414
  %3448 = icmp sgt i64 %3447, 2147483646
  br i1 %3448, label %3683, label %3449

3449:                                             ; preds = %3443
  %3450 = trunc i64 %3447 to i32
  %3451 = icmp ugt i32 %3369, %3450
  br i1 %3451, label %3452, label %3683

3452:                                             ; preds = %3449
  store i32 %3413, i32* %11, align 4
  %3453 = load i32, i32* %18, align 4
  store i32 %3453, i32* %12, align 4
  br label %3683

3454:                                             ; preds = %3367
  br i1 %3133, label %3683, label %3455

3455:                                             ; preds = %3454
  %3456 = sub nsw i32 %3027, %3029
  %3457 = icmp slt i32 %3456, %74
  %3458 = icmp sgt i32 %3456, %76
  %3459 = or i1 %3457, %3458
  br i1 %3459, label %3683, label %3460

3460:                                             ; preds = %3455
  %3461 = trunc i32 %3456 to i16
  %3462 = trunc i32 %3130 to i16
  %3463 = icmp eq i8* %13, null
  br i1 %3463, label %3464, label %3476

3464:                                             ; preds = %3460
  %3465 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3466 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3465, align 8
  %3467 = ashr i32 %3456, 3
  %3468 = mul nsw i32 %3467, %26
  %3469 = ashr i32 %3130, 3
  %3470 = add nsw i32 %3468, %3469
  %3471 = sext i32 %3470 to i64
  %3472 = getelementptr inbounds i8, i8* %36, i64 %3471
  %3473 = and i32 %3130, 7
  %3474 = and i32 %3456, 7
  %3475 = call i32 %3466(i8* %3472, i32 %26, i32 %3473, i32 %3474, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3488

3476:                                             ; preds = %3460
  %3477 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3478 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3477, align 8
  %3479 = ashr i32 %3456, 3
  %3480 = mul nsw i32 %3479, %26
  %3481 = ashr i32 %3130, 3
  %3482 = add nsw i32 %3480, %3481
  %3483 = sext i32 %3482 to i64
  %3484 = getelementptr inbounds i8, i8* %36, i64 %3483
  %3485 = and i32 %3130, 7
  %3486 = and i32 %3456, 7
  %3487 = call i32 %3478(i8* %3484, i32 %26, i32 %3485, i32 %3486, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3488

3488:                                             ; preds = %3476, %3464
  %3489 = phi i32 [ %3475, %3464 ], [ %3487, %3476 ]
  %3490 = sext i32 %3489 to i64
  %3491 = icmp eq i32** %10, null
  br i1 %3491, label %3519, label %3492

3492:                                             ; preds = %3488
  %3493 = sub i16 %3461, %38
  %3494 = sub i16 %3462, %40
  %3495 = icmp eq i16 %3493, 0
  %3496 = icmp eq i16 %3494, 0
  %3497 = xor i1 %3496, true
  %3498 = zext i1 %3497 to i64
  %3499 = select i1 %3496, i64 2, i64 3
  %3500 = select i1 %3495, i64 %3498, i64 %3499
  %3501 = getelementptr inbounds i32, i32* %9, i64 %3500
  %3502 = load i32, i32* %3501, align 4
  %3503 = load i32*, i32** %10, align 8
  %3504 = sext i16 %3493 to i64
  %3505 = getelementptr inbounds i32, i32* %3503, i64 %3504
  %3506 = load i32, i32* %3505, align 4
  %3507 = add nsw i32 %3506, %3502
  %3508 = getelementptr inbounds i32*, i32** %10, i64 1
  %3509 = load i32*, i32** %3508, align 8
  %3510 = sext i16 %3494 to i64
  %3511 = getelementptr inbounds i32, i32* %3509, i64 %3510
  %3512 = load i32, i32* %3511, align 4
  %3513 = add nsw i32 %3507, %3512
  %3514 = sext i32 %3513 to i64
  %3515 = sext i32 %4 to i64
  %3516 = mul nsw i64 %3514, %3515
  %3517 = add nsw i64 %3516, 8192
  %3518 = lshr i64 %3517, 14
  br label %3519

3519:                                             ; preds = %3488, %3492
  %3520 = phi i64 [ %3518, %3492 ], [ 0, %3488 ]
  %3521 = shl i64 %3520, 32
  %3522 = ashr exact i64 %3521, 32
  %3523 = add nsw i64 %3522, %3490
  %3524 = icmp sgt i64 %3523, 2147483646
  br i1 %3524, label %3683, label %3525

3525:                                             ; preds = %3519
  %3526 = trunc i64 %3523 to i32
  %3527 = icmp ugt i32 %3369, %3526
  br i1 %3527, label %3528, label %3683

3528:                                             ; preds = %3525
  store i32 %3489, i32* %11, align 4
  %3529 = load i32, i32* %18, align 4
  store i32 %3529, i32* %12, align 4
  br label %3683

3530:                                             ; preds = %3367
  br i1 %3051, label %3683, label %3531

3531:                                             ; preds = %3530
  %3532 = add nsw i32 %3029, %3027
  %3533 = icmp slt i32 %3532, %74
  %3534 = icmp sgt i32 %3532, %76
  %3535 = or i1 %3533, %3534
  br i1 %3535, label %3683, label %3536

3536:                                             ; preds = %3531
  %3537 = trunc i32 %3532 to i16
  %3538 = trunc i32 %3048 to i16
  %3539 = icmp eq i8* %13, null
  br i1 %3539, label %3540, label %3552

3540:                                             ; preds = %3536
  %3541 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3542 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3541, align 8
  %3543 = ashr i32 %3532, 3
  %3544 = mul nsw i32 %3543, %26
  %3545 = ashr i32 %3048, 3
  %3546 = add nsw i32 %3544, %3545
  %3547 = sext i32 %3546 to i64
  %3548 = getelementptr inbounds i8, i8* %36, i64 %3547
  %3549 = and i32 %3048, 7
  %3550 = and i32 %3532, 7
  %3551 = call i32 %3542(i8* %3548, i32 %26, i32 %3549, i32 %3550, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3564

3552:                                             ; preds = %3536
  %3553 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3554 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3553, align 8
  %3555 = ashr i32 %3532, 3
  %3556 = mul nsw i32 %3555, %26
  %3557 = ashr i32 %3048, 3
  %3558 = add nsw i32 %3556, %3557
  %3559 = sext i32 %3558 to i64
  %3560 = getelementptr inbounds i8, i8* %36, i64 %3559
  %3561 = and i32 %3048, 7
  %3562 = and i32 %3532, 7
  %3563 = call i32 %3554(i8* %3560, i32 %26, i32 %3561, i32 %3562, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3564

3564:                                             ; preds = %3552, %3540
  %3565 = phi i32 [ %3551, %3540 ], [ %3563, %3552 ]
  %3566 = sext i32 %3565 to i64
  %3567 = icmp eq i32** %10, null
  br i1 %3567, label %3595, label %3568

3568:                                             ; preds = %3564
  %3569 = sub i16 %3537, %38
  %3570 = sub i16 %3538, %40
  %3571 = icmp eq i16 %3569, 0
  %3572 = icmp eq i16 %3570, 0
  %3573 = xor i1 %3572, true
  %3574 = zext i1 %3573 to i64
  %3575 = select i1 %3572, i64 2, i64 3
  %3576 = select i1 %3571, i64 %3574, i64 %3575
  %3577 = getelementptr inbounds i32, i32* %9, i64 %3576
  %3578 = load i32, i32* %3577, align 4
  %3579 = load i32*, i32** %10, align 8
  %3580 = sext i16 %3569 to i64
  %3581 = getelementptr inbounds i32, i32* %3579, i64 %3580
  %3582 = load i32, i32* %3581, align 4
  %3583 = add nsw i32 %3582, %3578
  %3584 = getelementptr inbounds i32*, i32** %10, i64 1
  %3585 = load i32*, i32** %3584, align 8
  %3586 = sext i16 %3570 to i64
  %3587 = getelementptr inbounds i32, i32* %3585, i64 %3586
  %3588 = load i32, i32* %3587, align 4
  %3589 = add nsw i32 %3583, %3588
  %3590 = sext i32 %3589 to i64
  %3591 = sext i32 %4 to i64
  %3592 = mul nsw i64 %3590, %3591
  %3593 = add nsw i64 %3592, 8192
  %3594 = lshr i64 %3593, 14
  br label %3595

3595:                                             ; preds = %3564, %3568
  %3596 = phi i64 [ %3594, %3568 ], [ 0, %3564 ]
  %3597 = shl i64 %3596, 32
  %3598 = ashr exact i64 %3597, 32
  %3599 = add nsw i64 %3598, %3566
  %3600 = icmp sgt i64 %3599, 2147483646
  br i1 %3600, label %3683, label %3601

3601:                                             ; preds = %3595
  %3602 = trunc i64 %3599 to i32
  %3603 = icmp ugt i32 %3369, %3602
  br i1 %3603, label %3604, label %3683

3604:                                             ; preds = %3601
  store i32 %3565, i32* %11, align 4
  %3605 = load i32, i32* %18, align 4
  store i32 %3605, i32* %12, align 4
  br label %3683

3606:                                             ; preds = %3367
  br i1 %3133, label %3683, label %3607

3607:                                             ; preds = %3606
  %3608 = add nsw i32 %3029, %3027
  %3609 = icmp slt i32 %3608, %74
  %3610 = icmp sgt i32 %3608, %76
  %3611 = or i1 %3609, %3610
  br i1 %3611, label %3683, label %3612

3612:                                             ; preds = %3607
  %3613 = trunc i32 %3608 to i16
  %3614 = trunc i32 %3130 to i16
  %3615 = icmp eq i8* %13, null
  br i1 %3615, label %3616, label %3628

3616:                                             ; preds = %3612
  %3617 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3618 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3617, align 8
  %3619 = ashr i32 %3608, 3
  %3620 = mul nsw i32 %3619, %26
  %3621 = ashr i32 %3130, 3
  %3622 = add nsw i32 %3620, %3621
  %3623 = sext i32 %3622 to i64
  %3624 = getelementptr inbounds i8, i8* %36, i64 %3623
  %3625 = and i32 %3130, 7
  %3626 = and i32 %3608, 7
  %3627 = call i32 %3618(i8* %3624, i32 %26, i32 %3625, i32 %3626, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3640

3628:                                             ; preds = %3612
  %3629 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3630 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3629, align 8
  %3631 = ashr i32 %3608, 3
  %3632 = mul nsw i32 %3631, %26
  %3633 = ashr i32 %3130, 3
  %3634 = add nsw i32 %3632, %3633
  %3635 = sext i32 %3634 to i64
  %3636 = getelementptr inbounds i8, i8* %36, i64 %3635
  %3637 = and i32 %3130, 7
  %3638 = and i32 %3608, 7
  %3639 = call i32 %3630(i8* %3636, i32 %26, i32 %3637, i32 %3638, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3640

3640:                                             ; preds = %3628, %3616
  %3641 = phi i32 [ %3627, %3616 ], [ %3639, %3628 ]
  %3642 = sext i32 %3641 to i64
  %3643 = icmp eq i32** %10, null
  br i1 %3643, label %3671, label %3644

3644:                                             ; preds = %3640
  %3645 = sub i16 %3613, %38
  %3646 = sub i16 %3614, %40
  %3647 = icmp eq i16 %3645, 0
  %3648 = icmp eq i16 %3646, 0
  %3649 = xor i1 %3648, true
  %3650 = zext i1 %3649 to i64
  %3651 = select i1 %3648, i64 2, i64 3
  %3652 = select i1 %3647, i64 %3650, i64 %3651
  %3653 = getelementptr inbounds i32, i32* %9, i64 %3652
  %3654 = load i32, i32* %3653, align 4
  %3655 = load i32*, i32** %10, align 8
  %3656 = sext i16 %3645 to i64
  %3657 = getelementptr inbounds i32, i32* %3655, i64 %3656
  %3658 = load i32, i32* %3657, align 4
  %3659 = add nsw i32 %3658, %3654
  %3660 = getelementptr inbounds i32*, i32** %10, i64 1
  %3661 = load i32*, i32** %3660, align 8
  %3662 = sext i16 %3646 to i64
  %3663 = getelementptr inbounds i32, i32* %3661, i64 %3662
  %3664 = load i32, i32* %3663, align 4
  %3665 = add nsw i32 %3659, %3664
  %3666 = sext i32 %3665 to i64
  %3667 = sext i32 %4 to i64
  %3668 = mul nsw i64 %3666, %3667
  %3669 = add nsw i64 %3668, 8192
  %3670 = lshr i64 %3669, 14
  br label %3671

3671:                                             ; preds = %3640, %3644
  %3672 = phi i64 [ %3670, %3644 ], [ 0, %3640 ]
  %3673 = shl i64 %3672, 32
  %3674 = ashr exact i64 %3673, 32
  %3675 = add nsw i64 %3674, %3642
  %3676 = icmp sgt i64 %3675, 2147483646
  br i1 %3676, label %3683, label %3677

3677:                                             ; preds = %3671
  %3678 = trunc i64 %3675 to i32
  %3679 = icmp ugt i32 %3369, %3678
  br i1 %3679, label %3680, label %3683

3680:                                             ; preds = %3677
  store i32 %3641, i32* %11, align 4
  %3681 = load i32, i32* %18, align 4
  store i32 %3681, i32* %12, align 4
  br label %3683

3682:                                             ; preds = %3367
  unreachable

3683:                                             ; preds = %3680, %3677, %3671, %3604, %3601, %3595, %3528, %3525, %3519, %3452, %3449, %3443, %3607, %3606, %3531, %3530, %3455, %3454, %3379, %3378
  %3684 = phi i32 [ %3369, %3378 ], [ %3369, %3379 ], [ %3369, %3454 ], [ %3369, %3455 ], [ %3369, %3530 ], [ %3369, %3531 ], [ %3369, %3606 ], [ %3369, %3607 ], [ %3450, %3452 ], [ %3369, %3449 ], [ %3369, %3443 ], [ %3526, %3528 ], [ %3369, %3525 ], [ %3369, %3519 ], [ %3602, %3604 ], [ %3369, %3601 ], [ %3369, %3595 ], [ %3678, %3680 ], [ %3369, %3677 ], [ %3369, %3671 ]
  %3685 = phi i32 [ %3370, %3378 ], [ %3370, %3379 ], [ %3370, %3454 ], [ %3370, %3455 ], [ %3370, %3530 ], [ %3370, %3531 ], [ %3370, %3606 ], [ %3370, %3607 ], [ %3380, %3452 ], [ %3370, %3449 ], [ %3370, %3443 ], [ %3456, %3528 ], [ %3370, %3525 ], [ %3370, %3519 ], [ %3532, %3604 ], [ %3370, %3601 ], [ %3370, %3595 ], [ %3608, %3680 ], [ %3370, %3677 ], [ %3370, %3671 ]
  %3686 = phi i32 [ %3371, %3378 ], [ %3371, %3379 ], [ %3371, %3454 ], [ %3371, %3455 ], [ %3371, %3530 ], [ %3371, %3531 ], [ %3371, %3606 ], [ %3371, %3607 ], [ %3048, %3452 ], [ %3371, %3449 ], [ %3371, %3443 ], [ %3130, %3528 ], [ %3371, %3525 ], [ %3371, %3519 ], [ %3048, %3604 ], [ %3371, %3601 ], [ %3371, %3595 ], [ %3130, %3680 ], [ %3371, %3677 ], [ %3371, %3671 ]
  %3687 = icmp ugt i32 %7, 1
  br i1 %3687, label %3688, label %4486

3688:                                             ; preds = %3683
  %3689 = icmp ne i32 %3685, %3027
  %3690 = xor i1 %3689, true
  %3691 = icmp eq i32 %3686, %3028
  %3692 = or i1 %3691, %3690
  br i1 %3692, label %3855, label %3693

3693:                                             ; preds = %3688
  %3694 = sub nsw i32 %3685, %3027
  %3695 = sub nsw i32 %3686, %3028
  %3696 = shl nsw i32 %3695, 1
  %3697 = add nsw i32 %3696, %3028
  %3698 = icmp slt i32 %3697, %70
  %3699 = icmp sgt i32 %3697, %72
  %3700 = or i1 %3698, %3699
  %3701 = icmp slt i32 %3685, %74
  %3702 = or i1 %3701, %3700
  %3703 = icmp sgt i32 %3685, %76
  %3704 = or i1 %3703, %3702
  br i1 %3704, label %3774, label %3705

3705:                                             ; preds = %3693
  %3706 = trunc i32 %3685 to i16
  %3707 = trunc i32 %3697 to i16
  %3708 = icmp eq i8* %13, null
  br i1 %3708, label %3709, label %3721

3709:                                             ; preds = %3705
  %3710 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3711 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3710, align 8
  %3712 = ashr i32 %3685, 3
  %3713 = mul nsw i32 %3712, %26
  %3714 = ashr i32 %3697, 3
  %3715 = add nsw i32 %3714, %3713
  %3716 = sext i32 %3715 to i64
  %3717 = getelementptr inbounds i8, i8* %36, i64 %3716
  %3718 = and i32 %3697, 7
  %3719 = and i32 %3685, 7
  %3720 = call i32 %3711(i8* %3717, i32 %26, i32 %3718, i32 %3719, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3733

3721:                                             ; preds = %3705
  %3722 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3723 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3722, align 8
  %3724 = ashr i32 %3685, 3
  %3725 = mul nsw i32 %3724, %26
  %3726 = ashr i32 %3697, 3
  %3727 = add nsw i32 %3726, %3725
  %3728 = sext i32 %3727 to i64
  %3729 = getelementptr inbounds i8, i8* %36, i64 %3728
  %3730 = and i32 %3697, 7
  %3731 = and i32 %3685, 7
  %3732 = call i32 %3723(i8* %3729, i32 %26, i32 %3730, i32 %3731, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3733

3733:                                             ; preds = %3721, %3709
  %3734 = phi i32 [ %3720, %3709 ], [ %3732, %3721 ]
  %3735 = sext i32 %3734 to i64
  %3736 = icmp eq i32** %10, null
  br i1 %3736, label %3765, label %3737

3737:                                             ; preds = %3733
  %3738 = sub i16 %3706, %38
  %3739 = sub i16 %3707, %40
  %3740 = icmp eq i16 %3738, 0
  %3741 = icmp eq i16 %3739, 0
  %3742 = xor i1 %3741, true
  %3743 = zext i1 %3742 to i64
  %3744 = select i1 %3741, i64 2, i64 3
  %3745 = select i1 %3740, i64 %3743, i64 %3744
  %3746 = getelementptr inbounds i32, i32* %9, i64 %3745
  %3747 = load i32, i32* %3746, align 4
  %3748 = load i32*, i32** %10, align 8
  %3749 = sext i16 %3738 to i64
  %3750 = getelementptr inbounds i32, i32* %3748, i64 %3749
  %3751 = load i32, i32* %3750, align 4
  %3752 = add nsw i32 %3751, %3747
  %3753 = getelementptr inbounds i32*, i32** %10, i64 1
  %3754 = load i32*, i32** %3753, align 8
  %3755 = sext i16 %3739 to i64
  %3756 = getelementptr inbounds i32, i32* %3754, i64 %3755
  %3757 = load i32, i32* %3756, align 4
  %3758 = add nsw i32 %3752, %3757
  %3759 = sext i32 %3758 to i64
  %3760 = sext i32 %4 to i64
  %3761 = shl nsw i64 %3760, 18
  %3762 = mul i64 %3761, %3759
  %3763 = add i64 %3762, 2147483648
  %3764 = ashr i64 %3763, 32
  br label %3765

3765:                                             ; preds = %3733, %3737
  %3766 = phi i64 [ %3764, %3737 ], [ 0, %3733 ]
  %3767 = add nsw i64 %3766, %3735
  %3768 = icmp sgt i64 %3767, 2147483646
  br i1 %3768, label %3774, label %3769

3769:                                             ; preds = %3765
  %3770 = trunc i64 %3767 to i32
  %3771 = icmp ugt i32 %3684, %3770
  br i1 %3771, label %3772, label %3774

3772:                                             ; preds = %3769
  store i32 %3734, i32* %11, align 4
  %3773 = load i32, i32* %18, align 4
  store i32 %3773, i32* %12, align 4
  br label %3774

3774:                                             ; preds = %3772, %3769, %3765, %3693
  %3775 = phi i32 [ %3684, %3693 ], [ %3770, %3772 ], [ %3684, %3769 ], [ %3684, %3765 ]
  %3776 = phi i32 [ %3686, %3693 ], [ %3697, %3772 ], [ %3686, %3769 ], [ %3686, %3765 ]
  %3777 = icmp slt i32 %3686, %70
  %3778 = icmp sgt i32 %3686, %72
  %3779 = or i1 %3777, %3778
  br i1 %3779, label %4486, label %3780

3780:                                             ; preds = %3774
  %3781 = shl nsw i32 %3694, 1
  %3782 = add nsw i32 %3781, %3027
  %3783 = icmp slt i32 %3782, %74
  %3784 = icmp sgt i32 %3782, %76
  %3785 = or i1 %3783, %3784
  br i1 %3785, label %4486, label %3786

3786:                                             ; preds = %3780
  %3787 = trunc i32 %3782 to i16
  %3788 = trunc i32 %3686 to i16
  %3789 = icmp eq i8* %13, null
  br i1 %3789, label %3790, label %3802

3790:                                             ; preds = %3786
  %3791 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3792 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3791, align 8
  %3793 = ashr i32 %3782, 3
  %3794 = mul nsw i32 %3793, %26
  %3795 = ashr i32 %3686, 3
  %3796 = add nsw i32 %3794, %3795
  %3797 = sext i32 %3796 to i64
  %3798 = getelementptr inbounds i8, i8* %36, i64 %3797
  %3799 = and i32 %3686, 7
  %3800 = and i32 %3782, 7
  %3801 = call i32 %3792(i8* %3798, i32 %26, i32 %3799, i32 %3800, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3814

3802:                                             ; preds = %3786
  %3803 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3804 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3803, align 8
  %3805 = ashr i32 %3782, 3
  %3806 = mul nsw i32 %3805, %26
  %3807 = ashr i32 %3686, 3
  %3808 = add nsw i32 %3806, %3807
  %3809 = sext i32 %3808 to i64
  %3810 = getelementptr inbounds i8, i8* %36, i64 %3809
  %3811 = and i32 %3686, 7
  %3812 = and i32 %3782, 7
  %3813 = call i32 %3804(i8* %3810, i32 %26, i32 %3811, i32 %3812, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3814

3814:                                             ; preds = %3802, %3790
  %3815 = phi i32 [ %3801, %3790 ], [ %3813, %3802 ]
  %3816 = sext i32 %3815 to i64
  %3817 = icmp eq i32** %10, null
  br i1 %3817, label %3846, label %3818

3818:                                             ; preds = %3814
  %3819 = sub i16 %3787, %38
  %3820 = sub i16 %3788, %40
  %3821 = icmp eq i16 %3819, 0
  %3822 = icmp eq i16 %3820, 0
  %3823 = xor i1 %3822, true
  %3824 = zext i1 %3823 to i64
  %3825 = select i1 %3822, i64 2, i64 3
  %3826 = select i1 %3821, i64 %3824, i64 %3825
  %3827 = getelementptr inbounds i32, i32* %9, i64 %3826
  %3828 = load i32, i32* %3827, align 4
  %3829 = load i32*, i32** %10, align 8
  %3830 = sext i16 %3819 to i64
  %3831 = getelementptr inbounds i32, i32* %3829, i64 %3830
  %3832 = load i32, i32* %3831, align 4
  %3833 = add nsw i32 %3832, %3828
  %3834 = getelementptr inbounds i32*, i32** %10, i64 1
  %3835 = load i32*, i32** %3834, align 8
  %3836 = sext i16 %3820 to i64
  %3837 = getelementptr inbounds i32, i32* %3835, i64 %3836
  %3838 = load i32, i32* %3837, align 4
  %3839 = add nsw i32 %3833, %3838
  %3840 = sext i32 %3839 to i64
  %3841 = sext i32 %4 to i64
  %3842 = shl nsw i64 %3841, 18
  %3843 = mul i64 %3842, %3840
  %3844 = add i64 %3843, 2147483648
  %3845 = ashr i64 %3844, 32
  br label %3846

3846:                                             ; preds = %3814, %3818
  %3847 = phi i64 [ %3845, %3818 ], [ 0, %3814 ]
  %3848 = add nsw i64 %3847, %3816
  %3849 = icmp sgt i64 %3848, 2147483646
  br i1 %3849, label %4486, label %3850

3850:                                             ; preds = %3846
  %3851 = trunc i64 %3848 to i32
  %3852 = icmp ugt i32 %3775, %3851
  br i1 %3852, label %3853, label %4486

3853:                                             ; preds = %3850
  store i32 %3815, i32* %11, align 4
  %3854 = load i32, i32* %18, align 4
  store i32 %3854, i32* %12, align 4
  br label %4486

3855:                                             ; preds = %3688
  %3856 = or i1 %3689, %3691
  br i1 %3856, label %4174, label %3857

3857:                                             ; preds = %3855
  %3858 = sub nsw i32 %3686, %3028
  %3859 = shl nsw i32 %3858, 1
  %3860 = add nsw i32 %3859, %3028
  %3861 = icmp slt i32 %3860, %70
  %3862 = icmp sgt i32 %3860, %72
  %3863 = or i1 %3861, %3862
  br i1 %3863, label %4016, label %3864

3864:                                             ; preds = %3857
  %3865 = add nsw i32 %3029, %3027
  %3866 = icmp slt i32 %3865, %74
  %3867 = icmp sgt i32 %3865, %76
  %3868 = or i1 %3866, %3867
  br i1 %3868, label %3939, label %3869

3869:                                             ; preds = %3864
  %3870 = trunc i32 %3865 to i16
  %3871 = trunc i32 %3860 to i16
  %3872 = icmp eq i8* %13, null
  br i1 %3872, label %3873, label %3885

3873:                                             ; preds = %3869
  %3874 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3875 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3874, align 8
  %3876 = ashr i32 %3865, 3
  %3877 = mul nsw i32 %3876, %26
  %3878 = ashr i32 %3860, 3
  %3879 = add nsw i32 %3878, %3877
  %3880 = sext i32 %3879 to i64
  %3881 = getelementptr inbounds i8, i8* %36, i64 %3880
  %3882 = and i32 %3860, 7
  %3883 = and i32 %3865, 7
  %3884 = call i32 %3875(i8* %3881, i32 %26, i32 %3882, i32 %3883, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3897

3885:                                             ; preds = %3869
  %3886 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3887 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3886, align 8
  %3888 = ashr i32 %3865, 3
  %3889 = mul nsw i32 %3888, %26
  %3890 = ashr i32 %3860, 3
  %3891 = add nsw i32 %3890, %3889
  %3892 = sext i32 %3891 to i64
  %3893 = getelementptr inbounds i8, i8* %36, i64 %3892
  %3894 = and i32 %3860, 7
  %3895 = and i32 %3865, 7
  %3896 = call i32 %3887(i8* %3893, i32 %26, i32 %3894, i32 %3895, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3897

3897:                                             ; preds = %3885, %3873
  %3898 = phi i32 [ %3884, %3873 ], [ %3896, %3885 ]
  %3899 = sext i32 %3898 to i64
  %3900 = icmp eq i32** %10, null
  br i1 %3900, label %3928, label %3901

3901:                                             ; preds = %3897
  %3902 = sub i16 %3870, %38
  %3903 = sub i16 %3871, %40
  %3904 = icmp eq i16 %3902, 0
  %3905 = icmp eq i16 %3903, 0
  %3906 = xor i1 %3905, true
  %3907 = zext i1 %3906 to i64
  %3908 = select i1 %3905, i64 2, i64 3
  %3909 = select i1 %3904, i64 %3907, i64 %3908
  %3910 = getelementptr inbounds i32, i32* %9, i64 %3909
  %3911 = load i32, i32* %3910, align 4
  %3912 = load i32*, i32** %10, align 8
  %3913 = sext i16 %3902 to i64
  %3914 = getelementptr inbounds i32, i32* %3912, i64 %3913
  %3915 = load i32, i32* %3914, align 4
  %3916 = add nsw i32 %3915, %3911
  %3917 = getelementptr inbounds i32*, i32** %10, i64 1
  %3918 = load i32*, i32** %3917, align 8
  %3919 = sext i16 %3903 to i64
  %3920 = getelementptr inbounds i32, i32* %3918, i64 %3919
  %3921 = load i32, i32* %3920, align 4
  %3922 = add nsw i32 %3916, %3921
  %3923 = sext i32 %3922 to i64
  %3924 = sext i32 %4 to i64
  %3925 = mul nsw i64 %3923, %3924
  %3926 = add nsw i64 %3925, 8192
  %3927 = lshr i64 %3926, 14
  br label %3928

3928:                                             ; preds = %3897, %3901
  %3929 = phi i64 [ %3927, %3901 ], [ 0, %3897 ]
  %3930 = shl i64 %3929, 32
  %3931 = ashr exact i64 %3930, 32
  %3932 = add nsw i64 %3931, %3899
  %3933 = icmp sgt i64 %3932, 2147483646
  br i1 %3933, label %3939, label %3934

3934:                                             ; preds = %3928
  %3935 = trunc i64 %3932 to i32
  %3936 = icmp ugt i32 %3684, %3935
  br i1 %3936, label %3937, label %3939

3937:                                             ; preds = %3934
  store i32 %3898, i32* %11, align 4
  %3938 = load i32, i32* %18, align 4
  store i32 %3938, i32* %12, align 4
  br label %3939

3939:                                             ; preds = %3937, %3934, %3928, %3864
  %3940 = phi i32 [ %3684, %3928 ], [ %3684, %3934 ], [ %3935, %3937 ], [ %3684, %3864 ]
  %3941 = phi i32 [ %3027, %3928 ], [ %3027, %3934 ], [ %3865, %3937 ], [ %3027, %3864 ]
  %3942 = phi i32 [ %3686, %3928 ], [ %3686, %3934 ], [ %3860, %3937 ], [ %3686, %3864 ]
  %3943 = sub nsw i32 %3027, %3029
  %3944 = icmp slt i32 %3943, %74
  %3945 = icmp sgt i32 %3943, %76
  %3946 = or i1 %3944, %3945
  br i1 %3946, label %4016, label %3947

3947:                                             ; preds = %3939
  %3948 = trunc i32 %3943 to i16
  %3949 = trunc i32 %3860 to i16
  %3950 = icmp eq i8* %13, null
  br i1 %3950, label %3951, label %3963

3951:                                             ; preds = %3947
  %3952 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3953 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3952, align 8
  %3954 = ashr i32 %3943, 3
  %3955 = mul nsw i32 %3954, %26
  %3956 = ashr i32 %3860, 3
  %3957 = add nsw i32 %3956, %3955
  %3958 = sext i32 %3957 to i64
  %3959 = getelementptr inbounds i8, i8* %36, i64 %3958
  %3960 = and i32 %3860, 7
  %3961 = and i32 %3943, 7
  %3962 = call i32 %3953(i8* %3959, i32 %26, i32 %3960, i32 %3961, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3975

3963:                                             ; preds = %3947
  %3964 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3965 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3964, align 8
  %3966 = ashr i32 %3943, 3
  %3967 = mul nsw i32 %3966, %26
  %3968 = ashr i32 %3860, 3
  %3969 = add nsw i32 %3968, %3967
  %3970 = sext i32 %3969 to i64
  %3971 = getelementptr inbounds i8, i8* %36, i64 %3970
  %3972 = and i32 %3860, 7
  %3973 = and i32 %3943, 7
  %3974 = call i32 %3965(i8* %3971, i32 %26, i32 %3972, i32 %3973, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3975

3975:                                             ; preds = %3963, %3951
  %3976 = phi i32 [ %3962, %3951 ], [ %3974, %3963 ]
  %3977 = sext i32 %3976 to i64
  %3978 = icmp eq i32** %10, null
  br i1 %3978, label %4007, label %3979

3979:                                             ; preds = %3975
  %3980 = sub i16 %3948, %38
  %3981 = sub i16 %3949, %40
  %3982 = icmp eq i16 %3980, 0
  %3983 = icmp eq i16 %3981, 0
  %3984 = xor i1 %3983, true
  %3985 = zext i1 %3984 to i64
  %3986 = select i1 %3983, i64 2, i64 3
  %3987 = select i1 %3982, i64 %3985, i64 %3986
  %3988 = getelementptr inbounds i32, i32* %9, i64 %3987
  %3989 = load i32, i32* %3988, align 4
  %3990 = load i32*, i32** %10, align 8
  %3991 = sext i16 %3980 to i64
  %3992 = getelementptr inbounds i32, i32* %3990, i64 %3991
  %3993 = load i32, i32* %3992, align 4
  %3994 = add nsw i32 %3993, %3989
  %3995 = getelementptr inbounds i32*, i32** %10, i64 1
  %3996 = load i32*, i32** %3995, align 8
  %3997 = sext i16 %3981 to i64
  %3998 = getelementptr inbounds i32, i32* %3996, i64 %3997
  %3999 = load i32, i32* %3998, align 4
  %4000 = add nsw i32 %3994, %3999
  %4001 = sext i32 %4000 to i64
  %4002 = sext i32 %4 to i64
  %4003 = shl nsw i64 %4002, 18
  %4004 = mul i64 %4003, %4001
  %4005 = add i64 %4004, 2147483648
  %4006 = ashr i64 %4005, 32
  br label %4007

4007:                                             ; preds = %3975, %3979
  %4008 = phi i64 [ %4006, %3979 ], [ 0, %3975 ]
  %4009 = add nsw i64 %4008, %3977
  %4010 = icmp sgt i64 %4009, 2147483646
  br i1 %4010, label %4016, label %4011

4011:                                             ; preds = %4007
  %4012 = trunc i64 %4009 to i32
  %4013 = icmp ugt i32 %3940, %4012
  br i1 %4013, label %4014, label %4016

4014:                                             ; preds = %4011
  store i32 %3976, i32* %11, align 4
  %4015 = load i32, i32* %18, align 4
  store i32 %4015, i32* %12, align 4
  br label %4016

4016:                                             ; preds = %4014, %4011, %4007, %3857, %3939
  %4017 = phi i32 [ %3940, %3939 ], [ %3684, %3857 ], [ %4012, %4014 ], [ %3940, %4011 ], [ %3940, %4007 ]
  %4018 = phi i32 [ %3941, %3939 ], [ %3027, %3857 ], [ %3943, %4014 ], [ %3941, %4011 ], [ %3941, %4007 ]
  %4019 = phi i32 [ %3942, %3939 ], [ %3686, %3857 ], [ %3860, %4014 ], [ %3942, %4011 ], [ %3942, %4007 ]
  %4020 = icmp ult i32 %3377, 2
  %4021 = icmp slt i32 %3686, %70
  %4022 = icmp sgt i32 %3686, %72
  %4023 = or i1 %4021, %4022
  br i1 %4020, label %4024, label %4099

4024:                                             ; preds = %4016
  br i1 %4023, label %4486, label %4025

4025:                                             ; preds = %4024
  %4026 = add nsw i32 %3029, %3027
  %4027 = icmp slt i32 %4026, %74
  %4028 = icmp sgt i32 %4026, %76
  %4029 = or i1 %4027, %4028
  br i1 %4029, label %4486, label %4030

4030:                                             ; preds = %4025
  %4031 = trunc i32 %4026 to i16
  %4032 = trunc i32 %3686 to i16
  %4033 = icmp eq i8* %13, null
  br i1 %4033, label %4034, label %4046

4034:                                             ; preds = %4030
  %4035 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4036 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4035, align 8
  %4037 = ashr i32 %4026, 3
  %4038 = mul nsw i32 %4037, %26
  %4039 = ashr i32 %3686, 3
  %4040 = add nsw i32 %4039, %4038
  %4041 = sext i32 %4040 to i64
  %4042 = getelementptr inbounds i8, i8* %36, i64 %4041
  %4043 = and i32 %3686, 7
  %4044 = and i32 %4026, 7
  %4045 = call i32 %4036(i8* %4042, i32 %26, i32 %4043, i32 %4044, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4058

4046:                                             ; preds = %4030
  %4047 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4048 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4047, align 8
  %4049 = ashr i32 %4026, 3
  %4050 = mul nsw i32 %4049, %26
  %4051 = ashr i32 %3686, 3
  %4052 = add nsw i32 %4051, %4050
  %4053 = sext i32 %4052 to i64
  %4054 = getelementptr inbounds i8, i8* %36, i64 %4053
  %4055 = and i32 %3686, 7
  %4056 = and i32 %4026, 7
  %4057 = call i32 %4048(i8* %4054, i32 %26, i32 %4055, i32 %4056, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4058

4058:                                             ; preds = %4046, %4034
  %4059 = phi i32 [ %4045, %4034 ], [ %4057, %4046 ]
  %4060 = sext i32 %4059 to i64
  %4061 = icmp eq i32** %10, null
  br i1 %4061, label %4090, label %4062

4062:                                             ; preds = %4058
  %4063 = sub i16 %4031, %38
  %4064 = sub i16 %4032, %40
  %4065 = icmp eq i16 %4063, 0
  %4066 = icmp eq i16 %4064, 0
  %4067 = xor i1 %4066, true
  %4068 = zext i1 %4067 to i64
  %4069 = select i1 %4066, i64 2, i64 3
  %4070 = select i1 %4065, i64 %4068, i64 %4069
  %4071 = getelementptr inbounds i32, i32* %9, i64 %4070
  %4072 = load i32, i32* %4071, align 4
  %4073 = load i32*, i32** %10, align 8
  %4074 = sext i16 %4063 to i64
  %4075 = getelementptr inbounds i32, i32* %4073, i64 %4074
  %4076 = load i32, i32* %4075, align 4
  %4077 = add nsw i32 %4076, %4072
  %4078 = getelementptr inbounds i32*, i32** %10, i64 1
  %4079 = load i32*, i32** %4078, align 8
  %4080 = sext i16 %4064 to i64
  %4081 = getelementptr inbounds i32, i32* %4079, i64 %4080
  %4082 = load i32, i32* %4081, align 4
  %4083 = add nsw i32 %4077, %4082
  %4084 = sext i32 %4083 to i64
  %4085 = sext i32 %4 to i64
  %4086 = shl nsw i64 %4085, 18
  %4087 = mul i64 %4086, %4084
  %4088 = add i64 %4087, 2147483648
  %4089 = ashr i64 %4088, 32
  br label %4090

4090:                                             ; preds = %4058, %4062
  %4091 = phi i64 [ %4089, %4062 ], [ 0, %4058 ]
  %4092 = add nsw i64 %4091, %4060
  %4093 = icmp sgt i64 %4092, 2147483646
  br i1 %4093, label %4486, label %4094

4094:                                             ; preds = %4090
  %4095 = trunc i64 %4092 to i32
  %4096 = icmp ugt i32 %4017, %4095
  br i1 %4096, label %4097, label %4486

4097:                                             ; preds = %4094
  store i32 %4059, i32* %11, align 4
  %4098 = load i32, i32* %18, align 4
  store i32 %4098, i32* %12, align 4
  br label %4486

4099:                                             ; preds = %4016
  br i1 %4023, label %4486, label %4100

4100:                                             ; preds = %4099
  %4101 = sub nsw i32 %3027, %3029
  %4102 = icmp slt i32 %4101, %74
  %4103 = icmp sgt i32 %4101, %76
  %4104 = or i1 %4102, %4103
  br i1 %4104, label %4486, label %4105

4105:                                             ; preds = %4100
  %4106 = trunc i32 %4101 to i16
  %4107 = trunc i32 %3686 to i16
  %4108 = icmp eq i8* %13, null
  br i1 %4108, label %4109, label %4121

4109:                                             ; preds = %4105
  %4110 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4111 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4110, align 8
  %4112 = ashr i32 %4101, 3
  %4113 = mul nsw i32 %4112, %26
  %4114 = ashr i32 %3686, 3
  %4115 = add nsw i32 %4114, %4113
  %4116 = sext i32 %4115 to i64
  %4117 = getelementptr inbounds i8, i8* %36, i64 %4116
  %4118 = and i32 %3686, 7
  %4119 = and i32 %4101, 7
  %4120 = call i32 %4111(i8* %4117, i32 %26, i32 %4118, i32 %4119, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4133

4121:                                             ; preds = %4105
  %4122 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4123 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4122, align 8
  %4124 = ashr i32 %4101, 3
  %4125 = mul nsw i32 %4124, %26
  %4126 = ashr i32 %3686, 3
  %4127 = add nsw i32 %4126, %4125
  %4128 = sext i32 %4127 to i64
  %4129 = getelementptr inbounds i8, i8* %36, i64 %4128
  %4130 = and i32 %3686, 7
  %4131 = and i32 %4101, 7
  %4132 = call i32 %4123(i8* %4129, i32 %26, i32 %4130, i32 %4131, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4133

4133:                                             ; preds = %4121, %4109
  %4134 = phi i32 [ %4120, %4109 ], [ %4132, %4121 ]
  %4135 = sext i32 %4134 to i64
  %4136 = icmp eq i32** %10, null
  br i1 %4136, label %4165, label %4137

4137:                                             ; preds = %4133
  %4138 = sub i16 %4106, %38
  %4139 = sub i16 %4107, %40
  %4140 = icmp eq i16 %4138, 0
  %4141 = icmp eq i16 %4139, 0
  %4142 = xor i1 %4141, true
  %4143 = zext i1 %4142 to i64
  %4144 = select i1 %4141, i64 2, i64 3
  %4145 = select i1 %4140, i64 %4143, i64 %4144
  %4146 = getelementptr inbounds i32, i32* %9, i64 %4145
  %4147 = load i32, i32* %4146, align 4
  %4148 = load i32*, i32** %10, align 8
  %4149 = sext i16 %4138 to i64
  %4150 = getelementptr inbounds i32, i32* %4148, i64 %4149
  %4151 = load i32, i32* %4150, align 4
  %4152 = add nsw i32 %4151, %4147
  %4153 = getelementptr inbounds i32*, i32** %10, i64 1
  %4154 = load i32*, i32** %4153, align 8
  %4155 = sext i16 %4139 to i64
  %4156 = getelementptr inbounds i32, i32* %4154, i64 %4155
  %4157 = load i32, i32* %4156, align 4
  %4158 = add nsw i32 %4152, %4157
  %4159 = sext i32 %4158 to i64
  %4160 = sext i32 %4 to i64
  %4161 = shl nsw i64 %4160, 18
  %4162 = mul i64 %4161, %4159
  %4163 = add i64 %4162, 2147483648
  %4164 = ashr i64 %4163, 32
  br label %4165

4165:                                             ; preds = %4133, %4137
  %4166 = phi i64 [ %4164, %4137 ], [ 0, %4133 ]
  %4167 = add nsw i64 %4166, %4135
  %4168 = icmp sgt i64 %4167, 2147483646
  br i1 %4168, label %4486, label %4169

4169:                                             ; preds = %4165
  %4170 = trunc i64 %4167 to i32
  %4171 = icmp ugt i32 %4017, %4170
  br i1 %4171, label %4172, label %4486

4172:                                             ; preds = %4169
  store i32 %4134, i32* %11, align 4
  %4173 = load i32, i32* %18, align 4
  store i32 %4173, i32* %12, align 4
  br label %4486

4174:                                             ; preds = %3855
  %4175 = and i1 %3689, %3691
  br i1 %4175, label %4176, label %4486

4176:                                             ; preds = %4174
  %4177 = sub nsw i32 %3685, %3027
  br i1 %3133, label %4254, label %4178

4178:                                             ; preds = %4176
  %4179 = shl nsw i32 %4177, 1
  %4180 = add nsw i32 %4179, %3027
  %4181 = icmp slt i32 %4180, %74
  %4182 = icmp sgt i32 %4180, %76
  %4183 = or i1 %4181, %4182
  br i1 %4183, label %4254, label %4184

4184:                                             ; preds = %4178
  %4185 = trunc i32 %4180 to i16
  %4186 = trunc i32 %3130 to i16
  %4187 = icmp eq i8* %13, null
  br i1 %4187, label %4188, label %4200

4188:                                             ; preds = %4184
  %4189 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4190 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4189, align 8
  %4191 = ashr i32 %4180, 3
  %4192 = mul nsw i32 %4191, %26
  %4193 = ashr i32 %3130, 3
  %4194 = add nsw i32 %4192, %4193
  %4195 = sext i32 %4194 to i64
  %4196 = getelementptr inbounds i8, i8* %36, i64 %4195
  %4197 = and i32 %3130, 7
  %4198 = and i32 %4180, 7
  %4199 = call i32 %4190(i8* %4196, i32 %26, i32 %4197, i32 %4198, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4212

4200:                                             ; preds = %4184
  %4201 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4202 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4201, align 8
  %4203 = ashr i32 %4180, 3
  %4204 = mul nsw i32 %4203, %26
  %4205 = ashr i32 %3130, 3
  %4206 = add nsw i32 %4204, %4205
  %4207 = sext i32 %4206 to i64
  %4208 = getelementptr inbounds i8, i8* %36, i64 %4207
  %4209 = and i32 %3130, 7
  %4210 = and i32 %4180, 7
  %4211 = call i32 %4202(i8* %4208, i32 %26, i32 %4209, i32 %4210, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4212

4212:                                             ; preds = %4200, %4188
  %4213 = phi i32 [ %4199, %4188 ], [ %4211, %4200 ]
  %4214 = sext i32 %4213 to i64
  %4215 = icmp eq i32** %10, null
  br i1 %4215, label %4243, label %4216

4216:                                             ; preds = %4212
  %4217 = sub i16 %4185, %38
  %4218 = sub i16 %4186, %40
  %4219 = icmp eq i16 %4217, 0
  %4220 = icmp eq i16 %4218, 0
  %4221 = xor i1 %4220, true
  %4222 = zext i1 %4221 to i64
  %4223 = select i1 %4220, i64 2, i64 3
  %4224 = select i1 %4219, i64 %4222, i64 %4223
  %4225 = getelementptr inbounds i32, i32* %9, i64 %4224
  %4226 = load i32, i32* %4225, align 4
  %4227 = load i32*, i32** %10, align 8
  %4228 = sext i16 %4217 to i64
  %4229 = getelementptr inbounds i32, i32* %4227, i64 %4228
  %4230 = load i32, i32* %4229, align 4
  %4231 = add nsw i32 %4230, %4226
  %4232 = getelementptr inbounds i32*, i32** %10, i64 1
  %4233 = load i32*, i32** %4232, align 8
  %4234 = sext i16 %4218 to i64
  %4235 = getelementptr inbounds i32, i32* %4233, i64 %4234
  %4236 = load i32, i32* %4235, align 4
  %4237 = add nsw i32 %4231, %4236
  %4238 = sext i32 %4237 to i64
  %4239 = sext i32 %4 to i64
  %4240 = mul nsw i64 %4238, %4239
  %4241 = add nsw i64 %4240, 8192
  %4242 = lshr i64 %4241, 14
  br label %4243

4243:                                             ; preds = %4212, %4216
  %4244 = phi i64 [ %4242, %4216 ], [ 0, %4212 ]
  %4245 = shl i64 %4244, 32
  %4246 = ashr exact i64 %4245, 32
  %4247 = add nsw i64 %4246, %4214
  %4248 = icmp sgt i64 %4247, 2147483646
  br i1 %4248, label %4254, label %4249

4249:                                             ; preds = %4243
  %4250 = trunc i64 %4247 to i32
  %4251 = icmp ugt i32 %3684, %4250
  br i1 %4251, label %4252, label %4254

4252:                                             ; preds = %4249
  store i32 %4213, i32* %11, align 4
  %4253 = load i32, i32* %18, align 4
  store i32 %4253, i32* %12, align 4
  br label %4254

4254:                                             ; preds = %4252, %4249, %4243, %4178, %4176
  %4255 = phi i32 [ %3684, %4176 ], [ %3684, %4178 ], [ %4250, %4252 ], [ %3684, %4249 ], [ %3684, %4243 ]
  %4256 = phi i32 [ %3685, %4176 ], [ %3685, %4178 ], [ %4180, %4252 ], [ %3685, %4249 ], [ %3685, %4243 ]
  %4257 = phi i32 [ %3028, %4176 ], [ %3028, %4178 ], [ %3130, %4252 ], [ %3028, %4249 ], [ %3028, %4243 ]
  br i1 %3051, label %4333, label %4258

4258:                                             ; preds = %4254
  %4259 = shl nsw i32 %4177, 1
  %4260 = add nsw i32 %4259, %3027
  %4261 = icmp slt i32 %4260, %74
  %4262 = icmp sgt i32 %4260, %76
  %4263 = or i1 %4261, %4262
  br i1 %4263, label %4333, label %4264

4264:                                             ; preds = %4258
  %4265 = trunc i32 %4260 to i16
  %4266 = trunc i32 %3048 to i16
  %4267 = icmp eq i8* %13, null
  br i1 %4267, label %4268, label %4280

4268:                                             ; preds = %4264
  %4269 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4270 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4269, align 8
  %4271 = ashr i32 %4260, 3
  %4272 = mul nsw i32 %4271, %26
  %4273 = ashr i32 %3048, 3
  %4274 = add nsw i32 %4272, %4273
  %4275 = sext i32 %4274 to i64
  %4276 = getelementptr inbounds i8, i8* %36, i64 %4275
  %4277 = and i32 %3048, 7
  %4278 = and i32 %4260, 7
  %4279 = call i32 %4270(i8* %4276, i32 %26, i32 %4277, i32 %4278, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4292

4280:                                             ; preds = %4264
  %4281 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4282 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4281, align 8
  %4283 = ashr i32 %4260, 3
  %4284 = mul nsw i32 %4283, %26
  %4285 = ashr i32 %3048, 3
  %4286 = add nsw i32 %4284, %4285
  %4287 = sext i32 %4286 to i64
  %4288 = getelementptr inbounds i8, i8* %36, i64 %4287
  %4289 = and i32 %3048, 7
  %4290 = and i32 %4260, 7
  %4291 = call i32 %4282(i8* %4288, i32 %26, i32 %4289, i32 %4290, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4292

4292:                                             ; preds = %4280, %4268
  %4293 = phi i32 [ %4279, %4268 ], [ %4291, %4280 ]
  %4294 = sext i32 %4293 to i64
  %4295 = icmp eq i32** %10, null
  br i1 %4295, label %4324, label %4296

4296:                                             ; preds = %4292
  %4297 = sub i16 %4265, %38
  %4298 = sub i16 %4266, %40
  %4299 = icmp eq i16 %4297, 0
  %4300 = icmp eq i16 %4298, 0
  %4301 = xor i1 %4300, true
  %4302 = zext i1 %4301 to i64
  %4303 = select i1 %4300, i64 2, i64 3
  %4304 = select i1 %4299, i64 %4302, i64 %4303
  %4305 = getelementptr inbounds i32, i32* %9, i64 %4304
  %4306 = load i32, i32* %4305, align 4
  %4307 = load i32*, i32** %10, align 8
  %4308 = sext i16 %4297 to i64
  %4309 = getelementptr inbounds i32, i32* %4307, i64 %4308
  %4310 = load i32, i32* %4309, align 4
  %4311 = add nsw i32 %4310, %4306
  %4312 = getelementptr inbounds i32*, i32** %10, i64 1
  %4313 = load i32*, i32** %4312, align 8
  %4314 = sext i16 %4298 to i64
  %4315 = getelementptr inbounds i32, i32* %4313, i64 %4314
  %4316 = load i32, i32* %4315, align 4
  %4317 = add nsw i32 %4311, %4316
  %4318 = sext i32 %4317 to i64
  %4319 = sext i32 %4 to i64
  %4320 = shl nsw i64 %4319, 18
  %4321 = mul i64 %4320, %4318
  %4322 = add i64 %4321, 2147483648
  %4323 = ashr i64 %4322, 32
  br label %4324

4324:                                             ; preds = %4292, %4296
  %4325 = phi i64 [ %4323, %4296 ], [ 0, %4292 ]
  %4326 = add nsw i64 %4325, %4294
  %4327 = icmp sgt i64 %4326, 2147483646
  br i1 %4327, label %4333, label %4328

4328:                                             ; preds = %4324
  %4329 = trunc i64 %4326 to i32
  %4330 = icmp ugt i32 %4255, %4329
  br i1 %4330, label %4331, label %4333

4331:                                             ; preds = %4328
  store i32 %4293, i32* %11, align 4
  %4332 = load i32, i32* %18, align 4
  store i32 %4332, i32* %12, align 4
  br label %4333

4333:                                             ; preds = %4331, %4328, %4324, %4258, %4254
  %4334 = phi i32 [ %4255, %4254 ], [ %4255, %4258 ], [ %4329, %4331 ], [ %4255, %4328 ], [ %4255, %4324 ]
  %4335 = phi i32 [ %4256, %4254 ], [ %4256, %4258 ], [ %4260, %4331 ], [ %4256, %4328 ], [ %4256, %4324 ]
  %4336 = phi i32 [ %4257, %4254 ], [ %4257, %4258 ], [ %3048, %4331 ], [ %4257, %4328 ], [ %4257, %4324 ]
  switch i32 %3377, label %4485 [
    i32 0, label %4337
    i32 2, label %4337
    i32 1, label %4411
    i32 3, label %4411
  ]

4337:                                             ; preds = %4333, %4333
  %4338 = icmp slt i32 %3685, %74
  %4339 = or i1 %3133, %4338
  %4340 = icmp sgt i32 %3685, %76
  %4341 = or i1 %4340, %4339
  br i1 %4341, label %4486, label %4342

4342:                                             ; preds = %4337
  %4343 = trunc i32 %3685 to i16
  %4344 = trunc i32 %3130 to i16
  %4345 = icmp eq i8* %13, null
  br i1 %4345, label %4346, label %4358

4346:                                             ; preds = %4342
  %4347 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4348 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4347, align 8
  %4349 = ashr i32 %3685, 3
  %4350 = mul nsw i32 %4349, %26
  %4351 = ashr i32 %3130, 3
  %4352 = add nsw i32 %4350, %4351
  %4353 = sext i32 %4352 to i64
  %4354 = getelementptr inbounds i8, i8* %36, i64 %4353
  %4355 = and i32 %3130, 7
  %4356 = and i32 %3685, 7
  %4357 = call i32 %4348(i8* %4354, i32 %26, i32 %4355, i32 %4356, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4370

4358:                                             ; preds = %4342
  %4359 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4360 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4359, align 8
  %4361 = ashr i32 %3685, 3
  %4362 = mul nsw i32 %4361, %26
  %4363 = ashr i32 %3130, 3
  %4364 = add nsw i32 %4362, %4363
  %4365 = sext i32 %4364 to i64
  %4366 = getelementptr inbounds i8, i8* %36, i64 %4365
  %4367 = and i32 %3130, 7
  %4368 = and i32 %3685, 7
  %4369 = call i32 %4360(i8* %4366, i32 %26, i32 %4367, i32 %4368, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4370

4370:                                             ; preds = %4358, %4346
  %4371 = phi i32 [ %4357, %4346 ], [ %4369, %4358 ]
  %4372 = sext i32 %4371 to i64
  %4373 = icmp eq i32** %10, null
  br i1 %4373, label %4402, label %4374

4374:                                             ; preds = %4370
  %4375 = sub i16 %4343, %38
  %4376 = sub i16 %4344, %40
  %4377 = icmp eq i16 %4375, 0
  %4378 = icmp eq i16 %4376, 0
  %4379 = xor i1 %4378, true
  %4380 = zext i1 %4379 to i64
  %4381 = select i1 %4378, i64 2, i64 3
  %4382 = select i1 %4377, i64 %4380, i64 %4381
  %4383 = getelementptr inbounds i32, i32* %9, i64 %4382
  %4384 = load i32, i32* %4383, align 4
  %4385 = load i32*, i32** %10, align 8
  %4386 = sext i16 %4375 to i64
  %4387 = getelementptr inbounds i32, i32* %4385, i64 %4386
  %4388 = load i32, i32* %4387, align 4
  %4389 = add nsw i32 %4388, %4384
  %4390 = getelementptr inbounds i32*, i32** %10, i64 1
  %4391 = load i32*, i32** %4390, align 8
  %4392 = sext i16 %4376 to i64
  %4393 = getelementptr inbounds i32, i32* %4391, i64 %4392
  %4394 = load i32, i32* %4393, align 4
  %4395 = add nsw i32 %4389, %4394
  %4396 = sext i32 %4395 to i64
  %4397 = sext i32 %4 to i64
  %4398 = shl nsw i64 %4397, 18
  %4399 = mul i64 %4398, %4396
  %4400 = add i64 %4399, 2147483648
  %4401 = ashr i64 %4400, 32
  br label %4402

4402:                                             ; preds = %4370, %4374
  %4403 = phi i64 [ %4401, %4374 ], [ 0, %4370 ]
  %4404 = add nsw i64 %4403, %4372
  %4405 = icmp sgt i64 %4404, 2147483646
  br i1 %4405, label %4486, label %4406

4406:                                             ; preds = %4402
  %4407 = trunc i64 %4404 to i32
  %4408 = icmp ugt i32 %4334, %4407
  br i1 %4408, label %4409, label %4486

4409:                                             ; preds = %4406
  store i32 %4371, i32* %11, align 4
  %4410 = load i32, i32* %18, align 4
  store i32 %4410, i32* %12, align 4
  br label %4486

4411:                                             ; preds = %4333, %4333
  %4412 = icmp slt i32 %3685, %74
  %4413 = or i1 %3051, %4412
  %4414 = icmp sgt i32 %3685, %76
  %4415 = or i1 %4414, %4413
  br i1 %4415, label %4486, label %4416

4416:                                             ; preds = %4411
  %4417 = trunc i32 %3685 to i16
  %4418 = trunc i32 %3048 to i16
  %4419 = icmp eq i8* %13, null
  br i1 %4419, label %4420, label %4432

4420:                                             ; preds = %4416
  %4421 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4422 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4421, align 8
  %4423 = ashr i32 %3685, 3
  %4424 = mul nsw i32 %4423, %26
  %4425 = ashr i32 %3048, 3
  %4426 = add nsw i32 %4424, %4425
  %4427 = sext i32 %4426 to i64
  %4428 = getelementptr inbounds i8, i8* %36, i64 %4427
  %4429 = and i32 %3048, 7
  %4430 = and i32 %3685, 7
  %4431 = call i32 %4422(i8* %4428, i32 %26, i32 %4429, i32 %4430, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4444

4432:                                             ; preds = %4416
  %4433 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4434 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4433, align 8
  %4435 = ashr i32 %3685, 3
  %4436 = mul nsw i32 %4435, %26
  %4437 = ashr i32 %3048, 3
  %4438 = add nsw i32 %4436, %4437
  %4439 = sext i32 %4438 to i64
  %4440 = getelementptr inbounds i8, i8* %36, i64 %4439
  %4441 = and i32 %3048, 7
  %4442 = and i32 %3685, 7
  %4443 = call i32 %4434(i8* %4440, i32 %26, i32 %4441, i32 %4442, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4444

4444:                                             ; preds = %4432, %4420
  %4445 = phi i32 [ %4431, %4420 ], [ %4443, %4432 ]
  %4446 = sext i32 %4445 to i64
  %4447 = icmp eq i32** %10, null
  br i1 %4447, label %4476, label %4448

4448:                                             ; preds = %4444
  %4449 = sub i16 %4417, %38
  %4450 = sub i16 %4418, %40
  %4451 = icmp eq i16 %4449, 0
  %4452 = icmp eq i16 %4450, 0
  %4453 = xor i1 %4452, true
  %4454 = zext i1 %4453 to i64
  %4455 = select i1 %4452, i64 2, i64 3
  %4456 = select i1 %4451, i64 %4454, i64 %4455
  %4457 = getelementptr inbounds i32, i32* %9, i64 %4456
  %4458 = load i32, i32* %4457, align 4
  %4459 = load i32*, i32** %10, align 8
  %4460 = sext i16 %4449 to i64
  %4461 = getelementptr inbounds i32, i32* %4459, i64 %4460
  %4462 = load i32, i32* %4461, align 4
  %4463 = add nsw i32 %4462, %4458
  %4464 = getelementptr inbounds i32*, i32** %10, i64 1
  %4465 = load i32*, i32** %4464, align 8
  %4466 = sext i16 %4450 to i64
  %4467 = getelementptr inbounds i32, i32* %4465, i64 %4466
  %4468 = load i32, i32* %4467, align 4
  %4469 = add nsw i32 %4463, %4468
  %4470 = sext i32 %4469 to i64
  %4471 = sext i32 %4 to i64
  %4472 = shl nsw i64 %4471, 18
  %4473 = mul i64 %4472, %4470
  %4474 = add i64 %4473, 2147483648
  %4475 = ashr i64 %4474, 32
  br label %4476

4476:                                             ; preds = %4444, %4448
  %4477 = phi i64 [ %4475, %4448 ], [ 0, %4444 ]
  %4478 = add nsw i64 %4477, %4446
  %4479 = icmp sgt i64 %4478, 2147483646
  br i1 %4479, label %4486, label %4480

4480:                                             ; preds = %4476
  %4481 = trunc i64 %4478 to i32
  %4482 = icmp ugt i32 %4334, %4481
  br i1 %4482, label %4483, label %4486

4483:                                             ; preds = %4480
  store i32 %4445, i32* %11, align 4
  %4484 = load i32, i32* %18, align 4
  store i32 %4484, i32* %12, align 4
  br label %4486

4485:                                             ; preds = %4333
  unreachable

4486:                                             ; preds = %3031, %4483, %4480, %4476, %4409, %4406, %4402, %4172, %4169, %4165, %4097, %4094, %4090, %3853, %3850, %3846, %4174, %3780, %3774, %4025, %4024, %4100, %4099, %4337, %4411, %3025, %3683, %3038
  %4487 = phi i32 [ %3684, %3683 ], [ %3026, %3038 ], [ %3026, %3025 ], [ %3684, %4174 ], [ %3775, %3780 ], [ %3775, %3774 ], [ %4017, %4025 ], [ %4017, %4024 ], [ %4017, %4100 ], [ %4017, %4099 ], [ %4334, %4337 ], [ %4334, %4411 ], [ %3851, %3853 ], [ %3775, %3850 ], [ %3775, %3846 ], [ %4095, %4097 ], [ %4017, %4094 ], [ %4017, %4090 ], [ %4170, %4172 ], [ %4017, %4169 ], [ %4017, %4165 ], [ %4407, %4409 ], [ %4334, %4406 ], [ %4334, %4402 ], [ %4481, %4483 ], [ %4334, %4480 ], [ %4334, %4476 ], [ %3026, %3031 ]
  %4488 = phi i32 [ %3685, %3683 ], [ %3027, %3038 ], [ %3027, %3025 ], [ %3685, %4174 ], [ %3685, %3780 ], [ %3685, %3774 ], [ %4018, %4025 ], [ %4018, %4024 ], [ %4018, %4100 ], [ %4018, %4099 ], [ %4335, %4337 ], [ %4335, %4411 ], [ %3782, %3853 ], [ %3685, %3850 ], [ %3685, %3846 ], [ %4026, %4097 ], [ %4018, %4094 ], [ %4018, %4090 ], [ %4101, %4172 ], [ %4018, %4169 ], [ %4018, %4165 ], [ %3685, %4409 ], [ %4335, %4406 ], [ %4335, %4402 ], [ %3685, %4483 ], [ %4335, %4480 ], [ %4335, %4476 ], [ %3027, %3031 ]
  %4489 = phi i32 [ %3686, %3683 ], [ %3028, %3038 ], [ %3028, %3025 ], [ %3686, %4174 ], [ %3776, %3780 ], [ %3776, %3774 ], [ %4019, %4025 ], [ %4019, %4024 ], [ %4019, %4100 ], [ %4019, %4099 ], [ %4336, %4337 ], [ %4336, %4411 ], [ %3686, %3853 ], [ %3776, %3850 ], [ %3776, %3846 ], [ %3686, %4097 ], [ %4019, %4094 ], [ %4019, %4090 ], [ %3686, %4172 ], [ %4019, %4169 ], [ %4019, %4165 ], [ %3130, %4409 ], [ %4336, %4406 ], [ %4336, %4402 ], [ %3048, %4483 ], [ %4336, %4480 ], [ %4336, %4476 ], [ %3028, %3031 ]
  %4490 = trunc i32 %4488 to i16
  store i16 %4490, i16* %27, align 2
  %4491 = trunc i32 %4489 to i16
  store i16 %4491, i16* %31, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  ret i32 %4487
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_find_best_sub_pixel_tree_pruned(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* readonly, i32, i32, i32* readonly, i32* readonly, i32** readonly, i32*, i32*, i8*, i32, i32, i32) local_unnamed_addr #5 {
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %24 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 -1431655766, i32* %18, align 4
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = sext i16 %28 to i32
  %30 = mul nsw i32 %26, %29
  %31 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = add nsw i32 %30, %33
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = shl nsw i32 %29, 3
  %42 = shl nsw i32 %33, 3
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = shl nsw i32 %44, 3
  %46 = sext i16 %40 to i32
  %47 = add nsw i32 %46, -8184
  %48 = icmp sgt i32 %45, %47
  %49 = select i1 %48, i32 %45, i32 %47
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = shl nsw i32 %51, 3
  %53 = add nsw i32 %46, 8184
  %54 = icmp slt i32 %52, %53
  %55 = select i1 %54, i32 %52, i32 %53
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = shl nsw i32 %57, 3
  %59 = sext i16 %38 to i32
  %60 = add nsw i32 %59, -8184
  %61 = icmp sgt i32 %58, %60
  %62 = select i1 %61, i32 %58, i32 %60
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = shl nsw i32 %64, 3
  %66 = add nsw i32 %59, 8184
  %67 = icmp slt i32 %65, %66
  %68 = select i1 %67, i32 %65, i32 %66
  %69 = icmp sgt i32 %49, -16383
  %70 = select i1 %69, i32 %49, i32 -16383
  %71 = icmp slt i32 %55, 16382
  %72 = select i1 %71, i32 %55, i32 16382
  %73 = icmp sgt i32 %62, -16383
  %74 = select i1 %73, i32 %62, i32 -16383
  %75 = icmp slt i32 %68, 16382
  %76 = select i1 %75, i32 %68, i32 16382
  %77 = shl i16 %28, 3
  store i16 %77, i16* %27, align 2
  %78 = shl i16 %32, 3
  store i16 %78, i16* %31, align 2
  %79 = tail call fastcc i32 @setup_center_error(%struct.macroblockd* %23, %struct.mv* %1, %struct.mv* %2, i32 %4, %struct.vp9_variance_vtable* %5, i8* %20, i32 %22, i8* %36, i32 %26, i8* %13, i32 %14, i32 %15, i32 %34, i32* %9, i32** %10, i32* %12, i32* %11)
  %80 = icmp eq i32* %8, null
  br i1 %80, label %957, label %81

81:                                               ; preds = %17
  %82 = load i32, i32* %8, align 4
  %83 = icmp eq i32 %82, 2147483647
  br i1 %83, label %957, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds i32, i32* %8, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 2147483647
  br i1 %87, label %957, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i32, i32* %8, i64 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 2147483647
  br i1 %91, label %957, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds i32, i32* %8, i64 3
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 2147483647
  br i1 %95, label %957, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds i32, i32* %8, i64 4
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 2147483647
  br i1 %99, label %957, label %100

100:                                              ; preds = %96
  %101 = icmp sge i32 %86, %94
  %102 = zext i1 %101 to i32
  %103 = icmp slt i32 %90, %98
  %104 = select i1 %103, i32 0, i32 2
  %105 = or i32 %104, %102
  switch i32 %105, label %956 [
    i32 0, label %106
    i32 1, label %317
    i32 2, label %520
    i32 3, label %741
  ]

106:                                              ; preds = %100
  %107 = add nsw i32 %42, -4
  %108 = icmp slt i32 %107, %70
  %109 = icmp sgt i32 %107, %72
  %110 = or i1 %108, %109
  %111 = icmp slt i32 %41, %74
  %112 = or i1 %110, %111
  %113 = icmp sgt i32 %41, %76
  %114 = or i1 %112, %113
  br i1 %114, label %177, label %115

115:                                              ; preds = %106
  %116 = trunc i32 %41 to i16
  %117 = trunc i32 %107 to i16
  %118 = icmp eq i8* %13, null
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %121 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %120, align 8
  %122 = ashr i32 %107, 3
  %123 = add nsw i32 %122, %30
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %36, i64 %124
  %126 = call i32 %121(i8* %125, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %135

127:                                              ; preds = %115
  %128 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %129 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %128, align 8
  %130 = ashr i32 %107, 3
  %131 = add nsw i32 %130, %30
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %36, i64 %132
  %134 = call i32 %129(i8* %133, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %135

135:                                              ; preds = %127, %119
  %136 = phi i32 [ %126, %119 ], [ %134, %127 ]
  %137 = sext i32 %136 to i64
  %138 = icmp eq i32** %10, null
  br i1 %138, label %166, label %139

139:                                              ; preds = %135
  %140 = sub i16 %116, %38
  %141 = sub i16 %117, %40
  %142 = icmp eq i16 %140, 0
  %143 = icmp eq i16 %141, 0
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i64
  %146 = select i1 %143, i64 2, i64 3
  %147 = select i1 %142, i64 %145, i64 %146
  %148 = getelementptr inbounds i32, i32* %9, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = load i32*, i32** %10, align 8
  %151 = sext i16 %140 to i64
  %152 = getelementptr inbounds i32, i32* %150, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = add nsw i32 %153, %149
  %155 = getelementptr inbounds i32*, i32** %10, i64 1
  %156 = load i32*, i32** %155, align 8
  %157 = sext i16 %141 to i64
  %158 = getelementptr inbounds i32, i32* %156, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = add nsw i32 %154, %159
  %161 = sext i32 %160 to i64
  %162 = sext i32 %4 to i64
  %163 = mul nsw i64 %161, %162
  %164 = add nsw i64 %163, 8192
  %165 = lshr i64 %164, 14
  br label %166

166:                                              ; preds = %135, %139
  %167 = phi i64 [ %165, %139 ], [ 0, %135 ]
  %168 = shl i64 %167, 32
  %169 = ashr exact i64 %168, 32
  %170 = add nsw i64 %169, %137
  %171 = icmp sgt i64 %170, 2147483646
  br i1 %171, label %177, label %172

172:                                              ; preds = %166
  %173 = trunc i64 %170 to i32
  %174 = icmp ugt i32 %79, %173
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  store i32 %136, i32* %11, align 4
  %176 = load i32, i32* %18, align 4
  store i32 %176, i32* %12, align 4
  br label %177

177:                                              ; preds = %175, %172, %166, %106
  %178 = phi i32 [ %79, %106 ], [ %173, %175 ], [ %79, %172 ], [ %79, %166 ]
  %179 = phi i32 [ %42, %106 ], [ %107, %175 ], [ %42, %172 ], [ %42, %166 ]
  %180 = icmp slt i32 %42, %70
  %181 = icmp sgt i32 %42, %72
  %182 = or i1 %180, %181
  br i1 %182, label %246, label %183

183:                                              ; preds = %177
  %184 = or i32 %41, 4
  %185 = icmp slt i32 %184, %74
  %186 = icmp sgt i32 %184, %76
  %187 = or i1 %185, %186
  br i1 %187, label %246, label %188

188:                                              ; preds = %183
  %189 = trunc i32 %184 to i16
  %190 = trunc i32 %42 to i16
  %191 = icmp eq i8* %13, null
  br i1 %191, label %192, label %198

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %194 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %193, align 8
  %195 = sext i32 %34 to i64
  %196 = getelementptr inbounds i8, i8* %36, i64 %195
  %197 = call i32 %194(i8* %196, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %204

198:                                              ; preds = %188
  %199 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %200 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %199, align 8
  %201 = sext i32 %34 to i64
  %202 = getelementptr inbounds i8, i8* %36, i64 %201
  %203 = call i32 %200(i8* %202, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %204

204:                                              ; preds = %198, %192
  %205 = phi i32 [ %197, %192 ], [ %203, %198 ]
  %206 = sext i32 %205 to i64
  %207 = icmp eq i32** %10, null
  br i1 %207, label %235, label %208

208:                                              ; preds = %204
  %209 = sub i16 %189, %38
  %210 = sub i16 %190, %40
  %211 = icmp eq i16 %209, 0
  %212 = icmp eq i16 %210, 0
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i64
  %215 = select i1 %212, i64 2, i64 3
  %216 = select i1 %211, i64 %214, i64 %215
  %217 = getelementptr inbounds i32, i32* %9, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = load i32*, i32** %10, align 8
  %220 = sext i16 %209 to i64
  %221 = getelementptr inbounds i32, i32* %219, i64 %220
  %222 = load i32, i32* %221, align 4
  %223 = add nsw i32 %222, %218
  %224 = getelementptr inbounds i32*, i32** %10, i64 1
  %225 = load i32*, i32** %224, align 8
  %226 = sext i16 %210 to i64
  %227 = getelementptr inbounds i32, i32* %225, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = add nsw i32 %223, %228
  %230 = sext i32 %229 to i64
  %231 = sext i32 %4 to i64
  %232 = mul nsw i64 %230, %231
  %233 = add nsw i64 %232, 8192
  %234 = lshr i64 %233, 14
  br label %235

235:                                              ; preds = %204, %208
  %236 = phi i64 [ %234, %208 ], [ 0, %204 ]
  %237 = shl i64 %236, 32
  %238 = ashr exact i64 %237, 32
  %239 = add nsw i64 %238, %206
  %240 = icmp sgt i64 %239, 2147483646
  br i1 %240, label %246, label %241

241:                                              ; preds = %235
  %242 = trunc i64 %239 to i32
  %243 = icmp ugt i32 %178, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %241
  store i32 %205, i32* %11, align 4
  %245 = load i32, i32* %18, align 4
  store i32 %245, i32* %12, align 4
  br label %246

246:                                              ; preds = %244, %241, %235, %177, %183
  %247 = phi i32 [ %178, %183 ], [ %178, %177 ], [ %242, %244 ], [ %178, %241 ], [ %178, %235 ]
  %248 = phi i32 [ %41, %183 ], [ %41, %177 ], [ %184, %244 ], [ %41, %241 ], [ %41, %235 ]
  %249 = phi i32 [ %179, %183 ], [ %179, %177 ], [ %42, %244 ], [ %179, %241 ], [ %179, %235 ]
  br i1 %110, label %2308, label %250

250:                                              ; preds = %246
  %251 = or i32 %41, 4
  %252 = icmp slt i32 %251, %74
  %253 = icmp sgt i32 %251, %76
  %254 = or i1 %252, %253
  br i1 %254, label %2308, label %255

255:                                              ; preds = %250
  %256 = trunc i32 %251 to i16
  %257 = trunc i32 %107 to i16
  %258 = icmp eq i8* %13, null
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %261 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %260, align 8
  %262 = ashr i32 %107, 3
  %263 = add nsw i32 %262, %30
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* %36, i64 %264
  %266 = call i32 %261(i8* %265, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %275

267:                                              ; preds = %255
  %268 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %269 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %268, align 8
  %270 = ashr i32 %107, 3
  %271 = add nsw i32 %270, %30
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i8, i8* %36, i64 %272
  %274 = call i32 %269(i8* %273, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %275

275:                                              ; preds = %267, %259
  %276 = phi i32 [ %266, %259 ], [ %274, %267 ]
  %277 = sext i32 %276 to i64
  %278 = icmp eq i32** %10, null
  br i1 %278, label %306, label %279

279:                                              ; preds = %275
  %280 = sub i16 %256, %38
  %281 = sub i16 %257, %40
  %282 = icmp eq i16 %280, 0
  %283 = icmp eq i16 %281, 0
  %284 = xor i1 %283, true
  %285 = zext i1 %284 to i64
  %286 = select i1 %283, i64 2, i64 3
  %287 = select i1 %282, i64 %285, i64 %286
  %288 = getelementptr inbounds i32, i32* %9, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = load i32*, i32** %10, align 8
  %291 = sext i16 %280 to i64
  %292 = getelementptr inbounds i32, i32* %290, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = add nsw i32 %293, %289
  %295 = getelementptr inbounds i32*, i32** %10, i64 1
  %296 = load i32*, i32** %295, align 8
  %297 = sext i16 %281 to i64
  %298 = getelementptr inbounds i32, i32* %296, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = add nsw i32 %294, %299
  %301 = sext i32 %300 to i64
  %302 = sext i32 %4 to i64
  %303 = mul nsw i64 %301, %302
  %304 = add nsw i64 %303, 8192
  %305 = lshr i64 %304, 14
  br label %306

306:                                              ; preds = %275, %279
  %307 = phi i64 [ %305, %279 ], [ 0, %275 ]
  %308 = shl i64 %307, 32
  %309 = ashr exact i64 %308, 32
  %310 = add nsw i64 %309, %277
  %311 = icmp sgt i64 %310, 2147483646
  br i1 %311, label %2308, label %312

312:                                              ; preds = %306
  %313 = trunc i64 %310 to i32
  %314 = icmp ugt i32 %247, %313
  br i1 %314, label %315, label %2308

315:                                              ; preds = %312
  store i32 %276, i32* %11, align 4
  %316 = load i32, i32* %18, align 4
  store i32 %316, i32* %12, align 4
  br label %2308

317:                                              ; preds = %100
  %318 = or i32 %42, 4
  %319 = icmp slt i32 %318, %70
  %320 = icmp sgt i32 %318, %72
  %321 = or i1 %319, %320
  %322 = icmp slt i32 %41, %74
  %323 = or i1 %321, %322
  %324 = icmp sgt i32 %41, %76
  %325 = or i1 %323, %324
  br i1 %325, label %384, label %326

326:                                              ; preds = %317
  %327 = trunc i32 %41 to i16
  %328 = trunc i32 %318 to i16
  %329 = icmp eq i8* %13, null
  br i1 %329, label %330, label %336

330:                                              ; preds = %326
  %331 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %332 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %331, align 8
  %333 = sext i32 %34 to i64
  %334 = getelementptr inbounds i8, i8* %36, i64 %333
  %335 = call i32 %332(i8* %334, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %342

336:                                              ; preds = %326
  %337 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %338 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %337, align 8
  %339 = sext i32 %34 to i64
  %340 = getelementptr inbounds i8, i8* %36, i64 %339
  %341 = call i32 %338(i8* %340, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %342

342:                                              ; preds = %336, %330
  %343 = phi i32 [ %335, %330 ], [ %341, %336 ]
  %344 = sext i32 %343 to i64
  %345 = icmp eq i32** %10, null
  br i1 %345, label %373, label %346

346:                                              ; preds = %342
  %347 = sub i16 %327, %38
  %348 = sub i16 %328, %40
  %349 = icmp eq i16 %347, 0
  %350 = icmp eq i16 %348, 0
  %351 = xor i1 %350, true
  %352 = zext i1 %351 to i64
  %353 = select i1 %350, i64 2, i64 3
  %354 = select i1 %349, i64 %352, i64 %353
  %355 = getelementptr inbounds i32, i32* %9, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = load i32*, i32** %10, align 8
  %358 = sext i16 %347 to i64
  %359 = getelementptr inbounds i32, i32* %357, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = add nsw i32 %360, %356
  %362 = getelementptr inbounds i32*, i32** %10, i64 1
  %363 = load i32*, i32** %362, align 8
  %364 = sext i16 %348 to i64
  %365 = getelementptr inbounds i32, i32* %363, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = add nsw i32 %361, %366
  %368 = sext i32 %367 to i64
  %369 = sext i32 %4 to i64
  %370 = mul nsw i64 %368, %369
  %371 = add nsw i64 %370, 8192
  %372 = lshr i64 %371, 14
  br label %373

373:                                              ; preds = %342, %346
  %374 = phi i64 [ %372, %346 ], [ 0, %342 ]
  %375 = shl i64 %374, 32
  %376 = ashr exact i64 %375, 32
  %377 = add nsw i64 %376, %344
  %378 = icmp sgt i64 %377, 2147483646
  br i1 %378, label %384, label %379

379:                                              ; preds = %373
  %380 = trunc i64 %377 to i32
  %381 = icmp ugt i32 %79, %380
  br i1 %381, label %382, label %384

382:                                              ; preds = %379
  store i32 %343, i32* %11, align 4
  %383 = load i32, i32* %18, align 4
  store i32 %383, i32* %12, align 4
  br label %384

384:                                              ; preds = %382, %379, %373, %317
  %385 = phi i32 [ %79, %317 ], [ %380, %382 ], [ %79, %379 ], [ %79, %373 ]
  %386 = phi i32 [ %42, %317 ], [ %318, %382 ], [ %42, %379 ], [ %42, %373 ]
  %387 = icmp slt i32 %42, %70
  %388 = icmp sgt i32 %42, %72
  %389 = or i1 %387, %388
  br i1 %389, label %453, label %390

390:                                              ; preds = %384
  %391 = or i32 %41, 4
  %392 = icmp slt i32 %391, %74
  %393 = icmp sgt i32 %391, %76
  %394 = or i1 %392, %393
  br i1 %394, label %453, label %395

395:                                              ; preds = %390
  %396 = trunc i32 %391 to i16
  %397 = trunc i32 %42 to i16
  %398 = icmp eq i8* %13, null
  br i1 %398, label %399, label %405

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %401 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %400, align 8
  %402 = sext i32 %34 to i64
  %403 = getelementptr inbounds i8, i8* %36, i64 %402
  %404 = call i32 %401(i8* %403, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %411

405:                                              ; preds = %395
  %406 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %407 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %406, align 8
  %408 = sext i32 %34 to i64
  %409 = getelementptr inbounds i8, i8* %36, i64 %408
  %410 = call i32 %407(i8* %409, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %411

411:                                              ; preds = %405, %399
  %412 = phi i32 [ %404, %399 ], [ %410, %405 ]
  %413 = sext i32 %412 to i64
  %414 = icmp eq i32** %10, null
  br i1 %414, label %442, label %415

415:                                              ; preds = %411
  %416 = sub i16 %396, %38
  %417 = sub i16 %397, %40
  %418 = icmp eq i16 %416, 0
  %419 = icmp eq i16 %417, 0
  %420 = xor i1 %419, true
  %421 = zext i1 %420 to i64
  %422 = select i1 %419, i64 2, i64 3
  %423 = select i1 %418, i64 %421, i64 %422
  %424 = getelementptr inbounds i32, i32* %9, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = load i32*, i32** %10, align 8
  %427 = sext i16 %416 to i64
  %428 = getelementptr inbounds i32, i32* %426, i64 %427
  %429 = load i32, i32* %428, align 4
  %430 = add nsw i32 %429, %425
  %431 = getelementptr inbounds i32*, i32** %10, i64 1
  %432 = load i32*, i32** %431, align 8
  %433 = sext i16 %417 to i64
  %434 = getelementptr inbounds i32, i32* %432, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = add nsw i32 %430, %435
  %437 = sext i32 %436 to i64
  %438 = sext i32 %4 to i64
  %439 = mul nsw i64 %437, %438
  %440 = add nsw i64 %439, 8192
  %441 = lshr i64 %440, 14
  br label %442

442:                                              ; preds = %411, %415
  %443 = phi i64 [ %441, %415 ], [ 0, %411 ]
  %444 = shl i64 %443, 32
  %445 = ashr exact i64 %444, 32
  %446 = add nsw i64 %445, %413
  %447 = icmp sgt i64 %446, 2147483646
  br i1 %447, label %453, label %448

448:                                              ; preds = %442
  %449 = trunc i64 %446 to i32
  %450 = icmp ugt i32 %385, %449
  br i1 %450, label %451, label %453

451:                                              ; preds = %448
  store i32 %412, i32* %11, align 4
  %452 = load i32, i32* %18, align 4
  store i32 %452, i32* %12, align 4
  br label %453

453:                                              ; preds = %451, %448, %442, %384, %390
  %454 = phi i32 [ %385, %390 ], [ %385, %384 ], [ %449, %451 ], [ %385, %448 ], [ %385, %442 ]
  %455 = phi i32 [ %41, %390 ], [ %41, %384 ], [ %391, %451 ], [ %41, %448 ], [ %41, %442 ]
  %456 = phi i32 [ %386, %390 ], [ %386, %384 ], [ %42, %451 ], [ %386, %448 ], [ %386, %442 ]
  br i1 %321, label %2308, label %457

457:                                              ; preds = %453
  %458 = or i32 %41, 4
  %459 = icmp slt i32 %458, %74
  %460 = icmp sgt i32 %458, %76
  %461 = or i1 %459, %460
  br i1 %461, label %2308, label %462

462:                                              ; preds = %457
  %463 = trunc i32 %458 to i16
  %464 = trunc i32 %318 to i16
  %465 = icmp eq i8* %13, null
  br i1 %465, label %466, label %472

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %468 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %467, align 8
  %469 = sext i32 %34 to i64
  %470 = getelementptr inbounds i8, i8* %36, i64 %469
  %471 = call i32 %468(i8* %470, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %478

472:                                              ; preds = %462
  %473 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %474 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %473, align 8
  %475 = sext i32 %34 to i64
  %476 = getelementptr inbounds i8, i8* %36, i64 %475
  %477 = call i32 %474(i8* %476, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %478

478:                                              ; preds = %472, %466
  %479 = phi i32 [ %471, %466 ], [ %477, %472 ]
  %480 = sext i32 %479 to i64
  %481 = icmp eq i32** %10, null
  br i1 %481, label %509, label %482

482:                                              ; preds = %478
  %483 = sub i16 %463, %38
  %484 = sub i16 %464, %40
  %485 = icmp eq i16 %483, 0
  %486 = icmp eq i16 %484, 0
  %487 = xor i1 %486, true
  %488 = zext i1 %487 to i64
  %489 = select i1 %486, i64 2, i64 3
  %490 = select i1 %485, i64 %488, i64 %489
  %491 = getelementptr inbounds i32, i32* %9, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = load i32*, i32** %10, align 8
  %494 = sext i16 %483 to i64
  %495 = getelementptr inbounds i32, i32* %493, i64 %494
  %496 = load i32, i32* %495, align 4
  %497 = add nsw i32 %496, %492
  %498 = getelementptr inbounds i32*, i32** %10, i64 1
  %499 = load i32*, i32** %498, align 8
  %500 = sext i16 %484 to i64
  %501 = getelementptr inbounds i32, i32* %499, i64 %500
  %502 = load i32, i32* %501, align 4
  %503 = add nsw i32 %497, %502
  %504 = sext i32 %503 to i64
  %505 = sext i32 %4 to i64
  %506 = mul nsw i64 %504, %505
  %507 = add nsw i64 %506, 8192
  %508 = lshr i64 %507, 14
  br label %509

509:                                              ; preds = %478, %482
  %510 = phi i64 [ %508, %482 ], [ 0, %478 ]
  %511 = shl i64 %510, 32
  %512 = ashr exact i64 %511, 32
  %513 = add nsw i64 %512, %480
  %514 = icmp sgt i64 %513, 2147483646
  br i1 %514, label %2308, label %515

515:                                              ; preds = %509
  %516 = trunc i64 %513 to i32
  %517 = icmp ugt i32 %454, %516
  br i1 %517, label %518, label %2308

518:                                              ; preds = %515
  store i32 %479, i32* %11, align 4
  %519 = load i32, i32* %18, align 4
  store i32 %519, i32* %12, align 4
  br label %2308

520:                                              ; preds = %100
  %521 = add nsw i32 %42, -4
  %522 = icmp slt i32 %521, %70
  %523 = icmp sgt i32 %521, %72
  %524 = or i1 %522, %523
  %525 = icmp slt i32 %41, %74
  %526 = or i1 %524, %525
  %527 = icmp sgt i32 %41, %76
  %528 = or i1 %526, %527
  br i1 %528, label %591, label %529

529:                                              ; preds = %520
  %530 = trunc i32 %41 to i16
  %531 = trunc i32 %521 to i16
  %532 = icmp eq i8* %13, null
  br i1 %532, label %533, label %541

533:                                              ; preds = %529
  %534 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %535 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %534, align 8
  %536 = ashr i32 %521, 3
  %537 = add nsw i32 %536, %30
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds i8, i8* %36, i64 %538
  %540 = call i32 %535(i8* %539, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %549

541:                                              ; preds = %529
  %542 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %543 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %542, align 8
  %544 = ashr i32 %521, 3
  %545 = add nsw i32 %544, %30
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i8, i8* %36, i64 %546
  %548 = call i32 %543(i8* %547, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %549

549:                                              ; preds = %541, %533
  %550 = phi i32 [ %540, %533 ], [ %548, %541 ]
  %551 = sext i32 %550 to i64
  %552 = icmp eq i32** %10, null
  br i1 %552, label %580, label %553

553:                                              ; preds = %549
  %554 = sub i16 %530, %38
  %555 = sub i16 %531, %40
  %556 = icmp eq i16 %554, 0
  %557 = icmp eq i16 %555, 0
  %558 = xor i1 %557, true
  %559 = zext i1 %558 to i64
  %560 = select i1 %557, i64 2, i64 3
  %561 = select i1 %556, i64 %559, i64 %560
  %562 = getelementptr inbounds i32, i32* %9, i64 %561
  %563 = load i32, i32* %562, align 4
  %564 = load i32*, i32** %10, align 8
  %565 = sext i16 %554 to i64
  %566 = getelementptr inbounds i32, i32* %564, i64 %565
  %567 = load i32, i32* %566, align 4
  %568 = add nsw i32 %567, %563
  %569 = getelementptr inbounds i32*, i32** %10, i64 1
  %570 = load i32*, i32** %569, align 8
  %571 = sext i16 %555 to i64
  %572 = getelementptr inbounds i32, i32* %570, i64 %571
  %573 = load i32, i32* %572, align 4
  %574 = add nsw i32 %568, %573
  %575 = sext i32 %574 to i64
  %576 = sext i32 %4 to i64
  %577 = mul nsw i64 %575, %576
  %578 = add nsw i64 %577, 8192
  %579 = lshr i64 %578, 14
  br label %580

580:                                              ; preds = %549, %553
  %581 = phi i64 [ %579, %553 ], [ 0, %549 ]
  %582 = shl i64 %581, 32
  %583 = ashr exact i64 %582, 32
  %584 = add nsw i64 %583, %551
  %585 = icmp sgt i64 %584, 2147483646
  br i1 %585, label %591, label %586

586:                                              ; preds = %580
  %587 = trunc i64 %584 to i32
  %588 = icmp ugt i32 %79, %587
  br i1 %588, label %589, label %591

589:                                              ; preds = %586
  store i32 %550, i32* %11, align 4
  %590 = load i32, i32* %18, align 4
  store i32 %590, i32* %12, align 4
  br label %591

591:                                              ; preds = %589, %586, %580, %520
  %592 = phi i32 [ %79, %520 ], [ %587, %589 ], [ %79, %586 ], [ %79, %580 ]
  %593 = phi i32 [ %42, %520 ], [ %521, %589 ], [ %42, %586 ], [ %42, %580 ]
  %594 = icmp slt i32 %42, %70
  %595 = icmp sgt i32 %42, %72
  %596 = or i1 %594, %595
  br i1 %596, label %666, label %597

597:                                              ; preds = %591
  %598 = add nsw i32 %41, -4
  %599 = icmp slt i32 %598, %74
  %600 = icmp sgt i32 %598, %76
  %601 = or i1 %599, %600
  br i1 %601, label %666, label %602

602:                                              ; preds = %597
  %603 = trunc i32 %598 to i16
  %604 = trunc i32 %42 to i16
  %605 = icmp eq i8* %13, null
  br i1 %605, label %606, label %615

606:                                              ; preds = %602
  %607 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %608 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %607, align 8
  %609 = ashr i32 %598, 3
  %610 = mul nsw i32 %609, %26
  %611 = add nsw i32 %610, %33
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %36, i64 %612
  %614 = call i32 %608(i8* %613, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %624

615:                                              ; preds = %602
  %616 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %617 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %616, align 8
  %618 = ashr i32 %598, 3
  %619 = mul nsw i32 %618, %26
  %620 = add nsw i32 %619, %33
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds i8, i8* %36, i64 %621
  %623 = call i32 %617(i8* %622, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %624

624:                                              ; preds = %615, %606
  %625 = phi i32 [ %614, %606 ], [ %623, %615 ]
  %626 = sext i32 %625 to i64
  %627 = icmp eq i32** %10, null
  br i1 %627, label %655, label %628

628:                                              ; preds = %624
  %629 = sub i16 %603, %38
  %630 = sub i16 %604, %40
  %631 = icmp eq i16 %629, 0
  %632 = icmp eq i16 %630, 0
  %633 = xor i1 %632, true
  %634 = zext i1 %633 to i64
  %635 = select i1 %632, i64 2, i64 3
  %636 = select i1 %631, i64 %634, i64 %635
  %637 = getelementptr inbounds i32, i32* %9, i64 %636
  %638 = load i32, i32* %637, align 4
  %639 = load i32*, i32** %10, align 8
  %640 = sext i16 %629 to i64
  %641 = getelementptr inbounds i32, i32* %639, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = add nsw i32 %642, %638
  %644 = getelementptr inbounds i32*, i32** %10, i64 1
  %645 = load i32*, i32** %644, align 8
  %646 = sext i16 %630 to i64
  %647 = getelementptr inbounds i32, i32* %645, i64 %646
  %648 = load i32, i32* %647, align 4
  %649 = add nsw i32 %643, %648
  %650 = sext i32 %649 to i64
  %651 = sext i32 %4 to i64
  %652 = mul nsw i64 %650, %651
  %653 = add nsw i64 %652, 8192
  %654 = lshr i64 %653, 14
  br label %655

655:                                              ; preds = %624, %628
  %656 = phi i64 [ %654, %628 ], [ 0, %624 ]
  %657 = shl i64 %656, 32
  %658 = ashr exact i64 %657, 32
  %659 = add nsw i64 %658, %626
  %660 = icmp sgt i64 %659, 2147483646
  br i1 %660, label %666, label %661

661:                                              ; preds = %655
  %662 = trunc i64 %659 to i32
  %663 = icmp ugt i32 %592, %662
  br i1 %663, label %664, label %666

664:                                              ; preds = %661
  store i32 %625, i32* %11, align 4
  %665 = load i32, i32* %18, align 4
  store i32 %665, i32* %12, align 4
  br label %666

666:                                              ; preds = %664, %661, %655, %591, %597
  %667 = phi i32 [ %592, %597 ], [ %592, %591 ], [ %662, %664 ], [ %592, %661 ], [ %592, %655 ]
  %668 = phi i32 [ %41, %597 ], [ %41, %591 ], [ %598, %664 ], [ %41, %661 ], [ %41, %655 ]
  %669 = phi i32 [ %593, %597 ], [ %593, %591 ], [ %42, %664 ], [ %593, %661 ], [ %593, %655 ]
  br i1 %524, label %2308, label %670

670:                                              ; preds = %666
  %671 = add nsw i32 %41, -4
  %672 = icmp slt i32 %671, %74
  %673 = icmp sgt i32 %671, %76
  %674 = or i1 %672, %673
  br i1 %674, label %2308, label %675

675:                                              ; preds = %670
  %676 = trunc i32 %671 to i16
  %677 = trunc i32 %521 to i16
  %678 = icmp eq i8* %13, null
  br i1 %678, label %679, label %689

679:                                              ; preds = %675
  %680 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %681 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %680, align 8
  %682 = ashr i32 %671, 3
  %683 = mul nsw i32 %682, %26
  %684 = ashr i32 %521, 3
  %685 = add nsw i32 %683, %684
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds i8, i8* %36, i64 %686
  %688 = call i32 %681(i8* %687, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %699

689:                                              ; preds = %675
  %690 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %691 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %690, align 8
  %692 = ashr i32 %671, 3
  %693 = mul nsw i32 %692, %26
  %694 = ashr i32 %521, 3
  %695 = add nsw i32 %693, %694
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds i8, i8* %36, i64 %696
  %698 = call i32 %691(i8* %697, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %699

699:                                              ; preds = %689, %679
  %700 = phi i32 [ %688, %679 ], [ %698, %689 ]
  %701 = sext i32 %700 to i64
  %702 = icmp eq i32** %10, null
  br i1 %702, label %730, label %703

703:                                              ; preds = %699
  %704 = sub i16 %676, %38
  %705 = sub i16 %677, %40
  %706 = icmp eq i16 %704, 0
  %707 = icmp eq i16 %705, 0
  %708 = xor i1 %707, true
  %709 = zext i1 %708 to i64
  %710 = select i1 %707, i64 2, i64 3
  %711 = select i1 %706, i64 %709, i64 %710
  %712 = getelementptr inbounds i32, i32* %9, i64 %711
  %713 = load i32, i32* %712, align 4
  %714 = load i32*, i32** %10, align 8
  %715 = sext i16 %704 to i64
  %716 = getelementptr inbounds i32, i32* %714, i64 %715
  %717 = load i32, i32* %716, align 4
  %718 = add nsw i32 %717, %713
  %719 = getelementptr inbounds i32*, i32** %10, i64 1
  %720 = load i32*, i32** %719, align 8
  %721 = sext i16 %705 to i64
  %722 = getelementptr inbounds i32, i32* %720, i64 %721
  %723 = load i32, i32* %722, align 4
  %724 = add nsw i32 %718, %723
  %725 = sext i32 %724 to i64
  %726 = sext i32 %4 to i64
  %727 = mul nsw i64 %725, %726
  %728 = add nsw i64 %727, 8192
  %729 = lshr i64 %728, 14
  br label %730

730:                                              ; preds = %699, %703
  %731 = phi i64 [ %729, %703 ], [ 0, %699 ]
  %732 = shl i64 %731, 32
  %733 = ashr exact i64 %732, 32
  %734 = add nsw i64 %733, %701
  %735 = icmp sgt i64 %734, 2147483646
  br i1 %735, label %2308, label %736

736:                                              ; preds = %730
  %737 = trunc i64 %734 to i32
  %738 = icmp ugt i32 %667, %737
  br i1 %738, label %739, label %2308

739:                                              ; preds = %736
  store i32 %700, i32* %11, align 4
  %740 = load i32, i32* %18, align 4
  store i32 %740, i32* %12, align 4
  br label %2308

741:                                              ; preds = %100
  %742 = or i32 %42, 4
  %743 = icmp slt i32 %742, %70
  %744 = icmp sgt i32 %742, %72
  %745 = or i1 %743, %744
  %746 = icmp slt i32 %41, %74
  %747 = or i1 %745, %746
  %748 = icmp sgt i32 %41, %76
  %749 = or i1 %747, %748
  br i1 %749, label %808, label %750

750:                                              ; preds = %741
  %751 = trunc i32 %41 to i16
  %752 = trunc i32 %742 to i16
  %753 = icmp eq i8* %13, null
  br i1 %753, label %754, label %760

754:                                              ; preds = %750
  %755 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %756 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %755, align 8
  %757 = sext i32 %34 to i64
  %758 = getelementptr inbounds i8, i8* %36, i64 %757
  %759 = call i32 %756(i8* %758, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %766

760:                                              ; preds = %750
  %761 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %762 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %761, align 8
  %763 = sext i32 %34 to i64
  %764 = getelementptr inbounds i8, i8* %36, i64 %763
  %765 = call i32 %762(i8* %764, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %766

766:                                              ; preds = %760, %754
  %767 = phi i32 [ %759, %754 ], [ %765, %760 ]
  %768 = sext i32 %767 to i64
  %769 = icmp eq i32** %10, null
  br i1 %769, label %797, label %770

770:                                              ; preds = %766
  %771 = sub i16 %751, %38
  %772 = sub i16 %752, %40
  %773 = icmp eq i16 %771, 0
  %774 = icmp eq i16 %772, 0
  %775 = xor i1 %774, true
  %776 = zext i1 %775 to i64
  %777 = select i1 %774, i64 2, i64 3
  %778 = select i1 %773, i64 %776, i64 %777
  %779 = getelementptr inbounds i32, i32* %9, i64 %778
  %780 = load i32, i32* %779, align 4
  %781 = load i32*, i32** %10, align 8
  %782 = sext i16 %771 to i64
  %783 = getelementptr inbounds i32, i32* %781, i64 %782
  %784 = load i32, i32* %783, align 4
  %785 = add nsw i32 %784, %780
  %786 = getelementptr inbounds i32*, i32** %10, i64 1
  %787 = load i32*, i32** %786, align 8
  %788 = sext i16 %772 to i64
  %789 = getelementptr inbounds i32, i32* %787, i64 %788
  %790 = load i32, i32* %789, align 4
  %791 = add nsw i32 %785, %790
  %792 = sext i32 %791 to i64
  %793 = sext i32 %4 to i64
  %794 = mul nsw i64 %792, %793
  %795 = add nsw i64 %794, 8192
  %796 = lshr i64 %795, 14
  br label %797

797:                                              ; preds = %766, %770
  %798 = phi i64 [ %796, %770 ], [ 0, %766 ]
  %799 = shl i64 %798, 32
  %800 = ashr exact i64 %799, 32
  %801 = add nsw i64 %800, %768
  %802 = icmp sgt i64 %801, 2147483646
  br i1 %802, label %808, label %803

803:                                              ; preds = %797
  %804 = trunc i64 %801 to i32
  %805 = icmp ugt i32 %79, %804
  br i1 %805, label %806, label %808

806:                                              ; preds = %803
  store i32 %767, i32* %11, align 4
  %807 = load i32, i32* %18, align 4
  store i32 %807, i32* %12, align 4
  br label %808

808:                                              ; preds = %806, %803, %797, %741
  %809 = phi i32 [ %79, %741 ], [ %804, %806 ], [ %79, %803 ], [ %79, %797 ]
  %810 = phi i32 [ %42, %741 ], [ %742, %806 ], [ %42, %803 ], [ %42, %797 ]
  %811 = icmp slt i32 %42, %70
  %812 = icmp sgt i32 %42, %72
  %813 = or i1 %811, %812
  br i1 %813, label %883, label %814

814:                                              ; preds = %808
  %815 = add nsw i32 %41, -4
  %816 = icmp slt i32 %815, %74
  %817 = icmp sgt i32 %815, %76
  %818 = or i1 %816, %817
  br i1 %818, label %883, label %819

819:                                              ; preds = %814
  %820 = trunc i32 %815 to i16
  %821 = trunc i32 %42 to i16
  %822 = icmp eq i8* %13, null
  br i1 %822, label %823, label %832

823:                                              ; preds = %819
  %824 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %825 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %824, align 8
  %826 = ashr i32 %815, 3
  %827 = mul nsw i32 %826, %26
  %828 = add nsw i32 %827, %33
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds i8, i8* %36, i64 %829
  %831 = call i32 %825(i8* %830, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %841

832:                                              ; preds = %819
  %833 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %834 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %833, align 8
  %835 = ashr i32 %815, 3
  %836 = mul nsw i32 %835, %26
  %837 = add nsw i32 %836, %33
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds i8, i8* %36, i64 %838
  %840 = call i32 %834(i8* %839, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %841

841:                                              ; preds = %832, %823
  %842 = phi i32 [ %831, %823 ], [ %840, %832 ]
  %843 = sext i32 %842 to i64
  %844 = icmp eq i32** %10, null
  br i1 %844, label %872, label %845

845:                                              ; preds = %841
  %846 = sub i16 %820, %38
  %847 = sub i16 %821, %40
  %848 = icmp eq i16 %846, 0
  %849 = icmp eq i16 %847, 0
  %850 = xor i1 %849, true
  %851 = zext i1 %850 to i64
  %852 = select i1 %849, i64 2, i64 3
  %853 = select i1 %848, i64 %851, i64 %852
  %854 = getelementptr inbounds i32, i32* %9, i64 %853
  %855 = load i32, i32* %854, align 4
  %856 = load i32*, i32** %10, align 8
  %857 = sext i16 %846 to i64
  %858 = getelementptr inbounds i32, i32* %856, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = add nsw i32 %859, %855
  %861 = getelementptr inbounds i32*, i32** %10, i64 1
  %862 = load i32*, i32** %861, align 8
  %863 = sext i16 %847 to i64
  %864 = getelementptr inbounds i32, i32* %862, i64 %863
  %865 = load i32, i32* %864, align 4
  %866 = add nsw i32 %860, %865
  %867 = sext i32 %866 to i64
  %868 = sext i32 %4 to i64
  %869 = mul nsw i64 %867, %868
  %870 = add nsw i64 %869, 8192
  %871 = lshr i64 %870, 14
  br label %872

872:                                              ; preds = %841, %845
  %873 = phi i64 [ %871, %845 ], [ 0, %841 ]
  %874 = shl i64 %873, 32
  %875 = ashr exact i64 %874, 32
  %876 = add nsw i64 %875, %843
  %877 = icmp sgt i64 %876, 2147483646
  br i1 %877, label %883, label %878

878:                                              ; preds = %872
  %879 = trunc i64 %876 to i32
  %880 = icmp ugt i32 %809, %879
  br i1 %880, label %881, label %883

881:                                              ; preds = %878
  store i32 %842, i32* %11, align 4
  %882 = load i32, i32* %18, align 4
  store i32 %882, i32* %12, align 4
  br label %883

883:                                              ; preds = %881, %878, %872, %808, %814
  %884 = phi i32 [ %809, %814 ], [ %809, %808 ], [ %879, %881 ], [ %809, %878 ], [ %809, %872 ]
  %885 = phi i32 [ %41, %814 ], [ %41, %808 ], [ %815, %881 ], [ %41, %878 ], [ %41, %872 ]
  %886 = phi i32 [ %810, %814 ], [ %810, %808 ], [ %42, %881 ], [ %810, %878 ], [ %810, %872 ]
  br i1 %745, label %2308, label %887

887:                                              ; preds = %883
  %888 = add nsw i32 %41, -4
  %889 = icmp slt i32 %888, %74
  %890 = icmp sgt i32 %888, %76
  %891 = or i1 %889, %890
  br i1 %891, label %2308, label %892

892:                                              ; preds = %887
  %893 = trunc i32 %888 to i16
  %894 = trunc i32 %742 to i16
  %895 = icmp eq i8* %13, null
  br i1 %895, label %896, label %905

896:                                              ; preds = %892
  %897 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %898 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %897, align 8
  %899 = ashr i32 %888, 3
  %900 = mul nsw i32 %899, %26
  %901 = add nsw i32 %900, %33
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds i8, i8* %36, i64 %902
  %904 = call i32 %898(i8* %903, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %914

905:                                              ; preds = %892
  %906 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %907 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %906, align 8
  %908 = ashr i32 %888, 3
  %909 = mul nsw i32 %908, %26
  %910 = add nsw i32 %909, %33
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i8, i8* %36, i64 %911
  %913 = call i32 %907(i8* %912, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %914

914:                                              ; preds = %905, %896
  %915 = phi i32 [ %904, %896 ], [ %913, %905 ]
  %916 = sext i32 %915 to i64
  %917 = icmp eq i32** %10, null
  br i1 %917, label %945, label %918

918:                                              ; preds = %914
  %919 = sub i16 %893, %38
  %920 = sub i16 %894, %40
  %921 = icmp eq i16 %919, 0
  %922 = icmp eq i16 %920, 0
  %923 = xor i1 %922, true
  %924 = zext i1 %923 to i64
  %925 = select i1 %922, i64 2, i64 3
  %926 = select i1 %921, i64 %924, i64 %925
  %927 = getelementptr inbounds i32, i32* %9, i64 %926
  %928 = load i32, i32* %927, align 4
  %929 = load i32*, i32** %10, align 8
  %930 = sext i16 %919 to i64
  %931 = getelementptr inbounds i32, i32* %929, i64 %930
  %932 = load i32, i32* %931, align 4
  %933 = add nsw i32 %932, %928
  %934 = getelementptr inbounds i32*, i32** %10, i64 1
  %935 = load i32*, i32** %934, align 8
  %936 = sext i16 %920 to i64
  %937 = getelementptr inbounds i32, i32* %935, i64 %936
  %938 = load i32, i32* %937, align 4
  %939 = add nsw i32 %933, %938
  %940 = sext i32 %939 to i64
  %941 = sext i32 %4 to i64
  %942 = mul nsw i64 %940, %941
  %943 = add nsw i64 %942, 8192
  %944 = lshr i64 %943, 14
  br label %945

945:                                              ; preds = %914, %918
  %946 = phi i64 [ %944, %918 ], [ 0, %914 ]
  %947 = shl i64 %946, 32
  %948 = ashr exact i64 %947, 32
  %949 = add nsw i64 %948, %916
  %950 = icmp sgt i64 %949, 2147483646
  br i1 %950, label %2308, label %951

951:                                              ; preds = %945
  %952 = trunc i64 %949 to i32
  %953 = icmp ugt i32 %884, %952
  br i1 %953, label %954, label %2308

954:                                              ; preds = %951
  store i32 %915, i32* %11, align 4
  %955 = load i32, i32* %18, align 4
  store i32 %955, i32* %12, align 4
  br label %2308

956:                                              ; preds = %100
  unreachable

957:                                              ; preds = %96, %92, %88, %84, %81, %17
  %958 = add nsw i32 %42, -4
  %959 = icmp slt i32 %958, %70
  %960 = icmp sgt i32 %958, %72
  %961 = or i1 %959, %960
  %962 = icmp slt i32 %41, %74
  %963 = or i1 %961, %962
  %964 = icmp sgt i32 %41, %76
  %965 = or i1 %963, %964
  br i1 %965, label %1028, label %966

966:                                              ; preds = %957
  %967 = trunc i32 %41 to i16
  %968 = trunc i32 %958 to i16
  %969 = icmp eq i8* %13, null
  br i1 %969, label %970, label %978

970:                                              ; preds = %966
  %971 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %972 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %971, align 8
  %973 = ashr i32 %958, 3
  %974 = add nsw i32 %973, %30
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds i8, i8* %36, i64 %975
  %977 = call i32 %972(i8* %976, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %986

978:                                              ; preds = %966
  %979 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %980 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %979, align 8
  %981 = ashr i32 %958, 3
  %982 = add nsw i32 %981, %30
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds i8, i8* %36, i64 %983
  %985 = call i32 %980(i8* %984, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %986

986:                                              ; preds = %978, %970
  %987 = phi i32 [ %977, %970 ], [ %985, %978 ]
  %988 = sext i32 %987 to i64
  %989 = icmp eq i32** %10, null
  br i1 %989, label %1017, label %990

990:                                              ; preds = %986
  %991 = sub i16 %967, %38
  %992 = sub i16 %968, %40
  %993 = icmp eq i16 %991, 0
  %994 = icmp eq i16 %992, 0
  %995 = xor i1 %994, true
  %996 = zext i1 %995 to i64
  %997 = select i1 %994, i64 2, i64 3
  %998 = select i1 %993, i64 %996, i64 %997
  %999 = getelementptr inbounds i32, i32* %9, i64 %998
  %1000 = load i32, i32* %999, align 4
  %1001 = load i32*, i32** %10, align 8
  %1002 = sext i16 %991 to i64
  %1003 = getelementptr inbounds i32, i32* %1001, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = add nsw i32 %1004, %1000
  %1006 = getelementptr inbounds i32*, i32** %10, i64 1
  %1007 = load i32*, i32** %1006, align 8
  %1008 = sext i16 %992 to i64
  %1009 = getelementptr inbounds i32, i32* %1007, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = add nsw i32 %1005, %1010
  %1012 = sext i32 %1011 to i64
  %1013 = sext i32 %4 to i64
  %1014 = mul nsw i64 %1012, %1013
  %1015 = add nsw i64 %1014, 8192
  %1016 = lshr i64 %1015, 14
  br label %1017

1017:                                             ; preds = %986, %990
  %1018 = phi i64 [ %1016, %990 ], [ 0, %986 ]
  %1019 = shl i64 %1018, 32
  %1020 = ashr exact i64 %1019, 32
  %1021 = add nsw i64 %1020, %988
  %1022 = icmp sgt i64 %1021, 2147483646
  br i1 %1022, label %1028, label %1023

1023:                                             ; preds = %1017
  %1024 = trunc i64 %1021 to i32
  %1025 = icmp ugt i32 %79, %1024
  br i1 %1025, label %1026, label %1028

1026:                                             ; preds = %1023
  store i32 %987, i32* %11, align 4
  %1027 = load i32, i32* %18, align 4
  store i32 %1027, i32* %12, align 4
  br label %1028

1028:                                             ; preds = %1026, %1023, %1017, %957
  %1029 = phi i32 [ %79, %957 ], [ %1024, %1026 ], [ %79, %1023 ], [ %79, %1017 ]
  %1030 = phi i32 [ %42, %957 ], [ %958, %1026 ], [ %42, %1023 ], [ %42, %1017 ]
  %1031 = phi i32 [ 2147483647, %957 ], [ %1024, %1026 ], [ %1024, %1023 ], [ 2147483647, %1017 ]
  %1032 = or i32 %42, 4
  %1033 = icmp slt i32 %1032, %70
  %1034 = icmp sgt i32 %1032, %72
  %1035 = or i1 %1033, %1034
  %1036 = or i1 %1035, %962
  %1037 = or i1 %1036, %964
  br i1 %1037, label %1096, label %1038

1038:                                             ; preds = %1028
  %1039 = trunc i32 %41 to i16
  %1040 = trunc i32 %1032 to i16
  %1041 = icmp eq i8* %13, null
  br i1 %1041, label %1042, label %1048

1042:                                             ; preds = %1038
  %1043 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1044 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1043, align 8
  %1045 = sext i32 %34 to i64
  %1046 = getelementptr inbounds i8, i8* %36, i64 %1045
  %1047 = call i32 %1044(i8* %1046, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1054

1048:                                             ; preds = %1038
  %1049 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1050 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1049, align 8
  %1051 = sext i32 %34 to i64
  %1052 = getelementptr inbounds i8, i8* %36, i64 %1051
  %1053 = call i32 %1050(i8* %1052, i32 %26, i32 4, i32 0, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1054

1054:                                             ; preds = %1048, %1042
  %1055 = phi i32 [ %1047, %1042 ], [ %1053, %1048 ]
  %1056 = sext i32 %1055 to i64
  %1057 = icmp eq i32** %10, null
  br i1 %1057, label %1085, label %1058

1058:                                             ; preds = %1054
  %1059 = sub i16 %1039, %38
  %1060 = sub i16 %1040, %40
  %1061 = icmp eq i16 %1059, 0
  %1062 = icmp eq i16 %1060, 0
  %1063 = xor i1 %1062, true
  %1064 = zext i1 %1063 to i64
  %1065 = select i1 %1062, i64 2, i64 3
  %1066 = select i1 %1061, i64 %1064, i64 %1065
  %1067 = getelementptr inbounds i32, i32* %9, i64 %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = load i32*, i32** %10, align 8
  %1070 = sext i16 %1059 to i64
  %1071 = getelementptr inbounds i32, i32* %1069, i64 %1070
  %1072 = load i32, i32* %1071, align 4
  %1073 = add nsw i32 %1072, %1068
  %1074 = getelementptr inbounds i32*, i32** %10, i64 1
  %1075 = load i32*, i32** %1074, align 8
  %1076 = sext i16 %1060 to i64
  %1077 = getelementptr inbounds i32, i32* %1075, i64 %1076
  %1078 = load i32, i32* %1077, align 4
  %1079 = add nsw i32 %1073, %1078
  %1080 = sext i32 %1079 to i64
  %1081 = sext i32 %4 to i64
  %1082 = mul nsw i64 %1080, %1081
  %1083 = add nsw i64 %1082, 8192
  %1084 = lshr i64 %1083, 14
  br label %1085

1085:                                             ; preds = %1054, %1058
  %1086 = phi i64 [ %1084, %1058 ], [ 0, %1054 ]
  %1087 = shl i64 %1086, 32
  %1088 = ashr exact i64 %1087, 32
  %1089 = add nsw i64 %1088, %1056
  %1090 = icmp sgt i64 %1089, 2147483646
  br i1 %1090, label %1096, label %1091

1091:                                             ; preds = %1085
  %1092 = trunc i64 %1089 to i32
  %1093 = icmp ugt i32 %1029, %1092
  br i1 %1093, label %1094, label %1096

1094:                                             ; preds = %1091
  store i32 %1055, i32* %11, align 4
  %1095 = load i32, i32* %18, align 4
  store i32 %1095, i32* %12, align 4
  br label %1096

1096:                                             ; preds = %1094, %1091, %1085, %1028
  %1097 = phi i32 [ %1029, %1028 ], [ %1092, %1094 ], [ %1029, %1091 ], [ %1029, %1085 ]
  %1098 = phi i32 [ %1030, %1028 ], [ %1032, %1094 ], [ %1030, %1091 ], [ %1030, %1085 ]
  %1099 = phi i32 [ 2147483647, %1028 ], [ %1092, %1094 ], [ %1092, %1091 ], [ 2147483647, %1085 ]
  %1100 = icmp slt i32 %42, %70
  %1101 = icmp sgt i32 %42, %72
  %1102 = or i1 %1100, %1101
  br i1 %1102, label %1239, label %1103

1103:                                             ; preds = %1096
  %1104 = add nsw i32 %41, -4
  %1105 = icmp slt i32 %1104, %74
  %1106 = icmp sgt i32 %1104, %76
  %1107 = or i1 %1105, %1106
  br i1 %1107, label %1172, label %1108

1108:                                             ; preds = %1103
  %1109 = trunc i32 %1104 to i16
  %1110 = trunc i32 %42 to i16
  %1111 = icmp eq i8* %13, null
  br i1 %1111, label %1112, label %1121

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1114 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1113, align 8
  %1115 = ashr i32 %1104, 3
  %1116 = mul nsw i32 %1115, %26
  %1117 = add nsw i32 %1116, %33
  %1118 = sext i32 %1117 to i64
  %1119 = getelementptr inbounds i8, i8* %36, i64 %1118
  %1120 = call i32 %1114(i8* %1119, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1130

1121:                                             ; preds = %1108
  %1122 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1123 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1122, align 8
  %1124 = ashr i32 %1104, 3
  %1125 = mul nsw i32 %1124, %26
  %1126 = add nsw i32 %1125, %33
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds i8, i8* %36, i64 %1127
  %1129 = call i32 %1123(i8* %1128, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1130

1130:                                             ; preds = %1121, %1112
  %1131 = phi i32 [ %1120, %1112 ], [ %1129, %1121 ]
  %1132 = sext i32 %1131 to i64
  %1133 = icmp eq i32** %10, null
  br i1 %1133, label %1161, label %1134

1134:                                             ; preds = %1130
  %1135 = sub i16 %1109, %38
  %1136 = sub i16 %1110, %40
  %1137 = icmp eq i16 %1135, 0
  %1138 = icmp eq i16 %1136, 0
  %1139 = xor i1 %1138, true
  %1140 = zext i1 %1139 to i64
  %1141 = select i1 %1138, i64 2, i64 3
  %1142 = select i1 %1137, i64 %1140, i64 %1141
  %1143 = getelementptr inbounds i32, i32* %9, i64 %1142
  %1144 = load i32, i32* %1143, align 4
  %1145 = load i32*, i32** %10, align 8
  %1146 = sext i16 %1135 to i64
  %1147 = getelementptr inbounds i32, i32* %1145, i64 %1146
  %1148 = load i32, i32* %1147, align 4
  %1149 = add nsw i32 %1148, %1144
  %1150 = getelementptr inbounds i32*, i32** %10, i64 1
  %1151 = load i32*, i32** %1150, align 8
  %1152 = sext i16 %1136 to i64
  %1153 = getelementptr inbounds i32, i32* %1151, i64 %1152
  %1154 = load i32, i32* %1153, align 4
  %1155 = add nsw i32 %1149, %1154
  %1156 = sext i32 %1155 to i64
  %1157 = sext i32 %4 to i64
  %1158 = mul nsw i64 %1156, %1157
  %1159 = add nsw i64 %1158, 8192
  %1160 = lshr i64 %1159, 14
  br label %1161

1161:                                             ; preds = %1130, %1134
  %1162 = phi i64 [ %1160, %1134 ], [ 0, %1130 ]
  %1163 = shl i64 %1162, 32
  %1164 = ashr exact i64 %1163, 32
  %1165 = add nsw i64 %1164, %1132
  %1166 = icmp sgt i64 %1165, 2147483646
  br i1 %1166, label %1172, label %1167

1167:                                             ; preds = %1161
  %1168 = trunc i64 %1165 to i32
  %1169 = icmp ugt i32 %1097, %1168
  br i1 %1169, label %1170, label %1172

1170:                                             ; preds = %1167
  store i32 %1131, i32* %11, align 4
  %1171 = load i32, i32* %18, align 4
  store i32 %1171, i32* %12, align 4
  br label %1172

1172:                                             ; preds = %1170, %1167, %1161, %1103
  %1173 = phi i32 [ %1097, %1161 ], [ %1097, %1167 ], [ %1168, %1170 ], [ %1097, %1103 ]
  %1174 = phi i32 [ %41, %1161 ], [ %41, %1167 ], [ %1104, %1170 ], [ %41, %1103 ]
  %1175 = phi i32 [ %1098, %1161 ], [ %1098, %1167 ], [ %42, %1170 ], [ %1098, %1103 ]
  %1176 = phi i32 [ 2147483647, %1161 ], [ %1168, %1167 ], [ %1168, %1170 ], [ 2147483647, %1103 ]
  %1177 = or i32 %41, 4
  %1178 = icmp slt i32 %1177, %74
  %1179 = icmp sgt i32 %1177, %76
  %1180 = or i1 %1178, %1179
  br i1 %1180, label %1239, label %1181

1181:                                             ; preds = %1172
  %1182 = trunc i32 %1177 to i16
  %1183 = trunc i32 %42 to i16
  %1184 = icmp eq i8* %13, null
  br i1 %1184, label %1185, label %1191

1185:                                             ; preds = %1181
  %1186 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1187 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1186, align 8
  %1188 = sext i32 %34 to i64
  %1189 = getelementptr inbounds i8, i8* %36, i64 %1188
  %1190 = call i32 %1187(i8* %1189, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1197

1191:                                             ; preds = %1181
  %1192 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1193 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1192, align 8
  %1194 = sext i32 %34 to i64
  %1195 = getelementptr inbounds i8, i8* %36, i64 %1194
  %1196 = call i32 %1193(i8* %1195, i32 %26, i32 0, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1197

1197:                                             ; preds = %1191, %1185
  %1198 = phi i32 [ %1190, %1185 ], [ %1196, %1191 ]
  %1199 = sext i32 %1198 to i64
  %1200 = icmp eq i32** %10, null
  br i1 %1200, label %1228, label %1201

1201:                                             ; preds = %1197
  %1202 = sub i16 %1182, %38
  %1203 = sub i16 %1183, %40
  %1204 = icmp eq i16 %1202, 0
  %1205 = icmp eq i16 %1203, 0
  %1206 = xor i1 %1205, true
  %1207 = zext i1 %1206 to i64
  %1208 = select i1 %1205, i64 2, i64 3
  %1209 = select i1 %1204, i64 %1207, i64 %1208
  %1210 = getelementptr inbounds i32, i32* %9, i64 %1209
  %1211 = load i32, i32* %1210, align 4
  %1212 = load i32*, i32** %10, align 8
  %1213 = sext i16 %1202 to i64
  %1214 = getelementptr inbounds i32, i32* %1212, i64 %1213
  %1215 = load i32, i32* %1214, align 4
  %1216 = add nsw i32 %1215, %1211
  %1217 = getelementptr inbounds i32*, i32** %10, i64 1
  %1218 = load i32*, i32** %1217, align 8
  %1219 = sext i16 %1203 to i64
  %1220 = getelementptr inbounds i32, i32* %1218, i64 %1219
  %1221 = load i32, i32* %1220, align 4
  %1222 = add nsw i32 %1216, %1221
  %1223 = sext i32 %1222 to i64
  %1224 = sext i32 %4 to i64
  %1225 = mul nsw i64 %1223, %1224
  %1226 = add nsw i64 %1225, 8192
  %1227 = lshr i64 %1226, 14
  br label %1228

1228:                                             ; preds = %1197, %1201
  %1229 = phi i64 [ %1227, %1201 ], [ 0, %1197 ]
  %1230 = shl i64 %1229, 32
  %1231 = ashr exact i64 %1230, 32
  %1232 = add nsw i64 %1231, %1199
  %1233 = icmp sgt i64 %1232, 2147483646
  br i1 %1233, label %1239, label %1234

1234:                                             ; preds = %1228
  %1235 = trunc i64 %1232 to i32
  %1236 = icmp ugt i32 %1173, %1235
  br i1 %1236, label %1237, label %1239

1237:                                             ; preds = %1234
  store i32 %1198, i32* %11, align 4
  %1238 = load i32, i32* %18, align 4
  store i32 %1238, i32* %12, align 4
  br label %1239

1239:                                             ; preds = %1237, %1234, %1228, %1096, %1172
  %1240 = phi i32 [ %1176, %1172 ], [ 2147483647, %1096 ], [ %1176, %1228 ], [ %1176, %1234 ], [ %1176, %1237 ]
  %1241 = phi i32 [ %1173, %1172 ], [ %1097, %1096 ], [ %1173, %1228 ], [ %1173, %1234 ], [ %1235, %1237 ]
  %1242 = phi i32 [ %1174, %1172 ], [ %41, %1096 ], [ %1174, %1228 ], [ %1174, %1234 ], [ %1177, %1237 ]
  %1243 = phi i32 [ %1175, %1172 ], [ %1098, %1096 ], [ %1175, %1228 ], [ %1175, %1234 ], [ %42, %1237 ]
  %1244 = phi i32 [ 2147483647, %1172 ], [ 2147483647, %1096 ], [ 2147483647, %1228 ], [ %1235, %1234 ], [ %1235, %1237 ]
  %1245 = icmp uge i32 %1031, %1099
  %1246 = zext i1 %1245 to i32
  %1247 = icmp ult i32 %1240, %1244
  %1248 = select i1 %1247, i32 0, i32 2
  %1249 = or i32 %1248, %1246
  switch i32 %1249, label %1524 [
    i32 0, label %1250
    i32 1, label %1322
    i32 2, label %1392
    i32 3, label %1460
  ]

1250:                                             ; preds = %1239
  br i1 %961, label %1525, label %1251

1251:                                             ; preds = %1250
  %1252 = add nsw i32 %41, -4
  %1253 = icmp slt i32 %1252, %74
  %1254 = icmp sgt i32 %1252, %76
  %1255 = or i1 %1253, %1254
  br i1 %1255, label %1525, label %1256

1256:                                             ; preds = %1251
  %1257 = trunc i32 %1252 to i16
  %1258 = trunc i32 %958 to i16
  %1259 = icmp eq i8* %13, null
  br i1 %1259, label %1260, label %1270

1260:                                             ; preds = %1256
  %1261 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1262 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1261, align 8
  %1263 = ashr i32 %1252, 3
  %1264 = mul nsw i32 %1263, %26
  %1265 = ashr i32 %958, 3
  %1266 = add nsw i32 %1264, %1265
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds i8, i8* %36, i64 %1267
  %1269 = call i32 %1262(i8* %1268, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1280

1270:                                             ; preds = %1256
  %1271 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1272 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1271, align 8
  %1273 = ashr i32 %1252, 3
  %1274 = mul nsw i32 %1273, %26
  %1275 = ashr i32 %958, 3
  %1276 = add nsw i32 %1274, %1275
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds i8, i8* %36, i64 %1277
  %1279 = call i32 %1272(i8* %1278, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1280

1280:                                             ; preds = %1270, %1260
  %1281 = phi i32 [ %1269, %1260 ], [ %1279, %1270 ]
  %1282 = sext i32 %1281 to i64
  %1283 = icmp eq i32** %10, null
  br i1 %1283, label %1311, label %1284

1284:                                             ; preds = %1280
  %1285 = sub i16 %1257, %38
  %1286 = sub i16 %1258, %40
  %1287 = icmp eq i16 %1285, 0
  %1288 = icmp eq i16 %1286, 0
  %1289 = xor i1 %1288, true
  %1290 = zext i1 %1289 to i64
  %1291 = select i1 %1288, i64 2, i64 3
  %1292 = select i1 %1287, i64 %1290, i64 %1291
  %1293 = getelementptr inbounds i32, i32* %9, i64 %1292
  %1294 = load i32, i32* %1293, align 4
  %1295 = load i32*, i32** %10, align 8
  %1296 = sext i16 %1285 to i64
  %1297 = getelementptr inbounds i32, i32* %1295, i64 %1296
  %1298 = load i32, i32* %1297, align 4
  %1299 = add nsw i32 %1298, %1294
  %1300 = getelementptr inbounds i32*, i32** %10, i64 1
  %1301 = load i32*, i32** %1300, align 8
  %1302 = sext i16 %1286 to i64
  %1303 = getelementptr inbounds i32, i32* %1301, i64 %1302
  %1304 = load i32, i32* %1303, align 4
  %1305 = add nsw i32 %1299, %1304
  %1306 = sext i32 %1305 to i64
  %1307 = sext i32 %4 to i64
  %1308 = mul nsw i64 %1306, %1307
  %1309 = add nsw i64 %1308, 8192
  %1310 = lshr i64 %1309, 14
  br label %1311

1311:                                             ; preds = %1280, %1284
  %1312 = phi i64 [ %1310, %1284 ], [ 0, %1280 ]
  %1313 = shl i64 %1312, 32
  %1314 = ashr exact i64 %1313, 32
  %1315 = add nsw i64 %1314, %1282
  %1316 = icmp sgt i64 %1315, 2147483646
  br i1 %1316, label %1525, label %1317

1317:                                             ; preds = %1311
  %1318 = trunc i64 %1315 to i32
  %1319 = icmp ugt i32 %1241, %1318
  br i1 %1319, label %1320, label %1525

1320:                                             ; preds = %1317
  store i32 %1281, i32* %11, align 4
  %1321 = load i32, i32* %18, align 4
  store i32 %1321, i32* %12, align 4
  br label %1525

1322:                                             ; preds = %1239
  br i1 %1035, label %1525, label %1323

1323:                                             ; preds = %1322
  %1324 = add nsw i32 %41, -4
  %1325 = icmp slt i32 %1324, %74
  %1326 = icmp sgt i32 %1324, %76
  %1327 = or i1 %1325, %1326
  br i1 %1327, label %1525, label %1328

1328:                                             ; preds = %1323
  %1329 = trunc i32 %1324 to i16
  %1330 = trunc i32 %1032 to i16
  %1331 = icmp eq i8* %13, null
  br i1 %1331, label %1332, label %1341

1332:                                             ; preds = %1328
  %1333 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1334 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1333, align 8
  %1335 = ashr i32 %1324, 3
  %1336 = mul nsw i32 %1335, %26
  %1337 = add nsw i32 %1336, %33
  %1338 = sext i32 %1337 to i64
  %1339 = getelementptr inbounds i8, i8* %36, i64 %1338
  %1340 = call i32 %1334(i8* %1339, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1350

1341:                                             ; preds = %1328
  %1342 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1343 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1342, align 8
  %1344 = ashr i32 %1324, 3
  %1345 = mul nsw i32 %1344, %26
  %1346 = add nsw i32 %1345, %33
  %1347 = sext i32 %1346 to i64
  %1348 = getelementptr inbounds i8, i8* %36, i64 %1347
  %1349 = call i32 %1343(i8* %1348, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1350

1350:                                             ; preds = %1341, %1332
  %1351 = phi i32 [ %1340, %1332 ], [ %1349, %1341 ]
  %1352 = sext i32 %1351 to i64
  %1353 = icmp eq i32** %10, null
  br i1 %1353, label %1381, label %1354

1354:                                             ; preds = %1350
  %1355 = sub i16 %1329, %38
  %1356 = sub i16 %1330, %40
  %1357 = icmp eq i16 %1355, 0
  %1358 = icmp eq i16 %1356, 0
  %1359 = xor i1 %1358, true
  %1360 = zext i1 %1359 to i64
  %1361 = select i1 %1358, i64 2, i64 3
  %1362 = select i1 %1357, i64 %1360, i64 %1361
  %1363 = getelementptr inbounds i32, i32* %9, i64 %1362
  %1364 = load i32, i32* %1363, align 4
  %1365 = load i32*, i32** %10, align 8
  %1366 = sext i16 %1355 to i64
  %1367 = getelementptr inbounds i32, i32* %1365, i64 %1366
  %1368 = load i32, i32* %1367, align 4
  %1369 = add nsw i32 %1368, %1364
  %1370 = getelementptr inbounds i32*, i32** %10, i64 1
  %1371 = load i32*, i32** %1370, align 8
  %1372 = sext i16 %1356 to i64
  %1373 = getelementptr inbounds i32, i32* %1371, i64 %1372
  %1374 = load i32, i32* %1373, align 4
  %1375 = add nsw i32 %1369, %1374
  %1376 = sext i32 %1375 to i64
  %1377 = sext i32 %4 to i64
  %1378 = mul nsw i64 %1376, %1377
  %1379 = add nsw i64 %1378, 8192
  %1380 = lshr i64 %1379, 14
  br label %1381

1381:                                             ; preds = %1350, %1354
  %1382 = phi i64 [ %1380, %1354 ], [ 0, %1350 ]
  %1383 = shl i64 %1382, 32
  %1384 = ashr exact i64 %1383, 32
  %1385 = add nsw i64 %1384, %1352
  %1386 = icmp sgt i64 %1385, 2147483646
  br i1 %1386, label %1525, label %1387

1387:                                             ; preds = %1381
  %1388 = trunc i64 %1385 to i32
  %1389 = icmp ugt i32 %1241, %1388
  br i1 %1389, label %1390, label %1525

1390:                                             ; preds = %1387
  store i32 %1351, i32* %11, align 4
  %1391 = load i32, i32* %18, align 4
  store i32 %1391, i32* %12, align 4
  br label %1525

1392:                                             ; preds = %1239
  br i1 %961, label %1525, label %1393

1393:                                             ; preds = %1392
  %1394 = or i32 %41, 4
  %1395 = icmp slt i32 %1394, %74
  %1396 = icmp sgt i32 %1394, %76
  %1397 = or i1 %1395, %1396
  br i1 %1397, label %1525, label %1398

1398:                                             ; preds = %1393
  %1399 = trunc i32 %1394 to i16
  %1400 = trunc i32 %958 to i16
  %1401 = icmp eq i8* %13, null
  br i1 %1401, label %1402, label %1410

1402:                                             ; preds = %1398
  %1403 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1404 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1403, align 8
  %1405 = ashr i32 %958, 3
  %1406 = add nsw i32 %1405, %30
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds i8, i8* %36, i64 %1407
  %1409 = call i32 %1404(i8* %1408, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1418

1410:                                             ; preds = %1398
  %1411 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1412 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1411, align 8
  %1413 = ashr i32 %958, 3
  %1414 = add nsw i32 %1413, %30
  %1415 = sext i32 %1414 to i64
  %1416 = getelementptr inbounds i8, i8* %36, i64 %1415
  %1417 = call i32 %1412(i8* %1416, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1418

1418:                                             ; preds = %1410, %1402
  %1419 = phi i32 [ %1409, %1402 ], [ %1417, %1410 ]
  %1420 = sext i32 %1419 to i64
  %1421 = icmp eq i32** %10, null
  br i1 %1421, label %1449, label %1422

1422:                                             ; preds = %1418
  %1423 = sub i16 %1399, %38
  %1424 = sub i16 %1400, %40
  %1425 = icmp eq i16 %1423, 0
  %1426 = icmp eq i16 %1424, 0
  %1427 = xor i1 %1426, true
  %1428 = zext i1 %1427 to i64
  %1429 = select i1 %1426, i64 2, i64 3
  %1430 = select i1 %1425, i64 %1428, i64 %1429
  %1431 = getelementptr inbounds i32, i32* %9, i64 %1430
  %1432 = load i32, i32* %1431, align 4
  %1433 = load i32*, i32** %10, align 8
  %1434 = sext i16 %1423 to i64
  %1435 = getelementptr inbounds i32, i32* %1433, i64 %1434
  %1436 = load i32, i32* %1435, align 4
  %1437 = add nsw i32 %1436, %1432
  %1438 = getelementptr inbounds i32*, i32** %10, i64 1
  %1439 = load i32*, i32** %1438, align 8
  %1440 = sext i16 %1424 to i64
  %1441 = getelementptr inbounds i32, i32* %1439, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = add nsw i32 %1437, %1442
  %1444 = sext i32 %1443 to i64
  %1445 = sext i32 %4 to i64
  %1446 = mul nsw i64 %1444, %1445
  %1447 = add nsw i64 %1446, 8192
  %1448 = lshr i64 %1447, 14
  br label %1449

1449:                                             ; preds = %1418, %1422
  %1450 = phi i64 [ %1448, %1422 ], [ 0, %1418 ]
  %1451 = shl i64 %1450, 32
  %1452 = ashr exact i64 %1451, 32
  %1453 = add nsw i64 %1452, %1420
  %1454 = icmp sgt i64 %1453, 2147483646
  br i1 %1454, label %1525, label %1455

1455:                                             ; preds = %1449
  %1456 = trunc i64 %1453 to i32
  %1457 = icmp ugt i32 %1241, %1456
  br i1 %1457, label %1458, label %1525

1458:                                             ; preds = %1455
  store i32 %1419, i32* %11, align 4
  %1459 = load i32, i32* %18, align 4
  store i32 %1459, i32* %12, align 4
  br label %1525

1460:                                             ; preds = %1239
  br i1 %1035, label %1525, label %1461

1461:                                             ; preds = %1460
  %1462 = or i32 %41, 4
  %1463 = icmp slt i32 %1462, %74
  %1464 = icmp sgt i32 %1462, %76
  %1465 = or i1 %1463, %1464
  br i1 %1465, label %1525, label %1466

1466:                                             ; preds = %1461
  %1467 = trunc i32 %1462 to i16
  %1468 = trunc i32 %1032 to i16
  %1469 = icmp eq i8* %13, null
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1466
  %1471 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1472 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1471, align 8
  %1473 = sext i32 %34 to i64
  %1474 = getelementptr inbounds i8, i8* %36, i64 %1473
  %1475 = call i32 %1472(i8* %1474, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1482

1476:                                             ; preds = %1466
  %1477 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1478 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1477, align 8
  %1479 = sext i32 %34 to i64
  %1480 = getelementptr inbounds i8, i8* %36, i64 %1479
  %1481 = call i32 %1478(i8* %1480, i32 %26, i32 4, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1482

1482:                                             ; preds = %1476, %1470
  %1483 = phi i32 [ %1475, %1470 ], [ %1481, %1476 ]
  %1484 = sext i32 %1483 to i64
  %1485 = icmp eq i32** %10, null
  br i1 %1485, label %1513, label %1486

1486:                                             ; preds = %1482
  %1487 = sub i16 %1467, %38
  %1488 = sub i16 %1468, %40
  %1489 = icmp eq i16 %1487, 0
  %1490 = icmp eq i16 %1488, 0
  %1491 = xor i1 %1490, true
  %1492 = zext i1 %1491 to i64
  %1493 = select i1 %1490, i64 2, i64 3
  %1494 = select i1 %1489, i64 %1492, i64 %1493
  %1495 = getelementptr inbounds i32, i32* %9, i64 %1494
  %1496 = load i32, i32* %1495, align 4
  %1497 = load i32*, i32** %10, align 8
  %1498 = sext i16 %1487 to i64
  %1499 = getelementptr inbounds i32, i32* %1497, i64 %1498
  %1500 = load i32, i32* %1499, align 4
  %1501 = add nsw i32 %1500, %1496
  %1502 = getelementptr inbounds i32*, i32** %10, i64 1
  %1503 = load i32*, i32** %1502, align 8
  %1504 = sext i16 %1488 to i64
  %1505 = getelementptr inbounds i32, i32* %1503, i64 %1504
  %1506 = load i32, i32* %1505, align 4
  %1507 = add nsw i32 %1501, %1506
  %1508 = sext i32 %1507 to i64
  %1509 = sext i32 %4 to i64
  %1510 = mul nsw i64 %1508, %1509
  %1511 = add nsw i64 %1510, 8192
  %1512 = lshr i64 %1511, 14
  br label %1513

1513:                                             ; preds = %1482, %1486
  %1514 = phi i64 [ %1512, %1486 ], [ 0, %1482 ]
  %1515 = shl i64 %1514, 32
  %1516 = ashr exact i64 %1515, 32
  %1517 = add nsw i64 %1516, %1484
  %1518 = icmp sgt i64 %1517, 2147483646
  br i1 %1518, label %1525, label %1519

1519:                                             ; preds = %1513
  %1520 = trunc i64 %1517 to i32
  %1521 = icmp ugt i32 %1241, %1520
  br i1 %1521, label %1522, label %1525

1522:                                             ; preds = %1519
  store i32 %1483, i32* %11, align 4
  %1523 = load i32, i32* %18, align 4
  store i32 %1523, i32* %12, align 4
  br label %1525

1524:                                             ; preds = %1239
  unreachable

1525:                                             ; preds = %1522, %1519, %1513, %1458, %1455, %1449, %1390, %1387, %1381, %1320, %1317, %1311, %1461, %1460, %1393, %1392, %1323, %1322, %1251, %1250
  %1526 = phi i32 [ %1241, %1250 ], [ %1241, %1251 ], [ %1241, %1322 ], [ %1241, %1323 ], [ %1241, %1392 ], [ %1241, %1393 ], [ %1241, %1460 ], [ %1241, %1461 ], [ %1318, %1320 ], [ %1241, %1317 ], [ %1241, %1311 ], [ %1388, %1390 ], [ %1241, %1387 ], [ %1241, %1381 ], [ %1456, %1458 ], [ %1241, %1455 ], [ %1241, %1449 ], [ %1520, %1522 ], [ %1241, %1519 ], [ %1241, %1513 ]
  %1527 = phi i32 [ %1242, %1250 ], [ %1242, %1251 ], [ %1242, %1322 ], [ %1242, %1323 ], [ %1242, %1392 ], [ %1242, %1393 ], [ %1242, %1460 ], [ %1242, %1461 ], [ %1252, %1320 ], [ %1242, %1317 ], [ %1242, %1311 ], [ %1324, %1390 ], [ %1242, %1387 ], [ %1242, %1381 ], [ %1394, %1458 ], [ %1242, %1455 ], [ %1242, %1449 ], [ %1462, %1522 ], [ %1242, %1519 ], [ %1242, %1513 ]
  %1528 = phi i32 [ %1243, %1250 ], [ %1243, %1251 ], [ %1243, %1322 ], [ %1243, %1323 ], [ %1243, %1392 ], [ %1243, %1393 ], [ %1243, %1460 ], [ %1243, %1461 ], [ %958, %1320 ], [ %1243, %1317 ], [ %1243, %1311 ], [ %1032, %1390 ], [ %1243, %1387 ], [ %1243, %1381 ], [ %958, %1458 ], [ %1243, %1455 ], [ %1243, %1449 ], [ %1032, %1522 ], [ %1243, %1519 ], [ %1243, %1513 ]
  %1529 = icmp ugt i32 %7, 1
  br i1 %1529, label %1530, label %2308

1530:                                             ; preds = %1525
  %1531 = icmp ne i32 %1527, %41
  %1532 = xor i1 %1531, true
  %1533 = icmp eq i32 %1528, %42
  %1534 = or i1 %1533, %1532
  br i1 %1534, label %1699, label %1535

1535:                                             ; preds = %1530
  %1536 = sub nsw i32 %1527, %41
  %1537 = sub nsw i32 %1528, %42
  %1538 = shl nsw i32 %1537, 1
  %1539 = add nsw i32 %1538, %42
  %1540 = icmp slt i32 %1539, %70
  %1541 = icmp sgt i32 %1539, %72
  %1542 = or i1 %1540, %1541
  %1543 = icmp slt i32 %1527, %74
  %1544 = or i1 %1543, %1542
  %1545 = icmp sgt i32 %1527, %76
  %1546 = or i1 %1545, %1544
  br i1 %1546, label %1617, label %1547

1547:                                             ; preds = %1535
  %1548 = trunc i32 %1527 to i16
  %1549 = trunc i32 %1539 to i16
  %1550 = icmp eq i8* %13, null
  br i1 %1550, label %1551, label %1563

1551:                                             ; preds = %1547
  %1552 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1553 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1552, align 8
  %1554 = ashr i32 %1527, 3
  %1555 = mul nsw i32 %1554, %26
  %1556 = ashr i32 %1539, 3
  %1557 = add nsw i32 %1556, %1555
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds i8, i8* %36, i64 %1558
  %1560 = and i32 %1539, 6
  %1561 = and i32 %1527, 7
  %1562 = call i32 %1553(i8* %1559, i32 %26, i32 %1560, i32 %1561, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1575

1563:                                             ; preds = %1547
  %1564 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1565 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1564, align 8
  %1566 = ashr i32 %1527, 3
  %1567 = mul nsw i32 %1566, %26
  %1568 = ashr i32 %1539, 3
  %1569 = add nsw i32 %1568, %1567
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds i8, i8* %36, i64 %1570
  %1572 = and i32 %1539, 6
  %1573 = and i32 %1527, 7
  %1574 = call i32 %1565(i8* %1571, i32 %26, i32 %1572, i32 %1573, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1575

1575:                                             ; preds = %1563, %1551
  %1576 = phi i32 [ %1562, %1551 ], [ %1574, %1563 ]
  %1577 = sext i32 %1576 to i64
  %1578 = icmp eq i32** %10, null
  br i1 %1578, label %1606, label %1579

1579:                                             ; preds = %1575
  %1580 = sub i16 %1548, %38
  %1581 = sub i16 %1549, %40
  %1582 = icmp eq i16 %1580, 0
  %1583 = icmp eq i16 %1581, 0
  %1584 = xor i1 %1583, true
  %1585 = zext i1 %1584 to i64
  %1586 = select i1 %1583, i64 2, i64 3
  %1587 = select i1 %1582, i64 %1585, i64 %1586
  %1588 = getelementptr inbounds i32, i32* %9, i64 %1587
  %1589 = load i32, i32* %1588, align 4
  %1590 = load i32*, i32** %10, align 8
  %1591 = sext i16 %1580 to i64
  %1592 = getelementptr inbounds i32, i32* %1590, i64 %1591
  %1593 = load i32, i32* %1592, align 4
  %1594 = add nsw i32 %1593, %1589
  %1595 = getelementptr inbounds i32*, i32** %10, i64 1
  %1596 = load i32*, i32** %1595, align 8
  %1597 = sext i16 %1581 to i64
  %1598 = getelementptr inbounds i32, i32* %1596, i64 %1597
  %1599 = load i32, i32* %1598, align 4
  %1600 = add nsw i32 %1594, %1599
  %1601 = sext i32 %1600 to i64
  %1602 = sext i32 %4 to i64
  %1603 = mul nsw i64 %1601, %1602
  %1604 = add nsw i64 %1603, 8192
  %1605 = lshr i64 %1604, 14
  br label %1606

1606:                                             ; preds = %1575, %1579
  %1607 = phi i64 [ %1605, %1579 ], [ 0, %1575 ]
  %1608 = shl i64 %1607, 32
  %1609 = ashr exact i64 %1608, 32
  %1610 = add nsw i64 %1609, %1577
  %1611 = icmp sgt i64 %1610, 2147483646
  br i1 %1611, label %1617, label %1612

1612:                                             ; preds = %1606
  %1613 = trunc i64 %1610 to i32
  %1614 = icmp ugt i32 %1526, %1613
  br i1 %1614, label %1615, label %1617

1615:                                             ; preds = %1612
  store i32 %1576, i32* %11, align 4
  %1616 = load i32, i32* %18, align 4
  store i32 %1616, i32* %12, align 4
  br label %1617

1617:                                             ; preds = %1615, %1612, %1606, %1535
  %1618 = phi i32 [ %1526, %1535 ], [ %1613, %1615 ], [ %1526, %1612 ], [ %1526, %1606 ]
  %1619 = phi i32 [ %1528, %1535 ], [ %1539, %1615 ], [ %1528, %1612 ], [ %1528, %1606 ]
  %1620 = icmp slt i32 %1528, %70
  %1621 = icmp sgt i32 %1528, %72
  %1622 = or i1 %1620, %1621
  br i1 %1622, label %2308, label %1623

1623:                                             ; preds = %1617
  %1624 = shl nsw i32 %1536, 1
  %1625 = add nsw i32 %1624, %41
  %1626 = icmp slt i32 %1625, %74
  %1627 = icmp sgt i32 %1625, %76
  %1628 = or i1 %1626, %1627
  br i1 %1628, label %2308, label %1629

1629:                                             ; preds = %1623
  %1630 = trunc i32 %1625 to i16
  %1631 = trunc i32 %1528 to i16
  %1632 = icmp eq i8* %13, null
  br i1 %1632, label %1633, label %1645

1633:                                             ; preds = %1629
  %1634 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1635 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1634, align 8
  %1636 = ashr i32 %1625, 3
  %1637 = mul nsw i32 %1636, %26
  %1638 = ashr i32 %1528, 3
  %1639 = add nsw i32 %1637, %1638
  %1640 = sext i32 %1639 to i64
  %1641 = getelementptr inbounds i8, i8* %36, i64 %1640
  %1642 = and i32 %1528, 7
  %1643 = and i32 %1625, 6
  %1644 = call i32 %1635(i8* %1641, i32 %26, i32 %1642, i32 %1643, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1657

1645:                                             ; preds = %1629
  %1646 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1647 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1646, align 8
  %1648 = ashr i32 %1625, 3
  %1649 = mul nsw i32 %1648, %26
  %1650 = ashr i32 %1528, 3
  %1651 = add nsw i32 %1649, %1650
  %1652 = sext i32 %1651 to i64
  %1653 = getelementptr inbounds i8, i8* %36, i64 %1652
  %1654 = and i32 %1528, 7
  %1655 = and i32 %1625, 6
  %1656 = call i32 %1647(i8* %1653, i32 %26, i32 %1654, i32 %1655, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1657

1657:                                             ; preds = %1645, %1633
  %1658 = phi i32 [ %1644, %1633 ], [ %1656, %1645 ]
  %1659 = sext i32 %1658 to i64
  %1660 = icmp eq i32** %10, null
  br i1 %1660, label %1688, label %1661

1661:                                             ; preds = %1657
  %1662 = sub i16 %1630, %38
  %1663 = sub i16 %1631, %40
  %1664 = icmp eq i16 %1662, 0
  %1665 = icmp eq i16 %1663, 0
  %1666 = xor i1 %1665, true
  %1667 = zext i1 %1666 to i64
  %1668 = select i1 %1665, i64 2, i64 3
  %1669 = select i1 %1664, i64 %1667, i64 %1668
  %1670 = getelementptr inbounds i32, i32* %9, i64 %1669
  %1671 = load i32, i32* %1670, align 4
  %1672 = load i32*, i32** %10, align 8
  %1673 = sext i16 %1662 to i64
  %1674 = getelementptr inbounds i32, i32* %1672, i64 %1673
  %1675 = load i32, i32* %1674, align 4
  %1676 = add nsw i32 %1675, %1671
  %1677 = getelementptr inbounds i32*, i32** %10, i64 1
  %1678 = load i32*, i32** %1677, align 8
  %1679 = sext i16 %1663 to i64
  %1680 = getelementptr inbounds i32, i32* %1678, i64 %1679
  %1681 = load i32, i32* %1680, align 4
  %1682 = add nsw i32 %1676, %1681
  %1683 = sext i32 %1682 to i64
  %1684 = sext i32 %4 to i64
  %1685 = mul nsw i64 %1683, %1684
  %1686 = add nsw i64 %1685, 8192
  %1687 = lshr i64 %1686, 14
  br label %1688

1688:                                             ; preds = %1657, %1661
  %1689 = phi i64 [ %1687, %1661 ], [ 0, %1657 ]
  %1690 = shl i64 %1689, 32
  %1691 = ashr exact i64 %1690, 32
  %1692 = add nsw i64 %1691, %1659
  %1693 = icmp sgt i64 %1692, 2147483646
  br i1 %1693, label %2308, label %1694

1694:                                             ; preds = %1688
  %1695 = trunc i64 %1692 to i32
  %1696 = icmp ugt i32 %1618, %1695
  br i1 %1696, label %1697, label %2308

1697:                                             ; preds = %1694
  store i32 %1658, i32* %11, align 4
  %1698 = load i32, i32* %18, align 4
  store i32 %1698, i32* %12, align 4
  br label %2308

1699:                                             ; preds = %1530
  %1700 = or i1 %1531, %1533
  br i1 %1700, label %2005, label %1701

1701:                                             ; preds = %1699
  %1702 = sub nsw i32 %1528, %42
  %1703 = shl nsw i32 %1702, 1
  %1704 = add nsw i32 %1703, %42
  %1705 = icmp slt i32 %1704, %70
  %1706 = icmp sgt i32 %1704, %72
  %1707 = or i1 %1705, %1706
  br i1 %1707, label %1853, label %1708

1708:                                             ; preds = %1701
  %1709 = or i32 %41, 4
  %1710 = icmp slt i32 %1709, %74
  %1711 = icmp sgt i32 %1709, %76
  %1712 = or i1 %1710, %1711
  br i1 %1712, label %1777, label %1713

1713:                                             ; preds = %1708
  %1714 = trunc i32 %1709 to i16
  %1715 = trunc i32 %1704 to i16
  %1716 = icmp eq i8* %13, null
  br i1 %1716, label %1717, label %1726

1717:                                             ; preds = %1713
  %1718 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1719 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1718, align 8
  %1720 = ashr i32 %1704, 3
  %1721 = add nsw i32 %1720, %30
  %1722 = sext i32 %1721 to i64
  %1723 = getelementptr inbounds i8, i8* %36, i64 %1722
  %1724 = and i32 %1704, 6
  %1725 = call i32 %1719(i8* %1723, i32 %26, i32 %1724, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1735

1726:                                             ; preds = %1713
  %1727 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1728 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1727, align 8
  %1729 = ashr i32 %1704, 3
  %1730 = add nsw i32 %1729, %30
  %1731 = sext i32 %1730 to i64
  %1732 = getelementptr inbounds i8, i8* %36, i64 %1731
  %1733 = and i32 %1704, 6
  %1734 = call i32 %1728(i8* %1732, i32 %26, i32 %1733, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1735

1735:                                             ; preds = %1726, %1717
  %1736 = phi i32 [ %1725, %1717 ], [ %1734, %1726 ]
  %1737 = sext i32 %1736 to i64
  %1738 = icmp eq i32** %10, null
  br i1 %1738, label %1766, label %1739

1739:                                             ; preds = %1735
  %1740 = sub i16 %1714, %38
  %1741 = sub i16 %1715, %40
  %1742 = icmp eq i16 %1740, 0
  %1743 = icmp eq i16 %1741, 0
  %1744 = xor i1 %1743, true
  %1745 = zext i1 %1744 to i64
  %1746 = select i1 %1743, i64 2, i64 3
  %1747 = select i1 %1742, i64 %1745, i64 %1746
  %1748 = getelementptr inbounds i32, i32* %9, i64 %1747
  %1749 = load i32, i32* %1748, align 4
  %1750 = load i32*, i32** %10, align 8
  %1751 = sext i16 %1740 to i64
  %1752 = getelementptr inbounds i32, i32* %1750, i64 %1751
  %1753 = load i32, i32* %1752, align 4
  %1754 = add nsw i32 %1753, %1749
  %1755 = getelementptr inbounds i32*, i32** %10, i64 1
  %1756 = load i32*, i32** %1755, align 8
  %1757 = sext i16 %1741 to i64
  %1758 = getelementptr inbounds i32, i32* %1756, i64 %1757
  %1759 = load i32, i32* %1758, align 4
  %1760 = add nsw i32 %1754, %1759
  %1761 = sext i32 %1760 to i64
  %1762 = sext i32 %4 to i64
  %1763 = mul nsw i64 %1761, %1762
  %1764 = add nsw i64 %1763, 8192
  %1765 = lshr i64 %1764, 14
  br label %1766

1766:                                             ; preds = %1735, %1739
  %1767 = phi i64 [ %1765, %1739 ], [ 0, %1735 ]
  %1768 = shl i64 %1767, 32
  %1769 = ashr exact i64 %1768, 32
  %1770 = add nsw i64 %1769, %1737
  %1771 = icmp sgt i64 %1770, 2147483646
  br i1 %1771, label %1777, label %1772

1772:                                             ; preds = %1766
  %1773 = trunc i64 %1770 to i32
  %1774 = icmp ugt i32 %1526, %1773
  br i1 %1774, label %1775, label %1777

1775:                                             ; preds = %1772
  store i32 %1736, i32* %11, align 4
  %1776 = load i32, i32* %18, align 4
  store i32 %1776, i32* %12, align 4
  br label %1777

1777:                                             ; preds = %1775, %1772, %1766, %1708
  %1778 = phi i32 [ %1526, %1766 ], [ %1526, %1772 ], [ %1773, %1775 ], [ %1526, %1708 ]
  %1779 = phi i32 [ %41, %1766 ], [ %41, %1772 ], [ %1709, %1775 ], [ %41, %1708 ]
  %1780 = phi i32 [ %1528, %1766 ], [ %1528, %1772 ], [ %1704, %1775 ], [ %1528, %1708 ]
  %1781 = add nsw i32 %41, -4
  %1782 = icmp slt i32 %1781, %74
  %1783 = icmp sgt i32 %1781, %76
  %1784 = or i1 %1782, %1783
  br i1 %1784, label %1853, label %1785

1785:                                             ; preds = %1777
  %1786 = trunc i32 %1781 to i16
  %1787 = trunc i32 %1704 to i16
  %1788 = icmp eq i8* %13, null
  br i1 %1788, label %1789, label %1800

1789:                                             ; preds = %1785
  %1790 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1791 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1790, align 8
  %1792 = ashr i32 %1781, 3
  %1793 = mul nsw i32 %1792, %26
  %1794 = ashr i32 %1704, 3
  %1795 = add nsw i32 %1794, %1793
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds i8, i8* %36, i64 %1796
  %1798 = and i32 %1704, 6
  %1799 = call i32 %1791(i8* %1797, i32 %26, i32 %1798, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1811

1800:                                             ; preds = %1785
  %1801 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1802 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1801, align 8
  %1803 = ashr i32 %1781, 3
  %1804 = mul nsw i32 %1803, %26
  %1805 = ashr i32 %1704, 3
  %1806 = add nsw i32 %1805, %1804
  %1807 = sext i32 %1806 to i64
  %1808 = getelementptr inbounds i8, i8* %36, i64 %1807
  %1809 = and i32 %1704, 6
  %1810 = call i32 %1802(i8* %1808, i32 %26, i32 %1809, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1811

1811:                                             ; preds = %1800, %1789
  %1812 = phi i32 [ %1799, %1789 ], [ %1810, %1800 ]
  %1813 = sext i32 %1812 to i64
  %1814 = icmp eq i32** %10, null
  br i1 %1814, label %1842, label %1815

1815:                                             ; preds = %1811
  %1816 = sub i16 %1786, %38
  %1817 = sub i16 %1787, %40
  %1818 = icmp eq i16 %1816, 0
  %1819 = icmp eq i16 %1817, 0
  %1820 = xor i1 %1819, true
  %1821 = zext i1 %1820 to i64
  %1822 = select i1 %1819, i64 2, i64 3
  %1823 = select i1 %1818, i64 %1821, i64 %1822
  %1824 = getelementptr inbounds i32, i32* %9, i64 %1823
  %1825 = load i32, i32* %1824, align 4
  %1826 = load i32*, i32** %10, align 8
  %1827 = sext i16 %1816 to i64
  %1828 = getelementptr inbounds i32, i32* %1826, i64 %1827
  %1829 = load i32, i32* %1828, align 4
  %1830 = add nsw i32 %1829, %1825
  %1831 = getelementptr inbounds i32*, i32** %10, i64 1
  %1832 = load i32*, i32** %1831, align 8
  %1833 = sext i16 %1817 to i64
  %1834 = getelementptr inbounds i32, i32* %1832, i64 %1833
  %1835 = load i32, i32* %1834, align 4
  %1836 = add nsw i32 %1830, %1835
  %1837 = sext i32 %1836 to i64
  %1838 = sext i32 %4 to i64
  %1839 = mul nsw i64 %1837, %1838
  %1840 = add nsw i64 %1839, 8192
  %1841 = lshr i64 %1840, 14
  br label %1842

1842:                                             ; preds = %1811, %1815
  %1843 = phi i64 [ %1841, %1815 ], [ 0, %1811 ]
  %1844 = shl i64 %1843, 32
  %1845 = ashr exact i64 %1844, 32
  %1846 = add nsw i64 %1845, %1813
  %1847 = icmp sgt i64 %1846, 2147483646
  br i1 %1847, label %1853, label %1848

1848:                                             ; preds = %1842
  %1849 = trunc i64 %1846 to i32
  %1850 = icmp ugt i32 %1778, %1849
  br i1 %1850, label %1851, label %1853

1851:                                             ; preds = %1848
  store i32 %1812, i32* %11, align 4
  %1852 = load i32, i32* %18, align 4
  store i32 %1852, i32* %12, align 4
  br label %1853

1853:                                             ; preds = %1851, %1848, %1842, %1701, %1777
  %1854 = phi i32 [ %1778, %1777 ], [ %1526, %1701 ], [ %1849, %1851 ], [ %1778, %1848 ], [ %1778, %1842 ]
  %1855 = phi i32 [ %1779, %1777 ], [ %41, %1701 ], [ %1781, %1851 ], [ %1779, %1848 ], [ %1779, %1842 ]
  %1856 = phi i32 [ %1780, %1777 ], [ %1528, %1701 ], [ %1704, %1851 ], [ %1780, %1848 ], [ %1780, %1842 ]
  %1857 = icmp ult i32 %1249, 2
  %1858 = icmp slt i32 %1528, %70
  %1859 = icmp sgt i32 %1528, %72
  %1860 = or i1 %1858, %1859
  br i1 %1857, label %1861, label %1931

1861:                                             ; preds = %1853
  br i1 %1860, label %2308, label %1862

1862:                                             ; preds = %1861
  %1863 = or i32 %41, 4
  %1864 = icmp slt i32 %1863, %74
  %1865 = icmp sgt i32 %1863, %76
  %1866 = or i1 %1864, %1865
  br i1 %1866, label %2308, label %1867

1867:                                             ; preds = %1862
  %1868 = trunc i32 %1863 to i16
  %1869 = trunc i32 %1528 to i16
  %1870 = icmp eq i8* %13, null
  br i1 %1870, label %1871, label %1880

1871:                                             ; preds = %1867
  %1872 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1873 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1872, align 8
  %1874 = ashr i32 %1528, 3
  %1875 = add nsw i32 %1874, %30
  %1876 = sext i32 %1875 to i64
  %1877 = getelementptr inbounds i8, i8* %36, i64 %1876
  %1878 = and i32 %1528, 7
  %1879 = call i32 %1873(i8* %1877, i32 %26, i32 %1878, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1889

1880:                                             ; preds = %1867
  %1881 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1882 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1881, align 8
  %1883 = ashr i32 %1528, 3
  %1884 = add nsw i32 %1883, %30
  %1885 = sext i32 %1884 to i64
  %1886 = getelementptr inbounds i8, i8* %36, i64 %1885
  %1887 = and i32 %1528, 7
  %1888 = call i32 %1882(i8* %1886, i32 %26, i32 %1887, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1889

1889:                                             ; preds = %1880, %1871
  %1890 = phi i32 [ %1879, %1871 ], [ %1888, %1880 ]
  %1891 = sext i32 %1890 to i64
  %1892 = icmp eq i32** %10, null
  br i1 %1892, label %1920, label %1893

1893:                                             ; preds = %1889
  %1894 = sub i16 %1868, %38
  %1895 = sub i16 %1869, %40
  %1896 = icmp eq i16 %1894, 0
  %1897 = icmp eq i16 %1895, 0
  %1898 = xor i1 %1897, true
  %1899 = zext i1 %1898 to i64
  %1900 = select i1 %1897, i64 2, i64 3
  %1901 = select i1 %1896, i64 %1899, i64 %1900
  %1902 = getelementptr inbounds i32, i32* %9, i64 %1901
  %1903 = load i32, i32* %1902, align 4
  %1904 = load i32*, i32** %10, align 8
  %1905 = sext i16 %1894 to i64
  %1906 = getelementptr inbounds i32, i32* %1904, i64 %1905
  %1907 = load i32, i32* %1906, align 4
  %1908 = add nsw i32 %1907, %1903
  %1909 = getelementptr inbounds i32*, i32** %10, i64 1
  %1910 = load i32*, i32** %1909, align 8
  %1911 = sext i16 %1895 to i64
  %1912 = getelementptr inbounds i32, i32* %1910, i64 %1911
  %1913 = load i32, i32* %1912, align 4
  %1914 = add nsw i32 %1908, %1913
  %1915 = sext i32 %1914 to i64
  %1916 = sext i32 %4 to i64
  %1917 = mul nsw i64 %1915, %1916
  %1918 = add nsw i64 %1917, 8192
  %1919 = lshr i64 %1918, 14
  br label %1920

1920:                                             ; preds = %1889, %1893
  %1921 = phi i64 [ %1919, %1893 ], [ 0, %1889 ]
  %1922 = shl i64 %1921, 32
  %1923 = ashr exact i64 %1922, 32
  %1924 = add nsw i64 %1923, %1891
  %1925 = icmp sgt i64 %1924, 2147483646
  br i1 %1925, label %2308, label %1926

1926:                                             ; preds = %1920
  %1927 = trunc i64 %1924 to i32
  %1928 = icmp ugt i32 %1854, %1927
  br i1 %1928, label %1929, label %2308

1929:                                             ; preds = %1926
  store i32 %1890, i32* %11, align 4
  %1930 = load i32, i32* %18, align 4
  store i32 %1930, i32* %12, align 4
  br label %2308

1931:                                             ; preds = %1853
  br i1 %1860, label %2308, label %1932

1932:                                             ; preds = %1931
  %1933 = add nsw i32 %41, -4
  %1934 = icmp slt i32 %1933, %74
  %1935 = icmp sgt i32 %1933, %76
  %1936 = or i1 %1934, %1935
  br i1 %1936, label %2308, label %1937

1937:                                             ; preds = %1932
  %1938 = trunc i32 %1933 to i16
  %1939 = trunc i32 %1528 to i16
  %1940 = icmp eq i8* %13, null
  br i1 %1940, label %1941, label %1952

1941:                                             ; preds = %1937
  %1942 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %1943 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %1942, align 8
  %1944 = ashr i32 %1933, 3
  %1945 = mul nsw i32 %1944, %26
  %1946 = ashr i32 %1528, 3
  %1947 = add nsw i32 %1946, %1945
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds i8, i8* %36, i64 %1948
  %1950 = and i32 %1528, 7
  %1951 = call i32 %1943(i8* %1949, i32 %26, i32 %1950, i32 4, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %1963

1952:                                             ; preds = %1937
  %1953 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %1954 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %1953, align 8
  %1955 = ashr i32 %1933, 3
  %1956 = mul nsw i32 %1955, %26
  %1957 = ashr i32 %1528, 3
  %1958 = add nsw i32 %1957, %1956
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds i8, i8* %36, i64 %1959
  %1961 = and i32 %1528, 7
  %1962 = call i32 %1954(i8* %1960, i32 %26, i32 %1961, i32 4, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %1963

1963:                                             ; preds = %1952, %1941
  %1964 = phi i32 [ %1951, %1941 ], [ %1962, %1952 ]
  %1965 = sext i32 %1964 to i64
  %1966 = icmp eq i32** %10, null
  br i1 %1966, label %1994, label %1967

1967:                                             ; preds = %1963
  %1968 = sub i16 %1938, %38
  %1969 = sub i16 %1939, %40
  %1970 = icmp eq i16 %1968, 0
  %1971 = icmp eq i16 %1969, 0
  %1972 = xor i1 %1971, true
  %1973 = zext i1 %1972 to i64
  %1974 = select i1 %1971, i64 2, i64 3
  %1975 = select i1 %1970, i64 %1973, i64 %1974
  %1976 = getelementptr inbounds i32, i32* %9, i64 %1975
  %1977 = load i32, i32* %1976, align 4
  %1978 = load i32*, i32** %10, align 8
  %1979 = sext i16 %1968 to i64
  %1980 = getelementptr inbounds i32, i32* %1978, i64 %1979
  %1981 = load i32, i32* %1980, align 4
  %1982 = add nsw i32 %1981, %1977
  %1983 = getelementptr inbounds i32*, i32** %10, i64 1
  %1984 = load i32*, i32** %1983, align 8
  %1985 = sext i16 %1969 to i64
  %1986 = getelementptr inbounds i32, i32* %1984, i64 %1985
  %1987 = load i32, i32* %1986, align 4
  %1988 = add nsw i32 %1982, %1987
  %1989 = sext i32 %1988 to i64
  %1990 = sext i32 %4 to i64
  %1991 = mul nsw i64 %1989, %1990
  %1992 = add nsw i64 %1991, 8192
  %1993 = lshr i64 %1992, 14
  br label %1994

1994:                                             ; preds = %1963, %1967
  %1995 = phi i64 [ %1993, %1967 ], [ 0, %1963 ]
  %1996 = shl i64 %1995, 32
  %1997 = ashr exact i64 %1996, 32
  %1998 = add nsw i64 %1997, %1965
  %1999 = icmp sgt i64 %1998, 2147483646
  br i1 %1999, label %2308, label %2000

2000:                                             ; preds = %1994
  %2001 = trunc i64 %1998 to i32
  %2002 = icmp ugt i32 %1854, %2001
  br i1 %2002, label %2003, label %2308

2003:                                             ; preds = %2000
  store i32 %1964, i32* %11, align 4
  %2004 = load i32, i32* %18, align 4
  store i32 %2004, i32* %12, align 4
  br label %2308

2005:                                             ; preds = %1699
  %2006 = and i1 %1531, %1533
  br i1 %2006, label %2007, label %2308

2007:                                             ; preds = %2005
  %2008 = sub nsw i32 %1527, %41
  br i1 %1035, label %2081, label %2009

2009:                                             ; preds = %2007
  %2010 = shl nsw i32 %2008, 1
  %2011 = add nsw i32 %2010, %41
  %2012 = icmp slt i32 %2011, %74
  %2013 = icmp sgt i32 %2011, %76
  %2014 = or i1 %2012, %2013
  br i1 %2014, label %2081, label %2015

2015:                                             ; preds = %2009
  %2016 = trunc i32 %2011 to i16
  %2017 = trunc i32 %1032 to i16
  %2018 = icmp eq i8* %13, null
  br i1 %2018, label %2019, label %2029

2019:                                             ; preds = %2015
  %2020 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2021 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2020, align 8
  %2022 = ashr i32 %2011, 3
  %2023 = mul nsw i32 %2022, %26
  %2024 = add nsw i32 %2023, %33
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds i8, i8* %36, i64 %2025
  %2027 = and i32 %2011, 6
  %2028 = call i32 %2021(i8* %2026, i32 %26, i32 4, i32 %2027, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2039

2029:                                             ; preds = %2015
  %2030 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2031 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2030, align 8
  %2032 = ashr i32 %2011, 3
  %2033 = mul nsw i32 %2032, %26
  %2034 = add nsw i32 %2033, %33
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds i8, i8* %36, i64 %2035
  %2037 = and i32 %2011, 6
  %2038 = call i32 %2031(i8* %2036, i32 %26, i32 4, i32 %2037, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2039

2039:                                             ; preds = %2029, %2019
  %2040 = phi i32 [ %2028, %2019 ], [ %2038, %2029 ]
  %2041 = sext i32 %2040 to i64
  %2042 = icmp eq i32** %10, null
  br i1 %2042, label %2070, label %2043

2043:                                             ; preds = %2039
  %2044 = sub i16 %2016, %38
  %2045 = sub i16 %2017, %40
  %2046 = icmp eq i16 %2044, 0
  %2047 = icmp eq i16 %2045, 0
  %2048 = xor i1 %2047, true
  %2049 = zext i1 %2048 to i64
  %2050 = select i1 %2047, i64 2, i64 3
  %2051 = select i1 %2046, i64 %2049, i64 %2050
  %2052 = getelementptr inbounds i32, i32* %9, i64 %2051
  %2053 = load i32, i32* %2052, align 4
  %2054 = load i32*, i32** %10, align 8
  %2055 = sext i16 %2044 to i64
  %2056 = getelementptr inbounds i32, i32* %2054, i64 %2055
  %2057 = load i32, i32* %2056, align 4
  %2058 = add nsw i32 %2057, %2053
  %2059 = getelementptr inbounds i32*, i32** %10, i64 1
  %2060 = load i32*, i32** %2059, align 8
  %2061 = sext i16 %2045 to i64
  %2062 = getelementptr inbounds i32, i32* %2060, i64 %2061
  %2063 = load i32, i32* %2062, align 4
  %2064 = add nsw i32 %2058, %2063
  %2065 = sext i32 %2064 to i64
  %2066 = sext i32 %4 to i64
  %2067 = mul nsw i64 %2065, %2066
  %2068 = add nsw i64 %2067, 8192
  %2069 = lshr i64 %2068, 14
  br label %2070

2070:                                             ; preds = %2039, %2043
  %2071 = phi i64 [ %2069, %2043 ], [ 0, %2039 ]
  %2072 = shl i64 %2071, 32
  %2073 = ashr exact i64 %2072, 32
  %2074 = add nsw i64 %2073, %2041
  %2075 = icmp sgt i64 %2074, 2147483646
  br i1 %2075, label %2081, label %2076

2076:                                             ; preds = %2070
  %2077 = trunc i64 %2074 to i32
  %2078 = icmp ugt i32 %1526, %2077
  br i1 %2078, label %2079, label %2081

2079:                                             ; preds = %2076
  store i32 %2040, i32* %11, align 4
  %2080 = load i32, i32* %18, align 4
  store i32 %2080, i32* %12, align 4
  br label %2081

2081:                                             ; preds = %2079, %2076, %2070, %2009, %2007
  %2082 = phi i32 [ %1526, %2007 ], [ %1526, %2009 ], [ %2077, %2079 ], [ %1526, %2076 ], [ %1526, %2070 ]
  %2083 = phi i32 [ %1527, %2007 ], [ %1527, %2009 ], [ %2011, %2079 ], [ %1527, %2076 ], [ %1527, %2070 ]
  %2084 = phi i32 [ %42, %2007 ], [ %42, %2009 ], [ %1032, %2079 ], [ %42, %2076 ], [ %42, %2070 ]
  br i1 %961, label %2159, label %2085

2085:                                             ; preds = %2081
  %2086 = shl nsw i32 %2008, 1
  %2087 = add nsw i32 %2086, %41
  %2088 = icmp slt i32 %2087, %74
  %2089 = icmp sgt i32 %2087, %76
  %2090 = or i1 %2088, %2089
  br i1 %2090, label %2159, label %2091

2091:                                             ; preds = %2085
  %2092 = trunc i32 %2087 to i16
  %2093 = trunc i32 %958 to i16
  %2094 = icmp eq i8* %13, null
  br i1 %2094, label %2095, label %2106

2095:                                             ; preds = %2091
  %2096 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2097 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2096, align 8
  %2098 = ashr i32 %2087, 3
  %2099 = mul nsw i32 %2098, %26
  %2100 = ashr i32 %958, 3
  %2101 = add nsw i32 %2099, %2100
  %2102 = sext i32 %2101 to i64
  %2103 = getelementptr inbounds i8, i8* %36, i64 %2102
  %2104 = and i32 %2087, 6
  %2105 = call i32 %2097(i8* %2103, i32 %26, i32 4, i32 %2104, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2117

2106:                                             ; preds = %2091
  %2107 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2108 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2107, align 8
  %2109 = ashr i32 %2087, 3
  %2110 = mul nsw i32 %2109, %26
  %2111 = ashr i32 %958, 3
  %2112 = add nsw i32 %2110, %2111
  %2113 = sext i32 %2112 to i64
  %2114 = getelementptr inbounds i8, i8* %36, i64 %2113
  %2115 = and i32 %2087, 6
  %2116 = call i32 %2108(i8* %2114, i32 %26, i32 4, i32 %2115, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2117

2117:                                             ; preds = %2106, %2095
  %2118 = phi i32 [ %2105, %2095 ], [ %2116, %2106 ]
  %2119 = sext i32 %2118 to i64
  %2120 = icmp eq i32** %10, null
  br i1 %2120, label %2148, label %2121

2121:                                             ; preds = %2117
  %2122 = sub i16 %2092, %38
  %2123 = sub i16 %2093, %40
  %2124 = icmp eq i16 %2122, 0
  %2125 = icmp eq i16 %2123, 0
  %2126 = xor i1 %2125, true
  %2127 = zext i1 %2126 to i64
  %2128 = select i1 %2125, i64 2, i64 3
  %2129 = select i1 %2124, i64 %2127, i64 %2128
  %2130 = getelementptr inbounds i32, i32* %9, i64 %2129
  %2131 = load i32, i32* %2130, align 4
  %2132 = load i32*, i32** %10, align 8
  %2133 = sext i16 %2122 to i64
  %2134 = getelementptr inbounds i32, i32* %2132, i64 %2133
  %2135 = load i32, i32* %2134, align 4
  %2136 = add nsw i32 %2135, %2131
  %2137 = getelementptr inbounds i32*, i32** %10, i64 1
  %2138 = load i32*, i32** %2137, align 8
  %2139 = sext i16 %2123 to i64
  %2140 = getelementptr inbounds i32, i32* %2138, i64 %2139
  %2141 = load i32, i32* %2140, align 4
  %2142 = add nsw i32 %2136, %2141
  %2143 = sext i32 %2142 to i64
  %2144 = sext i32 %4 to i64
  %2145 = mul nsw i64 %2143, %2144
  %2146 = add nsw i64 %2145, 8192
  %2147 = lshr i64 %2146, 14
  br label %2148

2148:                                             ; preds = %2117, %2121
  %2149 = phi i64 [ %2147, %2121 ], [ 0, %2117 ]
  %2150 = shl i64 %2149, 32
  %2151 = ashr exact i64 %2150, 32
  %2152 = add nsw i64 %2151, %2119
  %2153 = icmp sgt i64 %2152, 2147483646
  br i1 %2153, label %2159, label %2154

2154:                                             ; preds = %2148
  %2155 = trunc i64 %2152 to i32
  %2156 = icmp ugt i32 %2082, %2155
  br i1 %2156, label %2157, label %2159

2157:                                             ; preds = %2154
  store i32 %2118, i32* %11, align 4
  %2158 = load i32, i32* %18, align 4
  store i32 %2158, i32* %12, align 4
  br label %2159

2159:                                             ; preds = %2157, %2154, %2148, %2085, %2081
  %2160 = phi i32 [ %2082, %2081 ], [ %2082, %2085 ], [ %2155, %2157 ], [ %2082, %2154 ], [ %2082, %2148 ]
  %2161 = phi i32 [ %2083, %2081 ], [ %2083, %2085 ], [ %2087, %2157 ], [ %2083, %2154 ], [ %2083, %2148 ]
  %2162 = phi i32 [ %2084, %2081 ], [ %2084, %2085 ], [ %958, %2157 ], [ %2084, %2154 ], [ %2084, %2148 ]
  switch i32 %1249, label %2307 [
    i32 0, label %2163
    i32 2, label %2163
    i32 1, label %2234
    i32 3, label %2234
  ]

2163:                                             ; preds = %2159, %2159
  %2164 = icmp slt i32 %1527, %74
  %2165 = or i1 %1035, %2164
  %2166 = icmp sgt i32 %1527, %76
  %2167 = or i1 %2166, %2165
  br i1 %2167, label %2308, label %2168

2168:                                             ; preds = %2163
  %2169 = trunc i32 %1527 to i16
  %2170 = trunc i32 %1032 to i16
  %2171 = icmp eq i8* %13, null
  br i1 %2171, label %2172, label %2182

2172:                                             ; preds = %2168
  %2173 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2174 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2173, align 8
  %2175 = ashr i32 %1527, 3
  %2176 = mul nsw i32 %2175, %26
  %2177 = add nsw i32 %2176, %33
  %2178 = sext i32 %2177 to i64
  %2179 = getelementptr inbounds i8, i8* %36, i64 %2178
  %2180 = and i32 %1527, 7
  %2181 = call i32 %2174(i8* %2179, i32 %26, i32 4, i32 %2180, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2192

2182:                                             ; preds = %2168
  %2183 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2184 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2183, align 8
  %2185 = ashr i32 %1527, 3
  %2186 = mul nsw i32 %2185, %26
  %2187 = add nsw i32 %2186, %33
  %2188 = sext i32 %2187 to i64
  %2189 = getelementptr inbounds i8, i8* %36, i64 %2188
  %2190 = and i32 %1527, 7
  %2191 = call i32 %2184(i8* %2189, i32 %26, i32 4, i32 %2190, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2192

2192:                                             ; preds = %2182, %2172
  %2193 = phi i32 [ %2181, %2172 ], [ %2191, %2182 ]
  %2194 = sext i32 %2193 to i64
  %2195 = icmp eq i32** %10, null
  br i1 %2195, label %2223, label %2196

2196:                                             ; preds = %2192
  %2197 = sub i16 %2169, %38
  %2198 = sub i16 %2170, %40
  %2199 = icmp eq i16 %2197, 0
  %2200 = icmp eq i16 %2198, 0
  %2201 = xor i1 %2200, true
  %2202 = zext i1 %2201 to i64
  %2203 = select i1 %2200, i64 2, i64 3
  %2204 = select i1 %2199, i64 %2202, i64 %2203
  %2205 = getelementptr inbounds i32, i32* %9, i64 %2204
  %2206 = load i32, i32* %2205, align 4
  %2207 = load i32*, i32** %10, align 8
  %2208 = sext i16 %2197 to i64
  %2209 = getelementptr inbounds i32, i32* %2207, i64 %2208
  %2210 = load i32, i32* %2209, align 4
  %2211 = add nsw i32 %2210, %2206
  %2212 = getelementptr inbounds i32*, i32** %10, i64 1
  %2213 = load i32*, i32** %2212, align 8
  %2214 = sext i16 %2198 to i64
  %2215 = getelementptr inbounds i32, i32* %2213, i64 %2214
  %2216 = load i32, i32* %2215, align 4
  %2217 = add nsw i32 %2211, %2216
  %2218 = sext i32 %2217 to i64
  %2219 = sext i32 %4 to i64
  %2220 = mul nsw i64 %2218, %2219
  %2221 = add nsw i64 %2220, 8192
  %2222 = lshr i64 %2221, 14
  br label %2223

2223:                                             ; preds = %2192, %2196
  %2224 = phi i64 [ %2222, %2196 ], [ 0, %2192 ]
  %2225 = shl i64 %2224, 32
  %2226 = ashr exact i64 %2225, 32
  %2227 = add nsw i64 %2226, %2194
  %2228 = icmp sgt i64 %2227, 2147483646
  br i1 %2228, label %2308, label %2229

2229:                                             ; preds = %2223
  %2230 = trunc i64 %2227 to i32
  %2231 = icmp ugt i32 %2160, %2230
  br i1 %2231, label %2232, label %2308

2232:                                             ; preds = %2229
  store i32 %2193, i32* %11, align 4
  %2233 = load i32, i32* %18, align 4
  store i32 %2233, i32* %12, align 4
  br label %2308

2234:                                             ; preds = %2159, %2159
  %2235 = icmp slt i32 %1527, %74
  %2236 = or i1 %961, %2235
  %2237 = icmp sgt i32 %1527, %76
  %2238 = or i1 %2237, %2236
  br i1 %2238, label %2308, label %2239

2239:                                             ; preds = %2234
  %2240 = trunc i32 %1527 to i16
  %2241 = trunc i32 %958 to i16
  %2242 = icmp eq i8* %13, null
  br i1 %2242, label %2243, label %2254

2243:                                             ; preds = %2239
  %2244 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2245 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2244, align 8
  %2246 = ashr i32 %1527, 3
  %2247 = mul nsw i32 %2246, %26
  %2248 = ashr i32 %958, 3
  %2249 = add nsw i32 %2247, %2248
  %2250 = sext i32 %2249 to i64
  %2251 = getelementptr inbounds i8, i8* %36, i64 %2250
  %2252 = and i32 %1527, 7
  %2253 = call i32 %2245(i8* %2251, i32 %26, i32 4, i32 %2252, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2265

2254:                                             ; preds = %2239
  %2255 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2256 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2255, align 8
  %2257 = ashr i32 %1527, 3
  %2258 = mul nsw i32 %2257, %26
  %2259 = ashr i32 %958, 3
  %2260 = add nsw i32 %2258, %2259
  %2261 = sext i32 %2260 to i64
  %2262 = getelementptr inbounds i8, i8* %36, i64 %2261
  %2263 = and i32 %1527, 7
  %2264 = call i32 %2256(i8* %2262, i32 %26, i32 4, i32 %2263, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2265

2265:                                             ; preds = %2254, %2243
  %2266 = phi i32 [ %2253, %2243 ], [ %2264, %2254 ]
  %2267 = sext i32 %2266 to i64
  %2268 = icmp eq i32** %10, null
  br i1 %2268, label %2296, label %2269

2269:                                             ; preds = %2265
  %2270 = sub i16 %2240, %38
  %2271 = sub i16 %2241, %40
  %2272 = icmp eq i16 %2270, 0
  %2273 = icmp eq i16 %2271, 0
  %2274 = xor i1 %2273, true
  %2275 = zext i1 %2274 to i64
  %2276 = select i1 %2273, i64 2, i64 3
  %2277 = select i1 %2272, i64 %2275, i64 %2276
  %2278 = getelementptr inbounds i32, i32* %9, i64 %2277
  %2279 = load i32, i32* %2278, align 4
  %2280 = load i32*, i32** %10, align 8
  %2281 = sext i16 %2270 to i64
  %2282 = getelementptr inbounds i32, i32* %2280, i64 %2281
  %2283 = load i32, i32* %2282, align 4
  %2284 = add nsw i32 %2283, %2279
  %2285 = getelementptr inbounds i32*, i32** %10, i64 1
  %2286 = load i32*, i32** %2285, align 8
  %2287 = sext i16 %2271 to i64
  %2288 = getelementptr inbounds i32, i32* %2286, i64 %2287
  %2289 = load i32, i32* %2288, align 4
  %2290 = add nsw i32 %2284, %2289
  %2291 = sext i32 %2290 to i64
  %2292 = sext i32 %4 to i64
  %2293 = mul nsw i64 %2291, %2292
  %2294 = add nsw i64 %2293, 8192
  %2295 = lshr i64 %2294, 14
  br label %2296

2296:                                             ; preds = %2265, %2269
  %2297 = phi i64 [ %2295, %2269 ], [ 0, %2265 ]
  %2298 = shl i64 %2297, 32
  %2299 = ashr exact i64 %2298, 32
  %2300 = add nsw i64 %2299, %2267
  %2301 = icmp sgt i64 %2300, 2147483646
  br i1 %2301, label %2308, label %2302

2302:                                             ; preds = %2296
  %2303 = trunc i64 %2300 to i32
  %2304 = icmp ugt i32 %2160, %2303
  br i1 %2304, label %2305, label %2308

2305:                                             ; preds = %2302
  store i32 %2266, i32* %11, align 4
  %2306 = load i32, i32* %18, align 4
  store i32 %2306, i32* %12, align 4
  br label %2308

2307:                                             ; preds = %2159
  unreachable

2308:                                             ; preds = %2305, %2302, %2296, %2232, %2229, %2223, %2003, %2000, %1994, %1929, %1926, %1920, %1697, %1694, %1688, %954, %951, %945, %739, %736, %730, %518, %515, %509, %315, %312, %306, %2005, %1623, %1617, %1862, %1861, %1932, %1931, %2163, %2234, %246, %250, %453, %457, %666, %670, %883, %887, %1525
  %2309 = phi i32 [ %1526, %1525 ], [ %247, %246 ], [ %247, %250 ], [ %454, %453 ], [ %454, %457 ], [ %667, %666 ], [ %667, %670 ], [ %884, %883 ], [ %884, %887 ], [ %1526, %2005 ], [ %1618, %1623 ], [ %1618, %1617 ], [ %1854, %1862 ], [ %1854, %1861 ], [ %1854, %1932 ], [ %1854, %1931 ], [ %2160, %2163 ], [ %2160, %2234 ], [ %313, %315 ], [ %247, %312 ], [ %247, %306 ], [ %516, %518 ], [ %454, %515 ], [ %454, %509 ], [ %737, %739 ], [ %667, %736 ], [ %667, %730 ], [ %952, %954 ], [ %884, %951 ], [ %884, %945 ], [ %1695, %1697 ], [ %1618, %1694 ], [ %1618, %1688 ], [ %1927, %1929 ], [ %1854, %1926 ], [ %1854, %1920 ], [ %2001, %2003 ], [ %1854, %2000 ], [ %1854, %1994 ], [ %2230, %2232 ], [ %2160, %2229 ], [ %2160, %2223 ], [ %2303, %2305 ], [ %2160, %2302 ], [ %2160, %2296 ]
  %2310 = phi i32 [ %1527, %1525 ], [ %248, %246 ], [ %248, %250 ], [ %455, %453 ], [ %455, %457 ], [ %668, %666 ], [ %668, %670 ], [ %885, %883 ], [ %885, %887 ], [ %1527, %2005 ], [ %1527, %1623 ], [ %1527, %1617 ], [ %1855, %1862 ], [ %1855, %1861 ], [ %1855, %1932 ], [ %1855, %1931 ], [ %2161, %2163 ], [ %2161, %2234 ], [ %251, %315 ], [ %248, %312 ], [ %248, %306 ], [ %458, %518 ], [ %455, %515 ], [ %455, %509 ], [ %671, %739 ], [ %668, %736 ], [ %668, %730 ], [ %888, %954 ], [ %885, %951 ], [ %885, %945 ], [ %1625, %1697 ], [ %1527, %1694 ], [ %1527, %1688 ], [ %1863, %1929 ], [ %1855, %1926 ], [ %1855, %1920 ], [ %1933, %2003 ], [ %1855, %2000 ], [ %1855, %1994 ], [ %1527, %2232 ], [ %2161, %2229 ], [ %2161, %2223 ], [ %1527, %2305 ], [ %2161, %2302 ], [ %2161, %2296 ]
  %2311 = phi i32 [ %1528, %1525 ], [ %249, %246 ], [ %249, %250 ], [ %456, %453 ], [ %456, %457 ], [ %669, %666 ], [ %669, %670 ], [ %886, %883 ], [ %886, %887 ], [ %1528, %2005 ], [ %1619, %1623 ], [ %1619, %1617 ], [ %1856, %1862 ], [ %1856, %1861 ], [ %1856, %1932 ], [ %1856, %1931 ], [ %2162, %2163 ], [ %2162, %2234 ], [ %107, %315 ], [ %249, %312 ], [ %249, %306 ], [ %318, %518 ], [ %456, %515 ], [ %456, %509 ], [ %521, %739 ], [ %669, %736 ], [ %669, %730 ], [ %742, %954 ], [ %886, %951 ], [ %886, %945 ], [ %1528, %1697 ], [ %1619, %1694 ], [ %1619, %1688 ], [ %1528, %1929 ], [ %1856, %1926 ], [ %1856, %1920 ], [ %1528, %2003 ], [ %1856, %2000 ], [ %1856, %1994 ], [ %1032, %2232 ], [ %2162, %2229 ], [ %2162, %2223 ], [ %958, %2305 ], [ %2162, %2302 ], [ %2162, %2296 ]
  %2312 = icmp eq i32 %6, 2
  br i1 %2312, label %3760, label %2313

2313:                                             ; preds = %2308
  %2314 = add nsw i32 %2311, -2
  %2315 = icmp slt i32 %2314, %70
  %2316 = icmp sgt i32 %2314, %72
  %2317 = or i1 %2315, %2316
  %2318 = icmp slt i32 %2310, %74
  %2319 = or i1 %2318, %2317
  %2320 = icmp sgt i32 %2310, %76
  %2321 = or i1 %2320, %2319
  br i1 %2321, label %2392, label %2322

2322:                                             ; preds = %2313
  %2323 = trunc i32 %2310 to i16
  %2324 = trunc i32 %2314 to i16
  %2325 = icmp eq i8* %13, null
  br i1 %2325, label %2326, label %2338

2326:                                             ; preds = %2322
  %2327 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2328 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2327, align 8
  %2329 = ashr i32 %2310, 3
  %2330 = mul nsw i32 %2329, %26
  %2331 = ashr i32 %2314, 3
  %2332 = add nsw i32 %2331, %2330
  %2333 = sext i32 %2332 to i64
  %2334 = getelementptr inbounds i8, i8* %36, i64 %2333
  %2335 = and i32 %2314, 7
  %2336 = and i32 %2310, 7
  %2337 = call i32 %2328(i8* %2334, i32 %26, i32 %2335, i32 %2336, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2350

2338:                                             ; preds = %2322
  %2339 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2340 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2339, align 8
  %2341 = ashr i32 %2310, 3
  %2342 = mul nsw i32 %2341, %26
  %2343 = ashr i32 %2314, 3
  %2344 = add nsw i32 %2343, %2342
  %2345 = sext i32 %2344 to i64
  %2346 = getelementptr inbounds i8, i8* %36, i64 %2345
  %2347 = and i32 %2314, 7
  %2348 = and i32 %2310, 7
  %2349 = call i32 %2340(i8* %2346, i32 %26, i32 %2347, i32 %2348, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2350

2350:                                             ; preds = %2338, %2326
  %2351 = phi i32 [ %2337, %2326 ], [ %2349, %2338 ]
  %2352 = sext i32 %2351 to i64
  %2353 = icmp eq i32** %10, null
  br i1 %2353, label %2381, label %2354

2354:                                             ; preds = %2350
  %2355 = sub i16 %2323, %38
  %2356 = sub i16 %2324, %40
  %2357 = icmp eq i16 %2355, 0
  %2358 = icmp eq i16 %2356, 0
  %2359 = xor i1 %2358, true
  %2360 = zext i1 %2359 to i64
  %2361 = select i1 %2358, i64 2, i64 3
  %2362 = select i1 %2357, i64 %2360, i64 %2361
  %2363 = getelementptr inbounds i32, i32* %9, i64 %2362
  %2364 = load i32, i32* %2363, align 4
  %2365 = load i32*, i32** %10, align 8
  %2366 = sext i16 %2355 to i64
  %2367 = getelementptr inbounds i32, i32* %2365, i64 %2366
  %2368 = load i32, i32* %2367, align 4
  %2369 = add nsw i32 %2368, %2364
  %2370 = getelementptr inbounds i32*, i32** %10, i64 1
  %2371 = load i32*, i32** %2370, align 8
  %2372 = sext i16 %2356 to i64
  %2373 = getelementptr inbounds i32, i32* %2371, i64 %2372
  %2374 = load i32, i32* %2373, align 4
  %2375 = add nsw i32 %2369, %2374
  %2376 = sext i32 %2375 to i64
  %2377 = sext i32 %4 to i64
  %2378 = mul nsw i64 %2376, %2377
  %2379 = add nsw i64 %2378, 8192
  %2380 = lshr i64 %2379, 14
  br label %2381

2381:                                             ; preds = %2350, %2354
  %2382 = phi i64 [ %2380, %2354 ], [ 0, %2350 ]
  %2383 = shl i64 %2382, 32
  %2384 = ashr exact i64 %2383, 32
  %2385 = add nsw i64 %2384, %2352
  %2386 = icmp sgt i64 %2385, 2147483646
  br i1 %2386, label %2392, label %2387

2387:                                             ; preds = %2381
  %2388 = trunc i64 %2385 to i32
  %2389 = icmp ugt i32 %2309, %2388
  br i1 %2389, label %2390, label %2392

2390:                                             ; preds = %2387
  store i32 %2351, i32* %11, align 4
  %2391 = load i32, i32* %18, align 4
  store i32 %2391, i32* %12, align 4
  br label %2392

2392:                                             ; preds = %2390, %2387, %2381, %2313
  %2393 = phi i32 [ %2309, %2313 ], [ %2388, %2390 ], [ %2309, %2387 ], [ %2309, %2381 ]
  %2394 = phi i32 [ %2311, %2313 ], [ %2314, %2390 ], [ %2311, %2387 ], [ %2311, %2381 ]
  %2395 = phi i32 [ 2147483647, %2313 ], [ %2388, %2390 ], [ %2388, %2387 ], [ 2147483647, %2381 ]
  %2396 = add nsw i32 %2311, 2
  %2397 = icmp slt i32 %2396, %70
  %2398 = icmp sgt i32 %2396, %72
  %2399 = or i1 %2397, %2398
  %2400 = or i1 %2318, %2399
  %2401 = or i1 %2320, %2400
  br i1 %2401, label %2472, label %2402

2402:                                             ; preds = %2392
  %2403 = trunc i32 %2310 to i16
  %2404 = trunc i32 %2396 to i16
  %2405 = icmp eq i8* %13, null
  br i1 %2405, label %2406, label %2418

2406:                                             ; preds = %2402
  %2407 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2408 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2407, align 8
  %2409 = ashr i32 %2310, 3
  %2410 = mul nsw i32 %2409, %26
  %2411 = ashr i32 %2396, 3
  %2412 = add nsw i32 %2411, %2410
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds i8, i8* %36, i64 %2413
  %2415 = and i32 %2396, 7
  %2416 = and i32 %2310, 7
  %2417 = call i32 %2408(i8* %2414, i32 %26, i32 %2415, i32 %2416, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2430

2418:                                             ; preds = %2402
  %2419 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2420 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2419, align 8
  %2421 = ashr i32 %2310, 3
  %2422 = mul nsw i32 %2421, %26
  %2423 = ashr i32 %2396, 3
  %2424 = add nsw i32 %2423, %2422
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds i8, i8* %36, i64 %2425
  %2427 = and i32 %2396, 7
  %2428 = and i32 %2310, 7
  %2429 = call i32 %2420(i8* %2426, i32 %26, i32 %2427, i32 %2428, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2430

2430:                                             ; preds = %2418, %2406
  %2431 = phi i32 [ %2417, %2406 ], [ %2429, %2418 ]
  %2432 = sext i32 %2431 to i64
  %2433 = icmp eq i32** %10, null
  br i1 %2433, label %2461, label %2434

2434:                                             ; preds = %2430
  %2435 = sub i16 %2403, %38
  %2436 = sub i16 %2404, %40
  %2437 = icmp eq i16 %2435, 0
  %2438 = icmp eq i16 %2436, 0
  %2439 = xor i1 %2438, true
  %2440 = zext i1 %2439 to i64
  %2441 = select i1 %2438, i64 2, i64 3
  %2442 = select i1 %2437, i64 %2440, i64 %2441
  %2443 = getelementptr inbounds i32, i32* %9, i64 %2442
  %2444 = load i32, i32* %2443, align 4
  %2445 = load i32*, i32** %10, align 8
  %2446 = sext i16 %2435 to i64
  %2447 = getelementptr inbounds i32, i32* %2445, i64 %2446
  %2448 = load i32, i32* %2447, align 4
  %2449 = add nsw i32 %2448, %2444
  %2450 = getelementptr inbounds i32*, i32** %10, i64 1
  %2451 = load i32*, i32** %2450, align 8
  %2452 = sext i16 %2436 to i64
  %2453 = getelementptr inbounds i32, i32* %2451, i64 %2452
  %2454 = load i32, i32* %2453, align 4
  %2455 = add nsw i32 %2449, %2454
  %2456 = sext i32 %2455 to i64
  %2457 = sext i32 %4 to i64
  %2458 = mul nsw i64 %2456, %2457
  %2459 = add nsw i64 %2458, 8192
  %2460 = lshr i64 %2459, 14
  br label %2461

2461:                                             ; preds = %2430, %2434
  %2462 = phi i64 [ %2460, %2434 ], [ 0, %2430 ]
  %2463 = shl i64 %2462, 32
  %2464 = ashr exact i64 %2463, 32
  %2465 = add nsw i64 %2464, %2432
  %2466 = icmp sgt i64 %2465, 2147483646
  br i1 %2466, label %2472, label %2467

2467:                                             ; preds = %2461
  %2468 = trunc i64 %2465 to i32
  %2469 = icmp ugt i32 %2393, %2468
  br i1 %2469, label %2470, label %2472

2470:                                             ; preds = %2467
  store i32 %2431, i32* %11, align 4
  %2471 = load i32, i32* %18, align 4
  store i32 %2471, i32* %12, align 4
  br label %2472

2472:                                             ; preds = %2470, %2467, %2461, %2392
  %2473 = phi i32 [ %2393, %2392 ], [ %2468, %2470 ], [ %2393, %2467 ], [ %2393, %2461 ]
  %2474 = phi i32 [ %2394, %2392 ], [ %2396, %2470 ], [ %2394, %2467 ], [ %2394, %2461 ]
  %2475 = phi i32 [ 2147483647, %2392 ], [ %2468, %2470 ], [ %2468, %2467 ], [ 2147483647, %2461 ]
  %2476 = icmp slt i32 %2311, %70
  %2477 = icmp sgt i32 %2311, %72
  %2478 = or i1 %2476, %2477
  br i1 %2478, label %2633, label %2479

2479:                                             ; preds = %2472
  %2480 = add nsw i32 %2310, -2
  %2481 = icmp slt i32 %2480, %74
  %2482 = icmp sgt i32 %2480, %76
  %2483 = or i1 %2481, %2482
  br i1 %2483, label %2554, label %2484

2484:                                             ; preds = %2479
  %2485 = trunc i32 %2480 to i16
  %2486 = trunc i32 %2311 to i16
  %2487 = icmp eq i8* %13, null
  br i1 %2487, label %2488, label %2500

2488:                                             ; preds = %2484
  %2489 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2490 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2489, align 8
  %2491 = ashr i32 %2480, 3
  %2492 = mul nsw i32 %2491, %26
  %2493 = ashr i32 %2311, 3
  %2494 = add nsw i32 %2492, %2493
  %2495 = sext i32 %2494 to i64
  %2496 = getelementptr inbounds i8, i8* %36, i64 %2495
  %2497 = and i32 %2311, 7
  %2498 = and i32 %2480, 7
  %2499 = call i32 %2490(i8* %2496, i32 %26, i32 %2497, i32 %2498, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2512

2500:                                             ; preds = %2484
  %2501 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2502 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2501, align 8
  %2503 = ashr i32 %2480, 3
  %2504 = mul nsw i32 %2503, %26
  %2505 = ashr i32 %2311, 3
  %2506 = add nsw i32 %2504, %2505
  %2507 = sext i32 %2506 to i64
  %2508 = getelementptr inbounds i8, i8* %36, i64 %2507
  %2509 = and i32 %2311, 7
  %2510 = and i32 %2480, 7
  %2511 = call i32 %2502(i8* %2508, i32 %26, i32 %2509, i32 %2510, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2512

2512:                                             ; preds = %2500, %2488
  %2513 = phi i32 [ %2499, %2488 ], [ %2511, %2500 ]
  %2514 = sext i32 %2513 to i64
  %2515 = icmp eq i32** %10, null
  br i1 %2515, label %2543, label %2516

2516:                                             ; preds = %2512
  %2517 = sub i16 %2485, %38
  %2518 = sub i16 %2486, %40
  %2519 = icmp eq i16 %2517, 0
  %2520 = icmp eq i16 %2518, 0
  %2521 = xor i1 %2520, true
  %2522 = zext i1 %2521 to i64
  %2523 = select i1 %2520, i64 2, i64 3
  %2524 = select i1 %2519, i64 %2522, i64 %2523
  %2525 = getelementptr inbounds i32, i32* %9, i64 %2524
  %2526 = load i32, i32* %2525, align 4
  %2527 = load i32*, i32** %10, align 8
  %2528 = sext i16 %2517 to i64
  %2529 = getelementptr inbounds i32, i32* %2527, i64 %2528
  %2530 = load i32, i32* %2529, align 4
  %2531 = add nsw i32 %2530, %2526
  %2532 = getelementptr inbounds i32*, i32** %10, i64 1
  %2533 = load i32*, i32** %2532, align 8
  %2534 = sext i16 %2518 to i64
  %2535 = getelementptr inbounds i32, i32* %2533, i64 %2534
  %2536 = load i32, i32* %2535, align 4
  %2537 = add nsw i32 %2531, %2536
  %2538 = sext i32 %2537 to i64
  %2539 = sext i32 %4 to i64
  %2540 = mul nsw i64 %2538, %2539
  %2541 = add nsw i64 %2540, 8192
  %2542 = lshr i64 %2541, 14
  br label %2543

2543:                                             ; preds = %2512, %2516
  %2544 = phi i64 [ %2542, %2516 ], [ 0, %2512 ]
  %2545 = shl i64 %2544, 32
  %2546 = ashr exact i64 %2545, 32
  %2547 = add nsw i64 %2546, %2514
  %2548 = icmp sgt i64 %2547, 2147483646
  br i1 %2548, label %2554, label %2549

2549:                                             ; preds = %2543
  %2550 = trunc i64 %2547 to i32
  %2551 = icmp ugt i32 %2473, %2550
  br i1 %2551, label %2552, label %2554

2552:                                             ; preds = %2549
  store i32 %2513, i32* %11, align 4
  %2553 = load i32, i32* %18, align 4
  store i32 %2553, i32* %12, align 4
  br label %2554

2554:                                             ; preds = %2552, %2549, %2543, %2479
  %2555 = phi i32 [ %2473, %2543 ], [ %2473, %2549 ], [ %2550, %2552 ], [ %2473, %2479 ]
  %2556 = phi i32 [ %2310, %2543 ], [ %2310, %2549 ], [ %2480, %2552 ], [ %2310, %2479 ]
  %2557 = phi i32 [ %2474, %2543 ], [ %2474, %2549 ], [ %2311, %2552 ], [ %2474, %2479 ]
  %2558 = phi i32 [ 2147483647, %2543 ], [ %2550, %2549 ], [ %2550, %2552 ], [ 2147483647, %2479 ]
  %2559 = add nsw i32 %2310, 2
  %2560 = icmp slt i32 %2559, %74
  %2561 = icmp sgt i32 %2559, %76
  %2562 = or i1 %2560, %2561
  br i1 %2562, label %2633, label %2563

2563:                                             ; preds = %2554
  %2564 = trunc i32 %2559 to i16
  %2565 = trunc i32 %2311 to i16
  %2566 = icmp eq i8* %13, null
  br i1 %2566, label %2567, label %2579

2567:                                             ; preds = %2563
  %2568 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2569 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2568, align 8
  %2570 = ashr i32 %2559, 3
  %2571 = mul nsw i32 %2570, %26
  %2572 = ashr i32 %2311, 3
  %2573 = add nsw i32 %2571, %2572
  %2574 = sext i32 %2573 to i64
  %2575 = getelementptr inbounds i8, i8* %36, i64 %2574
  %2576 = and i32 %2311, 7
  %2577 = and i32 %2559, 7
  %2578 = call i32 %2569(i8* %2575, i32 %26, i32 %2576, i32 %2577, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2591

2579:                                             ; preds = %2563
  %2580 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2581 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2580, align 8
  %2582 = ashr i32 %2559, 3
  %2583 = mul nsw i32 %2582, %26
  %2584 = ashr i32 %2311, 3
  %2585 = add nsw i32 %2583, %2584
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds i8, i8* %36, i64 %2586
  %2588 = and i32 %2311, 7
  %2589 = and i32 %2559, 7
  %2590 = call i32 %2581(i8* %2587, i32 %26, i32 %2588, i32 %2589, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2591

2591:                                             ; preds = %2579, %2567
  %2592 = phi i32 [ %2578, %2567 ], [ %2590, %2579 ]
  %2593 = sext i32 %2592 to i64
  %2594 = icmp eq i32** %10, null
  br i1 %2594, label %2622, label %2595

2595:                                             ; preds = %2591
  %2596 = sub i16 %2564, %38
  %2597 = sub i16 %2565, %40
  %2598 = icmp eq i16 %2596, 0
  %2599 = icmp eq i16 %2597, 0
  %2600 = xor i1 %2599, true
  %2601 = zext i1 %2600 to i64
  %2602 = select i1 %2599, i64 2, i64 3
  %2603 = select i1 %2598, i64 %2601, i64 %2602
  %2604 = getelementptr inbounds i32, i32* %9, i64 %2603
  %2605 = load i32, i32* %2604, align 4
  %2606 = load i32*, i32** %10, align 8
  %2607 = sext i16 %2596 to i64
  %2608 = getelementptr inbounds i32, i32* %2606, i64 %2607
  %2609 = load i32, i32* %2608, align 4
  %2610 = add nsw i32 %2609, %2605
  %2611 = getelementptr inbounds i32*, i32** %10, i64 1
  %2612 = load i32*, i32** %2611, align 8
  %2613 = sext i16 %2597 to i64
  %2614 = getelementptr inbounds i32, i32* %2612, i64 %2613
  %2615 = load i32, i32* %2614, align 4
  %2616 = add nsw i32 %2610, %2615
  %2617 = sext i32 %2616 to i64
  %2618 = sext i32 %4 to i64
  %2619 = mul nsw i64 %2617, %2618
  %2620 = add nsw i64 %2619, 8192
  %2621 = lshr i64 %2620, 14
  br label %2622

2622:                                             ; preds = %2591, %2595
  %2623 = phi i64 [ %2621, %2595 ], [ 0, %2591 ]
  %2624 = shl i64 %2623, 32
  %2625 = ashr exact i64 %2624, 32
  %2626 = add nsw i64 %2625, %2593
  %2627 = icmp sgt i64 %2626, 2147483646
  br i1 %2627, label %2633, label %2628

2628:                                             ; preds = %2622
  %2629 = trunc i64 %2626 to i32
  %2630 = icmp ugt i32 %2555, %2629
  br i1 %2630, label %2631, label %2633

2631:                                             ; preds = %2628
  store i32 %2592, i32* %11, align 4
  %2632 = load i32, i32* %18, align 4
  store i32 %2632, i32* %12, align 4
  br label %2633

2633:                                             ; preds = %2631, %2628, %2622, %2472, %2554
  %2634 = phi i32 [ %2558, %2554 ], [ 2147483647, %2472 ], [ %2558, %2622 ], [ %2558, %2628 ], [ %2558, %2631 ]
  %2635 = phi i32 [ %2555, %2554 ], [ %2473, %2472 ], [ %2555, %2622 ], [ %2555, %2628 ], [ %2629, %2631 ]
  %2636 = phi i32 [ %2556, %2554 ], [ %2310, %2472 ], [ %2556, %2622 ], [ %2556, %2628 ], [ %2559, %2631 ]
  %2637 = phi i32 [ %2557, %2554 ], [ %2474, %2472 ], [ %2557, %2622 ], [ %2557, %2628 ], [ %2311, %2631 ]
  %2638 = phi i32 [ 2147483647, %2554 ], [ 2147483647, %2472 ], [ 2147483647, %2622 ], [ %2629, %2628 ], [ %2629, %2631 ]
  %2639 = icmp uge i32 %2395, %2475
  %2640 = zext i1 %2639 to i32
  %2641 = icmp ult i32 %2634, %2638
  %2642 = select i1 %2641, i32 0, i32 2
  %2643 = or i32 %2642, %2640
  switch i32 %2643, label %2948 [
    i32 0, label %2644
    i32 1, label %2720
    i32 2, label %2796
    i32 3, label %2872
  ]

2644:                                             ; preds = %2633
  br i1 %2317, label %2949, label %2645

2645:                                             ; preds = %2644
  %2646 = add nsw i32 %2310, -2
  %2647 = icmp slt i32 %2646, %74
  %2648 = icmp sgt i32 %2646, %76
  %2649 = or i1 %2647, %2648
  br i1 %2649, label %2949, label %2650

2650:                                             ; preds = %2645
  %2651 = trunc i32 %2646 to i16
  %2652 = trunc i32 %2314 to i16
  %2653 = icmp eq i8* %13, null
  br i1 %2653, label %2654, label %2666

2654:                                             ; preds = %2650
  %2655 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2656 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2655, align 8
  %2657 = ashr i32 %2646, 3
  %2658 = mul nsw i32 %2657, %26
  %2659 = ashr i32 %2314, 3
  %2660 = add nsw i32 %2658, %2659
  %2661 = sext i32 %2660 to i64
  %2662 = getelementptr inbounds i8, i8* %36, i64 %2661
  %2663 = and i32 %2314, 7
  %2664 = and i32 %2646, 7
  %2665 = call i32 %2656(i8* %2662, i32 %26, i32 %2663, i32 %2664, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2678

2666:                                             ; preds = %2650
  %2667 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2668 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2667, align 8
  %2669 = ashr i32 %2646, 3
  %2670 = mul nsw i32 %2669, %26
  %2671 = ashr i32 %2314, 3
  %2672 = add nsw i32 %2670, %2671
  %2673 = sext i32 %2672 to i64
  %2674 = getelementptr inbounds i8, i8* %36, i64 %2673
  %2675 = and i32 %2314, 7
  %2676 = and i32 %2646, 7
  %2677 = call i32 %2668(i8* %2674, i32 %26, i32 %2675, i32 %2676, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2678

2678:                                             ; preds = %2666, %2654
  %2679 = phi i32 [ %2665, %2654 ], [ %2677, %2666 ]
  %2680 = sext i32 %2679 to i64
  %2681 = icmp eq i32** %10, null
  br i1 %2681, label %2709, label %2682

2682:                                             ; preds = %2678
  %2683 = sub i16 %2651, %38
  %2684 = sub i16 %2652, %40
  %2685 = icmp eq i16 %2683, 0
  %2686 = icmp eq i16 %2684, 0
  %2687 = xor i1 %2686, true
  %2688 = zext i1 %2687 to i64
  %2689 = select i1 %2686, i64 2, i64 3
  %2690 = select i1 %2685, i64 %2688, i64 %2689
  %2691 = getelementptr inbounds i32, i32* %9, i64 %2690
  %2692 = load i32, i32* %2691, align 4
  %2693 = load i32*, i32** %10, align 8
  %2694 = sext i16 %2683 to i64
  %2695 = getelementptr inbounds i32, i32* %2693, i64 %2694
  %2696 = load i32, i32* %2695, align 4
  %2697 = add nsw i32 %2696, %2692
  %2698 = getelementptr inbounds i32*, i32** %10, i64 1
  %2699 = load i32*, i32** %2698, align 8
  %2700 = sext i16 %2684 to i64
  %2701 = getelementptr inbounds i32, i32* %2699, i64 %2700
  %2702 = load i32, i32* %2701, align 4
  %2703 = add nsw i32 %2697, %2702
  %2704 = sext i32 %2703 to i64
  %2705 = sext i32 %4 to i64
  %2706 = mul nsw i64 %2704, %2705
  %2707 = add nsw i64 %2706, 8192
  %2708 = lshr i64 %2707, 14
  br label %2709

2709:                                             ; preds = %2678, %2682
  %2710 = phi i64 [ %2708, %2682 ], [ 0, %2678 ]
  %2711 = shl i64 %2710, 32
  %2712 = ashr exact i64 %2711, 32
  %2713 = add nsw i64 %2712, %2680
  %2714 = icmp sgt i64 %2713, 2147483646
  br i1 %2714, label %2949, label %2715

2715:                                             ; preds = %2709
  %2716 = trunc i64 %2713 to i32
  %2717 = icmp ugt i32 %2635, %2716
  br i1 %2717, label %2718, label %2949

2718:                                             ; preds = %2715
  store i32 %2679, i32* %11, align 4
  %2719 = load i32, i32* %18, align 4
  store i32 %2719, i32* %12, align 4
  br label %2949

2720:                                             ; preds = %2633
  br i1 %2399, label %2949, label %2721

2721:                                             ; preds = %2720
  %2722 = add nsw i32 %2310, -2
  %2723 = icmp slt i32 %2722, %74
  %2724 = icmp sgt i32 %2722, %76
  %2725 = or i1 %2723, %2724
  br i1 %2725, label %2949, label %2726

2726:                                             ; preds = %2721
  %2727 = trunc i32 %2722 to i16
  %2728 = trunc i32 %2396 to i16
  %2729 = icmp eq i8* %13, null
  br i1 %2729, label %2730, label %2742

2730:                                             ; preds = %2726
  %2731 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2732 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2731, align 8
  %2733 = ashr i32 %2722, 3
  %2734 = mul nsw i32 %2733, %26
  %2735 = ashr i32 %2396, 3
  %2736 = add nsw i32 %2734, %2735
  %2737 = sext i32 %2736 to i64
  %2738 = getelementptr inbounds i8, i8* %36, i64 %2737
  %2739 = and i32 %2396, 7
  %2740 = and i32 %2722, 7
  %2741 = call i32 %2732(i8* %2738, i32 %26, i32 %2739, i32 %2740, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2754

2742:                                             ; preds = %2726
  %2743 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2744 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2743, align 8
  %2745 = ashr i32 %2722, 3
  %2746 = mul nsw i32 %2745, %26
  %2747 = ashr i32 %2396, 3
  %2748 = add nsw i32 %2746, %2747
  %2749 = sext i32 %2748 to i64
  %2750 = getelementptr inbounds i8, i8* %36, i64 %2749
  %2751 = and i32 %2396, 7
  %2752 = and i32 %2722, 7
  %2753 = call i32 %2744(i8* %2750, i32 %26, i32 %2751, i32 %2752, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2754

2754:                                             ; preds = %2742, %2730
  %2755 = phi i32 [ %2741, %2730 ], [ %2753, %2742 ]
  %2756 = sext i32 %2755 to i64
  %2757 = icmp eq i32** %10, null
  br i1 %2757, label %2785, label %2758

2758:                                             ; preds = %2754
  %2759 = sub i16 %2727, %38
  %2760 = sub i16 %2728, %40
  %2761 = icmp eq i16 %2759, 0
  %2762 = icmp eq i16 %2760, 0
  %2763 = xor i1 %2762, true
  %2764 = zext i1 %2763 to i64
  %2765 = select i1 %2762, i64 2, i64 3
  %2766 = select i1 %2761, i64 %2764, i64 %2765
  %2767 = getelementptr inbounds i32, i32* %9, i64 %2766
  %2768 = load i32, i32* %2767, align 4
  %2769 = load i32*, i32** %10, align 8
  %2770 = sext i16 %2759 to i64
  %2771 = getelementptr inbounds i32, i32* %2769, i64 %2770
  %2772 = load i32, i32* %2771, align 4
  %2773 = add nsw i32 %2772, %2768
  %2774 = getelementptr inbounds i32*, i32** %10, i64 1
  %2775 = load i32*, i32** %2774, align 8
  %2776 = sext i16 %2760 to i64
  %2777 = getelementptr inbounds i32, i32* %2775, i64 %2776
  %2778 = load i32, i32* %2777, align 4
  %2779 = add nsw i32 %2773, %2778
  %2780 = sext i32 %2779 to i64
  %2781 = sext i32 %4 to i64
  %2782 = mul nsw i64 %2780, %2781
  %2783 = add nsw i64 %2782, 8192
  %2784 = lshr i64 %2783, 14
  br label %2785

2785:                                             ; preds = %2754, %2758
  %2786 = phi i64 [ %2784, %2758 ], [ 0, %2754 ]
  %2787 = shl i64 %2786, 32
  %2788 = ashr exact i64 %2787, 32
  %2789 = add nsw i64 %2788, %2756
  %2790 = icmp sgt i64 %2789, 2147483646
  br i1 %2790, label %2949, label %2791

2791:                                             ; preds = %2785
  %2792 = trunc i64 %2789 to i32
  %2793 = icmp ugt i32 %2635, %2792
  br i1 %2793, label %2794, label %2949

2794:                                             ; preds = %2791
  store i32 %2755, i32* %11, align 4
  %2795 = load i32, i32* %18, align 4
  store i32 %2795, i32* %12, align 4
  br label %2949

2796:                                             ; preds = %2633
  br i1 %2317, label %2949, label %2797

2797:                                             ; preds = %2796
  %2798 = add nsw i32 %2310, 2
  %2799 = icmp slt i32 %2798, %74
  %2800 = icmp sgt i32 %2798, %76
  %2801 = or i1 %2799, %2800
  br i1 %2801, label %2949, label %2802

2802:                                             ; preds = %2797
  %2803 = trunc i32 %2798 to i16
  %2804 = trunc i32 %2314 to i16
  %2805 = icmp eq i8* %13, null
  br i1 %2805, label %2806, label %2818

2806:                                             ; preds = %2802
  %2807 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2808 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2807, align 8
  %2809 = ashr i32 %2798, 3
  %2810 = mul nsw i32 %2809, %26
  %2811 = ashr i32 %2314, 3
  %2812 = add nsw i32 %2810, %2811
  %2813 = sext i32 %2812 to i64
  %2814 = getelementptr inbounds i8, i8* %36, i64 %2813
  %2815 = and i32 %2314, 7
  %2816 = and i32 %2798, 7
  %2817 = call i32 %2808(i8* %2814, i32 %26, i32 %2815, i32 %2816, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2830

2818:                                             ; preds = %2802
  %2819 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2820 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2819, align 8
  %2821 = ashr i32 %2798, 3
  %2822 = mul nsw i32 %2821, %26
  %2823 = ashr i32 %2314, 3
  %2824 = add nsw i32 %2822, %2823
  %2825 = sext i32 %2824 to i64
  %2826 = getelementptr inbounds i8, i8* %36, i64 %2825
  %2827 = and i32 %2314, 7
  %2828 = and i32 %2798, 7
  %2829 = call i32 %2820(i8* %2826, i32 %26, i32 %2827, i32 %2828, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2830

2830:                                             ; preds = %2818, %2806
  %2831 = phi i32 [ %2817, %2806 ], [ %2829, %2818 ]
  %2832 = sext i32 %2831 to i64
  %2833 = icmp eq i32** %10, null
  br i1 %2833, label %2861, label %2834

2834:                                             ; preds = %2830
  %2835 = sub i16 %2803, %38
  %2836 = sub i16 %2804, %40
  %2837 = icmp eq i16 %2835, 0
  %2838 = icmp eq i16 %2836, 0
  %2839 = xor i1 %2838, true
  %2840 = zext i1 %2839 to i64
  %2841 = select i1 %2838, i64 2, i64 3
  %2842 = select i1 %2837, i64 %2840, i64 %2841
  %2843 = getelementptr inbounds i32, i32* %9, i64 %2842
  %2844 = load i32, i32* %2843, align 4
  %2845 = load i32*, i32** %10, align 8
  %2846 = sext i16 %2835 to i64
  %2847 = getelementptr inbounds i32, i32* %2845, i64 %2846
  %2848 = load i32, i32* %2847, align 4
  %2849 = add nsw i32 %2848, %2844
  %2850 = getelementptr inbounds i32*, i32** %10, i64 1
  %2851 = load i32*, i32** %2850, align 8
  %2852 = sext i16 %2836 to i64
  %2853 = getelementptr inbounds i32, i32* %2851, i64 %2852
  %2854 = load i32, i32* %2853, align 4
  %2855 = add nsw i32 %2849, %2854
  %2856 = sext i32 %2855 to i64
  %2857 = sext i32 %4 to i64
  %2858 = mul nsw i64 %2856, %2857
  %2859 = add nsw i64 %2858, 8192
  %2860 = lshr i64 %2859, 14
  br label %2861

2861:                                             ; preds = %2830, %2834
  %2862 = phi i64 [ %2860, %2834 ], [ 0, %2830 ]
  %2863 = shl i64 %2862, 32
  %2864 = ashr exact i64 %2863, 32
  %2865 = add nsw i64 %2864, %2832
  %2866 = icmp sgt i64 %2865, 2147483646
  br i1 %2866, label %2949, label %2867

2867:                                             ; preds = %2861
  %2868 = trunc i64 %2865 to i32
  %2869 = icmp ugt i32 %2635, %2868
  br i1 %2869, label %2870, label %2949

2870:                                             ; preds = %2867
  store i32 %2831, i32* %11, align 4
  %2871 = load i32, i32* %18, align 4
  store i32 %2871, i32* %12, align 4
  br label %2949

2872:                                             ; preds = %2633
  br i1 %2399, label %2949, label %2873

2873:                                             ; preds = %2872
  %2874 = add nsw i32 %2310, 2
  %2875 = icmp slt i32 %2874, %74
  %2876 = icmp sgt i32 %2874, %76
  %2877 = or i1 %2875, %2876
  br i1 %2877, label %2949, label %2878

2878:                                             ; preds = %2873
  %2879 = trunc i32 %2874 to i16
  %2880 = trunc i32 %2396 to i16
  %2881 = icmp eq i8* %13, null
  br i1 %2881, label %2882, label %2894

2882:                                             ; preds = %2878
  %2883 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2884 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2883, align 8
  %2885 = ashr i32 %2874, 3
  %2886 = mul nsw i32 %2885, %26
  %2887 = ashr i32 %2396, 3
  %2888 = add nsw i32 %2886, %2887
  %2889 = sext i32 %2888 to i64
  %2890 = getelementptr inbounds i8, i8* %36, i64 %2889
  %2891 = and i32 %2396, 7
  %2892 = and i32 %2874, 7
  %2893 = call i32 %2884(i8* %2890, i32 %26, i32 %2891, i32 %2892, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2906

2894:                                             ; preds = %2878
  %2895 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2896 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2895, align 8
  %2897 = ashr i32 %2874, 3
  %2898 = mul nsw i32 %2897, %26
  %2899 = ashr i32 %2396, 3
  %2900 = add nsw i32 %2898, %2899
  %2901 = sext i32 %2900 to i64
  %2902 = getelementptr inbounds i8, i8* %36, i64 %2901
  %2903 = and i32 %2396, 7
  %2904 = and i32 %2874, 7
  %2905 = call i32 %2896(i8* %2902, i32 %26, i32 %2903, i32 %2904, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2906

2906:                                             ; preds = %2894, %2882
  %2907 = phi i32 [ %2893, %2882 ], [ %2905, %2894 ]
  %2908 = sext i32 %2907 to i64
  %2909 = icmp eq i32** %10, null
  br i1 %2909, label %2937, label %2910

2910:                                             ; preds = %2906
  %2911 = sub i16 %2879, %38
  %2912 = sub i16 %2880, %40
  %2913 = icmp eq i16 %2911, 0
  %2914 = icmp eq i16 %2912, 0
  %2915 = xor i1 %2914, true
  %2916 = zext i1 %2915 to i64
  %2917 = select i1 %2914, i64 2, i64 3
  %2918 = select i1 %2913, i64 %2916, i64 %2917
  %2919 = getelementptr inbounds i32, i32* %9, i64 %2918
  %2920 = load i32, i32* %2919, align 4
  %2921 = load i32*, i32** %10, align 8
  %2922 = sext i16 %2911 to i64
  %2923 = getelementptr inbounds i32, i32* %2921, i64 %2922
  %2924 = load i32, i32* %2923, align 4
  %2925 = add nsw i32 %2924, %2920
  %2926 = getelementptr inbounds i32*, i32** %10, i64 1
  %2927 = load i32*, i32** %2926, align 8
  %2928 = sext i16 %2912 to i64
  %2929 = getelementptr inbounds i32, i32* %2927, i64 %2928
  %2930 = load i32, i32* %2929, align 4
  %2931 = add nsw i32 %2925, %2930
  %2932 = sext i32 %2931 to i64
  %2933 = sext i32 %4 to i64
  %2934 = mul nsw i64 %2932, %2933
  %2935 = add nsw i64 %2934, 8192
  %2936 = lshr i64 %2935, 14
  br label %2937

2937:                                             ; preds = %2906, %2910
  %2938 = phi i64 [ %2936, %2910 ], [ 0, %2906 ]
  %2939 = shl i64 %2938, 32
  %2940 = ashr exact i64 %2939, 32
  %2941 = add nsw i64 %2940, %2908
  %2942 = icmp sgt i64 %2941, 2147483646
  br i1 %2942, label %2949, label %2943

2943:                                             ; preds = %2937
  %2944 = trunc i64 %2941 to i32
  %2945 = icmp ugt i32 %2635, %2944
  br i1 %2945, label %2946, label %2949

2946:                                             ; preds = %2943
  store i32 %2907, i32* %11, align 4
  %2947 = load i32, i32* %18, align 4
  store i32 %2947, i32* %12, align 4
  br label %2949

2948:                                             ; preds = %2633
  unreachable

2949:                                             ; preds = %2946, %2943, %2937, %2870, %2867, %2861, %2794, %2791, %2785, %2718, %2715, %2709, %2873, %2872, %2797, %2796, %2721, %2720, %2645, %2644
  %2950 = phi i32 [ %2635, %2644 ], [ %2635, %2645 ], [ %2635, %2720 ], [ %2635, %2721 ], [ %2635, %2796 ], [ %2635, %2797 ], [ %2635, %2872 ], [ %2635, %2873 ], [ %2716, %2718 ], [ %2635, %2715 ], [ %2635, %2709 ], [ %2792, %2794 ], [ %2635, %2791 ], [ %2635, %2785 ], [ %2868, %2870 ], [ %2635, %2867 ], [ %2635, %2861 ], [ %2944, %2946 ], [ %2635, %2943 ], [ %2635, %2937 ]
  %2951 = phi i32 [ %2636, %2644 ], [ %2636, %2645 ], [ %2636, %2720 ], [ %2636, %2721 ], [ %2636, %2796 ], [ %2636, %2797 ], [ %2636, %2872 ], [ %2636, %2873 ], [ %2646, %2718 ], [ %2636, %2715 ], [ %2636, %2709 ], [ %2722, %2794 ], [ %2636, %2791 ], [ %2636, %2785 ], [ %2798, %2870 ], [ %2636, %2867 ], [ %2636, %2861 ], [ %2874, %2946 ], [ %2636, %2943 ], [ %2636, %2937 ]
  %2952 = phi i32 [ %2637, %2644 ], [ %2637, %2645 ], [ %2637, %2720 ], [ %2637, %2721 ], [ %2637, %2796 ], [ %2637, %2797 ], [ %2637, %2872 ], [ %2637, %2873 ], [ %2314, %2718 ], [ %2637, %2715 ], [ %2637, %2709 ], [ %2396, %2794 ], [ %2637, %2791 ], [ %2637, %2785 ], [ %2314, %2870 ], [ %2637, %2867 ], [ %2637, %2861 ], [ %2396, %2946 ], [ %2637, %2943 ], [ %2637, %2937 ]
  %2953 = icmp ugt i32 %7, 1
  br i1 %2953, label %2954, label %3760

2954:                                             ; preds = %2949
  %2955 = icmp ne i32 %2951, %2310
  %2956 = xor i1 %2955, true
  %2957 = icmp eq i32 %2952, %2311
  %2958 = or i1 %2957, %2956
  br i1 %2958, label %3123, label %2959

2959:                                             ; preds = %2954
  %2960 = sub nsw i32 %2951, %2310
  %2961 = sub nsw i32 %2952, %2311
  %2962 = shl nsw i32 %2961, 1
  %2963 = add nsw i32 %2962, %2311
  %2964 = icmp slt i32 %2963, %70
  %2965 = icmp sgt i32 %2963, %72
  %2966 = or i1 %2964, %2965
  %2967 = icmp slt i32 %2951, %74
  %2968 = or i1 %2967, %2966
  %2969 = icmp sgt i32 %2951, %76
  %2970 = or i1 %2969, %2968
  br i1 %2970, label %3041, label %2971

2971:                                             ; preds = %2959
  %2972 = trunc i32 %2951 to i16
  %2973 = trunc i32 %2963 to i16
  %2974 = icmp eq i8* %13, null
  br i1 %2974, label %2975, label %2987

2975:                                             ; preds = %2971
  %2976 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %2977 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %2976, align 8
  %2978 = ashr i32 %2951, 3
  %2979 = mul nsw i32 %2978, %26
  %2980 = ashr i32 %2963, 3
  %2981 = add nsw i32 %2980, %2979
  %2982 = sext i32 %2981 to i64
  %2983 = getelementptr inbounds i8, i8* %36, i64 %2982
  %2984 = and i32 %2963, 7
  %2985 = and i32 %2951, 7
  %2986 = call i32 %2977(i8* %2983, i32 %26, i32 %2984, i32 %2985, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %2999

2987:                                             ; preds = %2971
  %2988 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %2989 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %2988, align 8
  %2990 = ashr i32 %2951, 3
  %2991 = mul nsw i32 %2990, %26
  %2992 = ashr i32 %2963, 3
  %2993 = add nsw i32 %2992, %2991
  %2994 = sext i32 %2993 to i64
  %2995 = getelementptr inbounds i8, i8* %36, i64 %2994
  %2996 = and i32 %2963, 7
  %2997 = and i32 %2951, 7
  %2998 = call i32 %2989(i8* %2995, i32 %26, i32 %2996, i32 %2997, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %2999

2999:                                             ; preds = %2987, %2975
  %3000 = phi i32 [ %2986, %2975 ], [ %2998, %2987 ]
  %3001 = sext i32 %3000 to i64
  %3002 = icmp eq i32** %10, null
  br i1 %3002, label %3030, label %3003

3003:                                             ; preds = %2999
  %3004 = sub i16 %2972, %38
  %3005 = sub i16 %2973, %40
  %3006 = icmp eq i16 %3004, 0
  %3007 = icmp eq i16 %3005, 0
  %3008 = xor i1 %3007, true
  %3009 = zext i1 %3008 to i64
  %3010 = select i1 %3007, i64 2, i64 3
  %3011 = select i1 %3006, i64 %3009, i64 %3010
  %3012 = getelementptr inbounds i32, i32* %9, i64 %3011
  %3013 = load i32, i32* %3012, align 4
  %3014 = load i32*, i32** %10, align 8
  %3015 = sext i16 %3004 to i64
  %3016 = getelementptr inbounds i32, i32* %3014, i64 %3015
  %3017 = load i32, i32* %3016, align 4
  %3018 = add nsw i32 %3017, %3013
  %3019 = getelementptr inbounds i32*, i32** %10, i64 1
  %3020 = load i32*, i32** %3019, align 8
  %3021 = sext i16 %3005 to i64
  %3022 = getelementptr inbounds i32, i32* %3020, i64 %3021
  %3023 = load i32, i32* %3022, align 4
  %3024 = add nsw i32 %3018, %3023
  %3025 = sext i32 %3024 to i64
  %3026 = sext i32 %4 to i64
  %3027 = mul nsw i64 %3025, %3026
  %3028 = add nsw i64 %3027, 8192
  %3029 = lshr i64 %3028, 14
  br label %3030

3030:                                             ; preds = %2999, %3003
  %3031 = phi i64 [ %3029, %3003 ], [ 0, %2999 ]
  %3032 = shl i64 %3031, 32
  %3033 = ashr exact i64 %3032, 32
  %3034 = add nsw i64 %3033, %3001
  %3035 = icmp sgt i64 %3034, 2147483646
  br i1 %3035, label %3041, label %3036

3036:                                             ; preds = %3030
  %3037 = trunc i64 %3034 to i32
  %3038 = icmp ugt i32 %2950, %3037
  br i1 %3038, label %3039, label %3041

3039:                                             ; preds = %3036
  store i32 %3000, i32* %11, align 4
  %3040 = load i32, i32* %18, align 4
  store i32 %3040, i32* %12, align 4
  br label %3041

3041:                                             ; preds = %3039, %3036, %3030, %2959
  %3042 = phi i32 [ %2950, %2959 ], [ %3037, %3039 ], [ %2950, %3036 ], [ %2950, %3030 ]
  %3043 = phi i32 [ %2952, %2959 ], [ %2963, %3039 ], [ %2952, %3036 ], [ %2952, %3030 ]
  %3044 = icmp slt i32 %2952, %70
  %3045 = icmp sgt i32 %2952, %72
  %3046 = or i1 %3044, %3045
  br i1 %3046, label %3760, label %3047

3047:                                             ; preds = %3041
  %3048 = shl nsw i32 %2960, 1
  %3049 = add nsw i32 %3048, %2310
  %3050 = icmp slt i32 %3049, %74
  %3051 = icmp sgt i32 %3049, %76
  %3052 = or i1 %3050, %3051
  br i1 %3052, label %3760, label %3053

3053:                                             ; preds = %3047
  %3054 = trunc i32 %3049 to i16
  %3055 = trunc i32 %2952 to i16
  %3056 = icmp eq i8* %13, null
  br i1 %3056, label %3057, label %3069

3057:                                             ; preds = %3053
  %3058 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3059 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3058, align 8
  %3060 = ashr i32 %3049, 3
  %3061 = mul nsw i32 %3060, %26
  %3062 = ashr i32 %2952, 3
  %3063 = add nsw i32 %3061, %3062
  %3064 = sext i32 %3063 to i64
  %3065 = getelementptr inbounds i8, i8* %36, i64 %3064
  %3066 = and i32 %2952, 7
  %3067 = and i32 %3049, 7
  %3068 = call i32 %3059(i8* %3065, i32 %26, i32 %3066, i32 %3067, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3081

3069:                                             ; preds = %3053
  %3070 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3071 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3070, align 8
  %3072 = ashr i32 %3049, 3
  %3073 = mul nsw i32 %3072, %26
  %3074 = ashr i32 %2952, 3
  %3075 = add nsw i32 %3073, %3074
  %3076 = sext i32 %3075 to i64
  %3077 = getelementptr inbounds i8, i8* %36, i64 %3076
  %3078 = and i32 %2952, 7
  %3079 = and i32 %3049, 7
  %3080 = call i32 %3071(i8* %3077, i32 %26, i32 %3078, i32 %3079, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3081

3081:                                             ; preds = %3069, %3057
  %3082 = phi i32 [ %3068, %3057 ], [ %3080, %3069 ]
  %3083 = sext i32 %3082 to i64
  %3084 = icmp eq i32** %10, null
  br i1 %3084, label %3112, label %3085

3085:                                             ; preds = %3081
  %3086 = sub i16 %3054, %38
  %3087 = sub i16 %3055, %40
  %3088 = icmp eq i16 %3086, 0
  %3089 = icmp eq i16 %3087, 0
  %3090 = xor i1 %3089, true
  %3091 = zext i1 %3090 to i64
  %3092 = select i1 %3089, i64 2, i64 3
  %3093 = select i1 %3088, i64 %3091, i64 %3092
  %3094 = getelementptr inbounds i32, i32* %9, i64 %3093
  %3095 = load i32, i32* %3094, align 4
  %3096 = load i32*, i32** %10, align 8
  %3097 = sext i16 %3086 to i64
  %3098 = getelementptr inbounds i32, i32* %3096, i64 %3097
  %3099 = load i32, i32* %3098, align 4
  %3100 = add nsw i32 %3099, %3095
  %3101 = getelementptr inbounds i32*, i32** %10, i64 1
  %3102 = load i32*, i32** %3101, align 8
  %3103 = sext i16 %3087 to i64
  %3104 = getelementptr inbounds i32, i32* %3102, i64 %3103
  %3105 = load i32, i32* %3104, align 4
  %3106 = add nsw i32 %3100, %3105
  %3107 = sext i32 %3106 to i64
  %3108 = sext i32 %4 to i64
  %3109 = mul nsw i64 %3107, %3108
  %3110 = add nsw i64 %3109, 8192
  %3111 = lshr i64 %3110, 14
  br label %3112

3112:                                             ; preds = %3081, %3085
  %3113 = phi i64 [ %3111, %3085 ], [ 0, %3081 ]
  %3114 = shl i64 %3113, 32
  %3115 = ashr exact i64 %3114, 32
  %3116 = add nsw i64 %3115, %3083
  %3117 = icmp sgt i64 %3116, 2147483646
  br i1 %3117, label %3760, label %3118

3118:                                             ; preds = %3112
  %3119 = trunc i64 %3116 to i32
  %3120 = icmp ugt i32 %3042, %3119
  br i1 %3120, label %3121, label %3760

3121:                                             ; preds = %3118
  store i32 %3082, i32* %11, align 4
  %3122 = load i32, i32* %18, align 4
  store i32 %3122, i32* %12, align 4
  br label %3760

3123:                                             ; preds = %2954
  %3124 = or i1 %2955, %2957
  br i1 %3124, label %3445, label %3125

3125:                                             ; preds = %3123
  %3126 = sub nsw i32 %2952, %2311
  %3127 = shl nsw i32 %3126, 1
  %3128 = add nsw i32 %3127, %2311
  %3129 = icmp slt i32 %3128, %70
  %3130 = icmp sgt i32 %3128, %72
  %3131 = or i1 %3129, %3130
  br i1 %3131, label %3285, label %3132

3132:                                             ; preds = %3125
  %3133 = add nsw i32 %2310, 2
  %3134 = icmp slt i32 %3133, %74
  %3135 = icmp sgt i32 %3133, %76
  %3136 = or i1 %3134, %3135
  br i1 %3136, label %3207, label %3137

3137:                                             ; preds = %3132
  %3138 = trunc i32 %3133 to i16
  %3139 = trunc i32 %3128 to i16
  %3140 = icmp eq i8* %13, null
  br i1 %3140, label %3141, label %3153

3141:                                             ; preds = %3137
  %3142 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3143 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3142, align 8
  %3144 = ashr i32 %3133, 3
  %3145 = mul nsw i32 %3144, %26
  %3146 = ashr i32 %3128, 3
  %3147 = add nsw i32 %3146, %3145
  %3148 = sext i32 %3147 to i64
  %3149 = getelementptr inbounds i8, i8* %36, i64 %3148
  %3150 = and i32 %3128, 7
  %3151 = and i32 %3133, 7
  %3152 = call i32 %3143(i8* %3149, i32 %26, i32 %3150, i32 %3151, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3165

3153:                                             ; preds = %3137
  %3154 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3155 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3154, align 8
  %3156 = ashr i32 %3133, 3
  %3157 = mul nsw i32 %3156, %26
  %3158 = ashr i32 %3128, 3
  %3159 = add nsw i32 %3158, %3157
  %3160 = sext i32 %3159 to i64
  %3161 = getelementptr inbounds i8, i8* %36, i64 %3160
  %3162 = and i32 %3128, 7
  %3163 = and i32 %3133, 7
  %3164 = call i32 %3155(i8* %3161, i32 %26, i32 %3162, i32 %3163, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3165

3165:                                             ; preds = %3153, %3141
  %3166 = phi i32 [ %3152, %3141 ], [ %3164, %3153 ]
  %3167 = sext i32 %3166 to i64
  %3168 = icmp eq i32** %10, null
  br i1 %3168, label %3196, label %3169

3169:                                             ; preds = %3165
  %3170 = sub i16 %3138, %38
  %3171 = sub i16 %3139, %40
  %3172 = icmp eq i16 %3170, 0
  %3173 = icmp eq i16 %3171, 0
  %3174 = xor i1 %3173, true
  %3175 = zext i1 %3174 to i64
  %3176 = select i1 %3173, i64 2, i64 3
  %3177 = select i1 %3172, i64 %3175, i64 %3176
  %3178 = getelementptr inbounds i32, i32* %9, i64 %3177
  %3179 = load i32, i32* %3178, align 4
  %3180 = load i32*, i32** %10, align 8
  %3181 = sext i16 %3170 to i64
  %3182 = getelementptr inbounds i32, i32* %3180, i64 %3181
  %3183 = load i32, i32* %3182, align 4
  %3184 = add nsw i32 %3183, %3179
  %3185 = getelementptr inbounds i32*, i32** %10, i64 1
  %3186 = load i32*, i32** %3185, align 8
  %3187 = sext i16 %3171 to i64
  %3188 = getelementptr inbounds i32, i32* %3186, i64 %3187
  %3189 = load i32, i32* %3188, align 4
  %3190 = add nsw i32 %3184, %3189
  %3191 = sext i32 %3190 to i64
  %3192 = sext i32 %4 to i64
  %3193 = mul nsw i64 %3191, %3192
  %3194 = add nsw i64 %3193, 8192
  %3195 = lshr i64 %3194, 14
  br label %3196

3196:                                             ; preds = %3165, %3169
  %3197 = phi i64 [ %3195, %3169 ], [ 0, %3165 ]
  %3198 = shl i64 %3197, 32
  %3199 = ashr exact i64 %3198, 32
  %3200 = add nsw i64 %3199, %3167
  %3201 = icmp sgt i64 %3200, 2147483646
  br i1 %3201, label %3207, label %3202

3202:                                             ; preds = %3196
  %3203 = trunc i64 %3200 to i32
  %3204 = icmp ugt i32 %2950, %3203
  br i1 %3204, label %3205, label %3207

3205:                                             ; preds = %3202
  store i32 %3166, i32* %11, align 4
  %3206 = load i32, i32* %18, align 4
  store i32 %3206, i32* %12, align 4
  br label %3207

3207:                                             ; preds = %3205, %3202, %3196, %3132
  %3208 = phi i32 [ %2950, %3196 ], [ %2950, %3202 ], [ %3203, %3205 ], [ %2950, %3132 ]
  %3209 = phi i32 [ %2310, %3196 ], [ %2310, %3202 ], [ %3133, %3205 ], [ %2310, %3132 ]
  %3210 = phi i32 [ %2952, %3196 ], [ %2952, %3202 ], [ %3128, %3205 ], [ %2952, %3132 ]
  %3211 = add nsw i32 %2310, -2
  %3212 = icmp slt i32 %3211, %74
  %3213 = icmp sgt i32 %3211, %76
  %3214 = or i1 %3212, %3213
  br i1 %3214, label %3285, label %3215

3215:                                             ; preds = %3207
  %3216 = trunc i32 %3211 to i16
  %3217 = trunc i32 %3128 to i16
  %3218 = icmp eq i8* %13, null
  br i1 %3218, label %3219, label %3231

3219:                                             ; preds = %3215
  %3220 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3221 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3220, align 8
  %3222 = ashr i32 %3211, 3
  %3223 = mul nsw i32 %3222, %26
  %3224 = ashr i32 %3128, 3
  %3225 = add nsw i32 %3224, %3223
  %3226 = sext i32 %3225 to i64
  %3227 = getelementptr inbounds i8, i8* %36, i64 %3226
  %3228 = and i32 %3128, 7
  %3229 = and i32 %3211, 7
  %3230 = call i32 %3221(i8* %3227, i32 %26, i32 %3228, i32 %3229, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3243

3231:                                             ; preds = %3215
  %3232 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3233 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3232, align 8
  %3234 = ashr i32 %3211, 3
  %3235 = mul nsw i32 %3234, %26
  %3236 = ashr i32 %3128, 3
  %3237 = add nsw i32 %3236, %3235
  %3238 = sext i32 %3237 to i64
  %3239 = getelementptr inbounds i8, i8* %36, i64 %3238
  %3240 = and i32 %3128, 7
  %3241 = and i32 %3211, 7
  %3242 = call i32 %3233(i8* %3239, i32 %26, i32 %3240, i32 %3241, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3243

3243:                                             ; preds = %3231, %3219
  %3244 = phi i32 [ %3230, %3219 ], [ %3242, %3231 ]
  %3245 = sext i32 %3244 to i64
  %3246 = icmp eq i32** %10, null
  br i1 %3246, label %3274, label %3247

3247:                                             ; preds = %3243
  %3248 = sub i16 %3216, %38
  %3249 = sub i16 %3217, %40
  %3250 = icmp eq i16 %3248, 0
  %3251 = icmp eq i16 %3249, 0
  %3252 = xor i1 %3251, true
  %3253 = zext i1 %3252 to i64
  %3254 = select i1 %3251, i64 2, i64 3
  %3255 = select i1 %3250, i64 %3253, i64 %3254
  %3256 = getelementptr inbounds i32, i32* %9, i64 %3255
  %3257 = load i32, i32* %3256, align 4
  %3258 = load i32*, i32** %10, align 8
  %3259 = sext i16 %3248 to i64
  %3260 = getelementptr inbounds i32, i32* %3258, i64 %3259
  %3261 = load i32, i32* %3260, align 4
  %3262 = add nsw i32 %3261, %3257
  %3263 = getelementptr inbounds i32*, i32** %10, i64 1
  %3264 = load i32*, i32** %3263, align 8
  %3265 = sext i16 %3249 to i64
  %3266 = getelementptr inbounds i32, i32* %3264, i64 %3265
  %3267 = load i32, i32* %3266, align 4
  %3268 = add nsw i32 %3262, %3267
  %3269 = sext i32 %3268 to i64
  %3270 = sext i32 %4 to i64
  %3271 = mul nsw i64 %3269, %3270
  %3272 = add nsw i64 %3271, 8192
  %3273 = lshr i64 %3272, 14
  br label %3274

3274:                                             ; preds = %3243, %3247
  %3275 = phi i64 [ %3273, %3247 ], [ 0, %3243 ]
  %3276 = shl i64 %3275, 32
  %3277 = ashr exact i64 %3276, 32
  %3278 = add nsw i64 %3277, %3245
  %3279 = icmp sgt i64 %3278, 2147483646
  br i1 %3279, label %3285, label %3280

3280:                                             ; preds = %3274
  %3281 = trunc i64 %3278 to i32
  %3282 = icmp ugt i32 %3208, %3281
  br i1 %3282, label %3283, label %3285

3283:                                             ; preds = %3280
  store i32 %3244, i32* %11, align 4
  %3284 = load i32, i32* %18, align 4
  store i32 %3284, i32* %12, align 4
  br label %3285

3285:                                             ; preds = %3283, %3280, %3274, %3125, %3207
  %3286 = phi i32 [ %3208, %3207 ], [ %2950, %3125 ], [ %3281, %3283 ], [ %3208, %3280 ], [ %3208, %3274 ]
  %3287 = phi i32 [ %3209, %3207 ], [ %2310, %3125 ], [ %3211, %3283 ], [ %3209, %3280 ], [ %3209, %3274 ]
  %3288 = phi i32 [ %3210, %3207 ], [ %2952, %3125 ], [ %3128, %3283 ], [ %3210, %3280 ], [ %3210, %3274 ]
  %3289 = icmp ult i32 %2643, 2
  %3290 = icmp slt i32 %2952, %70
  %3291 = icmp sgt i32 %2952, %72
  %3292 = or i1 %3290, %3291
  br i1 %3289, label %3293, label %3369

3293:                                             ; preds = %3285
  br i1 %3292, label %3760, label %3294

3294:                                             ; preds = %3293
  %3295 = add nsw i32 %2310, 2
  %3296 = icmp slt i32 %3295, %74
  %3297 = icmp sgt i32 %3295, %76
  %3298 = or i1 %3296, %3297
  br i1 %3298, label %3760, label %3299

3299:                                             ; preds = %3294
  %3300 = trunc i32 %3295 to i16
  %3301 = trunc i32 %2952 to i16
  %3302 = icmp eq i8* %13, null
  br i1 %3302, label %3303, label %3315

3303:                                             ; preds = %3299
  %3304 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3305 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3304, align 8
  %3306 = ashr i32 %3295, 3
  %3307 = mul nsw i32 %3306, %26
  %3308 = ashr i32 %2952, 3
  %3309 = add nsw i32 %3308, %3307
  %3310 = sext i32 %3309 to i64
  %3311 = getelementptr inbounds i8, i8* %36, i64 %3310
  %3312 = and i32 %2952, 7
  %3313 = and i32 %3295, 7
  %3314 = call i32 %3305(i8* %3311, i32 %26, i32 %3312, i32 %3313, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3327

3315:                                             ; preds = %3299
  %3316 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3317 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3316, align 8
  %3318 = ashr i32 %3295, 3
  %3319 = mul nsw i32 %3318, %26
  %3320 = ashr i32 %2952, 3
  %3321 = add nsw i32 %3320, %3319
  %3322 = sext i32 %3321 to i64
  %3323 = getelementptr inbounds i8, i8* %36, i64 %3322
  %3324 = and i32 %2952, 7
  %3325 = and i32 %3295, 7
  %3326 = call i32 %3317(i8* %3323, i32 %26, i32 %3324, i32 %3325, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3327

3327:                                             ; preds = %3315, %3303
  %3328 = phi i32 [ %3314, %3303 ], [ %3326, %3315 ]
  %3329 = sext i32 %3328 to i64
  %3330 = icmp eq i32** %10, null
  br i1 %3330, label %3358, label %3331

3331:                                             ; preds = %3327
  %3332 = sub i16 %3300, %38
  %3333 = sub i16 %3301, %40
  %3334 = icmp eq i16 %3332, 0
  %3335 = icmp eq i16 %3333, 0
  %3336 = xor i1 %3335, true
  %3337 = zext i1 %3336 to i64
  %3338 = select i1 %3335, i64 2, i64 3
  %3339 = select i1 %3334, i64 %3337, i64 %3338
  %3340 = getelementptr inbounds i32, i32* %9, i64 %3339
  %3341 = load i32, i32* %3340, align 4
  %3342 = load i32*, i32** %10, align 8
  %3343 = sext i16 %3332 to i64
  %3344 = getelementptr inbounds i32, i32* %3342, i64 %3343
  %3345 = load i32, i32* %3344, align 4
  %3346 = add nsw i32 %3345, %3341
  %3347 = getelementptr inbounds i32*, i32** %10, i64 1
  %3348 = load i32*, i32** %3347, align 8
  %3349 = sext i16 %3333 to i64
  %3350 = getelementptr inbounds i32, i32* %3348, i64 %3349
  %3351 = load i32, i32* %3350, align 4
  %3352 = add nsw i32 %3346, %3351
  %3353 = sext i32 %3352 to i64
  %3354 = sext i32 %4 to i64
  %3355 = mul nsw i64 %3353, %3354
  %3356 = add nsw i64 %3355, 8192
  %3357 = lshr i64 %3356, 14
  br label %3358

3358:                                             ; preds = %3327, %3331
  %3359 = phi i64 [ %3357, %3331 ], [ 0, %3327 ]
  %3360 = shl i64 %3359, 32
  %3361 = ashr exact i64 %3360, 32
  %3362 = add nsw i64 %3361, %3329
  %3363 = icmp sgt i64 %3362, 2147483646
  br i1 %3363, label %3760, label %3364

3364:                                             ; preds = %3358
  %3365 = trunc i64 %3362 to i32
  %3366 = icmp ugt i32 %3286, %3365
  br i1 %3366, label %3367, label %3760

3367:                                             ; preds = %3364
  store i32 %3328, i32* %11, align 4
  %3368 = load i32, i32* %18, align 4
  store i32 %3368, i32* %12, align 4
  br label %3760

3369:                                             ; preds = %3285
  br i1 %3292, label %3760, label %3370

3370:                                             ; preds = %3369
  %3371 = add nsw i32 %2310, -2
  %3372 = icmp slt i32 %3371, %74
  %3373 = icmp sgt i32 %3371, %76
  %3374 = or i1 %3372, %3373
  br i1 %3374, label %3760, label %3375

3375:                                             ; preds = %3370
  %3376 = trunc i32 %3371 to i16
  %3377 = trunc i32 %2952 to i16
  %3378 = icmp eq i8* %13, null
  br i1 %3378, label %3379, label %3391

3379:                                             ; preds = %3375
  %3380 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3381 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3380, align 8
  %3382 = ashr i32 %3371, 3
  %3383 = mul nsw i32 %3382, %26
  %3384 = ashr i32 %2952, 3
  %3385 = add nsw i32 %3384, %3383
  %3386 = sext i32 %3385 to i64
  %3387 = getelementptr inbounds i8, i8* %36, i64 %3386
  %3388 = and i32 %2952, 7
  %3389 = and i32 %3371, 7
  %3390 = call i32 %3381(i8* %3387, i32 %26, i32 %3388, i32 %3389, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3403

3391:                                             ; preds = %3375
  %3392 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3393 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3392, align 8
  %3394 = ashr i32 %3371, 3
  %3395 = mul nsw i32 %3394, %26
  %3396 = ashr i32 %2952, 3
  %3397 = add nsw i32 %3396, %3395
  %3398 = sext i32 %3397 to i64
  %3399 = getelementptr inbounds i8, i8* %36, i64 %3398
  %3400 = and i32 %2952, 7
  %3401 = and i32 %3371, 7
  %3402 = call i32 %3393(i8* %3399, i32 %26, i32 %3400, i32 %3401, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3403

3403:                                             ; preds = %3391, %3379
  %3404 = phi i32 [ %3390, %3379 ], [ %3402, %3391 ]
  %3405 = sext i32 %3404 to i64
  %3406 = icmp eq i32** %10, null
  br i1 %3406, label %3434, label %3407

3407:                                             ; preds = %3403
  %3408 = sub i16 %3376, %38
  %3409 = sub i16 %3377, %40
  %3410 = icmp eq i16 %3408, 0
  %3411 = icmp eq i16 %3409, 0
  %3412 = xor i1 %3411, true
  %3413 = zext i1 %3412 to i64
  %3414 = select i1 %3411, i64 2, i64 3
  %3415 = select i1 %3410, i64 %3413, i64 %3414
  %3416 = getelementptr inbounds i32, i32* %9, i64 %3415
  %3417 = load i32, i32* %3416, align 4
  %3418 = load i32*, i32** %10, align 8
  %3419 = sext i16 %3408 to i64
  %3420 = getelementptr inbounds i32, i32* %3418, i64 %3419
  %3421 = load i32, i32* %3420, align 4
  %3422 = add nsw i32 %3421, %3417
  %3423 = getelementptr inbounds i32*, i32** %10, i64 1
  %3424 = load i32*, i32** %3423, align 8
  %3425 = sext i16 %3409 to i64
  %3426 = getelementptr inbounds i32, i32* %3424, i64 %3425
  %3427 = load i32, i32* %3426, align 4
  %3428 = add nsw i32 %3422, %3427
  %3429 = sext i32 %3428 to i64
  %3430 = sext i32 %4 to i64
  %3431 = mul nsw i64 %3429, %3430
  %3432 = add nsw i64 %3431, 8192
  %3433 = lshr i64 %3432, 14
  br label %3434

3434:                                             ; preds = %3403, %3407
  %3435 = phi i64 [ %3433, %3407 ], [ 0, %3403 ]
  %3436 = shl i64 %3435, 32
  %3437 = ashr exact i64 %3436, 32
  %3438 = add nsw i64 %3437, %3405
  %3439 = icmp sgt i64 %3438, 2147483646
  br i1 %3439, label %3760, label %3440

3440:                                             ; preds = %3434
  %3441 = trunc i64 %3438 to i32
  %3442 = icmp ugt i32 %3286, %3441
  br i1 %3442, label %3443, label %3760

3443:                                             ; preds = %3440
  store i32 %3404, i32* %11, align 4
  %3444 = load i32, i32* %18, align 4
  store i32 %3444, i32* %12, align 4
  br label %3760

3445:                                             ; preds = %3123
  %3446 = and i1 %2955, %2957
  br i1 %3446, label %3447, label %3760

3447:                                             ; preds = %3445
  %3448 = sub nsw i32 %2951, %2310
  br i1 %2399, label %3525, label %3449

3449:                                             ; preds = %3447
  %3450 = shl nsw i32 %3448, 1
  %3451 = add nsw i32 %3450, %2310
  %3452 = icmp slt i32 %3451, %74
  %3453 = icmp sgt i32 %3451, %76
  %3454 = or i1 %3452, %3453
  br i1 %3454, label %3525, label %3455

3455:                                             ; preds = %3449
  %3456 = trunc i32 %3451 to i16
  %3457 = trunc i32 %2396 to i16
  %3458 = icmp eq i8* %13, null
  br i1 %3458, label %3459, label %3471

3459:                                             ; preds = %3455
  %3460 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3461 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3460, align 8
  %3462 = ashr i32 %3451, 3
  %3463 = mul nsw i32 %3462, %26
  %3464 = ashr i32 %2396, 3
  %3465 = add nsw i32 %3463, %3464
  %3466 = sext i32 %3465 to i64
  %3467 = getelementptr inbounds i8, i8* %36, i64 %3466
  %3468 = and i32 %2396, 7
  %3469 = and i32 %3451, 7
  %3470 = call i32 %3461(i8* %3467, i32 %26, i32 %3468, i32 %3469, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3483

3471:                                             ; preds = %3455
  %3472 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3473 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3472, align 8
  %3474 = ashr i32 %3451, 3
  %3475 = mul nsw i32 %3474, %26
  %3476 = ashr i32 %2396, 3
  %3477 = add nsw i32 %3475, %3476
  %3478 = sext i32 %3477 to i64
  %3479 = getelementptr inbounds i8, i8* %36, i64 %3478
  %3480 = and i32 %2396, 7
  %3481 = and i32 %3451, 7
  %3482 = call i32 %3473(i8* %3479, i32 %26, i32 %3480, i32 %3481, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3483

3483:                                             ; preds = %3471, %3459
  %3484 = phi i32 [ %3470, %3459 ], [ %3482, %3471 ]
  %3485 = sext i32 %3484 to i64
  %3486 = icmp eq i32** %10, null
  br i1 %3486, label %3514, label %3487

3487:                                             ; preds = %3483
  %3488 = sub i16 %3456, %38
  %3489 = sub i16 %3457, %40
  %3490 = icmp eq i16 %3488, 0
  %3491 = icmp eq i16 %3489, 0
  %3492 = xor i1 %3491, true
  %3493 = zext i1 %3492 to i64
  %3494 = select i1 %3491, i64 2, i64 3
  %3495 = select i1 %3490, i64 %3493, i64 %3494
  %3496 = getelementptr inbounds i32, i32* %9, i64 %3495
  %3497 = load i32, i32* %3496, align 4
  %3498 = load i32*, i32** %10, align 8
  %3499 = sext i16 %3488 to i64
  %3500 = getelementptr inbounds i32, i32* %3498, i64 %3499
  %3501 = load i32, i32* %3500, align 4
  %3502 = add nsw i32 %3501, %3497
  %3503 = getelementptr inbounds i32*, i32** %10, i64 1
  %3504 = load i32*, i32** %3503, align 8
  %3505 = sext i16 %3489 to i64
  %3506 = getelementptr inbounds i32, i32* %3504, i64 %3505
  %3507 = load i32, i32* %3506, align 4
  %3508 = add nsw i32 %3502, %3507
  %3509 = sext i32 %3508 to i64
  %3510 = sext i32 %4 to i64
  %3511 = mul nsw i64 %3509, %3510
  %3512 = add nsw i64 %3511, 8192
  %3513 = lshr i64 %3512, 14
  br label %3514

3514:                                             ; preds = %3483, %3487
  %3515 = phi i64 [ %3513, %3487 ], [ 0, %3483 ]
  %3516 = shl i64 %3515, 32
  %3517 = ashr exact i64 %3516, 32
  %3518 = add nsw i64 %3517, %3485
  %3519 = icmp sgt i64 %3518, 2147483646
  br i1 %3519, label %3525, label %3520

3520:                                             ; preds = %3514
  %3521 = trunc i64 %3518 to i32
  %3522 = icmp ugt i32 %2950, %3521
  br i1 %3522, label %3523, label %3525

3523:                                             ; preds = %3520
  store i32 %3484, i32* %11, align 4
  %3524 = load i32, i32* %18, align 4
  store i32 %3524, i32* %12, align 4
  br label %3525

3525:                                             ; preds = %3523, %3520, %3514, %3449, %3447
  %3526 = phi i32 [ %2950, %3447 ], [ %2950, %3449 ], [ %3521, %3523 ], [ %2950, %3520 ], [ %2950, %3514 ]
  %3527 = phi i32 [ %2951, %3447 ], [ %2951, %3449 ], [ %3451, %3523 ], [ %2951, %3520 ], [ %2951, %3514 ]
  %3528 = phi i32 [ %2311, %3447 ], [ %2311, %3449 ], [ %2396, %3523 ], [ %2311, %3520 ], [ %2311, %3514 ]
  br i1 %2317, label %3605, label %3529

3529:                                             ; preds = %3525
  %3530 = shl nsw i32 %3448, 1
  %3531 = add nsw i32 %3530, %2310
  %3532 = icmp slt i32 %3531, %74
  %3533 = icmp sgt i32 %3531, %76
  %3534 = or i1 %3532, %3533
  br i1 %3534, label %3605, label %3535

3535:                                             ; preds = %3529
  %3536 = trunc i32 %3531 to i16
  %3537 = trunc i32 %2314 to i16
  %3538 = icmp eq i8* %13, null
  br i1 %3538, label %3539, label %3551

3539:                                             ; preds = %3535
  %3540 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3541 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3540, align 8
  %3542 = ashr i32 %3531, 3
  %3543 = mul nsw i32 %3542, %26
  %3544 = ashr i32 %2314, 3
  %3545 = add nsw i32 %3543, %3544
  %3546 = sext i32 %3545 to i64
  %3547 = getelementptr inbounds i8, i8* %36, i64 %3546
  %3548 = and i32 %2314, 7
  %3549 = and i32 %3531, 7
  %3550 = call i32 %3541(i8* %3547, i32 %26, i32 %3548, i32 %3549, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3563

3551:                                             ; preds = %3535
  %3552 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3553 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3552, align 8
  %3554 = ashr i32 %3531, 3
  %3555 = mul nsw i32 %3554, %26
  %3556 = ashr i32 %2314, 3
  %3557 = add nsw i32 %3555, %3556
  %3558 = sext i32 %3557 to i64
  %3559 = getelementptr inbounds i8, i8* %36, i64 %3558
  %3560 = and i32 %2314, 7
  %3561 = and i32 %3531, 7
  %3562 = call i32 %3553(i8* %3559, i32 %26, i32 %3560, i32 %3561, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3563

3563:                                             ; preds = %3551, %3539
  %3564 = phi i32 [ %3550, %3539 ], [ %3562, %3551 ]
  %3565 = sext i32 %3564 to i64
  %3566 = icmp eq i32** %10, null
  br i1 %3566, label %3594, label %3567

3567:                                             ; preds = %3563
  %3568 = sub i16 %3536, %38
  %3569 = sub i16 %3537, %40
  %3570 = icmp eq i16 %3568, 0
  %3571 = icmp eq i16 %3569, 0
  %3572 = xor i1 %3571, true
  %3573 = zext i1 %3572 to i64
  %3574 = select i1 %3571, i64 2, i64 3
  %3575 = select i1 %3570, i64 %3573, i64 %3574
  %3576 = getelementptr inbounds i32, i32* %9, i64 %3575
  %3577 = load i32, i32* %3576, align 4
  %3578 = load i32*, i32** %10, align 8
  %3579 = sext i16 %3568 to i64
  %3580 = getelementptr inbounds i32, i32* %3578, i64 %3579
  %3581 = load i32, i32* %3580, align 4
  %3582 = add nsw i32 %3581, %3577
  %3583 = getelementptr inbounds i32*, i32** %10, i64 1
  %3584 = load i32*, i32** %3583, align 8
  %3585 = sext i16 %3569 to i64
  %3586 = getelementptr inbounds i32, i32* %3584, i64 %3585
  %3587 = load i32, i32* %3586, align 4
  %3588 = add nsw i32 %3582, %3587
  %3589 = sext i32 %3588 to i64
  %3590 = sext i32 %4 to i64
  %3591 = mul nsw i64 %3589, %3590
  %3592 = add nsw i64 %3591, 8192
  %3593 = lshr i64 %3592, 14
  br label %3594

3594:                                             ; preds = %3563, %3567
  %3595 = phi i64 [ %3593, %3567 ], [ 0, %3563 ]
  %3596 = shl i64 %3595, 32
  %3597 = ashr exact i64 %3596, 32
  %3598 = add nsw i64 %3597, %3565
  %3599 = icmp sgt i64 %3598, 2147483646
  br i1 %3599, label %3605, label %3600

3600:                                             ; preds = %3594
  %3601 = trunc i64 %3598 to i32
  %3602 = icmp ugt i32 %3526, %3601
  br i1 %3602, label %3603, label %3605

3603:                                             ; preds = %3600
  store i32 %3564, i32* %11, align 4
  %3604 = load i32, i32* %18, align 4
  store i32 %3604, i32* %12, align 4
  br label %3605

3605:                                             ; preds = %3603, %3600, %3594, %3529, %3525
  %3606 = phi i32 [ %3526, %3525 ], [ %3526, %3529 ], [ %3601, %3603 ], [ %3526, %3600 ], [ %3526, %3594 ]
  %3607 = phi i32 [ %3527, %3525 ], [ %3527, %3529 ], [ %3531, %3603 ], [ %3527, %3600 ], [ %3527, %3594 ]
  %3608 = phi i32 [ %3528, %3525 ], [ %3528, %3529 ], [ %2314, %3603 ], [ %3528, %3600 ], [ %3528, %3594 ]
  switch i32 %2643, label %3759 [
    i32 0, label %3609
    i32 2, label %3609
    i32 1, label %3684
    i32 3, label %3684
  ]

3609:                                             ; preds = %3605, %3605
  %3610 = icmp slt i32 %2951, %74
  %3611 = or i1 %2399, %3610
  %3612 = icmp sgt i32 %2951, %76
  %3613 = or i1 %3612, %3611
  br i1 %3613, label %3760, label %3614

3614:                                             ; preds = %3609
  %3615 = trunc i32 %2951 to i16
  %3616 = trunc i32 %2396 to i16
  %3617 = icmp eq i8* %13, null
  br i1 %3617, label %3618, label %3630

3618:                                             ; preds = %3614
  %3619 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3620 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3619, align 8
  %3621 = ashr i32 %2951, 3
  %3622 = mul nsw i32 %3621, %26
  %3623 = ashr i32 %2396, 3
  %3624 = add nsw i32 %3622, %3623
  %3625 = sext i32 %3624 to i64
  %3626 = getelementptr inbounds i8, i8* %36, i64 %3625
  %3627 = and i32 %2396, 7
  %3628 = and i32 %2951, 7
  %3629 = call i32 %3620(i8* %3626, i32 %26, i32 %3627, i32 %3628, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3642

3630:                                             ; preds = %3614
  %3631 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3632 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3631, align 8
  %3633 = ashr i32 %2951, 3
  %3634 = mul nsw i32 %3633, %26
  %3635 = ashr i32 %2396, 3
  %3636 = add nsw i32 %3634, %3635
  %3637 = sext i32 %3636 to i64
  %3638 = getelementptr inbounds i8, i8* %36, i64 %3637
  %3639 = and i32 %2396, 7
  %3640 = and i32 %2951, 7
  %3641 = call i32 %3632(i8* %3638, i32 %26, i32 %3639, i32 %3640, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3642

3642:                                             ; preds = %3630, %3618
  %3643 = phi i32 [ %3629, %3618 ], [ %3641, %3630 ]
  %3644 = sext i32 %3643 to i64
  %3645 = icmp eq i32** %10, null
  br i1 %3645, label %3673, label %3646

3646:                                             ; preds = %3642
  %3647 = sub i16 %3615, %38
  %3648 = sub i16 %3616, %40
  %3649 = icmp eq i16 %3647, 0
  %3650 = icmp eq i16 %3648, 0
  %3651 = xor i1 %3650, true
  %3652 = zext i1 %3651 to i64
  %3653 = select i1 %3650, i64 2, i64 3
  %3654 = select i1 %3649, i64 %3652, i64 %3653
  %3655 = getelementptr inbounds i32, i32* %9, i64 %3654
  %3656 = load i32, i32* %3655, align 4
  %3657 = load i32*, i32** %10, align 8
  %3658 = sext i16 %3647 to i64
  %3659 = getelementptr inbounds i32, i32* %3657, i64 %3658
  %3660 = load i32, i32* %3659, align 4
  %3661 = add nsw i32 %3660, %3656
  %3662 = getelementptr inbounds i32*, i32** %10, i64 1
  %3663 = load i32*, i32** %3662, align 8
  %3664 = sext i16 %3648 to i64
  %3665 = getelementptr inbounds i32, i32* %3663, i64 %3664
  %3666 = load i32, i32* %3665, align 4
  %3667 = add nsw i32 %3661, %3666
  %3668 = sext i32 %3667 to i64
  %3669 = sext i32 %4 to i64
  %3670 = mul nsw i64 %3668, %3669
  %3671 = add nsw i64 %3670, 8192
  %3672 = lshr i64 %3671, 14
  br label %3673

3673:                                             ; preds = %3642, %3646
  %3674 = phi i64 [ %3672, %3646 ], [ 0, %3642 ]
  %3675 = shl i64 %3674, 32
  %3676 = ashr exact i64 %3675, 32
  %3677 = add nsw i64 %3676, %3644
  %3678 = icmp sgt i64 %3677, 2147483646
  br i1 %3678, label %3760, label %3679

3679:                                             ; preds = %3673
  %3680 = trunc i64 %3677 to i32
  %3681 = icmp ugt i32 %3606, %3680
  br i1 %3681, label %3682, label %3760

3682:                                             ; preds = %3679
  store i32 %3643, i32* %11, align 4
  %3683 = load i32, i32* %18, align 4
  store i32 %3683, i32* %12, align 4
  br label %3760

3684:                                             ; preds = %3605, %3605
  %3685 = icmp slt i32 %2951, %74
  %3686 = or i1 %2317, %3685
  %3687 = icmp sgt i32 %2951, %76
  %3688 = or i1 %3687, %3686
  br i1 %3688, label %3760, label %3689

3689:                                             ; preds = %3684
  %3690 = trunc i32 %2951 to i16
  %3691 = trunc i32 %2314 to i16
  %3692 = icmp eq i8* %13, null
  br i1 %3692, label %3693, label %3705

3693:                                             ; preds = %3689
  %3694 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3695 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3694, align 8
  %3696 = ashr i32 %2951, 3
  %3697 = mul nsw i32 %3696, %26
  %3698 = ashr i32 %2314, 3
  %3699 = add nsw i32 %3697, %3698
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds i8, i8* %36, i64 %3700
  %3702 = and i32 %2314, 7
  %3703 = and i32 %2951, 7
  %3704 = call i32 %3695(i8* %3701, i32 %26, i32 %3702, i32 %3703, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3717

3705:                                             ; preds = %3689
  %3706 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3707 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3706, align 8
  %3708 = ashr i32 %2951, 3
  %3709 = mul nsw i32 %3708, %26
  %3710 = ashr i32 %2314, 3
  %3711 = add nsw i32 %3709, %3710
  %3712 = sext i32 %3711 to i64
  %3713 = getelementptr inbounds i8, i8* %36, i64 %3712
  %3714 = and i32 %2314, 7
  %3715 = and i32 %2951, 7
  %3716 = call i32 %3707(i8* %3713, i32 %26, i32 %3714, i32 %3715, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3717

3717:                                             ; preds = %3705, %3693
  %3718 = phi i32 [ %3704, %3693 ], [ %3716, %3705 ]
  %3719 = sext i32 %3718 to i64
  %3720 = icmp eq i32** %10, null
  br i1 %3720, label %3748, label %3721

3721:                                             ; preds = %3717
  %3722 = sub i16 %3690, %38
  %3723 = sub i16 %3691, %40
  %3724 = icmp eq i16 %3722, 0
  %3725 = icmp eq i16 %3723, 0
  %3726 = xor i1 %3725, true
  %3727 = zext i1 %3726 to i64
  %3728 = select i1 %3725, i64 2, i64 3
  %3729 = select i1 %3724, i64 %3727, i64 %3728
  %3730 = getelementptr inbounds i32, i32* %9, i64 %3729
  %3731 = load i32, i32* %3730, align 4
  %3732 = load i32*, i32** %10, align 8
  %3733 = sext i16 %3722 to i64
  %3734 = getelementptr inbounds i32, i32* %3732, i64 %3733
  %3735 = load i32, i32* %3734, align 4
  %3736 = add nsw i32 %3735, %3731
  %3737 = getelementptr inbounds i32*, i32** %10, i64 1
  %3738 = load i32*, i32** %3737, align 8
  %3739 = sext i16 %3723 to i64
  %3740 = getelementptr inbounds i32, i32* %3738, i64 %3739
  %3741 = load i32, i32* %3740, align 4
  %3742 = add nsw i32 %3736, %3741
  %3743 = sext i32 %3742 to i64
  %3744 = sext i32 %4 to i64
  %3745 = mul nsw i64 %3743, %3744
  %3746 = add nsw i64 %3745, 8192
  %3747 = lshr i64 %3746, 14
  br label %3748

3748:                                             ; preds = %3717, %3721
  %3749 = phi i64 [ %3747, %3721 ], [ 0, %3717 ]
  %3750 = shl i64 %3749, 32
  %3751 = ashr exact i64 %3750, 32
  %3752 = add nsw i64 %3751, %3719
  %3753 = icmp sgt i64 %3752, 2147483646
  br i1 %3753, label %3760, label %3754

3754:                                             ; preds = %3748
  %3755 = trunc i64 %3752 to i32
  %3756 = icmp ugt i32 %3606, %3755
  br i1 %3756, label %3757, label %3760

3757:                                             ; preds = %3754
  store i32 %3718, i32* %11, align 4
  %3758 = load i32, i32* %18, align 4
  store i32 %3758, i32* %12, align 4
  br label %3760

3759:                                             ; preds = %3605
  unreachable

3760:                                             ; preds = %3757, %3754, %3748, %3682, %3679, %3673, %3443, %3440, %3434, %3367, %3364, %3358, %3121, %3118, %3112, %2949, %3684, %3609, %3369, %3370, %3293, %3294, %3041, %3047, %3445, %2308
  %3761 = phi i32 [ %2309, %2308 ], [ %2950, %2949 ], [ %2950, %3445 ], [ %3042, %3047 ], [ %3042, %3041 ], [ %3286, %3294 ], [ %3286, %3293 ], [ %3286, %3370 ], [ %3286, %3369 ], [ %3606, %3609 ], [ %3606, %3684 ], [ %3119, %3121 ], [ %3042, %3118 ], [ %3042, %3112 ], [ %3365, %3367 ], [ %3286, %3364 ], [ %3286, %3358 ], [ %3441, %3443 ], [ %3286, %3440 ], [ %3286, %3434 ], [ %3680, %3682 ], [ %3606, %3679 ], [ %3606, %3673 ], [ %3755, %3757 ], [ %3606, %3754 ], [ %3606, %3748 ]
  %3762 = phi i32 [ %2310, %2308 ], [ %2951, %2949 ], [ %2951, %3445 ], [ %2951, %3047 ], [ %2951, %3041 ], [ %3287, %3294 ], [ %3287, %3293 ], [ %3287, %3370 ], [ %3287, %3369 ], [ %3607, %3609 ], [ %3607, %3684 ], [ %3049, %3121 ], [ %2951, %3118 ], [ %2951, %3112 ], [ %3295, %3367 ], [ %3287, %3364 ], [ %3287, %3358 ], [ %3371, %3443 ], [ %3287, %3440 ], [ %3287, %3434 ], [ %2951, %3682 ], [ %3607, %3679 ], [ %3607, %3673 ], [ %2951, %3757 ], [ %3607, %3754 ], [ %3607, %3748 ]
  %3763 = phi i32 [ %2311, %2308 ], [ %2952, %2949 ], [ %2952, %3445 ], [ %3043, %3047 ], [ %3043, %3041 ], [ %3288, %3294 ], [ %3288, %3293 ], [ %3288, %3370 ], [ %3288, %3369 ], [ %3608, %3609 ], [ %3608, %3684 ], [ %2952, %3121 ], [ %3043, %3118 ], [ %3043, %3112 ], [ %2952, %3367 ], [ %3288, %3364 ], [ %3288, %3358 ], [ %2952, %3443 ], [ %3288, %3440 ], [ %3288, %3434 ], [ %2396, %3682 ], [ %3608, %3679 ], [ %3608, %3673 ], [ %2314, %3757 ], [ %3608, %3754 ], [ %3608, %3748 ]
  %3764 = phi i32 [ 2, %2308 ], [ 1, %2949 ], [ 1, %3445 ], [ 1, %3047 ], [ 1, %3041 ], [ 1, %3294 ], [ 1, %3293 ], [ 1, %3370 ], [ 1, %3369 ], [ 1, %3609 ], [ 1, %3684 ], [ 1, %3121 ], [ 1, %3118 ], [ 1, %3112 ], [ 1, %3367 ], [ 1, %3364 ], [ 1, %3358 ], [ 1, %3443 ], [ 1, %3440 ], [ 1, %3434 ], [ 1, %3682 ], [ 1, %3679 ], [ 1, %3673 ], [ 1, %3757 ], [ 1, %3754 ], [ 1, %3748 ]
  %3765 = icmp eq i32 %3, 0
  br i1 %3765, label %5221, label %3766

3766:                                             ; preds = %3760
  %3767 = load i16, i16* %37, align 2
  %3768 = sext i16 %3767 to i32
  %3769 = icmp slt i32 %3768, 0
  %3770 = sub nsw i32 0, %3768
  %3771 = select i1 %3769, i32 %3770, i32 %3768
  %3772 = icmp slt i32 %3771, 64
  br i1 %3772, label %3773, label %5221

3773:                                             ; preds = %3766
  %3774 = load i16, i16* %39, align 2
  %3775 = sext i16 %3774 to i32
  %3776 = icmp slt i32 %3775, 0
  %3777 = sub nsw i32 0, %3775
  %3778 = select i1 %3776, i32 %3777, i32 %3775
  %3779 = icmp slt i32 %3778, 64
  %3780 = icmp eq i32 %6, 0
  %3781 = and i1 %3780, %3779
  br i1 %3781, label %3782, label %5221

3782:                                             ; preds = %3773
  %3783 = sub nsw i32 %3763, %3764
  %3784 = icmp slt i32 %3783, %70
  %3785 = icmp sgt i32 %3783, %72
  %3786 = or i1 %3784, %3785
  %3787 = icmp slt i32 %3762, %74
  %3788 = or i1 %3787, %3786
  %3789 = icmp sgt i32 %3762, %76
  %3790 = or i1 %3789, %3788
  br i1 %3790, label %3861, label %3791

3791:                                             ; preds = %3782
  %3792 = trunc i32 %3762 to i16
  %3793 = trunc i32 %3783 to i16
  %3794 = icmp eq i8* %13, null
  br i1 %3794, label %3795, label %3807

3795:                                             ; preds = %3791
  %3796 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3797 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3796, align 8
  %3798 = ashr i32 %3762, 3
  %3799 = mul nsw i32 %3798, %26
  %3800 = ashr i32 %3783, 3
  %3801 = add nsw i32 %3800, %3799
  %3802 = sext i32 %3801 to i64
  %3803 = getelementptr inbounds i8, i8* %36, i64 %3802
  %3804 = and i32 %3783, 7
  %3805 = and i32 %3762, 7
  %3806 = call i32 %3797(i8* %3803, i32 %26, i32 %3804, i32 %3805, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3819

3807:                                             ; preds = %3791
  %3808 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3809 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3808, align 8
  %3810 = ashr i32 %3762, 3
  %3811 = mul nsw i32 %3810, %26
  %3812 = ashr i32 %3783, 3
  %3813 = add nsw i32 %3812, %3811
  %3814 = sext i32 %3813 to i64
  %3815 = getelementptr inbounds i8, i8* %36, i64 %3814
  %3816 = and i32 %3783, 7
  %3817 = and i32 %3762, 7
  %3818 = call i32 %3809(i8* %3815, i32 %26, i32 %3816, i32 %3817, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3819

3819:                                             ; preds = %3807, %3795
  %3820 = phi i32 [ %3806, %3795 ], [ %3818, %3807 ]
  %3821 = sext i32 %3820 to i64
  %3822 = icmp eq i32** %10, null
  br i1 %3822, label %3850, label %3823

3823:                                             ; preds = %3819
  %3824 = sub i16 %3792, %38
  %3825 = sub i16 %3793, %40
  %3826 = icmp eq i16 %3824, 0
  %3827 = icmp eq i16 %3825, 0
  %3828 = xor i1 %3827, true
  %3829 = zext i1 %3828 to i64
  %3830 = select i1 %3827, i64 2, i64 3
  %3831 = select i1 %3826, i64 %3829, i64 %3830
  %3832 = getelementptr inbounds i32, i32* %9, i64 %3831
  %3833 = load i32, i32* %3832, align 4
  %3834 = load i32*, i32** %10, align 8
  %3835 = sext i16 %3824 to i64
  %3836 = getelementptr inbounds i32, i32* %3834, i64 %3835
  %3837 = load i32, i32* %3836, align 4
  %3838 = add nsw i32 %3837, %3833
  %3839 = getelementptr inbounds i32*, i32** %10, i64 1
  %3840 = load i32*, i32** %3839, align 8
  %3841 = sext i16 %3825 to i64
  %3842 = getelementptr inbounds i32, i32* %3840, i64 %3841
  %3843 = load i32, i32* %3842, align 4
  %3844 = add nsw i32 %3838, %3843
  %3845 = sext i32 %3844 to i64
  %3846 = sext i32 %4 to i64
  %3847 = mul nsw i64 %3845, %3846
  %3848 = add nsw i64 %3847, 8192
  %3849 = lshr i64 %3848, 14
  br label %3850

3850:                                             ; preds = %3819, %3823
  %3851 = phi i64 [ %3849, %3823 ], [ 0, %3819 ]
  %3852 = shl i64 %3851, 32
  %3853 = ashr exact i64 %3852, 32
  %3854 = add nsw i64 %3853, %3821
  %3855 = icmp sgt i64 %3854, 2147483646
  br i1 %3855, label %3861, label %3856

3856:                                             ; preds = %3850
  %3857 = trunc i64 %3854 to i32
  %3858 = icmp ugt i32 %3761, %3857
  br i1 %3858, label %3859, label %3861

3859:                                             ; preds = %3856
  store i32 %3820, i32* %11, align 4
  %3860 = load i32, i32* %18, align 4
  store i32 %3860, i32* %12, align 4
  br label %3861

3861:                                             ; preds = %3859, %3856, %3850, %3782
  %3862 = phi i32 [ %3761, %3782 ], [ %3857, %3859 ], [ %3761, %3856 ], [ %3761, %3850 ]
  %3863 = phi i32 [ %3763, %3782 ], [ %3783, %3859 ], [ %3763, %3856 ], [ %3763, %3850 ]
  %3864 = phi i32 [ 2147483647, %3782 ], [ %3857, %3859 ], [ %3857, %3856 ], [ 2147483647, %3850 ]
  %3865 = add nsw i32 %3764, %3763
  %3866 = icmp slt i32 %3865, %70
  %3867 = icmp sgt i32 %3865, %72
  %3868 = or i1 %3866, %3867
  %3869 = or i1 %3787, %3868
  %3870 = or i1 %3789, %3869
  br i1 %3870, label %3941, label %3871

3871:                                             ; preds = %3861
  %3872 = trunc i32 %3762 to i16
  %3873 = trunc i32 %3865 to i16
  %3874 = icmp eq i8* %13, null
  br i1 %3874, label %3875, label %3887

3875:                                             ; preds = %3871
  %3876 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3877 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3876, align 8
  %3878 = ashr i32 %3762, 3
  %3879 = mul nsw i32 %3878, %26
  %3880 = ashr i32 %3865, 3
  %3881 = add nsw i32 %3880, %3879
  %3882 = sext i32 %3881 to i64
  %3883 = getelementptr inbounds i8, i8* %36, i64 %3882
  %3884 = and i32 %3865, 7
  %3885 = and i32 %3762, 7
  %3886 = call i32 %3877(i8* %3883, i32 %26, i32 %3884, i32 %3885, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3899

3887:                                             ; preds = %3871
  %3888 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3889 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3888, align 8
  %3890 = ashr i32 %3762, 3
  %3891 = mul nsw i32 %3890, %26
  %3892 = ashr i32 %3865, 3
  %3893 = add nsw i32 %3892, %3891
  %3894 = sext i32 %3893 to i64
  %3895 = getelementptr inbounds i8, i8* %36, i64 %3894
  %3896 = and i32 %3865, 7
  %3897 = and i32 %3762, 7
  %3898 = call i32 %3889(i8* %3895, i32 %26, i32 %3896, i32 %3897, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3899

3899:                                             ; preds = %3887, %3875
  %3900 = phi i32 [ %3886, %3875 ], [ %3898, %3887 ]
  %3901 = sext i32 %3900 to i64
  %3902 = icmp eq i32** %10, null
  br i1 %3902, label %3930, label %3903

3903:                                             ; preds = %3899
  %3904 = sub i16 %3872, %38
  %3905 = sub i16 %3873, %40
  %3906 = icmp eq i16 %3904, 0
  %3907 = icmp eq i16 %3905, 0
  %3908 = xor i1 %3907, true
  %3909 = zext i1 %3908 to i64
  %3910 = select i1 %3907, i64 2, i64 3
  %3911 = select i1 %3906, i64 %3909, i64 %3910
  %3912 = getelementptr inbounds i32, i32* %9, i64 %3911
  %3913 = load i32, i32* %3912, align 4
  %3914 = load i32*, i32** %10, align 8
  %3915 = sext i16 %3904 to i64
  %3916 = getelementptr inbounds i32, i32* %3914, i64 %3915
  %3917 = load i32, i32* %3916, align 4
  %3918 = add nsw i32 %3917, %3913
  %3919 = getelementptr inbounds i32*, i32** %10, i64 1
  %3920 = load i32*, i32** %3919, align 8
  %3921 = sext i16 %3905 to i64
  %3922 = getelementptr inbounds i32, i32* %3920, i64 %3921
  %3923 = load i32, i32* %3922, align 4
  %3924 = add nsw i32 %3918, %3923
  %3925 = sext i32 %3924 to i64
  %3926 = sext i32 %4 to i64
  %3927 = mul nsw i64 %3925, %3926
  %3928 = add nsw i64 %3927, 8192
  %3929 = lshr i64 %3928, 14
  br label %3930

3930:                                             ; preds = %3899, %3903
  %3931 = phi i64 [ %3929, %3903 ], [ 0, %3899 ]
  %3932 = shl i64 %3931, 32
  %3933 = ashr exact i64 %3932, 32
  %3934 = add nsw i64 %3933, %3901
  %3935 = icmp sgt i64 %3934, 2147483646
  br i1 %3935, label %3941, label %3936

3936:                                             ; preds = %3930
  %3937 = trunc i64 %3934 to i32
  %3938 = icmp ugt i32 %3862, %3937
  br i1 %3938, label %3939, label %3941

3939:                                             ; preds = %3936
  store i32 %3900, i32* %11, align 4
  %3940 = load i32, i32* %18, align 4
  store i32 %3940, i32* %12, align 4
  br label %3941

3941:                                             ; preds = %3939, %3936, %3930, %3861
  %3942 = phi i32 [ %3862, %3861 ], [ %3937, %3939 ], [ %3862, %3936 ], [ %3862, %3930 ]
  %3943 = phi i32 [ %3863, %3861 ], [ %3865, %3939 ], [ %3863, %3936 ], [ %3863, %3930 ]
  %3944 = phi i32 [ 2147483647, %3861 ], [ %3937, %3939 ], [ %3937, %3936 ], [ 2147483647, %3930 ]
  %3945 = icmp slt i32 %3763, %70
  %3946 = icmp sgt i32 %3763, %72
  %3947 = or i1 %3945, %3946
  br i1 %3947, label %4102, label %3948

3948:                                             ; preds = %3941
  %3949 = sub nsw i32 %3762, %3764
  %3950 = icmp slt i32 %3949, %74
  %3951 = icmp sgt i32 %3949, %76
  %3952 = or i1 %3950, %3951
  br i1 %3952, label %4023, label %3953

3953:                                             ; preds = %3948
  %3954 = trunc i32 %3949 to i16
  %3955 = trunc i32 %3763 to i16
  %3956 = icmp eq i8* %13, null
  br i1 %3956, label %3957, label %3969

3957:                                             ; preds = %3953
  %3958 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %3959 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %3958, align 8
  %3960 = ashr i32 %3949, 3
  %3961 = mul nsw i32 %3960, %26
  %3962 = ashr i32 %3763, 3
  %3963 = add nsw i32 %3961, %3962
  %3964 = sext i32 %3963 to i64
  %3965 = getelementptr inbounds i8, i8* %36, i64 %3964
  %3966 = and i32 %3763, 7
  %3967 = and i32 %3949, 7
  %3968 = call i32 %3959(i8* %3965, i32 %26, i32 %3966, i32 %3967, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %3981

3969:                                             ; preds = %3953
  %3970 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %3971 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %3970, align 8
  %3972 = ashr i32 %3949, 3
  %3973 = mul nsw i32 %3972, %26
  %3974 = ashr i32 %3763, 3
  %3975 = add nsw i32 %3973, %3974
  %3976 = sext i32 %3975 to i64
  %3977 = getelementptr inbounds i8, i8* %36, i64 %3976
  %3978 = and i32 %3763, 7
  %3979 = and i32 %3949, 7
  %3980 = call i32 %3971(i8* %3977, i32 %26, i32 %3978, i32 %3979, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %3981

3981:                                             ; preds = %3969, %3957
  %3982 = phi i32 [ %3968, %3957 ], [ %3980, %3969 ]
  %3983 = sext i32 %3982 to i64
  %3984 = icmp eq i32** %10, null
  br i1 %3984, label %4012, label %3985

3985:                                             ; preds = %3981
  %3986 = sub i16 %3954, %38
  %3987 = sub i16 %3955, %40
  %3988 = icmp eq i16 %3986, 0
  %3989 = icmp eq i16 %3987, 0
  %3990 = xor i1 %3989, true
  %3991 = zext i1 %3990 to i64
  %3992 = select i1 %3989, i64 2, i64 3
  %3993 = select i1 %3988, i64 %3991, i64 %3992
  %3994 = getelementptr inbounds i32, i32* %9, i64 %3993
  %3995 = load i32, i32* %3994, align 4
  %3996 = load i32*, i32** %10, align 8
  %3997 = sext i16 %3986 to i64
  %3998 = getelementptr inbounds i32, i32* %3996, i64 %3997
  %3999 = load i32, i32* %3998, align 4
  %4000 = add nsw i32 %3999, %3995
  %4001 = getelementptr inbounds i32*, i32** %10, i64 1
  %4002 = load i32*, i32** %4001, align 8
  %4003 = sext i16 %3987 to i64
  %4004 = getelementptr inbounds i32, i32* %4002, i64 %4003
  %4005 = load i32, i32* %4004, align 4
  %4006 = add nsw i32 %4000, %4005
  %4007 = sext i32 %4006 to i64
  %4008 = sext i32 %4 to i64
  %4009 = mul nsw i64 %4007, %4008
  %4010 = add nsw i64 %4009, 8192
  %4011 = lshr i64 %4010, 14
  br label %4012

4012:                                             ; preds = %3981, %3985
  %4013 = phi i64 [ %4011, %3985 ], [ 0, %3981 ]
  %4014 = shl i64 %4013, 32
  %4015 = ashr exact i64 %4014, 32
  %4016 = add nsw i64 %4015, %3983
  %4017 = icmp sgt i64 %4016, 2147483646
  br i1 %4017, label %4023, label %4018

4018:                                             ; preds = %4012
  %4019 = trunc i64 %4016 to i32
  %4020 = icmp ugt i32 %3942, %4019
  br i1 %4020, label %4021, label %4023

4021:                                             ; preds = %4018
  store i32 %3982, i32* %11, align 4
  %4022 = load i32, i32* %18, align 4
  store i32 %4022, i32* %12, align 4
  br label %4023

4023:                                             ; preds = %4021, %4018, %4012, %3948
  %4024 = phi i32 [ %3942, %4012 ], [ %3942, %4018 ], [ %4019, %4021 ], [ %3942, %3948 ]
  %4025 = phi i32 [ %3762, %4012 ], [ %3762, %4018 ], [ %3949, %4021 ], [ %3762, %3948 ]
  %4026 = phi i32 [ %3943, %4012 ], [ %3943, %4018 ], [ %3763, %4021 ], [ %3943, %3948 ]
  %4027 = phi i32 [ 2147483647, %4012 ], [ %4019, %4018 ], [ %4019, %4021 ], [ 2147483647, %3948 ]
  %4028 = add nsw i32 %3764, %3762
  %4029 = icmp slt i32 %4028, %74
  %4030 = icmp sgt i32 %4028, %76
  %4031 = or i1 %4029, %4030
  br i1 %4031, label %4102, label %4032

4032:                                             ; preds = %4023
  %4033 = trunc i32 %4028 to i16
  %4034 = trunc i32 %3763 to i16
  %4035 = icmp eq i8* %13, null
  br i1 %4035, label %4036, label %4048

4036:                                             ; preds = %4032
  %4037 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4038 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4037, align 8
  %4039 = ashr i32 %4028, 3
  %4040 = mul nsw i32 %4039, %26
  %4041 = ashr i32 %3763, 3
  %4042 = add nsw i32 %4040, %4041
  %4043 = sext i32 %4042 to i64
  %4044 = getelementptr inbounds i8, i8* %36, i64 %4043
  %4045 = and i32 %3763, 7
  %4046 = and i32 %4028, 7
  %4047 = call i32 %4038(i8* %4044, i32 %26, i32 %4045, i32 %4046, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4060

4048:                                             ; preds = %4032
  %4049 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4050 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4049, align 8
  %4051 = ashr i32 %4028, 3
  %4052 = mul nsw i32 %4051, %26
  %4053 = ashr i32 %3763, 3
  %4054 = add nsw i32 %4052, %4053
  %4055 = sext i32 %4054 to i64
  %4056 = getelementptr inbounds i8, i8* %36, i64 %4055
  %4057 = and i32 %3763, 7
  %4058 = and i32 %4028, 7
  %4059 = call i32 %4050(i8* %4056, i32 %26, i32 %4057, i32 %4058, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4060

4060:                                             ; preds = %4048, %4036
  %4061 = phi i32 [ %4047, %4036 ], [ %4059, %4048 ]
  %4062 = sext i32 %4061 to i64
  %4063 = icmp eq i32** %10, null
  br i1 %4063, label %4091, label %4064

4064:                                             ; preds = %4060
  %4065 = sub i16 %4033, %38
  %4066 = sub i16 %4034, %40
  %4067 = icmp eq i16 %4065, 0
  %4068 = icmp eq i16 %4066, 0
  %4069 = xor i1 %4068, true
  %4070 = zext i1 %4069 to i64
  %4071 = select i1 %4068, i64 2, i64 3
  %4072 = select i1 %4067, i64 %4070, i64 %4071
  %4073 = getelementptr inbounds i32, i32* %9, i64 %4072
  %4074 = load i32, i32* %4073, align 4
  %4075 = load i32*, i32** %10, align 8
  %4076 = sext i16 %4065 to i64
  %4077 = getelementptr inbounds i32, i32* %4075, i64 %4076
  %4078 = load i32, i32* %4077, align 4
  %4079 = add nsw i32 %4078, %4074
  %4080 = getelementptr inbounds i32*, i32** %10, i64 1
  %4081 = load i32*, i32** %4080, align 8
  %4082 = sext i16 %4066 to i64
  %4083 = getelementptr inbounds i32, i32* %4081, i64 %4082
  %4084 = load i32, i32* %4083, align 4
  %4085 = add nsw i32 %4079, %4084
  %4086 = sext i32 %4085 to i64
  %4087 = sext i32 %4 to i64
  %4088 = mul nsw i64 %4086, %4087
  %4089 = add nsw i64 %4088, 8192
  %4090 = lshr i64 %4089, 14
  br label %4091

4091:                                             ; preds = %4060, %4064
  %4092 = phi i64 [ %4090, %4064 ], [ 0, %4060 ]
  %4093 = shl i64 %4092, 32
  %4094 = ashr exact i64 %4093, 32
  %4095 = add nsw i64 %4094, %4062
  %4096 = icmp sgt i64 %4095, 2147483646
  br i1 %4096, label %4102, label %4097

4097:                                             ; preds = %4091
  %4098 = trunc i64 %4095 to i32
  %4099 = icmp ugt i32 %4024, %4098
  br i1 %4099, label %4100, label %4102

4100:                                             ; preds = %4097
  store i32 %4061, i32* %11, align 4
  %4101 = load i32, i32* %18, align 4
  store i32 %4101, i32* %12, align 4
  br label %4102

4102:                                             ; preds = %4100, %4097, %4091, %3941, %4023
  %4103 = phi i32 [ %4027, %4023 ], [ 2147483647, %3941 ], [ %4027, %4091 ], [ %4027, %4097 ], [ %4027, %4100 ]
  %4104 = phi i32 [ %4024, %4023 ], [ %3942, %3941 ], [ %4024, %4091 ], [ %4024, %4097 ], [ %4098, %4100 ]
  %4105 = phi i32 [ %4025, %4023 ], [ %3762, %3941 ], [ %4025, %4091 ], [ %4025, %4097 ], [ %4028, %4100 ]
  %4106 = phi i32 [ %4026, %4023 ], [ %3943, %3941 ], [ %4026, %4091 ], [ %4026, %4097 ], [ %3763, %4100 ]
  %4107 = phi i32 [ 2147483647, %4023 ], [ 2147483647, %3941 ], [ 2147483647, %4091 ], [ %4098, %4097 ], [ %4098, %4100 ]
  %4108 = icmp uge i32 %3864, %3944
  %4109 = zext i1 %4108 to i32
  %4110 = icmp ult i32 %4103, %4107
  %4111 = select i1 %4110, i32 0, i32 2
  %4112 = or i32 %4111, %4109
  switch i32 %4112, label %4417 [
    i32 0, label %4113
    i32 1, label %4189
    i32 2, label %4265
    i32 3, label %4341
  ]

4113:                                             ; preds = %4102
  br i1 %3786, label %4418, label %4114

4114:                                             ; preds = %4113
  %4115 = sub nsw i32 %3762, %3764
  %4116 = icmp slt i32 %4115, %74
  %4117 = icmp sgt i32 %4115, %76
  %4118 = or i1 %4116, %4117
  br i1 %4118, label %4418, label %4119

4119:                                             ; preds = %4114
  %4120 = trunc i32 %4115 to i16
  %4121 = trunc i32 %3783 to i16
  %4122 = icmp eq i8* %13, null
  br i1 %4122, label %4123, label %4135

4123:                                             ; preds = %4119
  %4124 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4125 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4124, align 8
  %4126 = ashr i32 %4115, 3
  %4127 = mul nsw i32 %4126, %26
  %4128 = ashr i32 %3783, 3
  %4129 = add nsw i32 %4127, %4128
  %4130 = sext i32 %4129 to i64
  %4131 = getelementptr inbounds i8, i8* %36, i64 %4130
  %4132 = and i32 %3783, 7
  %4133 = and i32 %4115, 7
  %4134 = call i32 %4125(i8* %4131, i32 %26, i32 %4132, i32 %4133, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4147

4135:                                             ; preds = %4119
  %4136 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4137 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4136, align 8
  %4138 = ashr i32 %4115, 3
  %4139 = mul nsw i32 %4138, %26
  %4140 = ashr i32 %3783, 3
  %4141 = add nsw i32 %4139, %4140
  %4142 = sext i32 %4141 to i64
  %4143 = getelementptr inbounds i8, i8* %36, i64 %4142
  %4144 = and i32 %3783, 7
  %4145 = and i32 %4115, 7
  %4146 = call i32 %4137(i8* %4143, i32 %26, i32 %4144, i32 %4145, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4147

4147:                                             ; preds = %4135, %4123
  %4148 = phi i32 [ %4134, %4123 ], [ %4146, %4135 ]
  %4149 = sext i32 %4148 to i64
  %4150 = icmp eq i32** %10, null
  br i1 %4150, label %4178, label %4151

4151:                                             ; preds = %4147
  %4152 = sub i16 %4120, %38
  %4153 = sub i16 %4121, %40
  %4154 = icmp eq i16 %4152, 0
  %4155 = icmp eq i16 %4153, 0
  %4156 = xor i1 %4155, true
  %4157 = zext i1 %4156 to i64
  %4158 = select i1 %4155, i64 2, i64 3
  %4159 = select i1 %4154, i64 %4157, i64 %4158
  %4160 = getelementptr inbounds i32, i32* %9, i64 %4159
  %4161 = load i32, i32* %4160, align 4
  %4162 = load i32*, i32** %10, align 8
  %4163 = sext i16 %4152 to i64
  %4164 = getelementptr inbounds i32, i32* %4162, i64 %4163
  %4165 = load i32, i32* %4164, align 4
  %4166 = add nsw i32 %4165, %4161
  %4167 = getelementptr inbounds i32*, i32** %10, i64 1
  %4168 = load i32*, i32** %4167, align 8
  %4169 = sext i16 %4153 to i64
  %4170 = getelementptr inbounds i32, i32* %4168, i64 %4169
  %4171 = load i32, i32* %4170, align 4
  %4172 = add nsw i32 %4166, %4171
  %4173 = sext i32 %4172 to i64
  %4174 = sext i32 %4 to i64
  %4175 = mul nsw i64 %4173, %4174
  %4176 = add nsw i64 %4175, 8192
  %4177 = lshr i64 %4176, 14
  br label %4178

4178:                                             ; preds = %4147, %4151
  %4179 = phi i64 [ %4177, %4151 ], [ 0, %4147 ]
  %4180 = shl i64 %4179, 32
  %4181 = ashr exact i64 %4180, 32
  %4182 = add nsw i64 %4181, %4149
  %4183 = icmp sgt i64 %4182, 2147483646
  br i1 %4183, label %4418, label %4184

4184:                                             ; preds = %4178
  %4185 = trunc i64 %4182 to i32
  %4186 = icmp ugt i32 %4104, %4185
  br i1 %4186, label %4187, label %4418

4187:                                             ; preds = %4184
  store i32 %4148, i32* %11, align 4
  %4188 = load i32, i32* %18, align 4
  store i32 %4188, i32* %12, align 4
  br label %4418

4189:                                             ; preds = %4102
  br i1 %3868, label %4418, label %4190

4190:                                             ; preds = %4189
  %4191 = sub nsw i32 %3762, %3764
  %4192 = icmp slt i32 %4191, %74
  %4193 = icmp sgt i32 %4191, %76
  %4194 = or i1 %4192, %4193
  br i1 %4194, label %4418, label %4195

4195:                                             ; preds = %4190
  %4196 = trunc i32 %4191 to i16
  %4197 = trunc i32 %3865 to i16
  %4198 = icmp eq i8* %13, null
  br i1 %4198, label %4199, label %4211

4199:                                             ; preds = %4195
  %4200 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4201 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4200, align 8
  %4202 = ashr i32 %4191, 3
  %4203 = mul nsw i32 %4202, %26
  %4204 = ashr i32 %3865, 3
  %4205 = add nsw i32 %4203, %4204
  %4206 = sext i32 %4205 to i64
  %4207 = getelementptr inbounds i8, i8* %36, i64 %4206
  %4208 = and i32 %3865, 7
  %4209 = and i32 %4191, 7
  %4210 = call i32 %4201(i8* %4207, i32 %26, i32 %4208, i32 %4209, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4223

4211:                                             ; preds = %4195
  %4212 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4213 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4212, align 8
  %4214 = ashr i32 %4191, 3
  %4215 = mul nsw i32 %4214, %26
  %4216 = ashr i32 %3865, 3
  %4217 = add nsw i32 %4215, %4216
  %4218 = sext i32 %4217 to i64
  %4219 = getelementptr inbounds i8, i8* %36, i64 %4218
  %4220 = and i32 %3865, 7
  %4221 = and i32 %4191, 7
  %4222 = call i32 %4213(i8* %4219, i32 %26, i32 %4220, i32 %4221, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4223

4223:                                             ; preds = %4211, %4199
  %4224 = phi i32 [ %4210, %4199 ], [ %4222, %4211 ]
  %4225 = sext i32 %4224 to i64
  %4226 = icmp eq i32** %10, null
  br i1 %4226, label %4254, label %4227

4227:                                             ; preds = %4223
  %4228 = sub i16 %4196, %38
  %4229 = sub i16 %4197, %40
  %4230 = icmp eq i16 %4228, 0
  %4231 = icmp eq i16 %4229, 0
  %4232 = xor i1 %4231, true
  %4233 = zext i1 %4232 to i64
  %4234 = select i1 %4231, i64 2, i64 3
  %4235 = select i1 %4230, i64 %4233, i64 %4234
  %4236 = getelementptr inbounds i32, i32* %9, i64 %4235
  %4237 = load i32, i32* %4236, align 4
  %4238 = load i32*, i32** %10, align 8
  %4239 = sext i16 %4228 to i64
  %4240 = getelementptr inbounds i32, i32* %4238, i64 %4239
  %4241 = load i32, i32* %4240, align 4
  %4242 = add nsw i32 %4241, %4237
  %4243 = getelementptr inbounds i32*, i32** %10, i64 1
  %4244 = load i32*, i32** %4243, align 8
  %4245 = sext i16 %4229 to i64
  %4246 = getelementptr inbounds i32, i32* %4244, i64 %4245
  %4247 = load i32, i32* %4246, align 4
  %4248 = add nsw i32 %4242, %4247
  %4249 = sext i32 %4248 to i64
  %4250 = sext i32 %4 to i64
  %4251 = mul nsw i64 %4249, %4250
  %4252 = add nsw i64 %4251, 8192
  %4253 = lshr i64 %4252, 14
  br label %4254

4254:                                             ; preds = %4223, %4227
  %4255 = phi i64 [ %4253, %4227 ], [ 0, %4223 ]
  %4256 = shl i64 %4255, 32
  %4257 = ashr exact i64 %4256, 32
  %4258 = add nsw i64 %4257, %4225
  %4259 = icmp sgt i64 %4258, 2147483646
  br i1 %4259, label %4418, label %4260

4260:                                             ; preds = %4254
  %4261 = trunc i64 %4258 to i32
  %4262 = icmp ugt i32 %4104, %4261
  br i1 %4262, label %4263, label %4418

4263:                                             ; preds = %4260
  store i32 %4224, i32* %11, align 4
  %4264 = load i32, i32* %18, align 4
  store i32 %4264, i32* %12, align 4
  br label %4418

4265:                                             ; preds = %4102
  br i1 %3786, label %4418, label %4266

4266:                                             ; preds = %4265
  %4267 = add nsw i32 %3764, %3762
  %4268 = icmp slt i32 %4267, %74
  %4269 = icmp sgt i32 %4267, %76
  %4270 = or i1 %4268, %4269
  br i1 %4270, label %4418, label %4271

4271:                                             ; preds = %4266
  %4272 = trunc i32 %4267 to i16
  %4273 = trunc i32 %3783 to i16
  %4274 = icmp eq i8* %13, null
  br i1 %4274, label %4275, label %4287

4275:                                             ; preds = %4271
  %4276 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4277 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4276, align 8
  %4278 = ashr i32 %4267, 3
  %4279 = mul nsw i32 %4278, %26
  %4280 = ashr i32 %3783, 3
  %4281 = add nsw i32 %4279, %4280
  %4282 = sext i32 %4281 to i64
  %4283 = getelementptr inbounds i8, i8* %36, i64 %4282
  %4284 = and i32 %3783, 7
  %4285 = and i32 %4267, 7
  %4286 = call i32 %4277(i8* %4283, i32 %26, i32 %4284, i32 %4285, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4299

4287:                                             ; preds = %4271
  %4288 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4289 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4288, align 8
  %4290 = ashr i32 %4267, 3
  %4291 = mul nsw i32 %4290, %26
  %4292 = ashr i32 %3783, 3
  %4293 = add nsw i32 %4291, %4292
  %4294 = sext i32 %4293 to i64
  %4295 = getelementptr inbounds i8, i8* %36, i64 %4294
  %4296 = and i32 %3783, 7
  %4297 = and i32 %4267, 7
  %4298 = call i32 %4289(i8* %4295, i32 %26, i32 %4296, i32 %4297, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4299

4299:                                             ; preds = %4287, %4275
  %4300 = phi i32 [ %4286, %4275 ], [ %4298, %4287 ]
  %4301 = sext i32 %4300 to i64
  %4302 = icmp eq i32** %10, null
  br i1 %4302, label %4330, label %4303

4303:                                             ; preds = %4299
  %4304 = sub i16 %4272, %38
  %4305 = sub i16 %4273, %40
  %4306 = icmp eq i16 %4304, 0
  %4307 = icmp eq i16 %4305, 0
  %4308 = xor i1 %4307, true
  %4309 = zext i1 %4308 to i64
  %4310 = select i1 %4307, i64 2, i64 3
  %4311 = select i1 %4306, i64 %4309, i64 %4310
  %4312 = getelementptr inbounds i32, i32* %9, i64 %4311
  %4313 = load i32, i32* %4312, align 4
  %4314 = load i32*, i32** %10, align 8
  %4315 = sext i16 %4304 to i64
  %4316 = getelementptr inbounds i32, i32* %4314, i64 %4315
  %4317 = load i32, i32* %4316, align 4
  %4318 = add nsw i32 %4317, %4313
  %4319 = getelementptr inbounds i32*, i32** %10, i64 1
  %4320 = load i32*, i32** %4319, align 8
  %4321 = sext i16 %4305 to i64
  %4322 = getelementptr inbounds i32, i32* %4320, i64 %4321
  %4323 = load i32, i32* %4322, align 4
  %4324 = add nsw i32 %4318, %4323
  %4325 = sext i32 %4324 to i64
  %4326 = sext i32 %4 to i64
  %4327 = mul nsw i64 %4325, %4326
  %4328 = add nsw i64 %4327, 8192
  %4329 = lshr i64 %4328, 14
  br label %4330

4330:                                             ; preds = %4299, %4303
  %4331 = phi i64 [ %4329, %4303 ], [ 0, %4299 ]
  %4332 = shl i64 %4331, 32
  %4333 = ashr exact i64 %4332, 32
  %4334 = add nsw i64 %4333, %4301
  %4335 = icmp sgt i64 %4334, 2147483646
  br i1 %4335, label %4418, label %4336

4336:                                             ; preds = %4330
  %4337 = trunc i64 %4334 to i32
  %4338 = icmp ugt i32 %4104, %4337
  br i1 %4338, label %4339, label %4418

4339:                                             ; preds = %4336
  store i32 %4300, i32* %11, align 4
  %4340 = load i32, i32* %18, align 4
  store i32 %4340, i32* %12, align 4
  br label %4418

4341:                                             ; preds = %4102
  br i1 %3868, label %4418, label %4342

4342:                                             ; preds = %4341
  %4343 = add nsw i32 %3764, %3762
  %4344 = icmp slt i32 %4343, %74
  %4345 = icmp sgt i32 %4343, %76
  %4346 = or i1 %4344, %4345
  br i1 %4346, label %4418, label %4347

4347:                                             ; preds = %4342
  %4348 = trunc i32 %4343 to i16
  %4349 = trunc i32 %3865 to i16
  %4350 = icmp eq i8* %13, null
  br i1 %4350, label %4351, label %4363

4351:                                             ; preds = %4347
  %4352 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4353 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4352, align 8
  %4354 = ashr i32 %4343, 3
  %4355 = mul nsw i32 %4354, %26
  %4356 = ashr i32 %3865, 3
  %4357 = add nsw i32 %4355, %4356
  %4358 = sext i32 %4357 to i64
  %4359 = getelementptr inbounds i8, i8* %36, i64 %4358
  %4360 = and i32 %3865, 7
  %4361 = and i32 %4343, 7
  %4362 = call i32 %4353(i8* %4359, i32 %26, i32 %4360, i32 %4361, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4375

4363:                                             ; preds = %4347
  %4364 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4365 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4364, align 8
  %4366 = ashr i32 %4343, 3
  %4367 = mul nsw i32 %4366, %26
  %4368 = ashr i32 %3865, 3
  %4369 = add nsw i32 %4367, %4368
  %4370 = sext i32 %4369 to i64
  %4371 = getelementptr inbounds i8, i8* %36, i64 %4370
  %4372 = and i32 %3865, 7
  %4373 = and i32 %4343, 7
  %4374 = call i32 %4365(i8* %4371, i32 %26, i32 %4372, i32 %4373, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4375

4375:                                             ; preds = %4363, %4351
  %4376 = phi i32 [ %4362, %4351 ], [ %4374, %4363 ]
  %4377 = sext i32 %4376 to i64
  %4378 = icmp eq i32** %10, null
  br i1 %4378, label %4406, label %4379

4379:                                             ; preds = %4375
  %4380 = sub i16 %4348, %38
  %4381 = sub i16 %4349, %40
  %4382 = icmp eq i16 %4380, 0
  %4383 = icmp eq i16 %4381, 0
  %4384 = xor i1 %4383, true
  %4385 = zext i1 %4384 to i64
  %4386 = select i1 %4383, i64 2, i64 3
  %4387 = select i1 %4382, i64 %4385, i64 %4386
  %4388 = getelementptr inbounds i32, i32* %9, i64 %4387
  %4389 = load i32, i32* %4388, align 4
  %4390 = load i32*, i32** %10, align 8
  %4391 = sext i16 %4380 to i64
  %4392 = getelementptr inbounds i32, i32* %4390, i64 %4391
  %4393 = load i32, i32* %4392, align 4
  %4394 = add nsw i32 %4393, %4389
  %4395 = getelementptr inbounds i32*, i32** %10, i64 1
  %4396 = load i32*, i32** %4395, align 8
  %4397 = sext i16 %4381 to i64
  %4398 = getelementptr inbounds i32, i32* %4396, i64 %4397
  %4399 = load i32, i32* %4398, align 4
  %4400 = add nsw i32 %4394, %4399
  %4401 = sext i32 %4400 to i64
  %4402 = sext i32 %4 to i64
  %4403 = mul nsw i64 %4401, %4402
  %4404 = add nsw i64 %4403, 8192
  %4405 = lshr i64 %4404, 14
  br label %4406

4406:                                             ; preds = %4375, %4379
  %4407 = phi i64 [ %4405, %4379 ], [ 0, %4375 ]
  %4408 = shl i64 %4407, 32
  %4409 = ashr exact i64 %4408, 32
  %4410 = add nsw i64 %4409, %4377
  %4411 = icmp sgt i64 %4410, 2147483646
  br i1 %4411, label %4418, label %4412

4412:                                             ; preds = %4406
  %4413 = trunc i64 %4410 to i32
  %4414 = icmp ugt i32 %4104, %4413
  br i1 %4414, label %4415, label %4418

4415:                                             ; preds = %4412
  store i32 %4376, i32* %11, align 4
  %4416 = load i32, i32* %18, align 4
  store i32 %4416, i32* %12, align 4
  br label %4418

4417:                                             ; preds = %4102
  unreachable

4418:                                             ; preds = %4415, %4412, %4406, %4339, %4336, %4330, %4263, %4260, %4254, %4187, %4184, %4178, %4342, %4341, %4266, %4265, %4190, %4189, %4114, %4113
  %4419 = phi i32 [ %4104, %4113 ], [ %4104, %4114 ], [ %4104, %4189 ], [ %4104, %4190 ], [ %4104, %4265 ], [ %4104, %4266 ], [ %4104, %4341 ], [ %4104, %4342 ], [ %4185, %4187 ], [ %4104, %4184 ], [ %4104, %4178 ], [ %4261, %4263 ], [ %4104, %4260 ], [ %4104, %4254 ], [ %4337, %4339 ], [ %4104, %4336 ], [ %4104, %4330 ], [ %4413, %4415 ], [ %4104, %4412 ], [ %4104, %4406 ]
  %4420 = phi i32 [ %4105, %4113 ], [ %4105, %4114 ], [ %4105, %4189 ], [ %4105, %4190 ], [ %4105, %4265 ], [ %4105, %4266 ], [ %4105, %4341 ], [ %4105, %4342 ], [ %4115, %4187 ], [ %4105, %4184 ], [ %4105, %4178 ], [ %4191, %4263 ], [ %4105, %4260 ], [ %4105, %4254 ], [ %4267, %4339 ], [ %4105, %4336 ], [ %4105, %4330 ], [ %4343, %4415 ], [ %4105, %4412 ], [ %4105, %4406 ]
  %4421 = phi i32 [ %4106, %4113 ], [ %4106, %4114 ], [ %4106, %4189 ], [ %4106, %4190 ], [ %4106, %4265 ], [ %4106, %4266 ], [ %4106, %4341 ], [ %4106, %4342 ], [ %3783, %4187 ], [ %4106, %4184 ], [ %4106, %4178 ], [ %3865, %4263 ], [ %4106, %4260 ], [ %4106, %4254 ], [ %3783, %4339 ], [ %4106, %4336 ], [ %4106, %4330 ], [ %3865, %4415 ], [ %4106, %4412 ], [ %4106, %4406 ]
  %4422 = icmp ugt i32 %7, 1
  br i1 %4422, label %4423, label %5221

4423:                                             ; preds = %4418
  %4424 = icmp ne i32 %4420, %3762
  %4425 = xor i1 %4424, true
  %4426 = icmp eq i32 %4421, %3763
  %4427 = or i1 %4426, %4425
  br i1 %4427, label %4590, label %4428

4428:                                             ; preds = %4423
  %4429 = sub nsw i32 %4420, %3762
  %4430 = sub nsw i32 %4421, %3763
  %4431 = shl nsw i32 %4430, 1
  %4432 = add nsw i32 %4431, %3763
  %4433 = icmp slt i32 %4432, %70
  %4434 = icmp sgt i32 %4432, %72
  %4435 = or i1 %4433, %4434
  %4436 = icmp slt i32 %4420, %74
  %4437 = or i1 %4436, %4435
  %4438 = icmp sgt i32 %4420, %76
  %4439 = or i1 %4438, %4437
  br i1 %4439, label %4509, label %4440

4440:                                             ; preds = %4428
  %4441 = trunc i32 %4420 to i16
  %4442 = trunc i32 %4432 to i16
  %4443 = icmp eq i8* %13, null
  br i1 %4443, label %4444, label %4456

4444:                                             ; preds = %4440
  %4445 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4446 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4445, align 8
  %4447 = ashr i32 %4420, 3
  %4448 = mul nsw i32 %4447, %26
  %4449 = ashr i32 %4432, 3
  %4450 = add nsw i32 %4449, %4448
  %4451 = sext i32 %4450 to i64
  %4452 = getelementptr inbounds i8, i8* %36, i64 %4451
  %4453 = and i32 %4432, 7
  %4454 = and i32 %4420, 7
  %4455 = call i32 %4446(i8* %4452, i32 %26, i32 %4453, i32 %4454, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4468

4456:                                             ; preds = %4440
  %4457 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4458 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4457, align 8
  %4459 = ashr i32 %4420, 3
  %4460 = mul nsw i32 %4459, %26
  %4461 = ashr i32 %4432, 3
  %4462 = add nsw i32 %4461, %4460
  %4463 = sext i32 %4462 to i64
  %4464 = getelementptr inbounds i8, i8* %36, i64 %4463
  %4465 = and i32 %4432, 7
  %4466 = and i32 %4420, 7
  %4467 = call i32 %4458(i8* %4464, i32 %26, i32 %4465, i32 %4466, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4468

4468:                                             ; preds = %4456, %4444
  %4469 = phi i32 [ %4455, %4444 ], [ %4467, %4456 ]
  %4470 = sext i32 %4469 to i64
  %4471 = icmp eq i32** %10, null
  br i1 %4471, label %4500, label %4472

4472:                                             ; preds = %4468
  %4473 = sub i16 %4441, %38
  %4474 = sub i16 %4442, %40
  %4475 = icmp eq i16 %4473, 0
  %4476 = icmp eq i16 %4474, 0
  %4477 = xor i1 %4476, true
  %4478 = zext i1 %4477 to i64
  %4479 = select i1 %4476, i64 2, i64 3
  %4480 = select i1 %4475, i64 %4478, i64 %4479
  %4481 = getelementptr inbounds i32, i32* %9, i64 %4480
  %4482 = load i32, i32* %4481, align 4
  %4483 = load i32*, i32** %10, align 8
  %4484 = sext i16 %4473 to i64
  %4485 = getelementptr inbounds i32, i32* %4483, i64 %4484
  %4486 = load i32, i32* %4485, align 4
  %4487 = add nsw i32 %4486, %4482
  %4488 = getelementptr inbounds i32*, i32** %10, i64 1
  %4489 = load i32*, i32** %4488, align 8
  %4490 = sext i16 %4474 to i64
  %4491 = getelementptr inbounds i32, i32* %4489, i64 %4490
  %4492 = load i32, i32* %4491, align 4
  %4493 = add nsw i32 %4487, %4492
  %4494 = sext i32 %4493 to i64
  %4495 = sext i32 %4 to i64
  %4496 = shl nsw i64 %4495, 18
  %4497 = mul i64 %4496, %4494
  %4498 = add i64 %4497, 2147483648
  %4499 = ashr i64 %4498, 32
  br label %4500

4500:                                             ; preds = %4468, %4472
  %4501 = phi i64 [ %4499, %4472 ], [ 0, %4468 ]
  %4502 = add nsw i64 %4501, %4470
  %4503 = icmp sgt i64 %4502, 2147483646
  br i1 %4503, label %4509, label %4504

4504:                                             ; preds = %4500
  %4505 = trunc i64 %4502 to i32
  %4506 = icmp ugt i32 %4419, %4505
  br i1 %4506, label %4507, label %4509

4507:                                             ; preds = %4504
  store i32 %4469, i32* %11, align 4
  %4508 = load i32, i32* %18, align 4
  store i32 %4508, i32* %12, align 4
  br label %4509

4509:                                             ; preds = %4507, %4504, %4500, %4428
  %4510 = phi i32 [ %4419, %4428 ], [ %4505, %4507 ], [ %4419, %4504 ], [ %4419, %4500 ]
  %4511 = phi i32 [ %4421, %4428 ], [ %4432, %4507 ], [ %4421, %4504 ], [ %4421, %4500 ]
  %4512 = icmp slt i32 %4421, %70
  %4513 = icmp sgt i32 %4421, %72
  %4514 = or i1 %4512, %4513
  br i1 %4514, label %5221, label %4515

4515:                                             ; preds = %4509
  %4516 = shl nsw i32 %4429, 1
  %4517 = add nsw i32 %4516, %3762
  %4518 = icmp slt i32 %4517, %74
  %4519 = icmp sgt i32 %4517, %76
  %4520 = or i1 %4518, %4519
  br i1 %4520, label %5221, label %4521

4521:                                             ; preds = %4515
  %4522 = trunc i32 %4517 to i16
  %4523 = trunc i32 %4421 to i16
  %4524 = icmp eq i8* %13, null
  br i1 %4524, label %4525, label %4537

4525:                                             ; preds = %4521
  %4526 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4527 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4526, align 8
  %4528 = ashr i32 %4517, 3
  %4529 = mul nsw i32 %4528, %26
  %4530 = ashr i32 %4421, 3
  %4531 = add nsw i32 %4529, %4530
  %4532 = sext i32 %4531 to i64
  %4533 = getelementptr inbounds i8, i8* %36, i64 %4532
  %4534 = and i32 %4421, 7
  %4535 = and i32 %4517, 7
  %4536 = call i32 %4527(i8* %4533, i32 %26, i32 %4534, i32 %4535, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4549

4537:                                             ; preds = %4521
  %4538 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4539 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4538, align 8
  %4540 = ashr i32 %4517, 3
  %4541 = mul nsw i32 %4540, %26
  %4542 = ashr i32 %4421, 3
  %4543 = add nsw i32 %4541, %4542
  %4544 = sext i32 %4543 to i64
  %4545 = getelementptr inbounds i8, i8* %36, i64 %4544
  %4546 = and i32 %4421, 7
  %4547 = and i32 %4517, 7
  %4548 = call i32 %4539(i8* %4545, i32 %26, i32 %4546, i32 %4547, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4549

4549:                                             ; preds = %4537, %4525
  %4550 = phi i32 [ %4536, %4525 ], [ %4548, %4537 ]
  %4551 = sext i32 %4550 to i64
  %4552 = icmp eq i32** %10, null
  br i1 %4552, label %4581, label %4553

4553:                                             ; preds = %4549
  %4554 = sub i16 %4522, %38
  %4555 = sub i16 %4523, %40
  %4556 = icmp eq i16 %4554, 0
  %4557 = icmp eq i16 %4555, 0
  %4558 = xor i1 %4557, true
  %4559 = zext i1 %4558 to i64
  %4560 = select i1 %4557, i64 2, i64 3
  %4561 = select i1 %4556, i64 %4559, i64 %4560
  %4562 = getelementptr inbounds i32, i32* %9, i64 %4561
  %4563 = load i32, i32* %4562, align 4
  %4564 = load i32*, i32** %10, align 8
  %4565 = sext i16 %4554 to i64
  %4566 = getelementptr inbounds i32, i32* %4564, i64 %4565
  %4567 = load i32, i32* %4566, align 4
  %4568 = add nsw i32 %4567, %4563
  %4569 = getelementptr inbounds i32*, i32** %10, i64 1
  %4570 = load i32*, i32** %4569, align 8
  %4571 = sext i16 %4555 to i64
  %4572 = getelementptr inbounds i32, i32* %4570, i64 %4571
  %4573 = load i32, i32* %4572, align 4
  %4574 = add nsw i32 %4568, %4573
  %4575 = sext i32 %4574 to i64
  %4576 = sext i32 %4 to i64
  %4577 = shl nsw i64 %4576, 18
  %4578 = mul i64 %4577, %4575
  %4579 = add i64 %4578, 2147483648
  %4580 = ashr i64 %4579, 32
  br label %4581

4581:                                             ; preds = %4549, %4553
  %4582 = phi i64 [ %4580, %4553 ], [ 0, %4549 ]
  %4583 = add nsw i64 %4582, %4551
  %4584 = icmp sgt i64 %4583, 2147483646
  br i1 %4584, label %5221, label %4585

4585:                                             ; preds = %4581
  %4586 = trunc i64 %4583 to i32
  %4587 = icmp ugt i32 %4510, %4586
  br i1 %4587, label %4588, label %5221

4588:                                             ; preds = %4585
  store i32 %4550, i32* %11, align 4
  %4589 = load i32, i32* %18, align 4
  store i32 %4589, i32* %12, align 4
  br label %5221

4590:                                             ; preds = %4423
  %4591 = or i1 %4424, %4426
  br i1 %4591, label %4909, label %4592

4592:                                             ; preds = %4590
  %4593 = sub nsw i32 %4421, %3763
  %4594 = shl nsw i32 %4593, 1
  %4595 = add nsw i32 %4594, %3763
  %4596 = icmp slt i32 %4595, %70
  %4597 = icmp sgt i32 %4595, %72
  %4598 = or i1 %4596, %4597
  br i1 %4598, label %4751, label %4599

4599:                                             ; preds = %4592
  %4600 = add nsw i32 %3764, %3762
  %4601 = icmp slt i32 %4600, %74
  %4602 = icmp sgt i32 %4600, %76
  %4603 = or i1 %4601, %4602
  br i1 %4603, label %4674, label %4604

4604:                                             ; preds = %4599
  %4605 = trunc i32 %4600 to i16
  %4606 = trunc i32 %4595 to i16
  %4607 = icmp eq i8* %13, null
  br i1 %4607, label %4608, label %4620

4608:                                             ; preds = %4604
  %4609 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4610 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4609, align 8
  %4611 = ashr i32 %4600, 3
  %4612 = mul nsw i32 %4611, %26
  %4613 = ashr i32 %4595, 3
  %4614 = add nsw i32 %4613, %4612
  %4615 = sext i32 %4614 to i64
  %4616 = getelementptr inbounds i8, i8* %36, i64 %4615
  %4617 = and i32 %4595, 7
  %4618 = and i32 %4600, 7
  %4619 = call i32 %4610(i8* %4616, i32 %26, i32 %4617, i32 %4618, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4632

4620:                                             ; preds = %4604
  %4621 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4622 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4621, align 8
  %4623 = ashr i32 %4600, 3
  %4624 = mul nsw i32 %4623, %26
  %4625 = ashr i32 %4595, 3
  %4626 = add nsw i32 %4625, %4624
  %4627 = sext i32 %4626 to i64
  %4628 = getelementptr inbounds i8, i8* %36, i64 %4627
  %4629 = and i32 %4595, 7
  %4630 = and i32 %4600, 7
  %4631 = call i32 %4622(i8* %4628, i32 %26, i32 %4629, i32 %4630, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4632

4632:                                             ; preds = %4620, %4608
  %4633 = phi i32 [ %4619, %4608 ], [ %4631, %4620 ]
  %4634 = sext i32 %4633 to i64
  %4635 = icmp eq i32** %10, null
  br i1 %4635, label %4663, label %4636

4636:                                             ; preds = %4632
  %4637 = sub i16 %4605, %38
  %4638 = sub i16 %4606, %40
  %4639 = icmp eq i16 %4637, 0
  %4640 = icmp eq i16 %4638, 0
  %4641 = xor i1 %4640, true
  %4642 = zext i1 %4641 to i64
  %4643 = select i1 %4640, i64 2, i64 3
  %4644 = select i1 %4639, i64 %4642, i64 %4643
  %4645 = getelementptr inbounds i32, i32* %9, i64 %4644
  %4646 = load i32, i32* %4645, align 4
  %4647 = load i32*, i32** %10, align 8
  %4648 = sext i16 %4637 to i64
  %4649 = getelementptr inbounds i32, i32* %4647, i64 %4648
  %4650 = load i32, i32* %4649, align 4
  %4651 = add nsw i32 %4650, %4646
  %4652 = getelementptr inbounds i32*, i32** %10, i64 1
  %4653 = load i32*, i32** %4652, align 8
  %4654 = sext i16 %4638 to i64
  %4655 = getelementptr inbounds i32, i32* %4653, i64 %4654
  %4656 = load i32, i32* %4655, align 4
  %4657 = add nsw i32 %4651, %4656
  %4658 = sext i32 %4657 to i64
  %4659 = sext i32 %4 to i64
  %4660 = mul nsw i64 %4658, %4659
  %4661 = add nsw i64 %4660, 8192
  %4662 = lshr i64 %4661, 14
  br label %4663

4663:                                             ; preds = %4632, %4636
  %4664 = phi i64 [ %4662, %4636 ], [ 0, %4632 ]
  %4665 = shl i64 %4664, 32
  %4666 = ashr exact i64 %4665, 32
  %4667 = add nsw i64 %4666, %4634
  %4668 = icmp sgt i64 %4667, 2147483646
  br i1 %4668, label %4674, label %4669

4669:                                             ; preds = %4663
  %4670 = trunc i64 %4667 to i32
  %4671 = icmp ugt i32 %4419, %4670
  br i1 %4671, label %4672, label %4674

4672:                                             ; preds = %4669
  store i32 %4633, i32* %11, align 4
  %4673 = load i32, i32* %18, align 4
  store i32 %4673, i32* %12, align 4
  br label %4674

4674:                                             ; preds = %4672, %4669, %4663, %4599
  %4675 = phi i32 [ %4419, %4663 ], [ %4419, %4669 ], [ %4670, %4672 ], [ %4419, %4599 ]
  %4676 = phi i32 [ %3762, %4663 ], [ %3762, %4669 ], [ %4600, %4672 ], [ %3762, %4599 ]
  %4677 = phi i32 [ %4421, %4663 ], [ %4421, %4669 ], [ %4595, %4672 ], [ %4421, %4599 ]
  %4678 = sub nsw i32 %3762, %3764
  %4679 = icmp slt i32 %4678, %74
  %4680 = icmp sgt i32 %4678, %76
  %4681 = or i1 %4679, %4680
  br i1 %4681, label %4751, label %4682

4682:                                             ; preds = %4674
  %4683 = trunc i32 %4678 to i16
  %4684 = trunc i32 %4595 to i16
  %4685 = icmp eq i8* %13, null
  br i1 %4685, label %4686, label %4698

4686:                                             ; preds = %4682
  %4687 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4688 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4687, align 8
  %4689 = ashr i32 %4678, 3
  %4690 = mul nsw i32 %4689, %26
  %4691 = ashr i32 %4595, 3
  %4692 = add nsw i32 %4691, %4690
  %4693 = sext i32 %4692 to i64
  %4694 = getelementptr inbounds i8, i8* %36, i64 %4693
  %4695 = and i32 %4595, 7
  %4696 = and i32 %4678, 7
  %4697 = call i32 %4688(i8* %4694, i32 %26, i32 %4695, i32 %4696, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4710

4698:                                             ; preds = %4682
  %4699 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4700 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4699, align 8
  %4701 = ashr i32 %4678, 3
  %4702 = mul nsw i32 %4701, %26
  %4703 = ashr i32 %4595, 3
  %4704 = add nsw i32 %4703, %4702
  %4705 = sext i32 %4704 to i64
  %4706 = getelementptr inbounds i8, i8* %36, i64 %4705
  %4707 = and i32 %4595, 7
  %4708 = and i32 %4678, 7
  %4709 = call i32 %4700(i8* %4706, i32 %26, i32 %4707, i32 %4708, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4710

4710:                                             ; preds = %4698, %4686
  %4711 = phi i32 [ %4697, %4686 ], [ %4709, %4698 ]
  %4712 = sext i32 %4711 to i64
  %4713 = icmp eq i32** %10, null
  br i1 %4713, label %4742, label %4714

4714:                                             ; preds = %4710
  %4715 = sub i16 %4683, %38
  %4716 = sub i16 %4684, %40
  %4717 = icmp eq i16 %4715, 0
  %4718 = icmp eq i16 %4716, 0
  %4719 = xor i1 %4718, true
  %4720 = zext i1 %4719 to i64
  %4721 = select i1 %4718, i64 2, i64 3
  %4722 = select i1 %4717, i64 %4720, i64 %4721
  %4723 = getelementptr inbounds i32, i32* %9, i64 %4722
  %4724 = load i32, i32* %4723, align 4
  %4725 = load i32*, i32** %10, align 8
  %4726 = sext i16 %4715 to i64
  %4727 = getelementptr inbounds i32, i32* %4725, i64 %4726
  %4728 = load i32, i32* %4727, align 4
  %4729 = add nsw i32 %4728, %4724
  %4730 = getelementptr inbounds i32*, i32** %10, i64 1
  %4731 = load i32*, i32** %4730, align 8
  %4732 = sext i16 %4716 to i64
  %4733 = getelementptr inbounds i32, i32* %4731, i64 %4732
  %4734 = load i32, i32* %4733, align 4
  %4735 = add nsw i32 %4729, %4734
  %4736 = sext i32 %4735 to i64
  %4737 = sext i32 %4 to i64
  %4738 = shl nsw i64 %4737, 18
  %4739 = mul i64 %4738, %4736
  %4740 = add i64 %4739, 2147483648
  %4741 = ashr i64 %4740, 32
  br label %4742

4742:                                             ; preds = %4710, %4714
  %4743 = phi i64 [ %4741, %4714 ], [ 0, %4710 ]
  %4744 = add nsw i64 %4743, %4712
  %4745 = icmp sgt i64 %4744, 2147483646
  br i1 %4745, label %4751, label %4746

4746:                                             ; preds = %4742
  %4747 = trunc i64 %4744 to i32
  %4748 = icmp ugt i32 %4675, %4747
  br i1 %4748, label %4749, label %4751

4749:                                             ; preds = %4746
  store i32 %4711, i32* %11, align 4
  %4750 = load i32, i32* %18, align 4
  store i32 %4750, i32* %12, align 4
  br label %4751

4751:                                             ; preds = %4749, %4746, %4742, %4592, %4674
  %4752 = phi i32 [ %4675, %4674 ], [ %4419, %4592 ], [ %4747, %4749 ], [ %4675, %4746 ], [ %4675, %4742 ]
  %4753 = phi i32 [ %4676, %4674 ], [ %3762, %4592 ], [ %4678, %4749 ], [ %4676, %4746 ], [ %4676, %4742 ]
  %4754 = phi i32 [ %4677, %4674 ], [ %4421, %4592 ], [ %4595, %4749 ], [ %4677, %4746 ], [ %4677, %4742 ]
  %4755 = icmp ult i32 %4112, 2
  %4756 = icmp slt i32 %4421, %70
  %4757 = icmp sgt i32 %4421, %72
  %4758 = or i1 %4756, %4757
  br i1 %4755, label %4759, label %4834

4759:                                             ; preds = %4751
  br i1 %4758, label %5221, label %4760

4760:                                             ; preds = %4759
  %4761 = add nsw i32 %3764, %3762
  %4762 = icmp slt i32 %4761, %74
  %4763 = icmp sgt i32 %4761, %76
  %4764 = or i1 %4762, %4763
  br i1 %4764, label %5221, label %4765

4765:                                             ; preds = %4760
  %4766 = trunc i32 %4761 to i16
  %4767 = trunc i32 %4421 to i16
  %4768 = icmp eq i8* %13, null
  br i1 %4768, label %4769, label %4781

4769:                                             ; preds = %4765
  %4770 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4771 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4770, align 8
  %4772 = ashr i32 %4761, 3
  %4773 = mul nsw i32 %4772, %26
  %4774 = ashr i32 %4421, 3
  %4775 = add nsw i32 %4774, %4773
  %4776 = sext i32 %4775 to i64
  %4777 = getelementptr inbounds i8, i8* %36, i64 %4776
  %4778 = and i32 %4421, 7
  %4779 = and i32 %4761, 7
  %4780 = call i32 %4771(i8* %4777, i32 %26, i32 %4778, i32 %4779, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4793

4781:                                             ; preds = %4765
  %4782 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4783 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4782, align 8
  %4784 = ashr i32 %4761, 3
  %4785 = mul nsw i32 %4784, %26
  %4786 = ashr i32 %4421, 3
  %4787 = add nsw i32 %4786, %4785
  %4788 = sext i32 %4787 to i64
  %4789 = getelementptr inbounds i8, i8* %36, i64 %4788
  %4790 = and i32 %4421, 7
  %4791 = and i32 %4761, 7
  %4792 = call i32 %4783(i8* %4789, i32 %26, i32 %4790, i32 %4791, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4793

4793:                                             ; preds = %4781, %4769
  %4794 = phi i32 [ %4780, %4769 ], [ %4792, %4781 ]
  %4795 = sext i32 %4794 to i64
  %4796 = icmp eq i32** %10, null
  br i1 %4796, label %4825, label %4797

4797:                                             ; preds = %4793
  %4798 = sub i16 %4766, %38
  %4799 = sub i16 %4767, %40
  %4800 = icmp eq i16 %4798, 0
  %4801 = icmp eq i16 %4799, 0
  %4802 = xor i1 %4801, true
  %4803 = zext i1 %4802 to i64
  %4804 = select i1 %4801, i64 2, i64 3
  %4805 = select i1 %4800, i64 %4803, i64 %4804
  %4806 = getelementptr inbounds i32, i32* %9, i64 %4805
  %4807 = load i32, i32* %4806, align 4
  %4808 = load i32*, i32** %10, align 8
  %4809 = sext i16 %4798 to i64
  %4810 = getelementptr inbounds i32, i32* %4808, i64 %4809
  %4811 = load i32, i32* %4810, align 4
  %4812 = add nsw i32 %4811, %4807
  %4813 = getelementptr inbounds i32*, i32** %10, i64 1
  %4814 = load i32*, i32** %4813, align 8
  %4815 = sext i16 %4799 to i64
  %4816 = getelementptr inbounds i32, i32* %4814, i64 %4815
  %4817 = load i32, i32* %4816, align 4
  %4818 = add nsw i32 %4812, %4817
  %4819 = sext i32 %4818 to i64
  %4820 = sext i32 %4 to i64
  %4821 = shl nsw i64 %4820, 18
  %4822 = mul i64 %4821, %4819
  %4823 = add i64 %4822, 2147483648
  %4824 = ashr i64 %4823, 32
  br label %4825

4825:                                             ; preds = %4793, %4797
  %4826 = phi i64 [ %4824, %4797 ], [ 0, %4793 ]
  %4827 = add nsw i64 %4826, %4795
  %4828 = icmp sgt i64 %4827, 2147483646
  br i1 %4828, label %5221, label %4829

4829:                                             ; preds = %4825
  %4830 = trunc i64 %4827 to i32
  %4831 = icmp ugt i32 %4752, %4830
  br i1 %4831, label %4832, label %5221

4832:                                             ; preds = %4829
  store i32 %4794, i32* %11, align 4
  %4833 = load i32, i32* %18, align 4
  store i32 %4833, i32* %12, align 4
  br label %5221

4834:                                             ; preds = %4751
  br i1 %4758, label %5221, label %4835

4835:                                             ; preds = %4834
  %4836 = sub nsw i32 %3762, %3764
  %4837 = icmp slt i32 %4836, %74
  %4838 = icmp sgt i32 %4836, %76
  %4839 = or i1 %4837, %4838
  br i1 %4839, label %5221, label %4840

4840:                                             ; preds = %4835
  %4841 = trunc i32 %4836 to i16
  %4842 = trunc i32 %4421 to i16
  %4843 = icmp eq i8* %13, null
  br i1 %4843, label %4844, label %4856

4844:                                             ; preds = %4840
  %4845 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4846 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4845, align 8
  %4847 = ashr i32 %4836, 3
  %4848 = mul nsw i32 %4847, %26
  %4849 = ashr i32 %4421, 3
  %4850 = add nsw i32 %4849, %4848
  %4851 = sext i32 %4850 to i64
  %4852 = getelementptr inbounds i8, i8* %36, i64 %4851
  %4853 = and i32 %4421, 7
  %4854 = and i32 %4836, 7
  %4855 = call i32 %4846(i8* %4852, i32 %26, i32 %4853, i32 %4854, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4868

4856:                                             ; preds = %4840
  %4857 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4858 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4857, align 8
  %4859 = ashr i32 %4836, 3
  %4860 = mul nsw i32 %4859, %26
  %4861 = ashr i32 %4421, 3
  %4862 = add nsw i32 %4861, %4860
  %4863 = sext i32 %4862 to i64
  %4864 = getelementptr inbounds i8, i8* %36, i64 %4863
  %4865 = and i32 %4421, 7
  %4866 = and i32 %4836, 7
  %4867 = call i32 %4858(i8* %4864, i32 %26, i32 %4865, i32 %4866, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4868

4868:                                             ; preds = %4856, %4844
  %4869 = phi i32 [ %4855, %4844 ], [ %4867, %4856 ]
  %4870 = sext i32 %4869 to i64
  %4871 = icmp eq i32** %10, null
  br i1 %4871, label %4900, label %4872

4872:                                             ; preds = %4868
  %4873 = sub i16 %4841, %38
  %4874 = sub i16 %4842, %40
  %4875 = icmp eq i16 %4873, 0
  %4876 = icmp eq i16 %4874, 0
  %4877 = xor i1 %4876, true
  %4878 = zext i1 %4877 to i64
  %4879 = select i1 %4876, i64 2, i64 3
  %4880 = select i1 %4875, i64 %4878, i64 %4879
  %4881 = getelementptr inbounds i32, i32* %9, i64 %4880
  %4882 = load i32, i32* %4881, align 4
  %4883 = load i32*, i32** %10, align 8
  %4884 = sext i16 %4873 to i64
  %4885 = getelementptr inbounds i32, i32* %4883, i64 %4884
  %4886 = load i32, i32* %4885, align 4
  %4887 = add nsw i32 %4886, %4882
  %4888 = getelementptr inbounds i32*, i32** %10, i64 1
  %4889 = load i32*, i32** %4888, align 8
  %4890 = sext i16 %4874 to i64
  %4891 = getelementptr inbounds i32, i32* %4889, i64 %4890
  %4892 = load i32, i32* %4891, align 4
  %4893 = add nsw i32 %4887, %4892
  %4894 = sext i32 %4893 to i64
  %4895 = sext i32 %4 to i64
  %4896 = shl nsw i64 %4895, 18
  %4897 = mul i64 %4896, %4894
  %4898 = add i64 %4897, 2147483648
  %4899 = ashr i64 %4898, 32
  br label %4900

4900:                                             ; preds = %4868, %4872
  %4901 = phi i64 [ %4899, %4872 ], [ 0, %4868 ]
  %4902 = add nsw i64 %4901, %4870
  %4903 = icmp sgt i64 %4902, 2147483646
  br i1 %4903, label %5221, label %4904

4904:                                             ; preds = %4900
  %4905 = trunc i64 %4902 to i32
  %4906 = icmp ugt i32 %4752, %4905
  br i1 %4906, label %4907, label %5221

4907:                                             ; preds = %4904
  store i32 %4869, i32* %11, align 4
  %4908 = load i32, i32* %18, align 4
  store i32 %4908, i32* %12, align 4
  br label %5221

4909:                                             ; preds = %4590
  %4910 = and i1 %4424, %4426
  br i1 %4910, label %4911, label %5221

4911:                                             ; preds = %4909
  %4912 = sub nsw i32 %4420, %3762
  br i1 %3868, label %4989, label %4913

4913:                                             ; preds = %4911
  %4914 = shl nsw i32 %4912, 1
  %4915 = add nsw i32 %4914, %3762
  %4916 = icmp slt i32 %4915, %74
  %4917 = icmp sgt i32 %4915, %76
  %4918 = or i1 %4916, %4917
  br i1 %4918, label %4989, label %4919

4919:                                             ; preds = %4913
  %4920 = trunc i32 %4915 to i16
  %4921 = trunc i32 %3865 to i16
  %4922 = icmp eq i8* %13, null
  br i1 %4922, label %4923, label %4935

4923:                                             ; preds = %4919
  %4924 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %4925 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %4924, align 8
  %4926 = ashr i32 %4915, 3
  %4927 = mul nsw i32 %4926, %26
  %4928 = ashr i32 %3865, 3
  %4929 = add nsw i32 %4927, %4928
  %4930 = sext i32 %4929 to i64
  %4931 = getelementptr inbounds i8, i8* %36, i64 %4930
  %4932 = and i32 %3865, 7
  %4933 = and i32 %4915, 7
  %4934 = call i32 %4925(i8* %4931, i32 %26, i32 %4932, i32 %4933, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %4947

4935:                                             ; preds = %4919
  %4936 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %4937 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %4936, align 8
  %4938 = ashr i32 %4915, 3
  %4939 = mul nsw i32 %4938, %26
  %4940 = ashr i32 %3865, 3
  %4941 = add nsw i32 %4939, %4940
  %4942 = sext i32 %4941 to i64
  %4943 = getelementptr inbounds i8, i8* %36, i64 %4942
  %4944 = and i32 %3865, 7
  %4945 = and i32 %4915, 7
  %4946 = call i32 %4937(i8* %4943, i32 %26, i32 %4944, i32 %4945, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %4947

4947:                                             ; preds = %4935, %4923
  %4948 = phi i32 [ %4934, %4923 ], [ %4946, %4935 ]
  %4949 = sext i32 %4948 to i64
  %4950 = icmp eq i32** %10, null
  br i1 %4950, label %4978, label %4951

4951:                                             ; preds = %4947
  %4952 = sub i16 %4920, %38
  %4953 = sub i16 %4921, %40
  %4954 = icmp eq i16 %4952, 0
  %4955 = icmp eq i16 %4953, 0
  %4956 = xor i1 %4955, true
  %4957 = zext i1 %4956 to i64
  %4958 = select i1 %4955, i64 2, i64 3
  %4959 = select i1 %4954, i64 %4957, i64 %4958
  %4960 = getelementptr inbounds i32, i32* %9, i64 %4959
  %4961 = load i32, i32* %4960, align 4
  %4962 = load i32*, i32** %10, align 8
  %4963 = sext i16 %4952 to i64
  %4964 = getelementptr inbounds i32, i32* %4962, i64 %4963
  %4965 = load i32, i32* %4964, align 4
  %4966 = add nsw i32 %4965, %4961
  %4967 = getelementptr inbounds i32*, i32** %10, i64 1
  %4968 = load i32*, i32** %4967, align 8
  %4969 = sext i16 %4953 to i64
  %4970 = getelementptr inbounds i32, i32* %4968, i64 %4969
  %4971 = load i32, i32* %4970, align 4
  %4972 = add nsw i32 %4966, %4971
  %4973 = sext i32 %4972 to i64
  %4974 = sext i32 %4 to i64
  %4975 = mul nsw i64 %4973, %4974
  %4976 = add nsw i64 %4975, 8192
  %4977 = lshr i64 %4976, 14
  br label %4978

4978:                                             ; preds = %4947, %4951
  %4979 = phi i64 [ %4977, %4951 ], [ 0, %4947 ]
  %4980 = shl i64 %4979, 32
  %4981 = ashr exact i64 %4980, 32
  %4982 = add nsw i64 %4981, %4949
  %4983 = icmp sgt i64 %4982, 2147483646
  br i1 %4983, label %4989, label %4984

4984:                                             ; preds = %4978
  %4985 = trunc i64 %4982 to i32
  %4986 = icmp ugt i32 %4419, %4985
  br i1 %4986, label %4987, label %4989

4987:                                             ; preds = %4984
  store i32 %4948, i32* %11, align 4
  %4988 = load i32, i32* %18, align 4
  store i32 %4988, i32* %12, align 4
  br label %4989

4989:                                             ; preds = %4987, %4984, %4978, %4913, %4911
  %4990 = phi i32 [ %4419, %4911 ], [ %4419, %4913 ], [ %4985, %4987 ], [ %4419, %4984 ], [ %4419, %4978 ]
  %4991 = phi i32 [ %4420, %4911 ], [ %4420, %4913 ], [ %4915, %4987 ], [ %4420, %4984 ], [ %4420, %4978 ]
  %4992 = phi i32 [ %3763, %4911 ], [ %3763, %4913 ], [ %3865, %4987 ], [ %3763, %4984 ], [ %3763, %4978 ]
  br i1 %3786, label %5068, label %4993

4993:                                             ; preds = %4989
  %4994 = shl nsw i32 %4912, 1
  %4995 = add nsw i32 %4994, %3762
  %4996 = icmp slt i32 %4995, %74
  %4997 = icmp sgt i32 %4995, %76
  %4998 = or i1 %4996, %4997
  br i1 %4998, label %5068, label %4999

4999:                                             ; preds = %4993
  %5000 = trunc i32 %4995 to i16
  %5001 = trunc i32 %3783 to i16
  %5002 = icmp eq i8* %13, null
  br i1 %5002, label %5003, label %5015

5003:                                             ; preds = %4999
  %5004 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %5005 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %5004, align 8
  %5006 = ashr i32 %4995, 3
  %5007 = mul nsw i32 %5006, %26
  %5008 = ashr i32 %3783, 3
  %5009 = add nsw i32 %5007, %5008
  %5010 = sext i32 %5009 to i64
  %5011 = getelementptr inbounds i8, i8* %36, i64 %5010
  %5012 = and i32 %3783, 7
  %5013 = and i32 %4995, 7
  %5014 = call i32 %5005(i8* %5011, i32 %26, i32 %5012, i32 %5013, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %5027

5015:                                             ; preds = %4999
  %5016 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %5017 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %5016, align 8
  %5018 = ashr i32 %4995, 3
  %5019 = mul nsw i32 %5018, %26
  %5020 = ashr i32 %3783, 3
  %5021 = add nsw i32 %5019, %5020
  %5022 = sext i32 %5021 to i64
  %5023 = getelementptr inbounds i8, i8* %36, i64 %5022
  %5024 = and i32 %3783, 7
  %5025 = and i32 %4995, 7
  %5026 = call i32 %5017(i8* %5023, i32 %26, i32 %5024, i32 %5025, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %5027

5027:                                             ; preds = %5015, %5003
  %5028 = phi i32 [ %5014, %5003 ], [ %5026, %5015 ]
  %5029 = sext i32 %5028 to i64
  %5030 = icmp eq i32** %10, null
  br i1 %5030, label %5059, label %5031

5031:                                             ; preds = %5027
  %5032 = sub i16 %5000, %38
  %5033 = sub i16 %5001, %40
  %5034 = icmp eq i16 %5032, 0
  %5035 = icmp eq i16 %5033, 0
  %5036 = xor i1 %5035, true
  %5037 = zext i1 %5036 to i64
  %5038 = select i1 %5035, i64 2, i64 3
  %5039 = select i1 %5034, i64 %5037, i64 %5038
  %5040 = getelementptr inbounds i32, i32* %9, i64 %5039
  %5041 = load i32, i32* %5040, align 4
  %5042 = load i32*, i32** %10, align 8
  %5043 = sext i16 %5032 to i64
  %5044 = getelementptr inbounds i32, i32* %5042, i64 %5043
  %5045 = load i32, i32* %5044, align 4
  %5046 = add nsw i32 %5045, %5041
  %5047 = getelementptr inbounds i32*, i32** %10, i64 1
  %5048 = load i32*, i32** %5047, align 8
  %5049 = sext i16 %5033 to i64
  %5050 = getelementptr inbounds i32, i32* %5048, i64 %5049
  %5051 = load i32, i32* %5050, align 4
  %5052 = add nsw i32 %5046, %5051
  %5053 = sext i32 %5052 to i64
  %5054 = sext i32 %4 to i64
  %5055 = shl nsw i64 %5054, 18
  %5056 = mul i64 %5055, %5053
  %5057 = add i64 %5056, 2147483648
  %5058 = ashr i64 %5057, 32
  br label %5059

5059:                                             ; preds = %5027, %5031
  %5060 = phi i64 [ %5058, %5031 ], [ 0, %5027 ]
  %5061 = add nsw i64 %5060, %5029
  %5062 = icmp sgt i64 %5061, 2147483646
  br i1 %5062, label %5068, label %5063

5063:                                             ; preds = %5059
  %5064 = trunc i64 %5061 to i32
  %5065 = icmp ugt i32 %4990, %5064
  br i1 %5065, label %5066, label %5068

5066:                                             ; preds = %5063
  store i32 %5028, i32* %11, align 4
  %5067 = load i32, i32* %18, align 4
  store i32 %5067, i32* %12, align 4
  br label %5068

5068:                                             ; preds = %5066, %5063, %5059, %4993, %4989
  %5069 = phi i32 [ %4990, %4989 ], [ %4990, %4993 ], [ %5064, %5066 ], [ %4990, %5063 ], [ %4990, %5059 ]
  %5070 = phi i32 [ %4991, %4989 ], [ %4991, %4993 ], [ %4995, %5066 ], [ %4991, %5063 ], [ %4991, %5059 ]
  %5071 = phi i32 [ %4992, %4989 ], [ %4992, %4993 ], [ %3783, %5066 ], [ %4992, %5063 ], [ %4992, %5059 ]
  switch i32 %4112, label %5220 [
    i32 0, label %5072
    i32 2, label %5072
    i32 1, label %5146
    i32 3, label %5146
  ]

5072:                                             ; preds = %5068, %5068
  %5073 = icmp slt i32 %4420, %74
  %5074 = or i1 %3868, %5073
  %5075 = icmp sgt i32 %4420, %76
  %5076 = or i1 %5075, %5074
  br i1 %5076, label %5221, label %5077

5077:                                             ; preds = %5072
  %5078 = trunc i32 %4420 to i16
  %5079 = trunc i32 %3865 to i16
  %5080 = icmp eq i8* %13, null
  br i1 %5080, label %5081, label %5093

5081:                                             ; preds = %5077
  %5082 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %5083 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %5082, align 8
  %5084 = ashr i32 %4420, 3
  %5085 = mul nsw i32 %5084, %26
  %5086 = ashr i32 %3865, 3
  %5087 = add nsw i32 %5085, %5086
  %5088 = sext i32 %5087 to i64
  %5089 = getelementptr inbounds i8, i8* %36, i64 %5088
  %5090 = and i32 %3865, 7
  %5091 = and i32 %4420, 7
  %5092 = call i32 %5083(i8* %5089, i32 %26, i32 %5090, i32 %5091, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %5105

5093:                                             ; preds = %5077
  %5094 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %5095 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %5094, align 8
  %5096 = ashr i32 %4420, 3
  %5097 = mul nsw i32 %5096, %26
  %5098 = ashr i32 %3865, 3
  %5099 = add nsw i32 %5097, %5098
  %5100 = sext i32 %5099 to i64
  %5101 = getelementptr inbounds i8, i8* %36, i64 %5100
  %5102 = and i32 %3865, 7
  %5103 = and i32 %4420, 7
  %5104 = call i32 %5095(i8* %5101, i32 %26, i32 %5102, i32 %5103, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %5105

5105:                                             ; preds = %5093, %5081
  %5106 = phi i32 [ %5092, %5081 ], [ %5104, %5093 ]
  %5107 = sext i32 %5106 to i64
  %5108 = icmp eq i32** %10, null
  br i1 %5108, label %5137, label %5109

5109:                                             ; preds = %5105
  %5110 = sub i16 %5078, %38
  %5111 = sub i16 %5079, %40
  %5112 = icmp eq i16 %5110, 0
  %5113 = icmp eq i16 %5111, 0
  %5114 = xor i1 %5113, true
  %5115 = zext i1 %5114 to i64
  %5116 = select i1 %5113, i64 2, i64 3
  %5117 = select i1 %5112, i64 %5115, i64 %5116
  %5118 = getelementptr inbounds i32, i32* %9, i64 %5117
  %5119 = load i32, i32* %5118, align 4
  %5120 = load i32*, i32** %10, align 8
  %5121 = sext i16 %5110 to i64
  %5122 = getelementptr inbounds i32, i32* %5120, i64 %5121
  %5123 = load i32, i32* %5122, align 4
  %5124 = add nsw i32 %5123, %5119
  %5125 = getelementptr inbounds i32*, i32** %10, i64 1
  %5126 = load i32*, i32** %5125, align 8
  %5127 = sext i16 %5111 to i64
  %5128 = getelementptr inbounds i32, i32* %5126, i64 %5127
  %5129 = load i32, i32* %5128, align 4
  %5130 = add nsw i32 %5124, %5129
  %5131 = sext i32 %5130 to i64
  %5132 = sext i32 %4 to i64
  %5133 = shl nsw i64 %5132, 18
  %5134 = mul i64 %5133, %5131
  %5135 = add i64 %5134, 2147483648
  %5136 = ashr i64 %5135, 32
  br label %5137

5137:                                             ; preds = %5105, %5109
  %5138 = phi i64 [ %5136, %5109 ], [ 0, %5105 ]
  %5139 = add nsw i64 %5138, %5107
  %5140 = icmp sgt i64 %5139, 2147483646
  br i1 %5140, label %5221, label %5141

5141:                                             ; preds = %5137
  %5142 = trunc i64 %5139 to i32
  %5143 = icmp ugt i32 %5069, %5142
  br i1 %5143, label %5144, label %5221

5144:                                             ; preds = %5141
  store i32 %5106, i32* %11, align 4
  %5145 = load i32, i32* %18, align 4
  store i32 %5145, i32* %12, align 4
  br label %5221

5146:                                             ; preds = %5068, %5068
  %5147 = icmp slt i32 %4420, %74
  %5148 = or i1 %3786, %5147
  %5149 = icmp sgt i32 %4420, %76
  %5150 = or i1 %5149, %5148
  br i1 %5150, label %5221, label %5151

5151:                                             ; preds = %5146
  %5152 = trunc i32 %4420 to i16
  %5153 = trunc i32 %3783 to i16
  %5154 = icmp eq i8* %13, null
  br i1 %5154, label %5155, label %5167

5155:                                             ; preds = %5151
  %5156 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %5157 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %5156, align 8
  %5158 = ashr i32 %4420, 3
  %5159 = mul nsw i32 %5158, %26
  %5160 = ashr i32 %3783, 3
  %5161 = add nsw i32 %5159, %5160
  %5162 = sext i32 %5161 to i64
  %5163 = getelementptr inbounds i8, i8* %36, i64 %5162
  %5164 = and i32 %3783, 7
  %5165 = and i32 %4420, 7
  %5166 = call i32 %5157(i8* %5163, i32 %26, i32 %5164, i32 %5165, i8* %20, i32 %22, i32* nonnull %18) #8
  br label %5179

5167:                                             ; preds = %5151
  %5168 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %5169 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %5168, align 8
  %5170 = ashr i32 %4420, 3
  %5171 = mul nsw i32 %5170, %26
  %5172 = ashr i32 %3783, 3
  %5173 = add nsw i32 %5171, %5172
  %5174 = sext i32 %5173 to i64
  %5175 = getelementptr inbounds i8, i8* %36, i64 %5174
  %5176 = and i32 %3783, 7
  %5177 = and i32 %4420, 7
  %5178 = call i32 %5169(i8* %5175, i32 %26, i32 %5176, i32 %5177, i8* %20, i32 %22, i32* nonnull %18, i8* nonnull %13) #8
  br label %5179

5179:                                             ; preds = %5167, %5155
  %5180 = phi i32 [ %5166, %5155 ], [ %5178, %5167 ]
  %5181 = sext i32 %5180 to i64
  %5182 = icmp eq i32** %10, null
  br i1 %5182, label %5211, label %5183

5183:                                             ; preds = %5179
  %5184 = sub i16 %5152, %38
  %5185 = sub i16 %5153, %40
  %5186 = icmp eq i16 %5184, 0
  %5187 = icmp eq i16 %5185, 0
  %5188 = xor i1 %5187, true
  %5189 = zext i1 %5188 to i64
  %5190 = select i1 %5187, i64 2, i64 3
  %5191 = select i1 %5186, i64 %5189, i64 %5190
  %5192 = getelementptr inbounds i32, i32* %9, i64 %5191
  %5193 = load i32, i32* %5192, align 4
  %5194 = load i32*, i32** %10, align 8
  %5195 = sext i16 %5184 to i64
  %5196 = getelementptr inbounds i32, i32* %5194, i64 %5195
  %5197 = load i32, i32* %5196, align 4
  %5198 = add nsw i32 %5197, %5193
  %5199 = getelementptr inbounds i32*, i32** %10, i64 1
  %5200 = load i32*, i32** %5199, align 8
  %5201 = sext i16 %5185 to i64
  %5202 = getelementptr inbounds i32, i32* %5200, i64 %5201
  %5203 = load i32, i32* %5202, align 4
  %5204 = add nsw i32 %5198, %5203
  %5205 = sext i32 %5204 to i64
  %5206 = sext i32 %4 to i64
  %5207 = shl nsw i64 %5206, 18
  %5208 = mul i64 %5207, %5205
  %5209 = add i64 %5208, 2147483648
  %5210 = ashr i64 %5209, 32
  br label %5211

5211:                                             ; preds = %5179, %5183
  %5212 = phi i64 [ %5210, %5183 ], [ 0, %5179 ]
  %5213 = add nsw i64 %5212, %5181
  %5214 = icmp sgt i64 %5213, 2147483646
  br i1 %5214, label %5221, label %5215

5215:                                             ; preds = %5211
  %5216 = trunc i64 %5213 to i32
  %5217 = icmp ugt i32 %5069, %5216
  br i1 %5217, label %5218, label %5221

5218:                                             ; preds = %5215
  store i32 %5180, i32* %11, align 4
  %5219 = load i32, i32* %18, align 4
  store i32 %5219, i32* %12, align 4
  br label %5221

5220:                                             ; preds = %5068
  unreachable

5221:                                             ; preds = %3766, %5218, %5215, %5211, %5144, %5141, %5137, %4907, %4904, %4900, %4832, %4829, %4825, %4588, %4585, %4581, %4418, %5146, %5072, %4834, %4835, %4759, %4760, %4509, %4515, %4909, %3760, %3773
  %5222 = phi i32 [ %3761, %3773 ], [ %3761, %3760 ], [ %4419, %4418 ], [ %4419, %4909 ], [ %4510, %4515 ], [ %4510, %4509 ], [ %4752, %4760 ], [ %4752, %4759 ], [ %4752, %4835 ], [ %4752, %4834 ], [ %5069, %5072 ], [ %5069, %5146 ], [ %4586, %4588 ], [ %4510, %4585 ], [ %4510, %4581 ], [ %4830, %4832 ], [ %4752, %4829 ], [ %4752, %4825 ], [ %4905, %4907 ], [ %4752, %4904 ], [ %4752, %4900 ], [ %5142, %5144 ], [ %5069, %5141 ], [ %5069, %5137 ], [ %5216, %5218 ], [ %5069, %5215 ], [ %5069, %5211 ], [ %3761, %3766 ]
  %5223 = phi i32 [ %3762, %3773 ], [ %3762, %3760 ], [ %4420, %4418 ], [ %4420, %4909 ], [ %4420, %4515 ], [ %4420, %4509 ], [ %4753, %4760 ], [ %4753, %4759 ], [ %4753, %4835 ], [ %4753, %4834 ], [ %5070, %5072 ], [ %5070, %5146 ], [ %4517, %4588 ], [ %4420, %4585 ], [ %4420, %4581 ], [ %4761, %4832 ], [ %4753, %4829 ], [ %4753, %4825 ], [ %4836, %4907 ], [ %4753, %4904 ], [ %4753, %4900 ], [ %4420, %5144 ], [ %5070, %5141 ], [ %5070, %5137 ], [ %4420, %5218 ], [ %5070, %5215 ], [ %5070, %5211 ], [ %3762, %3766 ]
  %5224 = phi i32 [ %3763, %3773 ], [ %3763, %3760 ], [ %4421, %4418 ], [ %4421, %4909 ], [ %4511, %4515 ], [ %4511, %4509 ], [ %4754, %4760 ], [ %4754, %4759 ], [ %4754, %4835 ], [ %4754, %4834 ], [ %5071, %5072 ], [ %5071, %5146 ], [ %4421, %4588 ], [ %4511, %4585 ], [ %4511, %4581 ], [ %4421, %4832 ], [ %4754, %4829 ], [ %4754, %4825 ], [ %4421, %4907 ], [ %4754, %4904 ], [ %4754, %4900 ], [ %3865, %5144 ], [ %5071, %5141 ], [ %5071, %5137 ], [ %3783, %5218 ], [ %5071, %5215 ], [ %5071, %5211 ], [ %3763, %3766 ]
  %5225 = trunc i32 %5223 to i16
  store i16 %5225, i16* %27, align 2
  %5226 = trunc i32 %5224 to i16
  store i16 %5226, i16* %31, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  ret i32 %5222
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_find_best_sub_pixel_tree(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* readonly, i32, i32, i32* nocapture readnone, i32* nocapture readonly, i32** readonly, i32* nocapture, i32*, i8*, i32, i32, i32) local_unnamed_addr #5 {
  %18 = alloca i32, align 4
  %19 = alloca [5 x i32], align 16
  %20 = alloca %struct.mv, align 2
  %21 = alloca %struct.mv, align 2
  %22 = alloca %struct.mv, align 2
  %23 = alloca %struct.mv, align 2
  %24 = alloca %struct.mv, align 2
  %25 = alloca %struct.mv, align 2
  %26 = alloca %struct.mv, align 2
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %32 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #8
  store i32 -1431655766, i32* %18, align 4
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i32
  %38 = mul nsw i32 %34, %37
  %39 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i32
  %42 = add nsw i32 %38, %41
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %48 = load i16, i16* %47, align 2
  %49 = shl nsw i32 %37, 3
  %50 = shl nsw i32 %41, 3
  %51 = sub nsw i32 3, %6
  %52 = bitcast [5 x i32]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %52) #8
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 0
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 1
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 2
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 3
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 4
  %58 = icmp sgt i32 %16, 0
  %59 = bitcast [5 x i32]* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 -86, i64 20, i1 false)
  br i1 %58, label %60, label %69

60:                                               ; preds = %17
  %61 = icmp eq i32 %16, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = load [8 x i16]*, [8 x i16]** getelementptr inbounds ([5 x [8 x i16]*], [5 x [8 x i16]*]* @vp9_filter_kernels, i64 0, i64 4), align 16
  br label %71

64:                                               ; preds = %60
  %65 = icmp eq i32 %16, 2
  %66 = load [8 x i16]*, [8 x i16]** getelementptr inbounds ([5 x [8 x i16]*], [5 x [8 x i16]*]* @vp9_filter_kernels, i64 0, i64 0), align 16
  %67 = load [8 x i16]*, [8 x i16]** getelementptr inbounds ([5 x [8 x i16]*], [5 x [8 x i16]*]* @vp9_filter_kernels, i64 0, i64 2), align 16
  %68 = select i1 %65, [8 x i16]* %66, [8 x i16]* %67
  br label %71

69:                                               ; preds = %17
  %70 = load [8 x i16]*, [8 x i16]** getelementptr inbounds ([5 x [8 x i16]*], [5 x [8 x i16]*]* @vp9_filter_kernels, i64 0, i64 3), align 8
  br label %71

71:                                               ; preds = %62, %64, %69
  %72 = phi [8 x i16]* [ %70, %69 ], [ %63, %62 ], [ %68, %64 ]
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = shl nsw i32 %74, 3
  %76 = sext i16 %48 to i32
  %77 = add nsw i32 %76, -8184
  %78 = icmp sgt i32 %75, %77
  %79 = select i1 %78, i32 %75, i32 %77
  %80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = shl nsw i32 %81, 3
  %83 = add nsw i32 %76, 8184
  %84 = icmp slt i32 %82, %83
  %85 = select i1 %84, i32 %82, i32 %83
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = shl nsw i32 %87, 3
  %89 = sext i16 %46 to i32
  %90 = add nsw i32 %89, -8184
  %91 = icmp sgt i32 %88, %90
  %92 = select i1 %91, i32 %88, i32 %90
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = shl nsw i32 %94, 3
  %96 = add nsw i32 %89, 8184
  %97 = icmp slt i32 %95, %96
  %98 = select i1 %97, i32 %95, i32 %96
  %99 = icmp sgt i32 %79, -16383
  %100 = select i1 %99, i32 %79, i32 -16383
  %101 = icmp slt i32 %85, 16382
  %102 = select i1 %101, i32 %85, i32 16382
  %103 = icmp sgt i32 %92, -16383
  %104 = select i1 %103, i32 %92, i32 -16383
  %105 = icmp slt i32 %98, 16382
  %106 = select i1 %105, i32 %98, i32 16382
  %107 = icmp eq i32 %3, 0
  br i1 %107, label %122, label %108

108:                                              ; preds = %71
  %109 = icmp slt i32 %89, 0
  %110 = sub nsw i32 0, %89
  %111 = select i1 %109, i32 %110, i32 %89
  %112 = icmp slt i32 %111, 64
  br i1 %112, label %113, label %118

113:                                              ; preds = %108
  %114 = icmp slt i32 %76, 0
  %115 = sub nsw i32 0, %76
  %116 = select i1 %114, i32 %115, i32 %76
  %117 = icmp sgt i32 %116, 63
  br label %118

118:                                              ; preds = %108, %113
  %119 = phi i1 [ true, %108 ], [ %117, %113 ]
  %120 = icmp eq i32 %6, 0
  %121 = and i1 %120, %119
  br i1 %121, label %124, label %125

122:                                              ; preds = %71
  %123 = icmp eq i32 %6, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %118, %122
  br label %125

125:                                              ; preds = %118, %122, %124
  %126 = phi i32 [ %51, %118 ], [ 2, %124 ], [ %51, %122 ]
  %127 = shl i16 %36, 3
  store i16 %127, i16* %35, align 2
  %128 = shl i16 %40, 3
  store i16 %128, i16* %39, align 2
  %129 = tail call fastcc i32 @setup_center_error(%struct.macroblockd* %31, %struct.mv* %1, %struct.mv* %2, i32 %4, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32 %42, i32* %9, i32** %10, i32* %12, i32* %11)
  %130 = icmp sgt i32 %126, 0
  br i1 %130, label %131, label %1036

131:                                              ; preds = %125
  %132 = bitcast %struct.mv* %20 to i8*
  %133 = getelementptr inbounds %struct.mv, %struct.mv* %20, i64 0, i32 0
  %134 = getelementptr inbounds %struct.mv, %struct.mv* %20, i64 0, i32 1
  %135 = icmp eq i32 %16, 0
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 69
  %137 = icmp eq i8* %13, null
  %138 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 4
  %139 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %5, i64 0, i32 3
  %140 = icmp eq i32** %10, null
  %141 = getelementptr inbounds i32*, i32** %10, i64 1
  %142 = sext i32 %4 to i64
  %143 = bitcast %struct.mv* %21 to i8*
  %144 = getelementptr inbounds %struct.mv, %struct.mv* %21, i64 0, i32 0
  %145 = getelementptr inbounds %struct.mv, %struct.mv* %21, i64 0, i32 1
  %146 = icmp sgt i32 %7, 0
  %147 = icmp eq i32 %7, 1
  %148 = bitcast %struct.mv* %22 to i8*
  %149 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 0, i32 0
  %150 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 0, i32 1
  %151 = icmp sgt i32 %7, 1
  %152 = bitcast %struct.mv* %24 to i8*
  %153 = getelementptr inbounds %struct.mv, %struct.mv* %24, i64 0, i32 0
  %154 = getelementptr inbounds %struct.mv, %struct.mv* %24, i64 0, i32 1
  %155 = bitcast %struct.mv* %25 to i8*
  %156 = getelementptr inbounds %struct.mv, %struct.mv* %25, i64 0, i32 0
  %157 = getelementptr inbounds %struct.mv, %struct.mv* %25, i64 0, i32 1
  %158 = bitcast %struct.mv* %26 to i8*
  %159 = getelementptr inbounds %struct.mv, %struct.mv* %26, i64 0, i32 0
  %160 = getelementptr inbounds %struct.mv, %struct.mv* %26, i64 0, i32 1
  %161 = bitcast %struct.mv* %23 to i8*
  %162 = getelementptr inbounds %struct.mv, %struct.mv* %23, i64 0, i32 0
  %163 = getelementptr inbounds %struct.mv, %struct.mv* %23, i64 0, i32 1
  br label %164

164:                                              ; preds = %1028, %131
  %165 = phi %struct.mv* [ getelementptr inbounds ([12 x %struct.mv], [12 x %struct.mv]* @search_step_table, i64 0, i64 0), %131 ], [ %1032, %1028 ]
  %166 = phi i32 [ 0, %131 ], [ %1034, %1028 ]
  %167 = phi i32 [ 4, %131 ], [ %1033, %1028 ]
  %168 = phi i32 [ %50, %131 ], [ %1031, %1028 ]
  %169 = phi i32 [ %49, %131 ], [ %1030, %1028 ]
  %170 = phi i32 [ %129, %131 ], [ %1029, %1028 ]
  br label %171

171:                                              ; preds = %259, %164
  %172 = phi i64 [ 0, %164 ], [ %262, %259 ]
  %173 = phi i32 [ -1, %164 ], [ %261, %259 ]
  %174 = phi i32 [ %170, %164 ], [ %260, %259 ]
  %175 = getelementptr inbounds %struct.mv, %struct.mv* %165, i64 %172, i32 0
  %176 = load i16, i16* %175, align 2
  %177 = sext i16 %176 to i32
  %178 = add nsw i32 %169, %177
  %179 = getelementptr inbounds %struct.mv, %struct.mv* %165, i64 %172, i32 1
  %180 = load i16, i16* %179, align 2
  %181 = sext i16 %180 to i32
  %182 = add nsw i32 %168, %181
  %183 = icmp slt i32 %182, %100
  %184 = icmp sgt i32 %182, %102
  %185 = or i1 %183, %184
  %186 = icmp slt i32 %178, %104
  %187 = or i1 %186, %185
  %188 = icmp sgt i32 %178, %106
  %189 = or i1 %188, %187
  br i1 %189, label %257, label %190

190:                                              ; preds = %171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %132) #8
  %191 = trunc i32 %178 to i16
  store i16 %191, i16* %133, align 2
  %192 = trunc i32 %182 to i16
  store i16 %192, i16* %134, align 2
  br i1 %135, label %196, label %193

193:                                              ; preds = %190
  %194 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %195 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %20, %struct.scale_factors* %194, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  br label %214

196:                                              ; preds = %190
  %197 = ashr i32 %178, 3
  %198 = mul nsw i32 %197, %34
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %44, i64 %199
  %201 = ashr i32 %182, 3
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %200, i64 %202
  br i1 %137, label %204, label %209

204:                                              ; preds = %196
  %205 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %206 = and i32 %182, 7
  %207 = and i32 %178, 7
  %208 = call i32 %205(i8* %203, i32 %34, i32 %206, i32 %207, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %214

209:                                              ; preds = %196
  %210 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %211 = and i32 %182, 7
  %212 = and i32 %178, 7
  %213 = call i32 %210(i8* %203, i32 %34, i32 %211, i32 %212, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %214

214:                                              ; preds = %204, %209, %193
  %215 = phi i32 [ %195, %193 ], [ %208, %204 ], [ %213, %209 ]
  br i1 %140, label %246, label %216

216:                                              ; preds = %214
  %217 = load i16, i16* %133, align 2
  %218 = load i16, i16* %45, align 2
  %219 = sub i16 %217, %218
  %220 = load i16, i16* %134, align 2
  %221 = load i16, i16* %47, align 2
  %222 = sub i16 %220, %221
  %223 = icmp eq i16 %219, 0
  %224 = icmp eq i16 %222, 0
  %225 = xor i1 %224, true
  %226 = zext i1 %225 to i64
  %227 = select i1 %224, i64 2, i64 3
  %228 = select i1 %223, i64 %226, i64 %227
  %229 = getelementptr inbounds i32, i32* %9, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = load i32*, i32** %10, align 8
  %232 = sext i16 %219 to i64
  %233 = getelementptr inbounds i32, i32* %231, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %234, %230
  %236 = load i32*, i32** %141, align 8
  %237 = sext i16 %222 to i64
  %238 = getelementptr inbounds i32, i32* %236, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = add nsw i32 %235, %239
  %241 = sext i32 %240 to i64
  %242 = mul nsw i64 %241, %142
  %243 = add nsw i64 %242, 8192
  %244 = lshr i64 %243, 14
  %245 = trunc i64 %244 to i32
  br label %246

246:                                              ; preds = %214, %216
  %247 = phi i32 [ %245, %216 ], [ 0, %214 ]
  %248 = add nsw i32 %247, %215
  %249 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %172
  store i32 %248, i32* %249, align 4
  %250 = icmp ult i32 %248, %174
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  store i32 %215, i32* %11, align 4
  %252 = load i32, i32* %18, align 4
  store i32 %252, i32* %12, align 4
  %253 = trunc i64 %172 to i32
  br label %254

254:                                              ; preds = %251, %246
  %255 = phi i32 [ %248, %251 ], [ %174, %246 ]
  %256 = phi i32 [ %253, %251 ], [ %173, %246 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %132) #8
  br label %259

257:                                              ; preds = %171
  %258 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %172
  store i32 -1, i32* %258, align 4
  br label %259

259:                                              ; preds = %254, %257
  %260 = phi i32 [ %255, %254 ], [ %174, %257 ]
  %261 = phi i32 [ %256, %254 ], [ %173, %257 ]
  %262 = add nuw nsw i64 %172, 1
  %263 = icmp eq i64 %262, 4
  br i1 %263, label %264, label %171

264:                                              ; preds = %259
  %265 = load i32, i32* %53, align 16
  %266 = load i32, i32* %54, align 4
  %267 = icmp ugt i32 %265, %266
  %268 = sub nsw i32 0, %167
  %269 = select i1 %267, i32 %167, i32 %268
  %270 = load i32, i32* %55, align 8
  %271 = load i32, i32* %56, align 4
  %272 = icmp ugt i32 %270, %271
  %273 = select i1 %272, i32 %167, i32 %268
  %274 = add nsw i32 %269, %168
  %275 = add nsw i32 %273, %169
  %276 = icmp slt i32 %274, %100
  %277 = icmp sgt i32 %274, %102
  %278 = or i1 %276, %277
  %279 = icmp slt i32 %275, %104
  %280 = or i1 %278, %279
  %281 = icmp sgt i32 %275, %106
  %282 = or i1 %281, %280
  br i1 %282, label %348, label %283

283:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #8
  %284 = trunc i32 %275 to i16
  store i16 %284, i16* %144, align 2
  %285 = trunc i32 %274 to i16
  store i16 %285, i16* %145, align 2
  br i1 %135, label %289, label %286

286:                                              ; preds = %283
  %287 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %288 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %21, %struct.scale_factors* %287, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  br label %307

289:                                              ; preds = %283
  %290 = ashr i32 %275, 3
  %291 = mul nsw i32 %290, %34
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %44, i64 %292
  %294 = ashr i32 %274, 3
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %293, i64 %295
  br i1 %137, label %297, label %302

297:                                              ; preds = %289
  %298 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %299 = and i32 %274, 7
  %300 = and i32 %275, 7
  %301 = call i32 %298(i8* %296, i32 %34, i32 %299, i32 %300, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %307

302:                                              ; preds = %289
  %303 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %304 = and i32 %274, 7
  %305 = and i32 %275, 7
  %306 = call i32 %303(i8* %296, i32 %34, i32 %304, i32 %305, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %307

307:                                              ; preds = %297, %302, %286
  %308 = phi i32 [ %288, %286 ], [ %301, %297 ], [ %306, %302 ]
  br i1 %140, label %339, label %309

309:                                              ; preds = %307
  %310 = load i16, i16* %144, align 2
  %311 = load i16, i16* %45, align 2
  %312 = sub i16 %310, %311
  %313 = load i16, i16* %145, align 2
  %314 = load i16, i16* %47, align 2
  %315 = sub i16 %313, %314
  %316 = icmp eq i16 %312, 0
  %317 = icmp eq i16 %315, 0
  %318 = xor i1 %317, true
  %319 = zext i1 %318 to i64
  %320 = select i1 %317, i64 2, i64 3
  %321 = select i1 %316, i64 %319, i64 %320
  %322 = getelementptr inbounds i32, i32* %9, i64 %321
  %323 = load i32, i32* %322, align 4
  %324 = load i32*, i32** %10, align 8
  %325 = sext i16 %312 to i64
  %326 = getelementptr inbounds i32, i32* %324, i64 %325
  %327 = load i32, i32* %326, align 4
  %328 = add nsw i32 %327, %323
  %329 = load i32*, i32** %141, align 8
  %330 = sext i16 %315 to i64
  %331 = getelementptr inbounds i32, i32* %329, i64 %330
  %332 = load i32, i32* %331, align 4
  %333 = add nsw i32 %328, %332
  %334 = sext i32 %333 to i64
  %335 = mul nsw i64 %334, %142
  %336 = add nsw i64 %335, 8192
  %337 = lshr i64 %336, 14
  %338 = trunc i64 %337 to i32
  br label %339

339:                                              ; preds = %307, %309
  %340 = phi i32 [ %338, %309 ], [ 0, %307 ]
  %341 = add nsw i32 %340, %308
  store i32 %341, i32* %57, align 16
  %342 = icmp ult i32 %341, %260
  br i1 %342, label %343, label %345

343:                                              ; preds = %339
  store i32 %308, i32* %11, align 4
  %344 = load i32, i32* %18, align 4
  store i32 %344, i32* %12, align 4
  br label %345

345:                                              ; preds = %343, %339
  %346 = phi i32 [ %341, %343 ], [ %260, %339 ]
  %347 = phi i32 [ 4, %343 ], [ %261, %339 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #8
  br label %349

348:                                              ; preds = %264
  store i32 -1, i32* %57, align 16
  br label %349

349:                                              ; preds = %348, %345
  %350 = phi i32 [ %346, %345 ], [ %260, %348 ]
  %351 = phi i32 [ %347, %345 ], [ %261, %348 ]
  %352 = icmp ult i32 %351, 4
  br i1 %352, label %353, label %363

353:                                              ; preds = %349
  %354 = sext i32 %351 to i64
  %355 = getelementptr inbounds %struct.mv, %struct.mv* %165, i64 %354, i32 0
  %356 = load i16, i16* %355, align 2
  %357 = sext i16 %356 to i32
  %358 = add nsw i32 %169, %357
  %359 = getelementptr inbounds %struct.mv, %struct.mv* %165, i64 %354, i32 1
  %360 = load i16, i16* %359, align 2
  %361 = sext i16 %360 to i32
  %362 = add nsw i32 %168, %361
  br label %367

363:                                              ; preds = %349
  %364 = icmp eq i32 %351, 4
  %365 = select i1 %364, i32 %275, i32 %169
  %366 = select i1 %364, i32 %274, i32 %168
  br label %367

367:                                              ; preds = %363, %353
  %368 = phi i32 [ %358, %353 ], [ %365, %363 ]
  %369 = phi i32 [ %362, %353 ], [ %366, %363 ]
  %370 = icmp ne i32 %351, -1
  %371 = and i1 %146, %370
  br i1 %371, label %372, label %1028

372:                                              ; preds = %367
  %373 = icmp ne i32 %368, %275
  %374 = icmp eq i32 %369, %274
  %375 = or i1 %373, %374
  br i1 %375, label %498, label %376

376:                                              ; preds = %372
  %377 = sub nsw i32 %369, %274
  br i1 %147, label %378, label %627

378:                                              ; preds = %376
  %379 = add nsw i32 %377, %369
  %380 = icmp slt i32 %379, %100
  %381 = icmp sgt i32 %379, %102
  %382 = or i1 %380, %381
  %383 = or i1 %279, %382
  %384 = or i1 %281, %383
  br i1 %135, label %433, label %385

385:                                              ; preds = %378
  br i1 %384, label %1028, label %386

386:                                              ; preds = %385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #8
  %387 = trunc i32 %275 to i16
  store i16 %387, i16* %149, align 2
  %388 = trunc i32 %379 to i16
  store i16 %388, i16* %150, align 2
  %389 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %390 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %22, %struct.scale_factors* %389, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  %391 = sext i32 %390 to i64
  br i1 %140, label %419, label %392

392:                                              ; preds = %386
  %393 = load i16, i16* %149, align 2
  %394 = sub i16 %393, %46
  %395 = load i16, i16* %150, align 2
  %396 = sub i16 %395, %48
  %397 = icmp eq i16 %394, 0
  %398 = icmp eq i16 %396, 0
  %399 = xor i1 %398, true
  %400 = zext i1 %399 to i64
  %401 = select i1 %398, i64 2, i64 3
  %402 = select i1 %397, i64 %400, i64 %401
  %403 = getelementptr inbounds i32, i32* %9, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = load i32*, i32** %10, align 8
  %406 = sext i16 %394 to i64
  %407 = getelementptr inbounds i32, i32* %405, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = add nsw i32 %408, %404
  %410 = load i32*, i32** %141, align 8
  %411 = sext i16 %396 to i64
  %412 = getelementptr inbounds i32, i32* %410, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = add nsw i32 %409, %413
  %415 = sext i32 %414 to i64
  %416 = mul nsw i64 %415, %142
  %417 = add nsw i64 %416, 8192
  %418 = lshr i64 %417, 14
  br label %419

419:                                              ; preds = %386, %392
  %420 = phi i64 [ %418, %392 ], [ 0, %386 ]
  %421 = shl i64 %420, 32
  %422 = ashr exact i64 %421, 32
  %423 = add nsw i64 %422, %391
  %424 = icmp sgt i64 %423, 2147483646
  br i1 %424, label %430, label %425

425:                                              ; preds = %419
  %426 = trunc i64 %423 to i32
  %427 = icmp ugt i32 %350, %426
  br i1 %427, label %428, label %430

428:                                              ; preds = %425
  store i32 %390, i32* %11, align 4
  %429 = load i32, i32* %18, align 4
  store i32 %429, i32* %12, align 4
  br label %430

430:                                              ; preds = %419, %425, %428
  %431 = phi i32 [ %426, %428 ], [ %350, %425 ], [ %350, %419 ]
  %432 = phi i32 [ %379, %428 ], [ %369, %425 ], [ %369, %419 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %148) #8
  br label %1028

433:                                              ; preds = %378
  br i1 %384, label %1028, label %434

434:                                              ; preds = %433
  %435 = trunc i32 %275 to i16
  %436 = trunc i32 %379 to i16
  br i1 %137, label %437, label %448

437:                                              ; preds = %434
  %438 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %439 = ashr i32 %275, 3
  %440 = mul nsw i32 %439, %34
  %441 = ashr i32 %379, 3
  %442 = add nsw i32 %441, %440
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds i8, i8* %44, i64 %443
  %445 = and i32 %379, 7
  %446 = and i32 %275, 7
  %447 = call i32 %438(i8* %444, i32 %34, i32 %445, i32 %446, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %459

448:                                              ; preds = %434
  %449 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %450 = ashr i32 %275, 3
  %451 = mul nsw i32 %450, %34
  %452 = ashr i32 %379, 3
  %453 = add nsw i32 %452, %451
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %44, i64 %454
  %456 = and i32 %379, 7
  %457 = and i32 %275, 7
  %458 = call i32 %449(i8* %455, i32 %34, i32 %456, i32 %457, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %459

459:                                              ; preds = %448, %437
  %460 = phi i32 [ %447, %437 ], [ %458, %448 ]
  %461 = sext i32 %460 to i64
  br i1 %140, label %487, label %462

462:                                              ; preds = %459
  %463 = sub i16 %435, %46
  %464 = sub i16 %436, %48
  %465 = icmp eq i16 %463, 0
  %466 = icmp eq i16 %464, 0
  %467 = xor i1 %466, true
  %468 = zext i1 %467 to i64
  %469 = select i1 %466, i64 2, i64 3
  %470 = select i1 %465, i64 %468, i64 %469
  %471 = getelementptr inbounds i32, i32* %9, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = load i32*, i32** %10, align 8
  %474 = sext i16 %463 to i64
  %475 = getelementptr inbounds i32, i32* %473, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = add nsw i32 %476, %472
  %478 = load i32*, i32** %141, align 8
  %479 = sext i16 %464 to i64
  %480 = getelementptr inbounds i32, i32* %478, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = add nsw i32 %477, %481
  %483 = sext i32 %482 to i64
  %484 = mul nsw i64 %483, %142
  %485 = add nsw i64 %484, 8192
  %486 = lshr i64 %485, 14
  br label %487

487:                                              ; preds = %459, %462
  %488 = phi i64 [ %486, %462 ], [ 0, %459 ]
  %489 = shl i64 %488, 32
  %490 = ashr exact i64 %489, 32
  %491 = add nsw i64 %490, %461
  %492 = icmp sgt i64 %491, 2147483646
  br i1 %492, label %1028, label %493

493:                                              ; preds = %487
  %494 = trunc i64 %491 to i32
  %495 = icmp ugt i32 %350, %494
  br i1 %495, label %496, label %1028

496:                                              ; preds = %493
  store i32 %460, i32* %11, align 4
  %497 = load i32, i32* %18, align 4
  store i32 %497, i32* %12, align 4
  br label %1028

498:                                              ; preds = %372
  %499 = and i1 %373, %374
  br i1 %499, label %500, label %626

500:                                              ; preds = %498
  %501 = sub nsw i32 %368, %275
  br i1 %147, label %502, label %627

502:                                              ; preds = %500
  br i1 %135, label %556, label %503

503:                                              ; preds = %502
  br i1 %278, label %1028, label %504

504:                                              ; preds = %503
  %505 = add nsw i32 %501, %368
  %506 = icmp slt i32 %505, %104
  %507 = icmp sgt i32 %505, %106
  %508 = or i1 %506, %507
  br i1 %508, label %1028, label %509

509:                                              ; preds = %504
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #8
  %510 = trunc i32 %505 to i16
  store i16 %510, i16* %162, align 2
  %511 = trunc i32 %274 to i16
  store i16 %511, i16* %163, align 2
  %512 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %513 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %23, %struct.scale_factors* %512, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  %514 = sext i32 %513 to i64
  br i1 %140, label %542, label %515

515:                                              ; preds = %509
  %516 = load i16, i16* %162, align 2
  %517 = sub i16 %516, %46
  %518 = load i16, i16* %163, align 2
  %519 = sub i16 %518, %48
  %520 = icmp eq i16 %517, 0
  %521 = icmp eq i16 %519, 0
  %522 = xor i1 %521, true
  %523 = zext i1 %522 to i64
  %524 = select i1 %521, i64 2, i64 3
  %525 = select i1 %520, i64 %523, i64 %524
  %526 = getelementptr inbounds i32, i32* %9, i64 %525
  %527 = load i32, i32* %526, align 4
  %528 = load i32*, i32** %10, align 8
  %529 = sext i16 %517 to i64
  %530 = getelementptr inbounds i32, i32* %528, i64 %529
  %531 = load i32, i32* %530, align 4
  %532 = add nsw i32 %531, %527
  %533 = load i32*, i32** %141, align 8
  %534 = sext i16 %519 to i64
  %535 = getelementptr inbounds i32, i32* %533, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = add nsw i32 %532, %536
  %538 = sext i32 %537 to i64
  %539 = mul nsw i64 %538, %142
  %540 = add nsw i64 %539, 8192
  %541 = lshr i64 %540, 14
  br label %542

542:                                              ; preds = %509, %515
  %543 = phi i64 [ %541, %515 ], [ 0, %509 ]
  %544 = shl i64 %543, 32
  %545 = ashr exact i64 %544, 32
  %546 = add nsw i64 %545, %514
  %547 = icmp sgt i64 %546, 2147483646
  br i1 %547, label %553, label %548

548:                                              ; preds = %542
  %549 = trunc i64 %546 to i32
  %550 = icmp ugt i32 %350, %549
  br i1 %550, label %551, label %553

551:                                              ; preds = %548
  store i32 %513, i32* %11, align 4
  %552 = load i32, i32* %18, align 4
  store i32 %552, i32* %12, align 4
  br label %553

553:                                              ; preds = %542, %548, %551
  %554 = phi i32 [ %549, %551 ], [ %350, %548 ], [ %350, %542 ]
  %555 = phi i32 [ %505, %551 ], [ %368, %548 ], [ %368, %542 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #8
  br label %1028

556:                                              ; preds = %502
  br i1 %278, label %1028, label %557

557:                                              ; preds = %556
  %558 = add nsw i32 %501, %368
  %559 = icmp slt i32 %558, %104
  %560 = icmp sgt i32 %558, %106
  %561 = or i1 %559, %560
  br i1 %561, label %1028, label %562

562:                                              ; preds = %557
  %563 = trunc i32 %558 to i16
  %564 = trunc i32 %274 to i16
  br i1 %137, label %565, label %576

565:                                              ; preds = %562
  %566 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %567 = ashr i32 %558, 3
  %568 = mul nsw i32 %567, %34
  %569 = ashr i32 %274, 3
  %570 = add nsw i32 %568, %569
  %571 = sext i32 %570 to i64
  %572 = getelementptr inbounds i8, i8* %44, i64 %571
  %573 = and i32 %274, 7
  %574 = and i32 %558, 7
  %575 = call i32 %566(i8* %572, i32 %34, i32 %573, i32 %574, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %587

576:                                              ; preds = %562
  %577 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %578 = ashr i32 %558, 3
  %579 = mul nsw i32 %578, %34
  %580 = ashr i32 %274, 3
  %581 = add nsw i32 %579, %580
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds i8, i8* %44, i64 %582
  %584 = and i32 %274, 7
  %585 = and i32 %558, 7
  %586 = call i32 %577(i8* %583, i32 %34, i32 %584, i32 %585, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %587

587:                                              ; preds = %576, %565
  %588 = phi i32 [ %575, %565 ], [ %586, %576 ]
  %589 = sext i32 %588 to i64
  br i1 %140, label %615, label %590

590:                                              ; preds = %587
  %591 = sub i16 %563, %46
  %592 = sub i16 %564, %48
  %593 = icmp eq i16 %591, 0
  %594 = icmp eq i16 %592, 0
  %595 = xor i1 %594, true
  %596 = zext i1 %595 to i64
  %597 = select i1 %594, i64 2, i64 3
  %598 = select i1 %593, i64 %596, i64 %597
  %599 = getelementptr inbounds i32, i32* %9, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = load i32*, i32** %10, align 8
  %602 = sext i16 %591 to i64
  %603 = getelementptr inbounds i32, i32* %601, i64 %602
  %604 = load i32, i32* %603, align 4
  %605 = add nsw i32 %604, %600
  %606 = load i32*, i32** %141, align 8
  %607 = sext i16 %592 to i64
  %608 = getelementptr inbounds i32, i32* %606, i64 %607
  %609 = load i32, i32* %608, align 4
  %610 = add nsw i32 %605, %609
  %611 = sext i32 %610 to i64
  %612 = mul nsw i64 %611, %142
  %613 = add nsw i64 %612, 8192
  %614 = lshr i64 %613, 14
  br label %615

615:                                              ; preds = %587, %590
  %616 = phi i64 [ %614, %590 ], [ 0, %587 ]
  %617 = shl i64 %616, 32
  %618 = ashr exact i64 %617, 32
  %619 = add nsw i64 %618, %589
  %620 = icmp sgt i64 %619, 2147483646
  br i1 %620, label %1028, label %621

621:                                              ; preds = %615
  %622 = trunc i64 %619 to i32
  %623 = icmp ugt i32 %350, %622
  br i1 %623, label %624, label %1028

624:                                              ; preds = %621
  store i32 %588, i32* %11, align 4
  %625 = load i32, i32* %18, align 4
  store i32 %625, i32* %12, align 4
  br label %1028

626:                                              ; preds = %498
  br i1 %151, label %627, label %1028

627:                                              ; preds = %376, %500, %626
  %628 = phi i32 [ %269, %626 ], [ %269, %500 ], [ %377, %376 ]
  %629 = phi i32 [ %273, %626 ], [ %501, %500 ], [ %273, %376 ]
  %630 = icmp slt i32 %369, %100
  %631 = icmp sgt i32 %369, %102
  %632 = or i1 %630, %631
  br i1 %135, label %806, label %633

633:                                              ; preds = %627
  br i1 %632, label %686, label %634

634:                                              ; preds = %633
  %635 = add nsw i32 %629, %368
  %636 = icmp slt i32 %635, %104
  %637 = icmp sgt i32 %635, %106
  %638 = or i1 %636, %637
  br i1 %638, label %686, label %639

639:                                              ; preds = %634
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #8
  %640 = trunc i32 %635 to i16
  store i16 %640, i16* %153, align 2
  %641 = trunc i32 %369 to i16
  store i16 %641, i16* %154, align 2
  %642 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %643 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %24, %struct.scale_factors* %642, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  %644 = sext i32 %643 to i64
  br i1 %140, label %672, label %645

645:                                              ; preds = %639
  %646 = load i16, i16* %153, align 2
  %647 = sub i16 %646, %46
  %648 = load i16, i16* %154, align 2
  %649 = sub i16 %648, %48
  %650 = icmp eq i16 %647, 0
  %651 = icmp eq i16 %649, 0
  %652 = xor i1 %651, true
  %653 = zext i1 %652 to i64
  %654 = select i1 %651, i64 2, i64 3
  %655 = select i1 %650, i64 %653, i64 %654
  %656 = getelementptr inbounds i32, i32* %9, i64 %655
  %657 = load i32, i32* %656, align 4
  %658 = load i32*, i32** %10, align 8
  %659 = sext i16 %647 to i64
  %660 = getelementptr inbounds i32, i32* %658, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = add nsw i32 %661, %657
  %663 = load i32*, i32** %141, align 8
  %664 = sext i16 %649 to i64
  %665 = getelementptr inbounds i32, i32* %663, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = add nsw i32 %662, %666
  %668 = sext i32 %667 to i64
  %669 = mul nsw i64 %668, %142
  %670 = add nsw i64 %669, 8192
  %671 = lshr i64 %670, 14
  br label %672

672:                                              ; preds = %639, %645
  %673 = phi i64 [ %671, %645 ], [ 0, %639 ]
  %674 = shl i64 %673, 32
  %675 = ashr exact i64 %674, 32
  %676 = add nsw i64 %675, %644
  %677 = icmp sgt i64 %676, 2147483646
  br i1 %677, label %683, label %678

678:                                              ; preds = %672
  %679 = trunc i64 %676 to i32
  %680 = icmp ugt i32 %350, %679
  br i1 %680, label %681, label %683

681:                                              ; preds = %678
  store i32 %643, i32* %11, align 4
  %682 = load i32, i32* %18, align 4
  store i32 %682, i32* %12, align 4
  br label %683

683:                                              ; preds = %672, %678, %681
  %684 = phi i32 [ %679, %681 ], [ %350, %678 ], [ %350, %672 ]
  %685 = phi i32 [ %635, %681 ], [ %368, %678 ], [ %368, %672 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #8
  br label %686

686:                                              ; preds = %634, %633, %683
  %687 = phi i32 [ %684, %683 ], [ %350, %633 ], [ %350, %634 ]
  %688 = phi i32 [ %685, %683 ], [ %368, %633 ], [ %368, %634 ]
  %689 = add nsw i32 %628, %369
  %690 = icmp slt i32 %689, %100
  %691 = icmp sgt i32 %689, %102
  %692 = or i1 %690, %691
  %693 = icmp slt i32 %368, %104
  %694 = or i1 %693, %692
  %695 = icmp sgt i32 %368, %106
  %696 = or i1 %695, %694
  br i1 %696, label %745, label %697

697:                                              ; preds = %686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #8
  %698 = trunc i32 %368 to i16
  store i16 %698, i16* %156, align 2
  %699 = trunc i32 %689 to i16
  store i16 %699, i16* %157, align 2
  %700 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %701 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %25, %struct.scale_factors* %700, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  %702 = sext i32 %701 to i64
  br i1 %140, label %730, label %703

703:                                              ; preds = %697
  %704 = load i16, i16* %156, align 2
  %705 = sub i16 %704, %46
  %706 = load i16, i16* %157, align 2
  %707 = sub i16 %706, %48
  %708 = icmp eq i16 %705, 0
  %709 = icmp eq i16 %707, 0
  %710 = xor i1 %709, true
  %711 = zext i1 %710 to i64
  %712 = select i1 %709, i64 2, i64 3
  %713 = select i1 %708, i64 %711, i64 %712
  %714 = getelementptr inbounds i32, i32* %9, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = load i32*, i32** %10, align 8
  %717 = sext i16 %705 to i64
  %718 = getelementptr inbounds i32, i32* %716, i64 %717
  %719 = load i32, i32* %718, align 4
  %720 = add nsw i32 %719, %715
  %721 = load i32*, i32** %141, align 8
  %722 = sext i16 %707 to i64
  %723 = getelementptr inbounds i32, i32* %721, i64 %722
  %724 = load i32, i32* %723, align 4
  %725 = add nsw i32 %720, %724
  %726 = sext i32 %725 to i64
  %727 = mul nsw i64 %726, %142
  %728 = add nsw i64 %727, 8192
  %729 = lshr i64 %728, 14
  br label %730

730:                                              ; preds = %697, %703
  %731 = phi i64 [ %729, %703 ], [ 0, %697 ]
  %732 = shl i64 %731, 32
  %733 = ashr exact i64 %732, 32
  %734 = add nsw i64 %733, %702
  %735 = icmp sgt i64 %734, 2147483646
  br i1 %735, label %741, label %736

736:                                              ; preds = %730
  %737 = trunc i64 %734 to i32
  %738 = icmp ugt i32 %687, %737
  br i1 %738, label %739, label %741

739:                                              ; preds = %736
  store i32 %701, i32* %11, align 4
  %740 = load i32, i32* %18, align 4
  store i32 %740, i32* %12, align 4
  br label %741

741:                                              ; preds = %730, %736, %739
  %742 = phi i32 [ %737, %739 ], [ %687, %736 ], [ %687, %730 ]
  %743 = phi i32 [ %368, %739 ], [ %688, %736 ], [ %688, %730 ]
  %744 = phi i32 [ %689, %739 ], [ %369, %736 ], [ %369, %730 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #8
  br label %745

745:                                              ; preds = %686, %741
  %746 = phi i32 [ %742, %741 ], [ %687, %686 ]
  %747 = phi i32 [ %743, %741 ], [ %688, %686 ]
  %748 = phi i32 [ %744, %741 ], [ %369, %686 ]
  %749 = icmp eq i32 %368, %747
  %750 = icmp eq i32 %369, %748
  %751 = and i1 %749, %750
  %752 = or i1 %692, %751
  br i1 %752, label %1028, label %753

753:                                              ; preds = %745
  %754 = add nsw i32 %629, %368
  %755 = icmp slt i32 %754, %104
  %756 = icmp sgt i32 %754, %106
  %757 = or i1 %755, %756
  br i1 %757, label %1028, label %758

758:                                              ; preds = %753
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #8
  %759 = trunc i32 %754 to i16
  store i16 %759, i16* %159, align 2
  %760 = trunc i32 %689 to i16
  store i16 %760, i16* %160, align 2
  %761 = load %struct.scale_factors*, %struct.scale_factors** %136, align 16
  %762 = call fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* %31, %struct.mv* nonnull %26, %struct.scale_factors* %761, [8 x i16]* %72, %struct.vp9_variance_vtable* %5, i8* %28, i32 %30, i8* %44, i32 %34, i8* %13, i32 %14, i32 %15, i32* nonnull %18)
  %763 = sext i32 %762 to i64
  br i1 %140, label %791, label %764

764:                                              ; preds = %758
  %765 = load i16, i16* %159, align 2
  %766 = sub i16 %765, %46
  %767 = load i16, i16* %160, align 2
  %768 = sub i16 %767, %48
  %769 = icmp eq i16 %766, 0
  %770 = icmp eq i16 %768, 0
  %771 = xor i1 %770, true
  %772 = zext i1 %771 to i64
  %773 = select i1 %770, i64 2, i64 3
  %774 = select i1 %769, i64 %772, i64 %773
  %775 = getelementptr inbounds i32, i32* %9, i64 %774
  %776 = load i32, i32* %775, align 4
  %777 = load i32*, i32** %10, align 8
  %778 = sext i16 %766 to i64
  %779 = getelementptr inbounds i32, i32* %777, i64 %778
  %780 = load i32, i32* %779, align 4
  %781 = add nsw i32 %780, %776
  %782 = load i32*, i32** %141, align 8
  %783 = sext i16 %768 to i64
  %784 = getelementptr inbounds i32, i32* %782, i64 %783
  %785 = load i32, i32* %784, align 4
  %786 = add nsw i32 %781, %785
  %787 = sext i32 %786 to i64
  %788 = mul nsw i64 %787, %142
  %789 = add nsw i64 %788, 8192
  %790 = lshr i64 %789, 14
  br label %791

791:                                              ; preds = %758, %764
  %792 = phi i64 [ %790, %764 ], [ 0, %758 ]
  %793 = shl i64 %792, 32
  %794 = ashr exact i64 %793, 32
  %795 = add nsw i64 %794, %763
  %796 = icmp sgt i64 %795, 2147483646
  br i1 %796, label %802, label %797

797:                                              ; preds = %791
  %798 = trunc i64 %795 to i32
  %799 = icmp ugt i32 %746, %798
  br i1 %799, label %800, label %802

800:                                              ; preds = %797
  store i32 %762, i32* %11, align 4
  %801 = load i32, i32* %18, align 4
  store i32 %801, i32* %12, align 4
  br label %802

802:                                              ; preds = %791, %797, %800
  %803 = phi i32 [ %798, %800 ], [ %746, %797 ], [ %746, %791 ]
  %804 = phi i32 [ %754, %800 ], [ %747, %797 ], [ %747, %791 ]
  %805 = phi i32 [ %689, %800 ], [ %748, %797 ], [ %748, %791 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #8
  br label %1028

806:                                              ; preds = %627
  br i1 %632, label %876, label %807

807:                                              ; preds = %806
  %808 = add nsw i32 %629, %368
  %809 = icmp slt i32 %808, %104
  %810 = icmp sgt i32 %808, %106
  %811 = or i1 %809, %810
  br i1 %811, label %876, label %812

812:                                              ; preds = %807
  %813 = trunc i32 %808 to i16
  %814 = trunc i32 %369 to i16
  br i1 %137, label %815, label %826

815:                                              ; preds = %812
  %816 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %817 = ashr i32 %808, 3
  %818 = mul nsw i32 %817, %34
  %819 = ashr i32 %369, 3
  %820 = add nsw i32 %818, %819
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds i8, i8* %44, i64 %821
  %823 = and i32 %369, 7
  %824 = and i32 %808, 7
  %825 = call i32 %816(i8* %822, i32 %34, i32 %823, i32 %824, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %837

826:                                              ; preds = %812
  %827 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %828 = ashr i32 %808, 3
  %829 = mul nsw i32 %828, %34
  %830 = ashr i32 %369, 3
  %831 = add nsw i32 %829, %830
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds i8, i8* %44, i64 %832
  %834 = and i32 %369, 7
  %835 = and i32 %808, 7
  %836 = call i32 %827(i8* %833, i32 %34, i32 %834, i32 %835, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %837

837:                                              ; preds = %826, %815
  %838 = phi i32 [ %825, %815 ], [ %836, %826 ]
  %839 = sext i32 %838 to i64
  br i1 %140, label %865, label %840

840:                                              ; preds = %837
  %841 = sub i16 %813, %46
  %842 = sub i16 %814, %48
  %843 = icmp eq i16 %841, 0
  %844 = icmp eq i16 %842, 0
  %845 = xor i1 %844, true
  %846 = zext i1 %845 to i64
  %847 = select i1 %844, i64 2, i64 3
  %848 = select i1 %843, i64 %846, i64 %847
  %849 = getelementptr inbounds i32, i32* %9, i64 %848
  %850 = load i32, i32* %849, align 4
  %851 = load i32*, i32** %10, align 8
  %852 = sext i16 %841 to i64
  %853 = getelementptr inbounds i32, i32* %851, i64 %852
  %854 = load i32, i32* %853, align 4
  %855 = add nsw i32 %854, %850
  %856 = load i32*, i32** %141, align 8
  %857 = sext i16 %842 to i64
  %858 = getelementptr inbounds i32, i32* %856, i64 %857
  %859 = load i32, i32* %858, align 4
  %860 = add nsw i32 %855, %859
  %861 = sext i32 %860 to i64
  %862 = mul nsw i64 %861, %142
  %863 = add nsw i64 %862, 8192
  %864 = lshr i64 %863, 14
  br label %865

865:                                              ; preds = %837, %840
  %866 = phi i64 [ %864, %840 ], [ 0, %837 ]
  %867 = shl i64 %866, 32
  %868 = ashr exact i64 %867, 32
  %869 = add nsw i64 %868, %839
  %870 = icmp sgt i64 %869, 2147483646
  br i1 %870, label %876, label %871

871:                                              ; preds = %865
  %872 = trunc i64 %869 to i32
  %873 = icmp ugt i32 %350, %872
  br i1 %873, label %874, label %876

874:                                              ; preds = %871
  store i32 %838, i32* %11, align 4
  %875 = load i32, i32* %18, align 4
  store i32 %875, i32* %12, align 4
  br label %876

876:                                              ; preds = %874, %871, %865, %807, %806
  %877 = phi i32 [ %350, %806 ], [ %350, %807 ], [ %872, %874 ], [ %350, %871 ], [ %350, %865 ]
  %878 = phi i32 [ %368, %806 ], [ %368, %807 ], [ %808, %874 ], [ %368, %871 ], [ %368, %865 ]
  %879 = add nsw i32 %628, %369
  %880 = icmp slt i32 %879, %100
  %881 = icmp sgt i32 %879, %102
  %882 = or i1 %880, %881
  %883 = icmp slt i32 %368, %104
  %884 = or i1 %883, %882
  %885 = icmp sgt i32 %368, %106
  %886 = or i1 %885, %884
  br i1 %886, label %951, label %887

887:                                              ; preds = %876
  %888 = trunc i32 %368 to i16
  %889 = trunc i32 %879 to i16
  br i1 %137, label %890, label %901

890:                                              ; preds = %887
  %891 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %892 = ashr i32 %368, 3
  %893 = mul nsw i32 %892, %34
  %894 = ashr i32 %879, 3
  %895 = add nsw i32 %894, %893
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds i8, i8* %44, i64 %896
  %898 = and i32 %879, 7
  %899 = and i32 %368, 7
  %900 = call i32 %891(i8* %897, i32 %34, i32 %898, i32 %899, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %912

901:                                              ; preds = %887
  %902 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %903 = ashr i32 %368, 3
  %904 = mul nsw i32 %903, %34
  %905 = ashr i32 %879, 3
  %906 = add nsw i32 %905, %904
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds i8, i8* %44, i64 %907
  %909 = and i32 %879, 7
  %910 = and i32 %368, 7
  %911 = call i32 %902(i8* %908, i32 %34, i32 %909, i32 %910, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %912

912:                                              ; preds = %901, %890
  %913 = phi i32 [ %900, %890 ], [ %911, %901 ]
  %914 = sext i32 %913 to i64
  br i1 %140, label %940, label %915

915:                                              ; preds = %912
  %916 = sub i16 %888, %46
  %917 = sub i16 %889, %48
  %918 = icmp eq i16 %916, 0
  %919 = icmp eq i16 %917, 0
  %920 = xor i1 %919, true
  %921 = zext i1 %920 to i64
  %922 = select i1 %919, i64 2, i64 3
  %923 = select i1 %918, i64 %921, i64 %922
  %924 = getelementptr inbounds i32, i32* %9, i64 %923
  %925 = load i32, i32* %924, align 4
  %926 = load i32*, i32** %10, align 8
  %927 = sext i16 %916 to i64
  %928 = getelementptr inbounds i32, i32* %926, i64 %927
  %929 = load i32, i32* %928, align 4
  %930 = add nsw i32 %929, %925
  %931 = load i32*, i32** %141, align 8
  %932 = sext i16 %917 to i64
  %933 = getelementptr inbounds i32, i32* %931, i64 %932
  %934 = load i32, i32* %933, align 4
  %935 = add nsw i32 %930, %934
  %936 = sext i32 %935 to i64
  %937 = mul nsw i64 %936, %142
  %938 = add nsw i64 %937, 8192
  %939 = lshr i64 %938, 14
  br label %940

940:                                              ; preds = %912, %915
  %941 = phi i64 [ %939, %915 ], [ 0, %912 ]
  %942 = shl i64 %941, 32
  %943 = ashr exact i64 %942, 32
  %944 = add nsw i64 %943, %914
  %945 = icmp sgt i64 %944, 2147483646
  br i1 %945, label %951, label %946

946:                                              ; preds = %940
  %947 = trunc i64 %944 to i32
  %948 = icmp ugt i32 %877, %947
  br i1 %948, label %949, label %951

949:                                              ; preds = %946
  store i32 %913, i32* %11, align 4
  %950 = load i32, i32* %18, align 4
  store i32 %950, i32* %12, align 4
  br label %951

951:                                              ; preds = %949, %946, %940, %876
  %952 = phi i32 [ %877, %876 ], [ %947, %949 ], [ %877, %946 ], [ %877, %940 ]
  %953 = phi i32 [ %878, %876 ], [ %368, %949 ], [ %878, %946 ], [ %878, %940 ]
  %954 = phi i32 [ %369, %876 ], [ %879, %949 ], [ %369, %946 ], [ %369, %940 ]
  %955 = icmp eq i32 %368, %953
  %956 = icmp eq i32 %369, %954
  %957 = and i1 %955, %956
  %958 = or i1 %882, %957
  br i1 %958, label %1028, label %959

959:                                              ; preds = %951
  %960 = add nsw i32 %629, %368
  %961 = icmp slt i32 %960, %104
  %962 = icmp sgt i32 %960, %106
  %963 = or i1 %961, %962
  br i1 %963, label %1028, label %964

964:                                              ; preds = %959
  %965 = trunc i32 %960 to i16
  %966 = trunc i32 %879 to i16
  br i1 %137, label %967, label %978

967:                                              ; preds = %964
  %968 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*)** %139, align 8
  %969 = ashr i32 %960, 3
  %970 = mul nsw i32 %969, %34
  %971 = ashr i32 %879, 3
  %972 = add nsw i32 %970, %971
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds i8, i8* %44, i64 %973
  %975 = and i32 %879, 7
  %976 = and i32 %960, 7
  %977 = call i32 %968(i8* %974, i32 %34, i32 %975, i32 %976, i8* %28, i32 %30, i32* nonnull %18) #8
  br label %989

978:                                              ; preds = %964
  %979 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %138, align 8
  %980 = ashr i32 %960, 3
  %981 = mul nsw i32 %980, %34
  %982 = ashr i32 %879, 3
  %983 = add nsw i32 %981, %982
  %984 = sext i32 %983 to i64
  %985 = getelementptr inbounds i8, i8* %44, i64 %984
  %986 = and i32 %879, 7
  %987 = and i32 %960, 7
  %988 = call i32 %979(i8* %985, i32 %34, i32 %986, i32 %987, i8* %28, i32 %30, i32* nonnull %18, i8* nonnull %13) #8
  br label %989

989:                                              ; preds = %978, %967
  %990 = phi i32 [ %977, %967 ], [ %988, %978 ]
  %991 = sext i32 %990 to i64
  br i1 %140, label %1017, label %992

992:                                              ; preds = %989
  %993 = sub i16 %965, %46
  %994 = sub i16 %966, %48
  %995 = icmp eq i16 %993, 0
  %996 = icmp eq i16 %994, 0
  %997 = xor i1 %996, true
  %998 = zext i1 %997 to i64
  %999 = select i1 %996, i64 2, i64 3
  %1000 = select i1 %995, i64 %998, i64 %999
  %1001 = getelementptr inbounds i32, i32* %9, i64 %1000
  %1002 = load i32, i32* %1001, align 4
  %1003 = load i32*, i32** %10, align 8
  %1004 = sext i16 %993 to i64
  %1005 = getelementptr inbounds i32, i32* %1003, i64 %1004
  %1006 = load i32, i32* %1005, align 4
  %1007 = add nsw i32 %1006, %1002
  %1008 = load i32*, i32** %141, align 8
  %1009 = sext i16 %994 to i64
  %1010 = getelementptr inbounds i32, i32* %1008, i64 %1009
  %1011 = load i32, i32* %1010, align 4
  %1012 = add nsw i32 %1007, %1011
  %1013 = sext i32 %1012 to i64
  %1014 = mul nsw i64 %1013, %142
  %1015 = add nsw i64 %1014, 8192
  %1016 = lshr i64 %1015, 14
  br label %1017

1017:                                             ; preds = %989, %992
  %1018 = phi i64 [ %1016, %992 ], [ 0, %989 ]
  %1019 = shl i64 %1018, 32
  %1020 = ashr exact i64 %1019, 32
  %1021 = add nsw i64 %1020, %991
  %1022 = icmp sgt i64 %1021, 2147483646
  br i1 %1022, label %1028, label %1023

1023:                                             ; preds = %1017
  %1024 = trunc i64 %1021 to i32
  %1025 = icmp ugt i32 %952, %1024
  br i1 %1025, label %1026, label %1028

1026:                                             ; preds = %1023
  store i32 %990, i32* %11, align 4
  %1027 = load i32, i32* %18, align 4
  store i32 %1027, i32* %12, align 4
  br label %1028

1028:                                             ; preds = %951, %745, %430, %553, %385, %433, %503, %504, %556, %557, %487, %493, %496, %615, %621, %624, %1026, %1023, %1017, %626, %802, %753, %959, %367
  %1029 = phi i32 [ %350, %367 ], [ %803, %802 ], [ %350, %626 ], [ %746, %745 ], [ %746, %753 ], [ %952, %951 ], [ %952, %959 ], [ %1024, %1026 ], [ %952, %1023 ], [ %952, %1017 ], [ %350, %615 ], [ %350, %621 ], [ %622, %624 ], [ %350, %487 ], [ %350, %493 ], [ %494, %496 ], [ %350, %557 ], [ %350, %556 ], [ %350, %504 ], [ %350, %503 ], [ %350, %433 ], [ %350, %385 ], [ %554, %553 ], [ %431, %430 ]
  %1030 = phi i32 [ %368, %367 ], [ %804, %802 ], [ %368, %626 ], [ %747, %745 ], [ %747, %753 ], [ %953, %951 ], [ %953, %959 ], [ %960, %1026 ], [ %953, %1023 ], [ %953, %1017 ], [ %368, %615 ], [ %368, %621 ], [ %558, %624 ], [ %275, %487 ], [ %275, %493 ], [ %275, %496 ], [ %368, %557 ], [ %368, %556 ], [ %368, %504 ], [ %368, %503 ], [ %275, %433 ], [ %275, %385 ], [ %555, %553 ], [ %275, %430 ]
  %1031 = phi i32 [ %369, %367 ], [ %805, %802 ], [ %369, %626 ], [ %748, %745 ], [ %748, %753 ], [ %954, %951 ], [ %954, %959 ], [ %879, %1026 ], [ %954, %1023 ], [ %954, %1017 ], [ %274, %615 ], [ %274, %621 ], [ %274, %624 ], [ %369, %487 ], [ %369, %493 ], [ %379, %496 ], [ %274, %557 ], [ %274, %556 ], [ %274, %504 ], [ %274, %503 ], [ %369, %433 ], [ %369, %385 ], [ %274, %553 ], [ %432, %430 ]
  %1032 = getelementptr inbounds %struct.mv, %struct.mv* %165, i64 4
  %1033 = ashr i32 %167, 1
  %1034 = add nuw nsw i32 %166, 1
  %1035 = icmp eq i32 %1034, %126
  br i1 %1035, label %1036, label %164

1036:                                             ; preds = %1028, %125
  %1037 = phi i32 [ %129, %125 ], [ %1029, %1028 ]
  %1038 = phi i32 [ %49, %125 ], [ %1030, %1028 ]
  %1039 = phi i32 [ %50, %125 ], [ %1031, %1028 ]
  %1040 = trunc i32 %1038 to i16
  store i16 %1040, i16* %35, align 2
  %1041 = trunc i32 %1039 to i16
  store i16 %1041, i16* %39, align 2
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #8
  ret i32 %1037
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @accurate_sub_pel_search(%struct.macroblockd* nocapture readonly, %struct.mv*, %struct.scale_factors*, [8 x i16]*, %struct.vp9_variance_vtable* nocapture readonly, i8*, i32, i8*, i32, i8*, i32, i32, i32*) unnamed_addr #5 {
  %14 = alloca [4096 x i16], align 16
  %15 = alloca [4096 x i16], align 16
  %16 = alloca [4096 x i8], align 16
  %17 = alloca [4096 x i8], align 16
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 18
  %19 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %18, align 8
  %20 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %19, i64 0, i32 29
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %54, label %24

24:                                               ; preds = %13
  %25 = bitcast [4096 x i16]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 8192, i1 false)
  %26 = ptrtoint i8* %7 to i64
  %27 = shl i64 %26, 1
  %28 = inttoptr i64 %27 to i16*
  %29 = getelementptr inbounds [4096 x i16], [4096 x i16]* %14, i64 0, i64 0
  %30 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 23
  %31 = load i32, i32* %30, align 8
  call void @vp9_highbd_build_inter_predictor(i16* %28, i32 %8, i16* nonnull %29, i32 %10, %struct.mv* %1, %struct.scale_factors* %2, i32 %10, i32 %11, i32 0, [8 x i16]* %3, i32 0, i32 0, i32 0, i32 %31) #8
  %32 = icmp eq i8* %9, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %24
  %34 = bitcast [4096 x i16]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %34) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 8192, i1 false)
  %35 = getelementptr inbounds [4096 x i16], [4096 x i16]* %15, i64 0, i64 0
  %36 = ptrtoint i8* %9 to i64
  %37 = shl i64 %36, 1
  %38 = inttoptr i64 %37 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %35, i16* %38, i32 %10, i32 %11, i16* nonnull %29, i32 %10) #8
  %39 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %40 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %39, align 8
  %41 = ptrtoint [4096 x i16]* %15 to i64
  %42 = lshr exact i64 %41, 1
  %43 = inttoptr i64 %42 to i8*
  %44 = call i32 %40(i8* nonnull %43, i32 %10, i8* %5, i32 %6, i32* %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %34) #8
  br label %52

45:                                               ; preds = %24
  %46 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %47 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %46, align 8
  %48 = ptrtoint [4096 x i16]* %14 to i64
  %49 = lshr exact i64 %48, 1
  %50 = inttoptr i64 %49 to i8*
  %51 = call i32 %47(i8* nonnull %50, i32 %10, i8* %5, i32 %6, i32* %12) #8
  br label %52

52:                                               ; preds = %45, %33
  %53 = phi i32 [ %44, %33 ], [ %51, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %25) #8
  br label %68

54:                                               ; preds = %13
  %55 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %55) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %55, i8 -86, i64 4096, i1 false)
  call void @vp9_build_inter_predictor(i8* %7, i32 %8, i8* nonnull %55, i32 %10, %struct.mv* %1, %struct.scale_factors* %2, i32 %10, i32 %11, i32 0, [8 x i16]* %3, i32 0, i32 0, i32 0) #8
  %56 = icmp eq i8* %9, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds [4096 x i8], [4096 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %58) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 -86, i64 4096, i1 false)
  call void @vpx_comp_avg_pred_sse2(i8* nonnull %58, i8* nonnull %9, i32 %10, i32 %11, i8* nonnull %55, i32 %10) #8
  %59 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %60 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %59, align 8
  %61 = call i32 %60(i8* nonnull %58, i32 %10, i8* %5, i32 %6, i32* %12) #8
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %58) #8
  br label %66

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 2
  %64 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %63, align 8
  %65 = call i32 %64(i8* nonnull %55, i32 %10, i8* %5, i32 %6, i32* %12) #8
  br label %66

66:                                               ; preds = %62, %57
  %67 = phi i32 [ %61, %57 ], [ %65, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %55) #8
  br label %68

68:                                               ; preds = %66, %52
  %69 = phi i32 [ %53, %52 ], [ %67, %66 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_get_mvpred_var(%struct.macroblock* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture readonly, %struct.vp9_variance_vtable* nocapture readonly, i32) local_unnamed_addr #5 {
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = shl i16 %8, 3
  %10 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = shl i16 %11, 3
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8
  store i32 -1431655766, i32* %6, align 4
  %14 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %3, i64 0, i32 2
  %15 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %14, align 8
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = sext i16 %8 to i32
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = mul nsw i32 %24, %22
  %26 = sext i16 %11 to i32
  %27 = add nsw i32 %25, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %21, i64 %28
  %30 = call i32 %15(i8* %17, i32 %19, i8* %29, i32 %24, i32* nonnull %6) #8
  %31 = zext i32 %30 to i64
  %32 = icmp eq i32 %4, 0
  br i1 %32, label %71, label %33

33:                                               ; preds = %5
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 29
  %35 = load i32**, i32*** %34, align 8
  %36 = icmp eq i32** %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = sub i16 %9, %41
  %43 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %44 = load i16, i16* %43, align 2
  %45 = sub i16 %12, %44
  %46 = icmp eq i16 %42, 0
  %47 = icmp eq i16 %45, 0
  %48 = xor i1 %47, true
  %49 = zext i1 %48 to i64
  %50 = select i1 %47, i64 2, i64 3
  %51 = select i1 %46, i64 %49, i64 %50
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 26, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %35, align 8
  %55 = sext i16 %42 to i64
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %53
  %59 = getelementptr inbounds i32*, i32** %35, i64 1
  %60 = load i32*, i32** %59, align 8
  %61 = sext i16 %45 to i64
  %62 = getelementptr inbounds i32, i32* %60, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %58, %63
  %65 = sext i32 %64 to i64
  %66 = sext i32 %39 to i64
  %67 = shl nsw i64 %66, 18
  %68 = mul i64 %67, %65
  %69 = add i64 %68, 2147483648
  %70 = ashr i64 %69, 32
  br label %71

71:                                               ; preds = %37, %33, %5
  %72 = phi i64 [ 0, %5 ], [ %70, %37 ], [ 0, %33 ]
  %73 = add nsw i64 %72, %31
  %74 = icmp ugt i64 %73, 2147483646
  %75 = trunc i64 %73 to i32
  %76 = select i1 %74, i32 2147483647, i32 %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_get_mvpred_av_var(%struct.macroblock* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture readonly, i8*, %struct.vp9_variance_vtable* nocapture readonly, i32) local_unnamed_addr #5 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = shl i16 %9, 3
  %11 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = shl i16 %12, 3
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8
  store i32 -1431655766, i32* %7, align 4
  %15 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 4
  %16 = load i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)*, i32 (i8*, i32, i32, i32, i8*, i32, i32*, i8*)** %15, align 8
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i16 %9 to i32
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = mul nsw i32 %21, %19
  %23 = sext i16 %12 to i32
  %24 = add nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %18, i64 %25
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = call i32 %16(i8* %26, i32 %21, i32 0, i32 0, i8* %28, i32 %30, i32* nonnull %7, i8* %3) #8
  %32 = icmp eq i32 %5, 0
  br i1 %32, label %71, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 29
  %35 = load i32**, i32*** %34, align 8
  %36 = icmp eq i32** %35, null
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = sub i16 %10, %41
  %43 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %44 = load i16, i16* %43, align 2
  %45 = sub i16 %13, %44
  %46 = icmp eq i16 %42, 0
  %47 = icmp eq i16 %45, 0
  %48 = xor i1 %47, true
  %49 = zext i1 %48 to i64
  %50 = select i1 %47, i64 2, i64 3
  %51 = select i1 %46, i64 %49, i64 %50
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 26, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = load i32*, i32** %35, align 8
  %55 = sext i16 %42 to i64
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, %53
  %59 = getelementptr inbounds i32*, i32** %35, i64 1
  %60 = load i32*, i32** %59, align 8
  %61 = sext i16 %45 to i64
  %62 = getelementptr inbounds i32, i32* %60, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %58, %63
  %65 = sext i32 %64 to i64
  %66 = sext i32 %39 to i64
  %67 = mul nsw i64 %65, %66
  %68 = add nsw i64 %67, 8192
  %69 = lshr i64 %68, 14
  %70 = trunc i64 %69 to i32
  br label %71

71:                                               ; preds = %37, %33, %6
  %72 = phi i32 [ 0, %6 ], [ %70, %37 ], [ 0, %33 ]
  %73 = add i32 %72, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_diamond_search_sad_c(%struct.macroblock* nocapture readonly, %struct.search_site_config* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture, i32, i32, i32* nocapture, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly) local_unnamed_addr #5 {
  %10 = alloca [4 x i32], align 16
  %11 = alloca [4 x i8*], align 16
  %12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = mul nsw i32 %19, %4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %1, i64 0, i32 0, i64 %21
  %23 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %1, i64 0, i32 1, i64 %21
  %24 = getelementptr inbounds %struct.search_site_config, %struct.search_site_config* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %25, %4
  %27 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %28 = load i16, i16* %27, align 2
  %29 = ashr i16 %28, 3
  %30 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %31 = load i16, i16* %30, align 2
  %32 = ashr i16 %31, 3
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %34 = load i32, i32* %33, align 16
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i32
  %44 = icmp sgt i32 %34, %43
  %45 = icmp slt i32 %36, %43
  %46 = select i1 %45, i32 %36, i32 %43
  %47 = select i1 %44, i32 %34, i32 %46
  %48 = trunc i32 %47 to i16
  store i16 %48, i16* %41, align 2
  %49 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = sext i16 %50 to i32
  %52 = icmp sgt i32 %38, %51
  %53 = icmp slt i32 %40, %51
  %54 = select i1 %53, i32 %40, i32 %51
  %55 = select i1 %52, i32 %38, i32 %54
  %56 = trunc i32 %55 to i16
  store i16 %56, i16* %49, align 2
  %57 = shl i32 %55, 16
  %58 = ashr exact i32 %57, 16
  store i32 0, i32* %6, align 4
  %59 = getelementptr inbounds %struct.mv, %struct.mv* %3, i64 0, i32 0
  store i16 %56, i16* %59, align 2
  %60 = getelementptr inbounds %struct.mv, %struct.mv* %3, i64 0, i32 1
  store i16 %48, i16* %60, align 2
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = mul nsw i32 %58, %17
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = sext i16 %48 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %7, i64 0, i32 0
  %69 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %68, align 8
  %70 = tail call i32 %69(i8* %13, i32 %15, i8* %67, i32 %17) #8
  %71 = load i16, i16* %59, align 2
  %72 = sub i16 %71, %29
  %73 = load i16, i16* %60, align 2
  %74 = sub i16 %73, %32
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %76 = icmp eq i16 %72, 0
  %77 = icmp eq i16 %74, 0
  %78 = xor i1 %77, true
  %79 = zext i1 %78 to i64
  %80 = select i1 %77, i64 2, i64 3
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %75, align 8
  %85 = sext i16 %72 to i64
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, %83
  %89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %90 = load i32*, i32** %89, align 8
  %91 = sext i16 %74 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = add nsw i32 %88, %93
  %95 = mul i32 %94, %5
  %96 = add i32 %95, 256
  %97 = lshr i32 %96, 9
  %98 = add i32 %97, %70
  %99 = icmp sgt i32 %26, 0
  br i1 %99, label %100, label %340

100:                                              ; preds = %9
  %101 = bitcast [4 x i32]* %10 to i8*
  %102 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 0
  %103 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 1
  %104 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 2
  %105 = getelementptr inbounds [4 x i32], [4 x i32]* %10, i64 0, i64 3
  %106 = bitcast [4 x i8*]* %11 to i8*
  %107 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 0
  %108 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 1
  %109 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 2
  %110 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 3
  %111 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %7, i64 0, i32 5
  %112 = bitcast [4 x i32]* %10 to i8*
  br label %113

113:                                              ; preds = %337, %100
  %114 = phi i16 [ %73, %100 ], [ %339, %337 ]
  %115 = phi i16 [ %71, %100 ], [ %338, %337 ]
  %116 = phi i32 [ 0, %100 ], [ %312, %337 ]
  %117 = phi i32 [ 0, %100 ], [ %335, %337 ]
  %118 = phi i32 [ -1, %100 ], [ %334, %337 ]
  %119 = phi i32 [ -1, %100 ], [ %311, %337 ]
  %120 = phi i32 [ %98, %100 ], [ %310, %337 ]
  %121 = phi i8* [ %67, %100 ], [ %333, %337 ]
  %122 = sext i16 %115 to i32
  %123 = sext i32 %116 to i64
  %124 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %123, i32 0
  %125 = load i16, i16* %124, align 2
  %126 = sext i16 %125 to i32
  %127 = add nsw i32 %126, %122
  %128 = load i32, i32* %37, align 8
  %129 = icmp sgt i32 %127, %128
  %130 = add nsw i32 %116, 1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %131, i32 0
  %133 = load i16, i16* %132, align 2
  %134 = sext i16 %133 to i32
  %135 = add nsw i32 %134, %122
  %136 = load i32, i32* %39, align 4
  %137 = icmp slt i32 %135, %136
  %138 = and i1 %129, %137
  %139 = sext i16 %114 to i32
  %140 = add nsw i32 %116, 2
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %141, i32 1
  %143 = load i16, i16* %142, align 2
  %144 = sext i16 %143 to i32
  %145 = add nsw i32 %144, %139
  %146 = load i32, i32* %33, align 16
  %147 = icmp sgt i32 %145, %146
  %148 = and i1 %138, %147
  %149 = add nsw i32 %116, 3
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %150, i32 1
  %152 = load i16, i16* %151, align 2
  %153 = sext i16 %152 to i32
  %154 = add nsw i32 %153, %139
  %155 = load i32, i32* %35, align 4
  %156 = icmp slt i32 %154, %155
  %157 = and i1 %148, %156
  br i1 %157, label %161, label %158

158:                                              ; preds = %113
  %159 = load i32, i32* %18, align 8
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %233, label %309

161:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %112, i8 -86, i64 16, i1 false)
  %162 = load i32, i32* %18, align 8
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %229

164:                                              ; preds = %161, %465
  %165 = phi i32 [ %468, %465 ], [ %116, %161 ]
  %166 = phi i32 [ %469, %465 ], [ 0, %161 ]
  %167 = phi i32 [ %467, %465 ], [ %119, %161 ]
  %168 = phi i32 [ %466, %465 ], [ %120, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #8
  %169 = sext i32 %165 to i64
  %170 = getelementptr inbounds i64, i64* %23, i64 %169
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds i8, i8* %121, i64 %171
  store i8* %172, i8** %107, align 16
  %173 = add nsw i64 %169, 1
  %174 = getelementptr inbounds i64, i64* %23, i64 %173
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds i8, i8* %121, i64 %175
  store i8* %176, i8** %108, align 8
  %177 = add nsw i64 %169, 2
  %178 = getelementptr inbounds i64, i64* %23, i64 %177
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %121, i64 %179
  store i8* %180, i8** %109, align 16
  %181 = add nsw i64 %169, 3
  %182 = getelementptr inbounds i64, i64* %23, i64 %181
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds i8, i8* %121, i64 %183
  store i8* %184, i8** %110, align 8
  %185 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %111, align 8
  call void %185(i8* %13, i32 %15, i8** nonnull %107, i32 %17, i32* nonnull %102) #8
  %186 = load i32, i32* %102, align 16
  %187 = icmp ult i32 %186, %168
  br i1 %187, label %188, label %224

188:                                              ; preds = %164
  %189 = load i16, i16* %59, align 2
  %190 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %169, i32 0
  %191 = load i16, i16* %190, align 2
  %192 = load i16, i16* %60, align 2
  %193 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %169, i32 1
  %194 = load i16, i16* %193, align 2
  %195 = sub i16 %189, %29
  %196 = add i16 %195, %191
  %197 = sub i16 %192, %32
  %198 = add i16 %197, %194
  %199 = icmp eq i16 %196, 0
  %200 = icmp eq i16 %198, 0
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i64
  %203 = select i1 %200, i64 2, i64 3
  %204 = select i1 %199, i64 %202, i64 %203
  %205 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %75, align 8
  %208 = sext i16 %196 to i64
  %209 = getelementptr inbounds i32, i32* %207, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = add nsw i32 %210, %206
  %212 = load i32*, i32** %89, align 8
  %213 = sext i16 %198 to i64
  %214 = getelementptr inbounds i32, i32* %212, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %211, %215
  %217 = mul i32 %216, %5
  %218 = add i32 %217, 256
  %219 = lshr i32 %218, 9
  %220 = add i32 %219, %186
  store i32 %220, i32* %102, align 16
  %221 = icmp ult i32 %220, %168
  %222 = select i1 %221, i32 %220, i32 %168
  %223 = select i1 %221, i32 %165, i32 %167
  br label %224

224:                                              ; preds = %164, %188
  %225 = phi i32 [ %222, %188 ], [ %168, %164 ]
  %226 = phi i32 [ %223, %188 ], [ %167, %164 ]
  %227 = load i32, i32* %103, align 4
  %228 = icmp ult i32 %227, %225
  br i1 %228, label %342, label %379

229:                                              ; preds = %465, %161
  %230 = phi i32 [ %120, %161 ], [ %466, %465 ]
  %231 = phi i32 [ %119, %161 ], [ %467, %465 ]
  %232 = phi i32 [ %116, %161 ], [ %468, %465 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #8
  br label %309

233:                                              ; preds = %158, %301
  %234 = phi i32 [ %306, %301 ], [ %146, %158 ]
  %235 = phi i16 [ %305, %301 ], [ %114, %158 ]
  %236 = phi i16 [ %304, %301 ], [ %125, %158 ]
  %237 = phi i16 [ %302, %301 ], [ %115, %158 ]
  %238 = phi i64 [ %297, %301 ], [ %123, %158 ]
  %239 = phi i32 [ %298, %301 ], [ 0, %158 ]
  %240 = phi i32 [ %296, %301 ], [ %119, %158 ]
  %241 = phi i32 [ %295, %301 ], [ %120, %158 ]
  %242 = add i16 %236, %237
  %243 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %238, i32 1
  %244 = load i16, i16* %243, align 2
  %245 = add i16 %244, %235
  %246 = sext i16 %245 to i32
  %247 = icmp sgt i32 %234, %246
  br i1 %247, label %294, label %248

248:                                              ; preds = %233
  %249 = load i32, i32* %35, align 4
  %250 = icmp slt i32 %249, %246
  br i1 %250, label %294, label %251

251:                                              ; preds = %248
  %252 = sext i16 %242 to i32
  %253 = load i32, i32* %37, align 4
  %254 = icmp sgt i32 %253, %252
  br i1 %254, label %294, label %255

255:                                              ; preds = %251
  %256 = load i32, i32* %39, align 4
  %257 = icmp slt i32 %256, %252
  br i1 %257, label %294, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds i64, i64* %23, i64 %238
  %260 = load i64, i64* %259, align 8
  %261 = getelementptr inbounds i8, i8* %121, i64 %260
  %262 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %68, align 8
  %263 = call i32 %262(i8* %13, i32 %15, i8* %261, i32 %17) #8
  %264 = icmp ult i32 %263, %241
  br i1 %264, label %265, label %294

265:                                              ; preds = %258
  %266 = sub i16 %242, %29
  %267 = sub i16 %245, %32
  %268 = icmp eq i16 %266, 0
  %269 = icmp eq i16 %267, 0
  %270 = xor i1 %269, true
  %271 = zext i1 %270 to i64
  %272 = select i1 %269, i64 2, i64 3
  %273 = select i1 %268, i64 %271, i64 %272
  %274 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = load i32*, i32** %75, align 8
  %277 = sext i16 %266 to i64
  %278 = getelementptr inbounds i32, i32* %276, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = add nsw i32 %279, %275
  %281 = load i32*, i32** %89, align 8
  %282 = sext i16 %267 to i64
  %283 = getelementptr inbounds i32, i32* %281, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = add nsw i32 %280, %284
  %286 = mul i32 %285, %5
  %287 = add i32 %286, 256
  %288 = lshr i32 %287, 9
  %289 = add i32 %288, %263
  %290 = icmp ult i32 %289, %241
  %291 = select i1 %290, i32 %289, i32 %241
  %292 = trunc i64 %238 to i32
  %293 = select i1 %290, i32 %292, i32 %240
  br label %294

294:                                              ; preds = %233, %248, %251, %265, %258, %255
  %295 = phi i32 [ %241, %255 ], [ %241, %258 ], [ %291, %265 ], [ %241, %251 ], [ %241, %248 ], [ %241, %233 ]
  %296 = phi i32 [ %240, %255 ], [ %240, %258 ], [ %293, %265 ], [ %240, %251 ], [ %240, %248 ], [ %240, %233 ]
  %297 = add nsw i64 %238, 1
  %298 = add nuw nsw i32 %239, 1
  %299 = load i32, i32* %18, align 8
  %300 = icmp slt i32 %298, %299
  br i1 %300, label %301, label %307

301:                                              ; preds = %294
  %302 = load i16, i16* %59, align 2
  %303 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %297, i32 0
  %304 = load i16, i16* %303, align 2
  %305 = load i16, i16* %60, align 2
  %306 = load i32, i32* %33, align 4
  br label %233

307:                                              ; preds = %294
  %308 = trunc i64 %297 to i32
  br label %309

309:                                              ; preds = %307, %158, %229
  %310 = phi i32 [ %230, %229 ], [ %120, %158 ], [ %295, %307 ]
  %311 = phi i32 [ %231, %229 ], [ %119, %158 ], [ %296, %307 ]
  %312 = phi i32 [ %232, %229 ], [ %116, %158 ], [ %308, %307 ]
  %313 = icmp eq i32 %311, %118
  br i1 %313, label %327, label %314

314:                                              ; preds = %309
  %315 = sext i32 %311 to i64
  %316 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %315, i32 0
  %317 = load i16, i16* %316, align 2
  %318 = load i16, i16* %59, align 2
  %319 = add i16 %318, %317
  store i16 %319, i16* %59, align 2
  %320 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %315, i32 1
  %321 = load i16, i16* %320, align 2
  %322 = load i16, i16* %60, align 2
  %323 = add i16 %322, %321
  store i16 %323, i16* %60, align 2
  %324 = getelementptr inbounds i64, i64* %23, i64 %315
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds i8, i8* %121, i64 %325
  br label %332

327:                                              ; preds = %309
  %328 = icmp eq i8* %121, %67
  br i1 %328, label %329, label %332

329:                                              ; preds = %327
  %330 = load i32, i32* %6, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %6, align 4
  br label %332

332:                                              ; preds = %327, %329, %314
  %333 = phi i8* [ %326, %314 ], [ %67, %329 ], [ %121, %327 ]
  %334 = phi i32 [ %311, %314 ], [ %118, %329 ], [ %118, %327 ]
  %335 = add nuw nsw i32 %117, 1
  %336 = icmp eq i32 %335, %26
  br i1 %336, label %340, label %337

337:                                              ; preds = %332
  %338 = load i16, i16* %59, align 2
  %339 = load i16, i16* %60, align 2
  br label %113

340:                                              ; preds = %332, %9
  %341 = phi i32 [ %98, %9 ], [ %310, %332 ]
  ret i32 %341

342:                                              ; preds = %224
  %343 = load i16, i16* %59, align 2
  %344 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %173, i32 0
  %345 = load i16, i16* %344, align 2
  %346 = load i16, i16* %60, align 2
  %347 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %173, i32 1
  %348 = load i16, i16* %347, align 2
  %349 = sub i16 %343, %29
  %350 = add i16 %349, %345
  %351 = sub i16 %346, %32
  %352 = add i16 %351, %348
  %353 = icmp eq i16 %350, 0
  %354 = icmp eq i16 %352, 0
  %355 = xor i1 %354, true
  %356 = zext i1 %355 to i64
  %357 = select i1 %354, i64 2, i64 3
  %358 = select i1 %353, i64 %356, i64 %357
  %359 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %358
  %360 = load i32, i32* %359, align 4
  %361 = load i32*, i32** %75, align 8
  %362 = sext i16 %350 to i64
  %363 = getelementptr inbounds i32, i32* %361, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = add nsw i32 %364, %360
  %366 = load i32*, i32** %89, align 8
  %367 = sext i16 %352 to i64
  %368 = getelementptr inbounds i32, i32* %366, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = add nsw i32 %365, %369
  %371 = mul i32 %370, %5
  %372 = add i32 %371, 256
  %373 = lshr i32 %372, 9
  %374 = add i32 %373, %227
  store i32 %374, i32* %103, align 4
  %375 = icmp ult i32 %374, %225
  %376 = select i1 %375, i32 %374, i32 %225
  %377 = trunc i64 %173 to i32
  %378 = select i1 %375, i32 %377, i32 %226
  br label %379

379:                                              ; preds = %342, %224
  %380 = phi i32 [ %376, %342 ], [ %225, %224 ]
  %381 = phi i32 [ %378, %342 ], [ %226, %224 ]
  %382 = add nsw i64 %169, 2
  %383 = load i32, i32* %104, align 8
  %384 = icmp ult i32 %383, %380
  br i1 %384, label %385, label %422

385:                                              ; preds = %379
  %386 = load i16, i16* %59, align 2
  %387 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %382, i32 0
  %388 = load i16, i16* %387, align 2
  %389 = load i16, i16* %60, align 2
  %390 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %382, i32 1
  %391 = load i16, i16* %390, align 2
  %392 = sub i16 %386, %29
  %393 = add i16 %392, %388
  %394 = sub i16 %389, %32
  %395 = add i16 %394, %391
  %396 = icmp eq i16 %393, 0
  %397 = icmp eq i16 %395, 0
  %398 = xor i1 %397, true
  %399 = zext i1 %398 to i64
  %400 = select i1 %397, i64 2, i64 3
  %401 = select i1 %396, i64 %399, i64 %400
  %402 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = load i32*, i32** %75, align 8
  %405 = sext i16 %393 to i64
  %406 = getelementptr inbounds i32, i32* %404, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = add nsw i32 %407, %403
  %409 = load i32*, i32** %89, align 8
  %410 = sext i16 %395 to i64
  %411 = getelementptr inbounds i32, i32* %409, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = add nsw i32 %408, %412
  %414 = mul i32 %413, %5
  %415 = add i32 %414, 256
  %416 = lshr i32 %415, 9
  %417 = add i32 %416, %383
  store i32 %417, i32* %104, align 8
  %418 = icmp ult i32 %417, %380
  %419 = select i1 %418, i32 %417, i32 %380
  %420 = trunc i64 %382 to i32
  %421 = select i1 %418, i32 %420, i32 %381
  br label %422

422:                                              ; preds = %385, %379
  %423 = phi i32 [ %419, %385 ], [ %380, %379 ]
  %424 = phi i32 [ %421, %385 ], [ %381, %379 ]
  %425 = add nsw i64 %169, 3
  %426 = load i32, i32* %105, align 4
  %427 = icmp ult i32 %426, %423
  br i1 %427, label %428, label %465

428:                                              ; preds = %422
  %429 = load i16, i16* %59, align 2
  %430 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %425, i32 0
  %431 = load i16, i16* %430, align 2
  %432 = load i16, i16* %60, align 2
  %433 = getelementptr inbounds %struct.mv, %struct.mv* %22, i64 %425, i32 1
  %434 = load i16, i16* %433, align 2
  %435 = sub i16 %429, %29
  %436 = add i16 %435, %431
  %437 = sub i16 %432, %32
  %438 = add i16 %437, %434
  %439 = icmp eq i16 %436, 0
  %440 = icmp eq i16 %438, 0
  %441 = xor i1 %440, true
  %442 = zext i1 %441 to i64
  %443 = select i1 %440, i64 2, i64 3
  %444 = select i1 %439, i64 %442, i64 %443
  %445 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %444
  %446 = load i32, i32* %445, align 4
  %447 = load i32*, i32** %75, align 8
  %448 = sext i16 %436 to i64
  %449 = getelementptr inbounds i32, i32* %447, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = add nsw i32 %450, %446
  %452 = load i32*, i32** %89, align 8
  %453 = sext i16 %438 to i64
  %454 = getelementptr inbounds i32, i32* %452, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = add nsw i32 %451, %455
  %457 = mul i32 %456, %5
  %458 = add i32 %457, 256
  %459 = lshr i32 %458, 9
  %460 = add i32 %459, %426
  store i32 %460, i32* %105, align 4
  %461 = icmp ult i32 %460, %423
  %462 = select i1 %461, i32 %460, i32 %423
  %463 = trunc i64 %425 to i32
  %464 = select i1 %461, i32 %463, i32 %424
  br label %465

465:                                              ; preds = %428, %422
  %466 = phi i32 [ %462, %428 ], [ %423, %422 ]
  %467 = phi i32 [ %464, %428 ], [ %424, %422 ]
  %468 = add i32 %165, 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #8
  %469 = add nuw nsw i32 %166, 4
  %470 = load i32, i32* %18, align 8
  %471 = icmp slt i32 %469, %470
  br i1 %471, label %164, label %229
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_int_pro_motion_estimation(%struct.VP9_COMP*, %struct.macroblock*, i8 zeroext, i32, i32, %struct.mv* nocapture readonly) local_unnamed_addr #5 {
  %7 = alloca [3 x %struct.buf_2d], align 16
  %8 = alloca [128 x i16], align 16
  %9 = alloca [128 x i16], align 16
  %10 = alloca [64 x i16], align 16
  %11 = alloca [64 x i16], align 16
  %12 = alloca [4 x i32], align 16
  %13 = alloca [4 x i8*], align 16
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 6
  %15 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %14, align 8
  %16 = load %struct.MODE_INFO*, %struct.MODE_INFO** %15, align 8
  %17 = bitcast [3 x %struct.buf_2d]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 48, i1 false)
  %18 = bitcast [128 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 256, i1 false)
  %19 = bitcast [128 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 256, i1 false)
  %20 = bitcast [64 x i16]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 128, i1 false)
  %21 = bitcast [64 x i16]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 128, i1 false)
  %22 = zext i8 %2 to i64
  %23 = getelementptr inbounds [13 x i8], [13 x i8]* @b_width_log2_lookup, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 4, %25
  %27 = getelementptr inbounds [13 x i8], [13 x i8]* @b_height_log2_lookup, i64 0, i64 %22
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 4, %29
  %31 = shl i32 %26, 1
  %32 = shl i32 %30, 1
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = load %struct.MODE_INFO*, %struct.MODE_INFO** %15, align 8
  %40 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %39, i64 0, i32 9, i64 0
  %41 = bitcast %union.int_mv* %40 to %struct.mv*
  %42 = bitcast [4 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  %43 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 0
  %44 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 1
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 2
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 3
  %47 = ashr i32 %26, 5
  %48 = add nsw i32 %47, 3
  %49 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %16, i64 0, i32 8, i64 0
  %50 = bitcast [4 x i32]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %50, i8 -86, i64 16, i1 false)
  %51 = load i8, i8* %49, align 4
  %52 = sext i8 %51 to i32
  %53 = tail call %struct.yv12_buffer_config* @vp9_get_scaled_ref_frame(%struct.VP9_COMP* %0, i32 %52) #8
  %54 = icmp ne %struct.yv12_buffer_config* %53, null
  br i1 %54, label %55, label %67

55:                                               ; preds = %6
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1
  %57 = bitcast [3 x %struct.buf_2d]* %7 to i8*
  %58 = bitcast %struct.buf_2d* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %57, i8* align 8 %58, i64 16, i1 false)
  %59 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 1
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 1, i32 4, i64 0
  %61 = bitcast %struct.buf_2d* %59 to i8*
  %62 = bitcast %struct.buf_2d* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %61, i8* align 8 %62, i64 16, i1 false)
  %63 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 2
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 2, i32 4, i64 0
  %65 = bitcast %struct.buf_2d* %63 to i8*
  %66 = bitcast %struct.buf_2d* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %65, i8* align 8 %66, i64 16, i1 false)
  tail call void @vp9_setup_pre_planes(%struct.macroblockd* %56, i32 0, %struct.yv12_buffer_config* nonnull %53, i32 %3, i32 %4, %struct.scale_factors* null) #8
  br label %67

67:                                               ; preds = %55, %6
  %68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 23
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %92, label %71

71:                                               ; preds = %67
  %72 = bitcast %union.int_mv* %40 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds %struct.mv, %struct.mv* %41, i64 0, i32 1
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %22, i32 0
  %75 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %74, align 8
  %76 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %33, i64 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %36, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = tail call i32 %75(i8* %77, i32 %35, i8* %79, i32 %38) #8
  br i1 %54, label %81, label %276

81:                                               ; preds = %71
  %82 = bitcast %struct.buf_2d* %36 to i8*
  %83 = bitcast [3 x %struct.buf_2d]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 16 %83, i64 16, i1 false)
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 1, i32 4, i64 0
  %85 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 1
  %86 = bitcast %struct.buf_2d* %84 to i8*
  %87 = bitcast %struct.buf_2d* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 16 %87, i64 16, i1 false)
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 2, i32 4, i64 0
  %89 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 2
  %90 = bitcast %struct.buf_2d* %88 to i8*
  %91 = bitcast %struct.buf_2d* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 16 %91, i64 16, i1 false)
  br label %276

92:                                               ; preds = %67
  %93 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %36, i64 0, i32 0
  %94 = icmp sgt i32 %31, 0
  br i1 %94, label %95, label %109

95:                                               ; preds = %92
  %96 = load i8*, i8** %93, align 8
  %97 = ashr i32 %26, 1
  %98 = sub nsw i32 0, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  br label %101

101:                                              ; preds = %95, %101
  %102 = phi i64 [ 0, %95 ], [ %106, %101 ]
  %103 = phi i8* [ %100, %95 ], [ %105, %101 ]
  %104 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 %102
  call void @vpx_int_pro_row_sse2(i16* %104, i8* %103, i32 %38, i32 %30) #8
  %105 = getelementptr inbounds i8, i8* %103, i64 16
  %106 = add nuw i64 %102, 16
  %107 = trunc i64 %106 to i32
  %108 = icmp sgt i32 %31, %107
  br i1 %108, label %101, label %109

109:                                              ; preds = %101, %92
  %110 = icmp sgt i32 %32, 0
  br i1 %110, label %111, label %120

111:                                              ; preds = %109
  %112 = load i8*, i8** %93, align 8
  %113 = ashr i32 %30, 1
  %114 = mul nsw i32 %113, %38
  %115 = sext i32 %114 to i64
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds i8, i8* %112, i64 %116
  %118 = sext i32 %38 to i64
  %119 = zext i32 %32 to i64
  br label %124

120:                                              ; preds = %124, %109
  %121 = icmp sgt i32 %26, 0
  %122 = getelementptr inbounds %struct.buf_2d, %struct.buf_2d* %33, i64 0, i32 0
  %123 = load i8*, i8** %122, align 8
  br i1 %121, label %141, label %135

124:                                              ; preds = %124, %111
  %125 = phi i64 [ 0, %111 ], [ %133, %124 ]
  %126 = phi i8* [ %117, %111 ], [ %132, %124 ]
  %127 = call signext i16 @vpx_int_pro_col_sse2(i8* %126, i32 %26) #8
  %128 = sext i16 %127 to i32
  %129 = ashr i32 %128, %48
  %130 = trunc i32 %129 to i16
  %131 = getelementptr inbounds [128 x i16], [128 x i16]* %9, i64 0, i64 %125
  store i16 %130, i16* %131, align 2
  %132 = getelementptr inbounds i8, i8* %126, i64 %118
  %133 = add nuw nsw i64 %125, 1
  %134 = icmp eq i64 %133, %119
  br i1 %134, label %120, label %124

135:                                              ; preds = %141, %120
  %136 = phi i8* [ %123, %120 ], [ %149, %141 ]
  %137 = icmp sgt i32 %30, 0
  br i1 %137, label %138, label %161

138:                                              ; preds = %135
  %139 = sext i32 %35 to i64
  %140 = zext i32 %30 to i64
  br label %150

141:                                              ; preds = %120, %141
  %142 = phi i64 [ %146, %141 ], [ 0, %120 ]
  %143 = phi i8* [ %149, %141 ], [ %123, %120 ]
  %144 = getelementptr inbounds i8, i8* %143, i64 %142
  %145 = getelementptr inbounds [64 x i16], [64 x i16]* %10, i64 0, i64 %142
  call void @vpx_int_pro_row_sse2(i16* %145, i8* %144, i32 %35, i32 %30) #8
  %146 = add nuw i64 %142, 16
  %147 = trunc i64 %146 to i32
  %148 = icmp sgt i32 %26, %147
  %149 = load i8*, i8** %122, align 8
  br i1 %148, label %141, label %135

150:                                              ; preds = %150, %138
  %151 = phi i64 [ 0, %138 ], [ %159, %150 ]
  %152 = phi i8* [ %136, %138 ], [ %158, %150 ]
  %153 = call signext i16 @vpx_int_pro_col_sse2(i8* %152, i32 %26) #8
  %154 = sext i16 %153 to i32
  %155 = ashr i32 %154, %48
  %156 = trunc i32 %155 to i16
  %157 = getelementptr inbounds [64 x i16], [64 x i16]* %11, i64 0, i64 %151
  store i16 %156, i16* %157, align 2
  %158 = getelementptr inbounds i8, i8* %152, i64 %139
  %159 = add nuw nsw i64 %151, 1
  %160 = icmp eq i64 %159, %140
  br i1 %160, label %161, label %150

161:                                              ; preds = %150, %135
  %162 = getelementptr inbounds [128 x i16], [128 x i16]* %8, i64 0, i64 0
  %163 = getelementptr inbounds [64 x i16], [64 x i16]* %10, i64 0, i64 0
  %164 = call fastcc i32 @vector_match(i16* nonnull %162, i16* nonnull %163, i32 %25)
  %165 = trunc i32 %164 to i16
  %166 = getelementptr inbounds %struct.mv, %struct.mv* %41, i64 0, i32 1
  store i16 %165, i16* %166, align 2
  %167 = getelementptr inbounds [128 x i16], [128 x i16]* %9, i64 0, i64 0
  %168 = getelementptr inbounds [64 x i16], [64 x i16]* %11, i64 0, i64 0
  %169 = call fastcc i32 @vector_match(i16* nonnull %167, i16* nonnull %168, i32 %29)
  %170 = trunc i32 %169 to i16
  %171 = bitcast %union.int_mv* %40 to i16*
  store i16 %170, i16* %171, align 2
  %172 = load i16, i16* %166, align 2
  %173 = load i8*, i8** %122, align 8
  %174 = load i8*, i8** %93, align 8
  %175 = shl i32 %169, 16
  %176 = ashr exact i32 %175, 16
  %177 = mul nsw i32 %176, %38
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %174, i64 %178
  %180 = sext i16 %172 to i64
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  %182 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %22, i32 0
  %183 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %182, align 8
  %184 = call i32 %183(i8* %173, i32 %35, i8* %181, i32 %38) #8
  %185 = bitcast [4 x i8*]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #8
  %186 = getelementptr inbounds [4 x i8*], [4 x i8*]* %13, i64 0, i64 0
  %187 = getelementptr inbounds [4 x i8*], [4 x i8*]* %13, i64 0, i64 1
  %188 = getelementptr inbounds [4 x i8*], [4 x i8*]* %13, i64 0, i64 3
  %189 = sext i32 %38 to i64
  %190 = sub nsw i64 0, %189
  %191 = getelementptr inbounds i8, i8* %181, i64 %190
  store i8* %191, i8** %186, align 16
  %192 = insertelement <2 x i8*> undef, i8* %181, i32 0
  %193 = shufflevector <2 x i8*> %192, <2 x i8*> undef, <2 x i32> zeroinitializer
  %194 = getelementptr i8, <2 x i8*> %193, <2 x i64> <i64 -1, i64 1>
  %195 = bitcast i8** %187 to <2 x i8*>*
  store <2 x i8*> %194, <2 x i8*>* %195, align 8
  %196 = getelementptr inbounds i8, i8* %181, i64 %189
  store i8* %196, i8** %188, align 8
  %197 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %22, i32 5
  %198 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %197, align 8
  call void %198(i8* %173, i32 %35, i8** nonnull %186, i32 %38, i32* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #8
  %199 = trunc i32 %176 to i16
  %200 = load i32, i32* %43, align 16
  %201 = icmp ult i32 %200, %184
  br i1 %201, label %202, label %204

202:                                              ; preds = %161
  %203 = add i16 %199, -1
  store i16 %203, i16* %171, align 2
  store i16 %172, i16* %166, align 2
  br label %204

204:                                              ; preds = %161, %202
  %205 = phi i32 [ %200, %202 ], [ %184, %161 ]
  %206 = load i32, i32* %44, align 4
  %207 = icmp ult i32 %206, %205
  br i1 %207, label %278, label %280

208:                                              ; preds = %293
  store i16 %298, i16* %171, align 2
  store i16 %301, i16* %166, align 2
  br label %209

209:                                              ; preds = %312, %208
  %210 = phi i16 [ %301, %208 ], [ %314, %312 ]
  %211 = phi i16 [ %298, %208 ], [ %313, %312 ]
  %212 = phi i32 [ %310, %208 ], [ %295, %312 ]
  %213 = shl i16 %211, 3
  store i16 %213, i16* %171, align 2
  %214 = shl i16 %210, 3
  store i16 %214, i16* %166, align 2
  %215 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 36, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = shl nsw i32 %216, 3
  %218 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 1
  %219 = load i16, i16* %218, align 2
  %220 = sext i16 %219 to i32
  %221 = add nsw i32 %220, -8184
  %222 = icmp sgt i32 %217, %221
  %223 = select i1 %222, i32 %217, i32 %221
  %224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 36, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = shl nsw i32 %225, 3
  %227 = add nsw i32 %220, 8184
  %228 = icmp slt i32 %226, %227
  %229 = select i1 %228, i32 %226, i32 %227
  %230 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 36, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = shl nsw i32 %231, 3
  %233 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 0
  %234 = load i16, i16* %233, align 2
  %235 = sext i16 %234 to i32
  %236 = add nsw i32 %235, -8184
  %237 = icmp sgt i32 %232, %236
  %238 = select i1 %237, i32 %232, i32 %236
  %239 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 36, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = shl nsw i32 %240, 3
  %242 = add nsw i32 %235, 8184
  %243 = icmp slt i32 %241, %242
  %244 = select i1 %243, i32 %241, i32 %242
  %245 = icmp sgt i32 %223, -16383
  %246 = select i1 %245, i32 %223, i32 -16383
  %247 = icmp slt i32 %229, 16382
  %248 = select i1 %247, i32 %229, i32 16382
  %249 = icmp sgt i32 %238, -16383
  %250 = select i1 %249, i32 %238, i32 -16383
  %251 = icmp slt i32 %244, 16382
  %252 = select i1 %251, i32 %244, i32 16382
  %253 = sext i16 %214 to i32
  %254 = icmp sgt i32 %246, %253
  %255 = icmp slt i32 %248, %253
  %256 = select i1 %255, i32 %248, i32 %253
  %257 = select i1 %254, i32 %246, i32 %256
  %258 = trunc i32 %257 to i16
  store i16 %258, i16* %166, align 2
  %259 = sext i16 %213 to i32
  %260 = icmp sgt i32 %250, %259
  %261 = icmp slt i32 %252, %259
  %262 = select i1 %261, i32 %252, i32 %259
  %263 = select i1 %260, i32 %250, i32 %262
  %264 = trunc i32 %263 to i16
  store i16 %264, i16* %171, align 2
  br i1 %54, label %265, label %276

265:                                              ; preds = %209
  %266 = bitcast %struct.buf_2d* %36 to i8*
  %267 = bitcast [3 x %struct.buf_2d]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* nonnull align 16 %267, i64 16, i1 false)
  %268 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 1, i32 4, i64 0
  %269 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 1
  %270 = bitcast %struct.buf_2d* %268 to i8*
  %271 = bitcast %struct.buf_2d* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 16 %271, i64 16, i1 false)
  %272 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 2, i32 4, i64 0
  %273 = getelementptr inbounds [3 x %struct.buf_2d], [3 x %struct.buf_2d]* %7, i64 0, i64 2
  %274 = bitcast %struct.buf_2d* %272 to i8*
  %275 = bitcast %struct.buf_2d* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 16 %275, i64 16, i1 false)
  br label %276

276:                                              ; preds = %81, %265, %209, %71
  %277 = phi i32 [ %80, %71 ], [ %212, %209 ], [ %212, %265 ], [ %80, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #8
  ret i32 %277

278:                                              ; preds = %204
  store i16 %199, i16* %171, align 2
  %279 = add i16 %172, -1
  store i16 %279, i16* %166, align 2
  br label %280

280:                                              ; preds = %278, %204
  %281 = phi i32 [ %206, %278 ], [ %205, %204 ]
  %282 = load i32, i32* %45, align 8
  %283 = icmp ult i32 %282, %281
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  store i16 %199, i16* %171, align 2
  %285 = add i16 %172, 1
  store i16 %285, i16* %166, align 2
  br label %286

286:                                              ; preds = %284, %280
  %287 = phi i32 [ %282, %284 ], [ %281, %280 ]
  %288 = load i32, i32* %46, align 4
  %289 = icmp ult i32 %288, %287
  br i1 %289, label %290, label %293

290:                                              ; preds = %286
  %291 = add i16 %199, 1
  store i16 %291, i16* %171, align 2
  store i16 %172, i16* %166, align 2
  %292 = load i32, i32* %46, align 4
  br label %293

293:                                              ; preds = %290, %286
  %294 = phi i32 [ %292, %290 ], [ %288, %286 ]
  %295 = phi i32 [ %288, %290 ], [ %287, %286 ]
  %296 = icmp ult i32 %200, %294
  %297 = select i1 %296, i16 -1, i16 1
  %298 = add i16 %297, %199
  %299 = icmp ult i32 %206, %282
  %300 = select i1 %299, i16 -1, i16 1
  %301 = add i16 %300, %172
  %302 = load i8*, i8** %93, align 8
  %303 = sext i16 %298 to i32
  %304 = mul nsw i32 %38, %303
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  %307 = sext i16 %301 to i64
  %308 = getelementptr inbounds i8, i8* %306, i64 %307
  %309 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %182, align 8
  %310 = call i32 %309(i8* %173, i32 %35, i8* %308, i32 %38) #8
  %311 = icmp ugt i32 %295, %310
  br i1 %311, label %208, label %312

312:                                              ; preds = %293
  %313 = load i16, i16* %171, align 2
  %314 = load i16, i16* %166, align 2
  br label %209
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.yv12_buffer_config* @vp9_get_scaled_ref_frame(%struct.VP9_COMP*, i32) local_unnamed_addr #6

declare void @vp9_setup_pre_planes(%struct.macroblockd*, i32, %struct.yv12_buffer_config*, i32, i32, %struct.scale_factors*) local_unnamed_addr #6

declare void @vpx_int_pro_row_sse2(i16*, i8*, i32, i32) local_unnamed_addr #6

declare signext i16 @vpx_int_pro_col_sse2(i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @vector_match(i16*, i16*, i32) unnamed_addr #5 {
  %4 = shl i32 4, %2
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %3
  %7 = sext i32 %4 to i64
  br label %35

8:                                                ; preds = %15
  %9 = sext i32 %24 to i64
  %10 = sext i32 %4 to i64
  %11 = add nsw i64 %9, -8
  %12 = icmp slt i64 %11, 0
  %13 = icmp sgt i64 %11, %10
  %14 = or i1 %12, %13
  br i1 %14, label %35, label %28

15:                                               ; preds = %3, %15
  %16 = phi i64 [ %25, %15 ], [ 0, %3 ]
  %17 = phi i32 [ %24, %15 ], [ 0, %3 ]
  %18 = phi i32 [ %22, %15 ], [ 2147483647, %3 ]
  %19 = getelementptr inbounds i16, i16* %0, i64 %16
  %20 = tail call i32 @vpx_vector_var_sse2(i16* %19, i16* %1, i32 %2) #8
  %21 = icmp slt i32 %20, %18
  %22 = select i1 %21, i32 %20, i32 %18
  %23 = trunc i64 %16 to i32
  %24 = select i1 %21, i32 %23, i32 %17
  %25 = add nuw i64 %16, 16
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %4, %26
  br i1 %27, label %8, label %15

28:                                               ; preds = %8
  %29 = getelementptr inbounds i16, i16* %0, i64 %11
  %30 = tail call i32 @vpx_vector_var_sse2(i16* %29, i16* %1, i32 %2) #8
  %31 = icmp slt i32 %30, %22
  %32 = select i1 %31, i32 %30, i32 %22
  %33 = trunc i64 %11 to i32
  %34 = select i1 %31, i32 %33, i32 %24
  br label %35

35:                                               ; preds = %6, %8, %28
  %36 = phi i64 [ %10, %28 ], [ %10, %8 ], [ %7, %6 ]
  %37 = phi i64 [ %9, %28 ], [ %9, %8 ], [ 0, %6 ]
  %38 = phi i32 [ %32, %28 ], [ %22, %8 ], [ 2147483647, %6 ]
  %39 = phi i32 [ %34, %28 ], [ %24, %8 ], [ 0, %6 ]
  %40 = add nsw i64 %37, 8
  %41 = icmp slt i64 %40, 0
  %42 = icmp sgt i64 %40, %36
  %43 = or i1 %41, %42
  br i1 %43, label %133, label %126

44:                                               ; preds = %133
  %45 = getelementptr inbounds i16, i16* %0, i64 %137
  %46 = tail call i32 @vpx_vector_var_sse2(i16* %45, i16* %1, i32 %2) #8
  %47 = icmp slt i32 %46, %134
  %48 = select i1 %47, i32 %46, i32 %134
  %49 = trunc i64 %137 to i32
  %50 = select i1 %47, i32 %49, i32 %135
  br label %51

51:                                               ; preds = %133, %44
  %52 = phi i32 [ %48, %44 ], [ %134, %133 ]
  %53 = phi i32 [ %50, %44 ], [ %135, %133 ]
  %54 = add nsw i64 %136, 4
  %55 = icmp slt i64 %54, 0
  %56 = icmp sgt i64 %54, %36
  %57 = or i1 %55, %56
  br i1 %57, label %118, label %111

58:                                               ; preds = %118
  %59 = getelementptr inbounds i16, i16* %0, i64 %122
  %60 = tail call i32 @vpx_vector_var_sse2(i16* %59, i16* %1, i32 %2) #8
  %61 = icmp slt i32 %60, %119
  %62 = select i1 %61, i32 %60, i32 %119
  %63 = trunc i64 %122 to i32
  %64 = select i1 %61, i32 %63, i32 %120
  br label %65

65:                                               ; preds = %118, %58
  %66 = phi i32 [ %62, %58 ], [ %119, %118 ]
  %67 = phi i32 [ %64, %58 ], [ %120, %118 ]
  %68 = add nsw i64 %121, 2
  %69 = icmp slt i64 %68, 0
  %70 = icmp sgt i64 %68, %36
  %71 = or i1 %69, %70
  br i1 %71, label %103, label %96

72:                                               ; preds = %103
  %73 = getelementptr inbounds i16, i16* %0, i64 %107
  %74 = tail call i32 @vpx_vector_var_sse2(i16* %73, i16* %1, i32 %2) #8
  %75 = icmp slt i32 %74, %104
  %76 = select i1 %75, i32 %74, i32 %104
  %77 = trunc i64 %107 to i32
  %78 = select i1 %75, i32 %77, i32 %105
  br label %79

79:                                               ; preds = %103, %72
  %80 = phi i32 [ %76, %72 ], [ %104, %103 ]
  %81 = phi i32 [ %78, %72 ], [ %105, %103 ]
  %82 = add nsw i64 %106, 1
  %83 = icmp slt i64 %82, 0
  %84 = icmp sge i32 %105, %4
  %85 = or i1 %83, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds i16, i16* %0, i64 %82
  %88 = tail call i32 @vpx_vector_var_sse2(i16* %87, i16* %1, i32 %2) #8
  %89 = icmp slt i32 %88, %80
  %90 = trunc i64 %82 to i32
  %91 = select i1 %89, i32 %90, i32 %81
  br label %92

92:                                               ; preds = %86, %79
  %93 = phi i32 [ %91, %86 ], [ %81, %79 ]
  %94 = ashr i32 %4, 1
  %95 = sub nsw i32 %93, %94
  ret i32 %95

96:                                               ; preds = %65
  %97 = getelementptr inbounds i16, i16* %0, i64 %68
  %98 = tail call i32 @vpx_vector_var_sse2(i16* %97, i16* %1, i32 %2) #8
  %99 = icmp slt i32 %98, %66
  %100 = select i1 %99, i32 %98, i32 %66
  %101 = trunc i64 %68 to i32
  %102 = select i1 %99, i32 %101, i32 %67
  br label %103

103:                                              ; preds = %96, %65
  %104 = phi i32 [ %100, %96 ], [ %66, %65 ]
  %105 = phi i32 [ %102, %96 ], [ %67, %65 ]
  %106 = sext i32 %105 to i64
  %107 = add nsw i64 %106, -1
  %108 = icmp slt i32 %105, 1
  %109 = icmp sgt i64 %107, %36
  %110 = or i1 %108, %109
  br i1 %110, label %79, label %72

111:                                              ; preds = %51
  %112 = getelementptr inbounds i16, i16* %0, i64 %54
  %113 = tail call i32 @vpx_vector_var_sse2(i16* %112, i16* %1, i32 %2) #8
  %114 = icmp slt i32 %113, %52
  %115 = select i1 %114, i32 %113, i32 %52
  %116 = trunc i64 %54 to i32
  %117 = select i1 %114, i32 %116, i32 %53
  br label %118

118:                                              ; preds = %111, %51
  %119 = phi i32 [ %115, %111 ], [ %52, %51 ]
  %120 = phi i32 [ %117, %111 ], [ %53, %51 ]
  %121 = sext i32 %120 to i64
  %122 = add nsw i64 %121, -2
  %123 = icmp slt i64 %122, 0
  %124 = icmp sgt i64 %122, %36
  %125 = or i1 %123, %124
  br i1 %125, label %65, label %58

126:                                              ; preds = %35
  %127 = getelementptr inbounds i16, i16* %0, i64 %40
  %128 = tail call i32 @vpx_vector_var_sse2(i16* %127, i16* %1, i32 %2) #8
  %129 = icmp slt i32 %128, %38
  %130 = select i1 %129, i32 %128, i32 %38
  %131 = trunc i64 %40 to i32
  %132 = select i1 %129, i32 %131, i32 %39
  br label %133

133:                                              ; preds = %126, %35
  %134 = phi i32 [ %130, %126 ], [ %38, %35 ]
  %135 = phi i32 [ %132, %126 ], [ %39, %35 ]
  %136 = sext i32 %135 to i64
  %137 = add nsw i64 %136, -4
  %138 = icmp slt i64 %137, 0
  %139 = icmp sgt i64 %137, %36
  %140 = or i1 %138, %139
  br i1 %140, label %51, label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_refining_search_sad(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, i32, i32, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly) local_unnamed_addr #5 {
  %7 = alloca [4 x i32], align 16
  %8 = alloca [4 x i8*], align 16
  %9 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 0
  %10 = load i16, i16* %9, align 2
  %11 = ashr i16 %10, 3
  %12 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 1
  %13 = load i16, i16* %12, align 2
  %14 = ashr i16 %13, 3
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = sext i16 %18 to i32
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = mul nsw i32 %21, %19
  %23 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %22, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %16, i64 %27
  %29 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 0
  %30 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = tail call i32 %30(i8* %32, i32 %34, i8* %28, i32 %21) #8
  %36 = load i16, i16* %17, align 2
  %37 = sub i16 %36, %11
  %38 = load i16, i16* %23, align 2
  %39 = sub i16 %38, %14
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %41 = icmp eq i16 %37, 0
  %42 = icmp eq i16 %39, 0
  %43 = xor i1 %42, true
  %44 = zext i1 %43 to i64
  %45 = select i1 %42, i64 2, i64 3
  %46 = select i1 %41, i64 %44, i64 %45
  %47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = load i32*, i32** %40, align 8
  %50 = sext i16 %37 to i64
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, %48
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %55 = load i32*, i32** %54, align 8
  %56 = sext i16 %39 to i64
  %57 = getelementptr inbounds i32, i32* %55, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %53, %58
  %60 = mul i32 %59, %2
  %61 = add i32 %60, 256
  %62 = lshr i32 %61, 9
  %63 = add i32 %62, %35
  %64 = icmp sgt i32 %3, 0
  br i1 %64, label %65, label %256

65:                                               ; preds = %6
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %70 = bitcast [4 x i32]* %7 to i8*
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %72 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %74 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  %75 = bitcast [4 x i8*]* %8 to i8*
  %76 = getelementptr inbounds [4 x i8*], [4 x i8*]* %8, i64 0, i64 0
  %77 = getelementptr inbounds [4 x i8*], [4 x i8*]* %8, i64 0, i64 1
  %78 = getelementptr inbounds [4 x i8*], [4 x i8*]* %8, i64 0, i64 3
  %79 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 5
  %80 = bitcast [4 x i32]* %7 to i8*
  %81 = xor i16 %11, -1
  %82 = xor i16 %14, -1
  %83 = bitcast i8** %77 to <2 x i8*>*
  br label %84

84:                                               ; preds = %236, %65
  %85 = phi i16 [ %38, %65 ], [ %245, %236 ]
  %86 = phi i16 [ %36, %65 ], [ %241, %236 ]
  %87 = phi i32 [ 0, %65 ], [ %254, %236 ]
  %88 = phi i32 [ %63, %65 ], [ %233, %236 ]
  %89 = phi i8* [ %28, %65 ], [ %253, %236 ]
  %90 = sext i16 %86 to i32
  %91 = add nsw i32 %90, -1
  %92 = load i32, i32* %66, align 8
  %93 = icmp sgt i32 %91, %92
  %94 = add nsw i32 %90, 1
  %95 = load i32, i32* %67, align 4
  %96 = icmp slt i32 %94, %95
  %97 = and i1 %93, %96
  %98 = sext i16 %85 to i32
  %99 = add nsw i32 %98, -1
  %100 = load i32, i32* %68, align 16
  %101 = icmp sgt i32 %99, %100
  %102 = and i1 %97, %101
  %103 = add nsw i32 %98, 1
  %104 = load i32, i32* %69, align 4
  %105 = icmp slt i32 %103, %104
  %106 = and i1 %105, %102
  br i1 %106, label %107, label %157

107:                                              ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %80, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %108 = load i32, i32* %20, align 8
  %109 = sext i32 %108 to i64
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds i8, i8* %89, i64 %110
  store i8* %111, i8** %76, align 16
  %112 = insertelement <2 x i8*> undef, i8* %89, i32 0
  %113 = shufflevector <2 x i8*> %112, <2 x i8*> undef, <2 x i32> zeroinitializer
  %114 = getelementptr i8, <2 x i8*> %113, <2 x i64> <i64 -1, i64 1>
  store <2 x i8*> %114, <2 x i8*>* %83, align 8
  %115 = getelementptr inbounds i8, i8* %89, i64 %109
  store i8* %115, i8** %78, align 8
  %116 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %79, align 8
  %117 = load i8*, i8** %31, align 8
  %118 = load i32, i32* %33, align 8
  call void %116(i8* %117, i32 %118, i8** nonnull %76, i32 %108, i32* nonnull %71) #8
  %119 = load i32, i32* %71, align 16
  %120 = icmp ult i32 %119, %88
  br i1 %120, label %121, label %152

121:                                              ; preds = %107
  %122 = load i16, i16* %17, align 2
  %123 = load i16, i16* %23, align 2
  %124 = add i16 %122, %81
  %125 = sub i16 %123, %14
  %126 = icmp eq i16 %124, 0
  %127 = icmp eq i16 %125, 0
  %128 = xor i1 %127, true
  %129 = zext i1 %128 to i64
  %130 = select i1 %127, i64 2, i64 3
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = load i32*, i32** %40, align 8
  %135 = sext i16 %124 to i64
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = add nsw i32 %137, %133
  %139 = load i32*, i32** %54, align 8
  %140 = sext i16 %125 to i64
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %138, %142
  %144 = mul i32 %143, %2
  %145 = add i32 %144, 256
  %146 = lshr i32 %145, 9
  %147 = add i32 %146, %119
  store i32 %147, i32* %71, align 16
  %148 = icmp ult i32 %147, %88
  %149 = select i1 %148, i32 %147, i32 %88
  %150 = xor i1 %148, true
  %151 = sext i1 %150 to i32
  br label %152

152:                                              ; preds = %107, %121
  %153 = phi i32 [ %149, %121 ], [ %88, %107 ]
  %154 = phi i32 [ %151, %121 ], [ -1, %107 ]
  %155 = load i32, i32* %72, align 4
  %156 = icmp ult i32 %155, %153
  br i1 %156, label %258, label %288

157:                                              ; preds = %84, %228
  %158 = phi i32 [ %231, %228 ], [ %100, %84 ]
  %159 = phi i16 [ %230, %228 ], [ %85, %84 ]
  %160 = phi i16 [ %229, %228 ], [ %86, %84 ]
  %161 = phi i64 [ %226, %228 ], [ 0, %84 ]
  %162 = phi i32 [ %225, %228 ], [ -1, %84 ]
  %163 = phi i32 [ %224, %228 ], [ %88, %84 ]
  %164 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_refining_search_sad.neighbors, i64 0, i64 %161, i32 0
  %165 = load i16, i16* %164, align 4
  %166 = add i16 %165, %160
  %167 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_refining_search_sad.neighbors, i64 0, i64 %161, i32 1
  %168 = load i16, i16* %167, align 2
  %169 = add i16 %168, %159
  %170 = sext i16 %169 to i32
  %171 = icmp sgt i32 %158, %170
  br i1 %171, label %223, label %172

172:                                              ; preds = %157
  %173 = load i32, i32* %69, align 4
  %174 = icmp slt i32 %173, %170
  br i1 %174, label %223, label %175

175:                                              ; preds = %172
  %176 = sext i16 %166 to i32
  %177 = load i32, i32* %66, align 4
  %178 = icmp sgt i32 %177, %176
  br i1 %178, label %223, label %179

179:                                              ; preds = %175
  %180 = load i32, i32* %67, align 4
  %181 = icmp slt i32 %180, %176
  br i1 %181, label %223, label %182

182:                                              ; preds = %179
  %183 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %29, align 8
  %184 = load i8*, i8** %31, align 8
  %185 = load i32, i32* %33, align 8
  %186 = load i8*, i8** %15, align 8
  %187 = load i32, i32* %20, align 8
  %188 = mul nsw i32 %187, %176
  %189 = add nsw i32 %188, %170
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %186, i64 %190
  %192 = call i32 %183(i8* %184, i32 %185, i8* %191, i32 %187) #8
  %193 = icmp ult i32 %192, %163
  br i1 %193, label %194, label %223

194:                                              ; preds = %182
  %195 = sub i16 %166, %11
  %196 = sub i16 %169, %14
  %197 = icmp eq i16 %195, 0
  %198 = icmp eq i16 %196, 0
  %199 = xor i1 %198, true
  %200 = zext i1 %199 to i64
  %201 = select i1 %198, i64 2, i64 3
  %202 = select i1 %197, i64 %200, i64 %201
  %203 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = load i32*, i32** %40, align 8
  %206 = sext i16 %195 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = add nsw i32 %208, %204
  %210 = load i32*, i32** %54, align 8
  %211 = sext i16 %196 to i64
  %212 = getelementptr inbounds i32, i32* %210, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = add nsw i32 %209, %213
  %215 = mul i32 %214, %2
  %216 = add i32 %215, 256
  %217 = lshr i32 %216, 9
  %218 = add i32 %217, %192
  %219 = icmp ult i32 %218, %163
  %220 = select i1 %219, i32 %218, i32 %163
  %221 = trunc i64 %161 to i32
  %222 = select i1 %219, i32 %221, i32 %162
  br label %223

223:                                              ; preds = %157, %172, %175, %194, %182, %179
  %224 = phi i32 [ %163, %179 ], [ %163, %182 ], [ %220, %194 ], [ %163, %175 ], [ %163, %172 ], [ %163, %157 ]
  %225 = phi i32 [ %162, %179 ], [ %162, %182 ], [ %222, %194 ], [ %162, %175 ], [ %162, %172 ], [ %162, %157 ]
  %226 = add nuw nsw i64 %161, 1
  %227 = icmp eq i64 %226, 4
  br i1 %227, label %232, label %228

228:                                              ; preds = %223
  %229 = load i16, i16* %17, align 2
  %230 = load i16, i16* %23, align 2
  %231 = load i32, i32* %68, align 4
  br label %157

232:                                              ; preds = %223, %360
  %233 = phi i32 [ %361, %360 ], [ %224, %223 ]
  %234 = phi i32 [ %362, %360 ], [ %225, %223 ]
  %235 = icmp eq i32 %234, -1
  br i1 %235, label %256, label %236

236:                                              ; preds = %232
  %237 = sext i32 %234 to i64
  %238 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_refining_search_sad.neighbors, i64 0, i64 %237, i32 0
  %239 = load i16, i16* %238, align 4
  %240 = load i16, i16* %17, align 2
  %241 = add i16 %240, %239
  store i16 %241, i16* %17, align 2
  %242 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_refining_search_sad.neighbors, i64 0, i64 %237, i32 1
  %243 = load i16, i16* %242, align 2
  %244 = load i16, i16* %23, align 2
  %245 = add i16 %244, %243
  store i16 %245, i16* %23, align 2
  %246 = load i8*, i8** %15, align 8
  %247 = sext i16 %241 to i32
  %248 = load i32, i32* %20, align 8
  %249 = mul nsw i32 %248, %247
  %250 = sext i16 %245 to i32
  %251 = add nsw i32 %249, %250
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %246, i64 %252
  %254 = add nuw nsw i32 %87, 1
  %255 = icmp eq i32 %254, %3
  br i1 %255, label %256, label %84

256:                                              ; preds = %232, %236, %6
  %257 = phi i32 [ %63, %6 ], [ %233, %236 ], [ %233, %232 ]
  ret i32 %257

258:                                              ; preds = %152
  %259 = load i16, i16* %17, align 2
  %260 = load i16, i16* %23, align 2
  %261 = sub i16 %259, %11
  %262 = add i16 %260, %82
  %263 = icmp eq i16 %261, 0
  %264 = icmp eq i16 %262, 0
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i64
  %267 = select i1 %264, i64 2, i64 3
  %268 = select i1 %263, i64 %266, i64 %267
  %269 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = load i32*, i32** %40, align 8
  %272 = sext i16 %261 to i64
  %273 = getelementptr inbounds i32, i32* %271, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = add nsw i32 %274, %270
  %276 = load i32*, i32** %54, align 8
  %277 = sext i16 %262 to i64
  %278 = getelementptr inbounds i32, i32* %276, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = add nsw i32 %275, %279
  %281 = mul i32 %280, %2
  %282 = add i32 %281, 256
  %283 = lshr i32 %282, 9
  %284 = add i32 %283, %155
  store i32 %284, i32* %72, align 4
  %285 = icmp ult i32 %284, %153
  %286 = select i1 %285, i32 %284, i32 %153
  %287 = select i1 %285, i32 1, i32 %154
  br label %288

288:                                              ; preds = %258, %152
  %289 = phi i32 [ %286, %258 ], [ %153, %152 ]
  %290 = phi i32 [ %287, %258 ], [ %154, %152 ]
  %291 = load i32, i32* %73, align 8
  %292 = icmp ult i32 %291, %289
  br i1 %292, label %293, label %324

293:                                              ; preds = %288
  %294 = load i16, i16* %17, align 2
  %295 = load i16, i16* %23, align 2
  %296 = sub i16 %294, %11
  %297 = sub i16 %295, %14
  %298 = add i16 %297, 1
  %299 = icmp eq i16 %296, 0
  %300 = icmp eq i16 %298, 0
  %301 = xor i1 %300, true
  %302 = zext i1 %301 to i64
  %303 = select i1 %300, i64 2, i64 3
  %304 = select i1 %299, i64 %302, i64 %303
  %305 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = load i32*, i32** %40, align 8
  %308 = sext i16 %296 to i64
  %309 = getelementptr inbounds i32, i32* %307, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = add nsw i32 %310, %306
  %312 = load i32*, i32** %54, align 8
  %313 = sext i16 %298 to i64
  %314 = getelementptr inbounds i32, i32* %312, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = add nsw i32 %311, %315
  %317 = mul i32 %316, %2
  %318 = add i32 %317, 256
  %319 = lshr i32 %318, 9
  %320 = add i32 %319, %291
  store i32 %320, i32* %73, align 8
  %321 = icmp ult i32 %320, %289
  %322 = select i1 %321, i32 %320, i32 %289
  %323 = select i1 %321, i32 2, i32 %290
  br label %324

324:                                              ; preds = %293, %288
  %325 = phi i32 [ %322, %293 ], [ %289, %288 ]
  %326 = phi i32 [ %323, %293 ], [ %290, %288 ]
  %327 = load i32, i32* %74, align 4
  %328 = icmp ult i32 %327, %325
  br i1 %328, label %329, label %360

329:                                              ; preds = %324
  %330 = load i16, i16* %17, align 2
  %331 = load i16, i16* %23, align 2
  %332 = sub i16 %330, %11
  %333 = add i16 %332, 1
  %334 = sub i16 %331, %14
  %335 = icmp eq i16 %333, 0
  %336 = icmp eq i16 %334, 0
  %337 = xor i1 %336, true
  %338 = zext i1 %337 to i64
  %339 = select i1 %336, i64 2, i64 3
  %340 = select i1 %335, i64 %338, i64 %339
  %341 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %340
  %342 = load i32, i32* %341, align 4
  %343 = load i32*, i32** %40, align 8
  %344 = sext i16 %333 to i64
  %345 = getelementptr inbounds i32, i32* %343, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = add nsw i32 %346, %342
  %348 = load i32*, i32** %54, align 8
  %349 = sext i16 %334 to i64
  %350 = getelementptr inbounds i32, i32* %348, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = add nsw i32 %347, %351
  %353 = mul i32 %352, %2
  %354 = add i32 %353, 256
  %355 = lshr i32 %354, 9
  %356 = add i32 %355, %327
  store i32 %356, i32* %74, align 4
  %357 = icmp ult i32 %356, %325
  %358 = select i1 %357, i32 %356, i32 %325
  %359 = select i1 %357, i32 3, i32 %326
  br label %360

360:                                              ; preds = %329, %324
  %361 = phi i32 [ %358, %329 ], [ %325, %324 ]
  %362 = phi i32 [ %359, %329 ], [ %326, %324 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #8
  br label %232
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_refining_search_8p_c(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, i32, i32, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly, i8*) local_unnamed_addr #5 {
  %8 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = ashr i16 %9, 3
  %11 = getelementptr inbounds %struct.mv, %struct.mv* %5, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = ashr i16 %12, 3
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %15 = load i32, i32* %14, align 16
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = icmp sgt i32 %15, %24
  %26 = icmp slt i32 %17, %24
  %27 = select i1 %26, i32 %17, i32 %24
  %28 = select i1 %25, i32 %15, i32 %27
  %29 = trunc i32 %28 to i16
  store i16 %29, i16* %22, align 2
  %30 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = sext i16 %31 to i32
  %33 = icmp sgt i32 %19, %32
  %34 = icmp slt i32 %21, %32
  %35 = select i1 %34, i32 %21, i32 %32
  %36 = select i1 %33, i32 %19, i32 %35
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %30, align 2
  %38 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %4, i64 0, i32 1
  %39 = load i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i8*)** %38, align 8
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = shl i32 %36, 16
  %47 = ashr exact i32 %46, 16
  %48 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = mul nsw i32 %49, %47
  %51 = shl i32 %28, 16
  %52 = ashr exact i32 %51, 16
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %45, i64 %54
  %56 = tail call i32 %39(i8* %41, i32 %43, i8* %55, i32 %49, i8* %6) #8
  %57 = load i16, i16* %30, align 2
  %58 = sub i16 %57, %10
  %59 = load i16, i16* %22, align 2
  %60 = sub i16 %59, %13
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %62 = icmp eq i16 %58, 0
  %63 = icmp eq i16 %60, 0
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i64
  %66 = select i1 %63, i64 2, i64 3
  %67 = select i1 %62, i64 %65, i64 %66
  %68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = load i32*, i32** %61, align 8
  %71 = sext i16 %58 to i64
  %72 = getelementptr inbounds i32, i32* %70, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, %69
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %76 = load i32*, i32** %75, align 8
  %77 = sext i16 %60 to i64
  %78 = getelementptr inbounds i32, i32* %76, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %74, %79
  %81 = mul i32 %80, %2
  %82 = add i32 %81, 256
  %83 = lshr i32 %82, 9
  %84 = add i32 %83, %56
  %85 = icmp sgt i32 %3, 0
  br i1 %85, label %86, label %179

86:                                               ; preds = %7, %167
  %87 = phi i16 [ %176, %167 ], [ %59, %7 ]
  %88 = phi i16 [ %172, %167 ], [ %57, %7 ]
  %89 = phi i32 [ %177, %167 ], [ 0, %7 ]
  %90 = phi i32 [ %158, %167 ], [ %84, %7 ]
  br label %91

91:                                               ; preds = %162, %86
  %92 = phi i16 [ %87, %86 ], [ %164, %162 ]
  %93 = phi i16 [ %88, %86 ], [ %163, %162 ]
  %94 = phi i64 [ 0, %86 ], [ %160, %162 ]
  %95 = phi i32 [ -1, %86 ], [ %159, %162 ]
  %96 = phi i32 [ %90, %86 ], [ %158, %162 ]
  %97 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* @vp9_refining_search_8p_c.neighbors, i64 0, i64 %94, i32 0
  %98 = load i16, i16* %97, align 4
  %99 = add i16 %98, %93
  %100 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* @vp9_refining_search_8p_c.neighbors, i64 0, i64 %94, i32 1
  %101 = load i16, i16* %100, align 2
  %102 = add i16 %101, %92
  %103 = sext i16 %102 to i32
  %104 = load i32, i32* %14, align 4
  %105 = icmp sgt i32 %104, %103
  br i1 %105, label %157, label %106

106:                                              ; preds = %91
  %107 = load i32, i32* %16, align 4
  %108 = icmp slt i32 %107, %103
  br i1 %108, label %157, label %109

109:                                              ; preds = %106
  %110 = sext i16 %99 to i32
  %111 = load i32, i32* %18, align 4
  %112 = icmp sgt i32 %111, %110
  br i1 %112, label %157, label %113

113:                                              ; preds = %109
  %114 = load i32, i32* %20, align 4
  %115 = icmp slt i32 %114, %110
  br i1 %115, label %157, label %116

116:                                              ; preds = %113
  %117 = load i32 (i8*, i32, i8*, i32, i8*)*, i32 (i8*, i32, i8*, i32, i8*)** %38, align 8
  %118 = load i8*, i8** %40, align 8
  %119 = load i32, i32* %42, align 8
  %120 = load i8*, i8** %44, align 8
  %121 = load i32, i32* %48, align 8
  %122 = mul nsw i32 %121, %110
  %123 = add nsw i32 %122, %103
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %120, i64 %124
  %126 = tail call i32 %117(i8* %118, i32 %119, i8* %125, i32 %121, i8* %6) #8
  %127 = icmp ult i32 %126, %96
  br i1 %127, label %128, label %157

128:                                              ; preds = %116
  %129 = sub i16 %99, %10
  %130 = sub i16 %102, %13
  %131 = icmp eq i16 %129, 0
  %132 = icmp eq i16 %130, 0
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i64
  %135 = select i1 %132, i64 2, i64 3
  %136 = select i1 %131, i64 %134, i64 %135
  %137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = load i32*, i32** %61, align 8
  %140 = sext i16 %129 to i64
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %142, %138
  %144 = load i32*, i32** %75, align 8
  %145 = sext i16 %130 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = add nsw i32 %143, %147
  %149 = mul i32 %148, %2
  %150 = add i32 %149, 256
  %151 = lshr i32 %150, 9
  %152 = add i32 %151, %126
  %153 = icmp ult i32 %152, %96
  %154 = select i1 %153, i32 %152, i32 %96
  %155 = trunc i64 %94 to i32
  %156 = select i1 %153, i32 %155, i32 %95
  br label %157

157:                                              ; preds = %91, %106, %109, %128, %116, %113
  %158 = phi i32 [ %96, %113 ], [ %96, %116 ], [ %154, %128 ], [ %96, %109 ], [ %96, %106 ], [ %96, %91 ]
  %159 = phi i32 [ %95, %113 ], [ %95, %116 ], [ %156, %128 ], [ %95, %109 ], [ %95, %106 ], [ %95, %91 ]
  %160 = add nuw nsw i64 %94, 1
  %161 = icmp eq i64 %160, 8
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = load i16, i16* %30, align 2
  %164 = load i16, i16* %22, align 2
  br label %91

165:                                              ; preds = %157
  %166 = icmp eq i32 %159, -1
  br i1 %166, label %179, label %167

167:                                              ; preds = %165
  %168 = sext i32 %159 to i64
  %169 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* @vp9_refining_search_8p_c.neighbors, i64 0, i64 %168, i32 0
  %170 = load i16, i16* %169, align 4
  %171 = load i16, i16* %30, align 2
  %172 = add i16 %171, %170
  store i16 %172, i16* %30, align 2
  %173 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* @vp9_refining_search_8p_c.neighbors, i64 0, i64 %168, i32 1
  %174 = load i16, i16* %173, align 2
  %175 = load i16, i16* %22, align 2
  %176 = add i16 %175, %174
  store i16 %176, i16* %22, align 2
  %177 = add nuw nsw i32 %89, 1
  %178 = icmp eq i32 %177, %3
  br i1 %178, label %179, label %86

179:                                              ; preds = %165, %167, %7
  %180 = phi i32 [ %84, %7 ], [ %158, %167 ], [ %158, %165 ]
  ret i32 %180
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_full_pixel_search(%struct.VP9_COMP*, %struct.macroblock*, i8 zeroext, %struct.mv*, i32, i32, i32, i32*, %struct.mv*, %struct.mv* nocapture, i32, i32) local_unnamed_addr #5 {
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.mv, align 2
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = bitcast i32* %24 to %struct.mv*
  %26 = zext i8 %2 to i64
  %27 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26
  %28 = icmp eq i32* %7, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %12
  %30 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %30, align 4
  %31 = getelementptr inbounds i32, i32* %7, i64 4
  store i32 2147483647, i32* %31, align 4
  br label %32

32:                                               ; preds = %12, %29
  switch i32 %5, label %326 [
    i32 6, label %33
    i32 5, label %37
    i32 2, label %41
    i32 4, label %43
    i32 3, label %45
    i32 1, label %47
    i32 7, label %47
  ]

33:                                               ; preds = %32
  %34 = icmp sgt i32 %4, 9
  %35 = select i1 %34, i32 %4, i32 9
  %36 = tail call fastcc i32 @bigdia_search(%struct.macroblock* %1, %struct.mv* %3, i32 %35, i32 %6, i32 0, i32* %7, %struct.vp9_variance_vtable* %27, %struct.mv* %8, %struct.mv* %9) #8
  br label %494

37:                                               ; preds = %32
  %38 = icmp sgt i32 %4, 9
  %39 = select i1 %38, i32 %4, i32 9
  %40 = tail call fastcc i32 @vp9_pattern_search(%struct.macroblock* %1, %struct.mv* %3, i32 %39, i32 %6, i32 0, i32* %7, %struct.vp9_variance_vtable* %27, %struct.mv* %8, %struct.mv* %9, i32* getelementptr inbounds ([11 x i32], [11 x i32]* @hex_search.hex_num_candidates, i64 0, i64 0), [8 x %struct.mv]* getelementptr inbounds ([11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @hex_search.hex_candidates, i64 0, i64 0)) #8
  br label %494

41:                                               ; preds = %32
  %42 = tail call fastcc i32 @vp9_pattern_search(%struct.macroblock* %1, %struct.mv* %3, i32 %4, i32 %6, i32 1, i32* %7, %struct.vp9_variance_vtable* %27, %struct.mv* %8, %struct.mv* %9, i32* getelementptr inbounds ([11 x i32], [11 x i32]* @hex_search.hex_num_candidates, i64 0, i64 0), [8 x %struct.mv]* getelementptr inbounds ([11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @hex_search.hex_candidates, i64 0, i64 0)) #8
  br label %494

43:                                               ; preds = %32
  %44 = tail call fastcc i32 @vp9_pattern_search(%struct.macroblock* %1, %struct.mv* %3, i32 %4, i32 %6, i32 1, i32* %7, %struct.vp9_variance_vtable* %27, %struct.mv* %8, %struct.mv* %9, i32* getelementptr inbounds ([11 x i32], [11 x i32]* @square_search.square_num_candidates, i64 0, i64 0), [8 x %struct.mv]* getelementptr inbounds ([11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @square_search.square_candidates, i64 0, i64 0)) #8
  br label %494

45:                                               ; preds = %32
  %46 = tail call fastcc i32 @bigdia_search(%struct.macroblock* %1, %struct.mv* %3, i32 %4, i32 %6, i32 1, i32* %7, %struct.vp9_variance_vtable* %27, %struct.mv* %8, %struct.mv* %9)
  br label %494

47:                                               ; preds = %32, %32
  %48 = sub nsw i32 10, %4
  %49 = bitcast i32* %20 to %struct.mv*
  %50 = bitcast i32* %23 to %struct.mv*
  %51 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #8
  %52 = bitcast i32* %20 to i16*
  store i16 -21846, i16* %52, align 4
  %53 = getelementptr inbounds %struct.mv, %struct.mv* %49, i64 0, i32 1
  store i16 -21846, i16* %53, align 2
  %54 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #8
  store i32 -1431655766, i32* %21, align 4
  %55 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #8
  store i32 0, i32* %22, align 4
  %56 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 88
  %57 = load i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)** %56, align 8
  %58 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 109
  %59 = call i32 %57(%struct.macroblock* %1, %struct.search_site_config* %58, %struct.mv* %3, %struct.mv* nonnull %49, i32 %4, i32 %6, i32* nonnull %21, %struct.vp9_variance_vtable* %27, %struct.mv* %8) #8
  %60 = icmp eq i32 %59, 2147483647
  br i1 %60, label %128, label %61

61:                                               ; preds = %47
  %62 = load i16, i16* %52, align 4
  %63 = load i16, i16* %53, align 2
  %64 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #8
  store i32 -1431655766, i32* %19, align 4
  %65 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26, i32 2
  %66 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %65, align 8
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = sext i16 %62 to i32
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = mul nsw i32 %75, %73
  %77 = sext i16 %63 to i32
  %78 = add nsw i32 %76, %77
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  %81 = call i32 %66(i8* %68, i32 %70, i8* %80, i32 %75, i32* nonnull %19) #8
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 29
  %84 = load i32**, i32*** %83, align 8
  %85 = icmp eq i32** %84, null
  br i1 %85, label %122, label %86

86:                                               ; preds = %61
  %87 = shl i16 %63, 3
  %88 = shl i16 %62, 3
  %89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 11
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %92 = load i16, i16* %91, align 2
  %93 = sub i16 %88, %92
  %94 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %95 = load i16, i16* %94, align 2
  %96 = sub i16 %87, %95
  %97 = icmp eq i16 %93, 0
  %98 = icmp eq i16 %96, 0
  %99 = xor i1 %98, true
  %100 = zext i1 %99 to i64
  %101 = select i1 %98, i64 2, i64 3
  %102 = select i1 %97, i64 %100, i64 %101
  %103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 26, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = load i32*, i32** %84, align 8
  %106 = sext i16 %93 to i64
  %107 = getelementptr inbounds i32, i32* %105, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %108, %104
  %110 = getelementptr inbounds i32*, i32** %84, i64 1
  %111 = load i32*, i32** %110, align 8
  %112 = sext i16 %96 to i64
  %113 = getelementptr inbounds i32, i32* %111, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = add nsw i32 %109, %114
  %116 = sext i32 %115 to i64
  %117 = sext i32 %90 to i64
  %118 = shl nsw i64 %117, 18
  %119 = mul i64 %118, %116
  %120 = add i64 %119, 2147483648
  %121 = ashr i64 %120, 32
  br label %122

122:                                              ; preds = %86, %61
  %123 = phi i64 [ %121, %86 ], [ 0, %61 ]
  %124 = add nsw i64 %123, %82
  %125 = icmp ugt i64 %124, 2147483646
  %126 = trunc i64 %124 to i32
  %127 = select i1 %125, i32 2147483647, i32 %126
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #8
  br label %128

128:                                              ; preds = %122, %47
  %129 = phi i32 [ %127, %122 ], [ 2147483647, %47 ]
  %130 = bitcast %struct.mv* %9 to i32*
  %131 = load i32, i32* %20, align 4
  store i32 %131, i32* %130, align 2
  %132 = load i32, i32* %21, align 4
  %133 = icmp sle i32 %132, %48
  %134 = zext i1 %133 to i32
  %135 = icmp slt i32 %132, %48
  br i1 %135, label %136, label %239

136:                                              ; preds = %128
  %137 = bitcast i32* %18 to i8*
  %138 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26, i32 2
  %139 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 0
  %140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %141 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %142 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %143 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 29
  %144 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 11
  %145 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %146 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %147 = load i32, i32* %22, align 4
  br label %148

148:                                              ; preds = %233, %136
  %149 = phi i32 [ %147, %136 ], [ %235, %233 ]
  %150 = phi i32 [ %132, %136 ], [ %234, %233 ]
  %151 = phi i32 [ %134, %136 ], [ %237, %233 ]
  %152 = phi i32 [ %129, %136 ], [ %236, %233 ]
  %153 = add nsw i32 %150, 1
  store i32 %153, i32* %21, align 4
  %154 = icmp eq i32 %149, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %148
  %156 = add nsw i32 %149, -1
  store i32 %156, i32* %22, align 4
  br label %233

157:                                              ; preds = %148
  %158 = load i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)*, i32 (%struct.macroblock*, %struct.search_site_config*, %struct.mv*, %struct.mv*, i32, i32, i32*, %struct.vp9_variance_vtable*, %struct.mv*)** %56, align 8
  %159 = add nsw i32 %153, %4
  %160 = call i32 %158(%struct.macroblock* %1, %struct.search_site_config* %58, %struct.mv* %3, %struct.mv* nonnull %49, i32 %159, i32 %6, i32* nonnull %22, %struct.vp9_variance_vtable* %27, %struct.mv* %8) #8
  %161 = icmp eq i32 %160, 2147483647
  br i1 %161, label %162, label %168

162:                                              ; preds = %157
  %163 = load i32, i32* %22, align 4
  %164 = load i32, i32* %21, align 4
  %165 = sub nsw i32 %48, %164
  %166 = icmp sgt i32 %163, %165
  %167 = select i1 %166, i32 0, i32 %151
  br label %233

168:                                              ; preds = %157
  %169 = load i16, i16* %52, align 4
  %170 = load i16, i16* %53, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %137) #8
  store i32 -1431655766, i32* %18, align 4
  %171 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %138, align 8
  %172 = load i8*, i8** %139, align 8
  %173 = load i32, i32* %140, align 8
  %174 = load i8*, i8** %141, align 8
  %175 = sext i16 %169 to i32
  %176 = load i32, i32* %142, align 8
  %177 = mul nsw i32 %176, %175
  %178 = sext i16 %170 to i32
  %179 = add nsw i32 %177, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %174, i64 %180
  %182 = call i32 %171(i8* %172, i32 %173, i8* %181, i32 %176, i32* nonnull %18) #8
  %183 = zext i32 %182 to i64
  %184 = load i32**, i32*** %143, align 8
  %185 = icmp eq i32** %184, null
  br i1 %185, label %219, label %186

186:                                              ; preds = %168
  %187 = shl i16 %170, 3
  %188 = shl i16 %169, 3
  %189 = load i32, i32* %144, align 4
  %190 = load i16, i16* %145, align 2
  %191 = sub i16 %188, %190
  %192 = load i16, i16* %146, align 2
  %193 = sub i16 %187, %192
  %194 = icmp eq i16 %191, 0
  %195 = icmp eq i16 %193, 0
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i64
  %198 = select i1 %195, i64 2, i64 3
  %199 = select i1 %194, i64 %197, i64 %198
  %200 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 26, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = load i32*, i32** %184, align 8
  %203 = sext i16 %191 to i64
  %204 = getelementptr inbounds i32, i32* %202, i64 %203
  %205 = load i32, i32* %204, align 4
  %206 = add nsw i32 %205, %201
  %207 = getelementptr inbounds i32*, i32** %184, i64 1
  %208 = load i32*, i32** %207, align 8
  %209 = sext i16 %193 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = load i32, i32* %210, align 4
  %212 = add nsw i32 %206, %211
  %213 = sext i32 %212 to i64
  %214 = sext i32 %189 to i64
  %215 = shl nsw i64 %214, 18
  %216 = mul i64 %215, %213
  %217 = add i64 %216, 2147483648
  %218 = ashr i64 %217, 32
  br label %219

219:                                              ; preds = %186, %168
  %220 = phi i64 [ %218, %186 ], [ 0, %168 ]
  %221 = add nsw i64 %220, %183
  %222 = icmp ugt i64 %221, 2147483646
  %223 = trunc i64 %221 to i32
  %224 = select i1 %222, i32 2147483647, i32 %223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %137) #8
  %225 = load i32, i32* %22, align 4
  %226 = load i32, i32* %21, align 4
  %227 = sub nsw i32 %48, %226
  %228 = icmp sgt i32 %225, %227
  %229 = select i1 %228, i32 0, i32 %151
  %230 = icmp slt i32 %224, %152
  br i1 %230, label %231, label %233

231:                                              ; preds = %219
  %232 = load i32, i32* %20, align 4
  store i32 %232, i32* %130, align 2
  br label %233

233:                                              ; preds = %231, %219, %162, %155
  %234 = phi i32 [ %153, %155 ], [ %226, %231 ], [ %226, %219 ], [ %164, %162 ]
  %235 = phi i32 [ %156, %155 ], [ %225, %231 ], [ %225, %219 ], [ %163, %162 ]
  %236 = phi i32 [ %152, %155 ], [ %224, %231 ], [ %152, %219 ], [ %152, %162 ]
  %237 = phi i32 [ %151, %155 ], [ %229, %231 ], [ %229, %219 ], [ %167, %162 ]
  %238 = icmp slt i32 %234, %48
  br i1 %238, label %148, label %239

239:                                              ; preds = %233, %128
  %240 = phi i32 [ %129, %128 ], [ %236, %233 ]
  %241 = phi i32 [ %134, %128 ], [ %237, %233 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %322, label %243

243:                                              ; preds = %239
  %244 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %244) #8
  %245 = load i32, i32* %130, align 2
  store i32 %245, i32* %23, align 4
  %246 = call i32 @vp9_refining_search_sad(%struct.macroblock* %1, %struct.mv* nonnull %50, i32 %6, i32 8, %struct.vp9_variance_vtable* %27, %struct.mv* %8) #8
  %247 = icmp eq i32 %246, 2147483647
  br i1 %247, label %320, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %struct.mv, %struct.mv* %50, i64 0, i32 1
  %250 = bitcast i32* %23 to i16*
  %251 = load i16, i16* %250, align 4
  %252 = load i16, i16* %249, align 2
  %253 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #8
  store i32 -1431655766, i32* %17, align 4
  %254 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26, i32 2
  %255 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %254, align 8
  %256 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = sext i16 %251 to i32
  %263 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = mul nsw i32 %264, %262
  %266 = sext i16 %252 to i32
  %267 = add nsw i32 %265, %266
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i8, i8* %261, i64 %268
  %270 = call i32 %255(i8* %257, i32 %259, i8* %269, i32 %264, i32* nonnull %17) #8
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 29
  %273 = load i32**, i32*** %272, align 8
  %274 = icmp eq i32** %273, null
  br i1 %274, label %311, label %275

275:                                              ; preds = %248
  %276 = shl i16 %252, 3
  %277 = shl i16 %251, 3
  %278 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 11
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %281 = load i16, i16* %280, align 2
  %282 = sub i16 %277, %281
  %283 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %284 = load i16, i16* %283, align 2
  %285 = sub i16 %276, %284
  %286 = icmp eq i16 %282, 0
  %287 = icmp eq i16 %285, 0
  %288 = xor i1 %287, true
  %289 = zext i1 %288 to i64
  %290 = select i1 %287, i64 2, i64 3
  %291 = select i1 %286, i64 %289, i64 %290
  %292 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 26, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = load i32*, i32** %273, align 8
  %295 = sext i16 %282 to i64
  %296 = getelementptr inbounds i32, i32* %294, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = add nsw i32 %297, %293
  %299 = getelementptr inbounds i32*, i32** %273, i64 1
  %300 = load i32*, i32** %299, align 8
  %301 = sext i16 %285 to i64
  %302 = getelementptr inbounds i32, i32* %300, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = add nsw i32 %298, %303
  %305 = sext i32 %304 to i64
  %306 = sext i32 %279 to i64
  %307 = shl nsw i64 %306, 18
  %308 = mul i64 %307, %305
  %309 = add i64 %308, 2147483648
  %310 = ashr i64 %309, 32
  br label %311

311:                                              ; preds = %275, %248
  %312 = phi i64 [ %310, %275 ], [ 0, %248 ]
  %313 = add nsw i64 %312, %271
  %314 = icmp ugt i64 %313, 2147483646
  %315 = trunc i64 %313 to i32
  %316 = select i1 %314, i32 2147483647, i32 %315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #8
  %317 = icmp slt i32 %316, %240
  br i1 %317, label %318, label %320

318:                                              ; preds = %311
  %319 = load i32, i32* %23, align 4
  store i32 %319, i32* %130, align 2
  br label %320

320:                                              ; preds = %318, %311, %243
  %321 = phi i32 [ %316, %318 ], [ %240, %311 ], [ %240, %243 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %244) #8
  br label %322

322:                                              ; preds = %320, %239
  %323 = phi i32 [ %321, %320 ], [ %240, %239 ]
  br i1 %28, label %325, label %324

324:                                              ; preds = %322
  call fastcc void @calc_int_cost_list(%struct.macroblock* %1, %struct.mv* %8, i32 %6, %struct.vp9_variance_vtable* %27, %struct.mv* %9, i32* nonnull %7) #8
  br label %325

325:                                              ; preds = %322, %324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #8
  br label %326

326:                                              ; preds = %32, %325
  %327 = phi i32 [ 0, %32 ], [ %323, %325 ]
  switch i32 %5, label %494 [
    i32 1, label %328
    i32 7, label %347
  ]

328:                                              ; preds = %326
  %329 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 40
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, 2147483647
  br i1 %331, label %494, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 67, i32 24
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %494

336:                                              ; preds = %332
  %337 = getelementptr inbounds [13 x i8], [13 x i8]* @b_width_log2_lookup, i64 0, i64 %26
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = getelementptr inbounds [13 x i8], [13 x i8]* @b_height_log2_lookup, i64 0, i64 %26
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i32
  %343 = sub nsw i32 8, %339
  %344 = sub nsw i32 %343, %342
  %345 = ashr i32 %330, %344
  %346 = icmp sgt i32 %327, %345
  br i1 %346, label %347, label %494

347:                                              ; preds = %336, %326
  %348 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %348) #8
  %349 = bitcast i32* %24 to i16*
  store i16 -21846, i16* %349, align 4
  %350 = getelementptr inbounds %struct.mv, %struct.mv* %25, i64 0, i32 1
  store i16 -21846, i16* %350, align 2
  %351 = bitcast i32* %15 to %struct.mv*
  %352 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %352) #8
  %353 = bitcast i32* %15 to i16*
  %354 = getelementptr inbounds %struct.mv, %struct.mv* %351, i64 0, i32 1
  %355 = getelementptr inbounds %struct.mv, %struct.mv* %9, i64 0, i32 0
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %353, align 4
  %357 = getelementptr inbounds %struct.mv, %struct.mv* %9, i64 0, i32 1
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %354, align 2
  %359 = bitcast %struct.mv* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #8
  %360 = getelementptr inbounds %struct.mv, %struct.mv* %16, i64 0, i32 0
  %361 = getelementptr inbounds %struct.mv, %struct.mv* %16, i64 0, i32 1
  %362 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %363 = load i16, i16* %362, align 2
  %364 = ashr i16 %363, 3
  store i16 %364, i16* %360, align 2
  %365 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %366 = load i16, i16* %365, align 2
  %367 = ashr i16 %366, 3
  store i16 %367, i16* %361, align 2
  %368 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 0, i32 0
  %371 = load i32, i32* %370, align 8
  %372 = add i32 %371, -7
  %373 = icmp ugt i32 %372, 249
  %374 = icmp slt i32 %369, 1
  %375 = or i1 %374, %373
  %376 = icmp sgt i32 %369, %371
  %377 = or i1 %376, %375
  br i1 %377, label %378, label %379

378:                                              ; preds = %347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %352) #8
  br label %492

379:                                              ; preds = %347
  %380 = udiv i32 %371, %369
  %381 = sext i16 %356 to i32
  %382 = icmp slt i32 %381, 0
  %383 = sub nsw i32 0, %381
  %384 = select i1 %382, i32 %383, i32 %381
  %385 = sext i16 %358 to i32
  %386 = icmp slt i32 %385, 0
  %387 = sub nsw i32 0, %385
  %388 = select i1 %386, i32 %387, i32 %385
  %389 = icmp sgt i32 %384, %388
  %390 = select i1 %389, i32 %384, i32 %388
  %391 = mul nsw i32 %390, 5
  %392 = lshr i32 %391, 2
  %393 = icmp sgt i32 %371, %392
  %394 = select i1 %393, i32 %371, i32 %392
  %395 = icmp slt i32 %394, 256
  %396 = select i1 %395, i32 %394, i32 256
  %397 = sdiv i32 %396, %380
  %398 = icmp sgt i32 %369, %397
  %399 = select i1 %398, i32 %369, i32 %397
  %400 = call fastcc i32 @exhaustive_mesh_search(%struct.macroblock* %1, %struct.mv* nonnull %16, %struct.mv* nonnull %351, i32 %396, i32 %399, i32 %6, %struct.vp9_variance_vtable* %27, %struct.mv* nonnull %351) #8
  %401 = icmp sgt i32 %399, 1
  %402 = icmp sgt i32 %396, 7
  %403 = and i1 %402, %401
  br i1 %403, label %404, label %416

404:                                              ; preds = %379, %404
  %405 = phi i64 [ %413, %404 ], [ 1, %379 ]
  %406 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 %405, i32 0
  %407 = load i32, i32* %406, align 8
  %408 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 75, i32 41, i64 %405, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = call fastcc i32 @exhaustive_mesh_search(%struct.macroblock* %1, %struct.mv* nonnull %16, %struct.mv* nonnull %351, i32 %407, i32 %409, i32 %6, %struct.vp9_variance_vtable* %27, %struct.mv* nonnull %351) #8
  %411 = load i32, i32* %408, align 4
  %412 = icmp ne i32 %411, 1
  %413 = add nuw nsw i64 %405, 1
  %414 = icmp ult i64 %413, 4
  %415 = and i1 %414, %412
  br i1 %415, label %404, label %416

416:                                              ; preds = %404, %379
  %417 = phi i32 [ %400, %379 ], [ %410, %404 ]
  %418 = icmp eq i32 %417, 2147483647
  br i1 %418, label %484, label %419

419:                                              ; preds = %416
  %420 = load i16, i16* %353, align 4
  %421 = load i16, i16* %354, align 2
  %422 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %422) #8
  store i32 -1431655766, i32* %14, align 4
  %423 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26, i32 2
  %424 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %423, align 8
  %425 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 0
  %426 = load i8*, i8** %425, align 8
  %427 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %428 = load i32, i32* %427, align 8
  %429 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %430 = load i8*, i8** %429, align 8
  %431 = sext i16 %420 to i32
  %432 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %433 = load i32, i32* %432, align 8
  %434 = mul nsw i32 %433, %431
  %435 = sext i16 %421 to i32
  %436 = add nsw i32 %434, %435
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds i8, i8* %430, i64 %437
  %439 = call i32 %424(i8* %426, i32 %428, i8* %438, i32 %433, i32* nonnull %14) #8
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 29
  %442 = load i32**, i32*** %441, align 8
  %443 = icmp eq i32** %442, null
  br i1 %443, label %478, label %444

444:                                              ; preds = %419
  %445 = shl i16 %421, 3
  %446 = shl i16 %420, 3
  %447 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 11
  %448 = load i32, i32* %447, align 4
  %449 = load i16, i16* %362, align 2
  %450 = sub i16 %446, %449
  %451 = load i16, i16* %365, align 2
  %452 = sub i16 %445, %451
  %453 = icmp eq i16 %450, 0
  %454 = icmp eq i16 %452, 0
  %455 = xor i1 %454, true
  %456 = zext i1 %455 to i64
  %457 = select i1 %454, i64 2, i64 3
  %458 = select i1 %453, i64 %456, i64 %457
  %459 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 26, i64 %458
  %460 = load i32, i32* %459, align 4
  %461 = load i32*, i32** %442, align 8
  %462 = sext i16 %450 to i64
  %463 = getelementptr inbounds i32, i32* %461, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = add nsw i32 %464, %460
  %466 = getelementptr inbounds i32*, i32** %442, i64 1
  %467 = load i32*, i32** %466, align 8
  %468 = sext i16 %452 to i64
  %469 = getelementptr inbounds i32, i32* %467, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = add nsw i32 %465, %470
  %472 = sext i32 %471 to i64
  %473 = sext i32 %448 to i64
  %474 = shl nsw i64 %473, 18
  %475 = mul i64 %474, %472
  %476 = add i64 %475, 2147483648
  %477 = ashr i64 %476, 32
  br label %478

478:                                              ; preds = %444, %419
  %479 = phi i64 [ %477, %444 ], [ 0, %419 ]
  %480 = add nsw i64 %479, %440
  %481 = icmp ugt i64 %480, 2147483646
  %482 = trunc i64 %480 to i32
  %483 = select i1 %481, i32 2147483647, i32 %482
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %422) #8
  br label %484

484:                                              ; preds = %478, %416
  %485 = phi i32 [ %483, %478 ], [ 2147483647, %416 ]
  %486 = load i32, i32* %15, align 4
  store i32 %486, i32* %24, align 4
  br i1 %28, label %488, label %487

487:                                              ; preds = %484
  call fastcc void @calc_int_cost_list(%struct.macroblock* %1, %struct.mv* %8, i32 %6, %struct.vp9_variance_vtable* %27, %struct.mv* nonnull %25, i32* nonnull %7) #8
  br label %488

488:                                              ; preds = %484, %487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %359) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %352) #8
  %489 = icmp slt i32 %485, %327
  br i1 %489, label %490, label %492

490:                                              ; preds = %488
  %491 = bitcast %struct.mv* %9 to i32*
  store i32 %486, i32* %491, align 2
  br label %492

492:                                              ; preds = %378, %490, %488
  %493 = phi i32 [ %485, %490 ], [ %327, %488 ], [ %327, %378 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %348) #8
  br label %494

494:                                              ; preds = %33, %37, %41, %43, %45, %326, %328, %336, %332, %492
  %495 = phi i32 [ %493, %492 ], [ %327, %326 ], [ %327, %328 ], [ %327, %336 ], [ %327, %332 ], [ %36, %33 ], [ %40, %37 ], [ %42, %41 ], [ %44, %43 ], [ %46, %45 ]
  %496 = icmp eq i32 %11, 0
  br i1 %496, label %569, label %497

497:                                              ; preds = %494
  switch i32 %5, label %498 [
    i32 7, label %569
    i32 1, label %569
  ]

498:                                              ; preds = %497
  %499 = icmp slt i32 %495, %10
  br i1 %499, label %500, label %569

500:                                              ; preds = %498
  %501 = getelementptr inbounds %struct.mv, %struct.mv* %9, i64 0, i32 0
  %502 = load i16, i16* %501, align 2
  %503 = getelementptr inbounds %struct.mv, %struct.mv* %9, i64 0, i32 1
  %504 = load i16, i16* %503, align 2
  %505 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %505) #8
  store i32 -1431655766, i32* %13, align 4
  %506 = getelementptr inbounds %struct.VP9_COMP, %struct.VP9_COMP* %0, i64 0, i32 89, i64 %26, i32 2
  %507 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %506, align 8
  %508 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 0
  %509 = load i8*, i8** %508, align 8
  %510 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 0, i64 0, i32 4, i32 1
  %511 = load i32, i32* %510, align 8
  %512 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %513 = load i8*, i8** %512, align 8
  %514 = sext i16 %502 to i32
  %515 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %516 = load i32, i32* %515, align 8
  %517 = mul nsw i32 %516, %514
  %518 = sext i16 %504 to i32
  %519 = add nsw i32 %517, %518
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds i8, i8* %513, i64 %520
  %522 = call i32 %507(i8* %509, i32 %511, i8* %521, i32 %516, i32* nonnull %13) #8
  %523 = zext i32 %522 to i64
  %524 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 29
  %525 = load i32**, i32*** %524, align 8
  %526 = icmp eq i32** %525, null
  br i1 %526, label %563, label %527

527:                                              ; preds = %500
  %528 = shl i16 %504, 3
  %529 = shl i16 %502, 3
  %530 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 11
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  %533 = load i16, i16* %532, align 2
  %534 = sub i16 %529, %533
  %535 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  %536 = load i16, i16* %535, align 2
  %537 = sub i16 %528, %536
  %538 = icmp eq i16 %534, 0
  %539 = icmp eq i16 %537, 0
  %540 = xor i1 %539, true
  %541 = zext i1 %540 to i64
  %542 = select i1 %539, i64 2, i64 3
  %543 = select i1 %538, i64 %541, i64 %542
  %544 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %1, i64 0, i32 26, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = load i32*, i32** %525, align 8
  %547 = sext i16 %534 to i64
  %548 = getelementptr inbounds i32, i32* %546, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = add nsw i32 %549, %545
  %551 = getelementptr inbounds i32*, i32** %525, i64 1
  %552 = load i32*, i32** %551, align 8
  %553 = sext i16 %537 to i64
  %554 = getelementptr inbounds i32, i32* %552, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = add nsw i32 %550, %555
  %557 = sext i32 %556 to i64
  %558 = sext i32 %531 to i64
  %559 = shl nsw i64 %558, 18
  %560 = mul i64 %559, %557
  %561 = add i64 %560, 2147483648
  %562 = ashr i64 %561, 32
  br label %563

563:                                              ; preds = %500, %527
  %564 = phi i64 [ %562, %527 ], [ 0, %500 ]
  %565 = add nsw i64 %564, %523
  %566 = icmp ugt i64 %565, 2147483646
  %567 = trunc i64 %565 to i32
  %568 = select i1 %566, i32 2147483647, i32 %567
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %505) #8
  br label %569

569:                                              ; preds = %494, %497, %497, %563, %498
  %570 = phi i32 [ %568, %563 ], [ %495, %498 ], [ %495, %497 ], [ %495, %494 ], [ %495, %497 ]
  ret i32 %570
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @bigdia_search(%struct.macroblock* readonly, %struct.mv* nocapture, i32, i32, i32, i32*, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture) unnamed_addr #5 {
  %10 = alloca [3 x i32], align 4
  %11 = alloca [3 x i32], align 4
  %12 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  %14 = ashr i16 %13, 3
  %15 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = ashr i16 %16, 3
  %18 = sext i32 %2 to i64
  %19 = getelementptr inbounds [11 x i32], [11 x i32]* @vp9_pattern_search_sad.search_param_to_steps, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %22 = load i32, i32* %21, align 16
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = icmp sgt i32 %22, %31
  %33 = icmp slt i32 %24, %31
  %34 = select i1 %33, i32 %24, i32 %31
  %35 = select i1 %32, i32 %22, i32 %34
  %36 = trunc i32 %35 to i16
  store i16 %36, i16* %29, align 2
  %37 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i32
  %40 = icmp sgt i32 %26, %39
  %41 = icmp slt i32 %28, %39
  %42 = select i1 %41, i32 %28, i32 %39
  %43 = select i1 %40, i32 %26, i32 %42
  %44 = trunc i32 %43 to i16
  store i16 %44, i16* %37, align 2
  %45 = shl i32 %43, 16
  %46 = ashr exact i32 %45, 16
  %47 = shl i32 %35, 16
  %48 = ashr exact i32 %47, 16
  %49 = icmp ne i32* %5, null
  br i1 %49, label %50, label %55

50:                                               ; preds = %9
  %51 = getelementptr inbounds i32, i32* %5, i64 4
  store i32 2147483647, i32* %51, align 4
  %52 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %52, align 4
  %53 = load i16, i16* %37, align 2
  %54 = load i16, i16* %29, align 2
  br label %55

55:                                               ; preds = %50, %9
  %56 = phi i16 [ %54, %50 ], [ %36, %9 ]
  %57 = phi i16 [ %53, %50 ], [ %44, %9 ]
  %58 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %6, i64 0, i32 0
  %59 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = sext i16 %57 to i32
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = mul nsw i32 %68, %66
  %70 = sext i16 %56 to i32
  %71 = add nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %65, i64 %72
  %74 = tail call i32 %59(i8* %61, i32 %63, i8* %73, i32 %68) #8
  %75 = load i16, i16* %37, align 2
  %76 = sub i16 %75, %14
  %77 = load i16, i16* %29, align 2
  %78 = sub i16 %77, %17
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %80 = icmp eq i16 %76, 0
  %81 = icmp eq i16 %78, 0
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i64
  %84 = select i1 %81, i64 2, i64 3
  %85 = select i1 %80, i64 %83, i64 %84
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32*, i32** %79, align 8
  %89 = sext i16 %76 to i64
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %91, %87
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %94 = load i32*, i32** %93, align 8
  %95 = sext i16 %78 to i64
  %96 = getelementptr inbounds i32, i32* %94, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = add nsw i32 %92, %97
  %99 = mul i32 %98, %3
  %100 = add i32 %99, 256
  %101 = lshr i32 %100, 9
  %102 = add i32 %101, %74
  %103 = icmp ne i32 %4, 0
  br i1 %103, label %104, label %282

104:                                              ; preds = %55
  %105 = sext i32 %20 to i64
  br label %106

106:                                              ; preds = %261, %104
  %107 = phi i64 [ %267, %261 ], [ 0, %104 ]
  %108 = phi i32 [ %266, %261 ], [ -1, %104 ]
  %109 = phi i32 [ %265, %261 ], [ -1, %104 ]
  %110 = phi i32 [ %262, %261 ], [ %102, %104 ]
  %111 = trunc i64 %107 to i32
  %112 = shl i32 1, %111
  %113 = sub nsw i32 %46, %112
  %114 = load i32, i32* %25, align 4
  %115 = icmp sge i32 %113, %114
  %116 = add nsw i32 %112, %46
  %117 = load i32, i32* %27, align 4
  %118 = icmp sle i32 %116, %117
  %119 = and i1 %115, %118
  %120 = sub nsw i32 %48, %112
  %121 = load i32, i32* %21, align 4
  %122 = icmp sge i32 %120, %121
  %123 = and i1 %119, %122
  %124 = add nsw i32 %112, %48
  %125 = load i32, i32* %23, align 4
  %126 = icmp sle i32 %124, %125
  %127 = and i1 %123, %126
  %128 = getelementptr inbounds [11 x i32], [11 x i32]* @bigdia_search.bigdia_num_candidates, i64 0, i64 %107
  br i1 %127, label %129, label %188

129:                                              ; preds = %106, %181
  %130 = phi i64 [ %184, %181 ], [ 0, %106 ]
  %131 = phi i32 [ %183, %181 ], [ -1, %106 ]
  %132 = phi i32 [ %182, %181 ], [ %110, %106 ]
  %133 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %107, i64 %130, i32 0
  %134 = load i16, i16* %133, align 4
  %135 = add i16 %134, %44
  %136 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %107, i64 %130, i32 1
  %137 = load i16, i16* %136, align 2
  %138 = add i16 %137, %36
  %139 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %140 = load i8*, i8** %60, align 8
  %141 = load i32, i32* %62, align 8
  %142 = load i8*, i8** %64, align 8
  %143 = sext i16 %135 to i32
  %144 = load i32, i32* %67, align 8
  %145 = mul nsw i32 %144, %143
  %146 = sext i16 %138 to i32
  %147 = add nsw i32 %145, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %142, i64 %148
  %150 = tail call i32 %139(i8* %140, i32 %141, i8* %149, i32 %144) #8
  %151 = icmp slt i32 %150, %132
  br i1 %151, label %152, label %181

152:                                              ; preds = %129
  %153 = sub i16 %135, %14
  %154 = sub i16 %138, %17
  %155 = icmp eq i16 %153, 0
  %156 = icmp eq i16 %154, 0
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i64
  %159 = select i1 %156, i64 2, i64 3
  %160 = select i1 %155, i64 %158, i64 %159
  %161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = load i32*, i32** %79, align 8
  %164 = sext i16 %153 to i64
  %165 = getelementptr inbounds i32, i32* %163, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = add nsw i32 %166, %162
  %168 = load i32*, i32** %93, align 8
  %169 = sext i16 %154 to i64
  %170 = getelementptr inbounds i32, i32* %168, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %167, %171
  %173 = mul i32 %172, %3
  %174 = add i32 %173, 256
  %175 = lshr i32 %174, 9
  %176 = add nsw i32 %175, %150
  %177 = icmp slt i32 %176, %132
  %178 = select i1 %177, i32 %176, i32 %132
  %179 = trunc i64 %130 to i32
  %180 = select i1 %177, i32 %179, i32 %131
  br label %181

181:                                              ; preds = %152, %129
  %182 = phi i32 [ %132, %129 ], [ %178, %152 ]
  %183 = phi i32 [ %131, %129 ], [ %180, %152 ]
  %184 = add nuw nsw i64 %130, 1
  %185 = load i32, i32* %128, align 4
  %186 = sext i32 %185 to i64
  %187 = icmp slt i64 %184, %186
  br i1 %187, label %129, label %261

188:                                              ; preds = %106, %259
  %189 = phi i32 [ %260, %259 ], [ %121, %106 ]
  %190 = phi i64 [ %255, %259 ], [ 0, %106 ]
  %191 = phi i32 [ %254, %259 ], [ -1, %106 ]
  %192 = phi i32 [ %253, %259 ], [ %110, %106 ]
  %193 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %107, i64 %190, i32 0
  %194 = load i16, i16* %193, align 4
  %195 = add i16 %194, %44
  %196 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %107, i64 %190, i32 1
  %197 = load i16, i16* %196, align 2
  %198 = add i16 %197, %36
  %199 = sext i16 %198 to i32
  %200 = icmp sgt i32 %189, %199
  br i1 %200, label %252, label %201

201:                                              ; preds = %188
  %202 = load i32, i32* %23, align 4
  %203 = icmp slt i32 %202, %199
  br i1 %203, label %252, label %204

204:                                              ; preds = %201
  %205 = sext i16 %195 to i32
  %206 = load i32, i32* %25, align 4
  %207 = icmp sgt i32 %206, %205
  br i1 %207, label %252, label %208

208:                                              ; preds = %204
  %209 = load i32, i32* %27, align 4
  %210 = icmp slt i32 %209, %205
  br i1 %210, label %252, label %211

211:                                              ; preds = %208
  %212 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %213 = load i8*, i8** %60, align 8
  %214 = load i32, i32* %62, align 8
  %215 = load i8*, i8** %64, align 8
  %216 = load i32, i32* %67, align 8
  %217 = mul nsw i32 %216, %205
  %218 = add nsw i32 %217, %199
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %215, i64 %219
  %221 = tail call i32 %212(i8* %213, i32 %214, i8* %220, i32 %216) #8
  %222 = icmp slt i32 %221, %192
  br i1 %222, label %223, label %252

223:                                              ; preds = %211
  %224 = sub i16 %195, %14
  %225 = sub i16 %198, %17
  %226 = icmp eq i16 %224, 0
  %227 = icmp eq i16 %225, 0
  %228 = xor i1 %227, true
  %229 = zext i1 %228 to i64
  %230 = select i1 %227, i64 2, i64 3
  %231 = select i1 %226, i64 %229, i64 %230
  %232 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** %79, align 8
  %235 = sext i16 %224 to i64
  %236 = getelementptr inbounds i32, i32* %234, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = add nsw i32 %237, %233
  %239 = load i32*, i32** %93, align 8
  %240 = sext i16 %225 to i64
  %241 = getelementptr inbounds i32, i32* %239, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %238, %242
  %244 = mul i32 %243, %3
  %245 = add i32 %244, 256
  %246 = lshr i32 %245, 9
  %247 = add nsw i32 %246, %221
  %248 = icmp slt i32 %247, %192
  %249 = select i1 %248, i32 %247, i32 %192
  %250 = trunc i64 %190 to i32
  %251 = select i1 %248, i32 %250, i32 %191
  br label %252

252:                                              ; preds = %223, %211, %208, %204, %201, %188
  %253 = phi i32 [ %192, %208 ], [ %192, %211 ], [ %249, %223 ], [ %192, %204 ], [ %192, %201 ], [ %192, %188 ]
  %254 = phi i32 [ %191, %208 ], [ %191, %211 ], [ %251, %223 ], [ %191, %204 ], [ %191, %201 ], [ %191, %188 ]
  %255 = add nuw nsw i64 %190, 1
  %256 = load i32, i32* %128, align 4
  %257 = sext i32 %256 to i64
  %258 = icmp slt i64 %255, %257
  br i1 %258, label %259, label %261

259:                                              ; preds = %252
  %260 = load i32, i32* %21, align 4
  br label %188

261:                                              ; preds = %252, %181
  %262 = phi i32 [ %182, %181 ], [ %253, %252 ]
  %263 = phi i32 [ %183, %181 ], [ %254, %252 ]
  %264 = icmp eq i32 %263, -1
  %265 = select i1 %264, i32 %109, i32 %263
  %266 = select i1 %264, i32 %108, i32 %111
  %267 = add nuw nsw i64 %107, 1
  %268 = icmp slt i64 %107, %105
  br i1 %268, label %106, label %269

269:                                              ; preds = %261
  %270 = icmp eq i32 %266, -1
  br i1 %270, label %1044, label %271

271:                                              ; preds = %269
  %272 = sext i32 %266 to i64
  %273 = sext i32 %265 to i64
  %274 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %272, i64 %273, i32 0
  %275 = load i16, i16* %274, align 4
  %276 = sext i16 %275 to i32
  %277 = add nsw i32 %46, %276
  %278 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %272, i64 %273, i32 1
  %279 = load i16, i16* %278, align 2
  %280 = sext i16 %279 to i32
  %281 = add nsw i32 %48, %280
  br label %282

282:                                              ; preds = %271, %55
  %283 = phi i32 [ %266, %271 ], [ %20, %55 ]
  %284 = phi i32 [ %265, %271 ], [ -1, %55 ]
  %285 = phi i32 [ %262, %271 ], [ %102, %55 ]
  %286 = phi i32 [ %281, %271 ], [ %48, %55 ]
  %287 = phi i32 [ %277, %271 ], [ %46, %55 ]
  %288 = zext i1 %49 to i32
  %289 = icmp slt i32 %283, %288
  br i1 %289, label %675, label %290

290:                                              ; preds = %282
  %291 = bitcast [3 x i32]* %10 to i8*
  %292 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %293 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 1
  %294 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  %295 = sext i32 %283 to i64
  %296 = zext i1 %49 to i64
  %297 = getelementptr inbounds [11 x i32], [11 x i32]* @bigdia_search.bigdia_num_candidates, i64 0, i64 %295
  br label %298

298:                                              ; preds = %666, %290
  %299 = phi i64 [ %671, %666 ], [ %295, %290 ]
  %300 = phi i32 [ %670, %666 ], [ %284, %290 ]
  %301 = phi i32 [ %669, %666 ], [ %285, %290 ]
  %302 = phi i32 [ %668, %666 ], [ %286, %290 ]
  %303 = phi i32 [ %667, %666 ], [ %287, %290 ]
  %304 = icmp eq i64 %299, %295
  %305 = and i1 %103, %304
  %306 = trunc i64 %299 to i32
  %307 = shl i32 1, %306
  br i1 %305, label %308, label %310

308:                                              ; preds = %298
  %309 = load i32, i32* %297, align 4
  br label %476

310:                                              ; preds = %298
  %311 = sub nsw i32 %303, %307
  %312 = load i32, i32* %25, align 4
  %313 = icmp sge i32 %311, %312
  %314 = add nsw i32 %303, %307
  %315 = load i32, i32* %27, align 4
  %316 = icmp sle i32 %314, %315
  %317 = and i1 %313, %316
  %318 = sub nsw i32 %302, %307
  %319 = load i32, i32* %21, align 4
  %320 = icmp sge i32 %318, %319
  %321 = and i1 %317, %320
  %322 = add nsw i32 %302, %307
  %323 = load i32, i32* %23, align 4
  %324 = icmp sle i32 %322, %323
  %325 = and i1 %321, %324
  %326 = getelementptr inbounds [11 x i32], [11 x i32]* @bigdia_search.bigdia_num_candidates, i64 0, i64 %299
  %327 = trunc i32 %303 to i16
  %328 = trunc i32 %302 to i16
  br i1 %325, label %329, label %388

329:                                              ; preds = %310, %381
  %330 = phi i64 [ %384, %381 ], [ 0, %310 ]
  %331 = phi i32 [ %383, %381 ], [ -1, %310 ]
  %332 = phi i32 [ %382, %381 ], [ %301, %310 ]
  %333 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %330, i32 0
  %334 = load i16, i16* %333, align 4
  %335 = add i16 %334, %327
  %336 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %330, i32 1
  %337 = load i16, i16* %336, align 2
  %338 = add i16 %337, %328
  %339 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %340 = load i8*, i8** %60, align 8
  %341 = load i32, i32* %62, align 8
  %342 = load i8*, i8** %64, align 8
  %343 = sext i16 %335 to i32
  %344 = load i32, i32* %67, align 8
  %345 = mul nsw i32 %344, %343
  %346 = sext i16 %338 to i32
  %347 = add nsw i32 %345, %346
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, i8* %342, i64 %348
  %350 = tail call i32 %339(i8* %340, i32 %341, i8* %349, i32 %344) #8
  %351 = icmp slt i32 %350, %332
  br i1 %351, label %352, label %381

352:                                              ; preds = %329
  %353 = sub i16 %335, %14
  %354 = sub i16 %338, %17
  %355 = icmp eq i16 %353, 0
  %356 = icmp eq i16 %354, 0
  %357 = xor i1 %356, true
  %358 = zext i1 %357 to i64
  %359 = select i1 %356, i64 2, i64 3
  %360 = select i1 %355, i64 %358, i64 %359
  %361 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = load i32*, i32** %79, align 8
  %364 = sext i16 %353 to i64
  %365 = getelementptr inbounds i32, i32* %363, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = add nsw i32 %366, %362
  %368 = load i32*, i32** %93, align 8
  %369 = sext i16 %354 to i64
  %370 = getelementptr inbounds i32, i32* %368, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = add nsw i32 %367, %371
  %373 = mul i32 %372, %3
  %374 = add i32 %373, 256
  %375 = lshr i32 %374, 9
  %376 = add nsw i32 %375, %350
  %377 = icmp slt i32 %376, %332
  %378 = select i1 %377, i32 %376, i32 %332
  %379 = trunc i64 %330 to i32
  %380 = select i1 %377, i32 %379, i32 %331
  br label %381

381:                                              ; preds = %352, %329
  %382 = phi i32 [ %332, %329 ], [ %378, %352 ]
  %383 = phi i32 [ %331, %329 ], [ %380, %352 ]
  %384 = add nuw nsw i64 %330, 1
  %385 = load i32, i32* %326, align 4
  %386 = sext i32 %385 to i64
  %387 = icmp slt i64 %384, %386
  br i1 %387, label %329, label %461

388:                                              ; preds = %310, %459
  %389 = phi i32 [ %460, %459 ], [ %319, %310 ]
  %390 = phi i64 [ %455, %459 ], [ 0, %310 ]
  %391 = phi i32 [ %454, %459 ], [ -1, %310 ]
  %392 = phi i32 [ %453, %459 ], [ %301, %310 ]
  %393 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %390, i32 0
  %394 = load i16, i16* %393, align 4
  %395 = add i16 %394, %327
  %396 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %390, i32 1
  %397 = load i16, i16* %396, align 2
  %398 = add i16 %397, %328
  %399 = sext i16 %398 to i32
  %400 = icmp sgt i32 %389, %399
  br i1 %400, label %452, label %401

401:                                              ; preds = %388
  %402 = load i32, i32* %23, align 4
  %403 = icmp slt i32 %402, %399
  br i1 %403, label %452, label %404

404:                                              ; preds = %401
  %405 = sext i16 %395 to i32
  %406 = load i32, i32* %25, align 4
  %407 = icmp sgt i32 %406, %405
  br i1 %407, label %452, label %408

408:                                              ; preds = %404
  %409 = load i32, i32* %27, align 4
  %410 = icmp slt i32 %409, %405
  br i1 %410, label %452, label %411

411:                                              ; preds = %408
  %412 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %413 = load i8*, i8** %60, align 8
  %414 = load i32, i32* %62, align 8
  %415 = load i8*, i8** %64, align 8
  %416 = load i32, i32* %67, align 8
  %417 = mul nsw i32 %416, %405
  %418 = add nsw i32 %417, %399
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %415, i64 %419
  %421 = tail call i32 %412(i8* %413, i32 %414, i8* %420, i32 %416) #8
  %422 = icmp slt i32 %421, %392
  br i1 %422, label %423, label %452

423:                                              ; preds = %411
  %424 = sub i16 %395, %14
  %425 = sub i16 %398, %17
  %426 = icmp eq i16 %424, 0
  %427 = icmp eq i16 %425, 0
  %428 = xor i1 %427, true
  %429 = zext i1 %428 to i64
  %430 = select i1 %427, i64 2, i64 3
  %431 = select i1 %426, i64 %429, i64 %430
  %432 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = load i32*, i32** %79, align 8
  %435 = sext i16 %424 to i64
  %436 = getelementptr inbounds i32, i32* %434, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = add nsw i32 %437, %433
  %439 = load i32*, i32** %93, align 8
  %440 = sext i16 %425 to i64
  %441 = getelementptr inbounds i32, i32* %439, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = add nsw i32 %438, %442
  %444 = mul i32 %443, %3
  %445 = add i32 %444, 256
  %446 = lshr i32 %445, 9
  %447 = add nsw i32 %446, %421
  %448 = icmp slt i32 %447, %392
  %449 = select i1 %448, i32 %447, i32 %392
  %450 = trunc i64 %390 to i32
  %451 = select i1 %448, i32 %450, i32 %391
  br label %452

452:                                              ; preds = %423, %411, %408, %404, %401, %388
  %453 = phi i32 [ %392, %408 ], [ %392, %411 ], [ %449, %423 ], [ %392, %404 ], [ %392, %401 ], [ %392, %388 ]
  %454 = phi i32 [ %391, %408 ], [ %391, %411 ], [ %451, %423 ], [ %391, %404 ], [ %391, %401 ], [ %391, %388 ]
  %455 = add nuw nsw i64 %390, 1
  %456 = load i32, i32* %326, align 4
  %457 = sext i32 %456 to i64
  %458 = icmp slt i64 %455, %457
  br i1 %458, label %459, label %461

459:                                              ; preds = %452
  %460 = load i32, i32* %21, align 4
  br label %388

461:                                              ; preds = %452, %381
  %462 = phi i32 [ %385, %381 ], [ %456, %452 ]
  %463 = phi i32 [ %382, %381 ], [ %453, %452 ]
  %464 = phi i32 [ %383, %381 ], [ %454, %452 ]
  %465 = icmp eq i32 %464, -1
  br i1 %465, label %666, label %466

466:                                              ; preds = %461
  %467 = sext i32 %464 to i64
  %468 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %467, i32 0
  %469 = load i16, i16* %468, align 4
  %470 = sext i16 %469 to i32
  %471 = add nsw i32 %303, %470
  %472 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %467, i32 1
  %473 = load i16, i16* %472, align 2
  %474 = sext i16 %473 to i32
  %475 = add nsw i32 %302, %474
  br label %476

476:                                              ; preds = %308, %466
  %477 = phi i32 [ %462, %466 ], [ %309, %308 ]
  %478 = phi i32 [ %471, %466 ], [ %303, %308 ]
  %479 = phi i32 [ %475, %466 ], [ %302, %308 ]
  %480 = phi i32 [ %463, %466 ], [ %301, %308 ]
  %481 = phi i32 [ %464, %466 ], [ %300, %308 ]
  %482 = add nsw i32 %477, -1
  br label %483

483:                                              ; preds = %653, %476
  %484 = phi i32 [ %478, %476 ], [ %661, %653 ]
  %485 = phi i32 [ %479, %476 ], [ %665, %653 ]
  %486 = phi i32 [ %480, %476 ], [ %649, %653 ]
  %487 = phi i32 [ %481, %476 ], [ %656, %653 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %291) #8
  %488 = icmp eq i32 %487, 0
  %489 = add nsw i32 %487, -1
  %490 = select i1 %488, i32 %482, i32 %489
  store i32 %490, i32* %292, align 4
  store i32 %487, i32* %293, align 4
  %491 = icmp eq i32 %487, %482
  %492 = add nsw i32 %487, 1
  %493 = select i1 %491, i32 0, i32 %492
  store i32 %493, i32* %294, align 4
  %494 = sub nsw i32 %484, %307
  %495 = load i32, i32* %25, align 4
  %496 = icmp sge i32 %494, %495
  %497 = add nsw i32 %484, %307
  %498 = load i32, i32* %27, align 4
  %499 = icmp sle i32 %497, %498
  %500 = and i1 %496, %499
  %501 = sub nsw i32 %485, %307
  %502 = load i32, i32* %21, align 4
  %503 = icmp sge i32 %501, %502
  %504 = and i1 %500, %503
  %505 = add nsw i32 %485, %307
  %506 = load i32, i32* %23, align 4
  %507 = icmp sle i32 %505, %506
  %508 = and i1 %504, %507
  %509 = trunc i32 %484 to i16
  %510 = trunc i32 %485 to i16
  br i1 %508, label %511, label %573

511:                                              ; preds = %483, %570
  %512 = phi i32 [ %572, %570 ], [ %490, %483 ]
  %513 = phi i64 [ %568, %570 ], [ 0, %483 ]
  %514 = phi i32 [ %567, %570 ], [ -1, %483 ]
  %515 = phi i32 [ %566, %570 ], [ %486, %483 ]
  %516 = sext i32 %512 to i64
  %517 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %516, i32 0
  %518 = load i16, i16* %517, align 4
  %519 = add i16 %518, %509
  %520 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %516, i32 1
  %521 = load i16, i16* %520, align 2
  %522 = add i16 %521, %510
  %523 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %524 = load i8*, i8** %60, align 8
  %525 = load i32, i32* %62, align 8
  %526 = load i8*, i8** %64, align 8
  %527 = sext i16 %519 to i32
  %528 = load i32, i32* %67, align 8
  %529 = mul nsw i32 %528, %527
  %530 = sext i16 %522 to i32
  %531 = add nsw i32 %529, %530
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %526, i64 %532
  %534 = tail call i32 %523(i8* %524, i32 %525, i8* %533, i32 %528) #8
  %535 = icmp slt i32 %534, %515
  br i1 %535, label %536, label %565

536:                                              ; preds = %511
  %537 = sub i16 %519, %14
  %538 = sub i16 %522, %17
  %539 = icmp eq i16 %537, 0
  %540 = icmp eq i16 %538, 0
  %541 = xor i1 %540, true
  %542 = zext i1 %541 to i64
  %543 = select i1 %540, i64 2, i64 3
  %544 = select i1 %539, i64 %542, i64 %543
  %545 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %544
  %546 = load i32, i32* %545, align 4
  %547 = load i32*, i32** %79, align 8
  %548 = sext i16 %537 to i64
  %549 = getelementptr inbounds i32, i32* %547, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = add nsw i32 %550, %546
  %552 = load i32*, i32** %93, align 8
  %553 = sext i16 %538 to i64
  %554 = getelementptr inbounds i32, i32* %552, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = add nsw i32 %551, %555
  %557 = mul i32 %556, %3
  %558 = add i32 %557, 256
  %559 = lshr i32 %558, 9
  %560 = add nsw i32 %559, %534
  %561 = icmp slt i32 %560, %515
  %562 = select i1 %561, i32 %560, i32 %515
  %563 = trunc i64 %513 to i32
  %564 = select i1 %561, i32 %563, i32 %514
  br label %565

565:                                              ; preds = %536, %511
  %566 = phi i32 [ %515, %511 ], [ %562, %536 ]
  %567 = phi i32 [ %514, %511 ], [ %564, %536 ]
  %568 = add nuw nsw i64 %513, 1
  %569 = icmp eq i64 %568, 3
  br i1 %569, label %648, label %570

570:                                              ; preds = %565
  %571 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 %568
  %572 = load i32, i32* %571, align 4
  br label %511

573:                                              ; preds = %483, %644
  %574 = phi i32 [ %647, %644 ], [ %502, %483 ]
  %575 = phi i32 [ %646, %644 ], [ %490, %483 ]
  %576 = phi i64 [ %642, %644 ], [ 0, %483 ]
  %577 = phi i32 [ %641, %644 ], [ -1, %483 ]
  %578 = phi i32 [ %640, %644 ], [ %486, %483 ]
  %579 = sext i32 %575 to i64
  %580 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %579, i32 0
  %581 = load i16, i16* %580, align 4
  %582 = add i16 %581, %509
  %583 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %579, i32 1
  %584 = load i16, i16* %583, align 2
  %585 = add i16 %584, %510
  %586 = sext i16 %585 to i32
  %587 = icmp sgt i32 %574, %586
  br i1 %587, label %639, label %588

588:                                              ; preds = %573
  %589 = load i32, i32* %23, align 4
  %590 = icmp slt i32 %589, %586
  br i1 %590, label %639, label %591

591:                                              ; preds = %588
  %592 = sext i16 %582 to i32
  %593 = load i32, i32* %25, align 4
  %594 = icmp sgt i32 %593, %592
  br i1 %594, label %639, label %595

595:                                              ; preds = %591
  %596 = load i32, i32* %27, align 4
  %597 = icmp slt i32 %596, %592
  br i1 %597, label %639, label %598

598:                                              ; preds = %595
  %599 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %600 = load i8*, i8** %60, align 8
  %601 = load i32, i32* %62, align 8
  %602 = load i8*, i8** %64, align 8
  %603 = load i32, i32* %67, align 8
  %604 = mul nsw i32 %603, %592
  %605 = add nsw i32 %604, %586
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds i8, i8* %602, i64 %606
  %608 = tail call i32 %599(i8* %600, i32 %601, i8* %607, i32 %603) #8
  %609 = icmp slt i32 %608, %578
  br i1 %609, label %610, label %639

610:                                              ; preds = %598
  %611 = sub i16 %582, %14
  %612 = sub i16 %585, %17
  %613 = icmp eq i16 %611, 0
  %614 = icmp eq i16 %612, 0
  %615 = xor i1 %614, true
  %616 = zext i1 %615 to i64
  %617 = select i1 %614, i64 2, i64 3
  %618 = select i1 %613, i64 %616, i64 %617
  %619 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %618
  %620 = load i32, i32* %619, align 4
  %621 = load i32*, i32** %79, align 8
  %622 = sext i16 %611 to i64
  %623 = getelementptr inbounds i32, i32* %621, i64 %622
  %624 = load i32, i32* %623, align 4
  %625 = add nsw i32 %624, %620
  %626 = load i32*, i32** %93, align 8
  %627 = sext i16 %612 to i64
  %628 = getelementptr inbounds i32, i32* %626, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = add nsw i32 %625, %629
  %631 = mul i32 %630, %3
  %632 = add i32 %631, 256
  %633 = lshr i32 %632, 9
  %634 = add nsw i32 %633, %608
  %635 = icmp slt i32 %634, %578
  %636 = select i1 %635, i32 %634, i32 %578
  %637 = trunc i64 %576 to i32
  %638 = select i1 %635, i32 %637, i32 %577
  br label %639

639:                                              ; preds = %610, %598, %595, %591, %588, %573
  %640 = phi i32 [ %578, %595 ], [ %578, %598 ], [ %636, %610 ], [ %578, %591 ], [ %578, %588 ], [ %578, %573 ]
  %641 = phi i32 [ %577, %595 ], [ %577, %598 ], [ %638, %610 ], [ %577, %591 ], [ %577, %588 ], [ %577, %573 ]
  %642 = add nuw nsw i64 %576, 1
  %643 = icmp eq i64 %642, 3
  br i1 %643, label %648, label %644

644:                                              ; preds = %639
  %645 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 %642
  %646 = load i32, i32* %645, align 4
  %647 = load i32, i32* %21, align 4
  br label %573

648:                                              ; preds = %639, %565
  %649 = phi i32 [ %566, %565 ], [ %640, %639 ]
  %650 = phi i32 [ %567, %565 ], [ %641, %639 ]
  %651 = icmp eq i32 %650, -1
  br i1 %651, label %652, label %653

652:                                              ; preds = %648
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %291) #8
  br label %666

653:                                              ; preds = %648
  %654 = sext i32 %650 to i64
  %655 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 %654
  %656 = load i32, i32* %655, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %657, i32 0
  %659 = load i16, i16* %658, align 4
  %660 = sext i16 %659 to i32
  %661 = add nsw i32 %484, %660
  %662 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 %299, i64 %657, i32 1
  %663 = load i16, i16* %662, align 2
  %664 = sext i16 %663 to i32
  %665 = add nsw i32 %485, %664
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %291) #8
  br label %483

666:                                              ; preds = %652, %461
  %667 = phi i32 [ %303, %461 ], [ %484, %652 ]
  %668 = phi i32 [ %302, %461 ], [ %485, %652 ]
  %669 = phi i32 [ %463, %461 ], [ %649, %652 ]
  %670 = phi i32 [ %300, %461 ], [ %487, %652 ]
  %671 = add nsw i64 %299, -1
  %672 = icmp sgt i64 %299, %296
  br i1 %672, label %298, label %673

673:                                              ; preds = %666
  %674 = trunc i64 %671 to i32
  br label %675

675:                                              ; preds = %673, %282
  %676 = phi i32 [ %283, %282 ], [ %674, %673 ]
  %677 = phi i32 [ %287, %282 ], [ %667, %673 ]
  %678 = phi i32 [ %286, %282 ], [ %668, %673 ]
  %679 = phi i32 [ %285, %282 ], [ %669, %673 ]
  %680 = icmp eq i32 %676, 0
  br i1 %680, label %681, label %1044

681:                                              ; preds = %675
  store i32 %679, i32* %5, align 4
  %682 = icmp eq i32 %283, 0
  %683 = and i1 %103, %682
  br i1 %683, label %1044, label %684

684:                                              ; preds = %681
  %685 = load i32, i32* %25, align 4
  %686 = icmp sgt i32 %677, %685
  %687 = load i32, i32* %27, align 4
  %688 = icmp slt i32 %677, %687
  %689 = and i1 %686, %688
  %690 = load i32, i32* %21, align 4
  %691 = icmp sgt i32 %678, %690
  %692 = and i1 %689, %691
  %693 = load i32, i32* %23, align 4
  %694 = icmp slt i32 %678, %693
  %695 = and i1 %692, %694
  %696 = trunc i32 %677 to i16
  %697 = trunc i32 %678 to i16
  br i1 %695, label %698, label %756

698:                                              ; preds = %684, %752
  %699 = phi i64 [ %720, %752 ], [ 0, %684 ]
  %700 = phi i32 [ %754, %752 ], [ -1, %684 ]
  %701 = phi i32 [ %753, %752 ], [ %679, %684 ]
  %702 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %699, i32 0
  %703 = load i16, i16* %702, align 4
  %704 = add i16 %703, %696
  %705 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %699, i32 1
  %706 = load i16, i16* %705, align 2
  %707 = add i16 %706, %697
  %708 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %709 = load i8*, i8** %60, align 8
  %710 = load i32, i32* %62, align 8
  %711 = load i8*, i8** %64, align 8
  %712 = sext i16 %704 to i32
  %713 = load i32, i32* %67, align 8
  %714 = mul nsw i32 %713, %712
  %715 = sext i16 %707 to i32
  %716 = add nsw i32 %714, %715
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds i8, i8* %711, i64 %717
  %719 = tail call i32 %708(i8* %709, i32 %710, i8* %718, i32 %713) #8
  %720 = add nuw nsw i64 %699, 1
  %721 = getelementptr inbounds i32, i32* %5, i64 %720
  store i32 %719, i32* %721, align 4
  %722 = icmp slt i32 %719, %701
  br i1 %722, label %723, label %752

723:                                              ; preds = %698
  %724 = sub i16 %704, %14
  %725 = sub i16 %707, %17
  %726 = icmp eq i16 %724, 0
  %727 = icmp eq i16 %725, 0
  %728 = xor i1 %727, true
  %729 = zext i1 %728 to i64
  %730 = select i1 %727, i64 2, i64 3
  %731 = select i1 %726, i64 %729, i64 %730
  %732 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %731
  %733 = load i32, i32* %732, align 4
  %734 = load i32*, i32** %79, align 8
  %735 = sext i16 %724 to i64
  %736 = getelementptr inbounds i32, i32* %734, i64 %735
  %737 = load i32, i32* %736, align 4
  %738 = add nsw i32 %737, %733
  %739 = load i32*, i32** %93, align 8
  %740 = sext i16 %725 to i64
  %741 = getelementptr inbounds i32, i32* %739, i64 %740
  %742 = load i32, i32* %741, align 4
  %743 = add nsw i32 %738, %742
  %744 = mul i32 %743, %3
  %745 = add i32 %744, 256
  %746 = lshr i32 %745, 9
  %747 = add nsw i32 %746, %719
  %748 = icmp slt i32 %747, %701
  %749 = select i1 %748, i32 %747, i32 %701
  %750 = trunc i64 %699 to i32
  %751 = select i1 %748, i32 %750, i32 %700
  br label %752

752:                                              ; preds = %723, %698
  %753 = phi i32 [ %701, %698 ], [ %749, %723 ]
  %754 = phi i32 [ %700, %698 ], [ %751, %723 ]
  %755 = icmp eq i64 %720, 4
  br i1 %755, label %829, label %698

756:                                              ; preds = %684, %827
  %757 = phi i32 [ %828, %827 ], [ %690, %684 ]
  %758 = phi i64 [ %825, %827 ], [ 0, %684 ]
  %759 = phi i32 [ %824, %827 ], [ -1, %684 ]
  %760 = phi i32 [ %823, %827 ], [ %679, %684 ]
  %761 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %758, i32 0
  %762 = load i16, i16* %761, align 4
  %763 = add i16 %762, %696
  %764 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %758, i32 1
  %765 = load i16, i16* %764, align 2
  %766 = add i16 %765, %697
  %767 = sext i16 %766 to i32
  %768 = icmp sgt i32 %757, %767
  br i1 %768, label %822, label %769

769:                                              ; preds = %756
  %770 = load i32, i32* %23, align 4
  %771 = icmp slt i32 %770, %767
  br i1 %771, label %822, label %772

772:                                              ; preds = %769
  %773 = sext i16 %763 to i32
  %774 = load i32, i32* %25, align 4
  %775 = icmp sgt i32 %774, %773
  br i1 %775, label %822, label %776

776:                                              ; preds = %772
  %777 = load i32, i32* %27, align 4
  %778 = icmp slt i32 %777, %773
  br i1 %778, label %822, label %779

779:                                              ; preds = %776
  %780 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %781 = load i8*, i8** %60, align 8
  %782 = load i32, i32* %62, align 8
  %783 = load i8*, i8** %64, align 8
  %784 = load i32, i32* %67, align 8
  %785 = mul nsw i32 %784, %773
  %786 = add nsw i32 %785, %767
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds i8, i8* %783, i64 %787
  %789 = tail call i32 %780(i8* %781, i32 %782, i8* %788, i32 %784) #8
  %790 = add nuw nsw i64 %758, 1
  %791 = getelementptr inbounds i32, i32* %5, i64 %790
  store i32 %789, i32* %791, align 4
  %792 = icmp slt i32 %789, %760
  br i1 %792, label %793, label %822

793:                                              ; preds = %779
  %794 = sub i16 %763, %14
  %795 = sub i16 %766, %17
  %796 = icmp eq i16 %794, 0
  %797 = icmp eq i16 %795, 0
  %798 = xor i1 %797, true
  %799 = zext i1 %798 to i64
  %800 = select i1 %797, i64 2, i64 3
  %801 = select i1 %796, i64 %799, i64 %800
  %802 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %801
  %803 = load i32, i32* %802, align 4
  %804 = load i32*, i32** %79, align 8
  %805 = sext i16 %794 to i64
  %806 = getelementptr inbounds i32, i32* %804, i64 %805
  %807 = load i32, i32* %806, align 4
  %808 = add nsw i32 %807, %803
  %809 = load i32*, i32** %93, align 8
  %810 = sext i16 %795 to i64
  %811 = getelementptr inbounds i32, i32* %809, i64 %810
  %812 = load i32, i32* %811, align 4
  %813 = add nsw i32 %808, %812
  %814 = mul i32 %813, %3
  %815 = add i32 %814, 256
  %816 = lshr i32 %815, 9
  %817 = add nsw i32 %816, %789
  %818 = icmp slt i32 %817, %760
  %819 = select i1 %818, i32 %817, i32 %760
  %820 = trunc i64 %758 to i32
  %821 = select i1 %818, i32 %820, i32 %759
  br label %822

822:                                              ; preds = %793, %779, %776, %772, %769, %756
  %823 = phi i32 [ %760, %776 ], [ %760, %779 ], [ %819, %793 ], [ %760, %772 ], [ %760, %769 ], [ %760, %756 ]
  %824 = phi i32 [ %759, %776 ], [ %759, %779 ], [ %821, %793 ], [ %759, %772 ], [ %759, %769 ], [ %759, %756 ]
  %825 = add nuw nsw i64 %758, 1
  %826 = icmp eq i64 %825, 4
  br i1 %826, label %829, label %827

827:                                              ; preds = %822
  %828 = load i32, i32* %21, align 4
  br label %756

829:                                              ; preds = %822, %752
  %830 = phi i32 [ %753, %752 ], [ %823, %822 ]
  %831 = phi i32 [ %754, %752 ], [ %824, %822 ]
  %832 = icmp eq i32 %831, -1
  br i1 %832, label %1044, label %833

833:                                              ; preds = %829
  %834 = sext i32 %831 to i64
  %835 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %834, i32 0
  %836 = load i16, i16* %835, align 4
  %837 = sext i16 %836 to i32
  %838 = add nsw i32 %677, %837
  %839 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %834, i32 1
  %840 = load i16, i16* %839, align 2
  %841 = sext i16 %840 to i32
  %842 = add nsw i32 %678, %841
  %843 = bitcast [3 x i32]* %11 to i8*
  %844 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 0
  %845 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 1
  %846 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 2
  %847 = getelementptr inbounds i32, i32* %5, i64 1
  %848 = bitcast i32* %847 to <4 x i32>*
  br label %849

849:                                              ; preds = %1030, %833
  %850 = phi i32 [ %831, %833 ], [ %1033, %1030 ]
  %851 = phi i32 [ %830, %833 ], [ %1027, %1030 ]
  %852 = phi i32 [ %842, %833 ], [ %1042, %1030 ]
  %853 = phi i32 [ %838, %833 ], [ %1038, %1030 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %843) #8
  %854 = icmp eq i32 %850, 0
  %855 = add nsw i32 %850, -1
  %856 = select i1 %854, i32 3, i32 %855
  store i32 %856, i32* %844, align 4
  store i32 %850, i32* %845, align 4
  %857 = icmp eq i32 %850, 3
  %858 = add nsw i32 %850, 1
  %859 = select i1 %857, i32 0, i32 %858
  store i32 %859, i32* %846, align 4
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %848, align 4
  %860 = load i32, i32* %5, align 4
  %861 = add nsw i32 %850, 2
  %862 = srem i32 %861, 4
  %863 = add nsw i32 %862, 1
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds i32, i32* %5, i64 %864
  store i32 %860, i32* %865, align 4
  store i32 %851, i32* %5, align 4
  %866 = load i32, i32* %25, align 4
  %867 = icmp sgt i32 %853, %866
  %868 = load i32, i32* %27, align 4
  %869 = icmp slt i32 %853, %868
  %870 = and i1 %867, %869
  %871 = load i32, i32* %21, align 4
  %872 = icmp sgt i32 %852, %871
  %873 = and i1 %870, %872
  %874 = load i32, i32* %23, align 4
  %875 = icmp slt i32 %852, %874
  %876 = and i1 %873, %875
  %877 = trunc i32 %853 to i16
  %878 = trunc i32 %852 to i16
  br i1 %876, label %879, label %944

879:                                              ; preds = %849, %941
  %880 = phi i32 [ %943, %941 ], [ %856, %849 ]
  %881 = phi i64 [ %939, %941 ], [ 0, %849 ]
  %882 = phi i32 [ %938, %941 ], [ -1, %849 ]
  %883 = phi i32 [ %937, %941 ], [ %851, %849 ]
  %884 = sext i32 %880 to i64
  %885 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %884, i32 0
  %886 = load i16, i16* %885, align 4
  %887 = add i16 %886, %877
  %888 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %884, i32 1
  %889 = load i16, i16* %888, align 2
  %890 = add i16 %889, %878
  %891 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %892 = load i8*, i8** %60, align 8
  %893 = load i32, i32* %62, align 8
  %894 = load i8*, i8** %64, align 8
  %895 = sext i16 %887 to i32
  %896 = load i32, i32* %67, align 8
  %897 = mul nsw i32 %896, %895
  %898 = sext i16 %890 to i32
  %899 = add nsw i32 %897, %898
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds i8, i8* %894, i64 %900
  %902 = tail call i32 %891(i8* %892, i32 %893, i8* %901, i32 %896) #8
  %903 = add nsw i32 %880, 1
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds i32, i32* %5, i64 %904
  store i32 %902, i32* %905, align 4
  %906 = icmp slt i32 %902, %883
  br i1 %906, label %907, label %936

907:                                              ; preds = %879
  %908 = sub i16 %887, %14
  %909 = sub i16 %890, %17
  %910 = icmp eq i16 %908, 0
  %911 = icmp eq i16 %909, 0
  %912 = xor i1 %911, true
  %913 = zext i1 %912 to i64
  %914 = select i1 %911, i64 2, i64 3
  %915 = select i1 %910, i64 %913, i64 %914
  %916 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %915
  %917 = load i32, i32* %916, align 4
  %918 = load i32*, i32** %79, align 8
  %919 = sext i16 %908 to i64
  %920 = getelementptr inbounds i32, i32* %918, i64 %919
  %921 = load i32, i32* %920, align 4
  %922 = add nsw i32 %921, %917
  %923 = load i32*, i32** %93, align 8
  %924 = sext i16 %909 to i64
  %925 = getelementptr inbounds i32, i32* %923, i64 %924
  %926 = load i32, i32* %925, align 4
  %927 = add nsw i32 %922, %926
  %928 = mul i32 %927, %3
  %929 = add i32 %928, 256
  %930 = lshr i32 %929, 9
  %931 = add nsw i32 %930, %902
  %932 = icmp slt i32 %931, %883
  %933 = select i1 %932, i32 %931, i32 %883
  %934 = trunc i64 %881 to i32
  %935 = select i1 %932, i32 %934, i32 %882
  br label %936

936:                                              ; preds = %907, %879
  %937 = phi i32 [ %883, %879 ], [ %933, %907 ]
  %938 = phi i32 [ %882, %879 ], [ %935, %907 ]
  %939 = add nuw nsw i64 %881, 1
  %940 = icmp eq i64 %939, 3
  br i1 %940, label %1026, label %941

941:                                              ; preds = %936
  %942 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 %939
  %943 = load i32, i32* %942, align 4
  br label %879

944:                                              ; preds = %849, %1022
  %945 = phi i32 [ %1025, %1022 ], [ %871, %849 ]
  %946 = phi i32 [ %1024, %1022 ], [ %856, %849 ]
  %947 = phi i64 [ %1020, %1022 ], [ 0, %849 ]
  %948 = phi i32 [ %1019, %1022 ], [ -1, %849 ]
  %949 = phi i32 [ %1018, %1022 ], [ %851, %849 ]
  %950 = sext i32 %946 to i64
  %951 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %950, i32 0
  %952 = load i16, i16* %951, align 4
  %953 = add i16 %952, %877
  %954 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %950, i32 1
  %955 = load i16, i16* %954, align 2
  %956 = add i16 %955, %878
  %957 = sext i16 %956 to i32
  %958 = icmp sgt i32 %945, %957
  br i1 %958, label %969, label %959

959:                                              ; preds = %944
  %960 = load i32, i32* %23, align 4
  %961 = icmp slt i32 %960, %957
  br i1 %961, label %969, label %962

962:                                              ; preds = %959
  %963 = sext i16 %953 to i32
  %964 = load i32, i32* %25, align 4
  %965 = icmp sgt i32 %964, %963
  br i1 %965, label %969, label %966

966:                                              ; preds = %962
  %967 = load i32, i32* %27, align 4
  %968 = icmp slt i32 %967, %963
  br i1 %968, label %969, label %973

969:                                              ; preds = %966, %962, %959, %944
  %970 = add nsw i32 %946, 1
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds i32, i32* %5, i64 %971
  store i32 2147483647, i32* %972, align 4
  br label %1017

973:                                              ; preds = %966
  %974 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %975 = load i8*, i8** %60, align 8
  %976 = load i32, i32* %62, align 8
  %977 = load i8*, i8** %64, align 8
  %978 = load i32, i32* %67, align 8
  %979 = mul nsw i32 %978, %963
  %980 = add nsw i32 %979, %957
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds i8, i8* %977, i64 %981
  %983 = tail call i32 %974(i8* %975, i32 %976, i8* %982, i32 %978) #8
  %984 = add nsw i32 %946, 1
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds i32, i32* %5, i64 %985
  store i32 %983, i32* %986, align 4
  %987 = icmp slt i32 %983, %949
  br i1 %987, label %988, label %1017

988:                                              ; preds = %973
  %989 = sub i16 %953, %14
  %990 = sub i16 %956, %17
  %991 = icmp eq i16 %989, 0
  %992 = icmp eq i16 %990, 0
  %993 = xor i1 %992, true
  %994 = zext i1 %993 to i64
  %995 = select i1 %992, i64 2, i64 3
  %996 = select i1 %991, i64 %994, i64 %995
  %997 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %996
  %998 = load i32, i32* %997, align 4
  %999 = load i32*, i32** %79, align 8
  %1000 = sext i16 %989 to i64
  %1001 = getelementptr inbounds i32, i32* %999, i64 %1000
  %1002 = load i32, i32* %1001, align 4
  %1003 = add nsw i32 %1002, %998
  %1004 = load i32*, i32** %93, align 8
  %1005 = sext i16 %990 to i64
  %1006 = getelementptr inbounds i32, i32* %1004, i64 %1005
  %1007 = load i32, i32* %1006, align 4
  %1008 = add nsw i32 %1003, %1007
  %1009 = mul i32 %1008, %3
  %1010 = add i32 %1009, 256
  %1011 = lshr i32 %1010, 9
  %1012 = add nsw i32 %1011, %983
  %1013 = icmp slt i32 %1012, %949
  %1014 = select i1 %1013, i32 %1012, i32 %949
  %1015 = trunc i64 %947 to i32
  %1016 = select i1 %1013, i32 %1015, i32 %948
  br label %1017

1017:                                             ; preds = %988, %973, %969
  %1018 = phi i32 [ %949, %969 ], [ %949, %973 ], [ %1014, %988 ]
  %1019 = phi i32 [ %948, %969 ], [ %948, %973 ], [ %1016, %988 ]
  %1020 = add nuw nsw i64 %947, 1
  %1021 = icmp eq i64 %1020, 3
  br i1 %1021, label %1026, label %1022

1022:                                             ; preds = %1017
  %1023 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 %1020
  %1024 = load i32, i32* %1023, align 4
  %1025 = load i32, i32* %21, align 4
  br label %944

1026:                                             ; preds = %1017, %936
  %1027 = phi i32 [ %937, %936 ], [ %1018, %1017 ]
  %1028 = phi i32 [ %938, %936 ], [ %1019, %1017 ]
  %1029 = icmp eq i32 %1028, -1
  br i1 %1029, label %1043, label %1030

1030:                                             ; preds = %1026
  %1031 = sext i32 %1028 to i64
  %1032 = getelementptr inbounds [3 x i32], [3 x i32]* %11, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %1034, i32 0
  %1036 = load i16, i16* %1035, align 4
  %1037 = sext i16 %1036 to i32
  %1038 = add nsw i32 %853, %1037
  %1039 = getelementptr inbounds [11 x [8 x %struct.mv]], [11 x [8 x %struct.mv]]* @bigdia_search.bigdia_candidates, i64 0, i64 0, i64 %1034, i32 1
  %1040 = load i16, i16* %1039, align 2
  %1041 = sext i16 %1040 to i32
  %1042 = add nsw i32 %852, %1041
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %843) #8
  br label %849

1043:                                             ; preds = %1026
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %843) #8
  br label %1044

1044:                                             ; preds = %1043, %829, %681, %675, %269
  %1045 = phi i32 [ %677, %675 ], [ %46, %269 ], [ %853, %1043 ], [ %677, %829 ], [ %677, %681 ]
  %1046 = phi i32 [ %678, %675 ], [ %48, %269 ], [ %852, %1043 ], [ %678, %829 ], [ %678, %681 ]
  %1047 = phi i32 [ %679, %675 ], [ %262, %269 ], [ %1027, %1043 ], [ %830, %829 ], [ %679, %681 ]
  br i1 %49, label %1051, label %1048

1048:                                             ; preds = %1044
  %1049 = trunc i32 %1045 to i16
  %1050 = trunc i32 %1046 to i16
  br label %1280

1051:                                             ; preds = %1044
  %1052 = load i32, i32* %5, align 4
  %1053 = icmp eq i32 %1052, 2147483647
  br i1 %1053, label %1062, label %1054

1054:                                             ; preds = %1051
  %1055 = trunc i32 %1046 to i16
  %1056 = trunc i32 %1045 to i16
  %1057 = sub i16 %1056, %14
  %1058 = sub i16 %1055, %17
  %1059 = getelementptr inbounds i32, i32* %5, i64 1
  %1060 = load i32, i32* %1059, align 4
  %1061 = icmp eq i32 %1060, 2147483647
  br i1 %1061, label %1196, label %1172

1062:                                             ; preds = %1051
  store i32 %1047, i32* %5, align 4
  %1063 = load i32, i32* %25, align 4
  %1064 = icmp sgt i32 %1045, %1063
  %1065 = load i32, i32* %27, align 4
  %1066 = icmp slt i32 %1045, %1065
  %1067 = and i1 %1064, %1066
  %1068 = load i32, i32* %21, align 4
  %1069 = icmp sgt i32 %1046, %1068
  %1070 = and i1 %1067, %1069
  %1071 = load i32, i32* %23, align 4
  %1072 = icmp slt i32 %1046, %1071
  %1073 = and i1 %1070, %1072
  %1074 = trunc i32 %1045 to i16
  %1075 = trunc i32 %1046 to i16
  br i1 %1073, label %1076, label %1133

1076:                                             ; preds = %1062
  %1077 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %1078 = load i8*, i8** %60, align 8
  %1079 = load i32, i32* %62, align 8
  %1080 = load i8*, i8** %64, align 8
  %1081 = shl i32 %1045, 16
  %1082 = ashr exact i32 %1081, 16
  %1083 = load i32, i32* %67, align 8
  %1084 = mul nsw i32 %1083, %1082
  %1085 = shl i32 %1046, 16
  %1086 = add i32 %1085, -65536
  %1087 = ashr exact i32 %1086, 16
  %1088 = add nsw i32 %1084, %1087
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, i8* %1080, i64 %1089
  %1091 = tail call i32 %1077(i8* %1078, i32 %1079, i8* %1090, i32 %1083) #8
  %1092 = getelementptr inbounds i32, i32* %5, i64 1
  store i32 %1091, i32* %1092, align 4
  %1093 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %1094 = load i8*, i8** %60, align 8
  %1095 = load i32, i32* %62, align 8
  %1096 = load i8*, i8** %64, align 8
  %1097 = add i32 %1081, 65536
  %1098 = ashr exact i32 %1097, 16
  %1099 = load i32, i32* %67, align 8
  %1100 = mul nsw i32 %1099, %1098
  %1101 = ashr exact i32 %1085, 16
  %1102 = add nsw i32 %1100, %1101
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds i8, i8* %1096, i64 %1103
  %1105 = tail call i32 %1093(i8* %1094, i32 %1095, i8* %1104, i32 %1099) #8
  %1106 = getelementptr inbounds i32, i32* %5, i64 2
  store i32 %1105, i32* %1106, align 4
  %1107 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %1108 = load i8*, i8** %60, align 8
  %1109 = load i32, i32* %62, align 8
  %1110 = load i8*, i8** %64, align 8
  %1111 = load i32, i32* %67, align 8
  %1112 = mul nsw i32 %1111, %1082
  %1113 = add i32 %1085, 65536
  %1114 = ashr exact i32 %1113, 16
  %1115 = add nsw i32 %1112, %1114
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds i8, i8* %1110, i64 %1116
  %1118 = tail call i32 %1107(i8* %1108, i32 %1109, i8* %1117, i32 %1111) #8
  %1119 = getelementptr inbounds i32, i32* %5, i64 3
  store i32 %1118, i32* %1119, align 4
  %1120 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %1121 = load i8*, i8** %60, align 8
  %1122 = load i32, i32* %62, align 8
  %1123 = load i8*, i8** %64, align 8
  %1124 = add i32 %1081, -65536
  %1125 = ashr exact i32 %1124, 16
  %1126 = load i32, i32* %67, align 8
  %1127 = mul nsw i32 %1126, %1125
  %1128 = add nsw i32 %1127, %1101
  %1129 = sext i32 %1128 to i64
  %1130 = getelementptr inbounds i8, i8* %1123, i64 %1129
  %1131 = tail call i32 %1120(i8* %1121, i32 %1122, i8* %1130, i32 %1126) #8
  %1132 = getelementptr inbounds i32, i32* %5, i64 4
  store i32 %1131, i32* %1132, align 4
  br label %1280

1133:                                             ; preds = %1062, %1170
  %1134 = phi i32 [ %1171, %1170 ], [ %1068, %1062 ]
  %1135 = phi i64 [ %1167, %1170 ], [ 0, %1062 ]
  %1136 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %1135, i32 0
  %1137 = load i16, i16* %1136, align 4
  %1138 = add i16 %1137, %1074
  %1139 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %1135, i32 1
  %1140 = load i16, i16* %1139, align 2
  %1141 = add i16 %1140, %1075
  %1142 = sext i16 %1141 to i32
  %1143 = icmp sgt i32 %1134, %1142
  br i1 %1143, label %1165, label %1144

1144:                                             ; preds = %1133
  %1145 = load i32, i32* %23, align 4
  %1146 = icmp slt i32 %1145, %1142
  br i1 %1146, label %1165, label %1147

1147:                                             ; preds = %1144
  %1148 = sext i16 %1138 to i32
  %1149 = load i32, i32* %25, align 4
  %1150 = icmp sgt i32 %1149, %1148
  br i1 %1150, label %1165, label %1151

1151:                                             ; preds = %1147
  %1152 = load i32, i32* %27, align 4
  %1153 = icmp slt i32 %1152, %1148
  br i1 %1153, label %1165, label %1154

1154:                                             ; preds = %1151
  %1155 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %58, align 8
  %1156 = load i8*, i8** %60, align 8
  %1157 = load i32, i32* %62, align 8
  %1158 = load i8*, i8** %64, align 8
  %1159 = load i32, i32* %67, align 8
  %1160 = mul nsw i32 %1159, %1148
  %1161 = add nsw i32 %1160, %1142
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds i8, i8* %1158, i64 %1162
  %1164 = tail call i32 %1155(i8* %1156, i32 %1157, i8* %1163, i32 %1159) #8
  br label %1165

1165:                                             ; preds = %1133, %1144, %1147, %1151, %1154
  %1166 = phi i32 [ %1164, %1154 ], [ 2147483647, %1151 ], [ 2147483647, %1147 ], [ 2147483647, %1144 ], [ 2147483647, %1133 ]
  %1167 = add nuw nsw i64 %1135, 1
  %1168 = getelementptr inbounds i32, i32* %5, i64 %1167
  store i32 %1166, i32* %1168, align 4
  %1169 = icmp eq i64 %1167, 4
  br i1 %1169, label %1280, label %1170

1170:                                             ; preds = %1165
  %1171 = load i32, i32* %21, align 4
  br label %1133

1172:                                             ; preds = %1054
  %1173 = add i16 %1058, -1
  %1174 = icmp eq i16 %1057, 0
  %1175 = icmp eq i16 %1173, 0
  %1176 = xor i1 %1175, true
  %1177 = zext i1 %1176 to i64
  %1178 = select i1 %1175, i64 2, i64 3
  %1179 = select i1 %1174, i64 %1177, i64 %1178
  %1180 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %1179
  %1181 = load i32, i32* %1180, align 4
  %1182 = load i32*, i32** %79, align 8
  %1183 = sext i16 %1057 to i64
  %1184 = getelementptr inbounds i32, i32* %1182, i64 %1183
  %1185 = load i32, i32* %1184, align 4
  %1186 = add nsw i32 %1185, %1181
  %1187 = load i32*, i32** %93, align 8
  %1188 = sext i16 %1173 to i64
  %1189 = getelementptr inbounds i32, i32* %1187, i64 %1188
  %1190 = load i32, i32* %1189, align 4
  %1191 = add nsw i32 %1186, %1190
  %1192 = mul i32 %1191, %3
  %1193 = add i32 %1192, 256
  %1194 = lshr i32 %1193, 9
  %1195 = add nsw i32 %1194, %1060
  store i32 %1195, i32* %1059, align 4
  br label %1196

1196:                                             ; preds = %1172, %1054
  %1197 = getelementptr inbounds i32, i32* %5, i64 2
  %1198 = load i32, i32* %1197, align 4
  %1199 = icmp eq i32 %1198, 2147483647
  br i1 %1199, label %1224, label %1200

1200:                                             ; preds = %1196
  %1201 = add i16 %1057, 1
  %1202 = icmp eq i16 %1201, 0
  %1203 = icmp eq i16 %1058, 0
  %1204 = xor i1 %1203, true
  %1205 = zext i1 %1204 to i64
  %1206 = select i1 %1203, i64 2, i64 3
  %1207 = select i1 %1202, i64 %1205, i64 %1206
  %1208 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = load i32*, i32** %79, align 8
  %1211 = sext i16 %1201 to i64
  %1212 = getelementptr inbounds i32, i32* %1210, i64 %1211
  %1213 = load i32, i32* %1212, align 4
  %1214 = add nsw i32 %1213, %1209
  %1215 = load i32*, i32** %93, align 8
  %1216 = sext i16 %1058 to i64
  %1217 = getelementptr inbounds i32, i32* %1215, i64 %1216
  %1218 = load i32, i32* %1217, align 4
  %1219 = add nsw i32 %1214, %1218
  %1220 = mul i32 %1219, %3
  %1221 = add i32 %1220, 256
  %1222 = lshr i32 %1221, 9
  %1223 = add nsw i32 %1222, %1198
  store i32 %1223, i32* %1197, align 4
  br label %1224

1224:                                             ; preds = %1200, %1196
  %1225 = getelementptr inbounds i32, i32* %5, i64 3
  %1226 = load i32, i32* %1225, align 4
  %1227 = icmp eq i32 %1226, 2147483647
  br i1 %1227, label %1252, label %1228

1228:                                             ; preds = %1224
  %1229 = add i16 %1058, 1
  %1230 = icmp eq i16 %1057, 0
  %1231 = icmp eq i16 %1229, 0
  %1232 = xor i1 %1231, true
  %1233 = zext i1 %1232 to i64
  %1234 = select i1 %1231, i64 2, i64 3
  %1235 = select i1 %1230, i64 %1233, i64 %1234
  %1236 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %1235
  %1237 = load i32, i32* %1236, align 4
  %1238 = load i32*, i32** %79, align 8
  %1239 = sext i16 %1057 to i64
  %1240 = getelementptr inbounds i32, i32* %1238, i64 %1239
  %1241 = load i32, i32* %1240, align 4
  %1242 = add nsw i32 %1241, %1237
  %1243 = load i32*, i32** %93, align 8
  %1244 = sext i16 %1229 to i64
  %1245 = getelementptr inbounds i32, i32* %1243, i64 %1244
  %1246 = load i32, i32* %1245, align 4
  %1247 = add nsw i32 %1242, %1246
  %1248 = mul i32 %1247, %3
  %1249 = add i32 %1248, 256
  %1250 = lshr i32 %1249, 9
  %1251 = add nsw i32 %1250, %1226
  store i32 %1251, i32* %1225, align 4
  br label %1252

1252:                                             ; preds = %1228, %1224
  %1253 = getelementptr inbounds i32, i32* %5, i64 4
  %1254 = load i32, i32* %1253, align 4
  %1255 = icmp eq i32 %1254, 2147483647
  br i1 %1255, label %1280, label %1256

1256:                                             ; preds = %1252
  %1257 = add i16 %1057, -1
  %1258 = icmp eq i16 %1257, 0
  %1259 = icmp eq i16 %1058, 0
  %1260 = xor i1 %1259, true
  %1261 = zext i1 %1260 to i64
  %1262 = select i1 %1259, i64 2, i64 3
  %1263 = select i1 %1258, i64 %1261, i64 %1262
  %1264 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = load i32*, i32** %79, align 8
  %1267 = sext i16 %1257 to i64
  %1268 = getelementptr inbounds i32, i32* %1266, i64 %1267
  %1269 = load i32, i32* %1268, align 4
  %1270 = add nsw i32 %1269, %1265
  %1271 = load i32*, i32** %93, align 8
  %1272 = sext i16 %1058 to i64
  %1273 = getelementptr inbounds i32, i32* %1271, i64 %1272
  %1274 = load i32, i32* %1273, align 4
  %1275 = add nsw i32 %1270, %1274
  %1276 = mul i32 %1275, %3
  %1277 = add i32 %1276, 256
  %1278 = lshr i32 %1277, 9
  %1279 = add nsw i32 %1278, %1254
  store i32 %1279, i32* %1253, align 4
  br label %1280

1280:                                             ; preds = %1165, %1048, %1076, %1252, %1256
  %1281 = phi i16 [ %1050, %1048 ], [ %1075, %1076 ], [ %1055, %1256 ], [ %1055, %1252 ], [ %1075, %1165 ]
  %1282 = phi i16 [ %1049, %1048 ], [ %1074, %1076 ], [ %1056, %1256 ], [ %1056, %1252 ], [ %1074, %1165 ]
  %1283 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  store i16 %1282, i16* %1283, align 2
  %1284 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  store i16 %1281, i16* %1284, align 2
  ret i32 %1047
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_return_max_sub_pixel_mv(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* nocapture readnone, i32, i32, i32* nocapture readnone, i32* nocapture readnone, i32** nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, i8* nocapture readnone, i32, i32, i32) local_unnamed_addr #5 {
  %18 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %19 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %20 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i32
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = shl nsw i32 %24, 3
  %26 = add nsw i32 %22, 8184
  %27 = icmp slt i32 %25, %26
  %28 = select i1 %27, i32 %25, i32 %26
  %29 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = shl nsw i32 %33, 3
  %35 = add nsw i32 %31, 8184
  %36 = icmp slt i32 %34, %35
  %37 = select i1 %36, i32 %34, i32 %35
  %38 = icmp slt i32 %28, 16382
  %39 = select i1 %38, i32 %28, i32 16382
  %40 = icmp slt i32 %37, 16382
  %41 = select i1 %40, i32 %37, i32 16382
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %18, align 2
  %43 = trunc i32 %39 to i16
  store i16 %43, i16* %19, align 2
  %44 = icmp eq i32 %3, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %17
  %46 = load i16, i16* %29, align 2
  %47 = sext i16 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp slt i32 %50, 64
  br i1 %51, label %52, label %73

52:                                               ; preds = %45
  %53 = load i16, i16* %20, align 2
  %54 = sext i16 %53 to i32
  %55 = icmp slt i32 %54, 0
  %56 = sub nsw i32 0, %54
  %57 = select i1 %55, i32 %56, i32 %54
  %58 = icmp sgt i32 %57, 63
  br i1 %58, label %73, label %59

59:                                               ; preds = %52
  %60 = shl i32 %41, 16
  %61 = ashr exact i32 %60, 16
  %62 = icmp slt i32 %61, 0
  %63 = sub nsw i32 0, %61
  %64 = select i1 %62, i32 %63, i32 %61
  %65 = icmp slt i32 %64, 64
  br i1 %65, label %66, label %73

66:                                               ; preds = %59
  %67 = shl i32 %39, 16
  %68 = ashr exact i32 %67, 16
  %69 = icmp slt i32 %68, 0
  %70 = sub nsw i32 0, %68
  %71 = select i1 %69, i32 %70, i32 %68
  %72 = icmp slt i32 %71, 64
  br i1 %72, label %87, label %73

73:                                               ; preds = %45, %17, %66, %59, %52
  %74 = and i16 %42, 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = icmp sgt i16 %42, 0
  %78 = select i1 %77, i16 -1, i16 1
  %79 = add i16 %78, %42
  store i16 %79, i16* %18, align 2
  br label %80

80:                                               ; preds = %76, %73
  %81 = and i16 %43, 1
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = icmp sgt i16 %43, 0
  %85 = select i1 %84, i16 -1, i16 1
  %86 = add i16 %85, %43
  store i16 %86, i16* %19, align 2
  br label %87

87:                                               ; preds = %66, %80, %83
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_return_min_sub_pixel_mv(%struct.macroblock* nocapture readonly, %struct.mv* nocapture, %struct.mv* nocapture readonly, i32, i32, %struct.vp9_variance_vtable* nocapture readnone, i32, i32, i32* nocapture readnone, i32* nocapture readnone, i32** nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, i8* nocapture readnone, i32, i32, i32) local_unnamed_addr #5 {
  %18 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %19 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = shl nsw i32 %21, 3
  %23 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 1
  %24 = load i16, i16* %23, align 2
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %25, -8184
  %27 = icmp sgt i32 %22, %26
  %28 = select i1 %27, i32 %22, i32 %26
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = shl nsw i32 %30, 3
  %32 = getelementptr inbounds %struct.mv, %struct.mv* %2, i64 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = sext i16 %33 to i32
  %35 = add nsw i32 %34, -8184
  %36 = icmp sgt i32 %31, %35
  %37 = select i1 %36, i32 %31, i32 %35
  %38 = icmp sgt i32 %28, -16383
  %39 = select i1 %38, i32 %28, i32 -16383
  %40 = icmp sgt i32 %37, -16383
  %41 = select i1 %40, i32 %37, i32 -16383
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %18, align 2
  %43 = trunc i32 %39 to i16
  store i16 %43, i16* %19, align 2
  %44 = icmp eq i32 %3, 0
  br i1 %44, label %73, label %45

45:                                               ; preds = %17
  %46 = load i16, i16* %32, align 2
  %47 = sext i16 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp slt i32 %50, 64
  br i1 %51, label %52, label %73

52:                                               ; preds = %45
  %53 = load i16, i16* %23, align 2
  %54 = sext i16 %53 to i32
  %55 = icmp slt i32 %54, 0
  %56 = sub nsw i32 0, %54
  %57 = select i1 %55, i32 %56, i32 %54
  %58 = icmp sgt i32 %57, 63
  br i1 %58, label %73, label %59

59:                                               ; preds = %52
  %60 = shl i32 %41, 16
  %61 = ashr exact i32 %60, 16
  %62 = icmp slt i32 %61, 0
  %63 = sub nsw i32 0, %61
  %64 = select i1 %62, i32 %63, i32 %61
  %65 = icmp slt i32 %64, 64
  br i1 %65, label %66, label %73

66:                                               ; preds = %59
  %67 = shl i32 %39, 16
  %68 = ashr exact i32 %67, 16
  %69 = icmp slt i32 %68, 0
  %70 = sub nsw i32 0, %68
  %71 = select i1 %69, i32 %70, i32 %68
  %72 = icmp slt i32 %71, 64
  br i1 %72, label %87, label %73

73:                                               ; preds = %45, %17, %66, %59, %52
  %74 = and i16 %42, 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = icmp sgt i16 %42, 0
  %78 = select i1 %77, i16 -1, i16 1
  %79 = add i16 %78, %42
  store i16 %79, i16* %18, align 2
  br label %80

80:                                               ; preds = %76, %73
  %81 = and i16 %43, 1
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %80
  %84 = icmp sgt i16 %43, 0
  %85 = select i1 %84, i16 -1, i16 1
  %86 = add i16 %85, %43
  store i16 %86, i16* %19, align 2
  br label %87

87:                                               ; preds = %66, %80, %83
  ret i32 0
}

declare void @vpx_highbd_comp_avg_pred_c(i16*, i16*, i32, i32, i16*, i32) local_unnamed_addr #6

declare void @vpx_comp_avg_pred_sse2(i8*, i8*, i32, i32, i8*, i32) local_unnamed_addr #6

declare void @vp9_highbd_build_inter_predictor(i16*, i32, i16*, i32, %struct.mv*, %struct.scale_factors*, i32, i32, i32, [8 x i16]*, i32, i32, i32, i32) local_unnamed_addr #6

declare void @vp9_build_inter_predictor(i8*, i32, i8*, i32, %struct.mv*, %struct.scale_factors*, i32, i32, i32, [8 x i16]*, i32, i32, i32) local_unnamed_addr #6

declare i32 @vpx_vector_var_sse2(i16*, i16*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @vp9_pattern_search(%struct.macroblock* readonly, %struct.mv* nocapture, i32, i32, i32, i32*, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture, i32* nocapture readonly, [8 x %struct.mv]* nocapture readonly) unnamed_addr #5 {
  %12 = alloca %struct.mv, align 2
  %13 = alloca [3 x i32], align 4
  %14 = alloca %struct.mv, align 2
  %15 = bitcast %struct.mv* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  %16 = getelementptr inbounds %struct.mv, %struct.mv* %12, i64 0, i32 0
  %17 = getelementptr inbounds %struct.mv, %struct.mv* %12, i64 0, i32 1
  %18 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = ashr i16 %19, 3
  store i16 %20, i16* %16, align 2
  %21 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 1
  %22 = load i16, i16* %21, align 2
  %23 = ashr i16 %22, 3
  store i16 %23, i16* %17, align 2
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds [11 x i32], [11 x i32]* @vp9_pattern_search_sad.search_param_to_steps, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %28 = load i32, i32* %27, align 16
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i32
  %38 = icmp sgt i32 %28, %37
  %39 = icmp slt i32 %30, %37
  %40 = select i1 %39, i32 %30, i32 %37
  %41 = select i1 %38, i32 %28, i32 %40
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %35, align 2
  %43 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = icmp sgt i32 %32, %45
  %47 = icmp slt i32 %34, %45
  %48 = select i1 %47, i32 %34, i32 %45
  %49 = select i1 %46, i32 %32, i32 %48
  %50 = trunc i32 %49 to i16
  store i16 %50, i16* %43, align 2
  %51 = shl i32 %49, 16
  %52 = ashr exact i32 %51, 16
  %53 = shl i32 %41, 16
  %54 = ashr exact i32 %53, 16
  %55 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %6, i64 0, i32 0
  %56 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = mul nsw i32 %64, %52
  %66 = add nsw i32 %65, %54
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %62, i64 %67
  %69 = tail call i32 %56(i8* %58, i32 %60, i8* %68, i32 %64) #8
  %70 = load i16, i16* %43, align 2
  %71 = sub i16 %70, %20
  %72 = load i16, i16* %35, align 2
  %73 = sub i16 %72, %23
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %75 = icmp eq i16 %71, 0
  %76 = icmp eq i16 %73, 0
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i64
  %79 = select i1 %76, i64 2, i64 3
  %80 = select i1 %75, i64 %78, i64 %79
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = sext i16 %71 to i64
  %85 = getelementptr inbounds i32, i32* %83, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, %82
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %89 = load i32*, i32** %88, align 8
  %90 = sext i16 %73 to i64
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %87, %92
  %94 = mul i32 %93, %3
  %95 = add i32 %94, 256
  %96 = lshr i32 %95, 9
  %97 = add i32 %96, %69
  %98 = icmp ne i32 %4, 0
  br i1 %98, label %99, label %281

99:                                               ; preds = %11
  %100 = sext i32 %26 to i64
  br label %101

101:                                              ; preds = %260, %99
  %102 = phi i64 [ %266, %260 ], [ 0, %99 ]
  %103 = phi i32 [ %265, %260 ], [ -1, %99 ]
  %104 = phi i32 [ %264, %260 ], [ -1, %99 ]
  %105 = phi i32 [ %261, %260 ], [ %97, %99 ]
  %106 = trunc i64 %102 to i32
  %107 = shl i32 1, %106
  %108 = sub nsw i32 %52, %107
  %109 = load i32, i32* %31, align 4
  %110 = icmp sge i32 %108, %109
  %111 = add nsw i32 %107, %52
  %112 = load i32, i32* %33, align 4
  %113 = icmp sle i32 %111, %112
  %114 = and i1 %110, %113
  %115 = sub nsw i32 %54, %107
  %116 = load i32, i32* %27, align 4
  %117 = icmp sge i32 %115, %116
  %118 = and i1 %114, %117
  %119 = add nsw i32 %107, %54
  %120 = load i32, i32* %29, align 4
  %121 = icmp sle i32 %119, %120
  %122 = and i1 %118, %121
  %123 = getelementptr inbounds i32, i32* %9, i64 %102
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, 0
  br i1 %122, label %127, label %126

126:                                              ; preds = %101
  br i1 %125, label %187, label %260

127:                                              ; preds = %101
  br i1 %125, label %128, label %260

128:                                              ; preds = %127, %180
  %129 = phi i64 [ %183, %180 ], [ 0, %127 ]
  %130 = phi i32 [ %182, %180 ], [ -1, %127 ]
  %131 = phi i32 [ %181, %180 ], [ %105, %127 ]
  %132 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %102, i64 %129, i32 0
  %133 = load i16, i16* %132, align 2
  %134 = add i16 %133, %50
  %135 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %102, i64 %129, i32 1
  %136 = load i16, i16* %135, align 2
  %137 = add i16 %136, %42
  %138 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %139 = load i8*, i8** %57, align 8
  %140 = load i32, i32* %59, align 8
  %141 = load i8*, i8** %61, align 8
  %142 = sext i16 %134 to i32
  %143 = load i32, i32* %63, align 8
  %144 = mul nsw i32 %143, %142
  %145 = sext i16 %137 to i32
  %146 = add nsw i32 %144, %145
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %141, i64 %147
  %149 = tail call i32 %138(i8* %139, i32 %140, i8* %148, i32 %143) #8
  %150 = icmp slt i32 %149, %131
  br i1 %150, label %151, label %180

151:                                              ; preds = %128
  %152 = sub i16 %134, %20
  %153 = sub i16 %137, %23
  %154 = icmp eq i16 %152, 0
  %155 = icmp eq i16 %153, 0
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i64
  %158 = select i1 %155, i64 2, i64 3
  %159 = select i1 %154, i64 %157, i64 %158
  %160 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = load i32*, i32** %74, align 8
  %163 = sext i16 %152 to i64
  %164 = getelementptr inbounds i32, i32* %162, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = add nsw i32 %165, %161
  %167 = load i32*, i32** %88, align 8
  %168 = sext i16 %153 to i64
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %166, %170
  %172 = mul i32 %171, %3
  %173 = add i32 %172, 256
  %174 = lshr i32 %173, 9
  %175 = add nsw i32 %174, %149
  %176 = icmp slt i32 %175, %131
  %177 = select i1 %176, i32 %175, i32 %131
  %178 = trunc i64 %129 to i32
  %179 = select i1 %176, i32 %178, i32 %130
  br label %180

180:                                              ; preds = %151, %128
  %181 = phi i32 [ %131, %128 ], [ %177, %151 ]
  %182 = phi i32 [ %130, %128 ], [ %179, %151 ]
  %183 = add nuw nsw i64 %129, 1
  %184 = load i32, i32* %123, align 4
  %185 = sext i32 %184 to i64
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %128, label %260

187:                                              ; preds = %126, %258
  %188 = phi i32 [ %259, %258 ], [ %116, %126 ]
  %189 = phi i64 [ %254, %258 ], [ 0, %126 ]
  %190 = phi i32 [ %253, %258 ], [ -1, %126 ]
  %191 = phi i32 [ %252, %258 ], [ %105, %126 ]
  %192 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %102, i64 %189, i32 0
  %193 = load i16, i16* %192, align 2
  %194 = add i16 %193, %50
  %195 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %102, i64 %189, i32 1
  %196 = load i16, i16* %195, align 2
  %197 = add i16 %196, %42
  %198 = sext i16 %197 to i32
  %199 = icmp sgt i32 %188, %198
  br i1 %199, label %251, label %200

200:                                              ; preds = %187
  %201 = load i32, i32* %29, align 4
  %202 = icmp slt i32 %201, %198
  br i1 %202, label %251, label %203

203:                                              ; preds = %200
  %204 = sext i16 %194 to i32
  %205 = load i32, i32* %31, align 4
  %206 = icmp sgt i32 %205, %204
  br i1 %206, label %251, label %207

207:                                              ; preds = %203
  %208 = load i32, i32* %33, align 4
  %209 = icmp slt i32 %208, %204
  br i1 %209, label %251, label %210

210:                                              ; preds = %207
  %211 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %212 = load i8*, i8** %57, align 8
  %213 = load i32, i32* %59, align 8
  %214 = load i8*, i8** %61, align 8
  %215 = load i32, i32* %63, align 8
  %216 = mul nsw i32 %215, %204
  %217 = add nsw i32 %216, %198
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %214, i64 %218
  %220 = tail call i32 %211(i8* %212, i32 %213, i8* %219, i32 %215) #8
  %221 = icmp slt i32 %220, %191
  br i1 %221, label %222, label %251

222:                                              ; preds = %210
  %223 = sub i16 %194, %20
  %224 = sub i16 %197, %23
  %225 = icmp eq i16 %223, 0
  %226 = icmp eq i16 %224, 0
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i64
  %229 = select i1 %226, i64 2, i64 3
  %230 = select i1 %225, i64 %228, i64 %229
  %231 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %230
  %232 = load i32, i32* %231, align 4
  %233 = load i32*, i32** %74, align 8
  %234 = sext i16 %223 to i64
  %235 = getelementptr inbounds i32, i32* %233, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %236, %232
  %238 = load i32*, i32** %88, align 8
  %239 = sext i16 %224 to i64
  %240 = getelementptr inbounds i32, i32* %238, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = add nsw i32 %237, %241
  %243 = mul i32 %242, %3
  %244 = add i32 %243, 256
  %245 = lshr i32 %244, 9
  %246 = add nsw i32 %245, %220
  %247 = icmp slt i32 %246, %191
  %248 = select i1 %247, i32 %246, i32 %191
  %249 = trunc i64 %189 to i32
  %250 = select i1 %247, i32 %249, i32 %190
  br label %251

251:                                              ; preds = %187, %200, %203, %222, %210, %207
  %252 = phi i32 [ %191, %207 ], [ %191, %210 ], [ %248, %222 ], [ %191, %203 ], [ %191, %200 ], [ %191, %187 ]
  %253 = phi i32 [ %190, %207 ], [ %190, %210 ], [ %250, %222 ], [ %190, %203 ], [ %190, %200 ], [ %190, %187 ]
  %254 = add nuw nsw i64 %189, 1
  %255 = load i32, i32* %123, align 4
  %256 = sext i32 %255 to i64
  %257 = icmp slt i64 %254, %256
  br i1 %257, label %258, label %260

258:                                              ; preds = %251
  %259 = load i32, i32* %27, align 4
  br label %187

260:                                              ; preds = %251, %180, %126, %127
  %261 = phi i32 [ %105, %127 ], [ %105, %126 ], [ %181, %180 ], [ %252, %251 ]
  %262 = phi i32 [ -1, %127 ], [ -1, %126 ], [ %182, %180 ], [ %253, %251 ]
  %263 = icmp eq i32 %262, -1
  %264 = select i1 %263, i32 %104, i32 %262
  %265 = select i1 %263, i32 %103, i32 %106
  %266 = add nuw nsw i64 %102, 1
  %267 = icmp slt i64 %102, %100
  br i1 %267, label %101, label %268

268:                                              ; preds = %260
  %269 = icmp eq i32 %265, -1
  br i1 %269, label %676, label %270

270:                                              ; preds = %268
  %271 = sext i32 %265 to i64
  %272 = sext i32 %264 to i64
  %273 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %271, i64 %272, i32 0
  %274 = load i16, i16* %273, align 2
  %275 = sext i16 %274 to i32
  %276 = add nsw i32 %52, %275
  %277 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %271, i64 %272, i32 1
  %278 = load i16, i16* %277, align 2
  %279 = sext i16 %278 to i32
  %280 = add nsw i32 %54, %279
  br label %281

281:                                              ; preds = %11, %270
  %282 = phi i32 [ %265, %270 ], [ %26, %11 ]
  %283 = phi i32 [ %264, %270 ], [ -1, %11 ]
  %284 = phi i32 [ %261, %270 ], [ %97, %11 ]
  %285 = phi i32 [ %280, %270 ], [ %54, %11 ]
  %286 = phi i32 [ %276, %270 ], [ %52, %11 ]
  %287 = bitcast [3 x i32]* %13 to i8*
  %288 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %289 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %290 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %291 = sext i32 %282 to i64
  br label %292

292:                                              ; preds = %281, %669
  %293 = phi i64 [ %291, %281 ], [ %674, %669 ]
  %294 = phi i32 [ %286, %281 ], [ %670, %669 ]
  %295 = phi i32 [ %285, %281 ], [ %671, %669 ]
  %296 = phi i32 [ %284, %281 ], [ %672, %669 ]
  %297 = phi i32 [ %283, %281 ], [ %673, %669 ]
  %298 = icmp eq i64 %293, %291
  %299 = and i1 %98, %298
  %300 = trunc i64 %293 to i32
  %301 = shl i32 1, %300
  br i1 %299, label %475, label %302

302:                                              ; preds = %292
  %303 = sub nsw i32 %294, %301
  %304 = load i32, i32* %31, align 4
  %305 = icmp sge i32 %303, %304
  %306 = add nsw i32 %301, %294
  %307 = load i32, i32* %33, align 4
  %308 = icmp sle i32 %306, %307
  %309 = and i1 %305, %308
  %310 = sub nsw i32 %295, %301
  %311 = load i32, i32* %27, align 4
  %312 = icmp sge i32 %310, %311
  %313 = and i1 %309, %312
  %314 = add nsw i32 %295, %301
  %315 = load i32, i32* %29, align 4
  %316 = icmp sle i32 %314, %315
  %317 = and i1 %313, %316
  %318 = getelementptr inbounds i32, i32* %9, i64 %293
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, 0
  br i1 %317, label %325, label %321

321:                                              ; preds = %302
  br i1 %320, label %322, label %669

322:                                              ; preds = %321
  %323 = trunc i32 %294 to i16
  %324 = trunc i32 %295 to i16
  br label %388

325:                                              ; preds = %302
  br i1 %320, label %326, label %669

326:                                              ; preds = %325
  %327 = trunc i32 %294 to i16
  %328 = trunc i32 %295 to i16
  br label %329

329:                                              ; preds = %326, %381
  %330 = phi i64 [ 0, %326 ], [ %384, %381 ]
  %331 = phi i32 [ -1, %326 ], [ %383, %381 ]
  %332 = phi i32 [ %296, %326 ], [ %382, %381 ]
  %333 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %330, i32 0
  %334 = load i16, i16* %333, align 2
  %335 = add i16 %334, %327
  %336 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %330, i32 1
  %337 = load i16, i16* %336, align 2
  %338 = add i16 %337, %328
  %339 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %340 = load i8*, i8** %57, align 8
  %341 = load i32, i32* %59, align 8
  %342 = load i8*, i8** %61, align 8
  %343 = sext i16 %335 to i32
  %344 = load i32, i32* %63, align 8
  %345 = mul nsw i32 %344, %343
  %346 = sext i16 %338 to i32
  %347 = add nsw i32 %345, %346
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, i8* %342, i64 %348
  %350 = tail call i32 %339(i8* %340, i32 %341, i8* %349, i32 %344) #8
  %351 = icmp slt i32 %350, %332
  br i1 %351, label %352, label %381

352:                                              ; preds = %329
  %353 = sub i16 %335, %20
  %354 = sub i16 %338, %23
  %355 = icmp eq i16 %353, 0
  %356 = icmp eq i16 %354, 0
  %357 = xor i1 %356, true
  %358 = zext i1 %357 to i64
  %359 = select i1 %356, i64 2, i64 3
  %360 = select i1 %355, i64 %358, i64 %359
  %361 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = load i32*, i32** %74, align 8
  %364 = sext i16 %353 to i64
  %365 = getelementptr inbounds i32, i32* %363, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = add nsw i32 %366, %362
  %368 = load i32*, i32** %88, align 8
  %369 = sext i16 %354 to i64
  %370 = getelementptr inbounds i32, i32* %368, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = add nsw i32 %367, %371
  %373 = mul i32 %372, %3
  %374 = add i32 %373, 256
  %375 = lshr i32 %374, 9
  %376 = add nsw i32 %375, %350
  %377 = icmp slt i32 %376, %332
  %378 = select i1 %377, i32 %376, i32 %332
  %379 = trunc i64 %330 to i32
  %380 = select i1 %377, i32 %379, i32 %331
  br label %381

381:                                              ; preds = %352, %329
  %382 = phi i32 [ %332, %329 ], [ %378, %352 ]
  %383 = phi i32 [ %331, %329 ], [ %380, %352 ]
  %384 = add nuw nsw i64 %330, 1
  %385 = load i32, i32* %318, align 4
  %386 = sext i32 %385 to i64
  %387 = icmp slt i64 %384, %386
  br i1 %387, label %329, label %461

388:                                              ; preds = %459, %322
  %389 = phi i32 [ %311, %322 ], [ %460, %459 ]
  %390 = phi i64 [ 0, %322 ], [ %455, %459 ]
  %391 = phi i32 [ -1, %322 ], [ %454, %459 ]
  %392 = phi i32 [ %296, %322 ], [ %453, %459 ]
  %393 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %390, i32 0
  %394 = load i16, i16* %393, align 2
  %395 = add i16 %394, %323
  %396 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %390, i32 1
  %397 = load i16, i16* %396, align 2
  %398 = add i16 %397, %324
  %399 = sext i16 %398 to i32
  %400 = icmp sgt i32 %389, %399
  br i1 %400, label %452, label %401

401:                                              ; preds = %388
  %402 = load i32, i32* %29, align 4
  %403 = icmp slt i32 %402, %399
  br i1 %403, label %452, label %404

404:                                              ; preds = %401
  %405 = sext i16 %395 to i32
  %406 = load i32, i32* %31, align 4
  %407 = icmp sgt i32 %406, %405
  br i1 %407, label %452, label %408

408:                                              ; preds = %404
  %409 = load i32, i32* %33, align 4
  %410 = icmp slt i32 %409, %405
  br i1 %410, label %452, label %411

411:                                              ; preds = %408
  %412 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %413 = load i8*, i8** %57, align 8
  %414 = load i32, i32* %59, align 8
  %415 = load i8*, i8** %61, align 8
  %416 = load i32, i32* %63, align 8
  %417 = mul nsw i32 %416, %405
  %418 = add nsw i32 %417, %399
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %415, i64 %419
  %421 = tail call i32 %412(i8* %413, i32 %414, i8* %420, i32 %416) #8
  %422 = icmp slt i32 %421, %392
  br i1 %422, label %423, label %452

423:                                              ; preds = %411
  %424 = sub i16 %395, %20
  %425 = sub i16 %398, %23
  %426 = icmp eq i16 %424, 0
  %427 = icmp eq i16 %425, 0
  %428 = xor i1 %427, true
  %429 = zext i1 %428 to i64
  %430 = select i1 %427, i64 2, i64 3
  %431 = select i1 %426, i64 %429, i64 %430
  %432 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %431
  %433 = load i32, i32* %432, align 4
  %434 = load i32*, i32** %74, align 8
  %435 = sext i16 %424 to i64
  %436 = getelementptr inbounds i32, i32* %434, i64 %435
  %437 = load i32, i32* %436, align 4
  %438 = add nsw i32 %437, %433
  %439 = load i32*, i32** %88, align 8
  %440 = sext i16 %425 to i64
  %441 = getelementptr inbounds i32, i32* %439, i64 %440
  %442 = load i32, i32* %441, align 4
  %443 = add nsw i32 %438, %442
  %444 = mul i32 %443, %3
  %445 = add i32 %444, 256
  %446 = lshr i32 %445, 9
  %447 = add nsw i32 %446, %421
  %448 = icmp slt i32 %447, %392
  %449 = select i1 %448, i32 %447, i32 %392
  %450 = trunc i64 %390 to i32
  %451 = select i1 %448, i32 %450, i32 %391
  br label %452

452:                                              ; preds = %388, %401, %404, %423, %411, %408
  %453 = phi i32 [ %392, %408 ], [ %392, %411 ], [ %449, %423 ], [ %392, %404 ], [ %392, %401 ], [ %392, %388 ]
  %454 = phi i32 [ %391, %408 ], [ %391, %411 ], [ %451, %423 ], [ %391, %404 ], [ %391, %401 ], [ %391, %388 ]
  %455 = add nuw nsw i64 %390, 1
  %456 = load i32, i32* %318, align 4
  %457 = sext i32 %456 to i64
  %458 = icmp slt i64 %455, %457
  br i1 %458, label %459, label %461

459:                                              ; preds = %452
  %460 = load i32, i32* %27, align 4
  br label %388

461:                                              ; preds = %452, %381
  %462 = phi i32 [ %382, %381 ], [ %453, %452 ]
  %463 = phi i32 [ %383, %381 ], [ %454, %452 ]
  %464 = icmp eq i32 %463, -1
  br i1 %464, label %669, label %465

465:                                              ; preds = %461
  %466 = sext i32 %463 to i64
  %467 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %466, i32 0
  %468 = load i16, i16* %467, align 2
  %469 = sext i16 %468 to i32
  %470 = add nsw i32 %294, %469
  %471 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %466, i32 1
  %472 = load i16, i16* %471, align 2
  %473 = sext i16 %472 to i32
  %474 = add nsw i32 %295, %473
  br label %475

475:                                              ; preds = %292, %465
  %476 = phi i32 [ %470, %465 ], [ %294, %292 ]
  %477 = phi i32 [ %474, %465 ], [ %295, %292 ]
  %478 = phi i32 [ %462, %465 ], [ %296, %292 ]
  %479 = phi i32 [ %463, %465 ], [ %297, %292 ]
  %480 = getelementptr inbounds i32, i32* %9, i64 %293
  br label %481

481:                                              ; preds = %656, %475
  %482 = phi i32 [ %476, %475 ], [ %664, %656 ]
  %483 = phi i32 [ %477, %475 ], [ %668, %656 ]
  %484 = phi i32 [ %478, %475 ], [ %652, %656 ]
  %485 = phi i32 [ %479, %475 ], [ %659, %656 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %287) #8
  store i32 -1431655766, i32* %288, align 4
  store i32 -1431655766, i32* %289, align 4
  store i32 -1431655766, i32* %290, align 4
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %489

487:                                              ; preds = %481
  %488 = load i32, i32* %480, align 4
  br label %489

489:                                              ; preds = %481, %487
  %490 = phi i32 [ %488, %487 ], [ %485, %481 ]
  %491 = add nsw i32 %490, -1
  store i32 %491, i32* %288, align 4
  store i32 %485, i32* %289, align 4
  %492 = load i32, i32* %480, align 4
  %493 = add nsw i32 %492, -1
  %494 = icmp eq i32 %485, %493
  %495 = add nsw i32 %485, 1
  %496 = select i1 %494, i32 0, i32 %495
  store i32 %496, i32* %290, align 4
  %497 = sub nsw i32 %482, %301
  %498 = load i32, i32* %31, align 4
  %499 = icmp sge i32 %497, %498
  %500 = add nsw i32 %482, %301
  %501 = load i32, i32* %33, align 4
  %502 = icmp sle i32 %500, %501
  %503 = and i1 %499, %502
  %504 = sub nsw i32 %483, %301
  %505 = load i32, i32* %27, align 4
  %506 = icmp sge i32 %504, %505
  %507 = and i1 %503, %506
  %508 = add nsw i32 %483, %301
  %509 = load i32, i32* %29, align 4
  %510 = icmp sle i32 %508, %509
  %511 = and i1 %507, %510
  %512 = trunc i32 %482 to i16
  %513 = trunc i32 %483 to i16
  br i1 %511, label %514, label %576

514:                                              ; preds = %489, %573
  %515 = phi i32 [ %575, %573 ], [ %491, %489 ]
  %516 = phi i64 [ %571, %573 ], [ 0, %489 ]
  %517 = phi i32 [ %570, %573 ], [ -1, %489 ]
  %518 = phi i32 [ %569, %573 ], [ %484, %489 ]
  %519 = sext i32 %515 to i64
  %520 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %519, i32 0
  %521 = load i16, i16* %520, align 2
  %522 = add i16 %521, %512
  %523 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %519, i32 1
  %524 = load i16, i16* %523, align 2
  %525 = add i16 %524, %513
  %526 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %527 = load i8*, i8** %57, align 8
  %528 = load i32, i32* %59, align 8
  %529 = load i8*, i8** %61, align 8
  %530 = sext i16 %522 to i32
  %531 = load i32, i32* %63, align 8
  %532 = mul nsw i32 %531, %530
  %533 = sext i16 %525 to i32
  %534 = add nsw i32 %532, %533
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds i8, i8* %529, i64 %535
  %537 = tail call i32 %526(i8* %527, i32 %528, i8* %536, i32 %531) #8
  %538 = icmp slt i32 %537, %518
  br i1 %538, label %539, label %568

539:                                              ; preds = %514
  %540 = sub i16 %522, %20
  %541 = sub i16 %525, %23
  %542 = icmp eq i16 %540, 0
  %543 = icmp eq i16 %541, 0
  %544 = xor i1 %543, true
  %545 = zext i1 %544 to i64
  %546 = select i1 %543, i64 2, i64 3
  %547 = select i1 %542, i64 %545, i64 %546
  %548 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = load i32*, i32** %74, align 8
  %551 = sext i16 %540 to i64
  %552 = getelementptr inbounds i32, i32* %550, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = add nsw i32 %553, %549
  %555 = load i32*, i32** %88, align 8
  %556 = sext i16 %541 to i64
  %557 = getelementptr inbounds i32, i32* %555, i64 %556
  %558 = load i32, i32* %557, align 4
  %559 = add nsw i32 %554, %558
  %560 = mul i32 %559, %3
  %561 = add i32 %560, 256
  %562 = lshr i32 %561, 9
  %563 = add nsw i32 %562, %537
  %564 = icmp slt i32 %563, %518
  %565 = select i1 %564, i32 %563, i32 %518
  %566 = trunc i64 %516 to i32
  %567 = select i1 %564, i32 %566, i32 %517
  br label %568

568:                                              ; preds = %539, %514
  %569 = phi i32 [ %518, %514 ], [ %565, %539 ]
  %570 = phi i32 [ %517, %514 ], [ %567, %539 ]
  %571 = add nuw nsw i64 %516, 1
  %572 = icmp eq i64 %571, 3
  br i1 %572, label %651, label %573

573:                                              ; preds = %568
  %574 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 %571
  %575 = load i32, i32* %574, align 4
  br label %514

576:                                              ; preds = %489, %647
  %577 = phi i32 [ %650, %647 ], [ %505, %489 ]
  %578 = phi i32 [ %649, %647 ], [ %491, %489 ]
  %579 = phi i64 [ %645, %647 ], [ 0, %489 ]
  %580 = phi i32 [ %644, %647 ], [ -1, %489 ]
  %581 = phi i32 [ %643, %647 ], [ %484, %489 ]
  %582 = sext i32 %578 to i64
  %583 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %582, i32 0
  %584 = load i16, i16* %583, align 2
  %585 = add i16 %584, %512
  %586 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %582, i32 1
  %587 = load i16, i16* %586, align 2
  %588 = add i16 %587, %513
  %589 = sext i16 %588 to i32
  %590 = icmp sgt i32 %577, %589
  br i1 %590, label %642, label %591

591:                                              ; preds = %576
  %592 = load i32, i32* %29, align 4
  %593 = icmp slt i32 %592, %589
  br i1 %593, label %642, label %594

594:                                              ; preds = %591
  %595 = sext i16 %585 to i32
  %596 = load i32, i32* %31, align 4
  %597 = icmp sgt i32 %596, %595
  br i1 %597, label %642, label %598

598:                                              ; preds = %594
  %599 = load i32, i32* %33, align 4
  %600 = icmp slt i32 %599, %595
  br i1 %600, label %642, label %601

601:                                              ; preds = %598
  %602 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %55, align 8
  %603 = load i8*, i8** %57, align 8
  %604 = load i32, i32* %59, align 8
  %605 = load i8*, i8** %61, align 8
  %606 = load i32, i32* %63, align 8
  %607 = mul nsw i32 %606, %595
  %608 = add nsw i32 %607, %589
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds i8, i8* %605, i64 %609
  %611 = tail call i32 %602(i8* %603, i32 %604, i8* %610, i32 %606) #8
  %612 = icmp slt i32 %611, %581
  br i1 %612, label %613, label %642

613:                                              ; preds = %601
  %614 = sub i16 %585, %20
  %615 = sub i16 %588, %23
  %616 = icmp eq i16 %614, 0
  %617 = icmp eq i16 %615, 0
  %618 = xor i1 %617, true
  %619 = zext i1 %618 to i64
  %620 = select i1 %617, i64 2, i64 3
  %621 = select i1 %616, i64 %619, i64 %620
  %622 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %621
  %623 = load i32, i32* %622, align 4
  %624 = load i32*, i32** %74, align 8
  %625 = sext i16 %614 to i64
  %626 = getelementptr inbounds i32, i32* %624, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = add nsw i32 %627, %623
  %629 = load i32*, i32** %88, align 8
  %630 = sext i16 %615 to i64
  %631 = getelementptr inbounds i32, i32* %629, i64 %630
  %632 = load i32, i32* %631, align 4
  %633 = add nsw i32 %628, %632
  %634 = mul i32 %633, %3
  %635 = add i32 %634, 256
  %636 = lshr i32 %635, 9
  %637 = add nsw i32 %636, %611
  %638 = icmp slt i32 %637, %581
  %639 = select i1 %638, i32 %637, i32 %581
  %640 = trunc i64 %579 to i32
  %641 = select i1 %638, i32 %640, i32 %580
  br label %642

642:                                              ; preds = %576, %591, %594, %613, %601, %598
  %643 = phi i32 [ %581, %598 ], [ %581, %601 ], [ %639, %613 ], [ %581, %594 ], [ %581, %591 ], [ %581, %576 ]
  %644 = phi i32 [ %580, %598 ], [ %580, %601 ], [ %641, %613 ], [ %580, %594 ], [ %580, %591 ], [ %580, %576 ]
  %645 = add nuw nsw i64 %579, 1
  %646 = icmp eq i64 %645, 3
  br i1 %646, label %651, label %647

647:                                              ; preds = %642
  %648 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 %645
  %649 = load i32, i32* %648, align 4
  %650 = load i32, i32* %27, align 4
  br label %576

651:                                              ; preds = %642, %568
  %652 = phi i32 [ %569, %568 ], [ %643, %642 ]
  %653 = phi i32 [ %570, %568 ], [ %644, %642 ]
  %654 = icmp eq i32 %653, -1
  br i1 %654, label %655, label %656

655:                                              ; preds = %651
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %287) #8
  br label %669

656:                                              ; preds = %651
  %657 = sext i32 %653 to i64
  %658 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 %657
  %659 = load i32, i32* %658, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %660, i32 0
  %662 = load i16, i16* %661, align 2
  %663 = sext i16 %662 to i32
  %664 = add nsw i32 %482, %663
  %665 = getelementptr inbounds [8 x %struct.mv], [8 x %struct.mv]* %10, i64 %293, i64 %660, i32 1
  %666 = load i16, i16* %665, align 2
  %667 = sext i16 %666 to i32
  %668 = add nsw i32 %483, %667
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %287) #8
  br label %481

669:                                              ; preds = %321, %325, %655, %461
  %670 = phi i32 [ %294, %461 ], [ %482, %655 ], [ %294, %325 ], [ %294, %321 ]
  %671 = phi i32 [ %295, %461 ], [ %483, %655 ], [ %295, %325 ], [ %295, %321 ]
  %672 = phi i32 [ %462, %461 ], [ %652, %655 ], [ %296, %325 ], [ %296, %321 ]
  %673 = phi i32 [ %297, %461 ], [ %485, %655 ], [ %297, %325 ], [ %297, %321 ]
  %674 = add nsw i64 %293, -1
  %675 = icmp eq i64 %293, 0
  br i1 %675, label %676, label %292

676:                                              ; preds = %669, %268
  %677 = phi i32 [ %52, %268 ], [ %670, %669 ]
  %678 = phi i32 [ %54, %268 ], [ %671, %669 ]
  %679 = phi i32 [ %261, %268 ], [ %672, %669 ]
  %680 = icmp eq i32* %5, null
  br i1 %680, label %681, label %684

681:                                              ; preds = %676
  %682 = trunc i32 %677 to i16
  %683 = trunc i32 %678 to i16
  br label %690

684:                                              ; preds = %676
  %685 = bitcast %struct.mv* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %685) #8
  %686 = getelementptr inbounds %struct.mv, %struct.mv* %14, i64 0, i32 0
  %687 = getelementptr inbounds %struct.mv, %struct.mv* %14, i64 0, i32 1
  %688 = trunc i32 %677 to i16
  store i16 %688, i16* %686, align 2
  %689 = trunc i32 %678 to i16
  store i16 %689, i16* %687, align 2
  call fastcc void @calc_int_cost_list(%struct.macroblock* %0, %struct.mv* nonnull %12, i32 %3, %struct.vp9_variance_vtable* %6, %struct.mv* nonnull %14, i32* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %685) #8
  br label %690

690:                                              ; preds = %681, %684
  %691 = phi i16 [ %683, %681 ], [ %689, %684 ]
  %692 = phi i16 [ %682, %681 ], [ %688, %684 ]
  %693 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 0
  store i16 %692, i16* %693, align 2
  %694 = getelementptr inbounds %struct.mv, %struct.mv* %8, i64 0, i32 1
  store i16 %691, i16* %694, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  ret i32 %679
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @calc_int_cost_list(%struct.macroblock* nocapture readonly, %struct.mv* nocapture readonly, i32, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly, i32* nocapture) unnamed_addr #7 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = ashr i16 %9, 3
  %11 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = ashr i16 %12, 3
  %14 = getelementptr inbounds %struct.mv, %struct.mv* %4, i64 0, i32 0
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = getelementptr inbounds %struct.mv, %struct.mv* %4, i64 0, i32 1
  %18 = load i16, i16* %17, align 2
  %19 = sext i16 %18 to i32
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #8
  store i32 -1431655766, i32* %7, align 4
  %21 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %3, i64 0, i32 2
  %22 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %21, align 8
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = mul nsw i32 %30, %16
  %32 = add nsw i32 %31, %19
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %28, i64 %33
  %35 = call i32 %22(i8* %24, i32 %26, i8* %34, i32 %30, i32* nonnull %7) #8
  %36 = sub i16 %15, %10
  %37 = sub i16 %18, %13
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %39 = icmp eq i16 %36, 0
  %40 = icmp eq i16 %37, 0
  %41 = xor i1 %40, true
  %42 = zext i1 %41 to i64
  %43 = select i1 %40, i64 2, i64 3
  %44 = select i1 %39, i64 %42, i64 %43
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = load i32*, i32** %38, align 8
  %48 = sext i16 %36 to i64
  %49 = getelementptr inbounds i32, i32* %47, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %46
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %53 = load i32*, i32** %52, align 8
  %54 = sext i16 %37 to i64
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %51, %56
  %58 = mul i32 %57, %2
  %59 = add i32 %58, 256
  %60 = lshr i32 %59, 9
  %61 = add i32 %60, %35
  store i32 %61, i32* %5, align 4
  %62 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, %16
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, %16
  %68 = and i1 %64, %67
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %19
  %72 = and i1 %68, %71
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, %19
  %76 = and i1 %72, %75
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 29
  %78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 11
  br i1 %76, label %79, label %136

79:                                               ; preds = %6, %130
  %80 = phi i64 [ %133, %130 ], [ 0, %6 ]
  %81 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %80, i32 0
  %82 = load i16, i16* %81, align 4
  %83 = add i16 %82, %15
  %84 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %80, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = add i16 %85, %18
  %87 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %21, align 8
  %88 = load i8*, i8** %23, align 8
  %89 = load i32, i32* %25, align 8
  %90 = load i8*, i8** %27, align 8
  %91 = sext i16 %83 to i32
  %92 = load i32, i32* %29, align 8
  %93 = mul nsw i32 %92, %91
  %94 = sext i16 %86 to i32
  %95 = add nsw i32 %93, %94
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %90, i64 %96
  %98 = call i32 %87(i8* %88, i32 %89, i8* %97, i32 %92, i32* nonnull %7) #8
  %99 = load i32**, i32*** %77, align 8
  %100 = icmp eq i32** %99, null
  br i1 %100, label %130, label %101

101:                                              ; preds = %79
  %102 = load i32, i32* %78, align 4
  %103 = sub i16 %83, %10
  %104 = sub i16 %86, %13
  %105 = icmp eq i16 %103, 0
  %106 = icmp eq i16 %104, 0
  %107 = xor i1 %106, true
  %108 = zext i1 %107 to i64
  %109 = select i1 %106, i64 2, i64 3
  %110 = select i1 %105, i64 %108, i64 %109
  %111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 26, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = load i32*, i32** %99, align 8
  %114 = sext i16 %103 to i64
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, %112
  %118 = getelementptr inbounds i32*, i32** %99, i64 1
  %119 = load i32*, i32** %118, align 8
  %120 = sext i16 %104 to i64
  %121 = getelementptr inbounds i32, i32* %119, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %117, %122
  %124 = sext i32 %123 to i64
  %125 = sext i32 %102 to i64
  %126 = mul nsw i64 %124, %125
  %127 = add nsw i64 %126, 8192
  %128 = lshr i64 %127, 14
  %129 = trunc i64 %128 to i32
  br label %130

130:                                              ; preds = %79, %101
  %131 = phi i32 [ %129, %101 ], [ 0, %79 ]
  %132 = add i32 %131, %98
  %133 = add nuw nsw i64 %80, 1
  %134 = getelementptr inbounds i32, i32* %5, i64 %133
  store i32 %132, i32* %134, align 4
  %135 = icmp eq i64 %133, 4
  br i1 %135, label %209, label %79

136:                                              ; preds = %6, %207
  %137 = phi i32 [ %208, %207 ], [ %70, %6 ]
  %138 = phi i64 [ %204, %207 ], [ 0, %6 ]
  %139 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %138, i32 0
  %140 = load i16, i16* %139, align 4
  %141 = add i16 %140, %15
  %142 = getelementptr inbounds [4 x %struct.mv], [4 x %struct.mv]* @vp9_pattern_search_sad.neighbors, i64 0, i64 %138, i32 1
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, %18
  %145 = sext i16 %144 to i32
  %146 = icmp sgt i32 %137, %145
  br i1 %146, label %202, label %147

147:                                              ; preds = %136
  %148 = load i32, i32* %73, align 4
  %149 = icmp slt i32 %148, %145
  br i1 %149, label %202, label %150

150:                                              ; preds = %147
  %151 = sext i16 %141 to i32
  %152 = load i32, i32* %62, align 4
  %153 = icmp sgt i32 %152, %151
  br i1 %153, label %202, label %154

154:                                              ; preds = %150
  %155 = load i32, i32* %65, align 4
  %156 = icmp slt i32 %155, %151
  br i1 %156, label %202, label %157

157:                                              ; preds = %154
  %158 = load i32 (i8*, i32, i8*, i32, i32*)*, i32 (i8*, i32, i8*, i32, i32*)** %21, align 8
  %159 = load i8*, i8** %23, align 8
  %160 = load i32, i32* %25, align 8
  %161 = load i8*, i8** %27, align 8
  %162 = load i32, i32* %29, align 8
  %163 = mul nsw i32 %162, %151
  %164 = add nsw i32 %163, %145
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %161, i64 %165
  %167 = call i32 %158(i8* %159, i32 %160, i8* %166, i32 %162, i32* nonnull %7) #8
  %168 = load i32**, i32*** %77, align 8
  %169 = icmp eq i32** %168, null
  br i1 %169, label %199, label %170

170:                                              ; preds = %157
  %171 = load i32, i32* %78, align 4
  %172 = sub i16 %141, %10
  %173 = sub i16 %144, %13
  %174 = icmp eq i16 %172, 0
  %175 = icmp eq i16 %173, 0
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i64
  %178 = select i1 %175, i64 2, i64 3
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 26, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = load i32*, i32** %168, align 8
  %183 = sext i16 %172 to i64
  %184 = getelementptr inbounds i32, i32* %182, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = add nsw i32 %185, %181
  %187 = getelementptr inbounds i32*, i32** %168, i64 1
  %188 = load i32*, i32** %187, align 8
  %189 = sext i16 %173 to i64
  %190 = getelementptr inbounds i32, i32* %188, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = add nsw i32 %186, %191
  %193 = sext i32 %192 to i64
  %194 = sext i32 %171 to i64
  %195 = mul nsw i64 %193, %194
  %196 = add nsw i64 %195, 8192
  %197 = lshr i64 %196, 14
  %198 = trunc i64 %197 to i32
  br label %199

199:                                              ; preds = %157, %170
  %200 = phi i32 [ %198, %170 ], [ 0, %157 ]
  %201 = add i32 %200, %167
  br label %202

202:                                              ; preds = %154, %150, %147, %136, %199
  %203 = phi i32 [ %201, %199 ], [ 2147483647, %136 ], [ 2147483647, %147 ], [ 2147483647, %150 ], [ 2147483647, %154 ]
  %204 = add nuw nsw i64 %138, 1
  %205 = getelementptr inbounds i32, i32* %5, i64 %204
  store i32 %203, i32* %205, align 4
  %206 = icmp eq i64 %204, 4
  br i1 %206, label %209, label %207

207:                                              ; preds = %202
  %208 = load i32, i32* %69, align 4
  br label %136

209:                                              ; preds = %202, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @exhaustive_mesh_search(%struct.macroblock* nocapture readonly, %struct.mv* nocapture readonly, %struct.mv* nocapture, i32, i32, i32, %struct.vp9_variance_vtable* nocapture readonly, %struct.mv* nocapture readonly) unnamed_addr #5 {
  %9 = alloca [4 x i32], align 16
  %10 = alloca [4 x i8*], align 16
  %11 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 0
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %struct.mv, %struct.mv* %7, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = icmp sgt i32 %4, 1
  %16 = select i1 %15, i32 %4, i32 4
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 0
  %18 = load i32, i32* %17, align 16
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 36, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sext i16 %14 to i32
  %26 = icmp sgt i32 %18, %25
  %27 = icmp slt i32 %20, %25
  %28 = select i1 %27, i32 %20, i32 %25
  %29 = select i1 %26, i32 %18, i32 %28
  %30 = trunc i32 %29 to i16
  %31 = sext i16 %12 to i32
  %32 = icmp sgt i32 %22, %31
  %33 = icmp slt i32 %24, %31
  %34 = select i1 %33, i32 %24, i32 %31
  %35 = select i1 %32, i32 %22, i32 %34
  %36 = trunc i32 %35 to i16
  %37 = bitcast %struct.mv* %2 to i32*
  %38 = shl i32 %29, 16
  %39 = and i32 %35, 65535
  %40 = or i32 %39, %38
  store i32 %40, i32* %37, align 2
  %41 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %6, i64 0, i32 0
  %42 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %41, align 8
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = shl i32 %35, 16
  %50 = ashr exact i32 %49, 16
  %51 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 4, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = mul nsw i32 %52, %50
  %54 = ashr exact i32 %38, 16
  %55 = add nsw i32 %53, %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %48, i64 %56
  %58 = tail call i32 %42(i8* %44, i32 %46, i8* %57, i32 %52) #8
  %59 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 0
  %60 = load i16, i16* %59, align 2
  %61 = sub i16 %36, %60
  %62 = getelementptr inbounds %struct.mv, %struct.mv* %1, i64 0, i32 1
  %63 = load i16, i16* %62, align 2
  %64 = sub i16 %30, %63
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 0
  %66 = icmp eq i16 %61, 0
  %67 = icmp eq i16 %64, 0
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i64
  %70 = select i1 %67, i64 2, i64 3
  %71 = select i1 %66, i64 %69, i64 %70
  %72 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %65, align 8
  %75 = sext i16 %61 to i64
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, %73
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 31, i64 1
  %80 = load i32*, i32** %79, align 8
  %81 = sext i16 %64 to i64
  %82 = getelementptr inbounds i32, i32* %80, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %78, %83
  %85 = mul i32 %84, %5
  %86 = add i32 %85, 256
  %87 = lshr i32 %86, 9
  %88 = add i32 %87, %58
  %89 = sub nsw i32 0, %3
  %90 = load i32, i32* %21, align 8
  %91 = sub nsw i32 %90, %50
  %92 = icmp slt i32 %91, %89
  %93 = select i1 %92, i32 %89, i32 %91
  %94 = load i32, i32* %17, align 16
  %95 = sub nsw i32 %94, %54
  %96 = icmp slt i32 %95, %89
  %97 = select i1 %96, i32 %89, i32 %95
  %98 = load i32, i32* %23, align 4
  %99 = sub nsw i32 %98, %50
  %100 = icmp sgt i32 %99, %3
  %101 = select i1 %100, i32 %3, i32 %99
  %102 = load i32, i32* %19, align 4
  %103 = sub nsw i32 %102, %54
  %104 = icmp sgt i32 %103, %3
  %105 = select i1 %104, i32 %3, i32 %103
  %106 = icmp sgt i32 %93, %101
  br i1 %106, label %318, label %107

107:                                              ; preds = %8
  %108 = icmp slt i32 %105, %97
  %109 = bitcast [4 x i32]* %9 to i8*
  %110 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %111 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %112 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %113 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  %114 = bitcast [4 x i8*]* %10 to i8*
  %115 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  %116 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 1
  %117 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 2
  %118 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 3
  %119 = getelementptr inbounds %struct.vp9_variance_vtable, %struct.vp9_variance_vtable* %6, i64 0, i32 5
  %120 = bitcast [4 x i32]* %9 to i8*
  br label %121

121:                                              ; preds = %107, %314
  %122 = phi i32 [ %93, %107 ], [ %316, %314 ]
  %123 = phi i32 [ %88, %107 ], [ %315, %314 ]
  br i1 %108, label %314, label %124

124:                                              ; preds = %121
  %125 = add i32 %122, %35
  %126 = shl i32 %125, 16
  %127 = ashr exact i32 %126, 16
  %128 = trunc i32 %122 to i16
  %129 = add i16 %128, %36
  %130 = zext i16 %129 to i32
  %131 = sext i16 %129 to i32
  br label %132

132:                                              ; preds = %124, %310
  %133 = phi i32 [ %97, %124 ], [ %312, %310 ]
  %134 = phi i32 [ %123, %124 ], [ %311, %310 ]
  br i1 %15, label %135, label %182

135:                                              ; preds = %132
  %136 = trunc i32 %133 to i16
  %137 = add i16 %136, %30
  %138 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %41, align 8
  %139 = load i8*, i8** %43, align 8
  %140 = load i32, i32* %45, align 8
  %141 = load i8*, i8** %47, align 8
  %142 = load i32, i32* %51, align 8
  %143 = mul nsw i32 %142, %131
  %144 = sext i16 %137 to i32
  %145 = add nsw i32 %143, %144
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %141, i64 %146
  %148 = call i32 %138(i8* %139, i32 %140, i8* %147, i32 %142) #8
  %149 = icmp ult i32 %148, %134
  br i1 %149, label %150, label %310

150:                                              ; preds = %135
  %151 = load i16, i16* %59, align 2
  %152 = sub i16 %129, %151
  %153 = load i16, i16* %62, align 2
  %154 = sub i16 %137, %153
  %155 = icmp eq i16 %152, 0
  %156 = icmp eq i16 %154, 0
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i64
  %159 = select i1 %156, i64 2, i64 3
  %160 = select i1 %155, i64 %158, i64 %159
  %161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = load i32*, i32** %65, align 8
  %164 = sext i16 %152 to i64
  %165 = getelementptr inbounds i32, i32* %163, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = add nsw i32 %166, %162
  %168 = load i32*, i32** %79, align 8
  %169 = sext i16 %154 to i64
  %170 = getelementptr inbounds i32, i32* %168, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %167, %171
  %173 = mul i32 %172, %5
  %174 = add i32 %173, 256
  %175 = lshr i32 %174, 9
  %176 = add i32 %175, %148
  %177 = icmp ult i32 %176, %134
  br i1 %177, label %178, label %310

178:                                              ; preds = %150
  %179 = zext i16 %137 to i32
  %180 = shl nuw i32 %179, 16
  %181 = or i32 %180, %130
  store i32 %181, i32* %37, align 2
  br label %310

182:                                              ; preds = %132
  %183 = add nsw i32 %133, 3
  %184 = icmp sgt i32 %183, %105
  br i1 %184, label %185, label %190

185:                                              ; preds = %182
  %186 = sub nsw i32 %105, %133
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %188, label %310

188:                                              ; preds = %185
  %189 = add i32 %133, %29
  br label %258

190:                                              ; preds = %182
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  %191 = add i32 %133, %29
  %192 = load i8*, i8** %47, align 8
  %193 = load i32, i32* %51, align 8
  %194 = mul nsw i32 %193, %127
  %195 = shl i32 %191, 16
  %196 = ashr exact i32 %195, 16
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %192, i64 %198
  store i8* %199, i8** %115, align 16
  %200 = add i32 %191, 1
  %201 = shl i32 %200, 16
  %202 = ashr exact i32 %201, 16
  %203 = add nsw i32 %194, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %192, i64 %204
  store i8* %205, i8** %116, align 8
  %206 = add i32 %191, 2
  %207 = shl i32 %206, 16
  %208 = ashr exact i32 %207, 16
  %209 = add nsw i32 %194, %208
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i8, i8* %192, i64 %210
  store i8* %211, i8** %117, align 16
  %212 = add i32 %191, 3
  %213 = shl i32 %212, 16
  %214 = ashr exact i32 %213, 16
  %215 = add nsw i32 %194, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %192, i64 %216
  store i8* %217, i8** %118, align 8
  %218 = load void (i8*, i32, i8**, i32, i32*)*, void (i8*, i32, i8**, i32, i32*)** %119, align 8
  %219 = load i8*, i8** %43, align 8
  %220 = load i32, i32* %45, align 8
  call void %218(i8* %219, i32 %220, i8** nonnull %115, i32 %193, i32* nonnull %110) #8
  %221 = load i32, i32* %110, align 16
  %222 = icmp ult i32 %221, %134
  br i1 %222, label %223, label %254

223:                                              ; preds = %190
  %224 = trunc i32 %191 to i16
  %225 = load i16, i16* %59, align 2
  %226 = sub i16 %129, %225
  %227 = load i16, i16* %62, align 2
  %228 = sub i16 %224, %227
  %229 = icmp eq i16 %226, 0
  %230 = icmp eq i16 %228, 0
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i64
  %233 = select i1 %230, i64 2, i64 3
  %234 = select i1 %229, i64 %232, i64 %233
  %235 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = load i32*, i32** %65, align 8
  %238 = sext i16 %226 to i64
  %239 = getelementptr inbounds i32, i32* %237, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = add nsw i32 %240, %236
  %242 = load i32*, i32** %79, align 8
  %243 = sext i16 %228 to i64
  %244 = getelementptr inbounds i32, i32* %242, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = add nsw i32 %241, %245
  %247 = mul i32 %246, %5
  %248 = add i32 %247, 256
  %249 = lshr i32 %248, 9
  %250 = add i32 %249, %221
  %251 = icmp ult i32 %250, %134
  br i1 %251, label %252, label %254

252:                                              ; preds = %223
  %253 = or i32 %195, %130
  store i32 %253, i32* %37, align 2
  br label %254

254:                                              ; preds = %223, %252, %190
  %255 = phi i32 [ %134, %190 ], [ %250, %252 ], [ %134, %223 ]
  %256 = load i32, i32* %111, align 4
  %257 = icmp ult i32 %256, %255
  br i1 %257, label %320, label %351

258:                                              ; preds = %188, %306
  %259 = phi i32 [ 0, %188 ], [ %308, %306 ]
  %260 = phi i32 [ %134, %188 ], [ %307, %306 ]
  %261 = add i32 %189, %259
  %262 = load i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)** %41, align 8
  %263 = load i8*, i8** %43, align 8
  %264 = load i32, i32* %45, align 8
  %265 = load i8*, i8** %47, align 8
  %266 = load i32, i32* %51, align 8
  %267 = mul nsw i32 %266, %131
  %268 = shl i32 %261, 16
  %269 = ashr exact i32 %268, 16
  %270 = add nsw i32 %267, %269
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %265, i64 %271
  %273 = call i32 %262(i8* %263, i32 %264, i8* %272, i32 %266) #8
  %274 = icmp ult i32 %273, %260
  br i1 %274, label %275, label %306

275:                                              ; preds = %258
  %276 = trunc i32 %261 to i16
  %277 = load i16, i16* %59, align 2
  %278 = sub i16 %129, %277
  %279 = load i16, i16* %62, align 2
  %280 = sub i16 %276, %279
  %281 = icmp eq i16 %278, 0
  %282 = icmp eq i16 %280, 0
  %283 = xor i1 %282, true
  %284 = zext i1 %283 to i64
  %285 = select i1 %282, i64 2, i64 3
  %286 = select i1 %281, i64 %284, i64 %285
  %287 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = load i32*, i32** %65, align 8
  %290 = sext i16 %278 to i64
  %291 = getelementptr inbounds i32, i32* %289, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = add nsw i32 %292, %288
  %294 = load i32*, i32** %79, align 8
  %295 = sext i16 %280 to i64
  %296 = getelementptr inbounds i32, i32* %294, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = add nsw i32 %293, %297
  %299 = mul i32 %298, %5
  %300 = add i32 %299, 256
  %301 = lshr i32 %300, 9
  %302 = add i32 %301, %273
  %303 = icmp ult i32 %302, %260
  br i1 %303, label %304, label %306

304:                                              ; preds = %275
  %305 = or i32 %268, %130
  store i32 %305, i32* %37, align 2
  br label %306

306:                                              ; preds = %275, %304, %258
  %307 = phi i32 [ %302, %304 ], [ %260, %275 ], [ %260, %258 ]
  %308 = add nuw nsw i32 %259, 1
  %309 = icmp slt i32 %308, %186
  br i1 %309, label %258, label %310

310:                                              ; preds = %306, %185, %135, %178, %150, %421
  %311 = phi i32 [ %422, %421 ], [ %176, %178 ], [ %134, %150 ], [ %134, %135 ], [ %134, %185 ], [ %307, %306 ]
  %312 = add nsw i32 %133, %16
  %313 = icmp slt i32 %105, %312
  br i1 %313, label %314, label %132

314:                                              ; preds = %310, %121
  %315 = phi i32 [ %123, %121 ], [ %311, %310 ]
  %316 = add nsw i32 %122, %4
  %317 = icmp sgt i32 %316, %101
  br i1 %317, label %318, label %121

318:                                              ; preds = %314, %8
  %319 = phi i32 [ %88, %8 ], [ %315, %314 ]
  ret i32 %319

320:                                              ; preds = %254
  %321 = trunc i32 %200 to i16
  %322 = load i16, i16* %59, align 2
  %323 = sub i16 %129, %322
  %324 = load i16, i16* %62, align 2
  %325 = sub i16 %321, %324
  %326 = icmp eq i16 %323, 0
  %327 = icmp eq i16 %325, 0
  %328 = xor i1 %327, true
  %329 = zext i1 %328 to i64
  %330 = select i1 %327, i64 2, i64 3
  %331 = select i1 %326, i64 %329, i64 %330
  %332 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = load i32*, i32** %65, align 8
  %335 = sext i16 %323 to i64
  %336 = getelementptr inbounds i32, i32* %334, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = add nsw i32 %337, %333
  %339 = load i32*, i32** %79, align 8
  %340 = sext i16 %325 to i64
  %341 = getelementptr inbounds i32, i32* %339, i64 %340
  %342 = load i32, i32* %341, align 4
  %343 = add nsw i32 %338, %342
  %344 = mul i32 %343, %5
  %345 = add i32 %344, 256
  %346 = lshr i32 %345, 9
  %347 = add i32 %346, %256
  %348 = icmp ult i32 %347, %255
  br i1 %348, label %349, label %351

349:                                              ; preds = %320
  %350 = or i32 %201, %130
  store i32 %350, i32* %37, align 2
  br label %351

351:                                              ; preds = %349, %320, %254
  %352 = phi i32 [ %255, %254 ], [ %347, %349 ], [ %255, %320 ]
  %353 = load i32, i32* %112, align 8
  %354 = icmp ult i32 %353, %352
  br i1 %354, label %355, label %386

355:                                              ; preds = %351
  %356 = trunc i32 %206 to i16
  %357 = load i16, i16* %59, align 2
  %358 = sub i16 %129, %357
  %359 = load i16, i16* %62, align 2
  %360 = sub i16 %356, %359
  %361 = icmp eq i16 %358, 0
  %362 = icmp eq i16 %360, 0
  %363 = xor i1 %362, true
  %364 = zext i1 %363 to i64
  %365 = select i1 %362, i64 2, i64 3
  %366 = select i1 %361, i64 %364, i64 %365
  %367 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %366
  %368 = load i32, i32* %367, align 4
  %369 = load i32*, i32** %65, align 8
  %370 = sext i16 %358 to i64
  %371 = getelementptr inbounds i32, i32* %369, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = add nsw i32 %372, %368
  %374 = load i32*, i32** %79, align 8
  %375 = sext i16 %360 to i64
  %376 = getelementptr inbounds i32, i32* %374, i64 %375
  %377 = load i32, i32* %376, align 4
  %378 = add nsw i32 %373, %377
  %379 = mul i32 %378, %5
  %380 = add i32 %379, 256
  %381 = lshr i32 %380, 9
  %382 = add i32 %381, %353
  %383 = icmp ult i32 %382, %352
  br i1 %383, label %384, label %386

384:                                              ; preds = %355
  %385 = or i32 %207, %130
  store i32 %385, i32* %37, align 2
  br label %386

386:                                              ; preds = %384, %355, %351
  %387 = phi i32 [ %352, %351 ], [ %382, %384 ], [ %352, %355 ]
  %388 = load i32, i32* %113, align 4
  %389 = icmp ult i32 %388, %387
  br i1 %389, label %390, label %421

390:                                              ; preds = %386
  %391 = trunc i32 %212 to i16
  %392 = load i16, i16* %59, align 2
  %393 = sub i16 %129, %392
  %394 = load i16, i16* %62, align 2
  %395 = sub i16 %391, %394
  %396 = icmp eq i16 %393, 0
  %397 = icmp eq i16 %395, 0
  %398 = xor i1 %397, true
  %399 = zext i1 %398 to i64
  %400 = select i1 %397, i64 2, i64 3
  %401 = select i1 %396, i64 %399, i64 %400
  %402 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 30, i64 %401
  %403 = load i32, i32* %402, align 4
  %404 = load i32*, i32** %65, align 8
  %405 = sext i16 %393 to i64
  %406 = getelementptr inbounds i32, i32* %404, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = add nsw i32 %407, %403
  %409 = load i32*, i32** %79, align 8
  %410 = sext i16 %395 to i64
  %411 = getelementptr inbounds i32, i32* %409, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = add nsw i32 %408, %412
  %414 = mul i32 %413, %5
  %415 = add i32 %414, 256
  %416 = lshr i32 %415, 9
  %417 = add i32 %416, %388
  %418 = icmp ult i32 %417, %387
  br i1 %418, label %419, label %421

419:                                              ; preds = %390
  %420 = or i32 %213, %130
  store i32 %420, i32* %37, align 2
  br label %421

421:                                              ; preds = %419, %390, %386
  %422 = phi i32 [ %387, %386 ], [ %417, %419 ], [ %387, %390 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  br label %310
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
