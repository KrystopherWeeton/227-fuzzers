; ModuleID = '../../third_party/blink/renderer/core/html/media/media_custom_controls_fullscreen_detector.cc'
source_filename = "../../third_party/blink/renderer/core/html/media/media_custom_controls_fullscreen_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.125", i32, [4 x i8], %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.261", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.277", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.289", %"class.std::__1::unique_ptr.295", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.302", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.241", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i64 }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::Worklist.172"* }
%"class.blink::Worklist.172" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.161" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.221", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.235", [4 x i8] }>
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { i64 }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { float }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.244", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.253" }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.283" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.172"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.179"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.640", i64 }
%"class.std::__1::vector.640" = type { %"class.std::__1::__vector_base.641" }
%"class.std::__1::__vector_base.641" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.642" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__cxx_atomic_impl.304" }
%"struct.std::__1::__cxx_atomic_impl.304" = type { %"struct.std::__1::__cxx_atomic_base_impl.305" }
%"struct.std::__1::__cxx_atomic_base_impl.305" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.blink::MediaCustomControlsFullscreenDetector" = type { %"class.blink::NativeEventListener", %"class.blink::Member", %"class.blink::Member.359" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLVideoElement"* }
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.361", %"class.blink::ExecutionContextClient", %"class.blink::Member.364", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.377", double, %"class.WTF::Vector.382", i32, i8, [3 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ActiveScriptWrappable.361" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.362" }
%"class.blink::WeakMember.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.567", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.609", i32, i8, [3 x i8], %"class.blink::HeapVector.611", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.630", %"class.blink::Member.636", %"class.blink::Member.638", i8, [7 x i8] }>
%"class.blink::Supplementable.567" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.568" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.575" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.29" }
%"class.WTF::HashTable.29" = type <{ %"class.blink::WeakMember.31"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.31" = type opaque
%"class.blink::Supplementable.575" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.576" }
%"class.blink::HeapHashMap.576" = type { %"class.WTF::HashMap.579" }
%"class.WTF::HashMap.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type { i8*, %"class.blink::Member.1585" }
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1587" }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.583, %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.592", %"class.std::__1::unique_ptr.598", %"class.std::__1::unique_ptr.598", %"class.blink::Member.604", i32, [4 x i8], %"class.WTF::HashSet.605", i32, i32 }
%class.scoped_refptr.583 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.584", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.586", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.591 }
%"class.WTF::RefCounted.584" = type { %"class.base::RefCounted.585" }
%"class.base::RefCounted.585" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.586" = type { %"class.absl::optional_internal::optional_data.587" }
%"class.absl::optional_internal::optional_data.587" = type { %"class.absl::optional_internal::optional_data_base.588" }
%"class.absl::optional_internal::optional_data_base.588" = type { %"class.absl::optional_internal::optional_data_dtor_base.589" }
%"class.absl::optional_internal::optional_data_dtor_base.589" = type { i8, %union.anon.590 }
%union.anon.590 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.591 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.363" }
%"class.WTF::HashSet.605" = type { %"class.WTF::HashTable.606" }
%"class.WTF::HashTable.606" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.611" = type { %"class.WTF::Vector.614" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.blink::Member.617"*, i32, i32 }
%"class.blink::Member.617" = type opaque
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.623", i32, i32 }
%"class.blink::HeapHashMap.623" = type { %"class.WTF::HashMap.626" }
%"class.WTF::HashMap.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"struct.WTF::KeyValuePair.629"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.629" = type opaque
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.647", %"class.blink::Member.649", %"class.blink::Member.4", %"class.blink::Member.651", %"class.blink::Member.651", %"class.blink::Member.673", %"class.blink::Member.675", %"class.blink::Member.677", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.682", %"class.blink::HeapVector.684" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.693", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.701", %"class.WTF::Vector.701", i8, i32, %"class.blink::Member.706", %"class.blink::Member.604", %"class.blink::Member.708", %"class.blink::Member.710", %"class.blink::Member.712", %"class.blink::Member.714", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.716", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.722", %"class.blink::Member.724", %"class.blink::Member.690", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.726", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.731", %"class.blink::HeapVector.666", %"class.blink::Member.413", %"class.blink::Member.733", %"class.blink::Member.413", %"class.blink::Member.413", %"class.blink::Member.413", %"class.blink::UserActionElementSet", %"class.blink::Member.742", double, double, i64, i64, %"class.blink::HeapHashSet.744", %"class.blink::HeapHashSet.751", i16, i8, %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.762", %"class.blink::Member.764", %"class.blink::TextLinkColors", %"class.blink::Member.766", i8, [7 x i8], %"class.blink::HeapHashMap.768", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.413", %"class.WTF::Vector.775", %"class.blink::Member.780", %"class.blink::Member.782", i8, %"class.blink::Member.413", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.784", %"class.blink::HeapVector.786", %"class.std::__1::unique_ptr.794", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.800", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.813", %"class.WTF::Vector.815", i8, i8, %"class.std::__1::unique_ptr.820", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.666", %"class.blink::HeapVector.826", i32, i8, %"class.blink::HeapTaskRunnerTimer.731", %"class.blink::HeapTaskRunnerTimer.731", %"class.blink::DocumentTiming", %"class.blink::Member.834", i8, i32, %"class.blink::Member.836", %"class.blink::Member.838", %"class.blink::Member.840", %"class.blink::HeapTaskRunnerTimer.731", %"class.blink::Member.842", %"class.WTF::HashMap.844", %"class.blink::Member.849", %"class.blink::Member.851", %"class.blink::Member.853", %"class.blink::Member.855", %"class.blink::Member.649", %"class.blink::Member.649", %"class.blink::HeapTaskRunnerTimer.731", %"class.blink::HeapHashSet.857", i8, i32, %"class.blink::Member.864", %"class.blink::Member.866", i32, %"class.blink::Member.868", %"class.blink::Member.870", %"class.blink::Member.872", %"class.std::__1::unique_ptr.874", i64, %"class.std::__1::unique_ptr.880", i32, i32, %"class.blink::Member.895", %"class.blink::Member.897", %"class.blink::Member.899", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.901", %"class.WTF::Vector.903", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.908", %"class.blink::Member.915", %"class.std::__1::unique_ptr.917", %"class.blink::Member.923", i8, i8, %"class.WTF::String", %"class.blink::Member.925", i8, [7 x i8], %"class.blink::HeapHashMap.927", %"class.blink::HeapObserverSet.934", %"class.blink::Member.942", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.944", i32, i8, i8, %"class.blink::WeakMember.946", %"class.blink::Member.947" }
%"class.blink::Supplementable.693" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.694" }
%"class.blink::HeapHashMap.694" = type { %"class.WTF::HashMap.697" }
%"class.WTF::HashMap.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"struct.WTF::KeyValuePair.700"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.700" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.323 }
%class.scoped_refptr.323 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.324", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.33" }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.314 }
%class.scoped_refptr.314 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.112", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.112" = type { %"class.base::RefCounted.113" }
%"class.base::RefCounted.113" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.116" }
%"class.blink::HeapHashMap.116" = type { %"class.WTF::HashMap.119" }
%"class.WTF::HashMap.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ %"struct.WTF::KeyValuePair.122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.122" = type { %"class.blink::WeakMember.123", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.735" }
%"class.blink::HeapHashMap.735" = type { %"class.WTF::HashMap.738" }
%"class.WTF::HashMap.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"struct.WTF::KeyValuePair.741"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.741" = type opaque
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.744" = type { %"class.WTF::HashSet.747" }
%"class.WTF::HashSet.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"class.blink::WeakMember.750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.750" = type opaque
%"class.blink::HeapHashSet.751" = type { %"class.WTF::HashSet.754" }
%"class.WTF::HashSet.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"class.blink::WeakMember.757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.757" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.768" = type { %"class.WTF::HashMap.771" }
%"class.WTF::HashMap.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ %"struct.WTF::KeyValuePair.774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.774" = type opaque
%"class.WTF::Vector.775" = type { %"class.WTF::VectorBuffer.776" }
%"class.WTF::VectorBuffer.776" = type { %"class.WTF::VectorBufferBase.777" }
%"class.WTF::VectorBufferBase.777" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.786" = type { %"class.WTF::Vector.789" }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791" }
%"class.WTF::VectorBufferBase.791" = type { %"class.blink::Member.792"*, i32, i32 }
%"class.blink::Member.792" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.800" = type { %"class.WTF::HashSet.803" }
%"class.WTF::HashSet.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"class.blink::WeakMember.806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.806" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.807", i32, [4 x i8] }>
%"class.WTF::Vector.807" = type { %"class.WTF::VectorBuffer.808" }
%"class.WTF::VectorBuffer.808" = type { %"class.WTF::VectorBufferBase.809" }
%"class.WTF::VectorBufferBase.809" = type { %"struct.std::__1::pair.810"*, i32, i32 }
%"struct.std::__1::pair.810" = type opaque
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.666" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::Member.413"*, i32, i32 }
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.blink::Member.832"*, i32, i32 }
%"class.blink::Member.832" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.649" }
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.731" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.732", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.32, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.32 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.39", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"class.blink::WeakMember.732" = type { %"class.blink::MemberBase.650" }
%"class.blink::HeapHashSet.857" = type { %"class.WTF::HashSet.860" }
%"class.WTF::HashSet.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"class.blink::Member.863"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.863" = type opaque
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.883", %"class.WTF::HashSet.883", %"class.WTF::HashSet.883", %"class.WTF::HashSet.883", %"class.WTF::HashSet.883", %"class.WTF::HashSet.883", i32, [4 x i8], %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", %"class.WTF::HashMap.887", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.887" = type { %"class.WTF::HashTable.888" }
%"class.WTF::HashTable.888" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905" }
%"class.WTF::VectorBufferBase.905" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.908" = type { %"class.WTF::HashMap.911" }
%"class.WTF::HashMap.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"struct.WTF::KeyValuePair.914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.914" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.927" = type { %"class.WTF::HashMap.930" }
%"class.WTF::HashMap.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type opaque
%"class.blink::HeapObserverSet.934" = type { i32, [4 x i8], %"class.blink::HeapHashSet.935" }
%"class.blink::HeapHashSet.935" = type { %"class.WTF::HashSet.938" }
%"class.WTF::HashSet.938" = type { %"class.WTF::HashTable.939" }
%"class.WTF::HashTable.939" = type <{ %"class.blink::WeakMember.941"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.941" = type opaque
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.649", %"class.blink::HeapHashSet.951", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.958", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.951" = type { %"class.WTF::HashSet.954" }
%"class.WTF::HashSet.954" = type { %"class.WTF::HashTable.955" }
%"class.WTF::HashTable.955" = type <{ %"class.blink::Member.957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.957" = type opaque
%"class.blink::HeapTaskRunnerTimer.958" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.959", { i64, i64 } }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.945" }
%"class.blink::WeakMember.946" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.655" }
%"class.blink::HeapHashMap.655" = type { %"class.WTF::HashMap.658" }
%"class.WTF::HashMap.658" = type { %"class.WTF::HashTable.659" }
%"class.WTF::HashTable.659" = type <{ %"struct.WTF::KeyValuePair.661"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.661" = type { %"class.WTF::AtomicString", %"class.blink::Member.662" }
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.413", i32, %"class.blink::HeapVector.666" }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.679" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::HeapHashMap.681"* }
%"class.blink::HeapHashMap.681" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.684" = type { %"class.WTF::Vector.687" }
%"class.WTF::Vector.687" = type { %"class.WTF::VectorBuffer.688" }
%"class.WTF::VectorBuffer.688" = type { %"class.WTF::VectorBufferBase.689" }
%"class.WTF::VectorBufferBase.689" = type { %"class.blink::Member.690"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.369", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.373", i32, i32 }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.377" = type { %"class.WTF::VectorBuffer.378" }
%"class.WTF::VectorBuffer.378" = type { %"class.WTF::VectorBufferBase.379" }
%"class.WTF::VectorBufferBase.379" = type { float*, i32, i32 }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.385, i8, i8, i8, i8 }>
%union.anon.385 = type { i32 }
%"class.blink::HTMLVideoElement" = type { %"class.blink::HTMLMediaElement", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %"class.blink::Supplementable.400", %"class.blink::Member.408", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.471", %"class.WTF::AtomicString", i8, %"class.std::__1::unique_ptr.473" }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.47", %"class.blink::Member.49", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.52", %"class.blink::Member.54", double, double, %"class.absl::optional.56", double, double, double, i32, %"class.blink::Member.65", %"class.blink::Member.2", i32, %"class.blink::HeapTaskRunnerTimer", %"class.std::__1::unique_ptr.67", %"class.cc::Layer"*, %class.scoped_refptr.73, %"class.blink::Member.74", double, i8, double, i32, i16, %"class.absl::optional.76", i8, %"class.base::TimeTicks", %"class.blink::Member.81", %"class.blink::Member.83", %"class.blink::Member.85", %"class.blink::HeapVector", %"class.blink::Member.94", %"class.blink::HeapVector.96", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.96", %"class.blink::HeapVector.96", i32, %"class.blink::Member.319", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.352", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.354", %"class.blink::Member.357", %"class.blink::Member.359", %"class.blink::Member.388", %"class.blink::Member.390", %"class.blink::Member.397" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.45", { i64, i64 } }
%"class.blink::WeakMember.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.73 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { i8 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.89" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::Member.92"*, i32, i32 }
%"class.blink::Member.92" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.96" = type { %"class.WTF::Vector.99" }
%"class.WTF::Vector.99" = type { %"class.WTF::VectorBuffer.100" }
%"class.WTF::VectorBuffer.100" = type { %"class.WTF::VectorBufferBase.101" }
%"class.WTF::VectorBufferBase.101" = type { %"class.blink::Member.102"*, i32, i32 }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.106", i32, %"class.blink::Member.107", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.311", %"class.blink::SelfKeepAlive.315" }
%"class.blink::ThreadState::PrefinalizerRegistration.106" = type { i8 }
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.111, %"class.blink::Member.306", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.111 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.308" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.107", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.311", %class.scoped_refptr.314 }
%"class.blink::TraceWrapperV8Reference.311" = type { %"class.v8::TracedReference.312" }
%"class.v8::TracedReference.312" = type { %"class.v8::BasicTracedReference.313" }
%"class.v8::BasicTracedReference.313" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.315" = type { %"class.blink::Persistent.316" }
%"class.blink::Persistent.316" = type { %"class.blink::PersistentBase.317" }
%"class.blink::PersistentBase.317" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.321, %"class.blink::Member.348", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.321 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.325, %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.341", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.347" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.322" }>
%"class.base::RefCountedThreadSafe.322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.325 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.329", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { float** }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.347" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.319" }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.356" }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.46" }
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::DisallowNewWrapper.392"* }
%"class.blink::DisallowNewWrapper.392" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.395" }
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::DisallowNewWrapper.399"* }
%"class.blink::DisallowNewWrapper.399" = type opaque
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::Supplementable.400" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.401" }
%"class.blink::HeapHashMap.401" = type { %"class.WTF::HashMap.404" }
%"class.WTF::HashMap.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"struct.WTF::KeyValuePair.407"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.407" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.412", %"class.blink::Member.413", %"class.blink::Member.415", %"class.blink::Member.415", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.457" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.412" = type { i8 }
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.419", float, i8, %class.scoped_refptr.421, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.421 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.423, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.439" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.422" }
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.423 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.424", i64, %"class.WTF::Vector.426", %"class.WTF::Vector.431" }
%"class.WTF::RefCounted.424" = type { %"class.base::RefCounted.425" }
%"class.base::RefCounted.425" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { i8*, i32, i32 }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.std::__1::unique_ptr.434"*, i32, i32 }
%"class.std::__1::unique_ptr.434" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.437" }
%"class.blink::PersistentBase.437" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.438" }
%"class.blink::PersistentNodePtr.438" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.450 }
%class.scoped_refptr.450 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.457" = type { %"class.WTF::Vector.460" }
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.blink::Member.463"*, i32, i32 }
%"class.blink::Member.463" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::MediaCustomControlsFullscreenDetector"* }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::VideoWakeLock"* }
%"class.blink::VideoWakeLock" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::MediaRemotingInterstitial"* }
%"class.blink::MediaRemotingInterstitial" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::PictureInPictureInterstitial"* }
%"class.blink::PictureInPictureInterstitial" = type opaque
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr.477", %"class.base::WeakPtr.478", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.514", i8, i32, i32, i32, %"class.WTF::Vector.536", i8, i8, i64, i64, %"class.base::RepeatingCallback.542", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.563" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.476" }
%"class.base::WeakPtrFactory.476" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.33" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.477" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.478" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.505", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.488, [384 x i64], %class.sk_sp.489, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.490", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.496" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.488 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.489 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.502, %class.SkPixmap, %class.sk_sp.504 }
%class.sk_sp.502 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.503, i32, i32 }
%class.sk_sp.503 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.33" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.504 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.517, %"class.std::__1::unique_ptr.518" }
%class.scoped_refptr.517 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.521", %struct.SkRect }
%"class.absl::optional.521" = type { %"class.absl::optional_internal::optional_data.522" }
%"class.absl::optional_internal::optional_data.522" = type { %"class.absl::optional_internal::optional_data_base.523" }
%"class.absl::optional_internal::optional_data_base.523" = type { %"class.absl::optional_internal::optional_data_dtor_base.524" }
%"class.absl::optional_internal::optional_data_dtor_base.524" = type { i8, %union.anon.525 }
%union.anon.525 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { %class.scoped_refptr.539*, i32, i32 }
%class.scoped_refptr.539 = type opaque
%"class.base::RepeatingCallback.542" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.543" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.547", %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.557" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.557" = type { %"class.std::__1::__vector_base.558" }
%"class.std::__1::__vector_base.558" = type { %"struct.std::__1::pair.559"*, %"struct.std::__1::pair.559"*, %"class.std::__1::__compressed_pair.560" }
%"struct.std::__1::pair.559" = type { i32, i32 }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::pair.559"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.503, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.563" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.960" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::WeakPersistent.961" = type { %"class.blink::PersistentBase.962" }
%"class.blink::PersistentBase.962" = type { %"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::PersistentNodePtr.438" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.311" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent.961" }
%"class.blink::HeapVector.963" = type { %"class.WTF::Vector.966" }
%"class.WTF::Vector.966" = type { %"class.WTF::VectorBuffer.967" }
%"class.WTF::VectorBuffer.967" = type { %"class.WTF::VectorBufferBase.968" }
%"class.WTF::VectorBufferBase.968" = type { %"class.blink::Member.969"*, i32, i32 }
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::IntersectionObserverEntry"* }
%"class.blink::IntersectionObserverEntry" = type { %"class.blink::ScriptWrappable", %"class.blink::IntersectionGeometry", double, %"class.blink::Member.413" }
%"class.blink::IntersectionGeometry" = type <{ %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", i32, [4 x i8], double, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1619", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::Member.1642", %"class.blink::Member.1644" }
%"class.blink::Member.1619" = type { %"class.blink::MemberBase.1620" }
%"class.blink::MemberBase.1620" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.978 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.978, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1429" }
%"class.std::__1::unique_ptr.1429" = type { %"class.std::__1::__compressed_pair.1430" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1432", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1438", %"class.std::__1::unique_ptr.1561", i8, %"class.absl::optional.1567", %class.scoped_refptr.1543, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1572" }
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1441, %class.scoped_refptr.1441, %class.scoped_refptr.1441, %class.scoped_refptr.1441, %class.scoped_refptr.1441, %class.scoped_refptr.1441, %class.scoped_refptr.1476, %class.scoped_refptr.1492, %class.scoped_refptr.1493, %class.scoped_refptr.1493, %class.scoped_refptr.1493, %class.scoped_refptr.1493, %class.scoped_refptr.1493, %class.scoped_refptr.1493, %class.scoped_refptr.1533, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1534, %class.scoped_refptr.1557 }
%class.scoped_refptr.1441 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1458" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1442", i8, i8, %class.scoped_refptr.1444, i32, i32 }
%"class.WTF::RefCounted.1442" = type { %"class.base::RefCounted.1443" }
%"class.base::RefCounted.1443" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1444 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1451, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1452", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1445" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1451 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1477", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1477" = type { %"class.WTF::RefCounted.1478", i8, i8, %class.scoped_refptr.1451, i32, i32 }
%"class.WTF::RefCounted.1478" = type { %"class.base::RefCounted.1479" }
%"class.base::RefCounted.1479" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1480" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1480" = type { %"class.absl::optional_internal::optional_data.1481" }
%"class.absl::optional_internal::optional_data.1481" = type { %"class.absl::optional_internal::optional_data_base.1482" }
%"class.absl::optional_internal::optional_data_base.1482" = type { %"class.absl::optional_internal::optional_data_dtor_base.1483" }
%"class.absl::optional_internal::optional_data_dtor_base.1483" = type { i8, %union.anon.1484 }
%union.anon.1484 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1485", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1485" = type { %"class.std::__1::__vector_base.1486" }
%"class.std::__1::__vector_base.1486" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1487" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1452" = type { %"class.std::__1::__compressed_pair.1453" }
%"class.std::__1::__compressed_pair.1453" = type { %"struct.std::__1::__compressed_pair_elem.1454" }
%"struct.std::__1::__compressed_pair_elem.1454" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1458" = type { %"class.std::__1::__compressed_pair.1459" }
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1461", %"class.std::__1::unique_ptr.1467", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1467" = type { %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1476 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1492 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1493 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1494" }
%"class.blink::PaintPropertyNode.1494" = type { %"class.WTF::RefCounted.1495", i8, i8, %class.scoped_refptr.1497, i32, i32 }
%"class.WTF::RefCounted.1495" = type { %"class.base::RefCounted.1496" }
%"class.base::RefCounted.1496" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1497 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1444, %class.scoped_refptr.1498, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1520", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1498 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1535" }
%"class.blink::PaintPropertyNode.1535" = type { %"class.WTF::RefCounted.1536", i8, i8, %class.scoped_refptr.1498, i32, i32 }
%"class.WTF::RefCounted.1536" = type { %"class.base::RefCounted.1537" }
%"class.base::RefCounted.1537" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1499" }
%"class.std::__1::vector.1499" = type { %"class.std::__1::__vector_base.1500" }
%"class.std::__1::__vector_base.1500" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1515" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1501, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1508", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1501 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1502, i32, %"class.absl::optional.1503", i8, i32 }
%class.sk_sp.1502 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1503" = type { %"class.absl::optional_internal::optional_data.1504" }
%"class.absl::optional_internal::optional_data.1504" = type { %"class.absl::optional_internal::optional_data_base.1505" }
%"class.absl::optional_internal::optional_data_base.1505" = type { %"class.absl::optional_internal::optional_data_dtor_base.1506" }
%"class.absl::optional_internal::optional_data_dtor_base.1506" = type { i8, %union.anon.1507 }
%union.anon.1507 = type { %struct.SkRect }
%"class.std::__1::vector.1508" = type { %"class.std::__1::__vector_base.1509" }
%"class.std::__1::__vector_base.1509" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1510" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.1516" }
%"struct.std::__1::__compressed_pair_elem.1516" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1520" = type { %"class.std::__1::__compressed_pair.1521" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1526" }
%"class.std::__1::vector.1526" = type { %"class.std::__1::__vector_base.1527" }
%"class.std::__1::__vector_base.1527" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1529" }
%"struct.std::__1::__compressed_pair_elem.1529" = type { i32* }
%class.scoped_refptr.1533 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1534 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1546" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1444, %"class.absl::optional.1538", %class.scoped_refptr.1543, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1538" = type { %"class.absl::optional_internal::optional_data.1539" }
%"class.absl::optional_internal::optional_data.1539" = type { %"class.absl::optional_internal::optional_data_base.1540" }
%"class.absl::optional_internal::optional_data_base.1540" = type { %"class.absl::optional_internal::optional_data_dtor_base.1541" }
%"class.absl::optional_internal::optional_data_dtor_base.1541" = type { i8, [3 x i8], %union.anon.1542 }
%union.anon.1542 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1546" = type { %"class.std::__1::__compressed_pair.1547" }
%"class.std::__1::__compressed_pair.1547" = type { %"struct.std::__1::__compressed_pair_elem.1548" }
%"struct.std::__1::__compressed_pair_elem.1548" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1549", i32, [4 x i8] }>
%"class.WTF::Vector.1549" = type { %"class.WTF::VectorBuffer.1550" }
%"class.WTF::VectorBuffer.1550" = type { %"class.WTF::VectorBufferBase.1551" }
%"class.WTF::VectorBufferBase.1551" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1557 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1444, %class.scoped_refptr.1498, %class.scoped_refptr.1497 }
%"class.absl::optional.1567" = type { %"class.absl::optional_internal::optional_data.1568" }
%"class.absl::optional_internal::optional_data.1568" = type { %"class.absl::optional_internal::optional_data_base.1569" }
%"class.absl::optional_internal::optional_data_base.1569" = type { %"class.absl::optional_internal::optional_data_dtor_base.1570" }
%"class.absl::optional_internal::optional_data_dtor_base.1570" = type { i8, %union.anon.1571 }
%union.anon.1571 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1543 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1544", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1356, i32, %"struct.std::__1::atomic.40", %"struct.std::__1::atomic.40", i8, i8 }>
%class.sk_sp.1356 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.1357, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1358, %class.SkTDArray.1359, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.1357 = type { %"struct.std::__1::atomic.33" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1358 = type { i8*, i32, i32 }
%class.SkTDArray.1359 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1360 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.33", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1360 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.302", [3 x i8] }
%"class.WTF::RefCounted.1544" = type { %"class.base::RefCounted.1545" }
%"class.base::RefCounted.1545" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1572" = type { %"class.std::__1::__compressed_pair.1573" }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1574" }
%"struct.std::__1::__compressed_pair_elem.1574" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.978 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1414", %"class.std::__1::unique_ptr.1416" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1049", %"class.blink::DataRef.1129", %"class.blink::DataRef.1133", %"class.blink::DataRef.1334", %"class.blink::DataRef.1397", %"class.blink::DataRef.1401", %"class.blink::DataRef.1405", %"class.blink::DataRef.1409", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.979 }
%class.scoped_refptr.979 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.980", %"class.blink::DataRef.982", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.980" = type { %"class.base::RefCounted.981" }
%"class.base::RefCounted.981" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.982" = type { %class.scoped_refptr.983 }
%class.scoped_refptr.983 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.984", %"class.blink::Font" }
%"class.WTF::RefCounted.984" = type { %"class.base::RefCounted.985" }
%"class.base::RefCounted.985" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1018 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.987, %class.scoped_refptr.995, %class.scoped_refptr.1005, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1017 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.986 }
%class.scoped_refptr.986 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1583", [4 x i8] }>
%"class.WTF::RefCounted.1583" = type { %"class.base::RefCounted.1584" }
%"class.base::RefCounted.1584" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.987 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.993", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.988" }
%"class.WTF::Vector.988" = type { %"class.WTF::VectorBuffer.989" }
%"class.WTF::VectorBuffer.989" = type { %"class.WTF::VectorBufferBase.990" }
%"class.WTF::VectorBufferBase.990" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.993" = type { %"class.base::RefCounted.994" }
%"class.base::RefCounted.994" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.995 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.996", %"class.WTF::RefCounted.1003", [4 x i8] }>
%"class.blink::FontSettings.996" = type { %"class.WTF::Vector.997" }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %"class.blink::FontTagValuePair.1000"*, i32, i32 }
%"class.blink::FontTagValuePair.1000" = type { i32, float }
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1005 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1006", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1014, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1010 }
%union.anon.1010 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1014 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1015", [4 x i8] }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1017 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1018 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1019", %"class.WTF::Vector.1021", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1046", i32, i16, i8, %"class.base::WeakPtr.1048" }
%"class.WTF::RefCounted.1019" = type { %"class.base::RefCounted.1020" }
%"class.base::RefCounted.1020" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1021" = type { %"class.WTF::VectorBuffer.1022" }
%"class.WTF::VectorBuffer.1022" = type { %"class.WTF::VectorBufferBase.1023", [8 x i8] }
%"class.WTF::VectorBufferBase.1023" = type { %class.scoped_refptr.1024*, i32, i32 }
%class.scoped_refptr.1024 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1025", [4 x i8] }>
%"class.WTF::RefCounted.1025" = type { %"class.base::RefCounted.1026" }
%"class.base::RefCounted.1026" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1036", %class.scoped_refptr.1043, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1025" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1029", %"class.absl::optional.1029", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1029" = type { %"class.absl::optional_internal::optional_data.1030" }
%"class.absl::optional_internal::optional_data.1030" = type { %"class.absl::optional_internal::optional_data_base.1031" }
%"class.absl::optional_internal::optional_data_base.1031" = type { %"class.absl::optional_internal::optional_data_dtor_base.1032" }
%"class.absl::optional_internal::optional_data_dtor_base.1032" = type { i8, %union.anon.1033 }
%union.anon.1033 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.1034, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1035, i8, [7 x i8] }>
%class.sk_sp.1034 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.33" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1035 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.1034, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1036" = type { %"class.std::__1::__compressed_pair.1037" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1039, %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1043 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1044", [4 x i8] }>
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.1046" = type { %"class.blink::PersistentBase.1047" }
%"class.blink::PersistentBase.1047" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.438" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr.1048" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1049" = type { %class.scoped_refptr.1050 }
%class.scoped_refptr.1050 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1051", [4 x i8], %"class.blink::DataRef.1053", %"class.blink::DataRef.1094", %"class.WTF::Vector.1098", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1102, %class.scoped_refptr.1111, %"class.blink::Persistent.1119", %"class.blink::Persistent.1121", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1051" = type { %"class.base::RefCounted.1052" }
%"class.base::RefCounted.1052" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1053" = type { %class.scoped_refptr.1054 }
%class.scoped_refptr.1054 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1055", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1057, %class.scoped_refptr.1064, %"class.blink::Persistent.1081", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1055" = type { %"class.base::RefCounted.1056" }
%"class.base::RefCounted.1056" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1057 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1058", %"class.WTF::Vector.1059" }
%"class.base::RefCountedThreadSafe.1058" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1059" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061" }
%"class.WTF::VectorBufferBase.1061" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1064 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1065", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1065" = type { %"class.base::RefCounted.1066" }
%"class.base::RefCounted.1066" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1067", %"class.blink::Persistent.1072" }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1599 }
%class.scoped_refptr.1599 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1600", %"class.WTF::Vector.1317", %"class.WTF::Vector.1602", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1600" = type { %"class.base::RefCounted.1601" }
%"class.base::RefCounted.1601" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1317" = type { %"class.WTF::VectorBuffer.1318" }
%"class.WTF::VectorBuffer.1318" = type { %"class.WTF::VectorBufferBase.1319" }
%"class.WTF::VectorBufferBase.1319" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1602" = type { %"class.WTF::VectorBuffer.1603" }
%"class.WTF::VectorBuffer.1603" = type { %"class.WTF::VectorBufferBase.1604" }
%"class.WTF::VectorBufferBase.1604" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1605 }
%union.anon.1605 = type { double }
%"class.blink::Persistent.1072" = type { %"class.blink::PersistentBase.1073" }
%"class.blink::PersistentBase.1073" = type { %"class.blink::HeapHashMap.1074"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1074" = type { %"class.WTF::HashMap.1077" }
%"class.WTF::HashMap.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"struct.WTF::KeyValuePair.1080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1080" = type opaque
%"class.blink::Persistent.1081" = type { %"class.blink::PersistentBase.1082" }
%"class.blink::PersistentBase.1082" = type { %"class.blink::HeapVector.1083"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1083" = type { %"class.WTF::Vector.1086" }
%"class.WTF::Vector.1086" = type { %"class.WTF::VectorBuffer.1087" }
%"class.WTF::VectorBuffer.1087" = type { %"class.WTF::VectorBufferBase.1088" }
%"class.WTF::VectorBufferBase.1088" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1089", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1094" = type { %class.scoped_refptr.1095 }
%class.scoped_refptr.1095 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1096", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1102 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1103", %"class.WTF::Vector.1105" }
%"class.WTF::RefCounted.1103" = type { %"class.base::RefCounted.1104" }
%"class.base::RefCounted.1104" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1105" = type { %"class.WTF::VectorBuffer.1106" }
%"class.WTF::VectorBuffer.1106" = type { %"class.WTF::VectorBufferBase.1107" }
%"class.WTF::VectorBufferBase.1107" = type { %"struct.std::__1::pair.1108"*, i32, i32 }
%"struct.std::__1::pair.1108" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1111 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1112", [4 x i8], %"class.WTF::Vector.1114" }
%"class.WTF::RefCounted.1112" = type { %"class.base::RefCounted.1113" }
%"class.base::RefCounted.1113" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1116", [28 x i8] }>
%"class.WTF::VectorBufferBase.1116" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1119" = type { %"class.blink::PersistentBase.1120" }
%"class.blink::PersistentBase.1120" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1121" = type { %"class.blink::PersistentBase.1122" }
%"class.blink::PersistentBase.1122" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1125", %"class.blink::Member.1127" }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1131", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1133" = type { %class.scoped_refptr.1134 }
%class.scoped_refptr.1134 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1135", [4 x i8], %"class.blink::DataRef.1137", %"class.blink::DataRef.1203", %"class.blink::TransformOperations", %class.scoped_refptr.1111, %"class.blink::Persistent.1328", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1137" = type { %class.scoped_refptr.1138 }
%class.scoped_refptr.1138 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1139", [4 x i8], %"class.blink::DataRef.1141", %"class.blink::Persistent.1179", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1141" = type { %class.scoped_refptr.1142 }
%class.scoped_refptr.1142 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1143", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1161, %class.scoped_refptr.1164, %class.scoped_refptr.1167, %class.scoped_refptr.1170, %class.scoped_refptr.1171, %class.scoped_refptr.1172, %"class.blink::Persistent.1179", %"class.blink::Persistent.1194", %"class.absl::optional.1198", %"class.absl::optional.1198", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1143" = type { %"class.base::RefCounted.1144" }
%"class.base::RefCounted.1144" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1145", %"class.std::__1::unique_ptr.1150" }
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1146" }
%"class.WTF::VectorBuffer.1146" = type { %"class.WTF::VectorBufferBase.1147" }
%"class.WTF::VectorBufferBase.1147" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1153", %"class.WTF::Vector.1145", i32, i32 }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1161 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1162", [4 x i8] }>
%"class.WTF::RefCounted.1162" = type { %"class.base::RefCounted.1163" }
%"class.base::RefCounted.1163" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1164 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1165", [4 x i8] }>
%"class.WTF::RefCounted.1165" = type { %"class.base::RefCounted.1166" }
%"class.base::RefCounted.1166" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1167 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1168" }>
%"class.WTF::RefCounted.1168" = type { %"class.base::RefCounted.1169" }
%"class.base::RefCounted.1169" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1170 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1171 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1172 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1173", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1173" = type { %"class.base::RefCounted.1174" }
%"class.base::RefCounted.1174" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1175" }
%"class.blink::DataRef.1175" = type { %class.scoped_refptr.1176 }
%class.scoped_refptr.1176 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1119", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1177" }
%"class.WTF::RefCounted.1177" = type { %"class.base::RefCounted.1178" }
%"class.base::RefCounted.1178" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1194" = type { %"class.blink::PersistentBase.1195" }
%"class.blink::PersistentBase.1195" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1164, %"class.blink::Member.1089", i32, [4 x i8] }>
%"class.absl::optional.1198" = type { %"class.absl::optional_internal::optional_data.1199" }
%"class.absl::optional_internal::optional_data.1199" = type { %"class.absl::optional_internal::optional_data_base.1200" }
%"class.absl::optional_internal::optional_data_base.1200" = type { %"class.absl::optional_internal::optional_data_dtor_base.1201" }
%"class.absl::optional_internal::optional_data_dtor_base.1201" = type { i8, [3 x i8], %union.anon.1202 }
%union.anon.1202 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1179" = type { %"class.blink::PersistentBase.1180" }
%"class.blink::PersistentBase.1180" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1183" }
%"class.blink::HeapVector.1183" = type { %"class.WTF::Vector.1186" }
%"class.WTF::Vector.1186" = type { %"class.WTF::VectorBuffer.1187" }
%"class.WTF::VectorBuffer.1187" = type { %"class.WTF::VectorBufferBase.1188" }
%"class.WTF::VectorBufferBase.1188" = type { %"class.blink::Member.1189"*, i32, i32 }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1203" = type { %class.scoped_refptr.1204 }
%class.scoped_refptr.1204 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1205", %"class.blink::DataRef.1207", %"class.blink::DataRef.1211", %"class.blink::DataRef.1220", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1239", %"class.std::__1::unique_ptr.1250", %"class.std::__1::unique_ptr.1289", %"class.std::__1::unique_ptr.1300", %"class.std::__1::unique_ptr.1311", %"class.WTF::Vector.1317", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1205" = type { %"class.base::RefCounted.1206" }
%"class.base::RefCounted.1206" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1207" = type { %class.scoped_refptr.1208 }
%class.scoped_refptr.1208 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1209", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1209" = type { %"class.base::RefCounted.1210" }
%"class.base::RefCounted.1210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1211" = type { %class.scoped_refptr.1212 }
%class.scoped_refptr.1212 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1213", [4 x i8], %"class.WTF::Vector.1215", i8, [7 x i8] }>
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1215" = type { %"class.WTF::VectorBuffer.1216" }
%"class.WTF::VectorBuffer.1216" = type { %"class.WTF::VectorBufferBase.1217" }
%"class.WTF::VectorBufferBase.1217" = type { i32*, i32, i32 }
%"class.blink::DataRef.1220" = type { %class.scoped_refptr.1221 }
%class.scoped_refptr.1221 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1222", [4 x i8], %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1224", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1229", %"class.WTF::HashMap.1234", %"class.WTF::Vector.1145", %"class.WTF::Vector.1145", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1228"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1228" = type { %"class.WTF::String", %"class.WTF::Vector.1589" }
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591" }
%"class.WTF::VectorBufferBase.1591" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"struct.WTF::KeyValuePair.1233"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1233" = type { i64, %"class.WTF::Vector.1317" }
%"class.WTF::HashMap.1234" = type { %"class.WTF::HashTable.1235" }
%"class.WTF::HashTable.1235" = type <{ %"struct.WTF::KeyValuePair.1238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1238" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1242" }
%"class.WTF::HashMap.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"struct.WTF::KeyValuePair.1246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1246" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1594", %"class.absl::optional.1594", %"class.absl::optional.1594" }
%"class.absl::optional.1594" = type { %"class.absl::optional_internal::optional_data.1595" }
%"class.absl::optional_internal::optional_data.1595" = type { %"class.absl::optional_internal::optional_data_base.1596" }
%"class.absl::optional_internal::optional_data_base.1596" = type { %"class.absl::optional_internal::optional_data_dtor_base.1597" }
%"class.absl::optional_internal::optional_data_dtor_base.1597" = type { i8, %union.anon.1598 }
%union.anon.1598 = type { i32 }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1098", %"class.WTF::Vector.1266", %"class.WTF::Vector.1253", %"class.WTF::Vector.1271", %"class.WTF::Vector.1276", %"class.WTF::Vector.1281" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1253", %"class.WTF::Vector.1253", %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %class.scoped_refptr.1261*, i32, i32 }
%class.scoped_refptr.1261 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1262", i32 }
%"class.WTF::ThreadSafeRefCounted.1262" = type { %"class.base::RefCountedThreadSafe.1263" }
%"class.base::RefCountedThreadSafe.1263" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1253" = type { %"class.WTF::VectorBuffer.1254" }
%"class.WTF::VectorBuffer.1254" = type { %"class.WTF::VectorBufferBase.1255" }
%"class.WTF::VectorBufferBase.1255" = type { double*, i32, i32 }
%"class.WTF::Vector.1271" = type { %"class.WTF::VectorBuffer.1272" }
%"class.WTF::VectorBuffer.1272" = type { %"class.WTF::VectorBufferBase.1273" }
%"class.WTF::VectorBufferBase.1273" = type { i32*, i32, i32 }
%"class.WTF::Vector.1276" = type { %"class.WTF::VectorBuffer.1277" }
%"class.WTF::VectorBuffer.1277" = type { %"class.WTF::VectorBufferBase.1278" }
%"class.WTF::VectorBufferBase.1278" = type { i32*, i32, i32 }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1292" }
%"class.WTF::Vector.1292" = type { %"class.WTF::VectorBuffer.1293" }
%"class.WTF::VectorBuffer.1293" = type { %"class.WTF::VectorBufferBase.1294" }
%"class.WTF::VectorBufferBase.1294" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1303" }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"class.blink::Persistent.1119"*, i32, i32 }
%"class.std::__1::unique_ptr.1311" = type { %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1119", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1322" }
%"class.WTF::Vector.1322" = type { %"class.WTF::VectorBuffer.1323" }
%"class.WTF::VectorBuffer.1323" = type { %"class.WTF::VectorBufferBase.1324" }
%"class.WTF::VectorBufferBase.1324" = type { %class.scoped_refptr.1325*, i32, i32 }
%class.scoped_refptr.1325 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1168", [4 x i8] }>
%"class.blink::Persistent.1328" = type { %"class.blink::PersistentBase.1329" }
%"class.blink::PersistentBase.1329" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1332" }
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1334" = type { %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1336", [4 x i8], %"class.blink::DataRef.1338", %"class.blink::DataRef.1342", %"class.blink::DataRef.1364", %"class.blink::DataRef.1382", %"class.blink::DataRef.1389", %"class.blink::DataRef.1393", %class.scoped_refptr.1368, i32, [4 x i8] }>
%"class.WTF::RefCounted.1336" = type { %"class.base::RefCounted.1337" }
%"class.base::RefCounted.1337" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1338" = type { %class.scoped_refptr.1339 }
%class.scoped_refptr.1339 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1340", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1340" = type { %"class.base::RefCounted.1341" }
%"class.base::RefCounted.1341" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1342" = type { %class.scoped_refptr.1343 }
%class.scoped_refptr.1343 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1344", %class.scoped_refptr.1346, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1344" = type { %"class.base::RefCounted.1345" }
%"class.base::RefCounted.1345" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1346 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1347", %"class.std::__1::unique_ptr.1353", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1165" }>
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1364" = type { %class.scoped_refptr.1365 }
%class.scoped_refptr.1365 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1366", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1368, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1382" = type { %class.scoped_refptr.1383 }
%class.scoped_refptr.1383 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1384", [4 x i8], %class.scoped_refptr.1386, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1384" = type { %"class.base::RefCounted.1385" }
%"class.base::RefCounted.1385" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1386 = type { %"class.base::RefCountedData.1387"* }
%"class.base::RefCountedData.1387" = type { %"class.base::RefCountedThreadSafe.1388", %"class.WTF::Vector.382" }
%"class.base::RefCountedThreadSafe.1388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1389" = type { %class.scoped_refptr.1390 }
%class.scoped_refptr.1390 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1391", %class.scoped_refptr.1368, %class.scoped_refptr.1368, %class.scoped_refptr.1368 }
%"class.WTF::RefCounted.1391" = type { %"class.base::RefCounted.1392" }
%"class.base::RefCounted.1392" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1393" = type { %class.scoped_refptr.1394 }
%class.scoped_refptr.1394 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1395", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1395" = type { %"class.base::RefCounted.1396" }
%"class.base::RefCounted.1396" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1368 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1369", %"class.blink::Persistent.1371", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1369" = type { %"class.base::RefCounted.1370" }
%"class.base::RefCounted.1370" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1371" = type { %"class.blink::PersistentBase.1372" }
%"class.blink::PersistentBase.1372" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.413", %"class.blink::HeapHashMap.1375" }
%"class.blink::HeapHashMap.1375" = type { %"class.WTF::HashMap.1378" }
%"class.WTF::HashMap.1378" = type { %"class.WTF::HashTable.1379" }
%"class.WTF::HashTable.1379" = type <{ %"struct.WTF::KeyValuePair.1381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1381" = type opaque
%"class.blink::DataRef.1397" = type { %class.scoped_refptr.1398 }
%class.scoped_refptr.1398 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1399", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1399" = type { %"class.base::RefCounted.1400" }
%"class.base::RefCounted.1400" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1401" = type { %class.scoped_refptr.1402 }
%class.scoped_refptr.1402 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1403", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1403" = type { %"class.base::RefCounted.1404" }
%"class.base::RefCounted.1404" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1405" = type { %class.scoped_refptr.1406 }
%class.scoped_refptr.1406 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1407", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1407" = type { %"class.base::RefCounted.1408" }
%"class.base::RefCounted.1408" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1409" = type { %class.scoped_refptr.1410 }
%class.scoped_refptr.1410 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1411", %class.scoped_refptr.1413 }
%"class.WTF::RefCounted.1411" = type { %"class.base::RefCounted.1412" }
%"class.base::RefCounted.1412" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1413 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1581", %"class.blink::StyleVariables", %class.scoped_refptr.1413 }
%"class.WTF::RefCounted.1581" = type { %"class.base::RefCounted.1582" }
%"class.base::RefCounted.1582" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1414" = type { %"class.base::RefCounted.1415" }
%"class.base::RefCounted.1415" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1416" = type { %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1419" }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.WTF::Vector.1422"* }
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1609" }
%"class.WTF::VectorBuffer.1609" = type { %"class.WTF::VectorBufferBase.1610", [32 x i8] }
%"class.WTF::VectorBufferBase.1610" = type { %class.scoped_refptr.978*, i32, i32 }
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1627", %"class.blink::HeapHashSet.1636" }
%"class.blink::HeapVector.1627" = type { %"class.WTF::Vector.1630" }
%"class.WTF::Vector.1630" = type { %"class.WTF::VectorBuffer.1631" }
%"class.WTF::VectorBuffer.1631" = type { %"class.WTF::VectorBufferBase.1632" }
%"class.WTF::VectorBufferBase.1632" = type { %"class.blink::Member.1633"*, i32, i32 }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1636" = type { %"class.WTF::HashSet.1639" }
%"class.WTF::HashSet.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"class.blink::Member.1633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::HeapHashSet.1646"* }
%"class.blink::HeapHashSet.1646" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.1613" }
%"class.WTF::Vector.1613" = type { %"class.WTF::VectorBuffer.1614" }
%"class.WTF::VectorBuffer.1614" = type { %"class.WTF::VectorBufferBase.1615", [64 x i8] }
%"class.WTF::VectorBufferBase.1615" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.972", %"class.blink::Member.972", %"class.blink::Member.974", %"class.blink::Member.976", %"class.base::TimeTicks" }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::Event"* }
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink13EventListenerD2Ev = comdat any

$_ZN5blink37MediaCustomControlsFullscreenDetectorD0Ev = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE = comdat any

$_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink13EventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener20IsImageEventListenerEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_ = comdat any

$_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEEC2IRSC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_25IntersectionObserverEntryEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_16HTMLVideoElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20IntersectionObserverEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink37MediaCustomControlsFullscreenDetectorE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaCustomControlsFullscreenDetector"*)* @_ZN5blink37MediaCustomControlsFullscreenDetectorD0Ev to i8*), i8* bitcast (void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink37MediaCustomControlsFullscreenDetector6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::Visitor"*)* @_ZNK5blink37MediaCustomControlsFullscreenDetector5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, align 8
@_ZN5blink16event_type_names15kLoadedmetadataE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names23kWebkitfullscreenchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names17kFullscreenchangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.ref.tmp = private unnamed_addr constant [9 x float] [float 0x3FC3333340000000, float 0x3FC99999A0000000, float 0x3FD3333340000000, float 0x3FD99999A0000000, float 5.000000e-01, float 0x3FE3333340000000, float 0x3FE6666660000000, float 0x3FE99999A0000000, float 0x3FEB333340000000], align 4
@_ZN5blink10html_names28kDisablepictureinpictureAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_picture_in_picture_enabled_E = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink37MediaCustomControlsFullscreenDetectorC1ERNS_16HTMLVideoElementE = hidden unnamed_addr alias void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HTMLVideoElement"*), void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HTMLVideoElement"*)* @_ZN5blink37MediaCustomControlsFullscreenDetectorC2ERNS_16HTMLVideoElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetectorC2ERNS_16HTMLVideoElementE(%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HTMLVideoElement"* dereferenceable(1640)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink37MediaCustomControlsFullscreenDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::HTMLVideoElement"* %1, %"class.blink::HTMLVideoElement"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::IntersectionObserver"* null, %"class.blink::IntersectionObserver"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  tail call void @_ZN5blink37MediaCustomControlsFullscreenDetector6AttachEv(%"class.blink::MediaCustomControlsFullscreenDetector"* %0)
  br label %13

13:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector6AttachEv(%"class.blink::MediaCustomControlsFullscreenDetector"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to { i64, i64 }*
  %4 = alloca %"class.WTF::Vector.377", align 8
  %5 = alloca %"class.WTF::Vector.382", align 8
  %6 = alloca %"class.base::RepeatingCallback.960", align 8
  %7 = alloca %"class.blink::WeakPersistent.961", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kLoadedmetadataE, align 8
  %14 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.blink::EventListener"* %14, i1 zeroext true) #8
  %16 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %10, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names23kWebkitfullscreenchangeE, align 8
  %23 = tail call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %21, %"class.WTF::AtomicString"* dereferenceable(8) %22, %"class.blink::EventListener"* %14, i1 zeroext true) #8
  %24 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %10, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kFullscreenchangeE, align 8
  %31 = tail call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %29, %"class.WTF::AtomicString"* dereferenceable(8) %30, %"class.blink::EventListener"* %14, i1 zeroext true) #8
  %32 = bitcast %"class.WTF::Vector.377"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.WTF::Vector.377", %"class.WTF::Vector.377"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.377", %"class.WTF::Vector.377"* %4, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.377", %"class.WTF::Vector.377"* %4, i64 0, i32 0, i32 0, i32 2
  %36 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 36) #8
  %37 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #8
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast %"class.WTF::Vector.377"* %4 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %36, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %34, align 8
  %42 = icmp eq i8* %37, null
  store i32 9, i32* %35, align 4
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* nonnull align 4 bitcast ([9 x float]* @.ref.tmp to i8*), i64 36, i1 false) #8
  br label %44

44:                                               ; preds = %1, %43
  %45 = bitcast %"class.WTF::Vector.382"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #8
  %46 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %10, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = bitcast %"class.blink::WeakPersistent.961"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.blink::WeakPersistent.961", %"class.blink::WeakPersistent.961"* %7, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::WeakPersistent.961", %"class.blink::WeakPersistent.961"* %7, i64 0, i32 0, i32 0
  store %"class.blink::MediaCustomControlsFullscreenDetector"* %0, %"class.blink::MediaCustomControlsFullscreenDetector"** %53, align 8, !alias.scope !3
  %54 = getelementptr inbounds %"class.blink::WeakPersistent.961", %"class.blink::WeakPersistent.961"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8, !alias.scope !3
  %55 = ptrtoint %"class.blink::MediaCustomControlsFullscreenDetector"* %0 to i64
  switch i64 %55, label %56 [
    i64 0, label %82
    i64 -1, label %82
  ]

56:                                               ; preds = %44
  %57 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !3
  %58 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %57, i64 0, i32 1
  %59 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %58) #8, !noalias !3
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63, !prof !2

61:                                               ; preds = %56
  %62 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %58, i8* %62) #8
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i8* [ %62, %61 ], [ %59, %56 ]
  %65 = bitcast i8* %64 to %"class.blink::ThreadState"**
  %66 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %65, align 8, !noalias !3
  %67 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %67, align 8, !noalias !3
  %69 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8, !noalias !3
  %71 = icmp eq %"class.blink::PersistentNode"* %70, null
  br i1 %71, label %72, label %75, !prof !2

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %68, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %73) #8
  %74 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi %"class.blink::PersistentNode"* [ %74, %72 ], [ %70, %63 ]
  %77 = bitcast %"class.blink::PersistentNode"* %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !3
  %79 = bitcast %"class.blink::PersistentRegion"* %68 to i64*
  store i64 %78, i64* %79, align 8, !noalias !3
  %80 = bitcast %"class.blink::PersistentNode"* %76 to %"class.blink::PersistentBase.962"**
  store %"class.blink::PersistentBase.962"* %52, %"class.blink::PersistentBase.962"** %80, align 8, !noalias !3
  %81 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %76, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %81, align 8
  store %"class.blink::PersistentNode"* %76, %"class.blink::PersistentNode"** %54, align 8, !alias.scope !3
  br label %82

82:                                               ; preds = %44, %44, %75
  %83 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83)
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)* @_ZN5blink37MediaCustomControlsFullscreenDetector21OnIntersectionChangedERKNS_10HeapVectorINS_6MemberINS_25IntersectionObserverEntryEEELj0EEE to i64), i64 0>, <2 x i64>* %2, align 16, !noalias !6
  %84 = call i8* @_Znwm(i64 64) #9, !noalias !9
  %85 = bitcast i8* %84 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEEC2IRSC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::HeapVector.963"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %3, %"class.blink::WeakPersistent.961"* nonnull dereferenceable(16) %7) #8, !noalias !9
  %86 = bitcast %"class.base::RepeatingCallback.960"* %6 to i8**
  store i8* %84, i8** %86, align 8, !alias.scope !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83)
  %87 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %89, align 8
  %90 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %90, align 2
  %91 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %92 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %93 = bitcast %"class.WTF::StringImpl"** %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #8
  %94 = bitcast i8** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %95 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %96 = call %"class.blink::IntersectionObserver"* @_ZN5blink20IntersectionObserver6CreateERKN3WTF6VectorINS_6LengthELj0ENS1_18PartitionAllocatorEEERKNS2_IfLj0ES4_EEPNS_8DocumentEN4base17RepeatingCallbackIFvRKNS_10HeapVectorINS_6MemberINS_25IntersectionObserverEntryEEELj0EEEEEENS_23LocalFrameUkmAggregator8MetricIdENS0_16DeliveryBehaviorENS0_23ThresholdInterpretationEdbbNS0_12MarginTargetEbRNS_14ExceptionStateE(%"class.WTF::Vector.382"* nonnull dereferenceable(16) %5, %"class.WTF::Vector.377"* nonnull dereferenceable(16) %4, %"class.blink::Document"* %50, %"class.base::RepeatingCallback.960"* nonnull %6, i32 16, i32 1, i32 1, double 0.000000e+00, i1 zeroext false, i1 zeroext true, i32 0, i1 zeroext false, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %95) #8
  %97 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2
  %98 = ptrtoint %"class.blink::IntersectionObserver"* %96 to i64
  %99 = bitcast %"class.blink::Member.359"* %97 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %82
  %103 = bitcast %"class.blink::IntersectionObserver"* %96 to i8*
  %104 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #8
  br label %105

105:                                              ; preds = %82, %102
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %87) #8
  %106 = getelementptr inbounds %"class.base::RepeatingCallback.960", %"class.base::RepeatingCallback.960"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #8
  %107 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %108 = icmp eq %"class.blink::PersistentNode"* %107, null
  br i1 %108, label %128, label %109

109:                                              ; preds = %105
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !2

114:                                              ; preds = %109
  %115 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #8
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %120, align 8
  %122 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0, i32 0
  %124 = bitcast %"class.blink::PersistentRegion"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.blink::PersistentNode"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %122, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %127, align 8
  store %"class.blink::PersistentNode"* %122, %"class.blink::PersistentNode"** %123, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8
  br label %128

128:                                              ; preds = %105, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  %129 = getelementptr inbounds %"class.WTF::Vector.382", %"class.WTF::Vector.382"* %5, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::Length"*, %"class.blink::Length"** %129, align 8
  %131 = icmp eq %"class.blink::Length"* %130, null
  br i1 %131, label %154, label %132, !prof !14

132:                                              ; preds = %128
  %133 = bitcast %"class.blink::Length"* %130 to i8*
  %134 = getelementptr inbounds %"class.WTF::Vector.382", %"class.WTF::Vector.382"* %5, i64 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %152, label %137, !prof !2

137:                                              ; preds = %132
  %138 = zext i32 %135 to i64
  %139 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %130, i64 %138
  br label %140

140:                                              ; preds = %146, %137
  %141 = phi %"class.blink::Length"* [ %147, %146 ], [ %130, %137 ]
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %141, i64 0, i32 2
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 8
  br i1 %144, label %145, label %146

145:                                              ; preds = %140
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %141) #8
  br label %146

146:                                              ; preds = %145, %140
  %147 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %141, i64 1
  %148 = icmp eq %"class.blink::Length"* %147, %139
  br i1 %148, label %149, label %140

149:                                              ; preds = %146
  store i32 0, i32* %134, align 4
  %150 = bitcast %"class.WTF::Vector.382"* %5 to i8**
  %151 = load i8*, i8** %150, align 8
  br label %152

152:                                              ; preds = %149, %132
  %153 = phi i8* [ %151, %149 ], [ %133, %132 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %153) #8
  store %"class.blink::Length"* null, %"class.blink::Length"** %129, align 8
  br label %154

154:                                              ; preds = %128, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #8
  %155 = getelementptr inbounds %"class.blink::Member.359", %"class.blink::Member.359"* %97, i64 0, i32 0, i32 0
  %156 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %155, align 8
  %157 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %10, align 8
  %158 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %157, i64 0, i32 0, i32 0, i32 0
  %159 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %159) #8
  %160 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %161, align 8
  %162 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %162, align 2
  %163 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %164 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %165 = bitcast %"class.WTF::StringImpl"** %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #8
  %166 = bitcast i8** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %167 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver7observeEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* %156, %"class.blink::Element"* %158, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %167) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %159) #8
  %168 = load float*, float** %33, align 8
  %169 = icmp eq float* %168, null
  %170 = bitcast float* %168 to i8*
  br i1 %169, label %176, label %171, !prof !14

171:                                              ; preds = %154
  %172 = load i32, i32* %35, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %175, label %174, !prof !2

174:                                              ; preds = %171
  store i32 0, i32* %35, align 4
  br label %175

175:                                              ; preds = %174, %171
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %170) #8
  store float* null, float** %33, align 8
  br label %176

176:                                              ; preds = %154, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  ret void
}

declare zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::IntersectionObserver"* @_ZN5blink20IntersectionObserver6CreateERKN3WTF6VectorINS_6LengthELj0ENS1_18PartitionAllocatorEEERKNS2_IfLj0ES4_EEPNS_8DocumentEN4base17RepeatingCallbackIFvRKNS_10HeapVectorINS_6MemberINS_25IntersectionObserverEntryEEELj0EEEEEENS_23LocalFrameUkmAggregator8MetricIdENS0_16DeliveryBehaviorENS0_23ThresholdInterpretationEdbbNS0_12MarginTargetEbRNS_14ExceptionStateE(%"class.WTF::Vector.382"* dereferenceable(16), %"class.WTF::Vector.377"* dereferenceable(16), %"class.blink::Document"*, %"class.base::RepeatingCallback.960"*, i32, i32, i32, double, i1 zeroext, i1 zeroext, i32, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector21OnIntersectionChangedERKNS_10HeapVectorINS_6MemberINS_25IntersectionObserverEntryEEELj0EEE(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly, %"class.blink::HeapVector.963"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %3, align 8
  %5 = icmp eq %"class.blink::IntersectionObserver"* %4, null
  br i1 %5, label %205, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HeapVector.963", %"class.blink::HeapVector.963"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector.963", %"class.blink::HeapVector.963"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %205, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %11
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = add i32 %9, -1
  %33 = tail call dereferenceable(8) %"class.blink::Member.969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25IntersectionObserverEntryEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.966"* %7, i32 %32) #8
  %34 = getelementptr inbounds %"class.blink::Member.969", %"class.blink::Member.969"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::IntersectionObserverEntry"*, %"class.blink::IntersectionObserverEntry"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::IntersectionObserverEntry", %"class.blink::IntersectionObserverEntry"* %35, i64 0, i32 1, i32 6
  %37 = load double, double* %36, align 8
  %38 = fcmp olt double %37, 0x3FC3333340000000
  br i1 %38, label %39, label %44

39:                                               ; preds = %31
  %40 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  br label %41

41:                                               ; preds = %39, %25
  %42 = phi %"class.blink::HTMLVideoElement"* [ %40, %39 ], [ %13, %25 ]
  tail call void @_ZN5blink16HTMLVideoElement27SetIsDominantVisibleContentEb(%"class.blink::HTMLVideoElement"* %42, i1 zeroext false) #8
  %43 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %43, i32 0) #8
  br label %205

44:                                               ; preds = %31
  %45 = load i32, i32* %8, align 4
  %46 = add i32 %45, -1
  %47 = tail call dereferenceable(8) %"class.blink::Member.969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25IntersectionObserverEntryEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.966"* %7, i32 %46) #8
  %48 = getelementptr inbounds %"class.blink::Member.969", %"class.blink::Member.969"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::IntersectionObserverEntry"*, %"class.blink::IntersectionObserverEntry"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::IntersectionObserverEntry", %"class.blink::IntersectionObserverEntry"* %49, i64 0, i32 1, i32 6
  %51 = load double, double* %50, align 8
  %52 = fcmp oge double %51, 0x3FEB333340000000
  %53 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  tail call void @_ZN5blink16HTMLVideoElement27SetIsDominantVisibleContentEb(%"class.blink::HTMLVideoElement"* %53, i1 zeroext %52) #8
  %54 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %56 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::Document"*, %"class.blink::Document"** %57, align 8
  %59 = tail call %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %58) #8
  %60 = icmp eq %"class.blink::Element"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %44
  %62 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %59, i64 0, i32 0, i32 0
  %63 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %62, %"class.blink::Node"* %64) #8
  br i1 %65, label %68, label %66

66:                                               ; preds = %44, %61
  %67 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %67, i32 0) #8
  br label %205

68:                                               ; preds = %61
  br i1 %52, label %69, label %130

69:                                               ; preds = %68
  %70 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_picture_in_picture_enabled_E, align 1, !range !15
  %71 = icmp eq i8 %70, 0
  %72 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %12, align 8
  br i1 %71, label %73, label %129

73:                                               ; preds = %69
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names28kDisablepictureinpictureAttrE, align 8
  %75 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %72, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %75, align 8
  %77 = icmp eq %"class.blink::ElementData"* %76, null
  br i1 %77, label %128, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %76, i64 0, i32 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::ElementData"* %76 to %"class.blink::UniqueElementData"*
  %85 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %76, i64 1, i32 1
  %86 = bitcast %"class.blink::Member.18"* %85 to %"class.blink::Attribute"**
  %87 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %84, i64 0, i32 2, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  br label %95

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %76, i64 1
  %92 = bitcast %"class.blink::ElementData"* %91 to %"class.blink::Attribute"*
  %93 = lshr i32 %80, 1
  %94 = and i32 %93, 268435455
  br label %95

95:                                               ; preds = %90, %83
  %96 = phi %"class.blink::Attribute"* [ %92, %90 ], [ %87, %83 ]
  %97 = phi i32 [ %94, %90 ], [ %89, %83 ]
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %96, i64 %98
  %100 = icmp eq i32 %97, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %122, %101
  %107 = phi %"class.blink::Attribute"* [ %96, %101 ], [ %123, %122 ]
  %108 = phi i32 [ 0, %101 ], [ %124, %122 ]
  %109 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, %103
  br i1 %111, label %126, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 3, i32 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %114, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %119, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %117, %112
  %123 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %107, i64 1
  %124 = add i32 %108, 1
  %125 = icmp eq %"class.blink::Attribute"* %123, %99
  br i1 %125, label %128, label %106

126:                                              ; preds = %117, %106
  %127 = icmp eq i32 %108, -1
  br i1 %127, label %128, label %129

128:                                              ; preds = %122, %126, %95, %73
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %72, i32 1) #8
  br label %205

129:                                              ; preds = %126, %69
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %72, i32 2) #8
  br label %205

130:                                              ; preds = %68
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  %133 = tail call dereferenceable(8) %"class.blink::Member.969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25IntersectionObserverEntryEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.966"* %7, i32 %132) #8
  %134 = getelementptr inbounds %"class.blink::Member.969", %"class.blink::Member.969"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.blink::IntersectionObserverEntry"*, %"class.blink::IntersectionObserverEntry"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::IntersectionObserverEntry", %"class.blink::IntersectionObserverEntry"* %135, i64 0, i32 1, i32 0, i32 1
  %137 = bitcast %"struct.blink::PhysicalSize"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = lshr i64 %138, 32
  %140 = getelementptr inbounds %"class.blink::IntersectionObserverEntry", %"class.blink::IntersectionObserverEntry"* %135, i64 0, i32 1, i32 1, i32 1
  %141 = bitcast %"struct.blink::PhysicalSize"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = trunc i64 %142 to i32
  %144 = sdiv i32 %143, 64
  %145 = srem i32 %143, 64
  %146 = add nsw i32 %145, 32
  %147 = ashr i32 %146, 6
  %148 = add nsw i32 %147, %144
  %149 = lshr i64 %142, 32
  %150 = trunc i64 %149 to i32
  %151 = sdiv i32 %150, 64
  %152 = srem i32 %150, 64
  %153 = add nsw i32 %152, 32
  %154 = ashr i32 %153, 6
  %155 = add nsw i32 %154, %151
  %156 = getelementptr inbounds %"class.blink::IntersectionObserverEntry", %"class.blink::IntersectionObserverEntry"* %135, i64 0, i32 1, i32 3, i32 1
  %157 = bitcast %"struct.blink::PhysicalSize"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = lshr i64 %158, 32
  %160 = insertelement <4 x i64> undef, i64 %138, i32 0
  %161 = insertelement <4 x i64> %160, i64 %139, i32 1
  %162 = insertelement <4 x i64> %161, i64 %158, i32 2
  %163 = insertelement <4 x i64> %162, i64 %159, i32 3
  %164 = trunc <4 x i64> %163 to <4 x i32>
  %165 = sdiv <4 x i32> %164, <i32 64, i32 64, i32 64, i32 64>
  %166 = mul <4 x i32> %165, <i32 64, i32 64, i32 64, i32 64>
  %167 = sub <4 x i32> %164, %166
  %168 = add nsw <4 x i32> %167, <i32 32, i32 32, i32 32, i32 32>
  %169 = ashr <4 x i32> %168, <i32 6, i32 6, i32 6, i32 6>
  %170 = add nsw <4 x i32> %169, %165
  %171 = icmp slt <4 x i32> %170, <i32 1, i32 1, i32 1, i32 1>
  %172 = shufflevector <4 x i1> %171, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %173 = or <4 x i1> %171, %172
  %174 = shufflevector <4 x i1> %173, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %175 = or <4 x i1> %173, %174
  %176 = extractelement <4 x i1> %175, i32 0
  br i1 %176, label %203, label %177

177:                                              ; preds = %130
  %178 = sitofp i32 %148 to float
  %179 = extractelement <4 x i32> %170, i32 2
  %180 = sitofp i32 %179 to float
  %181 = fdiv float %178, %180
  %182 = sitofp i32 %155 to float
  %183 = extractelement <4 x i32> %170, i32 3
  %184 = sitofp i32 %183 to float
  %185 = fdiv float %182, %184
  %186 = fcmp olt float %181, %185
  %187 = select i1 %186, float %185, float %181
  %188 = fpext float %187 to double
  %189 = fcmp olt double %188, 0x3FEB333330000000
  br i1 %189, label %203, label %190

190:                                              ; preds = %177
  %191 = extractelement <4 x i32> %170, i32 0
  %192 = sext i32 %191 to i64
  %193 = extractelement <4 x i32> %170, i32 1
  %194 = sext i32 %193 to i64
  %195 = mul nsw i64 %194, %192
  %196 = uitofp i64 %195 to double
  %197 = fmul double %196, 7.500000e-01
  %198 = sext i32 %148 to i64
  %199 = sext i32 %155 to i64
  %200 = mul nsw i64 %199, %198
  %201 = uitofp i64 %200 to double
  %202 = fcmp ole double %197, %201
  br label %203

203:                                              ; preds = %130, %177, %190
  %204 = phi i1 [ %202, %190 ], [ false, %177 ], [ false, %130 ]
  tail call void @_ZN5blink37MediaCustomControlsFullscreenDetector27ReportEffectivelyFullscreenEb(%"class.blink::MediaCustomControlsFullscreenDetector"* %0, i1 zeroext %204)
  br label %205

205:                                              ; preds = %2, %129, %128, %41, %203, %66, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #8
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #8
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #8
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink20IntersectionObserver7observeEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"*, %"class.blink::Element"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector6DetachEv(%"class.blink::MediaCustomControlsFullscreenDetector"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::Member.359", %"class.blink::Member.359"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %4, align 8
  %6 = icmp eq %"class.blink::IntersectionObserver"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %10, align 8
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %14 = bitcast %"class.WTF::StringImpl"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  %15 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver10disconnectERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* nonnull %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %16) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #8
  %17 = bitcast %"class.blink::Member.359"* %3 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  br label %18

18:                                               ; preds = %1, %7
  %19 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names15kLoadedmetadataE, align 8
  %23 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 0, i32 0
  %24 = call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %21, %"class.WTF::AtomicString"* dereferenceable(8) %22, %"class.blink::EventListener"* %23, i1 zeroext true) #8
  %25 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %19, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names23kWebkitfullscreenchangeE, align 8
  %32 = call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %30, %"class.WTF::AtomicString"* dereferenceable(8) %31, %"class.blink::EventListener"* %23, i1 zeroext true) #8
  %33 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %19, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kFullscreenchangeE, align 8
  %40 = call zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"* %38, %"class.WTF::AtomicString"* dereferenceable(8) %39, %"class.blink::EventListener"* %23, i1 zeroext true) #8
  %41 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %19, align 8
  call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %41, i32 0) #8
  ret void
}

declare void @_ZN5blink20IntersectionObserver10disconnectERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget19removeEventListenerERKN3WTF12AtomicStringEPKNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::Event"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %7, i64 0, i32 0
  %9 = tail call i32 @_ZNK5blink16HTMLMediaElement13getReadyStateEv(%"class.blink::HTMLMediaElement"* %8) #8
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %12, align 8
  %14 = icmp eq %"class.blink::IntersectionObserver"* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %6, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %20, align 8
  %21 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8
  %25 = bitcast i8** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver9unobserveEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* nonnull %13, %"class.blink::Element"* %17, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %26) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #8
  %27 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %12, align 8
  %28 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %6, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %35 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %36 = bitcast %"class.WTF::StringImpl"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #8
  %37 = bitcast i8** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %38 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver7observeEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* %27, %"class.blink::Element"* %29, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %38) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #8
  br label %39

39:                                               ; preds = %15, %11, %3
  ret void
}

declare i32 @_ZNK5blink16HTMLMediaElement13getReadyStateEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector18TriggerObservationEv(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %4, align 8
  %6 = icmp eq %"class.blink::IntersectionObserver"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %16 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = bitcast %"class.WTF::StringImpl"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #8
  %18 = bitcast i8** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %19 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver9unobserveEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* nonnull %5, %"class.blink::Element"* %10, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %19) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #8
  %20 = load %"class.blink::IntersectionObserver"*, %"class.blink::IntersectionObserver"** %4, align 8
  %21 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %8, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %23) #8
  %24 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %25, align 8
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %28 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %29 = bitcast %"class.WTF::StringImpl"** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = bitcast i8** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 36, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  call void @_ZN5blink20IntersectionObserver7observeEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"* %20, %"class.blink::Element"* %22, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %31) #8
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %23) #8
  br label %32

32:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector16ContextDestroyedEv(%"class.blink::MediaCustomControlsFullscreenDetector"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink37MediaCustomControlsFullscreenDetector6DetachEv(%"class.blink::MediaCustomControlsFullscreenDetector"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37MediaCustomControlsFullscreenDetector27ReportEffectivelyFullscreenEb(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %1, label %6, label %3

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %4, align 8
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %5, i32 0) #8
  br label %68

6:                                                ; preds = %2
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_picture_in_picture_enabled_E, align 1, !range !15
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %9, align 8
  br i1 %8, label %11, label %67

11:                                               ; preds = %6
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names28kDisablepictureinpictureAttrE, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %13, align 8
  %15 = icmp eq %"class.blink::ElementData"* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::ElementData"* %14 to %"class.blink::UniqueElementData"*
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1, i32 1
  %24 = bitcast %"class.blink::Member.18"* %23 to %"class.blink::Attribute"**
  %25 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %22, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %33

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %14, i64 1
  %30 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::Attribute"*
  %31 = lshr i32 %18, 1
  %32 = and i32 %31, 268435455
  br label %33

33:                                               ; preds = %28, %21
  %34 = phi %"class.blink::Attribute"* [ %30, %28 ], [ %25, %21 ]
  %35 = phi i32 [ %32, %28 ], [ %27, %21 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %60, %39
  %45 = phi %"class.blink::Attribute"* [ %34, %39 ], [ %61, %60 ]
  %46 = phi i32 [ 0, %39 ], [ %62, %60 ]
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %48, %41
  br i1 %49, label %64, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %55, %50
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %45, i64 1
  %62 = add i32 %46, 1
  %63 = icmp eq %"class.blink::Attribute"* %61, %37
  br i1 %63, label %66, label %44

64:                                               ; preds = %44, %55
  %65 = icmp eq i32 %46, -1
  br i1 %65, label %66, label %67

66:                                               ; preds = %60, %33, %11, %64
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %10, i32 1) #8
  br label %68

67:                                               ; preds = %6, %64
  tail call void @_ZN5blink16HTMLVideoElement26SetIsEffectivelyFullscreenENS_24WebFullscreenVideoStatusE(%"class.blink::HTMLVideoElement"* %10, i32 2) #8
  br label %68

68:                                               ; preds = %66, %67, %3
  ret void
}

declare void @_ZN5blink16HTMLVideoElement27SetIsDominantVisibleContentEb(%"class.blink::HTMLVideoElement"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink37MediaCustomControlsFullscreenDetector25IsVideoOrParentFullscreenEv(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %7) #8
  %9 = icmp eq %"class.blink::Element"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLVideoElement"*, %"class.blink::HTMLVideoElement"** %2, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLVideoElement", %"class.blink::HTMLVideoElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %11, %"class.blink::Node"* %13) #8
  br label %15

15:                                               ; preds = %1, %10
  %16 = phi i1 [ %14, %10 ], [ false, %1 ]
  ret i1 %16
}

declare void @_ZN5blink20IntersectionObserver9unobserveEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::IntersectionObserver"*, %"class.blink::Element"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink10Fullscreen21FullscreenElementFromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink37MediaCustomControlsFullscreenDetector5TraceEPNS_7VisitorE(%"class.blink::MediaCustomControlsFullscreenDetector"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLVideoElementEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.359"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20IntersectionObserverEE5TraceEPNS_7VisitorEPKv) #8
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink37MediaCustomControlsFullscreenDetector43IsFullscreenVideoOfDifferentRatioForTestingERKNS_7IntSizeES3_S3_(%"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"class.blink::IntSize"* nocapture readonly dereferenceable(8), %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %45, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %45, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %45, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = sitofp i32 %13 to float
  %24 = fdiv float %22, %23
  %25 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to float
  %28 = sitofp i32 %17 to float
  %29 = fdiv float %27, %28
  %30 = fcmp olt float %24, %29
  %31 = select i1 %30, float %29, float %24
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 0x3FEB333330000000
  br i1 %33, label %45, label %34

34:                                               ; preds = %19
  %35 = sext i32 %5 to i64
  %36 = sext i32 %9 to i64
  %37 = mul nsw i64 %36, %35
  %38 = uitofp i64 %37 to double
  %39 = fmul double %38, 7.500000e-01
  %40 = sext i32 %21 to i64
  %41 = sext i32 %26 to i64
  %42 = mul nsw i64 %41, %40
  %43 = uitofp i64 %42 to double
  %44 = fcmp ole double %39, %43
  br label %45

45:                                               ; preds = %3, %7, %11, %15, %19, %34
  %46 = phi i1 [ false, %15 ], [ false, %7 ], [ %44, %34 ], [ false, %19 ], [ false, %3 ], [ false, %11 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13EventListenerD2Ev(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink37MediaCustomControlsFullscreenDetectorD0Ev(%"class.blink::MediaCustomControlsFullscreenDetector"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE(%"class.blink::NativeEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NativeEventListener", %"class.blink::NativeEventListener"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener22IsJSBasedEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener20IsImageEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaCustomControlsFullscreenDetector"**
  %4 = load %"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::MediaCustomControlsFullscreenDetector"** %3, align 8
  %5 = icmp eq %"class.blink::MediaCustomControlsFullscreenDetector"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::MediaCustomControlsFullscreenDetector", %"class.blink::MediaCustomControlsFullscreenDetector"* %4, i64 -1, i32 2
  %20 = bitcast %"class.blink::Member.359"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::MediaCustomControlsFullscreenDetector"* null, %"class.blink::MediaCustomControlsFullscreenDetector"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_(%"class.base::internal::BindStateBase"*, %"class.blink::HeapVector.963"* dereferenceable(16)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.blink::MediaCustomControlsFullscreenDetector"**
  %5 = load %"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::MediaCustomControlsFullscreenDetector"** %4, align 8
  %6 = icmp eq %"class.blink::MediaCustomControlsFullscreenDetector"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %9 = bitcast %"class.blink::MediaCustomControlsFullscreenDetector"* %5 to i8*
  %10 = bitcast %"class.base::internal::BindStateBase"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to %"class.blink::MediaCustomControlsFullscreenDetector"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %7
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)**
  %25 = load void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)*, void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)** %24, align 8
  br label %28

26:                                               ; preds = %7
  %27 = inttoptr i64 %11 to void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::HeapVector.963"*)* [ %25, %19 ], [ %27, %26 ]
  tail call void %29(%"class.blink::MediaCustomControlsFullscreenDetector"* %16, %"class.blink::HeapVector.963"* dereferenceable(16) %1) #8
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEEC2IRSC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent.961"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #8
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent.961"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #8
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #8
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.962"**
  store %"class.blink::PersistentBase.962"* %11, %"class.blink::PersistentBase.962"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_37MediaCustomControlsFullscreenDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS2_10HeapVectorINS2_6MemberINS2_25IntersectionObserverEntryEEELj0EEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #8
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::MediaCustomControlsFullscreenDetector"**
  %6 = load %"class.blink::MediaCustomControlsFullscreenDetector"*, %"class.blink::MediaCustomControlsFullscreenDetector"** %5, align 8
  %7 = icmp eq %"class.blink::MediaCustomControlsFullscreenDetector"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_25IntersectionObserverEntryEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.966"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.966", %"class.WTF::Vector.966"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.966", %"class.WTF::Vector.966"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.969"*, %"class.blink::Member.969"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.969", %"class.blink::Member.969"* %24, i64 %25
  ret %"class.blink::Member.969"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLVideoElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLVideoElement"*
  tail call void @_ZNK5blink16HTMLVideoElement5TraceEPNS_7VisitorE(%"class.blink::HTMLVideoElement"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink16HTMLVideoElement5TraceEPNS_7VisitorE(%"class.blink::HTMLVideoElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20IntersectionObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IntersectionObserver"*
  tail call void @_ZNK5blink20IntersectionObserver5TraceEPNS_7VisitorE(%"class.blink::IntersectionObserver"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink20IntersectionObserver5TraceEPNS_7VisitorE(%"class.blink::IntersectionObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink18WrapWeakPersistentINS_37MediaCustomControlsFullscreenDetectorEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink18WrapWeakPersistentINS_37MediaCustomControlsFullscreenDetectorEEENS_14WeakPersistentIT_EEPS3_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTF13BindRepeatingIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS1_10HeapVectorINS1_6MemberINS1_25IntersectionObserverEntryEEELj0EEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF13BindRepeatingIMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS1_10HeapVectorINS1_6MemberINS1_25IntersectionObserverEntryEEELj0EEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!9 = !{!10, !12, !7}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS3_10HeapVectorINS3_6MemberINS3_25IntersectionObserverEntryEEELj0EEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base13BindRepeatingIRMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS1_10HeapVectorINS1_6MemberINS1_25IntersectionObserverEntryEEELj0EEEEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!13 = distinct !{!13, !"_ZN4base13BindRepeatingIRMN5blink37MediaCustomControlsFullscreenDetectorEFvRKNS1_10HeapVectorINS1_6MemberINS1_25IntersectionObserverEntryEEELj0EEEEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{i8 0, i8 2}
