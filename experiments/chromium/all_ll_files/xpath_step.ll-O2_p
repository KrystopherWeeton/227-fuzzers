; ModuleID = '../../third_party/blink/renderer/core/xml/xpath_step.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xpath_step.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.189", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.129", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i64 }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { float }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.132", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.141" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.193" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.188 }
%class.scoped_refptr.188 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.285" }
%"struct.std::__1::atomic.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { i32 }
%"class.blink::xpath::Step" = type { %"class.blink::xpath::ParseNode", i32, %"class.blink::Member", %"class.blink::HeapVector" }
%"class.blink::xpath::ParseNode" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::xpath::Step::NodeTest"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.5"*, i32, i32 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::xpath::Predicate"* }
%"class.blink::xpath::Predicate" = type { %"class.blink::Member.9" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::xpath::Expression"* }
%"class.blink::xpath::Expression" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector.11", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapVector.11" = type { %"class.WTF::Vector.14" }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::Member.9"*, i32, i32 }
%"class.blink::xpath::Step::NodeTest" = type { i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::HeapVector" }
%"struct.blink::xpath::EvaluationContext" = type { %"class.blink::Node"*, i32, i32, %"class.WTF::HashMap", i8* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.200", %"class.blink::Member.202", %"class.blink::Member.200", %"class.blink::Member.200", %"class.blink::Member.204" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.210", %"class.blink::Member.212", %"class.blink::Member.202", %"class.blink::Member.214", %"class.blink::Member.214", %"class.blink::Member.254", %"class.blink::Member.256", %"class.blink::Member.258", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.263", %"class.blink::HeapVector.265" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.200", %"class.blink::Member.200" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.281", %"class.WTF::Vector.281", i8, i32, %"class.blink::Member.292", %"class.blink::Member.294", %"class.blink::Member.296", %"class.blink::Member.298", %"class.blink::Member.300", %"class.blink::Member.302", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.310", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.316", %"class.blink::Member.318", %"class.blink::Member.271", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.321", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.247", %"class.blink::Member.228", %"class.blink::Member.336", %"class.blink::Member.228", %"class.blink::Member.228", %"class.blink::Member.228", %"class.blink::UserActionElementSet", %"class.blink::Member.345", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.352", i16, i8, %"class.blink::Member.359", %"class.blink::Member.361", %"class.blink::Member.363", %"class.blink::Member.365", %"class.blink::TextLinkColors", %"class.blink::Member.367", i8, [7 x i8], %"class.blink::HeapHashMap.369", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.228", %"class.WTF::Vector.376", %"class.blink::Member.381", %"class.blink::Member.383", i8, %"class.blink::Member.228", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.385", %"class.blink::HeapVector.387", %"class.std::__1::unique_ptr.395", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.401", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.414", %"class.WTF::Vector.416", i8, i8, %"class.std::__1::unique_ptr.421", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.247", %"class.blink::HeapVector.427", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.435", i8, i32, %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.443", %"class.WTF::HashMap.445", %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.blink::Member.212", %"class.blink::Member.212", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.458", i8, i32, %"class.blink::Member.465", %"class.blink::Member.467", i32, %"class.blink::Member.469", %"class.blink::Member.471", %"class.blink::Member.473", %"class.std::__1::unique_ptr.475", i64, %"class.std::__1::unique_ptr.481", i32, i32, %"class.blink::Member.487", %"class.blink::Member.489", %"class.blink::Member.491", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.493", %"class.WTF::Vector.495", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.500", %"class.blink::Member.507", %"class.std::__1::unique_ptr.509", %"class.blink::Member.515", i8, i8, %"class.WTF::String", %"class.blink::Member.517", i8, [7 x i8], %"class.blink::HeapHashMap.519", %"class.blink::HeapObserverSet", %"class.blink::Member.533", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.535", i32, i8, i8, %"class.blink::WeakMember.537", %"class.blink::Member.538" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.274" }
%"class.blink::HeapHashMap.274" = type { %"class.WTF::HashMap.277" }
%"class.WTF::HashMap.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"struct.WTF::KeyValuePair.280"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.280" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.284 }
%class.scoped_refptr.284 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.285" }
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.296" = type { %"class.blink::MemberBase.297" }
%"class.blink::MemberBase.297" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.304" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::KURL"* }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.321" = type { %"class.WTF::VectorBuffer.322" }
%"class.WTF::VectorBuffer.322" = type { %"class.WTF::VectorBufferBase.323" }
%"class.WTF::VectorBufferBase.323" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.338" }
%"class.blink::HeapHashMap.338" = type { %"class.WTF::HashMap.341" }
%"class.WTF::HashMap.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"struct.WTF::KeyValuePair.344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.344" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"class.blink::WeakMember.351"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.351" = type opaque
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.358" = type opaque
%"class.blink::Member.359" = type { %"class.blink::MemberBase.360" }
%"class.blink::MemberBase.360" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.361" = type { %"class.blink::MemberBase.362" }
%"class.blink::MemberBase.362" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.369" = type { %"class.WTF::HashMap.372" }
%"class.WTF::HashMap.372" = type { %"class.WTF::HashTable.373" }
%"class.WTF::HashTable.373" = type <{ %"struct.WTF::KeyValuePair.375"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.375" = type opaque
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.231" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.230 }
%class.scoped_refptr.230 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.235", %"class.blink::Member.237", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.235" = type { %"class.WTF::SingleThreadedBitField.236" }
%"class.WTF::SingleThreadedBitField.236" = type { i32 }
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.240", %"class.WTF::AtomicString", %"class.WTF::Vector.242" }
%"class.WTF::RefCounted.240" = type { %"class.base::RefCounted.241" }
%"class.base::RefCounted.241" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.242" = type { %"class.WTF::VectorBuffer.243" }
%"class.WTF::VectorBuffer.243" = type { %"class.WTF::VectorBufferBase.244", [32 x i8] }
%"class.WTF::VectorBufferBase.244" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.387" = type { %"class.WTF::Vector.390" }
%"class.WTF::Vector.390" = type { %"class.WTF::VectorBuffer.391" }
%"class.WTF::VectorBuffer.391" = type { %"class.WTF::VectorBufferBase.392" }
%"class.WTF::VectorBufferBase.392" = type { %"class.blink::Member.393"*, i32, i32 }
%"class.blink::Member.393" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.401" = type { %"class.WTF::HashSet.404" }
%"class.WTF::HashSet.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"class.blink::WeakMember.407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.407" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.408", i32, [4 x i8] }>
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"struct.std::__1::pair.411"*, i32, i32 }
%"struct.std::__1::pair.411" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.247" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::Member.228"*, i32, i32 }
%"class.blink::HeapVector.427" = type { %"class.WTF::Vector.430" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::Member.433"*, i32, i32 }
%"class.blink::Member.433" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.212" }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.327, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.327 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.328" }>
%"class.base::RefCountedThreadSafe.328" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.329 }
%class.scoped_refptr.329 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.330", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.330" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.331" }
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__atomic_base.333" }
%"struct.std::__1::__atomic_base.333" = type { %"struct.std::__1::__cxx_atomic_impl.334" }
%"struct.std::__1::__cxx_atomic_impl.334" = type { %"struct.std::__1::__cxx_atomic_base_impl.335" }
%"struct.std::__1::__cxx_atomic_base_impl.335" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.213" }
%"class.blink::HeapHashSet.458" = type { %"class.WTF::HashSet.461" }
%"class.WTF::HashSet.461" = type { %"class.WTF::HashTable.462" }
%"class.WTF::HashTable.462" = type <{ %"class.blink::Member.464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.464" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.489" = type { %"class.blink::MemberBase.490" }
%"class.blink::MemberBase.490" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.500" = type { %"class.WTF::HashMap.503" }
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.519" = type { %"class.WTF::HashMap.522" }
%"class.WTF::HashMap.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"struct.WTF::KeyValuePair.525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.525" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.526" }
%"class.blink::HeapHashSet.526" = type { %"class.WTF::HashSet.529" }
%"class.WTF::HashSet.529" = type { %"class.WTF::HashTable.530" }
%"class.WTF::HashTable.530" = type <{ %"class.blink::WeakMember.532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.532" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.212", %"class.blink::HeapHashSet.542", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.549", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::Member.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.548" = type opaque
%"class.blink::HeapTaskRunnerTimer.549" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.550", { i64, i64 } }
%"class.blink::WeakMember.550" = type { %"class.blink::MemberBase.536" }
%"class.blink::WeakMember.537" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::Node"* }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.220" }
%"class.WTF::HashMap.220" = type { %"class.WTF::HashTable.221" }
%"class.WTF::HashTable.221" = type <{ %"struct.WTF::KeyValuePair.223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.223" = type { %"class.WTF::AtomicString", %"class.blink::Member.224" }
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.228", i32, %"class.blink::HeapVector.247" }
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.260" }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::HeapHashMap.262"* }
%"class.blink::HeapHashMap.262" = type opaque
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.265" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::Member.271"*, i32, i32 }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::xpath::NodeSet" = type { i8, i8, %"class.blink::HeapVector.553" }
%"class.blink::HeapVector.553" = type { %"class.WTF::Vector.556" }
%"class.WTF::Vector.556" = type { %"class.WTF::VectorBuffer.557" }
%"class.WTF::VectorBuffer.557" = type { %"class.WTF::VectorBufferBase.558" }
%"class.WTF::VectorBufferBase.558" = type { %"class.blink::Member.200"*, i32, i32 }
%"class.blink::Attr" = type { %"class.blink::Node", %"class.blink::Member.228", %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.237", %"class.WTF::Vector.593" }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595", [64 x i8] }
%"class.WTF::VectorBufferBase.595" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.602" = type { i8 }

$_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_ = comdat any

$_ZN5blink5xpath4Step8NodeTestaSERKS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink5xpath4StepE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Step"*)* @_ZN5blink5xpath4StepD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Step"*)* @_ZN5blink5xpath4StepD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Step"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath4Step5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11xmlns_names13kNamespaceURIE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::NodeSet]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.9 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath4Step8NodeTestEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::Step::NodeTest]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath9PredicateEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::xpath::Predicate>, WTF::VectorTraits<blink::Member<blink::xpath::Predicate> > >]\00", align 1

@_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE = hidden unnamed_addr alias void (%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"*), void (%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"*)* @_ZN5blink5xpath4StepC2ENS1_4AxisERKNS1_8NodeTestE
@_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"*, %"class.blink::HeapVector"*), void (%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"*, %"class.blink::HeapVector"*)* @_ZN5blink5xpath4StepC2ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE
@_ZN5blink5xpath4StepD1Ev = hidden unnamed_addr alias void (%"class.blink::xpath::Step"*), void (%"class.blink::xpath::Step"*)* @_ZN5blink5xpath4StepD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath4StepC2ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* nocapture, i32, %"class.blink::xpath::Step::NodeTest"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink5xpath4StepE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #9
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %3
  %33 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds i8, i8* %6, i64 16
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %32, %38, %53
  %56 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #9
  %57 = getelementptr inbounds i8, i8* %6, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.blink::xpath::Step::NodeTest"** %61 to i8**
  store i8* %6, i8** %62, align 8
  %63 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3
  %64 = bitcast %"class.blink::HeapVector"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath4StepC2ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"* nocapture, i32, %"class.blink::xpath::Step::NodeTest"* nocapture readonly dereferenceable(40), %"class.blink::HeapVector"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink5xpath4StepE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #9
  %8 = bitcast i8* %7 to i32*
  %9 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #9
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %31, %16, %4
  %34 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds i8, i8* %7, i64 16
  %37 = bitcast i8* %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #9
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #9
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %33, %39, %54
  %57 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #9
  %58 = getelementptr inbounds i8, i8* %7, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  %62 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.blink::xpath::Step::NodeTest"** %62 to i8**
  store i8* %7, i8** %63, align 8
  %64 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3
  %65 = bitcast %"class.blink::HeapVector"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #9
  %66 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::HeapVector"* %64 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %69, align 4
  %72 = load i32, i32* %70, align 4
  store i32 %72, i32* %69, align 4
  store i32 %71, i32* %70, align 4
  %73 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %74 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %73, align 4
  %76 = load i32, i32* %74, align 4
  store i32 %76, i32* %73, align 4
  store i32 %75, i32* %74, align 4
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector"* %64 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #9
  br label %83

83:                                               ; preds = %79, %56
  %84 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #9
  br label %90

90:                                               ; preds = %83, %86
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5xpath4StepD2Ev(%"class.blink::xpath::Step"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5xpath4StepD0Ev(%"class.blink::xpath::Step"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath4Step5TraceEPNS_7VisitorE(%"class.blink::xpath::Step"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::HeapVector"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #9
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %29

29:                                               ; preds = %13, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath4Step8OptimizeEv(%"class.blink::xpath::Step"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #9
  %7 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  br label %19

18:                                               ; preds = %96, %1
  call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_(%"class.blink::HeapVector"* nonnull dereferenceable(16) %2, %"class.blink::HeapVector"* dereferenceable(16) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #9
  ret void

19:                                               ; preds = %15, %96
  %20 = phi %"class.blink::Member.5"* [ %9, %15 ], [ %97, %96 ]
  %21 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %24, i64 0, i32 3
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::xpath::Expression"* %24 to i32 (%"class.blink::xpath::Expression"*)***
  %30 = load i32 (%"class.blink::xpath::Expression"*)**, i32 (%"class.blink::xpath::Expression"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %30, i64 4
  %32 = load i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %31, align 8
  %33 = call i32 %32(%"class.blink::xpath::Expression"* %24) #9
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %35, label %42

35:                                               ; preds = %19, %28
  %36 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %16, align 8
  %37 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %36, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = load i32, i32* %6, align 4
  br label %76

42:                                               ; preds = %35, %28
  %43 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %21, align 8
  %44 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %45, i64 0, i32 4
  %47 = load i8, i8* %46, align 2, !range !3
  %48 = icmp eq i8 %47, 0
  %49 = load i32, i32* %6, align 4
  %50 = icmp eq i32 %49, 0
  %51 = and i1 %48, %50
  %52 = ptrtoint %"class.blink::xpath::Predicate"* %43 to i64
  br i1 %51, label %53, label %76

53:                                               ; preds = %42
  %54 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %16, align 8
  %55 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %54, i64 0, i32 3, i32 0
  %56 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %54, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %54, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %75, label %61, !prof !2

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %55, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %62, align 8
  %64 = zext i32 %57 to i64
  %65 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %63, i64 %64
  %66 = bitcast %"class.blink::Member.5"* %65 to i64*
  store atomic i64 %52, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %61
  %70 = bitcast %"class.blink::xpath::Predicate"* %43 to i8*
  %71 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #9
  br label %72

72:                                               ; preds = %69, %61
  %73 = load i32, i32* %56, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %56, align 4
  br label %96

75:                                               ; preds = %53
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector"* %55, %"class.blink::Member.5"* dereferenceable(8) %20) #9
  br label %96

76:                                               ; preds = %40, %42
  %77 = phi i32 [ %41, %40 ], [ %49, %42 ]
  %78 = load i32, i32* %5, align 8
  %79 = icmp eq i32 %77, %78
  br i1 %79, label %95, label %80, !prof !2

80:                                               ; preds = %76
  %81 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %4, align 8
  %82 = zext i32 %77 to i64
  %83 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %81, i64 %82
  %84 = bitcast %"class.blink::Member.5"* %20 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Member.5"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %80
  %90 = inttoptr i64 %85 to i8*
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #9
  br label %92

92:                                               ; preds = %89, %80
  %93 = load i32, i32* %6, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %6, align 4
  br label %96

95:                                               ; preds = %76
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector"* nonnull %17, %"class.blink::Member.5"* dereferenceable(8) %20) #9
  br label %96

96:                                               ; preds = %95, %92, %75, %72
  %97 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %20, i64 1
  %98 = icmp eq %"class.blink::Member.5"* %97, %13
  br i1 %98, label %18, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_(%"class.blink::HeapVector"* dereferenceable(16), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = bitcast %"class.blink::HeapVector"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #9
  br label %14

14:                                               ; preds = %11, %2
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #9
  br label %21

21:                                               ; preds = %14, %17
  %22 = bitcast %"class.blink::HeapVector"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %3, align 8
  store atomic i64 %24, i64* %22 monotonic, align 8
  store atomic i64 %23, i64* %3 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %5, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %7, align 4
  store i32 %29, i32* %28, align 4
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  br label %37

37:                                               ; preds = %33, %21
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = bitcast %"class.blink::HeapVector"* %1 to i8**
  br i1 %39, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %40, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #9
  br label %44

44:                                               ; preds = %37, %41
  %45 = load i8*, i8** %40, align 8
  store atomic i64 %4, i64* %22 monotonic, align 8
  store i32 %6, i32* %25, align 4
  store i32 %8, i32* %28, align 4
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %4 to i8*
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #9
  br label %51

51:                                               ; preds = %48, %44
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #9
  br label %56

56:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5xpath16OptimizeStepPairEPNS0_4StepES2_(%"class.blink::xpath::Step"*, %"class.blink::xpath::Step"*) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %4 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 5
  br i1 %6, label %7, label %187

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %187

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %187

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %187

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %26, label %187

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %60, label %36

34:                                               ; preds = %52
  %35 = icmp eq %"class.blink::Member.5"* %59, %32
  br i1 %35, label %60, label %36

36:                                               ; preds = %26, %34
  %37 = phi %"class.blink::Member.5"* [ %59, %34 ], [ %28, %26 ]
  %38 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %41, i64 0, i32 3
  %43 = load i8, i8* %42, align 1, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %187

45:                                               ; preds = %36
  %46 = bitcast %"class.blink::xpath::Expression"* %41 to i32 (%"class.blink::xpath::Expression"*)***
  %47 = load i32 (%"class.blink::xpath::Expression"*)**, i32 (%"class.blink::xpath::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %47, i64 4
  %49 = load i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %48, align 8
  %50 = tail call i32 %49(%"class.blink::xpath::Expression"* %41) #9
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %187, label %52

52:                                               ; preds = %45
  %53 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %38, align 8
  %54 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %55, i64 0, i32 4
  %57 = load i8, i8* %56, align 2, !range !3
  %58 = icmp eq i8 %57, 0
  %59 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %37, i64 1
  br i1 %58, label %34, label %187

60:                                               ; preds = %34, %26
  %61 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %1, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %62, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %62, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %64, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %96, label %72

70:                                               ; preds = %88
  %71 = icmp eq %"class.blink::Member.5"* %95, %68
  br i1 %71, label %96, label %72

72:                                               ; preds = %60, %70
  %73 = phi %"class.blink::Member.5"* [ %95, %70 ], [ %64, %60 ]
  %74 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %77, i64 0, i32 3
  %79 = load i8, i8* %78, align 1, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %187

81:                                               ; preds = %72
  %82 = bitcast %"class.blink::xpath::Expression"* %77 to i32 (%"class.blink::xpath::Expression"*)***
  %83 = load i32 (%"class.blink::xpath::Expression"*)**, i32 (%"class.blink::xpath::Expression"*)*** %82, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %83, i64 4
  %85 = load i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %84, align 8
  %86 = tail call i32 %85(%"class.blink::xpath::Expression"* %77) #9
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %187, label %88

88:                                               ; preds = %81
  %89 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %74, align 8
  %90 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %91, i64 0, i32 4
  %93 = load i8, i8* %92, align 2, !range !3
  %94 = icmp eq i8 %93, 0
  %95 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %73, i64 1
  br i1 %94, label %70, label %187

96:                                               ; preds = %70, %60
  store i32 4, i32* %4, align 8
  %97 = bitcast %"class.blink::xpath::Step::NodeTest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %97) #9
  %98 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %61, align 8
  %99 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 0
  store i32 %100, i32* %101, align 8
  %102 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #9
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !2

120:                                              ; preds = %111
  tail call void @llvm.trap() #9
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %121, %106, %96
  %124 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %98, i64 0, i32 2, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #9
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %133
  tail call void @llvm.trap() #9
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %145

145:                                              ; preds = %123, %128, %143
  %146 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 3
  %147 = bitcast %"class.blink::HeapVector"* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #9
  %148 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %8, align 8
  %149 = call dereferenceable(40) %"class.blink::xpath::Step::NodeTest"* @_ZN5blink5xpath4Step8NodeTestaSERKS2_(%"class.blink::xpath::Step::NodeTest"* %148, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %3)
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #9
  br label %165

165:                                              ; preds = %164, %161, %145
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %181, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %168
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %168
  %178 = phi i32 [ %176, %175 ], [ %174, %168 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %166) #9
  br label %181

181:                                              ; preds = %165, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %97) #9
  %182 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %61, align 8
  %183 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %182, i64 0, i32 3
  %184 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %8, align 8
  %185 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %184, i64 0, i32 3
  call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_(%"class.blink::HeapVector"* dereferenceable(16) %183, %"class.blink::HeapVector"* dereferenceable(16) %185) #9
  %186 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %1, i64 0, i32 3
  call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS9_EE5valueEvE4typeERS9_SC_(%"class.blink::HeapVector"* dereferenceable(16) %186, %"class.blink::HeapVector"* dereferenceable(16) %14) #9
  call void @_ZN5blink5xpath4Step8OptimizeEv(%"class.blink::xpath::Step"* %0)
  br label %187

187:                                              ; preds = %52, %45, %36, %88, %72, %81, %2, %7, %22, %13, %18, %181
  %188 = phi i1 [ true, %181 ], [ false, %18 ], [ false, %13 ], [ false, %22 ], [ false, %7 ], [ false, %2 ], [ false, %81 ], [ false, %72 ], [ false, %88 ], [ false, %36 ], [ false, %45 ], [ false, %52 ]
  ret i1 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink5xpath4Step35PredicatesAreContextListInsensitiveEv(%"class.blink::xpath::Step"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %35, label %11

9:                                                ; preds = %27
  %10 = icmp eq %"class.blink::Member.5"* %34, %7
  br i1 %10, label %35, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::Member.5"* [ %34, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %16, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %71

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::xpath::Expression"* %16 to i32 (%"class.blink::xpath::Expression"*)***
  %22 = load i32 (%"class.blink::xpath::Expression"*)**, i32 (%"class.blink::xpath::Expression"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %22, i64 4
  %24 = load i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %23, align 8
  %25 = tail call i32 %24(%"class.blink::xpath::Expression"* %16) #9
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %71, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %13, align 8
  %29 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %30, i64 0, i32 4
  %32 = load i8, i8* %31, align 2, !range !3
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %12, i64 1
  br i1 %33, label %9, label %71

35:                                               ; preds = %9, %1
  %36 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %37, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %37, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %39, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %71, label %47

45:                                               ; preds = %63
  %46 = icmp eq %"class.blink::Member.5"* %70, %43
  br i1 %46, label %71, label %47

47:                                               ; preds = %35, %45
  %48 = phi %"class.blink::Member.5"* [ %70, %45 ], [ %39, %35 ]
  %49 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %52, i64 0, i32 3
  %54 = load i8, i8* %53, align 1, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %71

56:                                               ; preds = %47
  %57 = bitcast %"class.blink::xpath::Expression"* %52 to i32 (%"class.blink::xpath::Expression"*)***
  %58 = load i32 (%"class.blink::xpath::Expression"*)**, i32 (%"class.blink::xpath::Expression"*)*** %57, align 8
  %59 = getelementptr inbounds i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %58, i64 4
  %60 = load i32 (%"class.blink::xpath::Expression"*)*, i32 (%"class.blink::xpath::Expression"*)** %59, align 8
  %61 = tail call i32 %60(%"class.blink::xpath::Expression"* %52) #9
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %49, align 8
  %65 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %66, i64 0, i32 4
  %68 = load i8, i8* %67, align 2, !range !3
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %48, i64 1
  br i1 %69, label %45, label %71

71:                                               ; preds = %27, %20, %11, %56, %45, %47, %63, %35
  %72 = phi i1 [ true, %35 ], [ false, %56 ], [ true, %45 ], [ false, %47 ], [ false, %63 ], [ false, %11 ], [ false, %20 ], [ false, %27 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::xpath::Step::NodeTest"* @_ZN5blink5xpath4Step8NodeTestaSERKS2_(%"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %66, %51, %46
  %69 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %70 = bitcast %"class.WTF::AtomicString"* %47 to i64*
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %68, %83, %86
  ret %"class.blink::xpath::Step::NodeTest"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath4Step8EvaluateERNS0_17EvaluationContextEPNS_4NodeERNS0_7NodeSetE(%"class.blink::xpath::Step"* readonly, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48), %"class.blink::Node"*, %"class.blink::xpath::NodeSet"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 2
  store i32 0, i32* %6, align 4
  tail call void @_ZNK5blink5xpath4Step11NodesInAxisERNS0_17EvaluationContextEPNS_4NodeERNS0_7NodeSetE(%"class.blink::xpath::Step"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %2, %"class.blink::xpath::NodeSet"* dereferenceable(24) %3)
  %7 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 1
  %20 = bitcast %"class.blink::Node"** %5 to i8*
  %21 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 1
  %22 = bitcast %"class.WTF::Vector.556"* %17 to i64*
  %23 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.WTF::Vector.556"* %17 to i8**
  br label %26

25:                                               ; preds = %81, %4
  ret void

26:                                               ; preds = %14, %81
  %27 = phi %"class.blink::Member.5"* [ %8, %14 ], [ %82, %81 ]
  %28 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #9
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 1
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #9
  %31 = getelementptr inbounds i8, i8* %28, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = load i8, i8* %15, align 8, !range !3
  %36 = icmp ne i8 %35, 0
  %37 = load i32, i32* %16, align 4
  %38 = icmp ult i32 %37, 2
  %39 = or i1 %36, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %26
  store i8 0, i8* %28, align 8
  %41 = load i32, i32* %16, align 4
  br label %42

42:                                               ; preds = %26, %40
  %43 = phi i32 [ %37, %26 ], [ %41, %40 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %27, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds i8, i8* %28, i64 20
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds i8, i8* %28, i64 16
  %50 = bitcast i8* %49 to i32*
  %51 = bitcast i8* %30 to %"class.blink::Member.200"**
  %52 = bitcast i8* %30 to %"class.WTF::Vector.556"*
  br label %84

53:                                               ; preds = %113, %42
  %54 = load i8, i8* %15, align 1, !range !3
  %55 = load i8, i8* %28, align 1, !range !3
  store i8 %55, i8* %15, align 1
  store i8 %54, i8* %28, align 1
  %56 = load i8, i8* %21, align 1, !range !3
  %57 = load i8, i8* %29, align 1, !range !3
  store i8 %57, i8* %21, align 1
  store i8 %56, i8* %29, align 1
  %58 = bitcast i8* %30 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i64, i64* %22, align 8
  store atomic i64 %60, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %22 monotonic, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 16
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %23, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %23, align 4
  store i32 %63, i32* %62, align 4
  %65 = getelementptr inbounds i8, i8* %28, i64 20
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %16, align 4
  %68 = load i32, i32* %66, align 4
  store i32 %68, i32* %16, align 4
  store i32 %67, i32* %66, align 4
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %53
  %72 = load i8*, i8** %24, align 8
  %73 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #9
  br label %74

74:                                               ; preds = %71, %53
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = bitcast i8* %30 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #9
  br label %81

81:                                               ; preds = %74, %77
  %82 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %27, i64 1
  %83 = icmp eq %"class.blink::Member.5"* %82, %12
  br i1 %83, label %25, label %26

84:                                               ; preds = %45, %113
  %85 = phi i32 [ 0, %45 ], [ %90, %113 ]
  %86 = call dereferenceable(8) %"class.blink::Member.200"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.556"* %17, i32 %85) #9
  %87 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  store %"class.blink::Node"* %88, %"class.blink::Node"** %18, align 8
  %89 = load i32, i32* %16, align 4
  store i32 %89, i32* %19, align 8
  %90 = add nuw i32 %85, 1
  store i32 %90, i32* %6, align 4
  %91 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %46, align 8
  %92 = call zeroext i1 @_ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Predicate"* %91, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1) #9
  br i1 %92, label %93, label %113

93:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  store %"class.blink::Node"* %88, %"class.blink::Node"** %5, align 8
  %94 = load i32, i32* %48, align 4
  %95 = load i32, i32* %50, align 8
  %96 = icmp eq i32 %94, %95
  br i1 %96, label %111, label %97, !prof !2

97:                                               ; preds = %93
  %98 = ptrtoint %"class.blink::Node"* %88 to i64
  %99 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %51, align 8
  %100 = zext i32 %94 to i64
  %101 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %99, i64 %100
  %102 = bitcast %"class.blink::Member.200"* %101 to i64*
  store atomic i64 %98, i64* %102 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %97
  %106 = bitcast %"class.blink::Node"* %88 to i8*
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #9
  br label %108

108:                                              ; preds = %105, %97
  %109 = load i32, i32* %48, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %48, align 4
  br label %112

111:                                              ; preds = %93
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %52, %"class.blink::Node"** nonnull dereferenceable(8) %5) #9
  br label %112

112:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  br label %113

113:                                              ; preds = %112, %84
  %114 = load i32, i32* %16, align 4
  %115 = icmp ult i32 %90, %114
  br i1 %115, label %84, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath4Step11NodesInAxisERNS0_17EvaluationContextEPNS_4NodeERNS0_7NodeSetE(%"class.blink::xpath::Step"* readonly, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48), %"class.blink::Node"*, %"class.blink::xpath::NodeSet"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Node"*, align 8
  %6 = alloca %"class.blink::Node"*, align 8
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.blink::Node"*, align 8
  %9 = alloca %"class.blink::Node"*, align 8
  %10 = alloca %"class.blink::Node"*, align 8
  %11 = alloca %"class.blink::Node"*, align 8
  %12 = alloca %"class.blink::Node"*, align 8
  %13 = alloca %"class.blink::Node"*, align 8
  %14 = alloca %"class.blink::Node"*, align 8
  %15 = alloca %"class.blink::Node"*, align 8
  %16 = alloca %"class.blink::Node"*, align 8
  %17 = alloca %"class.blink::Node"*, align 8
  %18 = alloca %"class.blink::Node"*, align 8
  %19 = alloca %"class.blink::Node"*, align 8
  %20 = alloca %"class.blink::Node"*, align 8
  %21 = alloca %"class.blink::Node"*, align 8
  %22 = alloca %"class.blink::Node"*, align 8
  %23 = alloca %"class.blink::Node"*, align 8
  %24 = alloca %"class.blink::Node"*, align 8
  %25 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %1024 [
    i32 3, label %27
    i32 4, label %80
    i32 9, label %150
    i32 0, label %224
    i32 7, label %306
    i32 11, label %352
    i32 6, label %400
    i32 10, label %584
    i32 2, label %646
    i32 1, label %915
    i32 12, label %788
    i32 5, label %817
  ]

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %29 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %29, i64 40
  %31 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::Node"* %2) #9
  %33 = icmp eq %"class.blink::Node"* %2, null
  %34 = or i1 %32, %33
  br i1 %34, label %1024, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %1024, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %42 = bitcast %"class.blink::Node"* %41 to %"class.blink::Node"**
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %1024, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.blink::Node"** %23 to i8*
  %48 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %49 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %48, i64 0, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %45, %76
  %53 = phi %"class.blink::Node"* [ %43, %45 ], [ %78, %76 ]
  %54 = bitcast %"class.blink::Node"* %53 to i8*
  %55 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %46, align 8
  %56 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %53, i32 3, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %55)
  br i1 %56, label %57, label %76

57:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  store %"class.blink::Node"* %53, %"class.blink::Node"** %23, align 8
  %58 = load i32, i32* %49, align 4
  %59 = load i32, i32* %50, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %74, label %61, !prof !2

61:                                               ; preds = %57
  %62 = ptrtoint %"class.blink::Node"* %53 to i64
  %63 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %51, align 8
  %64 = zext i32 %58 to i64
  %65 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %63, i64 %64
  %66 = bitcast %"class.blink::Member.200"* %65 to i64*
  store atomic i64 %62, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  %70 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #9
  br label %71

71:                                               ; preds = %69, %61
  %72 = load i32, i32* %49, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %49, align 4
  br label %75

74:                                               ; preds = %57
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %48, %"class.blink::Node"** nonnull dereferenceable(8) %23) #9
  br label %75

75:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  br label %76

76:                                               ; preds = %52, %75
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 5, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %1024, label %52

80:                                               ; preds = %4
  %81 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %82 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %82, i64 40
  %84 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::Node"* %2) #9
  %86 = icmp eq %"class.blink::Node"* %2, null
  %87 = or i1 %85, %86
  br i1 %87, label %1024, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %1024, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %95 = bitcast %"class.blink::Node"* %94 to %"class.blink::Node"**
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %1024, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %100 = bitcast %"class.blink::Node"** %20 to i8*
  %101 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %102 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %103 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %101, i64 0, i32 0, i32 0, i32 0
  br label %105

105:                                              ; preds = %98, %147
  %106 = phi %"class.blink::Node"* [ %96, %98 ], [ %148, %147 ]
  %107 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %99, align 8
  %108 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %106, i32 4, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %107)
  br i1 %108, label %109, label %129

109:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  store %"class.blink::Node"* %106, %"class.blink::Node"** %20, align 8
  %110 = load i32, i32* %102, align 4
  %111 = load i32, i32* %103, align 8
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %127, label %113, !prof !2

113:                                              ; preds = %109
  %114 = ptrtoint %"class.blink::Node"* %106 to i64
  %115 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %104, align 8
  %116 = zext i32 %110 to i64
  %117 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %115, i64 %116
  %118 = bitcast %"class.blink::Member.200"* %117 to i64*
  store atomic i64 %114, i64* %118 monotonic, align 8
  %119 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %113
  %122 = bitcast %"class.blink::Node"* %106 to i8*
  %123 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %122) #9
  br label %124

124:                                              ; preds = %121, %113
  %125 = load i32, i32* %102, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %102, align 4
  br label %128

127:                                              ; preds = %109
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %101, %"class.blink::Node"** nonnull dereferenceable(8) %20) #9
  br label %128

128:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  br label %129

129:                                              ; preds = %105, %128
  %130 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 1
  %136 = bitcast %"class.blink::Node"* %135 to %"class.blink::Node"**
  %137 = load %"class.blink::Node"*, %"class.blink::Node"** %136, align 8
  %138 = icmp eq %"class.blink::Node"* %137, null
  br i1 %138, label %139, label %147

139:                                              ; preds = %134, %129
  %140 = icmp eq %"class.blink::Node"* %106, %2
  br i1 %140, label %1024, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 0, i32 5, i32 0, i32 0
  %143 = load %"class.blink::Node"*, %"class.blink::Node"** %142, align 8
  %144 = icmp eq %"class.blink::Node"* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %106, %"class.blink::Node"* %2) #9
  br label %147

147:                                              ; preds = %134, %141, %145
  %148 = phi %"class.blink::Node"* [ %146, %145 ], [ %143, %141 ], [ %137, %134 ]
  %149 = icmp eq %"class.blink::Node"* %148, null
  br i1 %149, label %1024, label %105

150:                                              ; preds = %4
  %151 = icmp eq %"class.blink::Node"* %2, null
  br i1 %151, label %191, label %152

152:                                              ; preds = %150
  %153 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %154 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %153, align 8
  %155 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %154, i64 40
  %156 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %155, align 8
  %157 = tail call zeroext i1 %156(%"class.blink::Node"* nonnull %2) #9
  br i1 %157, label %158, label %191

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %160 = bitcast %"class.blink::Node"* %159 to %"class.blink::Element"**
  %161 = load %"class.blink::Element"*, %"class.blink::Element"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %161, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %164 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %163, align 8
  %165 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %162, i32 9, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %164)
  br i1 %165, label %166, label %1024

166:                                              ; preds = %158
  %167 = bitcast %"class.blink::Node"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167)
  store %"class.blink::Node"* %162, %"class.blink::Node"** %19, align 8
  %168 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %169 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %189, label %174, !prof !2

174:                                              ; preds = %166
  %175 = ptrtoint %"class.blink::Element"* %161 to i64
  %176 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %168, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %176, align 8
  %178 = zext i32 %170 to i64
  %179 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %177, i64 %178
  %180 = bitcast %"class.blink::Member.200"* %179 to i64*
  store atomic i64 %175, i64* %180 monotonic, align 8
  %181 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %174
  %184 = bitcast %"class.blink::Element"* %161 to i8*
  %185 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %184) #9
  br label %186

186:                                              ; preds = %183, %174
  %187 = load i32, i32* %169, align 4
  %188 = add i32 %187, 1
  store i32 %188, i32* %169, align 4
  br label %190

189:                                              ; preds = %166
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %168, %"class.blink::Node"** nonnull dereferenceable(8) %19) #9
  br label %190

190:                                              ; preds = %186, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167)
  br label %1024

191:                                              ; preds = %152, %150
  %192 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %2) #9
  %193 = icmp eq %"class.blink::ContainerNode"* %192, null
  br i1 %193, label %1024, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %192, i64 0, i32 0
  %196 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %197 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %196, align 8
  %198 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %195, i32 9, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %197)
  br i1 %198, label %199, label %1024

199:                                              ; preds = %194
  %200 = bitcast %"class.blink::Node"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200)
  store %"class.blink::Node"* %195, %"class.blink::Node"** %18, align 8
  %201 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %202 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %203, %205
  br i1 %206, label %222, label %207, !prof !2

207:                                              ; preds = %199
  %208 = ptrtoint %"class.blink::ContainerNode"* %192 to i64
  %209 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %201, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %209, align 8
  %211 = zext i32 %203 to i64
  %212 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %210, i64 %211
  %213 = bitcast %"class.blink::Member.200"* %212 to i64*
  store atomic i64 %208, i64* %213 monotonic, align 8
  %214 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %207
  %217 = bitcast %"class.blink::ContainerNode"* %192 to i8*
  %218 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %217) #9
  br label %219

219:                                              ; preds = %216, %207
  %220 = load i32, i32* %202, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %202, align 4
  br label %223

222:                                              ; preds = %199
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %201, %"class.blink::Node"** nonnull dereferenceable(8) %18) #9
  br label %223

223:                                              ; preds = %219, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200)
  br label %1024

224:                                              ; preds = %4
  %225 = icmp eq %"class.blink::Node"* %2, null
  br i1 %225, label %265, label %226

226:                                              ; preds = %224
  %227 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %228 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %227, align 8
  %229 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %228, i64 40
  %230 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %229, align 8
  %231 = tail call zeroext i1 %230(%"class.blink::Node"* nonnull %2) #9
  br i1 %231, label %232, label %265

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %234 = bitcast %"class.blink::Node"* %233 to %"class.blink::Element"**
  %235 = load %"class.blink::Element"*, %"class.blink::Element"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %235, i64 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %238 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %237, align 8
  %239 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %236, i32 0, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %238)
  br i1 %239, label %240, label %265

240:                                              ; preds = %232
  %241 = bitcast %"class.blink::Node"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241)
  store %"class.blink::Node"* %236, %"class.blink::Node"** %17, align 8
  %242 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %243 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %244, %246
  br i1 %247, label %263, label %248, !prof !2

248:                                              ; preds = %240
  %249 = ptrtoint %"class.blink::Element"* %235 to i64
  %250 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %242, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %250, align 8
  %252 = zext i32 %244 to i64
  %253 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %251, i64 %252
  %254 = bitcast %"class.blink::Member.200"* %253 to i64*
  store atomic i64 %249, i64* %254 monotonic, align 8
  %255 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %248
  %258 = bitcast %"class.blink::Element"* %235 to i8*
  %259 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %258) #9
  br label %260

260:                                              ; preds = %257, %248
  %261 = load i32, i32* %243, align 4
  %262 = add i32 %261, 1
  store i32 %262, i32* %243, align 4
  br label %264

263:                                              ; preds = %240
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %242, %"class.blink::Node"** nonnull dereferenceable(8) %17) #9
  br label %264

264:                                              ; preds = %260, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241)
  br label %265

265:                                              ; preds = %226, %224, %232, %264
  %266 = phi %"class.blink::Node"* [ %236, %264 ], [ %236, %232 ], [ %2, %226 ], [ null, %224 ]
  %267 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %266) #9
  %268 = icmp eq %"class.blink::ContainerNode"* %267, null
  br i1 %268, label %304, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %271 = bitcast %"class.blink::Node"** %16 to i8*
  %272 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %273 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %274 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %275 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %272, i64 0, i32 0, i32 0, i32 0
  br label %276

276:                                              ; preds = %269, %301
  %277 = phi %"class.blink::ContainerNode"* [ %267, %269 ], [ %302, %301 ]
  %278 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %277, i64 0, i32 0
  %279 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %270, align 8
  %280 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %278, i32 0, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %279)
  br i1 %280, label %281, label %301

281:                                              ; preds = %276
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271)
  store %"class.blink::Node"* %278, %"class.blink::Node"** %16, align 8
  %282 = load i32, i32* %273, align 4
  %283 = load i32, i32* %274, align 8
  %284 = icmp eq i32 %282, %283
  br i1 %284, label %299, label %285, !prof !2

285:                                              ; preds = %281
  %286 = ptrtoint %"class.blink::ContainerNode"* %277 to i64
  %287 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %275, align 8
  %288 = zext i32 %282 to i64
  %289 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %287, i64 %288
  %290 = bitcast %"class.blink::Member.200"* %289 to i64*
  store atomic i64 %286, i64* %290 monotonic, align 8
  %291 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %296, label %293

293:                                              ; preds = %285
  %294 = bitcast %"class.blink::ContainerNode"* %277 to i8*
  %295 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %294) #9
  br label %296

296:                                              ; preds = %293, %285
  %297 = load i32, i32* %273, align 4
  %298 = add i32 %297, 1
  store i32 %298, i32* %273, align 4
  br label %300

299:                                              ; preds = %281
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %272, %"class.blink::Node"** nonnull dereferenceable(8) %16) #9
  br label %300

300:                                              ; preds = %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271)
  br label %301

301:                                              ; preds = %276, %300
  %302 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %278) #9
  %303 = icmp eq %"class.blink::ContainerNode"* %302, null
  br i1 %303, label %304, label %276

304:                                              ; preds = %301, %265
  %305 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 0
  store i8 0, i8* %305, align 8
  br label %1024

306:                                              ; preds = %4
  %307 = bitcast %"class.blink::Node"* %2 to i32 (%"class.blink::Node"*)***
  %308 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %307, align 8
  %309 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %308, i64 30
  %310 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %309, align 8
  %311 = tail call i32 %310(%"class.blink::Node"* %2) #9
  %312 = icmp eq i32 %311, 2
  br i1 %312, label %1024, label %313

313:                                              ; preds = %306
  %314 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 5, i32 0, i32 0
  %315 = load %"class.blink::Node"*, %"class.blink::Node"** %314, align 8
  %316 = icmp eq %"class.blink::Node"* %315, null
  br i1 %316, label %1024, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %319 = bitcast %"class.blink::Node"** %14 to i8*
  %320 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %321 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %322 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %323 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %320, i64 0, i32 0, i32 0, i32 0
  br label %324

324:                                              ; preds = %317, %348
  %325 = phi %"class.blink::Node"* [ %315, %317 ], [ %350, %348 ]
  %326 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %318, align 8
  %327 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %325, i32 7, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %326)
  br i1 %327, label %328, label %348

328:                                              ; preds = %324
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319)
  store %"class.blink::Node"* %325, %"class.blink::Node"** %14, align 8
  %329 = load i32, i32* %321, align 4
  %330 = load i32, i32* %322, align 8
  %331 = icmp eq i32 %329, %330
  br i1 %331, label %346, label %332, !prof !2

332:                                              ; preds = %328
  %333 = ptrtoint %"class.blink::Node"* %325 to i64
  %334 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %323, align 8
  %335 = zext i32 %329 to i64
  %336 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %334, i64 %335
  %337 = bitcast %"class.blink::Member.200"* %336 to i64*
  store atomic i64 %333, i64* %337 monotonic, align 8
  %338 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %343, label %340

340:                                              ; preds = %332
  %341 = bitcast %"class.blink::Node"* %325 to i8*
  %342 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %341) #9
  br label %343

343:                                              ; preds = %340, %332
  %344 = load i32, i32* %321, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %321, align 4
  br label %347

346:                                              ; preds = %328
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %320, %"class.blink::Node"** nonnull dereferenceable(8) %14) #9
  br label %347

347:                                              ; preds = %343, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319)
  br label %348

348:                                              ; preds = %324, %347
  %349 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %325, i64 0, i32 5, i32 0, i32 0
  %350 = load %"class.blink::Node"*, %"class.blink::Node"** %349, align 8
  %351 = icmp eq %"class.blink::Node"* %350, null
  br i1 %351, label %1024, label %324

352:                                              ; preds = %4
  %353 = bitcast %"class.blink::Node"* %2 to i32 (%"class.blink::Node"*)***
  %354 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %353, align 8
  %355 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %354, i64 30
  %356 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %355, align 8
  %357 = tail call i32 %356(%"class.blink::Node"* %2) #9
  %358 = icmp eq i32 %357, 2
  br i1 %358, label %1024, label %359

359:                                              ; preds = %352
  %360 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 4, i32 0, i32 0
  %361 = load %"class.blink::Node"*, %"class.blink::Node"** %360, align 8
  %362 = icmp eq %"class.blink::Node"* %361, null
  br i1 %362, label %370, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %365 = bitcast %"class.blink::Node"** %13 to i8*
  %366 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %367 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %368 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %369 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %366, i64 0, i32 0, i32 0, i32 0
  br label %372

370:                                              ; preds = %396, %359
  %371 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 0
  store i8 0, i8* %371, align 8
  br label %1024

372:                                              ; preds = %363, %396
  %373 = phi %"class.blink::Node"* [ %361, %363 ], [ %398, %396 ]
  %374 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %364, align 8
  %375 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %373, i32 11, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %374)
  br i1 %375, label %376, label %396

376:                                              ; preds = %372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %365)
  store %"class.blink::Node"* %373, %"class.blink::Node"** %13, align 8
  %377 = load i32, i32* %367, align 4
  %378 = load i32, i32* %368, align 8
  %379 = icmp eq i32 %377, %378
  br i1 %379, label %394, label %380, !prof !2

380:                                              ; preds = %376
  %381 = ptrtoint %"class.blink::Node"* %373 to i64
  %382 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %369, align 8
  %383 = zext i32 %377 to i64
  %384 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %382, i64 %383
  %385 = bitcast %"class.blink::Member.200"* %384 to i64*
  store atomic i64 %381, i64* %385 monotonic, align 8
  %386 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %391, label %388

388:                                              ; preds = %380
  %389 = bitcast %"class.blink::Node"* %373 to i8*
  %390 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %389) #9
  br label %391

391:                                              ; preds = %388, %380
  %392 = load i32, i32* %367, align 4
  %393 = add i32 %392, 1
  store i32 %393, i32* %367, align 4
  br label %395

394:                                              ; preds = %376
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %366, %"class.blink::Node"** nonnull dereferenceable(8) %13) #9
  br label %395

395:                                              ; preds = %391, %394
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %365)
  br label %396

396:                                              ; preds = %372, %395
  %397 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %373, i64 0, i32 4, i32 0, i32 0
  %398 = load %"class.blink::Node"*, %"class.blink::Node"** %397, align 8
  %399 = icmp eq %"class.blink::Node"* %398, null
  br i1 %399, label %370, label %372

400:                                              ; preds = %4
  %401 = icmp eq %"class.blink::Node"* %2, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %400
  %403 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %404 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %403, align 8
  %405 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %404, i64 40
  %406 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %405, align 8
  %407 = tail call zeroext i1 %406(%"class.blink::Node"* nonnull %2) #9
  br i1 %407, label %418, label %408

408:                                              ; preds = %402, %400
  %409 = call zeroext i1 @_ZN5blink5xpath13IsRootDomNodeEPNS_4NodeE(%"class.blink::Node"* %2) #9
  br i1 %409, label %1024, label %410

410:                                              ; preds = %408
  %411 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %412 = bitcast %"class.blink::Node"** %8 to i8*
  %413 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %414 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %415 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %416 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %413, i64 0, i32 0, i32 0, i32 0
  %417 = bitcast %"class.blink::Node"** %6 to i8*
  br label %492

418:                                              ; preds = %402
  %419 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %420 = bitcast %"class.blink::Node"* %419 to %"class.blink::Element"**
  %421 = load %"class.blink::Element"*, %"class.blink::Element"** %420, align 8
  %422 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %421, i64 0, i32 0, i32 0
  %423 = icmp eq %"class.blink::Element"* %421, null
  br i1 %423, label %434, label %424

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %421, i64 0, i32 0, i32 0, i32 1
  %426 = load i32, i32* %425, align 8
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %434, label %429

429:                                              ; preds = %424
  %430 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %422, i64 1
  %431 = bitcast %"class.blink::Node"* %430 to %"class.blink::Node"**
  %432 = load %"class.blink::Node"*, %"class.blink::Node"** %431, align 8
  %433 = icmp eq %"class.blink::Node"* %432, null
  br i1 %433, label %434, label %441

434:                                              ; preds = %429, %424, %418
  %435 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %421, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %436 = load %"class.blink::Node"*, %"class.blink::Node"** %435, align 8
  %437 = icmp eq %"class.blink::Node"* %436, null
  br i1 %437, label %438, label %441

438:                                              ; preds = %434
  %439 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %422) #9
  %440 = icmp eq %"class.blink::Node"* %439, null
  br i1 %440, label %1024, label %441

441:                                              ; preds = %429, %434, %438
  %442 = phi %"class.blink::Node"* [ %439, %438 ], [ %432, %429 ], [ %436, %434 ]
  %443 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %444 = bitcast %"class.blink::Node"** %10 to i8*
  %445 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %446 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %447 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %448 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %445, i64 0, i32 0, i32 0, i32 0
  br label %449

449:                                              ; preds = %441, %489
  %450 = phi %"class.blink::Node"* [ %442, %441 ], [ %490, %489 ]
  %451 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %443, align 8
  %452 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %450, i32 6, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %451)
  br i1 %452, label %453, label %473

453:                                              ; preds = %449
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %444)
  store %"class.blink::Node"* %450, %"class.blink::Node"** %10, align 8
  %454 = load i32, i32* %446, align 4
  %455 = load i32, i32* %447, align 8
  %456 = icmp eq i32 %454, %455
  br i1 %456, label %471, label %457, !prof !2

457:                                              ; preds = %453
  %458 = ptrtoint %"class.blink::Node"* %450 to i64
  %459 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %448, align 8
  %460 = zext i32 %454 to i64
  %461 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %459, i64 %460
  %462 = bitcast %"class.blink::Member.200"* %461 to i64*
  store atomic i64 %458, i64* %462 monotonic, align 8
  %463 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %468, label %465

465:                                              ; preds = %457
  %466 = bitcast %"class.blink::Node"* %450 to i8*
  %467 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %466) #9
  br label %468

468:                                              ; preds = %465, %457
  %469 = load i32, i32* %446, align 4
  %470 = add i32 %469, 1
  store i32 %470, i32* %446, align 4
  br label %472

471:                                              ; preds = %453
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %445, %"class.blink::Node"** nonnull dereferenceable(8) %10) #9
  br label %472

472:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %444)
  br label %473

473:                                              ; preds = %449, %472
  %474 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %450, i64 0, i32 1
  %475 = load i32, i32* %474, align 8
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %483, label %478

478:                                              ; preds = %473
  %479 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %450, i64 1
  %480 = bitcast %"class.blink::Node"* %479 to %"class.blink::Node"**
  %481 = load %"class.blink::Node"*, %"class.blink::Node"** %480, align 8
  %482 = icmp eq %"class.blink::Node"* %481, null
  br i1 %482, label %483, label %489

483:                                              ; preds = %478, %473
  %484 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %450, i64 0, i32 5, i32 0, i32 0
  %485 = load %"class.blink::Node"*, %"class.blink::Node"** %484, align 8
  %486 = icmp eq %"class.blink::Node"* %485, null
  br i1 %486, label %487, label %489

487:                                              ; preds = %483
  %488 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %450) #9
  br label %489

489:                                              ; preds = %478, %483, %487
  %490 = phi %"class.blink::Node"* [ %488, %487 ], [ %485, %483 ], [ %481, %478 ]
  %491 = icmp eq %"class.blink::Node"* %490, null
  br i1 %491, label %1024, label %449

492:                                              ; preds = %410, %501
  %493 = phi %"class.blink::Node"* [ %2, %410 ], [ %503, %501 ]
  %494 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %493, i64 0, i32 5, i32 0, i32 0
  %495 = load %"class.blink::Node"*, %"class.blink::Node"** %494, align 8
  %496 = icmp eq %"class.blink::Node"* %495, null
  br i1 %496, label %501, label %505

497:                                              ; preds = %573, %581, %529, %534
  %498 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %506, i64 0, i32 5, i32 0, i32 0
  %499 = load %"class.blink::Node"*, %"class.blink::Node"** %498, align 8
  %500 = icmp eq %"class.blink::Node"* %499, null
  br i1 %500, label %501, label %505

501:                                              ; preds = %497, %492
  %502 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %493) #9
  %503 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %502, i64 0, i32 0
  %504 = call zeroext i1 @_ZN5blink5xpath13IsRootDomNodeEPNS_4NodeE(%"class.blink::Node"* %503) #9
  br i1 %504, label %1024, label %492

505:                                              ; preds = %492, %497
  %506 = phi %"class.blink::Node"* [ %499, %497 ], [ %495, %492 ]
  %507 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %411, align 8
  %508 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %506, i32 6, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %507)
  br i1 %508, label %509, label %529

509:                                              ; preds = %505
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %412)
  store %"class.blink::Node"* %506, %"class.blink::Node"** %8, align 8
  %510 = load i32, i32* %414, align 4
  %511 = load i32, i32* %415, align 8
  %512 = icmp eq i32 %510, %511
  br i1 %512, label %527, label %513, !prof !2

513:                                              ; preds = %509
  %514 = ptrtoint %"class.blink::Node"* %506 to i64
  %515 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %416, align 8
  %516 = zext i32 %510 to i64
  %517 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %515, i64 %516
  %518 = bitcast %"class.blink::Member.200"* %517 to i64*
  store atomic i64 %514, i64* %518 monotonic, align 8
  %519 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %524, label %521

521:                                              ; preds = %513
  %522 = bitcast %"class.blink::Node"* %506 to i8*
  %523 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %522) #9
  br label %524

524:                                              ; preds = %521, %513
  %525 = load i32, i32* %414, align 4
  %526 = add i32 %525, 1
  store i32 %526, i32* %414, align 4
  br label %528

527:                                              ; preds = %509
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %413, %"class.blink::Node"** nonnull dereferenceable(8) %8) #9
  br label %528

528:                                              ; preds = %524, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %412)
  br label %529

529:                                              ; preds = %505, %528
  %530 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %506, i64 0, i32 1
  %531 = load i32, i32* %530, align 8
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %497, label %534

534:                                              ; preds = %529
  %535 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %506, i64 1
  %536 = bitcast %"class.blink::Node"* %535 to %"class.blink::Node"**
  %537 = load %"class.blink::Node"*, %"class.blink::Node"** %536, align 8
  %538 = icmp eq %"class.blink::Node"* %537, null
  br i1 %538, label %497, label %539

539:                                              ; preds = %534, %581
  %540 = phi %"class.blink::Node"* [ %582, %581 ], [ %537, %534 ]
  %541 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %411, align 8
  %542 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %540, i32 6, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %541)
  br i1 %542, label %543, label %563

543:                                              ; preds = %539
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %417)
  store %"class.blink::Node"* %540, %"class.blink::Node"** %6, align 8
  %544 = load i32, i32* %414, align 4
  %545 = load i32, i32* %415, align 8
  %546 = icmp eq i32 %544, %545
  br i1 %546, label %561, label %547, !prof !2

547:                                              ; preds = %543
  %548 = ptrtoint %"class.blink::Node"* %540 to i64
  %549 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %416, align 8
  %550 = zext i32 %544 to i64
  %551 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %549, i64 %550
  %552 = bitcast %"class.blink::Member.200"* %551 to i64*
  store atomic i64 %548, i64* %552 monotonic, align 8
  %553 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %558, label %555

555:                                              ; preds = %547
  %556 = bitcast %"class.blink::Node"* %540 to i8*
  %557 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %556) #9
  br label %558

558:                                              ; preds = %555, %547
  %559 = load i32, i32* %414, align 4
  %560 = add i32 %559, 1
  store i32 %560, i32* %414, align 4
  br label %562

561:                                              ; preds = %543
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %413, %"class.blink::Node"** nonnull dereferenceable(8) %6) #9
  br label %562

562:                                              ; preds = %558, %561
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %417)
  br label %563

563:                                              ; preds = %539, %562
  %564 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %540, i64 0, i32 1
  %565 = load i32, i32* %564, align 8
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %573, label %568

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %540, i64 1
  %570 = bitcast %"class.blink::Node"* %569 to %"class.blink::Node"**
  %571 = load %"class.blink::Node"*, %"class.blink::Node"** %570, align 8
  %572 = icmp eq %"class.blink::Node"* %571, null
  br i1 %572, label %573, label %581

573:                                              ; preds = %568, %563
  %574 = icmp eq %"class.blink::Node"* %540, %506
  br i1 %574, label %497, label %575

575:                                              ; preds = %573
  %576 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %540, i64 0, i32 5, i32 0, i32 0
  %577 = load %"class.blink::Node"*, %"class.blink::Node"** %576, align 8
  %578 = icmp eq %"class.blink::Node"* %577, null
  br i1 %578, label %579, label %581

579:                                              ; preds = %575
  %580 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %540, %"class.blink::Node"* nonnull %506) #9
  br label %581

581:                                              ; preds = %568, %575, %579
  %582 = phi %"class.blink::Node"* [ %580, %579 ], [ %577, %575 ], [ %571, %568 ]
  %583 = icmp eq %"class.blink::Node"* %582, null
  br i1 %583, label %497, label %539

584:                                              ; preds = %4
  %585 = icmp eq %"class.blink::Node"* %2, null
  br i1 %585, label %597, label %586

586:                                              ; preds = %584
  %587 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %588 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %587, align 8
  %589 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %588, i64 40
  %590 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %589, align 8
  %591 = tail call zeroext i1 %590(%"class.blink::Node"* nonnull %2) #9
  br i1 %591, label %592, label %597

592:                                              ; preds = %586
  %593 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %594 = bitcast %"class.blink::Node"* %593 to %"class.blink::Element"**
  %595 = load %"class.blink::Element"*, %"class.blink::Element"** %594, align 8
  %596 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %595, i64 0, i32 0, i32 0
  br label %597

597:                                              ; preds = %586, %584, %592
  %598 = phi %"class.blink::Node"* [ %596, %592 ], [ %2, %586 ], [ null, %584 ]
  %599 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %598) #9
  %600 = icmp eq %"class.blink::ContainerNode"* %599, null
  br i1 %600, label %644, label %601

601:                                              ; preds = %597
  %602 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %603 = bitcast %"class.blink::Node"** %5 to i8*
  %604 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %605 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %606 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %607 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %604, i64 0, i32 0, i32 0, i32 0
  br label %611

608:                                              ; preds = %641, %611
  %609 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %615) #9
  %610 = icmp eq %"class.blink::ContainerNode"* %609, null
  br i1 %610, label %644, label %611

611:                                              ; preds = %601, %608
  %612 = phi %"class.blink::ContainerNode"* [ %599, %601 ], [ %609, %608 ]
  %613 = phi %"class.blink::Node"* [ %598, %601 ], [ %615, %608 ]
  %614 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %613, %"class.blink::Node"* null) #9
  %615 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %612, i64 0, i32 0
  %616 = icmp eq %"class.blink::Node"* %614, %615
  br i1 %616, label %608, label %617

617:                                              ; preds = %611, %641
  %618 = phi %"class.blink::Node"* [ %642, %641 ], [ %614, %611 ]
  %619 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %602, align 8
  %620 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %618, i32 10, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %619)
  br i1 %620, label %621, label %641

621:                                              ; preds = %617
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %603)
  store %"class.blink::Node"* %618, %"class.blink::Node"** %5, align 8
  %622 = load i32, i32* %605, align 4
  %623 = load i32, i32* %606, align 8
  %624 = icmp eq i32 %622, %623
  br i1 %624, label %639, label %625, !prof !2

625:                                              ; preds = %621
  %626 = ptrtoint %"class.blink::Node"* %618 to i64
  %627 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %607, align 8
  %628 = zext i32 %622 to i64
  %629 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %627, i64 %628
  %630 = bitcast %"class.blink::Member.200"* %629 to i64*
  store atomic i64 %626, i64* %630 monotonic, align 8
  %631 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %636, label %633

633:                                              ; preds = %625
  %634 = bitcast %"class.blink::Node"* %618 to i8*
  %635 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %634) #9
  br label %636

636:                                              ; preds = %633, %625
  %637 = load i32, i32* %605, align 4
  %638 = add i32 %637, 1
  store i32 %638, i32* %605, align 4
  br label %640

639:                                              ; preds = %621
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %604, %"class.blink::Node"** nonnull dereferenceable(8) %5) #9
  br label %640

640:                                              ; preds = %636, %639
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %603)
  br label %641

641:                                              ; preds = %617, %640
  %642 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %618, %"class.blink::Node"* null) #9
  %643 = icmp eq %"class.blink::Node"* %642, %615
  br i1 %643, label %608, label %617

644:                                              ; preds = %608, %597
  %645 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 0
  store i8 0, i8* %645, align 8
  br label %1024

646:                                              ; preds = %4
  %647 = icmp eq %"class.blink::Node"* %2, null
  br i1 %647, label %1024, label %648

648:                                              ; preds = %646
  %649 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %650 = load i32, i32* %649, align 8
  %651 = and i32 %650, 12
  %652 = icmp eq i32 %651, 0
  %653 = bitcast %"class.blink::Node"* %2 to %"class.blink::Element"*
  br i1 %652, label %654, label %1024

654:                                              ; preds = %648
  %655 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %656 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %655, align 8
  %657 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %656, i64 0, i32 0
  %658 = load i32, i32* %657, align 8
  %659 = icmp eq i32 %658, 4
  br i1 %659, label %660, label %718

660:                                              ; preds = %654
  %661 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %656, i64 0, i32 1
  %662 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %663 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %661, i64 0, i32 0, i32 0, i32 0
  %664 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %663, align 8
  %665 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %662, i64 0, i32 0, i32 0, i32 0
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %664, %666
  br i1 %667, label %718, label %668

668:                                              ; preds = %660
  %669 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %656, i64 0, i32 2
  %670 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %669, i64 0, i32 0, i32 0, i32 0
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %670, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %671, null
  br i1 %672, label %673, label %675

673:                                              ; preds = %668
  %674 = tail call %"class.blink::Attr"* @_ZN5blink7Element16getAttributeNodeERKN3WTF12AtomicStringE(%"class.blink::Element"* nonnull %653, %"class.WTF::AtomicString"* dereferenceable(8) %661) #9
  br label %677

675:                                              ; preds = %668
  %676 = tail call %"class.blink::Attr"* @_ZN5blink7Element18getAttributeNodeNSERKN3WTF12AtomicStringES4_(%"class.blink::Element"* nonnull %653, %"class.WTF::AtomicString"* dereferenceable(8) %669, %"class.WTF::AtomicString"* dereferenceable(8) %661) #9
  br label %677

677:                                              ; preds = %675, %673
  %678 = phi %"class.blink::Attr"* [ %674, %673 ], [ %676, %675 ]
  %679 = icmp eq %"class.blink::Attr"* %678, null
  br i1 %679, label %1024, label %680

680:                                              ; preds = %677
  %681 = getelementptr inbounds %"class.blink::Attr", %"class.blink::Attr"* %678, i64 0, i32 2, i32 0, i32 0
  %682 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %681, align 8
  %683 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  %684 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %682, i64 0, i32 4, i32 0, i32 0, i32 0
  %685 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %684, align 8
  %686 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %683, i64 0, i32 0, i32 0, i32 0
  %687 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %686, align 8
  %688 = icmp eq %"class.WTF::StringImpl"* %685, %687
  br i1 %688, label %1024, label %689

689:                                              ; preds = %680
  %690 = getelementptr inbounds %"class.blink::Attr", %"class.blink::Attr"* %678, i64 0, i32 0
  %691 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %655, align 8
  %692 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %690, i32 2, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %691)
  br i1 %692, label %693, label %1024

693:                                              ; preds = %689
  %694 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %694)
  store %"class.blink::Node"* %690, %"class.blink::Node"** %7, align 8
  %695 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %696 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %697 = load i32, i32* %696, align 4
  %698 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %699 = load i32, i32* %698, align 8
  %700 = icmp eq i32 %697, %699
  br i1 %700, label %716, label %701, !prof !2

701:                                              ; preds = %693
  %702 = ptrtoint %"class.blink::Attr"* %678 to i64
  %703 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %695, i64 0, i32 0, i32 0, i32 0
  %704 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %703, align 8
  %705 = zext i32 %697 to i64
  %706 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %704, i64 %705
  %707 = bitcast %"class.blink::Member.200"* %706 to i64*
  store atomic i64 %702, i64* %707 monotonic, align 8
  %708 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %713, label %710

710:                                              ; preds = %701
  %711 = bitcast %"class.blink::Attr"* %678 to i8*
  %712 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %711) #9
  br label %713

713:                                              ; preds = %710, %701
  %714 = load i32, i32* %696, align 4
  %715 = add i32 %714, 1
  store i32 %715, i32* %696, align 4
  br label %717

716:                                              ; preds = %693
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %695, %"class.blink::Node"** nonnull dereferenceable(8) %7) #9
  br label %717

717:                                              ; preds = %713, %716
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %694)
  br label %1024

718:                                              ; preds = %660, %654
  %719 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1, i32 3
  %720 = bitcast %"class.blink::Member.202"* %719 to %"class.blink::ElementData"**
  %721 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %720, align 8
  %722 = icmp eq %"class.blink::ElementData"* %721, null
  br i1 %722, label %1024, label %723

723:                                              ; preds = %718
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %653) #9
  %724 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %720, align 8
  %725 = icmp eq %"class.blink::ElementData"* %724, null
  br i1 %725, label %726, label %728

726:                                              ; preds = %723
  %727 = load i32, i32* null, align 536870912
  br label %740

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %724, i64 0, i32 0, i32 0, i32 0
  %730 = load i32, i32* %729, align 4
  %731 = and i32 %730, 1
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %740, label %733

733:                                              ; preds = %728
  %734 = bitcast %"class.blink::ElementData"* %724 to %"class.blink::UniqueElementData"*
  %735 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %724, i64 1, i32 1
  %736 = bitcast %"class.blink::Member.237"* %735 to %"class.blink::Attribute"**
  %737 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %736, align 8
  %738 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %734, i64 0, i32 2, i32 0, i32 0, i32 2
  %739 = load i32, i32* %738, align 4
  br label %746

740:                                              ; preds = %728, %726
  %741 = phi i32 [ %727, %726 ], [ %730, %728 ]
  %742 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %724, i64 1
  %743 = bitcast %"class.blink::ElementData"* %742 to %"class.blink::Attribute"*
  %744 = lshr i32 %741, 1
  %745 = and i32 %744, 268435455
  br label %746

746:                                              ; preds = %733, %740
  %747 = phi i32 [ %745, %740 ], [ %739, %733 ]
  %748 = phi %"class.blink::Attribute"* [ %743, %740 ], [ %737, %733 ]
  %749 = zext i32 %747 to i64
  %750 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %748, i64 %749
  %751 = icmp eq i32 %747, 0
  br i1 %751, label %1024, label %752

752:                                              ; preds = %746
  %753 = bitcast %"class.blink::Node"** %9 to i8*
  %754 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %755 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %756 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %757 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %754, i64 0, i32 0, i32 0, i32 0
  br label %758

758:                                              ; preds = %752, %785
  %759 = phi %"class.blink::Attribute"* [ %748, %752 ], [ %786, %785 ]
  %760 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %759, i64 0, i32 0
  %761 = call %"class.blink::Attr"* @_ZN5blink7Element10EnsureAttrERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %653, %"class.blink::QualifiedName"* dereferenceable(8) %760) #9
  %762 = getelementptr inbounds %"class.blink::Attr", %"class.blink::Attr"* %761, i64 0, i32 0
  %763 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %655, align 8
  %764 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %762, i32 2, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %763)
  br i1 %764, label %765, label %785

765:                                              ; preds = %758
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %753)
  store %"class.blink::Node"* %762, %"class.blink::Node"** %9, align 8
  %766 = load i32, i32* %755, align 4
  %767 = load i32, i32* %756, align 8
  %768 = icmp eq i32 %766, %767
  br i1 %768, label %783, label %769, !prof !2

769:                                              ; preds = %765
  %770 = ptrtoint %"class.blink::Attr"* %761 to i64
  %771 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %757, align 8
  %772 = zext i32 %766 to i64
  %773 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %771, i64 %772
  %774 = bitcast %"class.blink::Member.200"* %773 to i64*
  store atomic i64 %770, i64* %774 monotonic, align 8
  %775 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %780, label %777

777:                                              ; preds = %769
  %778 = bitcast %"class.blink::Attr"* %761 to i8*
  %779 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %778) #9
  br label %780

780:                                              ; preds = %777, %769
  %781 = load i32, i32* %755, align 4
  %782 = add i32 %781, 1
  store i32 %782, i32* %755, align 4
  br label %784

783:                                              ; preds = %765
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %754, %"class.blink::Node"** nonnull dereferenceable(8) %9) #9
  br label %784

784:                                              ; preds = %780, %783
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %753)
  br label %785

785:                                              ; preds = %784, %758
  %786 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %759, i64 1
  %787 = icmp eq %"class.blink::Attribute"* %786, %750
  br i1 %787, label %1024, label %758

788:                                              ; preds = %4
  %789 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %790 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %789, align 8
  %791 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %2, i32 12, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %790)
  br i1 %791, label %792, label %1024

792:                                              ; preds = %788
  %793 = bitcast %"class.blink::Node"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %793)
  store %"class.blink::Node"* %2, %"class.blink::Node"** %11, align 8
  %794 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %795 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %796 = load i32, i32* %795, align 4
  %797 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %798 = load i32, i32* %797, align 8
  %799 = icmp eq i32 %796, %798
  br i1 %799, label %815, label %800, !prof !2

800:                                              ; preds = %792
  %801 = ptrtoint %"class.blink::Node"* %2 to i64
  %802 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %794, i64 0, i32 0, i32 0, i32 0
  %803 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %802, align 8
  %804 = zext i32 %796 to i64
  %805 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %803, i64 %804
  %806 = bitcast %"class.blink::Member.200"* %805 to i64*
  store atomic i64 %801, i64* %806 monotonic, align 8
  %807 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %812, label %809

809:                                              ; preds = %800
  %810 = bitcast %"class.blink::Node"* %2 to i8*
  %811 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %810) #9
  br label %812

812:                                              ; preds = %809, %800
  %813 = load i32, i32* %795, align 4
  %814 = add i32 %813, 1
  store i32 %814, i32* %795, align 4
  br label %816

815:                                              ; preds = %792
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %794, %"class.blink::Node"** nonnull dereferenceable(8) %11) #9
  br label %816

816:                                              ; preds = %812, %815
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %793)
  br label %1024

817:                                              ; preds = %4
  %818 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %819 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %818, align 8
  %820 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %2, i32 5, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %819)
  br i1 %820, label %821, label %846

821:                                              ; preds = %817
  %822 = bitcast %"class.blink::Node"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %822)
  store %"class.blink::Node"* %2, %"class.blink::Node"** %12, align 8
  %823 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %824 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %825 = load i32, i32* %824, align 4
  %826 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %827 = load i32, i32* %826, align 8
  %828 = icmp eq i32 %825, %827
  br i1 %828, label %844, label %829, !prof !2

829:                                              ; preds = %821
  %830 = ptrtoint %"class.blink::Node"* %2 to i64
  %831 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %823, i64 0, i32 0, i32 0, i32 0
  %832 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %831, align 8
  %833 = zext i32 %825 to i64
  %834 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %832, i64 %833
  %835 = bitcast %"class.blink::Member.200"* %834 to i64*
  store atomic i64 %830, i64* %835 monotonic, align 8
  %836 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %841, label %838

838:                                              ; preds = %829
  %839 = bitcast %"class.blink::Node"* %2 to i8*
  %840 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %839) #9
  br label %841

841:                                              ; preds = %838, %829
  %842 = load i32, i32* %824, align 4
  %843 = add i32 %842, 1
  store i32 %843, i32* %824, align 4
  br label %845

844:                                              ; preds = %821
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %823, %"class.blink::Node"** nonnull dereferenceable(8) %12) #9
  br label %845

845:                                              ; preds = %841, %844
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %822)
  br label %846

846:                                              ; preds = %845, %817
  %847 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %848 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %847, align 8
  %849 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %848, i64 40
  %850 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %849, align 8
  %851 = call zeroext i1 %850(%"class.blink::Node"* %2) #9
  %852 = icmp eq %"class.blink::Node"* %2, null
  %853 = or i1 %851, %852
  br i1 %853, label %1024, label %854

854:                                              ; preds = %846
  %855 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %856 = load i32, i32* %855, align 8
  %857 = and i32 %856, 2
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %1024, label %859

859:                                              ; preds = %854
  %860 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %861 = bitcast %"class.blink::Node"* %860 to %"class.blink::Node"**
  %862 = load %"class.blink::Node"*, %"class.blink::Node"** %861, align 8
  %863 = icmp eq %"class.blink::Node"* %862, null
  br i1 %863, label %1024, label %864

864:                                              ; preds = %859
  %865 = bitcast %"class.blink::Node"** %15 to i8*
  %866 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %867 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %868 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %869 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %866, i64 0, i32 0, i32 0, i32 0
  br label %870

870:                                              ; preds = %864, %912
  %871 = phi %"class.blink::Node"* [ %862, %864 ], [ %913, %912 ]
  %872 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %818, align 8
  %873 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %871, i32 5, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %872)
  br i1 %873, label %874, label %894

874:                                              ; preds = %870
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %865)
  store %"class.blink::Node"* %871, %"class.blink::Node"** %15, align 8
  %875 = load i32, i32* %867, align 4
  %876 = load i32, i32* %868, align 8
  %877 = icmp eq i32 %875, %876
  br i1 %877, label %892, label %878, !prof !2

878:                                              ; preds = %874
  %879 = ptrtoint %"class.blink::Node"* %871 to i64
  %880 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %869, align 8
  %881 = zext i32 %875 to i64
  %882 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %880, i64 %881
  %883 = bitcast %"class.blink::Member.200"* %882 to i64*
  store atomic i64 %879, i64* %883 monotonic, align 8
  %884 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %889, label %886

886:                                              ; preds = %878
  %887 = bitcast %"class.blink::Node"* %871 to i8*
  %888 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %887) #9
  br label %889

889:                                              ; preds = %886, %878
  %890 = load i32, i32* %867, align 4
  %891 = add i32 %890, 1
  store i32 %891, i32* %867, align 4
  br label %893

892:                                              ; preds = %874
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %866, %"class.blink::Node"** nonnull dereferenceable(8) %15) #9
  br label %893

893:                                              ; preds = %889, %892
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %865)
  br label %894

894:                                              ; preds = %870, %893
  %895 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %871, i64 0, i32 1
  %896 = load i32, i32* %895, align 8
  %897 = and i32 %896, 2
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %904, label %899

899:                                              ; preds = %894
  %900 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %871, i64 1
  %901 = bitcast %"class.blink::Node"* %900 to %"class.blink::Node"**
  %902 = load %"class.blink::Node"*, %"class.blink::Node"** %901, align 8
  %903 = icmp eq %"class.blink::Node"* %902, null
  br i1 %903, label %904, label %912

904:                                              ; preds = %899, %894
  %905 = icmp eq %"class.blink::Node"* %871, %2
  br i1 %905, label %1024, label %906

906:                                              ; preds = %904
  %907 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %871, i64 0, i32 5, i32 0, i32 0
  %908 = load %"class.blink::Node"*, %"class.blink::Node"** %907, align 8
  %909 = icmp eq %"class.blink::Node"* %908, null
  br i1 %909, label %910, label %912

910:                                              ; preds = %906
  %911 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %871, %"class.blink::Node"* %2) #9
  br label %912

912:                                              ; preds = %899, %906, %910
  %913 = phi %"class.blink::Node"* [ %911, %910 ], [ %908, %906 ], [ %902, %899 ]
  %914 = icmp eq %"class.blink::Node"* %913, null
  br i1 %914, label %1024, label %870

915:                                              ; preds = %4
  %916 = getelementptr inbounds %"class.blink::xpath::Step", %"class.blink::xpath::Step"* %0, i64 0, i32 2, i32 0, i32 0
  %917 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %916, align 8
  %918 = tail call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %2, i32 1, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %917)
  br i1 %918, label %919, label %944

919:                                              ; preds = %915
  %920 = bitcast %"class.blink::Node"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %920)
  store %"class.blink::Node"* %2, %"class.blink::Node"** %21, align 8
  %921 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %922 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %923 = load i32, i32* %922, align 4
  %924 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %925 = load i32, i32* %924, align 8
  %926 = icmp eq i32 %923, %925
  br i1 %926, label %942, label %927, !prof !2

927:                                              ; preds = %919
  %928 = ptrtoint %"class.blink::Node"* %2 to i64
  %929 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %921, i64 0, i32 0, i32 0, i32 0
  %930 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %929, align 8
  %931 = zext i32 %923 to i64
  %932 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %930, i64 %931
  %933 = bitcast %"class.blink::Member.200"* %932 to i64*
  store atomic i64 %928, i64* %933 monotonic, align 8
  %934 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %935 = icmp eq i32 %934, 0
  br i1 %935, label %939, label %936

936:                                              ; preds = %927
  %937 = bitcast %"class.blink::Node"* %2 to i8*
  %938 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %937) #9
  br label %939

939:                                              ; preds = %936, %927
  %940 = load i32, i32* %922, align 4
  %941 = add i32 %940, 1
  store i32 %941, i32* %922, align 4
  br label %943

942:                                              ; preds = %919
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %921, %"class.blink::Node"** nonnull dereferenceable(8) %21) #9
  br label %943

943:                                              ; preds = %939, %942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %920)
  br label %944

944:                                              ; preds = %943, %915
  %945 = icmp eq %"class.blink::Node"* %2, null
  br i1 %945, label %984, label %946

946:                                              ; preds = %944
  %947 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Node"*)***
  %948 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %947, align 8
  %949 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %948, i64 40
  %950 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %949, align 8
  %951 = call zeroext i1 %950(%"class.blink::Node"* nonnull %2) #9
  br i1 %951, label %952, label %984

952:                                              ; preds = %946
  %953 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 1
  %954 = bitcast %"class.blink::Node"* %953 to %"class.blink::Element"**
  %955 = load %"class.blink::Element"*, %"class.blink::Element"** %954, align 8
  %956 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %955, i64 0, i32 0, i32 0
  %957 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %916, align 8
  %958 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* %956, i32 1, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %957)
  br i1 %958, label %959, label %984

959:                                              ; preds = %952
  %960 = bitcast %"class.blink::Node"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %960)
  store %"class.blink::Node"* %956, %"class.blink::Node"** %22, align 8
  %961 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %962 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %963 = load i32, i32* %962, align 4
  %964 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %965 = load i32, i32* %964, align 8
  %966 = icmp eq i32 %963, %965
  br i1 %966, label %982, label %967, !prof !2

967:                                              ; preds = %959
  %968 = ptrtoint %"class.blink::Element"* %955 to i64
  %969 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %961, i64 0, i32 0, i32 0, i32 0
  %970 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %969, align 8
  %971 = zext i32 %963 to i64
  %972 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %970, i64 %971
  %973 = bitcast %"class.blink::Member.200"* %972 to i64*
  store atomic i64 %968, i64* %973 monotonic, align 8
  %974 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %979, label %976

976:                                              ; preds = %967
  %977 = bitcast %"class.blink::Element"* %955 to i8*
  %978 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %977) #9
  br label %979

979:                                              ; preds = %976, %967
  %980 = load i32, i32* %962, align 4
  %981 = add i32 %980, 1
  store i32 %981, i32* %962, align 4
  br label %983

982:                                              ; preds = %959
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %961, %"class.blink::Node"** nonnull dereferenceable(8) %22) #9
  br label %983

983:                                              ; preds = %979, %982
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %960)
  br label %984

984:                                              ; preds = %946, %944, %952, %983
  %985 = phi %"class.blink::Node"* [ %956, %983 ], [ %956, %952 ], [ %2, %946 ], [ null, %944 ]
  %986 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %985) #9
  %987 = icmp eq %"class.blink::ContainerNode"* %986, null
  br i1 %987, label %1022, label %988

988:                                              ; preds = %984
  %989 = bitcast %"class.blink::Node"** %24 to i8*
  %990 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0
  %991 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %992 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %993 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %990, i64 0, i32 0, i32 0, i32 0
  br label %994

994:                                              ; preds = %988, %1019
  %995 = phi %"class.blink::ContainerNode"* [ %986, %988 ], [ %1020, %1019 ]
  %996 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %995, i64 0, i32 0
  %997 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %916, align 8
  %998 = call fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::Node"* nonnull %996, i32 1, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %997)
  br i1 %998, label %999, label %1019

999:                                              ; preds = %994
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %989)
  store %"class.blink::Node"* %996, %"class.blink::Node"** %24, align 8
  %1000 = load i32, i32* %991, align 4
  %1001 = load i32, i32* %992, align 8
  %1002 = icmp eq i32 %1000, %1001
  br i1 %1002, label %1017, label %1003, !prof !2

1003:                                             ; preds = %999
  %1004 = ptrtoint %"class.blink::ContainerNode"* %995 to i64
  %1005 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %993, align 8
  %1006 = zext i32 %1000 to i64
  %1007 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %1005, i64 %1006
  %1008 = bitcast %"class.blink::Member.200"* %1007 to i64*
  store atomic i64 %1004, i64* %1008 monotonic, align 8
  %1009 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1014, label %1011

1011:                                             ; preds = %1003
  %1012 = bitcast %"class.blink::ContainerNode"* %995 to i8*
  %1013 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %1012) #9
  br label %1014

1014:                                             ; preds = %1011, %1003
  %1015 = load i32, i32* %991, align 4
  %1016 = add i32 %1015, 1
  store i32 %1016, i32* %991, align 4
  br label %1018

1017:                                             ; preds = %999
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"* %990, %"class.blink::Node"** nonnull dereferenceable(8) %24) #9
  br label %1018

1018:                                             ; preds = %1014, %1017
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %989)
  br label %1019

1019:                                             ; preds = %994, %1018
  %1020 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %996) #9
  %1021 = icmp eq %"class.blink::ContainerNode"* %1020, null
  br i1 %1021, label %1022, label %994

1022:                                             ; preds = %1019, %984
  %1023 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %3, i64 0, i32 0
  store i8 0, i8* %1023, align 8
  br label %1024

1024:                                             ; preds = %904, %912, %785, %489, %501, %348, %139, %147, %76, %854, %718, %88, %35, %859, %746, %438, %408, %313, %93, %40, %680, %648, %646, %677, %689, %717, %190, %158, %191, %223, %194, %846, %788, %816, %352, %306, %80, %27, %304, %370, %644, %1022, %4
  ret void
}

declare zeroext i1 @_ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Predicate"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink5xpathL11NodeMatchesERNS0_17EvaluationContextEPNS_4NodeENS0_4Step4AxisERKNS5_8NodeTestE(%"struct.blink::xpath::EvaluationContext"* dereferenceable(48), %"class.blink::Node"*, i32, %"class.blink::xpath::Step::NodeTest"* nocapture readonly dereferenceable(40)) unnamed_addr #3 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %304 [
    i32 0, label %11
    i32 1, label %19
    i32 2, label %26
    i32 3, label %283
    i32 4, label %63
  ]

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %13 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %13, i64 30
  %15 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::Node"* %1) #9
  %17 = add i32 %16, -3
  %18 = icmp ult i32 %17, 2
  br i1 %18, label %283, label %304

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %21 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %21, i64 30
  %23 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::Node"* %1) #9
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %283, label %304

26:                                               ; preds = %4
  %27 = bitcast %"class.blink::Node"* %1 to i32 (%"class.blink::Node"*)***
  %28 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %28, i64 30
  %30 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::Node"* %1) #9
  %32 = icmp eq i32 %31, 7
  br i1 %32, label %33, label %304

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %283, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %283, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::Node"* %1 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  %43 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %43, i64 27
  %45 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %44, align 8
  %46 = tail call %"class.WTF::StringImpl"* %45(%"class.blink::Node"* %1) #9
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %48 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"* %46) #9
  %49 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %49, label %282, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %282

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br i1 %48, label %283, label %304

63:                                               ; preds = %4
  %64 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 2
  %66 = icmp eq i32 %2, 2
  br i1 %66, label %67, label %163

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 0, i32 0, i32 1
  %69 = bitcast %"class.blink::TraceWrapperV8Reference"* %68 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink11xmlns_names13kNamespaceURIE, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %73, %75
  br i1 %76, label %304, label %77

77:                                               ; preds = %67
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %84, label %94

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %283, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  %92 = icmp eq %"class.WTF::StringImpl"* %73, %86
  %93 = or i1 %92, %91
  br i1 %93, label %283, label %304

94:                                               ; preds = %77
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %96, i64 0, i32 2, i32 0, i32 0
  %98 = load %"class.blink::Document"*, %"class.blink::Document"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %98, i64 0, i32 107
  %100 = load i8, i8* %99, align 8
  %101 = and i8 %100, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %155, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1
  %105 = bitcast %"class.blink::Node"* %104 to %"class.blink::Element"**
  %106 = load %"class.blink::Element"*, %"class.blink::Element"** %105, align 8
  %107 = icmp eq %"class.blink::Element"* %106, null
  br i1 %107, label %155, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %106, i64 0, i32 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 48
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %155

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  %117 = icmp eq %"class.WTF::StringImpl"* %73, null
  %118 = and i1 %117, %116
  br i1 %118, label %119, label %155

119:                                              ; preds = %113
  %120 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #9
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %125, align 8
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %127 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %126, i64* %127, align 8
  br label %135

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  br label %135

135:                                              ; preds = %128, %124
  %136 = phi i32 [ %131, %128 ], [ 0, %124 ]
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %136, i32* %137, align 8
  %138 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #9
  %139 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %139, label %140, label %144

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %141, align 8
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %143 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %142, i64* %143, align 8
  br label %151

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %145, align 8
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 1
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %150 = bitcast i8** %149 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %150, align 8
  br label %151

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %147, %144 ], [ 0, %140 ]
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %152, i32* %153, align 8
  %154 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #9
  br i1 %154, label %283, label %304

155:                                              ; preds = %113, %108, %103, %94
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, %80
  br i1 %158, label %159, label %304

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %73, %161
  br i1 %162, label %283, label %304

163:                                              ; preds = %63
  %164 = icmp eq %"class.blink::Node"* %1, null
  br i1 %164, label %304, label %165

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %167 = load i32, i32* %166, align 8
  %168 = and i32 %167, 12
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %304

170:                                              ; preds = %165
  %171 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  %172 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %171, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %173, %175
  br i1 %176, label %177, label %192

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %283, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %283, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %187 = bitcast %"class.blink::Member.200"* %186 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 4, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %179, %190
  br i1 %191, label %283, label %304

192:                                              ; preds = %170
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %194 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %194, i64 0, i32 2, i32 0, i32 0
  %196 = load %"class.blink::Document"*, %"class.blink::Document"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %196, i64 0, i32 107
  %198 = load i8, i8* %197, align 8
  %199 = and i8 %198, 1
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %269, label %201

201:                                              ; preds = %192
  %202 = and i32 %167, 48
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %254

204:                                              ; preds = %201
  %205 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #9
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %207 = bitcast %"class.blink::Member.200"* %206 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %212, label %216

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %213, align 8
  %214 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %215 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %214, i64* %215, align 8
  br label %223

216:                                              ; preds = %204
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 1
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %222 = bitcast i8** %221 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %220, %"class.WTF::StringImpl"** %222, align 8
  br label %223

223:                                              ; preds = %216, %212
  %224 = phi i32 [ %219, %216 ], [ 0, %212 ]
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %224, i32* %225, align 8
  %226 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #9
  %227 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %227, label %228, label %232

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %229, align 8
  %230 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %231 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %230, i64* %231, align 8
  br label %239

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %233, align 8
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 1
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %238 = bitcast i8** %237 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %238, align 8
  br label %239

239:                                              ; preds = %232, %228
  %240 = phi i32 [ %235, %232 ], [ 0, %228 ]
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %240, i32* %241, align 8
  %242 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #9
  br i1 %242, label %244, label %243

243:                                              ; preds = %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #9
  br label %304

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %248, label %249

248:                                              ; preds = %244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #9
  br label %283

249:                                              ; preds = %244
  %250 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %250, i64 0, i32 4, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %246, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #9
  br i1 %253, label %283, label %304

254:                                              ; preds = %201
  %255 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %256 = bitcast %"class.blink::Member.200"* %255 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 3, i32 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, %173
  br i1 %260, label %261, label %304

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %257, i64 0, i32 4, i32 0, i32 0, i32 0
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %263, %265
  %267 = icmp ne %"class.WTF::StringImpl"* %263, null
  %268 = and i1 %267, %266
  br i1 %268, label %283, label %304

269:                                              ; preds = %192
  %270 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %271 = bitcast %"class.blink::Member.200"* %270 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %272 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %272, i64 0, i32 3, i32 0, i32 0, i32 0
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %273, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, %173
  br i1 %275, label %276, label %304

276:                                              ; preds = %269
  %277 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %272, i64 0, i32 4, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %278, %280
  br i1 %281, label %283, label %304

282:                                              ; preds = %41, %59
  br i1 %48, label %283, label %304

283:                                              ; preds = %177, %84, %33, %37, %181, %4, %248, %62, %276, %185, %249, %159, %151, %11, %19, %261, %88, %282
  %284 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %0, i64 0, i32 2
  %285 = load i32, i32* %284, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %284, align 4
  %287 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %288 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %288, i64 %291
  %293 = icmp eq i32 %290, 0
  br i1 %293, label %304, label %294

294:                                              ; preds = %283
  %295 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %0, i64 0, i32 0
  br label %298

296:                                              ; preds = %298
  %297 = icmp eq %"class.blink::Member.5"* %303, %292
  br i1 %297, label %304, label %298

298:                                              ; preds = %294, %296
  %299 = phi %"class.blink::Member.5"* [ %288, %294 ], [ %303, %296 ]
  store %"class.blink::Node"* %1, %"class.blink::Node"** %295, align 8
  %300 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %299, i64 0, i32 0, i32 0
  %301 = load %"class.blink::xpath::Predicate"*, %"class.blink::xpath::Predicate"** %300, align 8
  %302 = call zeroext i1 @_ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Predicate"* %301, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %0) #9
  %303 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %299, i64 1
  br i1 %302, label %296, label %304

304:                                              ; preds = %298, %296, %283, %282, %88, %261, %19, %11, %151, %159, %249, %185, %276, %62, %243, %67, %155, %254, %269, %26, %165, %163, %4
  %305 = phi i1 [ false, %4 ], [ false, %163 ], [ false, %165 ], [ false, %26 ], [ false, %269 ], [ false, %254 ], [ false, %155 ], [ false, %67 ], [ false, %243 ], [ false, %62 ], [ false, %276 ], [ false, %185 ], [ false, %249 ], [ false, %159 ], [ false, %151 ], [ false, %11 ], [ false, %19 ], [ false, %261 ], [ false, %88 ], [ false, %282 ], [ true, %283 ], [ false, %298 ], [ true, %296 ]
  ret i1 %305
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink5xpath13IsRootDomNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #4

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #4

declare %"class.blink::Attr"* @_ZN5blink7Element16getAttributeNodeERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::Attr"* @_ZN5blink7Element18getAttributeNodeNSERKN3WTF12AtomicStringES4_(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::Attr"* @_ZN5blink7Element10EnsureAttrERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.200"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.200"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.200"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.556"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %24, i64 %25
  ret %"class.blink::Member.200"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.556"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.556"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.200", %"class.blink::Member.200"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.200"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.556"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %8, align 8
  %10 = icmp eq %"class.blink::Member.200"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.556"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %8, align 8
  %26 = icmp eq %"class.blink::Member.200"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.200"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.556"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.556"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.556"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.556"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.200"*, %"class.blink::Member.200"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.200"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.200"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.556"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector.556"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector.556"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.556", %"class.WTF::Vector.556"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #4

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.5"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.5"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Predicate"*
  tail call void @_ZNK5blink5xpath9Predicate5TraceEPNS_7VisitorE(%"class.blink::xpath::Predicate"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink5xpath9Predicate5TraceEPNS_7VisitorE(%"class.blink::xpath::Predicate"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath4Step8NodeTestEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #9
  br label %37

37:                                               ; preds = %19, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS5_EEvOT_(%"class.WTF::Vector"*, %"class.blink::Member.5"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.5"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.5"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %22) #9
  %23 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.5"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.5"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %37) #9
  %38 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.5"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.5"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.5"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.5"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #9
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %8, align 8
  %10 = icmp eq %"class.blink::Member.5"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.602"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking.602"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.602", %"class.blink::HeapVectorBacking.602"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %8, align 8
  %26 = icmp eq %"class.blink::Member.5"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.5"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.602"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking.602"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.602"* %17, null
  %23 = icmp ne %"class.blink::Member.5"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.5"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.602", %"class.blink::HeapVectorBacking.602"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.602", %"class.blink::HeapVectorBacking.602"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.602"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.9, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.602"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.602"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath9PredicateEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
