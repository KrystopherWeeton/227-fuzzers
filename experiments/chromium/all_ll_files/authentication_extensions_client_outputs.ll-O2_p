; ModuleID = 'gen/third_party/blink/renderer/modules/credentialmanager/authentication_extensions_client_outputs.cc'
source_filename = "gen/third_party/blink/renderer/modules/credentialmanager/authentication_extensions_client_outputs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.192" }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%"class.blink::AuthenticationExtensionsClientOutputs" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member", %"class.blink::Member.0", i8, %"class.blink::Member.4", %"class.WTF::Vector" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CredentialPropertiesOutput"* }
%"class.blink::CredentialPropertiesOutput" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* }
%"class.blink::AuthenticationExtensionsLargeBlobOutputs" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.blink::Member.0", i8, i8, [6 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::Vector.6"*, i32, i32 }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { i32*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.174", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.114", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist.45"* }
%"class.blink::Worklist.45" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { float }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.117", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.45"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.178" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_EaSERKS3_ = comdat any

$_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN5blink10TraceTraitINS_26CredentialPropertiesOutputEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_40AuthenticationExtensionsLargeBlobOutputsEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink37AuthenticationExtensionsClientOutputsE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AuthenticationExtensionsClientOutputs"*)* @_ZN5blink37AuthenticationExtensionsClientOutputsD2Ev to i8*), i8* bitcast (void (%"class.blink::AuthenticationExtensionsClientOutputs"*)* @_ZN5blink37AuthenticationExtensionsClientOutputsD0Ev to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.v8::Object"*, %"class.v8::Isolate"*)* @_ZNK5blink37AuthenticationExtensionsClientOutputs8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE to i8*), i8* bitcast (void (%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.blink::Visitor"*)* @_ZNK5blink37AuthenticationExtensionsClientOutputs5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1

@_ZN5blink37AuthenticationExtensionsClientOutputsC1Ev = hidden unnamed_addr alias void (%"class.blink::AuthenticationExtensionsClientOutputs"*), void (%"class.blink::AuthenticationExtensionsClientOutputs"*)* @_ZN5blink37AuthenticationExtensionsClientOutputsC2Ev
@_ZN5blink37AuthenticationExtensionsClientOutputsD1Ev = hidden unnamed_addr alias void (%"class.blink::AuthenticationExtensionsClientOutputs"*), void (%"class.blink::AuthenticationExtensionsClientOutputs"*)* @_ZN5blink37AuthenticationExtensionsClientOutputsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputsC2Ev(%"class.blink::AuthenticationExtensionsClientOutputs"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink37AuthenticationExtensionsClientOutputsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 11, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 5, i1 false)
  %6 = bitcast %"class.blink::CredentialPropertiesOutput"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  %7 = bitcast %"class.blink::AuthenticationExtensionsLargeBlobOutputs"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputsD2Ev(%"class.blink::AuthenticationExtensionsClientOutputs"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink37AuthenticationExtensionsClientOutputsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector.6"* %5, null
  br i1 %6, label %35, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::Vector.6"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 %13
  br label %15

15:                                               ; preds = %27, %12
  %16 = phi %"class.WTF::Vector.6"* [ %28, %27 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  %20 = bitcast i32* %18 to i8*
  br i1 %19, label %27, label %21, !prof !2

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #4
  store i32* null, i32** %17, align 8
  br label %27

27:                                               ; preds = %26, %15
  %28 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 1
  %29 = icmp eq %"class.WTF::Vector.6"* %28, %14
  br i1 %29, label %30, label %15

30:                                               ; preds = %27
  store i32 0, i32* %9, align 4
  %31 = bitcast %"class.WTF::Vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #4
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %4, align 8
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputsD0Ev(%"class.blink::AuthenticationExtensionsClientOutputs"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink37AuthenticationExtensionsClientOutputsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector.6"* %5, null
  br i1 %6, label %35, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::Vector.6"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %33, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %5, i64 %13
  br label %15

15:                                               ; preds = %27, %12
  %16 = phi %"class.WTF::Vector.6"* [ %28, %27 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  %20 = bitcast i32* %18 to i8*
  br i1 %19, label %27, label %21, !prof !2

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #4
  store i32* null, i32** %17, align 8
  br label %27

27:                                               ; preds = %26, %15
  %28 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 1
  %29 = icmp eq %"class.WTF::Vector.6"* %28, %14
  br i1 %29, label %30, label %15

30:                                               ; preds = %27
  store i32 0, i32* %9, align 4
  %31 = bitcast %"class.WTF::Vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #4
  store %"class.WTF::Vector.6"* null, %"class.WTF::Vector.6"** %4, align 8
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputs12setCredPropsEPNS_26CredentialPropertiesOutputE(%"class.blink::AuthenticationExtensionsClientOutputs"* nocapture, %"class.blink::CredentialPropertiesOutput"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 8
  %4 = ptrtoint %"class.blink::CredentialPropertiesOutput"* %1 to i64
  %5 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CredentialPropertiesOutput"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #4
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputs12setLargeBlobEPNS_40AuthenticationExtensionsLargeBlobOutputsE(%"class.blink::AuthenticationExtensionsClientOutputs"* nocapture, %"class.blink::AuthenticationExtensionsLargeBlobOutputs"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 11
  %4 = ptrtoint %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %1 to i64
  %5 = bitcast %"class.blink::Member.4"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #4
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AuthenticationExtensionsClientOutputs6setUvmERKN3WTF6VectorINS2_IjLj0ENS1_18PartitionAllocatorEEELj0ES3_EE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 12
  %4 = tail call dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_EaSERKS3_(%"class.WTF::Vector"* %3, %"class.WTF::Vector"* dereferenceable(16) %1)
  %5 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 5
  store i8 1, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector"* @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_EaSERKS3_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %159, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %12, i64 %15
  br label %17

17:                                               ; preds = %29, %10
  %18 = phi %"class.WTF::Vector.6"* [ %30, %29 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  %22 = bitcast i32* %20 to i8*
  br i1 %21, label %29, label %23, !prof !2

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %18, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %23
  store i32 0, i32* %24, align 4
  br label %28

28:                                               ; preds = %27, %23
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #4
  store i32* null, i32** %19, align 8
  br label %29

29:                                               ; preds = %28, %17
  %30 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %18, i64 1
  %31 = icmp eq %"class.WTF::Vector.6"* %30, %14
  br i1 %31, label %32, label %17

32:                                               ; preds = %29
  store i32 %8, i32* %5, align 4
  br label %87

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %8, %35
  br i1 %36, label %37, label %85

37:                                               ; preds = %33
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %42, align 8
  %44 = zext i32 %6 to i64
  %45 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %43, i64 %44
  br label %46

46:                                               ; preds = %58, %41
  %47 = phi %"class.WTF::Vector.6"* [ %59, %58 ], [ %43, %41 ]
  %48 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  %51 = bitcast i32* %49 to i8*
  br i1 %50, label %58, label %52, !prof !2

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %47, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56, !prof !3

56:                                               ; preds = %52
  store i32 0, i32* %53, align 4
  br label %57

57:                                               ; preds = %56, %52
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #4
  store i32* null, i32** %48, align 8
  br label %58

58:                                               ; preds = %57, %46
  %59 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %47, i64 1
  %60 = icmp eq %"class.WTF::Vector.6"* %59, %45
  br i1 %60, label %61, label %46

61:                                               ; preds = %58
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %39
  %63 = bitcast %"class.WTF::Vector"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store i32 0, i32* %34, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #4
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %34, align 8
  br label %68

68:                                               ; preds = %37, %62
  %69 = phi i32 [ 0, %37 ], [ %67, %62 ]
  %70 = phi i32 [ %8, %37 ], [ %66, %62 ]
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %85, !prof !2

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %73, align 8
  %75 = icmp eq %"class.WTF::Vector.6"* %74, null
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = zext i32 %70 to i64
  %78 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %77) #4
  %79 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %78, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #4
  %80 = ptrtoint i8* %79 to i64
  %81 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = lshr i64 %78, 4
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %34, align 8
  br label %85

84:                                               ; preds = %72
  tail call void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %70) #4
  br label %85

85:                                               ; preds = %33, %68, %76, %84
  %86 = load i32, i32* %5, align 4
  br label %87

87:                                               ; preds = %85, %32
  %88 = phi i32 [ %86, %85 ], [ %8, %32 ]
  %89 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %89, align 8
  %91 = zext i32 %88 to i64
  %92 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %90, i64 %91
  %93 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %93, align 8
  %95 = icmp eq i32 %88, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %87, %96
  %97 = phi %"class.WTF::Vector.6"* [ %101, %96 ], [ %94, %87 ]
  %98 = phi %"class.WTF::Vector.6"* [ %100, %96 ], [ %90, %87 ]
  %99 = tail call dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.6"* %97, %"class.WTF::Vector.6"* dereferenceable(16) %98) #4
  %100 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %98, i64 1
  %101 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %97, i64 1
  %102 = icmp eq %"class.WTF::Vector.6"* %100, %92
  br i1 %102, label %103, label %96

103:                                              ; preds = %96
  %104 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %89, align 8
  %105 = load i32, i32* %5, align 4
  %106 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %93, align 8
  br label %107

107:                                              ; preds = %103, %87
  %108 = phi %"class.WTF::Vector.6"* [ %106, %103 ], [ %94, %87 ]
  %109 = phi i32 [ %105, %103 ], [ 0, %87 ]
  %110 = phi %"class.WTF::Vector.6"* [ %104, %103 ], [ %90, %87 ]
  %111 = zext i32 %109 to i64
  %112 = load i32, i32* %7, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %110, i64 %113
  %115 = icmp eq i32 %109, %112
  br i1 %115, label %157, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %108, i64 %111
  %118 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %110, i64 %111
  br label %119

119:                                              ; preds = %116, %151
  %120 = phi %"class.WTF::Vector.6"* [ %152, %151 ], [ %117, %116 ]
  %121 = phi %"class.WTF::Vector.6"* [ %153, %151 ], [ %118, %116 ]
  %122 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %121, i64 0, i32 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 0, i32 0, i32 0, i32 0
  store i32* null, i32** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %125, align 8
  %126 = icmp eq i32 %123, 0
  br i1 %126, label %136, label %127

127:                                              ; preds = %119
  %128 = zext i32 %123 to i64
  %129 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %128) #4
  %130 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %129, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #4
  %131 = ptrtoint i8* %130 to i64
  %132 = bitcast %"class.WTF::Vector.6"* %120 to i64*
  store atomic i64 %131, i64* %132 monotonic, align 8
  %133 = lshr i64 %129, 2
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %125, align 8
  %135 = icmp ne i8* %130, null
  br label %136

136:                                              ; preds = %127, %119
  %137 = phi i8* [ null, %119 ], [ %130, %127 ]
  %138 = phi i1 [ false, %119 ], [ %135, %127 ]
  %139 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %121, i64 0, i32 0, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 0, i32 0, i32 0, i32 2
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %121, i64 0, i32 0, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp ne i32* %143, null
  %145 = and i1 %138, %144
  br i1 %145, label %146, label %151, !prof !2

146:                                              ; preds = %136
  %147 = load i32, i32* %139, align 4
  %148 = zext i32 %147 to i64
  %149 = bitcast i32* %143 to i8*
  %150 = shl nuw nsw i64 %148, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %137, i8* nonnull align 4 %149, i64 %150, i1 false) #4
  br label %151

151:                                              ; preds = %146, %136
  %152 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %120, i64 1
  %153 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %121, i64 1
  %154 = icmp eq %"class.WTF::Vector.6"* %153, %114
  br i1 %154, label %155, label %119

155:                                              ; preds = %151
  %156 = load i32, i32* %7, align 4
  br label %157

157:                                              ; preds = %155, %107
  %158 = phi i32 [ %156, %155 ], [ %109, %107 ]
  store i32 %158, i32* %5, align 4
  br label %159

159:                                              ; preds = %2, %157
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink37AuthenticationExtensionsClientOutputs5TraceEPNS_7VisitorE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 8
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26CredentialPropertiesOutputEE5TraceEPNS_7VisitorEPKv) #4
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::Member.0"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv) #4
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 11
  %26 = bitcast %"class.blink::Member.4"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_40AuthenticationExtensionsLargeBlobOutputsEE5TraceEPNS_7VisitorEPKv) #4
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::AuthenticationExtensionsClientOutputs", %"class.blink::AuthenticationExtensionsClientOutputs"* %0, i64 0, i32 0
  tail call void @_ZNK5blink17IDLDictionaryBase5TraceEPNS_7VisitorE(%"class.blink::IDLDictionaryBase"* %36, %"class.blink::Visitor"* %1) #4
  ret void
}

declare void @_ZNK5blink17IDLDictionaryBase5TraceEPNS_7VisitorE(%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink37AuthenticationExtensionsClientOutputs8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::AuthenticationExtensionsClientOutputs"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IjLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %4, %37
  %15 = phi %"class.WTF::Vector.6"* [ %39, %37 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.6"* [ %38, %37 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.6"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.6"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #4
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.6"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = icmp eq i32* %30, null
  %32 = bitcast i32* %30 to i8*
  br i1 %31, label %37, label %33, !prof !2

33:                                               ; preds = %14
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %33
  store i32 0, i32* %26, align 4
  br label %36

36:                                               ; preds = %35, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #4
  store i32* null, i32** %29, align 8
  br label %37

37:                                               ; preds = %36, %14
  %38 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %16, i64 1
  %39 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %15, i64 1
  %40 = icmp eq %"class.WTF::Vector.6"* %39, %10
  br i1 %40, label %41, label %14

41:                                               ; preds = %37, %4
  %42 = bitcast %"class.WTF::Vector.6"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #4
  br label %95

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64 %44) #4
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #4
  %47 = lshr i64 %45, 4
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::Vector.6"*, %"class.WTF::Vector.6"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.WTF::Vector.6"* %50 to i8*
  br label %90

58:                                               ; preds = %43
  %59 = bitcast i8* %46 to %"class.WTF::Vector.6"*
  br label %60

60:                                               ; preds = %58, %83
  %61 = phi %"class.WTF::Vector.6"* [ %85, %83 ], [ %50, %58 ]
  %62 = phi %"class.WTF::Vector.6"* [ %84, %83 ], [ %59, %58 ]
  %63 = bitcast %"class.WTF::Vector.6"* %62 to i8*
  %64 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.6"* %61 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #4
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::Vector.6"* %62 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %64, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %64, align 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %65, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %65, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 0, i32 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  %78 = bitcast i32* %76 to i8*
  br i1 %77, label %83, label %79, !prof !2

79:                                               ; preds = %60
  %80 = icmp eq i32 %73, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %79
  store i32 0, i32* %72, align 4
  br label %82

82:                                               ; preds = %81, %79
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #4
  store i32* null, i32** %75, align 8
  br label %83

83:                                               ; preds = %82, %60
  %84 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %62, i64 1
  %85 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %61, i64 1
  %86 = icmp eq %"class.WTF::Vector.6"* %85, %54
  br i1 %86, label %87, label %60

87:                                               ; preds = %83
  %88 = bitcast %"class.WTF::Vector"* %0 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %56, %87
  %91 = phi i8* [ %89, %87 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #4
  %92 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %48, i64* %92 monotonic, align 8
  %93 = trunc i64 %47 to i32
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %93, i32* %94, align 8
  br label %95

95:                                               ; preds = %90, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIjLj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.6"* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.6"*, %"class.WTF::Vector.6"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.6"* %1, %0
  br i1 %3, label %90, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #4
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %34) #4
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #4
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 2
  %44 = ptrtoint i8* %36 to i64
  %45 = load i32*, i32** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne i32* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast i32* %45 to i8*
  br i1 %48, label %50, label %56, !prof !2

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #4
  %54 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #4
  %58 = bitcast %"class.WTF::Vector.6"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.6"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.6", %"class.WTF::Vector.6"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.6"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #4
  %70 = load i32*, i32** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32*, i32** %66, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %72
  %76 = icmp ne i32* %75, null
  %77 = icmp ne i32* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !2

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %70, i64 %81
  %83 = bitcast i32* %75 to i8*
  %84 = bitcast i32* %73 to i8*
  %85 = ptrtoint i32* %82 to i64
  %86 = ptrtoint i32* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #4
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.6"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26CredentialPropertiesOutputEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CredentialPropertiesOutput"*
  %4 = bitcast i8* %1 to void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)**, void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)*, void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)*, void (%"class.blink::CredentialPropertiesOutput"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CredentialPropertiesOutput"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_40AuthenticationExtensionsLargeBlobOutputsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AuthenticationExtensionsLargeBlobOutputs"*
  %4 = bitcast i8* %1 to void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)**, void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)*, void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)*, void (%"class.blink::AuthenticationExtensionsLargeBlobOutputs"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AuthenticationExtensionsLargeBlobOutputs"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
