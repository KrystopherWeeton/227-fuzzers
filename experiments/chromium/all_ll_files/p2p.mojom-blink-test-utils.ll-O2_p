; ModuleID = 'gen/services/network/public/mojom/p2p.mojom-blink-test-utils.cc'
source_filename = "gen/services/network/public/mojom/p2p.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter" = type { %"class.network::mojom::blink::P2PNetworkNotificationClient"* }
%"class.network::mojom::blink::P2PNetworkNotificationClient" = type { i32 (...)** }
%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter" = type { %"class.network::mojom::blink::P2PSocketManager"* }
%"class.network::mojom::blink::P2PSocketManager" = type { i32 (...)** }
%"class.network::mojom::blink::P2PSocketAsyncWaiter" = type { %"class.network::mojom::blink::P2PSocket"* }
%"class.network::mojom::blink::P2PSocket" = type { i32 (...)** }
%"class.network::mojom::blink::P2PSocketClientAsyncWaiter" = type { %"class.network::mojom::blink::P2PSocketClient"* }
%"class.network::mojom::blink::P2PSocketClient" = type { i32 (...)** }
%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting" = type { %"class.network::mojom::blink::P2PNetworkNotificationClient" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.net::NetworkInterface"*, i32, i32 }
%"struct.net::NetworkInterface" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::IPAddress", [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting" = type { %"class.network::mojom::blink::P2PSocketManager" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.network::P2PPortRange" = type { i16, i16 }
%"struct.network::P2PHostAndIPEndPoint" = type <{ %"class.std::__1::basic_string", %"class.net::IPEndPoint", [4 x i8] }>
%"class.mojo::PendingRemote.8" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.11, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.11 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.12" }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.net::IPAddress"*, i32, i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.30, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.23", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.25" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.30 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.32", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.network::mojom::blink::P2PSocketInterceptorForTesting" = type { %"class.network::mojom::blink::P2PSocket" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { i8*, i32, i32 }
%"struct.network::P2PPacketInfo" = type { %"class.net::IPEndPoint", %"struct.rtc::PacketOptions", i64 }
%"struct.rtc::PacketOptions" = type { i32, i64, %"struct.rtc::PacketTimeUpdateParams", %"struct.rtc::PacketInfo" }
%"struct.rtc::PacketTimeUpdateParams" = type { i32, %"class.std::__1::vector.43", i32, i64 }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i8*, i8*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i8* }
%"struct.rtc::PacketInfo" = type { i8, i8, i32, i32, %"class.absl::optional", i64, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.47 }
%union.anon.47 = type { i16 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting" = type { %"class.network::mojom::blink::P2PSocketClient" }
%"struct.network::P2PSendPacketMetrics" = type { i64, i32, i64 }
%"class.mojo::PendingRemote.48" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver.49" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN7network5mojom5blink28P2PNetworkNotificationClientD2Ev = comdat any

$_ZN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom5blink16P2PSocketManagerD2Ev = comdat any

$_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom5blink9P2PSocketD2Ev = comdat any

$_ZN7network5mojom5blink30P2PSocketInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom5blink15P2PSocketClientD2Ev = comdat any

$_ZN7network5mojom5blink36P2PSocketClientInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3net9IPAddressEEEmm = comdat any

@.str = private unnamed_addr constant [15 x i8] c"GetHostAddress\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"gen/services/network/public/mojom/p2p.mojom-blink-test-utils.cc\00", align 1
@_ZTVN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*)* @_ZN7network5mojom5blink28P2PNetworkNotificationClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)* @_ZN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)* @_ZN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTesting18NetworkListChangedERKN3WTF6VectorIN3net16NetworkInterfaceELj0ENS3_18PartitionAllocatorEEERKNS5_9IPAddressESD_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom5blink37P2PSocketManagerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::blink::P2PSocketManager"*)* @_ZN7network5mojom5blink16P2PSocketManagerD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)* @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, %"class.mojo::PendingRemote"*)* @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting25StartNetworkNotificationsEN4mojo13PendingRemoteINS1_28P2PNetworkNotificationClientEEE to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)* @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting14GetHostAddressERKN3WTF6StringEbN4base12OnceCallbackIFvRKNS3_6VectorIN3net9IPAddressELj0ENS3_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)* @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting12CreateSocketENS_13P2PSocketTypeERKN3net10IPEndPointERKNS_12P2PPortRangeERKNS_20P2PHostAndIPEndPointEN4mojo13PendingRemoteINS1_15P2PSocketClientEEENSE_15PendingReceiverINS1_9P2PSocketEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom5blink30P2PSocketInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::blink::P2PSocket"*)* @_ZN7network5mojom5blink9P2PSocketD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)* @_ZN7network5mojom5blink30P2PSocketInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)* @_ZN7network5mojom5blink30P2PSocketInterceptorForTesting4SendERKN3WTF6VectorIaLj0ENS3_18PartitionAllocatorEEERKNS_13P2PPacketInfoERKN3net34MutableNetworkTrafficAnnotationTagE to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*, i32, i32)* @_ZN7network5mojom5blink30P2PSocketInterceptorForTesting9SetOptionENS_15P2PSocketOptionEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom5blink36P2PSocketClientInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClient"*)* @_ZN7network5mojom5blink15P2PSocketClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)* @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)* @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting13SocketCreatedERKN3net10IPEndPointES6_ to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"struct.network::P2PSendPacketMetrics"*)* @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting12SendCompleteERKNS_20P2PSendPacketMetricsE to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)* @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting21IncomingTcpConnectionERKN3net10IPEndPointEN4mojo13PendingRemoteINS1_9P2PSocketEEENS7_15PendingReceiverINS1_15P2PSocketClientEEE to i8*), i8* bitcast (void (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)* @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting12DataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS7_18PartitionAllocatorEEEN4base9TimeTicksE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3net9IPAddressEEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = net::IPAddress]\00", align 1

@_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterC1EPNS1_28P2PNetworkNotificationClientE = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"*, %"class.network::mojom::blink::P2PNetworkNotificationClient"*), void (%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"*, %"class.network::mojom::blink::P2PNetworkNotificationClient"*)* @_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterC2EPNS1_28P2PNetworkNotificationClientE
@_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"*), void (%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"*)* @_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterD2Ev
@_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterC1EPNS1_16P2PSocketManagerE = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"*, %"class.network::mojom::blink::P2PSocketManager"*), void (%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"*, %"class.network::mojom::blink::P2PSocketManager"*)* @_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterC2EPNS1_16P2PSocketManagerE
@_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"*), void (%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"*)* @_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterD2Ev
@_ZN7network5mojom5blink20P2PSocketAsyncWaiterC1EPNS1_9P2PSocketE = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketAsyncWaiter"*, %"class.network::mojom::blink::P2PSocket"*), void (%"class.network::mojom::blink::P2PSocketAsyncWaiter"*, %"class.network::mojom::blink::P2PSocket"*)* @_ZN7network5mojom5blink20P2PSocketAsyncWaiterC2EPNS1_9P2PSocketE
@_ZN7network5mojom5blink20P2PSocketAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketAsyncWaiter"*), void (%"class.network::mojom::blink::P2PSocketAsyncWaiter"*)* @_ZN7network5mojom5blink20P2PSocketAsyncWaiterD2Ev
@_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterC1EPNS1_15P2PSocketClientE = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"*, %"class.network::mojom::blink::P2PSocketClient"*), void (%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"*, %"class.network::mojom::blink::P2PSocketClient"*)* @_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterC2EPNS1_15P2PSocketClientE
@_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"*), void (%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"*)* @_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTesting18NetworkListChangedERKN3WTF6VectorIN3net16NetworkInterfaceELj0ENS3_18PartitionAllocatorEEERKNS5_9IPAddressESD_(%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*, %"class.WTF::Vector"* dereferenceable(16), %"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)** %6, i64 3
  %8 = load %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PNetworkNotificationClient"* (%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::blink::P2PNetworkNotificationClient"* %8(%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::blink::P2PNetworkNotificationClient"* %9 to void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)***
  %11 = load void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)**, void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)*, void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)** %11, i64 2
  %13 = load void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)*, void (%"class.network::mojom::blink::P2PNetworkNotificationClient"*, %"class.WTF::Vector"*, %"class.net::IPAddress"*, %"class.net::IPAddress"*)** %12, align 8
  tail call void %13(%"class.network::mojom::blink::P2PNetworkNotificationClient"* %9, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.net::IPAddress"* dereferenceable(17) %2, %"class.net::IPAddress"* dereferenceable(17) %3) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterC2EPNS1_28P2PNetworkNotificationClientE(%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"* nocapture, %"class.network::mojom::blink::P2PNetworkNotificationClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter", %"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::blink::P2PNetworkNotificationClient"* %1, %"class.network::mojom::blink::P2PNetworkNotificationClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom5blink39P2PNetworkNotificationClientAsyncWaiterD2Ev(%"class.network::mojom::blink::P2PNetworkNotificationClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting25StartNetworkNotificationsEN4mojo13PendingRemoteINS1_28P2PNetworkNotificationClientEEE(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote", align 4
  %4 = bitcast %"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::blink::P2PSocketManager"* %7(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #10
  %11 = bitcast %"class.network::mojom::blink::P2PSocketManager"* %8 to void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)***
  %12 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)**, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)** %12, i64 2
  %14 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.mojo::PendingRemote"*)** %13, align 8
  call void %14(%"class.network::mojom::blink::P2PSocketManager"* %8, %"class.mojo::PendingRemote"* nonnull %3) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting14GetHostAddressERKN3WTF6StringEbN4base12OnceCallbackIFvRKNS3_6VectorIN3net9IPAddressELj0ENS3_18PartitionAllocatorEEEEEE(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)***
  %7 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %7, i64 5
  %9 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.network::mojom::blink::P2PSocketManager"* %9(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.network::mojom::blink::P2PSocketManager"* %10 to void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.network::mojom::blink::P2PSocketManager"* %10, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %2, %"class.base::OnceCallback"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTesting12CreateSocketENS_13P2PSocketTypeERKN3net10IPEndPointERKNS_12P2PPortRangeERKNS_20P2PHostAndIPEndPointEN4mojo13PendingRemoteINS1_15P2PSocketClientEEENSE_15PendingReceiverINS1_9P2PSocketEEE(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*, i32, %"class.net::IPEndPoint"* dereferenceable(20), %"struct.network::P2PPortRange"* dereferenceable(4), %"struct.network::P2PHostAndIPEndPoint"* dereferenceable(48), %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingRemote.8", align 4
  %9 = alloca %"class.mojo::PendingReceiver", align 8
  %10 = bitcast %"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)***
  %11 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %11, i64 5
  %13 = load %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketManager"* (%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.network::mojom::blink::P2PSocketManager"* %13(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"* %0) #10
  %15 = getelementptr inbounds %"class.mojo::PendingRemote.8", %"class.mojo::PendingRemote.8"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.mojo::PendingRemote.8", %"class.mojo::PendingRemote.8"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %15, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %16) #10
  %17 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %9, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %17, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %18) #10
  %19 = bitcast %"class.network::mojom::blink::P2PSocketManager"* %14 to void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)***
  %20 = load void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)**, void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)** %20, i64 4
  %22 = load void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, i32, %"class.net::IPEndPoint"*, %"struct.network::P2PPortRange"*, %"struct.network::P2PHostAndIPEndPoint"*, %"class.mojo::PendingRemote.8"*, %"class.mojo::PendingReceiver"*)** %21, align 8
  call void %22(%"class.network::mojom::blink::P2PSocketManager"* %14, i32 %1, %"class.net::IPEndPoint"* dereferenceable(20) %2, %"struct.network::P2PPortRange"* dereferenceable(4) %3, %"struct.network::P2PHostAndIPEndPoint"* dereferenceable(48) %4, %"class.mojo::PendingRemote.8"* nonnull %8, %"class.mojo::PendingReceiver"* nonnull %9) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %17) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %15) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterC2EPNS1_16P2PSocketManagerE(%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"* nocapture, %"class.network::mojom::blink::P2PSocketManager"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketManagerAsyncWaiter", %"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::blink::P2PSocketManager"* %1, %"class.network::mojom::blink::P2PSocketManager"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiterD2Ev(%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS3_6VectorIN3net9IPAddressELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.WTF::Vector.13"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.WTF::Vector.13"* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %10 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketManagerAsyncWaiter", %"class.network::mojom::blink::P2PSocketManagerAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.network::mojom::blink::P2PSocketManager"*, %"class.network::mojom::blink::P2PSocketManager"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.13"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS7_6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESG_EEEFvRKSF_EE7RunOnceEPNS0_13BindStateBaseESM_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS6_6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !2
  %19 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !2
  %20 = bitcast %"class.network::mojom::blink::P2PSocketManager"* %11 to void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)** %21, i64 3
  %23 = load void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::blink::P2PSocketManager"*, %"class.WTF::String"*, i1, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.network::mojom::blink::P2PSocketManager"* %11, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %2, %"class.base::OnceCallback"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 75) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink30P2PSocketInterceptorForTesting4SendERKN3WTF6VectorIaLj0ENS3_18PartitionAllocatorEEERKNS_13P2PPacketInfoERKN3net34MutableNetworkTrafficAnnotationTagE(%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*, %"class.WTF::Vector.38"* dereferenceable(16), %"struct.network::P2PPacketInfo"* dereferenceable(136), %"struct.net::MutableNetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::blink::P2PSocketInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::blink::P2PSocket"* %8(%"class.network::mojom::blink::P2PSocketInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::blink::P2PSocket"* %9 to void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)***
  %11 = load void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)**, void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)*, void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)** %11, i64 2
  %13 = load void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)*, void (%"class.network::mojom::blink::P2PSocket"*, %"class.WTF::Vector.38"*, %"struct.network::P2PPacketInfo"*, %"struct.net::MutableNetworkTrafficAnnotationTag"*)** %12, align 8
  tail call void %13(%"class.network::mojom::blink::P2PSocket"* %9, %"class.WTF::Vector.38"* dereferenceable(16) %1, %"struct.network::P2PPacketInfo"* dereferenceable(136) %2, %"struct.net::MutableNetworkTrafficAnnotationTag"* dereferenceable(4) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink30P2PSocketInterceptorForTesting9SetOptionENS_15P2PSocketOptionEi(%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.network::mojom::blink::P2PSocketInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocket"* (%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::blink::P2PSocket"* %7(%"class.network::mojom::blink::P2PSocketInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.network::mojom::blink::P2PSocket"* %8 to void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)***
  %10 = load void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)**, void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)*, void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)** %10, i64 3
  %12 = load void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)*, void (%"class.network::mojom::blink::P2PSocket"*, i32, i32)** %11, align 8
  tail call void %12(%"class.network::mojom::blink::P2PSocket"* %8, i32 %1, i32 %2) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink20P2PSocketAsyncWaiterC2EPNS1_9P2PSocketE(%"class.network::mojom::blink::P2PSocketAsyncWaiter"* nocapture, %"class.network::mojom::blink::P2PSocket"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketAsyncWaiter", %"class.network::mojom::blink::P2PSocketAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::blink::P2PSocket"* %1, %"class.network::mojom::blink::P2PSocket"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom5blink20P2PSocketAsyncWaiterD2Ev(%"class.network::mojom::blink::P2PSocketAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting13SocketCreatedERKN3net10IPEndPointES6_(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::blink::P2PSocketClient"* %7(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.network::mojom::blink::P2PSocketClient"* %8 to void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)***
  %10 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)**, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)** %10, i64 2
  %12 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)** %11, align 8
  tail call void %12(%"class.network::mojom::blink::P2PSocketClient"* %8, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.net::IPEndPoint"* dereferenceable(20) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting12SendCompleteERKNS_20P2PSendPacketMetricsE(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"struct.network::P2PSendPacketMetrics"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)***
  %4 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %4, i64 6
  %6 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.network::mojom::blink::P2PSocketClient"* %6(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.network::mojom::blink::P2PSocketClient"* %7 to void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)***
  %9 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)**, void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)** %9, i64 3
  %11 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"struct.network::P2PSendPacketMetrics"*)** %10, align 8
  tail call void %11(%"class.network::mojom::blink::P2PSocketClient"* %7, %"struct.network::P2PSendPacketMetrics"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting21IncomingTcpConnectionERKN3net10IPEndPointEN4mojo13PendingRemoteINS1_9P2PSocketEEENS7_15PendingReceiverINS1_15P2PSocketClientEEE(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::PendingRemote.48", align 4
  %6 = alloca %"class.mojo::PendingReceiver.49", align 8
  %7 = bitcast %"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)***
  %8 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %8, i64 6
  %10 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.network::mojom::blink::P2PSocketClient"* %10(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.mojo::PendingRemote.48", %"class.mojo::PendingRemote.48"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::PendingRemote.48", %"class.mojo::PendingRemote.48"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %12, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %13) #10
  %14 = getelementptr inbounds %"class.mojo::PendingReceiver.49", %"class.mojo::PendingReceiver.49"* %6, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingReceiver.49", %"class.mojo::PendingReceiver.49"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %14, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %15) #10
  %16 = bitcast %"class.network::mojom::blink::P2PSocketClient"* %11 to void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)***
  %17 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)**, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)** %17, i64 4
  %19 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.mojo::PendingRemote.48"*, %"class.mojo::PendingReceiver.49"*)** %18, align 8
  call void %19(%"class.network::mojom::blink::P2PSocketClient"* %11, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.mojo::PendingRemote.48"* nonnull %5, %"class.mojo::PendingReceiver.49"* nonnull %6) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %14) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTesting12DataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS7_18PartitionAllocatorEEEN4base9TimeTicksE(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.WTF::Vector.38"* dereferenceable(16), i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0 to %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)**, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)*, %"class.network::mojom::blink::P2PSocketClient"* (%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::blink::P2PSocketClient"* %8(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::blink::P2PSocketClient"* %9 to void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)***
  %11 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)**, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)** %11, i64 5
  %13 = load void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)*, void (%"class.network::mojom::blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.38"*, i64)** %12, align 8
  tail call void %13(%"class.network::mojom::blink::P2PSocketClient"* %9, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.WTF::Vector.38"* dereferenceable(16) %2, i64 %3) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterC2EPNS1_15P2PSocketClientE(%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"* nocapture, %"class.network::mojom::blink::P2PSocketClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::P2PSocketClientAsyncWaiter", %"class.network::mojom::blink::P2PSocketClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::blink::P2PSocketClient"* %1, %"class.network::mojom::blink::P2PSocketClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom5blink26P2PSocketClientAsyncWaiterD2Ev(%"class.network::mojom::blink::P2PSocketClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink28P2PNetworkNotificationClientD2Ev(%"class.network::mojom::blink::P2PNetworkNotificationClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink49P2PNetworkNotificationClientInterceptorForTestingD0Ev(%"class.network::mojom::blink::P2PNetworkNotificationClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink16P2PSocketManagerD2Ev(%"class.network::mojom::blink::P2PSocketManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink37P2PSocketManagerInterceptorForTestingD0Ev(%"class.network::mojom::blink::P2PSocketManagerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink9P2PSocketD2Ev(%"class.network::mojom::blink::P2PSocket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink30P2PSocketInterceptorForTestingD0Ev(%"class.network::mojom::blink::P2PSocketInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink15P2PSocketClientD2Ev(%"class.network::mojom::blink::P2PSocketClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink36P2PSocketClientInterceptorForTestingD0Ev(%"class.network::mojom::blink::P2PSocketClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS7_6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESG_EEEFvRKSF_EE7RunOnceEPNS0_13BindStateBaseESM_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.13"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.13"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.13"*, %"class.WTF::Vector.13"** %6, align 8
  %9 = tail call dereferenceable(16) %"class.WTF::Vector.13"* @_ZN3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.13"* %8, %"class.WTF::Vector.13"* dereferenceable(16) %1) #10
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.13"* @_ZN3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.13"*, %"class.WTF::Vector.13"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.13"* %1, %0
  br i1 %3, label %111, label %4, !prof !7

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %12, i64 %15
  br label %17

17:                                               ; preds = %17, %10
  %18 = phi %"class.net::IPAddress"* [ %19, %17 ], [ %16, %10 ]
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %18) #10
  %19 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %18, i64 1
  %20 = icmp eq %"class.net::IPAddress"* %19, %14
  br i1 %20, label %21, label %17

21:                                               ; preds = %17
  store i32 %8, i32* %5, align 4
  br label %81

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %8, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %22
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %26
  %29 = icmp eq i32 %6, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %31, align 8
  %33 = zext i32 %6 to i64
  %34 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %32, i64 %33
  br label %35

35:                                               ; preds = %35, %30
  %36 = phi %"class.net::IPAddress"* [ %37, %35 ], [ %32, %30 ]
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %36) #10
  %37 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %36, i64 1
  %38 = icmp eq %"class.net::IPAddress"* %37, %34
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  store i32 0, i32* %5, align 4
  br label %40

40:                                               ; preds = %39, %28
  %41 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %41, align 8
  %43 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %23, align 8
  %44 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %42, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #10
  %45 = load i32, i32* %7, align 4
  %46 = load i32, i32* %23, align 8
  br label %47

47:                                               ; preds = %26, %40
  %48 = phi i32 [ 0, %26 ], [ %46, %40 ]
  %49 = phi i32 [ %8, %26 ], [ %45, %40 ]
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %81, !prof !8

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %52, align 8
  %54 = icmp eq %"class.net::IPAddress"* %53, null
  %55 = zext i32 %49 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3net9IPAddressEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3net9IPAddressEEEPKcv, i64 0, i64 0)) #10
  br i1 %54, label %58, label %63

58:                                               ; preds = %51
  %59 = ptrtoint i8* %57 to i64
  %60 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = udiv i64 %56, 17
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %23, align 8
  br label %81

63:                                               ; preds = %51
  %64 = udiv i64 %56, 17
  %65 = ptrtoint i8* %57 to i64
  %66 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %52, align 8
  %67 = icmp ne i8* %57, null
  %68 = icmp ne %"class.net::IPAddress"* %66, null
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %76, !prof !8

70:                                               ; preds = %63
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %66, i64 0, i32 0, i32 0, i32 0, i64 0
  %74 = mul nuw nsw i64 %72, 17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 %73, i64 %74, i1 false) #10
  %75 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %52, align 8
  br label %76

76:                                               ; preds = %70, %63
  %77 = phi %"class.net::IPAddress"* [ %66, %63 ], [ %75, %70 ]
  %78 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %77, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #10
  %79 = bitcast %"class.WTF::Vector.13"* %0 to i64*
  store atomic i64 %65, i64* %79 monotonic, align 8
  %80 = trunc i64 %64 to i32
  store i32 %80, i32* %23, align 8
  br label %81

81:                                               ; preds = %76, %58, %47, %22, %21
  %82 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %1, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %82, align 8
  %84 = load i32, i32* %5, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.WTF::Vector.13", %"class.WTF::Vector.13"* %0, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %86, align 8
  %88 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %87, i64 0, i32 0, i32 0, i32 0, i64 0
  %89 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %83, i64 0, i32 0, i32 0, i32 0, i64 0
  %90 = mul nuw nsw i64 %85, 17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 %90, i1 false) #10
  %91 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %82, align 8
  %92 = load i32, i32* %5, align 4
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %91, i64 %93
  %95 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %86, align 8
  %96 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %95, i64 %93
  %97 = icmp ne %"class.net::IPAddress"* %96, null
  %98 = icmp ne %"class.net::IPAddress"* %94, null
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %109, !prof !8

100:                                              ; preds = %81
  %101 = load i32, i32* %7, align 4
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %91, i64 %102
  %104 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %96, i64 0, i32 0, i32 0, i32 0, i64 0
  %105 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %94, i64 0, i32 0, i32 0, i32 0, i64 0
  %106 = ptrtoint %"class.net::IPAddress"* %103 to i64
  %107 = ptrtoint %"class.net::IPAddress"* %94 to i64
  %108 = sub i64 %106, %107
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %105, i64 %108, i1 false) #10
  br label %109

109:                                              ; preds = %81, %100
  %110 = load i32, i32* %7, align 4
  store i32 %110, i32* %5, align 4
  br label %111

111:                                              ; preds = %2, %109
  ret %"class.WTF::Vector.13"* %0
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3net9IPAddressEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 126199205
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 126199205) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 17
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS6_6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS7_6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS7_6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSG_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS5_6VectorIN3net9IPAddressELj0ENS5_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN7network5mojom5blink27P2PSocketManagerAsyncWaiter14GetHostAddressERKN3WTF6StringEbPNS5_6VectorIN3net9IPAddressELj0ENS5_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!"branch_weights", i32 2000, i32 1}
