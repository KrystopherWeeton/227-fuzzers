; ModuleID = '../../services/viz/public/cpp/compositing/bitmap_in_shared_memory_mojom_traits.cc'
source_filename = "../../services/viz/public/cpp/compositing/bitmap_in_shared_memory_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.viz::CopyOutputResult::ScopedSkBitmap" = type { %"class.viz::CopyOutputResult"* }
%"class.viz::CopyOutputResult" = type { i32 (...)**, i8, %"class.gfx::Rect", i8, %class.SkBitmap }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::WritableSharedMemoryRegion" }
%"class.base::WritableSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.viz::mojom::internal::BitmapInSharedMemory_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i64, %"struct.mojo::internal::Pointer.8" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.8" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.11", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.9"*, %"class.mojo::ScopedHandleBase.9"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.9" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.9"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.13" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.21, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.23", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.20", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.21 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.22" }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.skia::mojom::internal::ImageInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31" }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"class.mojo_base::mojom::internal::WritableSharedMemoryRegion_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Handle_Data", [4 x i8] }
%"struct.mojo::internal::Handle_Data" = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN3viz5mojom28BitmapInSharedMemoryDataViewENS1_16CopyOutputResult14ScopedSkBitmapEE10image_infoERKS5_(%struct.SkImageInfo* noalias nocapture sret, %"class.viz::CopyOutputResult::ScopedSkBitmap"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = getelementptr inbounds %"class.viz::CopyOutputResult::ScopedSkBitmap", %"class.viz::CopyOutputResult::ScopedSkBitmap"* %1, i64 0, i32 0
  %6 = load %"class.viz::CopyOutputResult"*, %"class.viz::CopyOutputResult"** %5, align 8, !noalias !2
  %7 = icmp eq %"class.viz::CopyOutputResult"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.viz::CopyOutputResult"* %6 to %class.SkBitmap* (%"class.viz::CopyOutputResult"*)***
  %10 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)**, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*** %9, align 8
  %11 = getelementptr inbounds %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %10, i64 9
  %12 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %11, align 8
  %13 = tail call dereferenceable(56) %class.SkBitmap* %12(%"class.viz::CopyOutputResult"* nonnull %6) #6
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %3, %class.SkBitmap* dereferenceable(56) %13) #6
  br label %15

14:                                               ; preds = %2
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #6
  br label %15

15:                                               ; preds = %8, %14
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %15, %20
  store %class.SkColorSpace* %18, %class.SkColorSpace** %16, align 8
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 0, i32 1
  %26 = bitcast i32* %25 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast i32* %24 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo12StructTraitsIN3viz5mojom28BitmapInSharedMemoryDataViewENS1_16CopyOutputResult14ScopedSkBitmapEE9row_bytesERKS5_(%"class.viz::CopyOutputResult::ScopedSkBitmap"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkBitmap, align 8
  %3 = bitcast %class.SkBitmap* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 56, i1 false)
  %4 = getelementptr inbounds %"class.viz::CopyOutputResult::ScopedSkBitmap", %"class.viz::CopyOutputResult::ScopedSkBitmap"* %0, i64 0, i32 0
  %5 = load %"class.viz::CopyOutputResult"*, %"class.viz::CopyOutputResult"** %4, align 8, !noalias !5
  %6 = icmp eq %"class.viz::CopyOutputResult"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.viz::CopyOutputResult"* %5 to %class.SkBitmap* (%"class.viz::CopyOutputResult"*)***
  %9 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)**, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*** %8, align 8
  %10 = getelementptr inbounds %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %9, i64 9
  %11 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %10, align 8
  %12 = tail call dereferenceable(56) %class.SkBitmap* %11(%"class.viz::CopyOutputResult"* nonnull %5) #6
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %2, %class.SkBitmap* dereferenceable(56) %12) #6
  br label %14

13:                                               ; preds = %1
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %2) #6
  br label %14

14:                                               ; preds = %7, %13
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #6
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN3viz5mojom28BitmapInSharedMemoryDataViewENS1_16CopyOutputResult14ScopedSkBitmapEE6pixelsERKS5_(%"class.absl::optional"* noalias sret, %"class.viz::CopyOutputResult::ScopedSkBitmap"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %"class.base::WritableSharedMemoryRegion", align 8
  %5 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %6 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  %7 = getelementptr inbounds %"class.viz::CopyOutputResult::ScopedSkBitmap", %"class.viz::CopyOutputResult::ScopedSkBitmap"* %1, i64 0, i32 0
  %8 = load %"class.viz::CopyOutputResult"*, %"class.viz::CopyOutputResult"** %7, align 8, !noalias !8
  %9 = icmp eq %"class.viz::CopyOutputResult"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.viz::CopyOutputResult"* %8 to %class.SkBitmap* (%"class.viz::CopyOutputResult"*)***
  %12 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)**, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*** %11, align 8
  %13 = getelementptr inbounds %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %12, i64 9
  %14 = load %class.SkBitmap* (%"class.viz::CopyOutputResult"*)*, %class.SkBitmap* (%"class.viz::CopyOutputResult"*)** %13, align 8
  %15 = tail call dereferenceable(56) %class.SkBitmap* %14(%"class.viz::CopyOutputResult"* nonnull %8) #6
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %3, %class.SkBitmap* dereferenceable(56) %15) #6
  br label %17

16:                                               ; preds = %2
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #6
  br label %17

17:                                               ; preds = %10, %16
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %union.anon* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 64, i1 false) #6
  br label %46

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %26, i64 %28) #6
  %30 = bitcast %"class.base::WritableSharedMemoryRegion"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 64, i1 false)
  call void @_ZN4base26WritableSharedMemoryRegion6CreateEm(%"class.base::WritableSharedMemoryRegion"* nonnull sret %4, i64 %29) #6
  %31 = bitcast %"class.base::WritableSharedMemoryMapping"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %5, i64 0, i32 0, i32 1
  %33 = bitcast %"class.base::WritableSharedMemoryMapping"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZNK4base26WritableSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* nonnull sret %5, %"class.base::WritableSharedMemoryRegion"* nonnull %4) #6
  %34 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %5, i64 0, i32 0
  %35 = load i8*, i8** %32, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 64, i1 false) #6
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #6
  br label %45

41:                                               ; preds = %25
  %42 = load i8*, i8** %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %42, i64 %29, i1 false)
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #6
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %43, align 8
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base26WritableSharedMemoryRegionC1EOS0_(%"class.base::WritableSharedMemoryRegion"* %44, %"class.base::WritableSharedMemoryRegion"* nonnull dereferenceable(64) %4) #6
  br label %45

45:                                               ; preds = %37, %41
  call void @_ZN4base26WritableSharedMemoryRegionD1Ev(%"class.base::WritableSharedMemoryRegion"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #6
  br label %46

46:                                               ; preds = %45, %21
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #6
  ret void
}

declare void @_ZN4base26WritableSharedMemoryRegion6CreateEm(%"class.base::WritableSharedMemoryRegion"* sret, i64) local_unnamed_addr #3

declare void @_ZNK4base26WritableSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::WritableSharedMemoryRegion"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base26WritableSharedMemoryRegionD1Ev(%"class.base::WritableSharedMemoryRegion"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom28BitmapInSharedMemoryDataViewE8SkBitmapE4ReadES3_PS4_(%"class.viz::mojom::internal::BitmapInSharedMemory_Data"*, %"class.mojo::Message"*, %class.SkBitmap*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %8 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #6
  %11 = getelementptr inbounds %"class.viz::mojom::internal::BitmapInSharedMemory_Data", %"class.viz::mojom::internal::BitmapInSharedMemory_Data"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %3
  %16 = bitcast %"struct.mojo::internal::Pointer"* %11 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %13
  %18 = bitcast i8* %17 to %"class.skia::mojom::internal::ImageInfo_Data"*
  %19 = call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_(%"class.skia::mojom::internal::ImageInfo_Data"* nonnull %18, %"class.mojo::Message"* %1, %struct.SkImageInfo* nonnull %4) #6
  br i1 %19, label %20, label %86

20:                                               ; preds = %15
  %21 = load i32, i32* %10, align 8
  %22 = sext i32 %21 to i64
  br label %23

23:                                               ; preds = %20, %3
  %24 = phi i64 [ %22, %20 ], [ 0, %3 ]
  %25 = getelementptr inbounds %"class.viz::mojom::internal::BitmapInSharedMemory_Data", %"class.viz::mojom::internal::BitmapInSharedMemory_Data"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 1
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0
  %28 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %27) #6
  %29 = sext i32 %28 to i64
  %30 = mul nsw i64 %24, %29
  %31 = icmp ugt i64 %30, %26
  br i1 %31, label %86, label %32

32:                                               ; preds = %23
  %33 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* nonnull %27) #6
  %34 = zext i32 %33 to i64
  %35 = shl i64 -1, %34
  %36 = and i64 %35, %26
  %37 = icmp eq i64 %36, %26
  br i1 %37, label %38, label %86

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #6
  %40 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 -6148914691236517206, i64* %40, align 8
  store i8 0, i8* %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %union.anon* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 64, i1 false) #6
  %43 = getelementptr inbounds %"class.viz::mojom::internal::BitmapInSharedMemory_Data", %"class.viz::mojom::internal::BitmapInSharedMemory_Data"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.mojo::internal::Pointer.8", %"struct.mojo::internal::Pointer.8"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %38
  %48 = bitcast %"struct.mojo::internal::Pointer.8"* %43 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 %45
  %50 = bitcast i8* %49 to %"class.mojo_base::mojom::internal::WritableSharedMemoryRegion_Data"*
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base26WritableSharedMemoryRegionC1Ev(%"class.base::WritableSharedMemoryRegion"* %51) #6
  store i8 1, i8* %39, align 8
  %52 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom34WritableSharedMemoryRegionDataViewEN4base26WritableSharedMemoryRegionEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::WritableSharedMemoryRegion_Data"* nonnull %50, %"class.mojo::Message"* %1, %"class.base::WritableSharedMemoryRegion"* %51) #6
  br i1 %52, label %53, label %79

53:                                               ; preds = %38, %47
  %54 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #6
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #6
  %55 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %2, %class.SkBitmap* nonnull dereferenceable(56) %6) #6
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #6
  %56 = load i8, i8* %39, align 8, !range !11
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = load i64, i64* %25, align 1
  %60 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %2, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i64 %59) #6
  br label %79

61:                                               ; preds = %53
  %62 = bitcast %"class.base::WritableSharedMemoryMapping"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #6
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK4base26WritableSharedMemoryRegion3MapEv(%"class.base::WritableSharedMemoryMapping"* nonnull sret %7, %"class.base::WritableSharedMemoryRegion"* %63) #6
  %64 = call i8* @_Znwm(i64 48) #7
  %65 = bitcast i8* %64 to %"class.base::WritableSharedMemoryMapping"*
  call void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"* nonnull %65, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %7) #6
  %66 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %7, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %66) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #6
  %67 = getelementptr inbounds i8, i8* %64, i64 8
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = load i64, i64* %25, align 1
  %73 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %2, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i8* nonnull %69, i64 %72, void (i8*, i8*)* nonnull @_ZN12_GLOBAL__N_125DeleteSharedMemoryMappingEPvS0_, i8* nonnull %64) #6
  br i1 %73, label %79, label %74

74:                                               ; preds = %61, %71
  %75 = bitcast i8* %64 to void (%"class.base::WritableSharedMemoryMapping"*)***
  %76 = load void (%"class.base::WritableSharedMemoryMapping"*)**, void (%"class.base::WritableSharedMemoryMapping"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.base::WritableSharedMemoryMapping"*)*, void (%"class.base::WritableSharedMemoryMapping"*)** %76, i64 1
  %78 = load void (%"class.base::WritableSharedMemoryMapping"*)*, void (%"class.base::WritableSharedMemoryMapping"*)** %77, align 8
  call void %78(%"class.base::WritableSharedMemoryMapping"* nonnull %65) #6
  br label %79

79:                                               ; preds = %74, %71, %47, %58
  %80 = phi i1 [ %60, %58 ], [ false, %47 ], [ false, %74 ], [ true, %71 ]
  %81 = load i8, i8* %39, align 8, !range !11
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base26WritableSharedMemoryRegionD1Ev(%"class.base::WritableSharedMemoryRegion"* %84) #6
  store i8 0, i8* %39, align 8
  br label %85

85:                                               ; preds = %79, %83
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #6
  br label %86

86:                                               ; preds = %23, %32, %15, %85
  %87 = phi i1 [ %80, %85 ], [ false, %15 ], [ false, %32 ], [ false, %23 ]
  %88 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %89 = icmp eq %class.SkColorSpace* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = bitcast %class.SkColorSpace* %88 to i8*
  call void @_ZdlPv(i8* %95) #7
  br label %96

96:                                               ; preds = %86, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret i1 %87
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_125DeleteSharedMemoryMappingEPvS0_(i8* nocapture readnone, i8*) #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to %"class.base::WritableSharedMemoryMapping"*
  %6 = bitcast i8* %1 to void (%"class.base::WritableSharedMemoryMapping"*)***
  %7 = load void (%"class.base::WritableSharedMemoryMapping"*)**, void (%"class.base::WritableSharedMemoryMapping"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::WritableSharedMemoryMapping"*)*, void (%"class.base::WritableSharedMemoryMapping"*)** %7, i64 1
  %9 = load void (%"class.base::WritableSharedMemoryMapping"*)*, void (%"class.base::WritableSharedMemoryMapping"*)** %8, align 8
  tail call void %9(%"class.base::WritableSharedMemoryMapping"* nonnull %5) #6
  br label %10

10:                                               ; preds = %4, %2
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #3

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #3

declare void @_ZN4base26WritableSharedMemoryRegionC1EOS0_(%"class.base::WritableSharedMemoryRegion"*, %"class.base::WritableSharedMemoryRegion"* dereferenceable(64)) unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_(%"class.skia::mojom::internal::ImageInfo_Data"*, %"class.mojo::Message"*, %struct.SkImageInfo*) local_unnamed_addr #3

declare void @_ZN4base26WritableSharedMemoryRegionC1Ev(%"class.base::WritableSharedMemoryRegion"*) unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom34WritableSharedMemoryRegionDataViewEN4base26WritableSharedMemoryRegionEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::WritableSharedMemoryRegion_Data"*, %"class.mojo::Message"*, %"class.base::WritableSharedMemoryRegion"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv: argument 0"}
!7 = distinct !{!7, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3viz16CopyOutputResult14ScopedSkBitmap6bitmapEv"}
!11 = !{i8 0, i8 2}
