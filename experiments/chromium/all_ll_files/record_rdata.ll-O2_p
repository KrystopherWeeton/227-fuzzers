; ModuleID = '../../net/dns/record_rdata.cc'
source_filename = "../../net/dns/record_rdata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::SrvRecordRdata" = type { %"class.net::RecordRdata", i16, i16, i16, %"class.std::__1::basic_string" }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::ARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::AAAARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::CnameRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.net::PtrRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.net::TxtRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::basic_string"* }
%"class.net::NsecRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { i8*, i8*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.net::OptRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.53", %"class.std::__1::vector.60" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*, %"class.std::__1::__compressed_pair.55" }
%"class.net::OptRecordRdata::Opt" = type { i16, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.net::OptRecordRdata::Opt"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { i8*, i8*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i8* }
%"class.net::IntegrityRecordRdata" = type <{ %"class.net::RecordRdata", %"class.std::__1::vector.39", %"struct.std::__1::array.74", i8, [7 x i8] }>
%"struct.std::__1::array.74" = type { [32 x i8] }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::DnsRecordParser" = type { i8*, i64, i64, i64, i8* }
%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::BigEndianWriter" = type { i8*, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.std::__1::vector.39" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_ = comdat any

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPcEEE4typeES8_SA_SA_ = comdat any

$_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_ = comdat any

$_ZNSt3__1eqIhLm32EEEbRKNS_5arrayIT_XT0_EEES5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

@.str = private unnamed_addr constant [30 x i8] c"../../net/dns/record_rdata.cc\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Unrecognized RDATA type.\00", align 1
@_ZTVN3net14SrvRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SrvRecordRdata"*)* @_ZN3net14SrvRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::SrvRecordRdata"*)* @_ZN3net14SrvRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::SrvRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net14SrvRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::SrvRecordRdata"*)* @_ZNK3net14SrvRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net12ARecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ARecordRdata"*)* @_ZN3net12ARecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::ARecordRdata"*)* @_ZN3net12ARecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::ARecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net12ARecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::ARecordRdata"*)* @_ZNK3net12ARecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net15AAAARecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::AAAARecordRdata"*)* @_ZN3net15AAAARecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::AAAARecordRdata"*)* @_ZN3net15AAAARecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::AAAARecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net15AAAARecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::AAAARecordRdata"*)* @_ZNK3net15AAAARecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net16CnameRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::CnameRecordRdata"*)* @_ZN3net16CnameRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::CnameRecordRdata"*)* @_ZN3net16CnameRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::CnameRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net16CnameRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::CnameRecordRdata"*)* @_ZNK3net16CnameRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net14PtrRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::PtrRecordRdata"*)* @_ZN3net14PtrRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::PtrRecordRdata"*)* @_ZN3net14PtrRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::PtrRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net14PtrRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::PtrRecordRdata"*)* @_ZNK3net14PtrRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net14TxtRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::TxtRecordRdata"*)* @_ZN3net14TxtRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::TxtRecordRdata"*)* @_ZN3net14TxtRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::TxtRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net14TxtRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::TxtRecordRdata"*)* @_ZNK3net14TxtRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net15NsecRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::NsecRecordRdata"*)* @_ZN3net15NsecRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::NsecRecordRdata"*)* @_ZN3net15NsecRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::NsecRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net15NsecRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::NsecRecordRdata"*)* @_ZNK3net15NsecRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net14OptRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::OptRecordRdata"*)* @_ZN3net14OptRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::OptRecordRdata"*)* @_ZN3net14OptRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::OptRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net14OptRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::OptRecordRdata"*)* @_ZNK3net14OptRecordRdata4TypeEv to i8*)] }, align 8
@_ZTVN3net20IntegrityRecordRdataE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::IntegrityRecordRdata"*)* @_ZN3net20IntegrityRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::IntegrityRecordRdata"*)* @_ZN3net20IntegrityRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::IntegrityRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net20IntegrityRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::IntegrityRecordRdata"*)* @_ZNK3net20IntegrityRecordRdata4TypeEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [43 x i8] c"parsed_digest.size() == digest_copy.size()\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"writer.WriteU16(nonce_.size())\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"writer.WriteBytes(nonce_.data(), nonce_.size())\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"writer.WriteBytes(digest_.data(), digest_.size())\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"writer.remaining() == 0u\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3net14SrvRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::SrvRecordRdata"*), void (%"class.net::SrvRecordRdata"*)* @_ZN3net14SrvRecordRdataC2Ev
@_ZN3net14SrvRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::SrvRecordRdata"*), void (%"class.net::SrvRecordRdata"*)* @_ZN3net14SrvRecordRdataD2Ev
@_ZN3net12ARecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::ARecordRdata"*), void (%"class.net::ARecordRdata"*)* @_ZN3net12ARecordRdataC2Ev
@_ZN3net12ARecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::ARecordRdata"*), void (%"class.net::ARecordRdata"*)* @_ZN3net12ARecordRdataD2Ev
@_ZN3net15AAAARecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::AAAARecordRdata"*), void (%"class.net::AAAARecordRdata"*)* @_ZN3net15AAAARecordRdataC2Ev
@_ZN3net15AAAARecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::AAAARecordRdata"*), void (%"class.net::AAAARecordRdata"*)* @_ZN3net15AAAARecordRdataD2Ev
@_ZN3net16CnameRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::CnameRecordRdata"*), void (%"class.net::CnameRecordRdata"*)* @_ZN3net16CnameRecordRdataC2Ev
@_ZN3net16CnameRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::CnameRecordRdata"*), void (%"class.net::CnameRecordRdata"*)* @_ZN3net16CnameRecordRdataD2Ev
@_ZN3net14PtrRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::PtrRecordRdata"*), void (%"class.net::PtrRecordRdata"*)* @_ZN3net14PtrRecordRdataC2Ev
@_ZN3net14PtrRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::PtrRecordRdata"*), void (%"class.net::PtrRecordRdata"*)* @_ZN3net14PtrRecordRdataD2Ev
@_ZN3net14TxtRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::TxtRecordRdata"*), void (%"class.net::TxtRecordRdata"*)* @_ZN3net14TxtRecordRdataC2Ev
@_ZN3net14TxtRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::TxtRecordRdata"*), void (%"class.net::TxtRecordRdata"*)* @_ZN3net14TxtRecordRdataD2Ev
@_ZN3net15NsecRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::NsecRecordRdata"*), void (%"class.net::NsecRecordRdata"*)* @_ZN3net15NsecRecordRdataC2Ev
@_ZN3net15NsecRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::NsecRecordRdata"*), void (%"class.net::NsecRecordRdata"*)* @_ZN3net15NsecRecordRdataD2Ev
@_ZN3net14OptRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::OptRecordRdata"*), void (%"class.net::OptRecordRdata"*)* @_ZN3net14OptRecordRdataC2Ev
@_ZN3net14OptRecordRdataC1EOS0_ = hidden unnamed_addr alias void (%"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"*), void (%"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"*)* @_ZN3net14OptRecordRdataC2EOS0_
@_ZN3net14OptRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::OptRecordRdata"*), void (%"class.net::OptRecordRdata"*)* @_ZN3net14OptRecordRdataD2Ev
@_ZN3net14OptRecordRdata3OptC1EtN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.net::OptRecordRdata::Opt"*, i16, i8*, i64), void (%"class.net::OptRecordRdata::Opt"*, i16, i8*, i64)* @_ZN3net14OptRecordRdata3OptC2EtN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN3net20IntegrityRecordRdataC1ENSt3__16vectorIhNS1_9allocatorIhEEEE = hidden unnamed_addr alias void (%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"*), void (%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"*)* @_ZN3net20IntegrityRecordRdataC2ENSt3__16vectorIhNS1_9allocatorIhEEEE
@_ZN3net20IntegrityRecordRdataC1ENSt3__16vectorIhNS1_9allocatorIhEEEENS1_5arrayIhLm32EEEm = hidden unnamed_addr alias void (%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"*, %"struct.std::__1::array.74"*, i64), void (%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"*, %"struct.std::__1::array.74"*, i64)* @_ZN3net20IntegrityRecordRdataC2ENSt3__16vectorIhNS1_9allocatorIhEEEENS1_5arrayIhLm32EEEm
@_ZN3net20IntegrityRecordRdataC1EOS0_ = hidden unnamed_addr alias void (%"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"*), void (%"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"*)* @_ZN3net20IntegrityRecordRdataC2EOS0_
@_ZN3net20IntegrityRecordRdataC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"*), void (%"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"*)* @_ZN3net20IntegrityRecordRdataC2ERKS0_
@_ZN3net20IntegrityRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::IntegrityRecordRdata"*), void (%"class.net::IntegrityRecordRdata"*)* @_ZN3net20IntegrityRecordRdataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11RecordRdata12HasValidSizeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEt(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  switch i16 %1, label %24 [
    i16 33, label %4
    i16 1, label %8
    i16 28, label %12
    i16 -15, label %16
    i16 65, label %20
    i16 5, label %32
    i16 12, label %32
    i16 16, label %32
    i16 47, label %32
    i16 41, label %32
    i16 6, label %32
  ]

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 5
  br label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 4
  br label %32

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 16
  br label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, 33
  br label %32

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, 2
  br label %32

24:                                               ; preds = %2
  %25 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 30) #13
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %28) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 52, i32 -1) #13
  %29 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %29 to %"class.std::__1::basic_ostream"*
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %28) #13
  br label %32

32:                                               ; preds = %27, %24, %2, %2, %2, %2, %2, %2, %20, %16, %12, %8, %4
  %33 = phi i1 [ %23, %20 ], [ %19, %16 ], [ %15, %12 ], [ %11, %8 ], [ %7, %4 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %24 ], [ true, %27 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SrvRecordRdataC2Ev(%"class.net::SrvRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14SrvRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 1
  store i16 0, i16* %3, align 8
  %4 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 2
  store i16 0, i16* %4, align 2
  %5 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 3
  store i16 0, i16* %5, align 4
  %6 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SrvRecordRdataD2Ev(%"class.net::SrvRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14SrvRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SrvRecordRdataD0Ev(%"class.net::SrvRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14SrvRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.net::SrvRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::SrvRecordRdata"* @_ZN3net14SrvRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BigEndianReader", align 8
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 5
  br i1 %6, label %7, label %36

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 40) #14
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14SrvRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i16*
  store i16 0, i16* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 10
  %13 = bitcast i8* %12 to i16*
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds i8, i8* %8, i64 12
  %15 = bitcast i8* %14 to i16*
  store i16 0, i16* %15, align 4
  %16 = getelementptr inbounds i8, i8* %8, i64 16
  %17 = bitcast i8* %16 to %"class.std::__1::basic_string"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %21 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load i8*, i8** %20, align 8
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %3, i8* %22, i64 %5) #13
  %23 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* %11) #13
  %24 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* %13) #13
  %25 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* %15) #13
  %26 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %0, i64 6, i64 -1)
  %27 = extractvalue { i8*, i64 } %26, 0
  %28 = call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %1, i8* %27, %"class.std::__1::basic_string"* %17) #13
  %29 = icmp eq i32 %28, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  br i1 %29, label %30, label %36

30:                                               ; preds = %7
  %31 = bitcast i8* %8 to %"class.net::SrvRecordRdata"*
  %32 = bitcast i8* %8 to void (%"class.net::SrvRecordRdata"*)***
  %33 = load void (%"class.net::SrvRecordRdata"*)**, void (%"class.net::SrvRecordRdata"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::SrvRecordRdata"*)*, void (%"class.net::SrvRecordRdata"*)** %33, i64 1
  %35 = load void (%"class.net::SrvRecordRdata"*)*, void (%"class.net::SrvRecordRdata"*)** %34, align 8
  call void %35(%"class.net::SrvRecordRdata"* nonnull %31) #13
  br label %36

36:                                               ; preds = %7, %30, %2
  %37 = phi i64 [ 0, %2 ], [ 0, %30 ], [ %18, %7 ]
  %38 = inttoptr i64 %37 to %"class.net::SrvRecordRdata"*
  ret %"class.net::SrvRecordRdata"* %38
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"*, i16*) local_unnamed_addr #2

declare i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"*, i8*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net14SrvRecordRdata4TypeEv(%"class.net::SrvRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14SrvRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::SrvRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::SrvRecordRdata"* %0 to i16 (%"class.net::SrvRecordRdata"*)***
  %9 = load i16 (%"class.net::SrvRecordRdata"*)**, i16 (%"class.net::SrvRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::SrvRecordRdata"*)*, i16 (%"class.net::SrvRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::SrvRecordRdata"*)*, i16 (%"class.net::SrvRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::SrvRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %87

14:                                               ; preds = %2
  %15 = bitcast %"class.net::RecordRdata"* %1 to %"class.net::SrvRecordRdata"*
  %16 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 2
  %17 = load i16, i16* %16, align 2
  %18 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %15, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %17, %19
  br i1 %20, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 3
  %23 = load i16, i16* %22, align 4
  %24 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %15, i64 0, i32 3
  %25 = load i16, i16* %24, align 4
  %26 = icmp eq i16 %23, %25
  br i1 %26, label %27, label %87

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 1
  %29 = load i16, i16* %28, align 8
  %30 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %31 = bitcast %"class.net::RecordRdata"* %30 to i16*
  %32 = load i16, i16* %31, align 8
  %33 = icmp eq i16 %29, %32
  br i1 %33, label %34, label %87

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %39 to i64
  %44 = select i1 %40, i64 %42, i64 %43
  %45 = bitcast %"class.net::RecordRdata"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 3
  %50 = bitcast %"class.net::RecordRdata"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %47 to i64
  %53 = select i1 %48, i64 %51, i64 %52
  %54 = icmp eq i64 %44, %53
  br i1 %54, label %55, label %87

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %59 = select i1 %40, i8* %57, i8* %58
  %60 = bitcast %"class.net::RecordRdata"* %36 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.net::RecordRdata"* %36 to i8*
  %63 = select i1 %48, i8* %61, i8* %62
  %64 = icmp eq i64 %44, 0
  br i1 %40, label %71, label %65

65:                                               ; preds = %55
  br i1 %64, label %87, label %66

66:                                               ; preds = %65
  %67 = ptrtoint i8* %57 to i64
  %68 = trunc i64 %67 to i8
  %69 = load i8, i8* %63, align 1
  %70 = icmp eq i8 %69, %68
  br i1 %70, label %75, label %87

71:                                               ; preds = %55
  br i1 %64, label %87, label %72

72:                                               ; preds = %71
  %73 = tail call i32 @bcmp(i8* %59, i8* %63, i64 %44) #13
  %74 = icmp eq i32 %73, 0
  br label %87

75:                                               ; preds = %66, %82
  %76 = phi i64 [ %79, %82 ], [ %43, %66 ]
  %77 = phi i8* [ %80, %82 ], [ %58, %66 ]
  %78 = phi i8* [ %83, %82 ], [ %63, %66 ]
  %79 = add i64 %76, -1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %80, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %75, label %87

87:                                               ; preds = %82, %75, %66, %72, %71, %65, %34, %14, %21, %27, %2
  %88 = phi i1 [ false, %2 ], [ false, %27 ], [ false, %21 ], [ false, %14 ], [ false, %34 ], [ %74, %72 ], [ true, %71 ], [ true, %65 ], [ false, %66 ], [ true, %75 ], [ false, %82 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12ARecordRdataC2Ev(%"class.net::ARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12ARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %3) #13
  ret void
}

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12ARecordRdataD2Ev(%"class.net::ARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12ARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12ARecordRdataD0Ev(%"class.net::ARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12ARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #13
  %4 = bitcast %"class.net::ARecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ARecordRdata"* @_ZN3net12ARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.net::DnsRecordParser"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::IPAddress", align 1
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 32) #14
  %9 = bitcast i8* %8 to %"class.net::ARecordRdata"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12ARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %12) #13
  %13 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i64, i64* %4, align 8
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %3, i8* %15, i64 %16) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 1 %13, i64 17, i1 false)
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %13) #13
  br label %17

17:                                               ; preds = %2, %7
  %18 = phi %"class.net::ARecordRdata"* [ %9, %7 ], [ null, %2 ]
  ret %"class.net::ARecordRdata"* %18
}

declare void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net12ARecordRdata4TypeEv(%"class.net::ARecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net12ARecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::ARecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::ARecordRdata"* %0 to i16 (%"class.net::ARecordRdata"*)***
  %9 = load i16 (%"class.net::ARecordRdata"*)**, i16 (%"class.net::ARecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::ARecordRdata"*)*, i16 (%"class.net::ARecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::ARecordRdata"*)*, i16 (%"class.net::ARecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::ARecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = bitcast %"class.net::RecordRdata"* %16 to %"class.net::IPAddress"*
  %18 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %15, %"class.net::IPAddress"* dereferenceable(17) %17) #13
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi i1 [ %18, %14 ], [ false, %2 ]
  ret i1 %20
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15AAAARecordRdataC2Ev(%"class.net::AAAARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15AAAARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15AAAARecordRdataD2Ev(%"class.net::AAAARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15AAAARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15AAAARecordRdataD0Ev(%"class.net::AAAARecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15AAAARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %3) #13
  %4 = bitcast %"class.net::AAAARecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AAAARecordRdata"* @_ZN3net15AAAARecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.net::DnsRecordParser"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::IPAddress", align 1
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 16
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 32) #14
  %9 = bitcast i8* %8 to %"class.net::AAAARecordRdata"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15AAAARecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %12) #13
  %13 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i64, i64* %4, align 8
  call void @_ZN3net9IPAddressC1EPKhm(%"class.net::IPAddress"* nonnull %3, i8* %15, i64 %16) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 1 %13, i64 17, i1 false)
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %13) #13
  br label %17

17:                                               ; preds = %2, %7
  %18 = phi %"class.net::AAAARecordRdata"* [ %9, %7 ], [ null, %2 ]
  ret %"class.net::AAAARecordRdata"* %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net15AAAARecordRdata4TypeEv(%"class.net::AAAARecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15AAAARecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::AAAARecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::AAAARecordRdata"* %0 to i16 (%"class.net::AAAARecordRdata"*)***
  %9 = load i16 (%"class.net::AAAARecordRdata"*)**, i16 (%"class.net::AAAARecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::AAAARecordRdata"*)*, i16 (%"class.net::AAAARecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::AAAARecordRdata"*)*, i16 (%"class.net::AAAARecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::AAAARecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = bitcast %"class.net::RecordRdata"* %16 to %"class.net::IPAddress"*
  %18 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %15, %"class.net::IPAddress"* dereferenceable(17) %17) #13
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi i1 [ %18, %14 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CnameRecordRdataC2Ev(%"class.net::CnameRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net16CnameRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CnameRecordRdataD2Ev(%"class.net::CnameRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net16CnameRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CnameRecordRdataD0Ev(%"class.net::CnameRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net16CnameRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.net::CnameRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CnameRecordRdata"* @_ZN3net16CnameRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #14
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net16CnameRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.std::__1::basic_string"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %7 = ptrtoint i8* %3 to i64
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %1, i8* %9, %"class.std::__1::basic_string"* %6) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = bitcast i8* %3 to %"class.net::CnameRecordRdata"*
  %14 = bitcast i8* %3 to void (%"class.net::CnameRecordRdata"*)***
  %15 = load void (%"class.net::CnameRecordRdata"*)**, void (%"class.net::CnameRecordRdata"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::CnameRecordRdata"*)*, void (%"class.net::CnameRecordRdata"*)** %15, i64 1
  %17 = load void (%"class.net::CnameRecordRdata"*)*, void (%"class.net::CnameRecordRdata"*)** %16, align 8
  tail call void %17(%"class.net::CnameRecordRdata"* nonnull %13) #13
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i64 [ 0, %12 ], [ %7, %2 ]
  %20 = inttoptr i64 %19 to %"class.net::CnameRecordRdata"*
  ret %"class.net::CnameRecordRdata"* %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net16CnameRecordRdata4TypeEv(%"class.net::CnameRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net16CnameRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::CnameRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::CnameRecordRdata"* %0 to i16 (%"class.net::CnameRecordRdata"*)***
  %9 = load i16 (%"class.net::CnameRecordRdata"*)**, i16 (%"class.net::CnameRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::CnameRecordRdata"*)*, i16 (%"class.net::CnameRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::CnameRecordRdata"*)*, i16 (%"class.net::CnameRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::CnameRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %67

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::CnameRecordRdata", %"class.net::CnameRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.net::RecordRdata"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %30 = bitcast %"class.net::RecordRdata"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i64 %31, i64 %32
  %34 = icmp eq i64 %24, %33
  br i1 %34, label %35, label %67

35:                                               ; preds = %14
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %39 = select i1 %20, i8* %37, i8* %38
  %40 = bitcast %"class.net::RecordRdata"* %16 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.net::RecordRdata"* %16 to i8*
  %43 = select i1 %28, i8* %41, i8* %42
  %44 = icmp eq i64 %24, 0
  br i1 %20, label %51, label %45

45:                                               ; preds = %35
  br i1 %44, label %67, label %46

46:                                               ; preds = %45
  %47 = ptrtoint i8* %37 to i64
  %48 = trunc i64 %47 to i8
  %49 = load i8, i8* %43, align 1
  %50 = icmp eq i8 %49, %48
  br i1 %50, label %55, label %67

51:                                               ; preds = %35
  br i1 %44, label %67, label %52

52:                                               ; preds = %51
  %53 = tail call i32 @bcmp(i8* %39, i8* %43, i64 %24) #13
  %54 = icmp eq i32 %53, 0
  br label %67

55:                                               ; preds = %46, %62
  %56 = phi i64 [ %59, %62 ], [ %23, %46 ]
  %57 = phi i8* [ %60, %62 ], [ %38, %46 ]
  %58 = phi i8* [ %63, %62 ], [ %43, %46 ]
  %59 = add i64 %56, -1
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  %64 = load i8, i8* %60, align 1
  %65 = load i8, i8* %63, align 1
  %66 = icmp eq i8 %64, %65
  br i1 %66, label %55, label %67

67:                                               ; preds = %62, %55, %46, %52, %51, %45, %14, %2
  %68 = phi i1 [ false, %2 ], [ false, %14 ], [ %54, %52 ], [ true, %51 ], [ true, %45 ], [ false, %46 ], [ true, %55 ], [ false, %62 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14PtrRecordRdataC2Ev(%"class.net::PtrRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14PtrRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14PtrRecordRdataD2Ev(%"class.net::PtrRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14PtrRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14PtrRecordRdataD0Ev(%"class.net::PtrRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14PtrRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.net::PtrRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::PtrRecordRdata"* @_ZN3net14PtrRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #14
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14PtrRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.std::__1::basic_string"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %7 = ptrtoint i8* %3 to i64
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %1, i8* %9, %"class.std::__1::basic_string"* %6) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = bitcast i8* %3 to %"class.net::PtrRecordRdata"*
  %14 = bitcast i8* %3 to void (%"class.net::PtrRecordRdata"*)***
  %15 = load void (%"class.net::PtrRecordRdata"*)**, void (%"class.net::PtrRecordRdata"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::PtrRecordRdata"*)*, void (%"class.net::PtrRecordRdata"*)** %15, i64 1
  %17 = load void (%"class.net::PtrRecordRdata"*)*, void (%"class.net::PtrRecordRdata"*)** %16, align 8
  tail call void %17(%"class.net::PtrRecordRdata"* nonnull %13) #13
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i64 [ 0, %12 ], [ %7, %2 ]
  %20 = inttoptr i64 %19 to %"class.net::PtrRecordRdata"*
  ret %"class.net::PtrRecordRdata"* %20
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net14PtrRecordRdata4TypeEv(%"class.net::PtrRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14PtrRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::PtrRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::PtrRecordRdata"* %0 to i16 (%"class.net::PtrRecordRdata"*)***
  %9 = load i16 (%"class.net::PtrRecordRdata"*)**, i16 (%"class.net::PtrRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::PtrRecordRdata"*)*, i16 (%"class.net::PtrRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::PtrRecordRdata"*)*, i16 (%"class.net::PtrRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::PtrRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %67

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.net::RecordRdata"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %30 = bitcast %"class.net::RecordRdata"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i64 %31, i64 %32
  %34 = icmp eq i64 %24, %33
  br i1 %34, label %35, label %67

35:                                               ; preds = %14
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %39 = select i1 %20, i8* %37, i8* %38
  %40 = bitcast %"class.net::RecordRdata"* %16 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.net::RecordRdata"* %16 to i8*
  %43 = select i1 %28, i8* %41, i8* %42
  %44 = icmp eq i64 %24, 0
  br i1 %20, label %51, label %45

45:                                               ; preds = %35
  br i1 %44, label %67, label %46

46:                                               ; preds = %45
  %47 = ptrtoint i8* %37 to i64
  %48 = trunc i64 %47 to i8
  %49 = load i8, i8* %43, align 1
  %50 = icmp eq i8 %49, %48
  br i1 %50, label %55, label %67

51:                                               ; preds = %35
  br i1 %44, label %67, label %52

52:                                               ; preds = %51
  %53 = tail call i32 @bcmp(i8* %39, i8* %43, i64 %24) #13
  %54 = icmp eq i32 %53, 0
  br label %67

55:                                               ; preds = %46, %62
  %56 = phi i64 [ %59, %62 ], [ %23, %46 ]
  %57 = phi i8* [ %60, %62 ], [ %38, %46 ]
  %58 = phi i8* [ %63, %62 ], [ %43, %46 ]
  %59 = add i64 %56, -1
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  %64 = load i8, i8* %60, align 1
  %65 = load i8, i8* %63, align 1
  %66 = icmp eq i8 %64, %65
  br i1 %66, label %55, label %67

67:                                               ; preds = %62, %55, %46, %52, %51, %45, %14, %2
  %68 = phi i1 [ false, %2 ], [ false, %14 ], [ %54, %52 ], [ true, %51 ], [ true, %45 ], [ false, %46 ], [ true, %55 ], [ false, %62 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14TxtRecordRdataC2Ev(%"class.net::TxtRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14TxtRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14TxtRecordRdataD2Ev(%"class.net::TxtRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14TxtRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14TxtRecordRdataD0Ev(%"class.net::TxtRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14TxtRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.net::TxtRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::TxtRecordRdata"* @_ZN3net14TxtRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 32) #14
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14TxtRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.std::__1::vector"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %8 = ptrtoint i8* %4 to i64
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %77, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds i8, i8* %4, i64 16
  %20 = bitcast i8* %19 to %"class.std::__1::basic_string"**
  %21 = getelementptr inbounds i8, i8* %4, i64 24
  %22 = bitcast i8* %21 to %"class.std::__1::basic_string"**
  %23 = bitcast i8* %19 to i64*
  br label %24

24:                                               ; preds = %12, %67
  %25 = phi i64 [ 0, %12 ], [ %68, %67 ]
  %26 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %0, i64 %25) #13
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = add i64 %25, %28
  %30 = load i64, i64* %9, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %71

32:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %33 = add nuw i64 %25, 1
  %34 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %0, i64 %33, i64 %28)
  %35 = extractvalue { i8*, i64 } %34, 0
  %36 = extractvalue { i8*, i64 } %34, 1
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #15
  unreachable

40:                                               ; preds = %32
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = call i8* @_Znwm(i64 %44) #14
  store i8* %45, i8** %14, align 8, !alias.scope !2
  %46 = or i64 %44, -9223372036854775808
  store i64 %46, i64* %15, align 8, !alias.scope !2
  store i64 %36, i64* %16, align 8, !alias.scope !2
  br label %50

47:                                               ; preds = %40
  %48 = trunc i64 %36 to i8
  store i8 %48, i8* %18, align 1, !alias.scope !2
  %49 = icmp eq i64 %36, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47, %42
  %51 = phi i8* [ %45, %42 ], [ %13, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %51, i8* align 1 %35, i64 %36, i1 false) #13
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i8* [ %13, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %36
  store i8 0, i8* %54, align 1
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %57 = icmp ult %"class.std::__1::basic_string"* %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %13, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #13
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %61 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %61, i64* %23, align 8
  br label %67

62:                                               ; preds = %52
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #13
  %63 = load i8, i8* %18, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %58, %65, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %68 = add i64 %33, %28
  %69 = load i64, i64* %9, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %24, label %77

71:                                               ; preds = %24
  %72 = bitcast i8* %4 to %"class.net::TxtRecordRdata"*
  %73 = bitcast i8* %4 to void (%"class.net::TxtRecordRdata"*)***
  %74 = load void (%"class.net::TxtRecordRdata"*)**, void (%"class.net::TxtRecordRdata"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.net::TxtRecordRdata"*)*, void (%"class.net::TxtRecordRdata"*)** %74, i64 1
  %76 = load void (%"class.net::TxtRecordRdata"*)*, void (%"class.net::TxtRecordRdata"*)** %75, align 8
  call void %76(%"class.net::TxtRecordRdata"* nonnull %72) #13
  br label %77

77:                                               ; preds = %67, %2, %71
  %78 = phi i64 [ 0, %71 ], [ %8, %2 ], [ %8, %67 ]
  %79 = inttoptr i64 %78 to %"class.net::TxtRecordRdata"*
  ret %"class.net::TxtRecordRdata"* %79
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net14TxtRecordRdata4TypeEv(%"class.net::TxtRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14TxtRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::TxtRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::TxtRecordRdata"* %0 to i16 (%"class.net::TxtRecordRdata"*)***
  %9 = load i16 (%"class.net::TxtRecordRdata"*)**, i16 (%"class.net::TxtRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::TxtRecordRdata"*)*, i16 (%"class.net::TxtRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::TxtRecordRdata"*)*, i16 (%"class.net::TxtRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::TxtRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %92

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %24 = bitcast %"class.net::RecordRdata"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.net::RecordRdata"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to %"class.std::__1::basic_string"*
  %31 = inttoptr i64 %19 to %"class.std::__1::basic_string"*
  br i1 %29, label %32, label %92

32:                                               ; preds = %14
  %33 = icmp eq %"class.std::__1::basic_string"* %30, %31
  br i1 %33, label %92, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to %"class.std::__1::basic_string"*
  br label %36

36:                                               ; preds = %34, %88
  %37 = phi %"class.std::__1::basic_string"* [ %90, %88 ], [ %35, %34 ]
  %38 = phi %"class.std::__1::basic_string"* [ %89, %88 ], [ %30, %34 ]
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %92

56:                                               ; preds = %36
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %60 = select i1 %42, i8* %58, i8* %59
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %64 = select i1 %50, i8* %62, i8* %63
  %65 = icmp eq i64 %46, 0
  br i1 %42, label %72, label %66

66:                                               ; preds = %56
  br i1 %65, label %88, label %67

67:                                               ; preds = %66
  %68 = ptrtoint i8* %58 to i64
  %69 = trunc i64 %68 to i8
  %70 = load i8, i8* %64, align 1
  %71 = icmp eq i8 %70, %69
  br i1 %71, label %73, label %92

72:                                               ; preds = %56
  br i1 %65, label %88, label %85

73:                                               ; preds = %67, %80
  %74 = phi i64 [ %77, %80 ], [ %45, %67 ]
  %75 = phi i8* [ %78, %80 ], [ %59, %67 ]
  %76 = phi i8* [ %81, %80 ], [ %64, %67 ]
  %77 = add i64 %74, -1
  %78 = getelementptr inbounds i8, i8* %75, i64 1
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %76, i64 1
  %82 = load i8, i8* %78, align 1
  %83 = load i8, i8* %81, align 1
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %73, label %92

85:                                               ; preds = %72
  %86 = tail call i32 @bcmp(i8* %60, i8* %64, i64 %46) #13
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %73, %85, %72, %66
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %91 = icmp eq %"class.std::__1::basic_string"* %89, %31
  br i1 %91, label %92, label %36

92:                                               ; preds = %88, %85, %67, %36, %80, %32, %14, %2
  %93 = phi i1 [ false, %2 ], [ false, %14 ], [ true, %32 ], [ false, %80 ], [ true, %88 ], [ false, %36 ], [ false, %85 ], [ false, %67 ]
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15NsecRecordRdataC2Ev(%"class.net::NsecRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.39"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15NsecRecordRdataD2Ev(%"class.net::NsecRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15NsecRecordRdataD0Ev(%"class.net::NsecRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.net::NsecRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::NsecRecordRdata"* @_ZN3net15NsecRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::DnsRecordParser"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #14
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to %"class.std::__1::vector.39"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = tail call i32 @_ZNK3net15DnsRecordParser8ReadNameEPKvPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::DnsRecordParser"* %1, i8* %8, %"class.std::__1::basic_string"* null) #13
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i32 %9, 2
  %15 = zext i32 %14 to i64
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %44, label %17

17:                                               ; preds = %11
  %18 = load i8*, i8** %7, align 8
  %19 = zext i32 %9 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %17
  %24 = getelementptr inbounds i8, i8* %20, i64 1
  %25 = load i8, i8* %24, align 1
  %26 = add i8 %25, -1
  %27 = icmp ugt i8 %26, 31
  br i1 %27, label %44, label %28

28:                                               ; preds = %23
  %29 = tail call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %0, i64 %15, i64 -1)
  %30 = extractvalue { i8*, i64 } %29, 0
  %31 = extractvalue { i8*, i64 } %29, 1
  %32 = load i8, i8* %24, align 1
  %33 = zext i8 %32 to i64
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = bitcast i8* %3 to void (%"class.net::NsecRecordRdata"*)***
  %37 = load void (%"class.net::NsecRecordRdata"*)**, void (%"class.net::NsecRecordRdata"*)*** %36, align 8
  br label %44

38:                                               ; preds = %28
  %39 = bitcast i8* %5 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %30, i64 %31
  %42 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.39"* %6, i8* %40, i8* %30, i8* %41)
  %43 = bitcast i8* %3 to %"class.net::NsecRecordRdata"*
  br label %49

44:                                               ; preds = %35, %11, %2, %17, %23
  %45 = phi void (%"class.net::NsecRecordRdata"*)** [ %37, %35 ], [ bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to void (%"class.net::NsecRecordRdata"*)**), %11 ], [ bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to void (%"class.net::NsecRecordRdata"*)**), %2 ], [ bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to void (%"class.net::NsecRecordRdata"*)**), %17 ], [ bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net15NsecRecordRdataE, i64 0, inrange i32 0, i64 2) to void (%"class.net::NsecRecordRdata"*)**), %23 ]
  %46 = bitcast i8* %3 to %"class.net::NsecRecordRdata"*
  %47 = getelementptr inbounds void (%"class.net::NsecRecordRdata"*)*, void (%"class.net::NsecRecordRdata"*)** %45, i64 1
  %48 = load void (%"class.net::NsecRecordRdata"*)*, void (%"class.net::NsecRecordRdata"*)** %47, align 8
  tail call void %48(%"class.net::NsecRecordRdata"* nonnull %46) #13
  br label %49

49:                                               ; preds = %38, %44
  %50 = phi %"class.net::NsecRecordRdata"* [ %43, %38 ], [ null, %44 ]
  ret %"class.net::NsecRecordRdata"* %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.39"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !5
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !5
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !8, !noalias !5
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !8, !noalias !5
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !5
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !5
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !8, !noalias !5
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !8, !noalias !5
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !5
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !5
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !8, !noalias !5
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !8, !noalias !5
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !5
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !5
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !8, !noalias !5
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !8, !noalias !5
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !10

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !5
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !5
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !8, !noalias !5
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !8, !noalias !5
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !12

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !14

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !15
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !15
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !18, !noalias !15
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !18, !noalias !15
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !15
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !15
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !18, !noalias !15
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !18, !noalias !15
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !15
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !15
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !18, !noalias !15
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !18, !noalias !15
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !15
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !15
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !18, !noalias !15
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !18, !noalias !15
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !20

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !15
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !15
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !18, !noalias !15
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !18, !noalias !15
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !21

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #13
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !22

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !23
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !23
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !26, !noalias !23
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !26, !noalias !23
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !23
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !23
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !26, !noalias !23
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !26, !noalias !23
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !23
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !23
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !26, !noalias !23
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !26, !noalias !23
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !23
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !23
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !26, !noalias !23
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !26, !noalias !23
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !28

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !23
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !23
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !26, !noalias !23
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !26, !noalias !23
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !29

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !30

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #15
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #14
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !31
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !31
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !34, !noalias !31
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !34, !noalias !31
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !31
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !31
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !34, !noalias !31
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !34, !noalias !31
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !31
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !31
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !34, !noalias !31
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !34, !noalias !31
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !31
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !31
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !34, !noalias !31
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !34, !noalias !31
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !36

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !31
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !31
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !34, !noalias !31
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !34, !noalias !31
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !37

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !38

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #13
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !39
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !39
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !42, !noalias !39
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !42, !noalias !39
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !39
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !39
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !42, !noalias !39
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !42, !noalias !39
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !39
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !39
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !42, !noalias !39
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !42, !noalias !39
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !39
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !39
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !42, !noalias !39
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !42, !noalias !39
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !44

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !39
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !39
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !42, !noalias !39
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !42, !noalias !39
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !45

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !46

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #14
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net15NsecRecordRdata4TypeEv(%"class.net::NsecRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15NsecRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::NsecRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::NsecRecordRdata"* %0 to i16 (%"class.net::NsecRecordRdata"*)***
  %9 = load i16 (%"class.net::NsecRecordRdata"*)**, i16 (%"class.net::NsecRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::NsecRecordRdata"*)*, i16 (%"class.net::NsecRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::NsecRecordRdata"*)*, i16 (%"class.net::NsecRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::NsecRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %46

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %17 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.39"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %24 = bitcast %"class.net::RecordRdata"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.net::RecordRdata"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to i8*
  %31 = inttoptr i64 %19 to i8*
  br i1 %29, label %32, label %46

32:                                               ; preds = %14
  %33 = icmp eq i8* %30, %31
  br i1 %33, label %46, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to i8*
  br label %36

36:                                               ; preds = %34, %42
  %37 = phi i8* [ %44, %42 ], [ %35, %34 ]
  %38 = phi i8* [ %43, %42 ], [ %30, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %31
  br i1 %45, label %46, label %36

46:                                               ; preds = %42, %36, %32, %14, %2
  %47 = phi i1 [ false, %2 ], [ false, %14 ], [ true, %32 ], [ false, %36 ], [ true, %42 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net15NsecRecordRdata6GetBitEj(%"class.net::NsecRecordRdata"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = lshr i32 %1, 3
  %4 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::NsecRecordRdata", %"class.net::NsecRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.39"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = add nuw nsw i32 %3, 1
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %25, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %9 to i8*
  %16 = and i32 %1, 7
  %17 = xor i32 %16, 7
  %18 = zext i32 %3 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl i32 1, %17
  %23 = and i32 %22, %21
  %24 = icmp ne i32 %23, 0
  br label %25

25:                                               ; preds = %2, %14
  %26 = phi i1 [ %24, %14 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdataC2Ev(%"class.net::OptRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14OptRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.53"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdataC2EOS0_(%"class.net::OptRecordRdata"* nocapture, %"class.net::OptRecordRdata"* nocapture dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14OptRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.53"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %7 = bitcast %"class.std::__1::vector.53"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.53"* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.net::OptRecordRdata::Opt"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.net::OptRecordRdata::Opt"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::OptRecordRdata::Opt"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.net::OptRecordRdata::Opt"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.std::__1::vector.53"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  %21 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2
  %23 = bitcast %"class.std::__1::vector.60"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #13
  %24 = bitcast %"class.std::__1::vector.60"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.60"* %21 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i8** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.std::__1::vector.60"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdataD2Ev(%"class.net::OptRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14OptRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %12, align 8
  %14 = icmp eq %"class.net::OptRecordRdata::Opt"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.net::OptRecordRdata::Opt"* %13 to i8*
  %17 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %17, align 8
  %19 = icmp eq %"class.net::OptRecordRdata::Opt"* %18, %13
  br i1 %19, label %36, label %20

20:                                               ; preds = %15, %31
  %21 = phi %"class.net::OptRecordRdata::Opt"* [ %22, %31 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %21, i64 -1
  %23 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %21, i64 -1, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %28, %20
  %32 = icmp eq %"class.net::OptRecordRdata::Opt"* %22, %13
  br i1 %32, label %33, label %20

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.53"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  store %"class.net::OptRecordRdata::Opt"* %13, %"class.net::OptRecordRdata::Opt"** %17, align 8
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %10, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdataD0Ev(%"class.net::OptRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14OptRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %12, align 8
  %14 = icmp eq %"class.net::OptRecordRdata::Opt"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.net::OptRecordRdata::Opt"* %13 to i8*
  %17 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %17, align 8
  %19 = icmp eq %"class.net::OptRecordRdata::Opt"* %18, %13
  br i1 %19, label %36, label %20

20:                                               ; preds = %15, %31
  %21 = phi %"class.net::OptRecordRdata::Opt"* [ %22, %31 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %21, i64 -1
  %23 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %21, i64 -1, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %28, %20
  %32 = icmp eq %"class.net::OptRecordRdata::Opt"* %22, %13
  br i1 %32, label %33, label %20

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.53"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  store %"class.net::OptRecordRdata::Opt"* %13, %"class.net::OptRecordRdata::Opt"** %17, align 8
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %10, %36
  %39 = bitcast %"class.net::OptRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.net::OptRecordRdata"* @_ZN3net14OptRecordRdataaSEOS0_(%"class.net::OptRecordRdata"* returned, %"class.net::OptRecordRdata"* nocapture dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %5, align 8
  %7 = icmp eq %"class.net::OptRecordRdata::Opt"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.net::OptRecordRdata::Opt"* %6 to i8*
  %10 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %10, align 8
  %12 = icmp eq %"class.net::OptRecordRdata::Opt"* %11, %6
  br i1 %12, label %29, label %13

13:                                               ; preds = %8, %24
  %14 = phi %"class.net::OptRecordRdata::Opt"* [ %15, %24 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %14, i64 -1
  %16 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %14, i64 -1, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %21, %13
  %25 = icmp eq %"class.net::OptRecordRdata::Opt"* %15, %6
  br i1 %25, label %26, label %13

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.53"* %3 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %8
  %30 = phi i8* [ %28, %26 ], [ %9, %8 ]
  store %"class.net::OptRecordRdata::Opt"* %6, %"class.net::OptRecordRdata::Opt"** %10, align 8
  tail call void @_ZdlPv(i8* %30) #14
  %31 = bitcast %"class.std::__1::vector.53"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #13
  br label %32

32:                                               ; preds = %2, %29
  %33 = bitcast %"class.std::__1::vector.53"* %4 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.53"* %3 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %"class.net::OptRecordRdata::Opt"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %40 = bitcast %"class.net::OptRecordRdata::Opt"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.net::OptRecordRdata::Opt"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.net::OptRecordRdata::Opt"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.53"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  %47 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2
  %49 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %47, i64 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %32
  %53 = ptrtoint i8* %50 to i64
  %54 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %55 = bitcast i8** %54 to i64*
  store i64 %53, i64* %55, align 8
  tail call void @_ZdlPv(i8* nonnull %50) #14
  %56 = bitcast %"class.std::__1::vector.60"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #13
  br label %57

57:                                               ; preds = %32, %52
  %58 = bitcast %"class.std::__1::vector.60"* %48 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.60"* %47 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 1
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %65 = bitcast i8** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast i8** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast %"class.std::__1::vector.60"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #13
  ret %"class.net::OptRecordRdata"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::OptRecordRdata"* @_ZN3net14OptRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS_15DnsRecordParserE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.net::DnsRecordParser"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BigEndianReader", align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.net::OptRecordRdata::Opt", align 8
  %8 = tail call i8* @_Znwm(i64 56) #14
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net14OptRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to %"class.std::__1::vector.53"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = bitcast i8* %12 to %"class.std::__1::vector.60"*
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.60"* %13, i8* %15, i8* %18)
  %19 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %3, i64 0, i32 1
  %21 = bitcast %"class.base::BigEndianReader"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load i8*, i8** %14, align 8
  %23 = load i64, i64* %16, align 8
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %3, i8* %22, i64 %23) #13
  %24 = bitcast i8** %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::BigEndianReader"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %49, label %29

29:                                               ; preds = %2
  %30 = bitcast i16* %4 to i8*
  %31 = bitcast i16* %5 to i8*
  %32 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %35 = bitcast %"class.net::OptRecordRdata::Opt"* %7 to i8*
  %36 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %7, i64 0, i32 0
  %37 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %44 = getelementptr inbounds i8, i8* %8, i64 16
  %45 = bitcast i8* %44 to %"class.net::OptRecordRdata::Opt"**
  %46 = getelementptr inbounds i8, i8* %8, i64 24
  %47 = bitcast i8* %46 to %"class.net::OptRecordRdata::Opt"**
  %48 = bitcast i8* %44 to i64*
  br label %51

49:                                               ; preds = %96, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %50 = bitcast i8* %8 to %"class.net::OptRecordRdata"*
  br label %106

51:                                               ; preds = %29, %96
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #13
  store i16 -21846, i16* %4, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %31) #13
  store i16 -21846, i16* %5, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #13
  %52 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* nonnull %4) #13
  br i1 %52, label %53, label %100

53:                                               ; preds = %51
  %54 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %3, i16* nonnull %5) #13
  br i1 %54, label %55, label %100

55:                                               ; preds = %53
  %56 = load i16, i16* %5, align 2
  %57 = zext i16 %56 to i64
  %58 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %3, %"class.base::BasicStringPiece"* nonnull %6, i64 %57) #13
  br i1 %58, label %59, label %100

59:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #13
  %60 = load i16, i16* %4, align 2
  %61 = load i8*, i8** %33, align 8
  %62 = load i64, i64* %34, align 8
  store i16 %60, i16* %36, align 8
  %63 = icmp ugt i64 %62, -17
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = bitcast %"class.std::__1::basic_string"* %37 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #15
  unreachable

66:                                               ; preds = %59
  %67 = icmp ult i64 %62, 23
  br i1 %67, label %73, label %68

68:                                               ; preds = %66
  %69 = add nuw i64 %62, 16
  %70 = and i64 %69, -16
  %71 = call i8* @_Znwm(i64 %70) #14
  store i8* %71, i8** %38, align 8, !alias.scope !47
  %72 = or i64 %70, -9223372036854775808
  store i64 %72, i64* %39, align 8, !alias.scope !47
  store i64 %62, i64* %40, align 8, !alias.scope !47
  br label %76

73:                                               ; preds = %66
  %74 = trunc i64 %62 to i8
  store i8 %74, i8* %42, align 1, !alias.scope !47
  %75 = icmp eq i64 %62, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %73, %68
  %77 = phi i8* [ %71, %68 ], [ %43, %73 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %61, i64 %62, i1 false) #13
  br label %78

78:                                               ; preds = %73, %76
  %79 = phi i8* [ %43, %73 ], [ %77, %76 ]
  %80 = getelementptr inbounds i8, i8* %79, i64 %62
  store i8 0, i8* %80, align 1
  %81 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %45, align 8
  %82 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %47, align 8
  %83 = icmp ult %"class.net::OptRecordRdata::Opt"* %81, %82
  br i1 %83, label %84, label %91

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %81, i64 0, i32 0
  %86 = load i16, i16* %36, align 8
  store i16 %86, i16* %85, align 8
  %87 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %81, i64 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %43, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %89 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %81, i64 1
  %90 = ptrtoint %"class.net::OptRecordRdata::Opt"* %89 to i64
  store i64 %90, i64* %48, align 8
  br label %96

91:                                               ; preds = %78
  call void @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.53"* %11, %"class.net::OptRecordRdata::Opt"* nonnull dereferenceable(32) %7) #13
  %92 = load i8, i8* %42, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %95) #14
  br label %96

96:                                               ; preds = %84, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #13
  %97 = load i64, i64* %24, align 8
  %98 = load i64, i64* %26, align 8
  %99 = icmp eq i64 %97, %98
  br i1 %99, label %49, label %51

100:                                              ; preds = %55, %53, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %101 = bitcast i8* %8 to %"class.net::OptRecordRdata"*
  %102 = bitcast i8* %8 to void (%"class.net::OptRecordRdata"*)***
  %103 = load void (%"class.net::OptRecordRdata"*)**, void (%"class.net::OptRecordRdata"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %103, i64 1
  %105 = load void (%"class.net::OptRecordRdata"*)*, void (%"class.net::OptRecordRdata"*)** %104, align 8
  call void %105(%"class.net::OptRecordRdata"* nonnull %101) #13
  br label %106

106:                                              ; preds = %49, %100
  %107 = phi %"class.net::OptRecordRdata"* [ %50, %49 ], [ null, %100 ]
  ret %"class.net::OptRecordRdata"* %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE6assignIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.60"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.60"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #13
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #13
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #14
  %46 = bitcast %"class.std::__1::vector.60"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.60"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #15
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #14
  %61 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #13
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

declare zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net14OptRecordRdata4TypeEv(%"class.net::OptRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14OptRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::OptRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::OptRecordRdata"* %0 to i16 (%"class.net::OptRecordRdata"*)***
  %9 = load i16 (%"class.net::OptRecordRdata"*)**, i16 (%"class.net::OptRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::OptRecordRdata"*)*, i16 (%"class.net::OptRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::OptRecordRdata"*)*, i16 (%"class.net::OptRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::OptRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %100

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %16 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %18 = bitcast %"class.net::RecordRdata"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.net::RecordRdata"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.net::OptRecordRdata::Opt"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.53"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to %"class.net::OptRecordRdata::Opt"*
  %31 = inttoptr i64 %19 to %"class.net::OptRecordRdata::Opt"*
  br i1 %29, label %32, label %100

32:                                               ; preds = %14
  %33 = icmp eq %"class.net::OptRecordRdata::Opt"* %30, %31
  br i1 %33, label %100, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to %"class.net::OptRecordRdata::Opt"*
  br label %36

36:                                               ; preds = %34, %96
  %37 = phi %"class.net::OptRecordRdata::Opt"* [ %98, %96 ], [ %35, %34 ]
  %38 = phi %"class.net::OptRecordRdata::Opt"* [ %97, %96 ], [ %30, %34 ]
  %39 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %38, i64 0, i32 0
  %40 = load i16, i16* %39, align 8
  %41 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 0, i32 0
  %42 = load i16, i16* %41, align 8
  %43 = icmp eq i16 %40, %42
  br i1 %43, label %44, label %100

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %38, i64 0, i32 1
  %46 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %38, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = icmp eq i64 %54, %62
  br i1 %63, label %64, label %100

64:                                               ; preds = %44
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %68 = select i1 %50, i8* %66, i8* %67
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %72 = select i1 %58, i8* %70, i8* %71
  %73 = icmp eq i64 %54, 0
  br i1 %50, label %80, label %74

74:                                               ; preds = %64
  br i1 %73, label %96, label %75

75:                                               ; preds = %74
  %76 = ptrtoint i8* %66 to i64
  %77 = trunc i64 %76 to i8
  %78 = load i8, i8* %72, align 1
  %79 = icmp eq i8 %78, %77
  br i1 %79, label %81, label %100

80:                                               ; preds = %64
  br i1 %73, label %96, label %93

81:                                               ; preds = %75, %88
  %82 = phi i64 [ %85, %88 ], [ %53, %75 ]
  %83 = phi i8* [ %86, %88 ], [ %67, %75 ]
  %84 = phi i8* [ %89, %88 ], [ %72, %75 ]
  %85 = add i64 %82, -1
  %86 = getelementptr inbounds i8, i8* %83, i64 1
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds i8, i8* %84, i64 1
  %90 = load i8, i8* %86, align 1
  %91 = load i8, i8* %89, align 1
  %92 = icmp eq i8 %90, %91
  br i1 %92, label %81, label %100

93:                                               ; preds = %80
  %94 = tail call i32 @bcmp(i8* %68, i8* %72, i64 %54) #13
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %81, %93, %80, %74
  %97 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %38, i64 1
  %98 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 1
  %99 = icmp eq %"class.net::OptRecordRdata::Opt"* %97, %31
  br i1 %99, label %100, label %36

100:                                              ; preds = %96, %93, %75, %44, %36, %88, %32, %14, %2
  %101 = phi i1 [ false, %2 ], [ false, %14 ], [ true, %32 ], [ false, %88 ], [ true, %96 ], [ false, %75 ], [ false, %44 ], [ false, %36 ], [ false, %93 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdata6AddOptERKNS0_3OptE(%"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata::Opt"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BigEndianWriter", align 8
  %4 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.60"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = add i64 %16, 4
  %25 = add i64 %24, %23
  %26 = icmp ugt i64 %25, %23
  %27 = inttoptr i64 %22 to i8*
  br i1 %26, label %28, label %32

28:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector.60"* %17, i64 %24) #13
  %29 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %17, i64 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = load i64, i64* %19, align 8
  br label %37

32:                                               ; preds = %2
  %33 = icmp ult i64 %25, %23
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = getelementptr inbounds i8, i8* %27, i64 %25
  store i8* %35, i8** %18, align 8
  %36 = ptrtoint i8* %35 to i64
  br label %37

37:                                               ; preds = %28, %32, %34
  %38 = phi i64 [ %31, %28 ], [ %20, %32 ], [ %36, %34 ]
  %39 = phi i8* [ %30, %28 ], [ %27, %32 ], [ %27, %34 ]
  %40 = bitcast %"class.base::BigEndianWriter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = getelementptr inbounds i8, i8* %39, i64 %23
  %42 = ptrtoint i8* %39 to i64
  %43 = sub i64 %38, %42
  %44 = bitcast %"class.base::BigEndianWriter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @_ZN4base15BigEndianWriterC1EPcm(%"class.base::BigEndianWriter"* nonnull %3, i8* %41, i64 %43) #13
  %45 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 0
  %46 = load i16, i16* %45, align 8
  %47 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %3, i16 zeroext %46) #13
  br i1 %47, label %48, label %53

48:                                               ; preds = %37
  %49 = trunc i64 %16 to i16
  %50 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %3, i16 zeroext %49) #13
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* nonnull %3, i8* %12, i64 %16) #13
  br label %53

53:                                               ; preds = %51, %48, %37
  %54 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %55 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %54, align 8
  %56 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %57 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %56, align 8
  %58 = icmp eq %"class.net::OptRecordRdata::Opt"* %55, %57
  br i1 %58, label %74, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %55, i64 0, i32 0
  %61 = load i16, i16* %45, align 8
  store i16 %61, i16* %60, align 8
  %62 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %55, i64 0, i32 1
  %63 = load i8, i8* %6, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %11, i64 24, i1 false) #13
  br label %70

67:                                               ; preds = %59
  %68 = load i8*, i8** %9, align 8
  %69 = load i64, i64* %13, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %62, i8* %68, i64 %69) #13
  br label %70

70:                                               ; preds = %67, %65
  %71 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %55, i64 1
  %72 = ptrtoint %"class.net::OptRecordRdata::Opt"* %71 to i64
  %73 = bitcast %"class.net::OptRecordRdata::Opt"** %54 to i64*
  store i64 %72, i64* %73, align 8
  br label %76

74:                                               ; preds = %53
  %75 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.53"* %75, %"class.net::OptRecordRdata::Opt"* dereferenceable(32) %1) #13
  br label %76

76:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  ret void
}

declare void @_ZN4base15BigEndianWriterC1EPcm(%"class.base::BigEndianWriter"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"*, i16 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdata7AddOptsERKS0_(%"class.net::OptRecordRdata"*, %"class.net::OptRecordRdata"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 2, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPcEEE4typeES8_SA_SA_(%"class.std::__1::vector.60"* %3, i8* %5, i8* %7, i8* %9)
  %11 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %12, align 8
  %14 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %14, align 8
  %16 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %17 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %16, align 8
  %18 = tail call %"class.net::OptRecordRdata::Opt"* @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_(%"class.std::__1::vector.53"* %11, %"class.net::OptRecordRdata::Opt"* %13, %"class.net::OptRecordRdata::Opt"* %15, %"class.net::OptRecordRdata::Opt"* %17)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPcEEE4typeES8_SA_SA_(%"class.std::__1::vector.60"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %518

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !50
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !50
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !53, !noalias !50
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !53, !noalias !50
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !50
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !50
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !53, !noalias !50
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !53, !noalias !50
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !50
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !50
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !53, !noalias !50
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !53, !noalias !50
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !50
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !50
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !53, !noalias !50
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !53, !noalias !50
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !55

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !50
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !50
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !53, !noalias !50
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !53, !noalias !50
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !56

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !57

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %518

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !58
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !58
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !61, !noalias !58
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !61, !noalias !58
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !58
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !58
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !61, !noalias !58
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !61, !noalias !58
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !58
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !58
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !61, !noalias !58
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !61, !noalias !58
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !58
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !58
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !61, !noalias !58
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !61, !noalias !58
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !63

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !58
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !58
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !61, !noalias !58
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !61, !noalias !58
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !64

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #13
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !65

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %518, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #13
  br label %518

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.60"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.60"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #15
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %291, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = tail call i8* @_Znwm(i64 %289) #14
  br label %291

291:                                              ; preds = %281, %287
  %292 = phi i64 [ %288, %287 ], [ %285, %281 ]
  %293 = phi i64 [ %289, %287 ], [ 0, %281 ]
  %294 = phi i8* [ %290, %287 ], [ null, %281 ]
  %295 = getelementptr inbounds i8, i8* %294, i64 %292
  %296 = getelementptr inbounds i8, i8* %294, i64 %293
  %297 = getelementptr inbounds i8, i8* %295, i64 %9
  %298 = icmp ult i64 %9, 32
  br i1 %298, label %384, label %299

299:                                              ; preds = %291
  %300 = icmp ult i8* %295, %3
  %301 = icmp ugt i8* %297, %2
  %302 = and i1 %300, %301
  br i1 %302, label %384, label %303

303:                                              ; preds = %299
  %304 = and i64 %9, -32
  %305 = getelementptr i8, i8* %295, i64 %304
  %306 = getelementptr i8, i8* %2, i64 %304
  %307 = add i64 %304, -32
  %308 = lshr exact i64 %307, 5
  %309 = add nuw nsw i64 %308, 1
  %310 = and i64 %309, 3
  %311 = icmp ult i64 %307, 96
  br i1 %311, label %363, label %312

312:                                              ; preds = %303
  %313 = sub nsw i64 %309, %310
  br label %314

314:                                              ; preds = %314, %312
  %315 = phi i64 [ 0, %312 ], [ %360, %314 ]
  %316 = phi i64 [ %313, %312 ], [ %361, %314 ]
  %317 = getelementptr i8, i8* %295, i64 %315
  %318 = getelementptr i8, i8* %2, i64 %315
  %319 = bitcast i8* %318 to <16 x i8>*
  %320 = load <16 x i8>, <16 x i8>* %319, align 1, !alias.scope !66
  %321 = getelementptr i8, i8* %318, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  %323 = load <16 x i8>, <16 x i8>* %322, align 1, !alias.scope !66
  %324 = bitcast i8* %317 to <16 x i8>*
  store <16 x i8> %320, <16 x i8>* %324, align 1, !alias.scope !69, !noalias !66
  %325 = getelementptr i8, i8* %317, i64 16
  %326 = bitcast i8* %325 to <16 x i8>*
  store <16 x i8> %323, <16 x i8>* %326, align 1, !alias.scope !69, !noalias !66
  %327 = or i64 %315, 32
  %328 = getelementptr i8, i8* %295, i64 %327
  %329 = getelementptr i8, i8* %2, i64 %327
  %330 = bitcast i8* %329 to <16 x i8>*
  %331 = load <16 x i8>, <16 x i8>* %330, align 1, !alias.scope !66
  %332 = getelementptr i8, i8* %329, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !66
  %335 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %331, <16 x i8>* %335, align 1, !alias.scope !69, !noalias !66
  %336 = getelementptr i8, i8* %328, i64 16
  %337 = bitcast i8* %336 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %337, align 1, !alias.scope !69, !noalias !66
  %338 = or i64 %315, 64
  %339 = getelementptr i8, i8* %295, i64 %338
  %340 = getelementptr i8, i8* %2, i64 %338
  %341 = bitcast i8* %340 to <16 x i8>*
  %342 = load <16 x i8>, <16 x i8>* %341, align 1, !alias.scope !66
  %343 = getelementptr i8, i8* %340, i64 16
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !66
  %346 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %342, <16 x i8>* %346, align 1, !alias.scope !69, !noalias !66
  %347 = getelementptr i8, i8* %339, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %348, align 1, !alias.scope !69, !noalias !66
  %349 = or i64 %315, 96
  %350 = getelementptr i8, i8* %295, i64 %349
  %351 = getelementptr i8, i8* %2, i64 %349
  %352 = bitcast i8* %351 to <16 x i8>*
  %353 = load <16 x i8>, <16 x i8>* %352, align 1, !alias.scope !66
  %354 = getelementptr i8, i8* %351, i64 16
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !66
  %357 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %353, <16 x i8>* %357, align 1, !alias.scope !69, !noalias !66
  %358 = getelementptr i8, i8* %350, i64 16
  %359 = bitcast i8* %358 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %359, align 1, !alias.scope !69, !noalias !66
  %360 = add i64 %315, 128
  %361 = add i64 %316, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %314, !llvm.loop !71

363:                                              ; preds = %314, %303
  %364 = phi i64 [ 0, %303 ], [ %360, %314 ]
  %365 = icmp eq i64 %310, 0
  br i1 %365, label %382, label %366

366:                                              ; preds = %363, %366
  %367 = phi i64 [ %379, %366 ], [ %364, %363 ]
  %368 = phi i64 [ %380, %366 ], [ %310, %363 ]
  %369 = getelementptr i8, i8* %295, i64 %367
  %370 = getelementptr i8, i8* %2, i64 %367
  %371 = bitcast i8* %370 to <16 x i8>*
  %372 = load <16 x i8>, <16 x i8>* %371, align 1, !alias.scope !66
  %373 = getelementptr i8, i8* %370, i64 16
  %374 = bitcast i8* %373 to <16 x i8>*
  %375 = load <16 x i8>, <16 x i8>* %374, align 1, !alias.scope !66
  %376 = bitcast i8* %369 to <16 x i8>*
  store <16 x i8> %372, <16 x i8>* %376, align 1, !alias.scope !69, !noalias !66
  %377 = getelementptr i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %378, align 1, !alias.scope !69, !noalias !66
  %379 = add i64 %367, 32
  %380 = add i64 %368, -1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %366, !llvm.loop !72

382:                                              ; preds = %366, %363
  %383 = icmp eq i64 %9, %304
  br i1 %383, label %394, label %384

384:                                              ; preds = %382, %299, %291
  %385 = phi i8* [ %295, %299 ], [ %295, %291 ], [ %305, %382 ]
  %386 = phi i8* [ %2, %299 ], [ %2, %291 ], [ %306, %382 ]
  br label %387

387:                                              ; preds = %384, %387
  %388 = phi i8* [ %391, %387 ], [ %385, %384 ]
  %389 = phi i8* [ %392, %387 ], [ %386, %384 ]
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %388, align 1
  %391 = getelementptr inbounds i8, i8* %388, i64 1
  %392 = getelementptr inbounds i8, i8* %389, i64 1
  %393 = icmp eq i8* %297, %391
  br i1 %393, label %394, label %387, !llvm.loop !73

394:                                              ; preds = %387, %382
  %395 = ptrtoint i8* %296 to i64
  %396 = load i8*, i8** %7, align 8
  %397 = ptrtoint i8* %396 to i64
  %398 = sub i64 %5, %397
  %399 = sub i64 0, %398
  %400 = getelementptr inbounds i8, i8* %295, i64 %399
  %401 = ptrtoint i8* %400 to i64
  %402 = icmp sgt i64 %398, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %394
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %400, i8* align 1 %396, i64 %398, i1 false) #13
  br label %404

404:                                              ; preds = %403, %394
  %405 = load i8*, i8** %15, align 8
  %406 = icmp eq i8* %405, %1
  br i1 %406, label %512, label %407

407:                                              ; preds = %404
  %408 = ptrtoint i8* %405 to i64
  %409 = sub i64 %408, %5
  %410 = icmp ult i64 %409, 32
  br i1 %410, label %502, label %411

411:                                              ; preds = %407
  %412 = add i64 %292, %8
  %413 = sub i64 %412, %5
  %414 = sub i64 %413, %6
  %415 = getelementptr i8, i8* %405, i64 %414
  %416 = ptrtoint i8* %415 to i64
  %417 = getelementptr i8, i8* %294, i64 %416
  %418 = icmp ult i8* %297, %405
  %419 = icmp ugt i8* %417, %1
  %420 = and i1 %418, %419
  br i1 %420, label %502, label %421

421:                                              ; preds = %411
  %422 = and i64 %409, -32
  %423 = getelementptr i8, i8* %297, i64 %422
  %424 = getelementptr i8, i8* %1, i64 %422
  %425 = add i64 %422, -32
  %426 = lshr exact i64 %425, 5
  %427 = add nuw nsw i64 %426, 1
  %428 = and i64 %427, 3
  %429 = icmp ult i64 %425, 96
  br i1 %429, label %481, label %430

430:                                              ; preds = %421
  %431 = sub nsw i64 %427, %428
  br label %432

432:                                              ; preds = %432, %430
  %433 = phi i64 [ 0, %430 ], [ %478, %432 ]
  %434 = phi i64 [ %431, %430 ], [ %479, %432 ]
  %435 = getelementptr i8, i8* %297, i64 %433
  %436 = getelementptr i8, i8* %1, i64 %433
  %437 = bitcast i8* %436 to <16 x i8>*
  %438 = load <16 x i8>, <16 x i8>* %437, align 1, !alias.scope !74
  %439 = getelementptr i8, i8* %436, i64 16
  %440 = bitcast i8* %439 to <16 x i8>*
  %441 = load <16 x i8>, <16 x i8>* %440, align 1, !alias.scope !74
  %442 = bitcast i8* %435 to <16 x i8>*
  store <16 x i8> %438, <16 x i8>* %442, align 1, !alias.scope !77, !noalias !74
  %443 = getelementptr i8, i8* %435, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  store <16 x i8> %441, <16 x i8>* %444, align 1, !alias.scope !77, !noalias !74
  %445 = or i64 %433, 32
  %446 = getelementptr i8, i8* %297, i64 %445
  %447 = getelementptr i8, i8* %1, i64 %445
  %448 = bitcast i8* %447 to <16 x i8>*
  %449 = load <16 x i8>, <16 x i8>* %448, align 1, !alias.scope !74
  %450 = getelementptr i8, i8* %447, i64 16
  %451 = bitcast i8* %450 to <16 x i8>*
  %452 = load <16 x i8>, <16 x i8>* %451, align 1, !alias.scope !74
  %453 = bitcast i8* %446 to <16 x i8>*
  store <16 x i8> %449, <16 x i8>* %453, align 1, !alias.scope !77, !noalias !74
  %454 = getelementptr i8, i8* %446, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  store <16 x i8> %452, <16 x i8>* %455, align 1, !alias.scope !77, !noalias !74
  %456 = or i64 %433, 64
  %457 = getelementptr i8, i8* %297, i64 %456
  %458 = getelementptr i8, i8* %1, i64 %456
  %459 = bitcast i8* %458 to <16 x i8>*
  %460 = load <16 x i8>, <16 x i8>* %459, align 1, !alias.scope !74
  %461 = getelementptr i8, i8* %458, i64 16
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !74
  %464 = bitcast i8* %457 to <16 x i8>*
  store <16 x i8> %460, <16 x i8>* %464, align 1, !alias.scope !77, !noalias !74
  %465 = getelementptr i8, i8* %457, i64 16
  %466 = bitcast i8* %465 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %466, align 1, !alias.scope !77, !noalias !74
  %467 = or i64 %433, 96
  %468 = getelementptr i8, i8* %297, i64 %467
  %469 = getelementptr i8, i8* %1, i64 %467
  %470 = bitcast i8* %469 to <16 x i8>*
  %471 = load <16 x i8>, <16 x i8>* %470, align 1, !alias.scope !74
  %472 = getelementptr i8, i8* %469, i64 16
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !74
  %475 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %471, <16 x i8>* %475, align 1, !alias.scope !77, !noalias !74
  %476 = getelementptr i8, i8* %468, i64 16
  %477 = bitcast i8* %476 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %477, align 1, !alias.scope !77, !noalias !74
  %478 = add i64 %433, 128
  %479 = add i64 %434, -4
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %432, !llvm.loop !79

481:                                              ; preds = %432, %421
  %482 = phi i64 [ 0, %421 ], [ %478, %432 ]
  %483 = icmp eq i64 %428, 0
  br i1 %483, label %500, label %484

484:                                              ; preds = %481, %484
  %485 = phi i64 [ %497, %484 ], [ %482, %481 ]
  %486 = phi i64 [ %498, %484 ], [ %428, %481 ]
  %487 = getelementptr i8, i8* %297, i64 %485
  %488 = getelementptr i8, i8* %1, i64 %485
  %489 = bitcast i8* %488 to <16 x i8>*
  %490 = load <16 x i8>, <16 x i8>* %489, align 1, !alias.scope !74
  %491 = getelementptr i8, i8* %488, i64 16
  %492 = bitcast i8* %491 to <16 x i8>*
  %493 = load <16 x i8>, <16 x i8>* %492, align 1, !alias.scope !74
  %494 = bitcast i8* %487 to <16 x i8>*
  store <16 x i8> %490, <16 x i8>* %494, align 1, !alias.scope !77, !noalias !74
  %495 = getelementptr i8, i8* %487, i64 16
  %496 = bitcast i8* %495 to <16 x i8>*
  store <16 x i8> %493, <16 x i8>* %496, align 1, !alias.scope !77, !noalias !74
  %497 = add i64 %485, 32
  %498 = add i64 %486, -1
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %484, !llvm.loop !80

500:                                              ; preds = %484, %481
  %501 = icmp eq i64 %409, %422
  br i1 %501, label %512, label %502

502:                                              ; preds = %500, %411, %407
  %503 = phi i8* [ %297, %411 ], [ %297, %407 ], [ %423, %500 ]
  %504 = phi i8* [ %1, %411 ], [ %1, %407 ], [ %424, %500 ]
  br label %505

505:                                              ; preds = %502, %505
  %506 = phi i8* [ %510, %505 ], [ %503, %502 ]
  %507 = phi i8* [ %509, %505 ], [ %504, %502 ]
  %508 = load i8, i8* %507, align 1
  store i8 %508, i8* %506, align 1
  %509 = getelementptr inbounds i8, i8* %507, i64 1
  %510 = getelementptr inbounds i8, i8* %506, i64 1
  %511 = icmp eq i8* %509, %405
  br i1 %511, label %512, label %505, !llvm.loop !81

512:                                              ; preds = %505, %500, %404
  %513 = phi i8* [ %297, %404 ], [ %423, %500 ], [ %510, %505 ]
  %514 = ptrtoint i8* %513 to i64
  %515 = load i8*, i8** %7, align 8
  store i64 %401, i64* %269, align 8
  store i64 %514, i64* %20, align 8
  store i64 %395, i64* %13, align 8
  %516 = icmp eq i8* %515, null
  br i1 %516, label %518, label %517

517:                                              ; preds = %512
  tail call void @_ZdlPv(i8* nonnull %515) #14
  br label %518

518:                                              ; preds = %517, %512, %136, %263, %267, %4
  %519 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %295, %512 ], [ %295, %517 ]
  ret i8* %519
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.net::OptRecordRdata::Opt"* @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPKS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISD_E9referenceEEE5valueENS8_IPS3_EEE4typeESB_SD_SD_(%"class.std::__1::vector.53"*, %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.net::OptRecordRdata::Opt"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"class.net::OptRecordRdata::Opt"* %2 to i64
  %8 = ptrtoint %"class.net::OptRecordRdata::Opt"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = ashr exact i64 %9, 5
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %369

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.net::OptRecordRdata::Opt"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %16, align 8
  %18 = ptrtoint %"class.net::OptRecordRdata::Opt"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 5
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.net::OptRecordRdata::Opt"** %16 to i64*
  br i1 %21, label %188, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = ashr exact i64 %24, 5
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %61

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %2, i64 %25
  %29 = icmp eq %"class.net::OptRecordRdata::Opt"* %28, %3
  br i1 %29, label %56, label %30

30:                                               ; preds = %27, %50
  %31 = phi %"class.net::OptRecordRdata::Opt"* [ %52, %50 ], [ %17, %27 ]
  %32 = phi %"class.net::OptRecordRdata::Opt"* [ %51, %50 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %32, i64 0, i32 0
  %35 = load i16, i16* %34, align 8
  store i16 %35, i16* %33, align 8
  %36 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %32, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #13
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %32, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %36, i8* %47, i64 %49) #13
  br label %50

50:                                               ; preds = %45, %42
  %51 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %32, i64 1
  %52 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %31, i64 1
  %53 = icmp eq %"class.net::OptRecordRdata::Opt"* %51, %3
  br i1 %53, label %54, label %30

54:                                               ; preds = %50
  %55 = ptrtoint %"class.net::OptRecordRdata::Opt"* %52 to i64
  br label %56

56:                                               ; preds = %54, %27
  %57 = phi i64 [ %18, %27 ], [ %55, %54 ]
  store i64 %57, i64* %22, align 8
  %58 = icmp sgt i64 %24, 0
  br i1 %58, label %59, label %369

59:                                               ; preds = %56
  %60 = inttoptr i64 %57 to %"class.net::OptRecordRdata::Opt"*
  br label %61

61:                                               ; preds = %59, %23
  %62 = phi i64 [ %57, %59 ], [ %18, %23 ]
  %63 = phi %"class.net::OptRecordRdata::Opt"* [ %60, %59 ], [ %17, %23 ]
  %64 = phi %"class.net::OptRecordRdata::Opt"* [ %28, %59 ], [ %3, %23 ]
  %65 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 %10
  %66 = ptrtoint %"class.net::OptRecordRdata::Opt"* %65 to i64
  %67 = sub i64 %62, %66
  %68 = ashr exact i64 %67, 5
  %69 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 %68
  %70 = icmp ult %"class.net::OptRecordRdata::Opt"* %69, %17
  br i1 %70, label %71, label %98

71:                                               ; preds = %61
  %72 = sub nsw i64 0, %68
  %73 = getelementptr %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %17, i64 %72, i32 0
  %74 = bitcast i16* %73 to i8*
  %75 = xor i64 %5, -1
  %76 = getelementptr i8, i8* %74, i64 %75
  %77 = ptrtoint i8* %76 to i64
  %78 = and i64 %77, 32
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 0, i32 0
  %82 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %69, i64 0, i32 0
  %83 = load i16, i16* %82, align 8
  store i16 %83, i16* %81, align 8
  %84 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 0, i32 1
  %85 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 %68, i32 1
  %86 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #13
  %88 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %69, i64 1
  %89 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 1
  br label %90

90:                                               ; preds = %80, %71
  %91 = phi %"class.net::OptRecordRdata::Opt"* [ %63, %71 ], [ %89, %80 ]
  %92 = phi %"class.net::OptRecordRdata::Opt"* [ %69, %71 ], [ %88, %80 ]
  %93 = phi %"class.net::OptRecordRdata::Opt"* [ undef, %71 ], [ %89, %80 ]
  %94 = icmp ult i8* %76, inttoptr (i64 32 to i8*)
  br i1 %94, label %95, label %124

95:                                               ; preds = %124, %90
  %96 = phi %"class.net::OptRecordRdata::Opt"* [ %93, %90 ], [ %142, %124 ]
  %97 = ptrtoint %"class.net::OptRecordRdata::Opt"* %96 to i64
  br label %98

98:                                               ; preds = %95, %61
  %99 = phi i64 [ %97, %95 ], [ %62, %61 ]
  store i64 %99, i64* %22, align 8
  %100 = icmp eq i64 %67, 0
  br i1 %100, label %144, label %101

101:                                              ; preds = %98, %118
  %102 = phi %"class.net::OptRecordRdata::Opt"* [ %105, %118 ], [ %63, %98 ]
  %103 = phi %"class.net::OptRecordRdata::Opt"* [ %104, %118 ], [ %69, %98 ]
  %104 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %103, i64 -1
  %105 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %102, i64 -1
  %106 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %104, i64 0, i32 0
  %107 = load i16, i16* %106, align 8
  %108 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %105, i64 0, i32 0
  store i16 %107, i16* %108, align 8
  %109 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %102, i64 -1, i32 1
  %110 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %103, i64 -1, i32 1
  %111 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %101
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %115, %101
  %119 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #13
  %121 = bitcast %"class.std::__1::basic_string"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  store i8 0, i8* %122, align 1
  store i8 0, i8* %120, align 1
  %123 = icmp eq %"class.net::OptRecordRdata::Opt"* %104, %1
  br i1 %123, label %144, label %101

124:                                              ; preds = %90, %124
  %125 = phi %"class.net::OptRecordRdata::Opt"* [ %142, %124 ], [ %91, %90 ]
  %126 = phi %"class.net::OptRecordRdata::Opt"* [ %141, %124 ], [ %92, %90 ]
  %127 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %125, i64 0, i32 0
  %128 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %126, i64 0, i32 0
  %129 = load i16, i16* %128, align 8
  store i16 %129, i16* %127, align 8
  %130 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %125, i64 0, i32 1
  %131 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %126, i64 0, i32 1
  %132 = bitcast %"class.std::__1::basic_string"* %130 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #13
  %134 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %125, i64 1, i32 0
  %135 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %126, i64 1, i32 0
  %136 = load i16, i16* %135, align 8
  store i16 %136, i16* %134, align 8
  %137 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %125, i64 1, i32 1
  %138 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %126, i64 1, i32 1
  %139 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %140 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #13
  %141 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %126, i64 2
  %142 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %125, i64 2
  %143 = icmp ult %"class.net::OptRecordRdata::Opt"* %141, %17
  br i1 %143, label %124, label %95

144:                                              ; preds = %118, %98
  %145 = icmp eq %"class.net::OptRecordRdata::Opt"* %64, %2
  br i1 %145, label %369, label %146

146:                                              ; preds = %144, %184
  %147 = phi %"class.net::OptRecordRdata::Opt"* [ %186, %184 ], [ %1, %144 ]
  %148 = phi %"class.net::OptRecordRdata::Opt"* [ %185, %184 ], [ %2, %144 ]
  %149 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %148, i64 0, i32 0
  %150 = load i16, i16* %149, align 8
  %151 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %147, i64 0, i32 0
  store i16 %150, i16* %151, align 8
  %152 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %147, i64 0, i32 1
  %153 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %148, i64 0, i32 1
  %154 = icmp eq %"class.net::OptRecordRdata::Opt"* %147, %148
  br i1 %154, label %184, label %155

155:                                              ; preds = %146
  %156 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  %160 = bitcast %"class.std::__1::basic_string"* %153 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %159, label %174, label %164

164:                                              ; preds = %155
  br i1 %163, label %168, label %165

165:                                              ; preds = %164
  %166 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #13
  br label %184

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %148, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %152, i8* %170, i64 %172) #13
  br label %184

174:                                              ; preds = %155
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %148, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  %180 = zext i8 %162 to i64
  %181 = select i1 %163, i8* %176, i8* %179
  %182 = select i1 %163, i64 %178, i64 %180
  %183 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %152, i8* %181, i64 %182) #13
  br label %184

184:                                              ; preds = %174, %168, %165, %146
  %185 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %148, i64 1
  %186 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %147, i64 1
  %187 = icmp eq %"class.net::OptRecordRdata::Opt"* %185, %64
  br i1 %187, label %369, label %146

188:                                              ; preds = %12
  %189 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %18, %190
  %192 = ashr exact i64 %191, 5
  %193 = add nsw i64 %192, %10
  %194 = icmp ugt i64 %193, 576460752303423487
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #15
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %15, %190
  %199 = ashr exact i64 %198, 5
  %200 = icmp ult i64 %199, 288230376151711743
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = sub i64 %5, %190
  %203 = ashr exact i64 %202, 5
  br label %214

204:                                              ; preds = %197
  %205 = ashr exact i64 %198, 4
  %206 = icmp ult i64 %205, %193
  %207 = select i1 %206, i64 %193, i64 %205
  %208 = sub i64 %5, %190
  %209 = ashr exact i64 %208, 5
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %220, label %211

211:                                              ; preds = %204
  %212 = icmp ugt i64 %207, 576460752303423487
  br i1 %212, label %213, label %214

213:                                              ; preds = %211
  tail call void @abort() #15
  unreachable

214:                                              ; preds = %201, %211
  %215 = phi i64 [ 576460752303423487, %201 ], [ %207, %211 ]
  %216 = phi i64 [ %203, %201 ], [ %209, %211 ]
  %217 = shl i64 %215, 5
  %218 = tail call i8* @_Znwm(i64 %217) #14
  %219 = bitcast i8* %218 to %"class.net::OptRecordRdata::Opt"*
  br label %220

220:                                              ; preds = %214, %204
  %221 = phi i64 [ %216, %214 ], [ %209, %204 ]
  %222 = phi i64 [ %215, %214 ], [ 0, %204 ]
  %223 = phi %"class.net::OptRecordRdata::Opt"* [ %219, %214 ], [ null, %204 ]
  %224 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %223, i64 %221
  %225 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %223, i64 %222
  %226 = ptrtoint %"class.net::OptRecordRdata::Opt"* %225 to i64
  %227 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %224, i64 %10
  br label %228

228:                                              ; preds = %220, %248
  %229 = phi %"class.net::OptRecordRdata::Opt"* [ %249, %248 ], [ %224, %220 ]
  %230 = phi %"class.net::OptRecordRdata::Opt"* [ %250, %248 ], [ %2, %220 ]
  %231 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %229, i64 0, i32 0
  %232 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %230, i64 0, i32 0
  %233 = load i16, i16* %232, align 8
  store i16 %233, i16* %231, align 8
  %234 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %229, i64 0, i32 1
  %235 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %230, i64 0, i32 1
  %236 = bitcast %"class.std::__1::basic_string"* %235 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %228
  %241 = bitcast %"class.std::__1::basic_string"* %234 to i8*
  %242 = bitcast %"class.std::__1::basic_string"* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 24, i1 false) #13
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %230, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %234, i8* %245, i64 %247) #13
  br label %248

248:                                              ; preds = %243, %240
  %249 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %229, i64 1
  %250 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %230, i64 1
  %251 = icmp eq %"class.net::OptRecordRdata::Opt"* %227, %249
  br i1 %251, label %252, label %228

252:                                              ; preds = %248
  %253 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %6, align 8
  %254 = icmp eq %"class.net::OptRecordRdata::Opt"* %253, %1
  br i1 %254, label %297, label %255

255:                                              ; preds = %252
  %256 = ptrtoint %"class.net::OptRecordRdata::Opt"* %253 to i64
  %257 = getelementptr %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 -1, i32 0
  %258 = ptrtoint i16* %257 to i64
  %259 = sub i64 %258, %256
  %260 = and i64 %259, 32
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %272

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 -1
  %264 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %224, i64 -1, i32 0
  %265 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %263, i64 0, i32 0
  %266 = load i16, i16* %265, align 8
  store i16 %266, i16* %264, align 8
  %267 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %224, i64 -1, i32 1
  %268 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 -1, i32 1
  %269 = bitcast %"class.std::__1::basic_string"* %267 to i8*
  %270 = bitcast %"class.std::__1::basic_string"* %268 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %270, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %270, i8 0, i64 24, i1 false) #13
  %271 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %224, i64 -1
  br label %272

272:                                              ; preds = %262, %255
  %273 = phi %"class.net::OptRecordRdata::Opt"* [ undef, %255 ], [ %271, %262 ]
  %274 = phi %"class.net::OptRecordRdata::Opt"* [ %224, %255 ], [ %271, %262 ]
  %275 = phi %"class.net::OptRecordRdata::Opt"* [ %1, %255 ], [ %263, %262 ]
  %276 = icmp ult i64 %259, 32
  br i1 %276, label %297, label %277

277:                                              ; preds = %272, %277
  %278 = phi %"class.net::OptRecordRdata::Opt"* [ %295, %277 ], [ %274, %272 ]
  %279 = phi %"class.net::OptRecordRdata::Opt"* [ %287, %277 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %278, i64 -1, i32 0
  %281 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %279, i64 -1, i32 0
  %282 = load i16, i16* %281, align 8
  store i16 %282, i16* %280, align 8
  %283 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %278, i64 -1, i32 1
  %284 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %279, i64 -1, i32 1
  %285 = bitcast %"class.std::__1::basic_string"* %283 to i8*
  %286 = bitcast %"class.std::__1::basic_string"* %284 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %286, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %286, i8 0, i64 24, i1 false) #13
  %287 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %279, i64 -2
  %288 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %278, i64 -2, i32 0
  %289 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %287, i64 0, i32 0
  %290 = load i16, i16* %289, align 8
  store i16 %290, i16* %288, align 8
  %291 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %278, i64 -2, i32 1
  %292 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %279, i64 -2, i32 1
  %293 = bitcast %"class.std::__1::basic_string"* %291 to i8*
  %294 = bitcast %"class.std::__1::basic_string"* %292 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* align 8 %294, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #13
  %295 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %278, i64 -2
  %296 = icmp eq %"class.net::OptRecordRdata::Opt"* %287, %253
  br i1 %296, label %297, label %277

297:                                              ; preds = %272, %277, %252
  %298 = phi %"class.net::OptRecordRdata::Opt"* [ %224, %252 ], [ %273, %272 ], [ %295, %277 ]
  %299 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %16, align 8
  %300 = icmp eq %"class.net::OptRecordRdata::Opt"* %299, %1
  br i1 %300, label %345, label %301

301:                                              ; preds = %297
  %302 = getelementptr %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %299, i64 -1, i32 0
  %303 = ptrtoint i16* %302 to i64
  %304 = sub i64 %303, %5
  %305 = and i64 %304, 32
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %317

307:                                              ; preds = %301
  %308 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %227, i64 0, i32 0
  %309 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 0
  %310 = load i16, i16* %309, align 8
  store i16 %310, i16* %308, align 8
  %311 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %227, i64 0, i32 1
  %312 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1
  %313 = bitcast %"class.std::__1::basic_string"* %311 to i8*
  %314 = bitcast %"class.std::__1::basic_string"* %312 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %313, i8* align 8 %314, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %314, i8 0, i64 24, i1 false) #13
  %315 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 1
  %316 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %227, i64 1
  br label %317

317:                                              ; preds = %307, %301
  %318 = phi %"class.net::OptRecordRdata::Opt"* [ undef, %301 ], [ %316, %307 ]
  %319 = phi %"class.net::OptRecordRdata::Opt"* [ %227, %301 ], [ %316, %307 ]
  %320 = phi %"class.net::OptRecordRdata::Opt"* [ %1, %301 ], [ %315, %307 ]
  %321 = icmp ult i64 %304, 32
  br i1 %321, label %342, label %322

322:                                              ; preds = %317, %322
  %323 = phi %"class.net::OptRecordRdata::Opt"* [ %340, %322 ], [ %319, %317 ]
  %324 = phi %"class.net::OptRecordRdata::Opt"* [ %339, %322 ], [ %320, %317 ]
  %325 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %323, i64 0, i32 0
  %326 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %324, i64 0, i32 0
  %327 = load i16, i16* %326, align 8
  store i16 %327, i16* %325, align 8
  %328 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %323, i64 0, i32 1
  %329 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %324, i64 0, i32 1
  %330 = bitcast %"class.std::__1::basic_string"* %328 to i8*
  %331 = bitcast %"class.std::__1::basic_string"* %329 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %330, i8* align 8 %331, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %331, i8 0, i64 24, i1 false) #13
  %332 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %323, i64 1, i32 0
  %333 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %324, i64 1, i32 0
  %334 = load i16, i16* %333, align 8
  store i16 %334, i16* %332, align 8
  %335 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %323, i64 1, i32 1
  %336 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %324, i64 1, i32 1
  %337 = bitcast %"class.std::__1::basic_string"* %335 to i8*
  %338 = bitcast %"class.std::__1::basic_string"* %336 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %337, i8* align 8 %338, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %338, i8 0, i64 24, i1 false) #13
  %339 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %324, i64 2
  %340 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %323, i64 2
  %341 = icmp eq %"class.net::OptRecordRdata::Opt"* %339, %299
  br i1 %341, label %342, label %322

342:                                              ; preds = %322, %317
  %343 = phi %"class.net::OptRecordRdata::Opt"* [ %318, %317 ], [ %340, %322 ]
  %344 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %16, align 8
  br label %345

345:                                              ; preds = %297, %342
  %346 = phi %"class.net::OptRecordRdata::Opt"* [ %344, %342 ], [ %1, %297 ]
  %347 = phi %"class.net::OptRecordRdata::Opt"* [ %343, %342 ], [ %227, %297 ]
  %348 = ptrtoint %"class.net::OptRecordRdata::Opt"* %298 to i64
  %349 = ptrtoint %"class.net::OptRecordRdata::Opt"* %347 to i64
  %350 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %6, align 8
  store i64 %348, i64* %189, align 8
  store i64 %349, i64* %22, align 8
  store i64 %226, i64* %14, align 8
  %351 = icmp eq %"class.net::OptRecordRdata::Opt"* %346, %350
  br i1 %351, label %365, label %352

352:                                              ; preds = %345, %363
  %353 = phi %"class.net::OptRecordRdata::Opt"* [ %354, %363 ], [ %346, %345 ]
  %354 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %353, i64 -1
  %355 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %353, i64 -1, i32 1
  %356 = bitcast %"class.std::__1::basic_string"* %355 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %357 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %356, i64 0, i32 1, i32 0
  %358 = load i8, i8* %357, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %352
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  tail call void @_ZdlPv(i8* %362) #14
  br label %363

363:                                              ; preds = %360, %352
  %364 = icmp eq %"class.net::OptRecordRdata::Opt"* %354, %350
  br i1 %364, label %365, label %352

365:                                              ; preds = %363, %345
  %366 = icmp eq %"class.net::OptRecordRdata::Opt"* %350, null
  br i1 %366, label %369, label %367

367:                                              ; preds = %365
  %368 = bitcast %"class.net::OptRecordRdata::Opt"* %350 to i8*
  tail call void @_ZdlPv(i8* %368) #14
  br label %369

369:                                              ; preds = %184, %367, %365, %56, %144, %4
  %370 = phi %"class.net::OptRecordRdata::Opt"* [ %1, %4 ], [ %1, %144 ], [ %1, %56 ], [ %224, %365 ], [ %224, %367 ], [ %1, %184 ]
  ret %"class.net::OptRecordRdata::Opt"* %370
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14OptRecordRdata15ContainsOptCodeEt(%"class.net::OptRecordRdata"* nocapture readonly, i16 zeroext) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %3, align 8
  %5 = getelementptr inbounds %"class.net::OptRecordRdata", %"class.net::OptRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %5, align 8
  %7 = icmp eq %"class.net::OptRecordRdata::Opt"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.net::OptRecordRdata::Opt"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.net::OptRecordRdata::Opt"* [ %15, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %11, i64 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, %1
  %15 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %11, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %10, %2
  %17 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14OptRecordRdata3OptC2EtN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::OptRecordRdata::Opt"*, i16 zeroext, i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 0
  store i16 %1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 1
  %7 = icmp ugt i64 %3, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #15
  unreachable

10:                                               ; preds = %4
  %11 = icmp ult i64 %3, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %3, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8, !alias.scope !82
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8, !alias.scope !82
  %19 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %19, align 8, !alias.scope !82
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %3 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1, !alias.scope !82
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %25 = icmp eq i64 %3, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %2, i64 %3, i1 false) #13
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %3
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14OptRecordRdata3OpteqERKS1_(%"class.net::OptRecordRdata::Opt"* nocapture readonly, %"class.net::OptRecordRdata::Opt"* nocapture readonly dereferenceable(32)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %48, label %60

44:                                               ; preds = %28
  br i1 %37, label %60, label %45

45:                                               ; preds = %44
  %46 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #13
  %47 = icmp eq i32 %46, 0
  br label %60

48:                                               ; preds = %39, %55
  %49 = phi i64 [ %52, %55 ], [ %17, %39 ]
  %50 = phi i8* [ %53, %55 ], [ %31, %39 ]
  %51 = phi i8* [ %56, %55 ], [ %36, %39 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %60

60:                                               ; preds = %55, %48, %39, %45, %44, %38, %8, %2
  %61 = phi i1 [ false, %2 ], [ false, %8 ], [ %47, %45 ], [ true, %44 ], [ true, %38 ], [ false, %39 ], [ true, %48 ], [ false, %55 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataC2ENSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.39"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %6 = bitcast %"class.std::__1::vector.39"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.39"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector.39"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 32, i1 false) #13, !alias.scope !85
  %21 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %4, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !85
  %23 = load i64, i64* %13, align 8, !noalias !85
  %24 = ptrtoint i8* %22 to i64
  %25 = sub i64 %23, %24
  %26 = tail call i8* @SHA256(i8* %22, i64 %25, i8* %20) #13
  %27 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 3
  store i8 1, i8* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"struct.std::__1::array.74"* noalias sret, %"class.std::__1::vector.39"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 32, i1 false)
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint i8* %5 to i64
  %10 = sub i64 %8, %9
  %11 = tail call i8* @SHA256(i8* %5, i64 %10, i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataC2ENSt3__16vectorIhNS1_9allocatorIhEEEENS1_5arrayIhLm32EEEm(%"class.net::IntegrityRecordRdata"*, %"class.std::__1::vector.39"* nocapture, %"struct.std::__1::array.74"* nocapture readonly byval(%"struct.std::__1::array.74") align 8, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::array.74", align 1
  %6 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector.39"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #13
  %9 = bitcast %"class.std::__1::vector.39"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.39"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i8** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.39"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #13
  %23 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %23, i64 0, i32 0, i64 0
  %25 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %2, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %25, i64 32, i1 false)
  %26 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 3
  %27 = load i64, i64* %16, align 8
  %28 = load i64, i64* %11, align 8
  %29 = add i64 %27, 34
  %30 = sub i64 %29, %28
  %31 = icmp eq i64 %30, %3
  %32 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #13
  br i1 %31, label %33, label %39

33:                                               ; preds = %4
  %34 = inttoptr i64 %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %32, i8 0, i64 32, i1 false) #13, !alias.scope !88
  %35 = sub i64 %27, %28
  %36 = call i8* @SHA256(i8* %34, i64 %35, i8* nonnull %32) #13
  %37 = call zeroext i1 @_ZNSt3__1eqIhLm32EEEbRKNS_5arrayIT_XT0_EEES5_(%"struct.std::__1::array.74"* nonnull dereferenceable(32) %5, %"struct.std::__1::array.74"* dereferenceable(32) %23)
  %38 = zext i1 %37 to i8
  br label %39

39:                                               ; preds = %33, %4
  %40 = phi i8 [ 0, %4 ], [ %38, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #13
  store i8 %40, i8* %26, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3net20IntegrityRecordRdata22LengthForSerializationERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.39"* nocapture readonly dereferenceable(24)) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %4, 34
  %8 = sub i64 %7, %6
  ret i64 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__1eqIhLm32EEEbRKNS_5arrayIT_XT0_EEES5_(%"struct.std::__1::array.74"* dereferenceable(32), %"struct.std::__1::array.74"* dereferenceable(32)) local_unnamed_addr #9 comdat {
  %3 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 0
  %4 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 0
  %5 = load i8, i8* %3, align 1
  %6 = load i8, i8* %4, align 1
  %7 = icmp eq i8 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 1
  %10 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 1
  %11 = load i8, i8* %9, align 1
  %12 = load i8, i8* %10, align 1
  %13 = icmp eq i8 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %183, %177, %171, %165, %159, %153, %147, %141, %135, %129, %123, %117, %111, %105, %99, %93, %87, %81, %75, %69, %63, %57, %51, %45, %39, %33, %27, %21, %15, %8, %2
  ret i1 false

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 2
  %17 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 2
  %18 = load i8, i8* %16, align 1
  %19 = load i8, i8* %17, align 1
  %20 = icmp eq i8 %18, %19
  br i1 %20, label %21, label %14

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 3
  %23 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 3
  %24 = load i8, i8* %22, align 1
  %25 = load i8, i8* %23, align 1
  %26 = icmp eq i8 %24, %25
  br i1 %26, label %27, label %14

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 4
  %29 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 4
  %30 = load i8, i8* %28, align 1
  %31 = load i8, i8* %29, align 1
  %32 = icmp eq i8 %30, %31
  br i1 %32, label %33, label %14

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 5
  %35 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 5
  %36 = load i8, i8* %34, align 1
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %36, %37
  br i1 %38, label %39, label %14

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 6
  %41 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 6
  %42 = load i8, i8* %40, align 1
  %43 = load i8, i8* %41, align 1
  %44 = icmp eq i8 %42, %43
  br i1 %44, label %45, label %14

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 7
  %47 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 7
  %48 = load i8, i8* %46, align 1
  %49 = load i8, i8* %47, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %14

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 8
  %53 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 8
  %54 = load i8, i8* %52, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %57, label %14

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 9
  %59 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 9
  %60 = load i8, i8* %58, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %63, label %14

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 10
  %65 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 10
  %66 = load i8, i8* %64, align 1
  %67 = load i8, i8* %65, align 1
  %68 = icmp eq i8 %66, %67
  br i1 %68, label %69, label %14

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 11
  %71 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 11
  %72 = load i8, i8* %70, align 1
  %73 = load i8, i8* %71, align 1
  %74 = icmp eq i8 %72, %73
  br i1 %74, label %75, label %14

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 12
  %77 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 12
  %78 = load i8, i8* %76, align 1
  %79 = load i8, i8* %77, align 1
  %80 = icmp eq i8 %78, %79
  br i1 %80, label %81, label %14

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 13
  %83 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 13
  %84 = load i8, i8* %82, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %87, label %14

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 14
  %89 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 14
  %90 = load i8, i8* %88, align 1
  %91 = load i8, i8* %89, align 1
  %92 = icmp eq i8 %90, %91
  br i1 %92, label %93, label %14

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 15
  %95 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 15
  %96 = load i8, i8* %94, align 1
  %97 = load i8, i8* %95, align 1
  %98 = icmp eq i8 %96, %97
  br i1 %98, label %99, label %14

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 16
  %101 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 16
  %102 = load i8, i8* %100, align 1
  %103 = load i8, i8* %101, align 1
  %104 = icmp eq i8 %102, %103
  br i1 %104, label %105, label %14

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 17
  %107 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 17
  %108 = load i8, i8* %106, align 1
  %109 = load i8, i8* %107, align 1
  %110 = icmp eq i8 %108, %109
  br i1 %110, label %111, label %14

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 18
  %113 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 18
  %114 = load i8, i8* %112, align 1
  %115 = load i8, i8* %113, align 1
  %116 = icmp eq i8 %114, %115
  br i1 %116, label %117, label %14

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 19
  %119 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 19
  %120 = load i8, i8* %118, align 1
  %121 = load i8, i8* %119, align 1
  %122 = icmp eq i8 %120, %121
  br i1 %122, label %123, label %14

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 20
  %125 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 20
  %126 = load i8, i8* %124, align 1
  %127 = load i8, i8* %125, align 1
  %128 = icmp eq i8 %126, %127
  br i1 %128, label %129, label %14

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 21
  %131 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 21
  %132 = load i8, i8* %130, align 1
  %133 = load i8, i8* %131, align 1
  %134 = icmp eq i8 %132, %133
  br i1 %134, label %135, label %14

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 22
  %137 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 22
  %138 = load i8, i8* %136, align 1
  %139 = load i8, i8* %137, align 1
  %140 = icmp eq i8 %138, %139
  br i1 %140, label %141, label %14

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 23
  %143 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 23
  %144 = load i8, i8* %142, align 1
  %145 = load i8, i8* %143, align 1
  %146 = icmp eq i8 %144, %145
  br i1 %146, label %147, label %14

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 24
  %149 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 24
  %150 = load i8, i8* %148, align 1
  %151 = load i8, i8* %149, align 1
  %152 = icmp eq i8 %150, %151
  br i1 %152, label %153, label %14

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 25
  %155 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 25
  %156 = load i8, i8* %154, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %159, label %14

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 26
  %161 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 26
  %162 = load i8, i8* %160, align 1
  %163 = load i8, i8* %161, align 1
  %164 = icmp eq i8 %162, %163
  br i1 %164, label %165, label %14

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 27
  %167 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 27
  %168 = load i8, i8* %166, align 1
  %169 = load i8, i8* %167, align 1
  %170 = icmp eq i8 %168, %169
  br i1 %170, label %171, label %14

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 28
  %173 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 28
  %174 = load i8, i8* %172, align 1
  %175 = load i8, i8* %173, align 1
  %176 = icmp eq i8 %174, %175
  br i1 %176, label %177, label %14

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 29
  %179 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 29
  %180 = load i8, i8* %178, align 1
  %181 = load i8, i8* %179, align 1
  %182 = icmp eq i8 %180, %181
  br i1 %182, label %183, label %14

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 30
  %185 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 30
  %186 = load i8, i8* %184, align 1
  %187 = load i8, i8* %185, align 1
  %188 = icmp eq i8 %186, %187
  br i1 %188, label %189, label %14

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %0, i64 0, i32 0, i64 31
  %191 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %1, i64 0, i32 0, i64 31
  %192 = load i8, i8* %190, align 1
  %193 = load i8, i8* %191, align 1
  %194 = icmp eq i8 %192, %193
  ret i1 %194
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataC2EOS0_(%"class.net::IntegrityRecordRdata"* nocapture, %"class.net::IntegrityRecordRdata"* nocapture dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.39"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %7 = bitcast %"class.std::__1::vector.39"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.39"* %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.std::__1::vector.39"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  %21 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2, i32 0, i64 0
  %22 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 33, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataC2ERKS0_(%"class.net::IntegrityRecordRdata"*, %"class.net::IntegrityRecordRdata"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector.39"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %7 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.39"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %36, label %14

14:                                               ; preds = %2
  %15 = icmp slt i64 %12, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = bitcast %"class.std::__1::vector.39"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #15
  unreachable

18:                                               ; preds = %14
  %19 = tail call i8* @_Znwm(i64 %12) #14
  %20 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %4, i64 0, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 %12
  %23 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %8, align 8
  %27 = bitcast i8** %20 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %26, %28
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %29, i1 false) #13
  %32 = getelementptr inbounds i8, i8* %19, i64 %29
  br label %33

33:                                               ; preds = %31, %18
  %34 = phi i8* [ %32, %31 ], [ %19, %18 ]
  %35 = ptrtoint i8* %34 to i64
  store i64 %35, i64* %27, align 8
  br label %36

36:                                               ; preds = %2, %33
  %37 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2, i32 0, i64 0
  %38 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 2, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 33, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataD2Ev(%"class.net::IntegrityRecordRdata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdataD0Ev(%"class.net::IntegrityRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.net::IntegrityRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net20IntegrityRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::IntegrityRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = bitcast %"class.net::IntegrityRecordRdata"* %0 to i16 (%"class.net::IntegrityRecordRdata"*)***
  %9 = load i16 (%"class.net::IntegrityRecordRdata"*)**, i16 (%"class.net::IntegrityRecordRdata"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.net::IntegrityRecordRdata"*)*, i16 (%"class.net::IntegrityRecordRdata"*)** %9, i64 3
  %11 = load i16 (%"class.net::IntegrityRecordRdata"*)*, i16 (%"class.net::IntegrityRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.net::IntegrityRecordRdata"* %0) #13
  %13 = icmp eq i16 %7, %12
  br i1 %13, label %14, label %60

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 8, !range !91
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %60, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 8
  %20 = bitcast %"class.net::RecordRdata"* %19 to i8*
  %21 = load i8, i8* %20, align 8, !range !91
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 1
  %26 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.39"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 2
  %33 = bitcast %"class.net::RecordRdata"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.net::RecordRdata"* %25 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = icmp eq i64 %31, %37
  %39 = inttoptr i64 %30 to i8*
  %40 = inttoptr i64 %28 to i8*
  br i1 %38, label %41, label %60

41:                                               ; preds = %23
  %42 = icmp eq i8* %39, %40
  br i1 %42, label %55, label %43

43:                                               ; preds = %41
  %44 = inttoptr i64 %36 to i8*
  br label %45

45:                                               ; preds = %43, %51
  %46 = phi i8* [ %53, %51 ], [ %44, %43 ]
  %47 = phi i8* [ %52, %51 ], [ %39, %43 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = icmp eq i8* %52, %40
  br i1 %54, label %55, label %45

55:                                               ; preds = %51, %41
  %56 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.net::RecordRdata", %"class.net::RecordRdata"* %1, i64 4
  %58 = bitcast %"class.net::RecordRdata"* %57 to %"struct.std::__1::array.74"*
  %59 = tail call zeroext i1 @_ZNSt3__1eqIhLm32EEEbRKNS_5arrayIT_XT0_EEES5_(%"struct.std::__1::array.74"* dereferenceable(32) %56, %"struct.std::__1::array.74"* dereferenceable(32) %58)
  br label %60

60:                                               ; preds = %45, %23, %55, %14, %18, %2
  %61 = phi i1 [ false, %2 ], [ false, %18 ], [ false, %14 ], [ %59, %55 ], [ false, %23 ], [ false, %45 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net20IntegrityRecordRdata4TypeEv(%"class.net::IntegrityRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 -15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::IntegrityRecordRdata"* @_ZN3net20IntegrityRecordRdata6CreateERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"struct.std::__1::array.74", align 1
  %4 = alloca %"class.base::BigEndianReader", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.std::__1::array.74", align 1
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.std::__1::vector.39", align 8
  %12 = bitcast %"class.base::BigEndianReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %14 = bitcast %"class.base::BigEndianReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load i8*, i8** %13, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %4, i8* %15, i64 %17) #13
  %18 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #13
  %21 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #13
  %24 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %4, %"class.base::BasicStringPiece"* nonnull %5) #13
  br i1 %24, label %25, label %27

25:                                               ; preds = %1
  %26 = call zeroext i1 @_ZN4base15BigEndianReader9ReadPieceEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(%"class.base::BigEndianReader"* nonnull %4, %"class.base::BasicStringPiece"* nonnull %6, i64 32) #13
  br label %27

27:                                               ; preds = %25, %1
  %28 = phi i1 [ false, %1 ], [ %26, %25 ]
  %29 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = call i8* @_Znwm(i64 48) #14
  store i8* %32, i8** %30, align 8
  %33 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %33, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %32, i8 0, i64 33, i1 false)
  br i1 %28, label %34, label %36

34:                                               ; preds = %27
  %35 = load i64, i64* %23, align 8
  br label %38

36:                                               ; preds = %27
  %37 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false)
  store i8* %32, i8** %22, align 8
  store i64 32, i64* %23, align 8
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ 32, %36 ]
  %40 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 0, i64 32, i1 false)
  %41 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %43 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = icmp eq i64 %39, 32
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* null, i8** %42, align 8
  br label %55

46:                                               ; preds = %38
  %47 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %48 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 32) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8* %47, i8* %48) #13
  %49 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* %50, i8** %42, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 430, %"class.logging::CheckOpResult"* nonnull %9) #13
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  br label %55

55:                                               ; preds = %45, %46, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  %56 = load i8*, i8** %22, align 8
  %57 = load i64, i64* %23, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %153, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %57, 32
  br i1 %61, label %143, label %62

62:                                               ; preds = %60
  %63 = and i64 %57, -32
  %64 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %63
  %65 = getelementptr i8, i8* %56, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %74
  %77 = getelementptr i8, i8* %56, i64 %74
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr i8, i8* %77, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1
  %83 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1
  %84 = getelementptr i8, i8* %76, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1
  %86 = or i64 %74, 32
  %87 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %86
  %88 = getelementptr i8, i8* %56, i64 %86
  %89 = bitcast i8* %88 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1
  %91 = getelementptr i8, i8* %88, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1
  %94 = bitcast i8* %87 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1
  %95 = getelementptr i8, i8* %87, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1
  %97 = or i64 %74, 64
  %98 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %97
  %99 = getelementptr i8, i8* %56, i64 %97
  %100 = bitcast i8* %99 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1
  %102 = getelementptr i8, i8* %99, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1
  %105 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1
  %106 = getelementptr i8, i8* %98, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1
  %108 = or i64 %74, 96
  %109 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %108
  %110 = getelementptr i8, i8* %56, i64 %108
  %111 = bitcast i8* %110 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1
  %113 = getelementptr i8, i8* %110, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1
  %116 = bitcast i8* %109 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1
  %117 = getelementptr i8, i8* %109, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !92

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 %126
  %129 = getelementptr i8, i8* %56, i64 %126
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1
  %132 = getelementptr i8, i8* %129, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1
  %135 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1
  %136 = getelementptr i8, i8* %128, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !93

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %57, %63
  br i1 %142, label %153, label %143

143:                                              ; preds = %141, %60
  %144 = phi i8* [ %40, %60 ], [ %64, %141 ]
  %145 = phi i8* [ %56, %60 ], [ %65, %141 ]
  br label %146

146:                                              ; preds = %143, %146
  %147 = phi i8* [ %151, %146 ], [ %144, %143 ]
  %148 = phi i8* [ %150, %146 ], [ %145, %143 ]
  %149 = load i8, i8* %148, align 1
  store i8 %149, i8* %147, align 1
  %150 = getelementptr inbounds i8, i8* %148, i64 1
  %151 = getelementptr inbounds i8, i8* %147, i64 1
  %152 = icmp eq i8* %150, %58
  br i1 %152, label %153, label %146, !llvm.loop !94

153:                                              ; preds = %146, %141, %55
  %154 = call i8* @_Znwm(i64 72) #14
  %155 = bitcast i8* %154 to %"class.net::IntegrityRecordRdata"*
  %156 = load i8*, i8** %19, align 8
  %157 = load i64, i64* %20, align 8
  %158 = getelementptr inbounds i8, i8* %156, i64 %157
  %159 = bitcast %"class.std::__1::vector.39"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 24, i1 false) #13
  %160 = icmp eq i64 %157, 0
  br i1 %160, label %276, label %161

161:                                              ; preds = %153
  %162 = icmp slt i64 %157, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %161
  %164 = bitcast %"class.std::__1::vector.39"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %164) #15
  unreachable

165:                                              ; preds = %161
  %166 = call i8* @_Znwm(i64 %157) #14
  %167 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 1
  store i8* %166, i8** %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 0
  store i8* %166, i8** %168, align 8
  %169 = getelementptr inbounds i8, i8* %166, i64 %157
  %170 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %169, i8** %170, align 8
  %171 = bitcast i8** %167 to i64*
  %172 = icmp ult i64 %157, 32
  br i1 %172, label %259, label %173

173:                                              ; preds = %165
  %174 = getelementptr i8, i8* %166, i64 %157
  %175 = icmp ult i8* %166, %158
  %176 = icmp ult i8* %156, %174
  %177 = and i1 %175, %176
  br i1 %177, label %259, label %178

178:                                              ; preds = %173
  %179 = and i64 %157, -32
  %180 = getelementptr i8, i8* %166, i64 %179
  %181 = getelementptr i8, i8* %156, i64 %179
  %182 = add i64 %179, -32
  %183 = lshr exact i64 %182, 5
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 3
  %186 = icmp ult i64 %182, 96
  br i1 %186, label %238, label %187

187:                                              ; preds = %178
  %188 = sub nsw i64 %184, %185
  br label %189

189:                                              ; preds = %189, %187
  %190 = phi i64 [ 0, %187 ], [ %235, %189 ]
  %191 = phi i64 [ %188, %187 ], [ %236, %189 ]
  %192 = getelementptr i8, i8* %166, i64 %190
  %193 = getelementptr i8, i8* %156, i64 %190
  %194 = bitcast i8* %193 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !96
  %196 = getelementptr i8, i8* %193, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !96
  %199 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !99, !noalias !96
  %200 = getelementptr i8, i8* %192, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %201, align 1, !alias.scope !99, !noalias !96
  %202 = or i64 %190, 32
  %203 = getelementptr i8, i8* %166, i64 %202
  %204 = getelementptr i8, i8* %156, i64 %202
  %205 = bitcast i8* %204 to <16 x i8>*
  %206 = load <16 x i8>, <16 x i8>* %205, align 1, !alias.scope !96
  %207 = getelementptr i8, i8* %204, i64 16
  %208 = bitcast i8* %207 to <16 x i8>*
  %209 = load <16 x i8>, <16 x i8>* %208, align 1, !alias.scope !96
  %210 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %206, <16 x i8>* %210, align 1, !alias.scope !99, !noalias !96
  %211 = getelementptr i8, i8* %203, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %212, align 1, !alias.scope !99, !noalias !96
  %213 = or i64 %190, 64
  %214 = getelementptr i8, i8* %166, i64 %213
  %215 = getelementptr i8, i8* %156, i64 %213
  %216 = bitcast i8* %215 to <16 x i8>*
  %217 = load <16 x i8>, <16 x i8>* %216, align 1, !alias.scope !96
  %218 = getelementptr i8, i8* %215, i64 16
  %219 = bitcast i8* %218 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1, !alias.scope !96
  %221 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %217, <16 x i8>* %221, align 1, !alias.scope !99, !noalias !96
  %222 = getelementptr i8, i8* %214, i64 16
  %223 = bitcast i8* %222 to <16 x i8>*
  store <16 x i8> %220, <16 x i8>* %223, align 1, !alias.scope !99, !noalias !96
  %224 = or i64 %190, 96
  %225 = getelementptr i8, i8* %166, i64 %224
  %226 = getelementptr i8, i8* %156, i64 %224
  %227 = bitcast i8* %226 to <16 x i8>*
  %228 = load <16 x i8>, <16 x i8>* %227, align 1, !alias.scope !96
  %229 = getelementptr i8, i8* %226, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  %231 = load <16 x i8>, <16 x i8>* %230, align 1, !alias.scope !96
  %232 = bitcast i8* %225 to <16 x i8>*
  store <16 x i8> %228, <16 x i8>* %232, align 1, !alias.scope !99, !noalias !96
  %233 = getelementptr i8, i8* %225, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %231, <16 x i8>* %234, align 1, !alias.scope !99, !noalias !96
  %235 = add i64 %190, 128
  %236 = add i64 %191, -4
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %189, !llvm.loop !101

238:                                              ; preds = %189, %178
  %239 = phi i64 [ 0, %178 ], [ %235, %189 ]
  %240 = icmp eq i64 %185, 0
  br i1 %240, label %257, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %254, %241 ], [ %239, %238 ]
  %243 = phi i64 [ %255, %241 ], [ %185, %238 ]
  %244 = getelementptr i8, i8* %166, i64 %242
  %245 = getelementptr i8, i8* %156, i64 %242
  %246 = bitcast i8* %245 to <16 x i8>*
  %247 = load <16 x i8>, <16 x i8>* %246, align 1, !alias.scope !96
  %248 = getelementptr i8, i8* %245, i64 16
  %249 = bitcast i8* %248 to <16 x i8>*
  %250 = load <16 x i8>, <16 x i8>* %249, align 1, !alias.scope !96
  %251 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %247, <16 x i8>* %251, align 1, !alias.scope !99, !noalias !96
  %252 = getelementptr i8, i8* %244, i64 16
  %253 = bitcast i8* %252 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %253, align 1, !alias.scope !99, !noalias !96
  %254 = add i64 %242, 32
  %255 = add i64 %243, -1
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %241, !llvm.loop !102

257:                                              ; preds = %241, %238
  %258 = icmp eq i64 %157, %179
  br i1 %258, label %269, label %259

259:                                              ; preds = %257, %173, %165
  %260 = phi i8* [ %166, %173 ], [ %166, %165 ], [ %180, %257 ]
  %261 = phi i8* [ %156, %173 ], [ %156, %165 ], [ %181, %257 ]
  br label %262

262:                                              ; preds = %259, %262
  %263 = phi i8* [ %267, %262 ], [ %260, %259 ]
  %264 = phi i8* [ %266, %262 ], [ %261, %259 ]
  %265 = load i8, i8* %264, align 1
  store i8 %265, i8* %263, align 1
  %266 = getelementptr inbounds i8, i8* %264, i64 1
  %267 = getelementptr inbounds i8, i8* %263, i64 1
  %268 = icmp eq i8* %266, %158
  br i1 %268, label %269, label %262, !llvm.loop !103

269:                                              ; preds = %262, %257
  %270 = phi i8* [ %180, %257 ], [ %267, %262 ]
  %271 = bitcast %"class.std::__1::vector.39"* %11 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast i8** %170 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = ptrtoint i8* %270 to i64
  store i64 %275, i64* %171, align 8
  br label %276

276:                                              ; preds = %153, %269
  %277 = phi i64 [ %274, %269 ], [ 0, %153 ]
  %278 = phi i64 [ %275, %269 ], [ 0, %153 ]
  %279 = phi i64 [ %272, %269 ], [ 0, %153 ]
  %280 = load i64, i64* %16, align 8
  %281 = bitcast i8* %154 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %281, align 8
  %282 = getelementptr inbounds i8, i8* %154, i64 8
  %283 = bitcast i8* %282 to i64*
  store i64 %279, i64* %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 1
  %285 = bitcast i8** %284 to i64*
  %286 = getelementptr inbounds i8, i8* %154, i64 16
  %287 = bitcast i8* %286 to i64*
  store i64 %278, i64* %287, align 8
  %288 = getelementptr inbounds i8, i8* %154, i64 24
  %289 = bitcast i8* %288 to i64*
  store i64 %277, i64* %289, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 24, i1 false) #13
  %290 = getelementptr inbounds i8, i8* %154, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* nonnull align 1 %40, i64 32, i1 false)
  %291 = getelementptr inbounds i8, i8* %154, i64 64
  %292 = sub i64 34, %279
  %293 = add i64 %292, %278
  %294 = icmp eq i64 %293, %280
  %295 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %295) #13
  br i1 %294, label %297, label %296

296:                                              ; preds = %276
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %295) #13
  store i8 0, i8* %291, align 8
  br label %309

297:                                              ; preds = %276
  %298 = bitcast i8* %290 to %"struct.std::__1::array.74"*
  %299 = inttoptr i64 %279 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %295, i8 0, i64 32, i1 false) #13, !alias.scope !104
  %300 = sub i64 %278, %279
  %301 = call i8* @SHA256(i8* %299, i64 %300, i8* nonnull %295) #13
  %302 = call zeroext i1 @_ZNSt3__1eqIhLm32EEEbRKNS_5arrayIT_XT0_EEES5_(%"struct.std::__1::array.74"* nonnull dereferenceable(32) %3, %"struct.std::__1::array.74"* dereferenceable(32) %298) #13
  %303 = zext i1 %302 to i8
  %304 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %295) #13
  store i8 %303, i8* %291, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %297
  %308 = ptrtoint i8* %305 to i64
  store i64 %308, i64* %285, align 8
  call void @_ZdlPv(i8* nonnull %305) #14
  br label %309

309:                                              ; preds = %296, %297, %307
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #13
  %310 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %311 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %310, i64 0, i32 1, i32 0
  %312 = load i8, i8* %311, align 1
  %313 = icmp slt i8 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %309
  %315 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %315) #14
  br label %316

316:                                              ; preds = %309, %314
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  ret %"class.net::IntegrityRecordRdata"* %155
}

declare zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20IntegrityRecordRdata6RandomEv(%"class.net::IntegrityRecordRdata"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN4base7RandIntEii(i32 32, i32 512) #13
  %3 = and i32 %2, 65535
  %4 = zext i32 %3 to i64
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 %4) #14
  %8 = ptrtoint i8* %7 to i64
  %9 = getelementptr inbounds i8, i8* %7, i64 %4
  %10 = ptrtoint i8* %9 to i64
  %11 = sub i64 %4, %8
  %12 = getelementptr i8, i8* %7, i64 %11
  %13 = ptrtoint i8* %12 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 0, i64 %13, i1 false) #13
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi i64 [ 0, %1 ], [ %8, %6 ]
  %16 = phi i64 [ 0, %1 ], [ %10, %6 ]
  %17 = inttoptr i64 %15 to i8*
  %18 = sub i64 %16, %15
  tail call void @_ZN4base9RandBytesEPvm(i8* %17, i64 %18) #13
  %19 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20IntegrityRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1
  %21 = bitcast %"class.std::__1::vector.39"* %20 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i8** %24 to i64*
  store i64 %16, i64* %25, align 8
  %26 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 2, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 32, i1 false) #13, !alias.scope !107
  %27 = tail call i8* @SHA256(i8* %17, i64 %18, i8* %26) #13
  %28 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %0, i64 0, i32 3
  store i8 1, i8* %28, align 8
  ret void
}

declare i32 @_ZN4base7RandIntEii(i32, i32) local_unnamed_addr #2

declare void @_ZN4base9RandBytesEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20IntegrityRecordRdata9SerializeEv(%"class.absl::optional"* noalias nocapture sret, %"class.net::IntegrityRecordRdata"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.std::__1::vector.39", align 8
  %5 = alloca %"class.base::BigEndianWriter", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !91
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.81* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  br label %113

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::vector.39"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %4, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1
  %24 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.39"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %26, 34
  %30 = sub i64 %29, %28
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %18
  %33 = bitcast i8** %21 to i64*
  br label %47

34:                                               ; preds = %18
  %35 = icmp slt i64 %30, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.39"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #15
  unreachable

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 %30) #14
  store i8* %39, i8** %20, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %30
  store i8* %40, i8** %22, align 8
  %41 = bitcast i8** %21 to i64*
  %42 = ptrtoint i8* %39 to i64
  %43 = sub i64 %30, %42
  %44 = getelementptr i8, i8* %39, i64 %43
  %45 = ptrtoint i8* %44 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 %45, i1 false) #13
  %46 = ptrtoint i8* %40 to i64
  store i64 %46, i64* %41, align 8
  br label %47

47:                                               ; preds = %32, %38
  %48 = phi i64* [ %33, %32 ], [ %41, %38 ]
  %49 = phi i64 [ 0, %32 ], [ %46, %38 ]
  %50 = phi i8* [ null, %32 ], [ %39, %38 ]
  %51 = bitcast %"class.base::BigEndianWriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #13
  %52 = getelementptr inbounds %"class.base::BigEndianWriter", %"class.base::BigEndianWriter"* %5, i64 0, i32 1
  %53 = bitcast %"class.std::__1::vector.39"* %4 to i64*
  %54 = ptrtoint i8* %50 to i64
  %55 = sub i64 %49, %54
  %56 = bitcast %"class.base::BigEndianWriter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  call void @_ZN4base15BigEndianWriterC1EPcm(%"class.base::BigEndianWriter"* nonnull %5, i8* %50, i64 %55) #13
  %57 = load i64, i64* %25, align 8
  %58 = load i64, i64* %27, align 8
  %59 = sub i64 %57, %58
  %60 = trunc i64 %59 to i16
  %61 = call zeroext i1 @_ZN4base15BigEndianWriter8WriteU16Et(%"class.base::BigEndianWriter"* nonnull %5, i16 zeroext %60) #13
  br i1 %61, label %65, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 471, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0)) #13
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #13
  br label %65

65:                                               ; preds = %47, %62
  %66 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %23, i64 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = load i64, i64* %25, align 8
  %69 = ptrtoint i8* %67 to i64
  %70 = sub i64 %68, %69
  %71 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* nonnull %5, i8* %67, i64 %70) #13
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 472, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0)) #13
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #13
  br label %75

75:                                               ; preds = %65, %72
  %76 = getelementptr inbounds %"class.net::IntegrityRecordRdata", %"class.net::IntegrityRecordRdata"* %1, i64 0, i32 2, i32 0, i64 0
  %77 = call zeroext i1 @_ZN4base15BigEndianWriter10WriteBytesEPKvm(%"class.base::BigEndianWriter"* nonnull %5, i8* %76, i64 32) #13
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 473, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #13
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #13
  br label %81

81:                                               ; preds = %75, %78
  %82 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %83, align 8
  %84 = bitcast i8** %52 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.base::BigEndianWriter"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* null, i8** %83, align 8
  br label %101

92:                                               ; preds = %81
  %93 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %88) #13
  %94 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* %93, i8* %94) #13
  %95 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* %96, i8** %83, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 474, %"class.logging::CheckOpResult"* nonnull %9) #13
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  br label %101

101:                                              ; preds = %98, %92, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  %102 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %102, align 8
  %103 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %104 = load i64, i64* %53, align 8
  %105 = bitcast %"class.std::__1::vector.39"* %103 to i64*
  store i64 %104, i64* %105, align 8
  %106 = load i64, i64* %48, align 8
  %107 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %108 = bitcast i8** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast i8** %22 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast i8** %111 to i64*
  store i64 %110, i64* %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br label %113

113:                                              ; preds = %101, %14
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @SHA256(i8*, i64, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !91
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #13
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #14
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.53"*, %"class.net::OptRecordRdata::Opt"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::OptRecordRdata::Opt"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::OptRecordRdata::Opt"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.net::OptRecordRdata::Opt"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.net::OptRecordRdata::Opt"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %9
  %38 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %35
  %39 = ptrtoint %"class.net::OptRecordRdata::Opt"* %38 to i64
  %40 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 0
  %42 = load i16, i16* %41, align 8
  store i16 %42, i16* %40, align 8
  %43 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  %47 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 1
  %48 = ptrtoint %"class.net::OptRecordRdata::Opt"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %49, align 8
  %51 = ptrtoint %"class.net::OptRecordRdata::Opt"* %50 to i64
  %52 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %3, align 8
  %53 = icmp eq %"class.net::OptRecordRdata::Opt"* %52, %50
  br i1 %53, label %99, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %52, i64 -1, i32 0
  %56 = ptrtoint i16* %55 to i64
  %57 = sub i64 %56, %51
  %58 = and i64 %57, 32
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %52, i64 -1
  %62 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1, i32 0
  %63 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %61, i64 0, i32 0
  %64 = load i16, i16* %63, align 8
  store i16 %64, i16* %62, align 8
  %65 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1, i32 1
  %66 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %52, i64 -1, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #13
  %69 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1
  br label %70

70:                                               ; preds = %60, %54
  %71 = phi %"class.net::OptRecordRdata::Opt"* [ undef, %54 ], [ %69, %60 ]
  %72 = phi %"class.net::OptRecordRdata::Opt"* [ %37, %54 ], [ %69, %60 ]
  %73 = phi %"class.net::OptRecordRdata::Opt"* [ %52, %54 ], [ %61, %60 ]
  %74 = icmp ult i64 %57, 32
  br i1 %74, label %95, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.net::OptRecordRdata::Opt"* [ %93, %75 ], [ %72, %70 ]
  %77 = phi %"class.net::OptRecordRdata::Opt"* [ %85, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %76, i64 -1, i32 0
  %79 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %77, i64 -1, i32 0
  %80 = load i16, i16* %79, align 8
  store i16 %80, i16* %78, align 8
  %81 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %76, i64 -1, i32 1
  %82 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %77, i64 -1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #13
  %85 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %77, i64 -2
  %86 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %76, i64 -2, i32 0
  %87 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %85, i64 0, i32 0
  %88 = load i16, i16* %87, align 8
  store i16 %88, i16* %86, align 8
  %89 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %76, i64 -2, i32 1
  %90 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %77, i64 -2, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #13
  %93 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %76, i64 -2
  %94 = icmp eq %"class.net::OptRecordRdata::Opt"* %85, %50
  br i1 %94, label %95, label %75

95:                                               ; preds = %75, %70
  %96 = phi %"class.net::OptRecordRdata::Opt"* [ %71, %70 ], [ %93, %75 ]
  %97 = load i64, i64* %6, align 8
  %98 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %3, align 8
  br label %99

99:                                               ; preds = %34, %95
  %100 = phi %"class.net::OptRecordRdata::Opt"* [ %98, %95 ], [ %50, %34 ]
  %101 = phi %"class.net::OptRecordRdata::Opt"* [ %96, %95 ], [ %37, %34 ]
  %102 = phi i64 [ %97, %95 ], [ %51, %34 ]
  %103 = ptrtoint %"class.net::OptRecordRdata::Opt"* %101 to i64
  store i64 %103, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %104 = inttoptr i64 %102 to %"class.net::OptRecordRdata::Opt"*
  %105 = icmp eq %"class.net::OptRecordRdata::Opt"* %100, %104
  br i1 %105, label %119, label %106

106:                                              ; preds = %99, %117
  %107 = phi %"class.net::OptRecordRdata::Opt"* [ %108, %117 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %107, i64 -1
  %109 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %107, i64 -1, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #14
  br label %117

117:                                              ; preds = %114, %106
  %118 = icmp eq %"class.net::OptRecordRdata::Opt"* %108, %104
  br i1 %118, label %119, label %106

119:                                              ; preds = %117, %99
  %120 = icmp eq i64 %102, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %102 to i8*
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %119, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector.60"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #13
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.60"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.60"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #15
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #14
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #13
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #13
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #14
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net14OptRecordRdata3OptENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.53"*, %"class.net::OptRecordRdata::Opt"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::OptRecordRdata::Opt"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.53"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::OptRecordRdata::Opt"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.net::OptRecordRdata::Opt"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.net::OptRecordRdata::Opt"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %9
  %38 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %35
  %39 = ptrtoint %"class.net::OptRecordRdata::Opt"* %38 to i64
  %40 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 0
  %42 = load i16, i16* %41, align 8
  store i16 %42, i16* %40, align 8
  %43 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %34
  %50 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #13
  br label %57

52:                                               ; preds = %34
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %54, i64 %56) #13
  br label %57

57:                                               ; preds = %49, %52
  %58 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 1
  %59 = ptrtoint %"class.net::OptRecordRdata::Opt"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.53", %"class.std::__1::vector.53"* %0, i64 0, i32 0, i32 0
  %61 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %60, align 8
  %62 = ptrtoint %"class.net::OptRecordRdata::Opt"* %61 to i64
  %63 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %3, align 8
  %64 = icmp eq %"class.net::OptRecordRdata::Opt"* %63, %61
  br i1 %64, label %110, label %65

65:                                               ; preds = %57
  %66 = getelementptr %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 -1, i32 0
  %67 = ptrtoint i16* %66 to i64
  %68 = sub i64 %67, %62
  %69 = and i64 %68, 32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %81

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 -1
  %73 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1, i32 0
  %74 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %72, i64 0, i32 0
  %75 = load i16, i16* %74, align 8
  store i16 %75, i16* %73, align 8
  %76 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1, i32 1
  %77 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %63, i64 -1, i32 1
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %37, i64 -1
  br label %81

81:                                               ; preds = %71, %65
  %82 = phi %"class.net::OptRecordRdata::Opt"* [ undef, %65 ], [ %80, %71 ]
  %83 = phi %"class.net::OptRecordRdata::Opt"* [ %37, %65 ], [ %80, %71 ]
  %84 = phi %"class.net::OptRecordRdata::Opt"* [ %63, %65 ], [ %72, %71 ]
  %85 = icmp ult i64 %68, 32
  br i1 %85, label %106, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"class.net::OptRecordRdata::Opt"* [ %104, %86 ], [ %83, %81 ]
  %88 = phi %"class.net::OptRecordRdata::Opt"* [ %96, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %87, i64 -1, i32 0
  %90 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %88, i64 -1, i32 0
  %91 = load i16, i16* %90, align 8
  store i16 %91, i16* %89, align 8
  %92 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %87, i64 -1, i32 1
  %93 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %88, i64 -1, i32 1
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #13
  %96 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %88, i64 -2
  %97 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %87, i64 -2, i32 0
  %98 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %96, i64 0, i32 0
  %99 = load i16, i16* %98, align 8
  store i16 %99, i16* %97, align 8
  %100 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %87, i64 -2, i32 1
  %101 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %88, i64 -2, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %103 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #13
  %104 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %87, i64 -2
  %105 = icmp eq %"class.net::OptRecordRdata::Opt"* %96, %61
  br i1 %105, label %106, label %86

106:                                              ; preds = %86, %81
  %107 = phi %"class.net::OptRecordRdata::Opt"* [ %82, %81 ], [ %104, %86 ]
  %108 = load i64, i64* %6, align 8
  %109 = load %"class.net::OptRecordRdata::Opt"*, %"class.net::OptRecordRdata::Opt"** %3, align 8
  br label %110

110:                                              ; preds = %57, %106
  %111 = phi %"class.net::OptRecordRdata::Opt"* [ %109, %106 ], [ %61, %57 ]
  %112 = phi %"class.net::OptRecordRdata::Opt"* [ %107, %106 ], [ %37, %57 ]
  %113 = phi i64 [ %108, %106 ], [ %62, %57 ]
  %114 = ptrtoint %"class.net::OptRecordRdata::Opt"* %112 to i64
  store i64 %114, i64* %6, align 8
  store i64 %59, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %115 = inttoptr i64 %113 to %"class.net::OptRecordRdata::Opt"*
  %116 = icmp eq %"class.net::OptRecordRdata::Opt"* %111, %115
  br i1 %116, label %130, label %117

117:                                              ; preds = %110, %128
  %118 = phi %"class.net::OptRecordRdata::Opt"* [ %119, %128 ], [ %111, %110 ]
  %119 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %118, i64 -1
  %120 = getelementptr inbounds %"class.net::OptRecordRdata::Opt", %"class.net::OptRecordRdata::Opt"* %118, i64 -1, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #14
  br label %128

128:                                              ; preds = %125, %117
  %129 = icmp eq %"class.net::OptRecordRdata::Opt"* %119, %115
  br i1 %129, label %130, label %117

130:                                              ; preds = %128, %110
  %131 = icmp eq i64 %113, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = inttoptr i64 %113 to i8*
  tail call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %130, %132
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !11}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !11}
!29 = distinct !{!29, !13}
!30 = distinct !{!30, !11}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !11}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !11}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !11}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !11}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!49 = distinct !{!49, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !11}
!56 = distinct !{!56, !13}
!57 = distinct !{!57, !11}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !11}
!64 = distinct !{!64, !13}
!65 = distinct !{!65, !11}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !11}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !11}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !13}
!81 = distinct !{!81, !11}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!84 = distinct !{!84, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE: argument 0"}
!87 = distinct !{!87, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE: argument 0"}
!90 = distinct !{!90, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE"}
!91 = !{i8 0, i8 2}
!92 = distinct !{!92, !11}
!93 = distinct !{!93, !13}
!94 = distinct !{!94, !95, !11}
!95 = !{!"llvm.loop.unroll.runtime.disable"}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !11}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !11}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE: argument 0"}
!106 = distinct !{!106, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE: argument 0"}
!109 = distinct !{!109, !"_ZN3net20IntegrityRecordRdata4HashERKNSt3__16vectorIhNS1_9allocatorIhEEEE"}
