; ModuleID = '../../third_party/skia/src/codec/SkPngCodec.cpp'
source_filename = "../../third_party/skia/src/codec/SkPngCodec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPngCodec = type <{ %class.SkCodec.base, [6 x i8], %class.sk_sp.16, %"struct.SkPngCodec::voidp", %"struct.SkPngCodec::voidp", %class.sk_sp.17, %"class.std::__1::unique_ptr.18", %class.SkAutoTMalloc, i8*, i32, i32, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.SkCodec.base = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8 }>
%struct.SkEncodedInfo = type { i32, i32, i32, i32, i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkEncodedInfo::ICCProfile"* }
%"class.SkEncodedInfo::ICCProfile" = type { %struct.skcms_ICCProfile, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.SkStream* }
%class.SkStream = type { i32 (...)** }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.10, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.10 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.SkCodec::Options" = type { i32, %struct.SkIRect*, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.1, [8 x i8] }
%struct.anon.1 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%class.sk_sp.16 = type { %class.SkPngChunkReader* }
%class.SkPngChunkReader = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.SkPngCodec::voidp" = type { i8* }
%class.sk_sp.17 = type { %class.SkColorTable* }
%class.SkColorTable = type <{ %class.SkRefCnt.base, [4 x i8], i32*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.SkSwizzler* }
%class.SkSwizzler = type <{ %class.SkSampler.base, [4 x i8], void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, void (i8*, i8*, i32, i32, i32, i32, i32*)*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSampler.base = type <{ i32 (...)**, i32 }>
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%struct.png_struct_def = type opaque
%class.AutoCleanPng = type { %struct.png_struct_def*, %struct.png_info_def*, %class.SkStream*, %class.SkPngChunkReader*, %class.SkCodec** }
%struct.png_info_def = type opaque
%class.SkCodec = type <{ i32 (...)**, %struct.SkEncodedInfo, i32, [4 x i8], %"class.std::__1::unique_ptr.3", i8, [3 x i8], i32, %struct.SkImageInfo, %"struct.SkCodec::Options", i32, i32, %struct.skcms_ICCProfile, i32, i32, i8, i8, [6 x i8] }>
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.anon = type { i32, %struct.skcms_TransferFunction }
%class.SkSampler = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.34", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.34" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.35", %class.sk_sp, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.35" = type { [4 x %class.SkPixmap] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCodec::FrameInfo" = type { i32, i32, i8, i32, i8, i32, i32, %struct.SkIRect }
%class.SkFrameHolder = type opaque
%class.SkPngNormalDecoder = type <{ %class.SkPngCodec.base, [3 x i8], i32, i8*, i64, i32, i32, i32, [4 x i8] }>
%class.SkPngCodec.base = type <{ %class.SkCodec.base, [6 x i8], %class.sk_sp.16, %"struct.SkPngCodec::voidp", %"struct.SkPngCodec::voidp", %class.sk_sp.17, %"class.std::__1::unique_ptr.18", %class.SkAutoTMalloc, i8*, i32, i32, i32, [4 x i8], i64, i8 }>
%class.SkPngInterlacedDecoder = type { %class.SkPngCodec.base, i32, i32, i32, i8*, i64, i32, i8, i64, %class.SkAutoTMalloc }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }

$_ZNK7SkCodec21onGetScaledDimensionsEf = comdat any

$_ZN7SkCodec21onDimensionsSupportedERK7SkISize = comdat any

$_ZNK10SkPngCodec18onGetEncodedFormatEv = comdat any

$_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZNK7SkCodec16onGetValidSubsetEP7SkIRect = comdat any

$_ZNK7SkCodec18onGetScanlineOrderEv = comdat any

$_ZNK7SkCodec14usesColorXformEv = comdat any

$_ZN7SkCodec15onGetFrameCountEv = comdat any

$_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE = comdat any

$_ZN7SkCodec20onGetRepetitionCountEv = comdat any

$_ZNK7SkCodec14getFrameHolderEv = comdat any

$_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE = comdat any

$_ZN7SkCodec15onSkipScanlinesEi = comdat any

$_ZN7SkCodec14onGetScanlinesEPvim = comdat any

$_ZN18SkPngNormalDecoderD0Ev = comdat any

$_ZN18SkPngNormalDecoder13decodeAllRowsEPvmPi = comdat any

$_ZN18SkPngNormalDecoder8setRangeEiiPvm = comdat any

$_ZN18SkPngNormalDecoder6decodeEPi = comdat any

$_ZN18SkPngNormalDecoder15AllRowsCallbackEP14png_struct_defPhji = comdat any

$_ZN18SkPngNormalDecoder15allRowsCallbackEPhi = comdat any

$_ZN18SkPngNormalDecoder11RowCallbackEP14png_struct_defPhji = comdat any

$_ZN18SkPngNormalDecoder11rowCallbackEPhi = comdat any

$_ZN22SkPngInterlacedDecoderD2Ev = comdat any

$_ZN22SkPngInterlacedDecoderD0Ev = comdat any

$_ZN22SkPngInterlacedDecoder13decodeAllRowsEPvmPi = comdat any

$_ZN22SkPngInterlacedDecoder8setRangeEiiPvm = comdat any

$_ZN22SkPngInterlacedDecoder6decodeEPi = comdat any

$_ZN22SkPngInterlacedDecoder21InterlacedRowCallbackEP14png_struct_defPhji = comdat any

$_ZN22SkPngInterlacedDecoder21interlacedRowCallbackEPhii = comdat any

$_ZTV18SkPngNormalDecoder = comdat any

$_ZTV22SkPngInterlacedDecoder = comdat any

@_ZN6SkOpts11RGB_to_RGB1E = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZN6SkOpts11RGB_to_BGR1E = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@_ZTV10SkPngCodec = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPngCodec*)* @_ZN10SkPngCodecD2Ev to i8*), i8* bitcast (void (%class.SkPngCodec*)* @_ZN10SkPngCodecD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkPngCodec*)* @_ZNK10SkPngCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN10SkPngCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkPngCodec*)* @_ZN10SkPngCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN10SkPngCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, i32*)* @_ZN10SkPngCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, i32)* @_ZN7SkCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkCodec*, i8*, i32, i64)* @_ZN7SkCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkPngCodec*, i1)* @_ZN10SkPngCodec10getSamplerEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN6SkOpts8memset32E = external local_unnamed_addr global void (i32*, i32, i32)*, align 8
@_ZTV18SkPngNormalDecoder = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPngCodec*)* @_ZN10SkPngCodecD2Ev to i8*), i8* bitcast (void (%class.SkPngNormalDecoder*)* @_ZN18SkPngNormalDecoderD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkPngCodec*)* @_ZNK10SkPngCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN10SkPngCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkPngCodec*)* @_ZN10SkPngCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN10SkPngCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, i32*)* @_ZN10SkPngCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, i32)* @_ZN7SkCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkCodec*, i8*, i32, i64)* @_ZN7SkCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkPngCodec*, i1)* @_ZN10SkPngCodec10getSamplerEb to i8*), i8* bitcast (i32 (%class.SkPngNormalDecoder*, i8*, i64, i32*)* @_ZN18SkPngNormalDecoder13decodeAllRowsEPvmPi to i8*), i8* bitcast (void (%class.SkPngNormalDecoder*, i32, i32, i8*, i64)* @_ZN18SkPngNormalDecoder8setRangeEiiPvm to i8*), i8* bitcast (i32 (%class.SkPngNormalDecoder*, i32*)* @_ZN18SkPngNormalDecoder6decodeEPi to i8*)] }, comdat, align 8
@_ZTV22SkPngInterlacedDecoder = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPngInterlacedDecoder*)* @_ZN22SkPngInterlacedDecoderD2Ev to i8*), i8* bitcast (void (%class.SkPngInterlacedDecoder*)* @_ZN22SkPngInterlacedDecoderD0Ev to i8*), i8* bitcast (i64 (%class.SkCodec*, float)* @_ZNK7SkCodec21onGetScaledDimensionsEf to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkISize*)* @_ZN7SkCodec21onDimensionsSupportedERK7SkISize to i8*), i8* bitcast (i32 (%class.SkPngCodec*)* @_ZNK10SkPngCodec18onGetEncodedFormatEv to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*, i32*)* @_ZN10SkPngCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i32 (%class.SkCodec*, %class.SkYUVAPixmaps*)* @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkIRect*)* @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkPngCodec*)* @_ZN10SkPngCodec8onRewindEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZNK7SkCodec18onGetScanlineOrderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, i32)* @_ZNK7SkCodec16onOutputScanlineEi to i8*), i8* bitcast (i1 (%class.SkCodec*, %struct.SkImageInfo*, i1, i1)* @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb to i8*), i8* bitcast (i1 (%class.SkCodec*)* @_ZNK7SkCodec14usesColorXformEv to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec15onGetFrameCountEv to i8*), i8* bitcast (i1 (%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*)* @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE to i8*), i8* bitcast (i32 (%class.SkCodec*)* @_ZN7SkCodec20onGetRepetitionCountEv to i8*), i8* bitcast (%class.SkFrameHolder* (%class.SkCodec*)* @_ZNK7SkCodec14getFrameHolderEv to i8*), i8* bitcast (i32 (%class.SkCodec*, %struct.SkImageInfo*, %"struct.SkCodec::Options"*)* @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, %struct.SkImageInfo*, i8*, i64, %"struct.SkCodec::Options"*)* @_ZN10SkPngCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE to i8*), i8* bitcast (i32 (%class.SkPngCodec*, i32*)* @_ZN10SkPngCodec19onIncrementalDecodeEPi to i8*), i8* bitcast (i1 (%class.SkCodec*, i32)* @_ZN7SkCodec15onSkipScanlinesEi to i8*), i8* bitcast (i32 (%class.SkCodec*, i8*, i32, i64)* @_ZN7SkCodec14onGetScanlinesEPvim to i8*), i8* bitcast (%class.SkSampler* (%class.SkPngCodec*, i1)* @_ZN10SkPngCodec10getSamplerEb to i8*), i8* bitcast (i32 (%class.SkPngInterlacedDecoder*, i8*, i64, i32*)* @_ZN22SkPngInterlacedDecoder13decodeAllRowsEPvmPi to i8*), i8* bitcast (void (%class.SkPngInterlacedDecoder*, i32, i32, i8*, i64)* @_ZN22SkPngInterlacedDecoder8setRangeEiiPvm to i8*), i8* bitcast (i32 (%class.SkPngInterlacedDecoder*, i32*)* @_ZN22SkPngInterlacedDecoder6decodeEPi to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN10SkPngCodecD1Ev = hidden unnamed_addr alias void (%class.SkPngCodec*), void (%class.SkPngCodec*)* @_ZN10SkPngCodecD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_Z13sk_warning_fnP14png_struct_defPKc(%struct.png_struct_def* nocapture, i8* nocapture) #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12AutoCleanPng12decodeBoundsEv(%class.AutoCleanPng* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca [4096 x i8], align 16
  %3 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 0
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %4, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %6 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %5, i64 0, i64 0
  %7 = call i32 @_setjmp(%struct.__jmp_buf_tag* %6) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %71

9:                                                ; preds = %1
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %10, i8* null, void (%struct.png_struct_def*, %struct.png_info_def*)* null, void (%struct.png_struct_def*, i8*, i32, i32)* null, void (%struct.png_struct_def*, %struct.png_info_def*)* null) #14
  %11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 4096, i1 false)
  %12 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 2
  %13 = load %class.SkStream*, %class.SkStream** %12, align 8
  %14 = bitcast %class.SkStream* %13 to i64 (%class.SkStream*, i8*, i64)***
  %15 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %14, align 8
  %16 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %15, i64 2
  %17 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %16, align 8
  %18 = call i64 %17(%class.SkStream* %13, i8* nonnull %11, i64 8) #14
  %19 = icmp ult i64 %18, 8
  br i1 %19, label %69, label %20

20:                                               ; preds = %9
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %22 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 1
  %23 = load %struct.png_info_def*, %struct.png_info_def** %22, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %21, %struct.png_info_def* %23, i8* nonnull %11, i64 8) #14
  %24 = load %class.SkStream*, %class.SkStream** %12, align 8
  %25 = bitcast %class.SkStream* %24 to i64 (%class.SkStream*, i8*, i64)***
  %26 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %26, i64 2
  %28 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %27, align 8
  %29 = call i64 %28(%class.SkStream* %24, i8* nonnull %11, i64 8) #14
  %30 = icmp ult i64 %29, 8
  br i1 %30, label %69, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 4
  %33 = bitcast i8* %32 to i32*
  br label %42

34:                                               ; preds = %57
  %35 = load %class.SkStream*, %class.SkStream** %12, align 8
  %36 = bitcast %class.SkStream* %35 to i64 (%class.SkStream*, i8*, i64)***
  %37 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %36, align 8
  %38 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %37, i64 2
  %39 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %38, align 8
  %40 = call i64 %39(%class.SkStream* %35, i8* nonnull %11, i64 8) #14
  %41 = icmp ult i64 %40, 8
  br i1 %41, label %69, label %42

42:                                               ; preds = %31, %34
  %43 = call i32 @cr_png_get_uint_32(i8* nonnull %11) #14
  %44 = load i32, i32* %33, align 4
  %45 = icmp eq i32 %44, 1413563465
  %46 = zext i32 %43 to i64
  br i1 %45, label %47, label %49

47:                                               ; preds = %42
  %48 = zext i32 %43 to i64
  call void @_ZN12AutoCleanPng12infoCallbackEm(%class.AutoCleanPng* %0, i64 %48)
  br label %69

49:                                               ; preds = %42
  %50 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %51 = load %struct.png_info_def*, %struct.png_info_def** %22, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %50, %struct.png_info_def* %51, i8* nonnull %11, i64 8) #14
  %52 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %53 = load %struct.png_info_def*, %struct.png_info_def** %22, align 8
  %54 = load %class.SkStream*, %class.SkStream** %12, align 8
  %55 = add nuw nsw i64 %46, 4
  %56 = bitcast %class.SkStream* %54 to i64 (%class.SkStream*, i8*, i64)***
  br label %59

57:                                               ; preds = %59
  %58 = icmp eq i64 %68, 0
  br i1 %58, label %34, label %59

59:                                               ; preds = %57, %49
  %60 = phi i64 [ %55, %49 ], [ %68, %57 ]
  %61 = icmp ult i64 %60, 4096
  %62 = select i1 %61, i64 %60, i64 4096
  %63 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %56, align 8
  %64 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %63, i64 2
  %65 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %64, align 8
  %66 = call i64 %65(%class.SkStream* %54, i8* nonnull %11, i64 %62) #14
  call void @cr_png_process_data(%struct.png_struct_def* %52, %struct.png_info_def* %53, i8* nonnull %11, i64 %66) #14
  %67 = icmp ult i64 %66, %62
  %68 = sub i64 %60, %62
  br i1 %67, label %69, label %57

69:                                               ; preds = %34, %59, %20, %47, %9
  %70 = phi i1 [ false, %9 ], [ true, %47 ], [ false, %20 ], [ false, %59 ], [ false, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %11) #14
  br label %71

71:                                               ; preds = %1, %69
  %72 = phi i1 [ %70, %69 ], [ false, %1 ]
  ret i1 %72
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #2

declare [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def*, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #4

declare void @cr_png_set_progressive_read_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @cr_png_process_data(%struct.png_struct_def*, %struct.png_info_def*, i8*, i64) local_unnamed_addr #3

declare i32 @cr_png_get_uint_32(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12AutoCleanPng12infoCallbackEm(%class.AutoCleanPng* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.png_color_8_struct*, align 8
  %8 = alloca %struct.png_color_8_struct*, align 8
  %9 = alloca %struct.SkEncodedInfo, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #14
  store i32 -1431655766, i32* %3, align 4
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #14
  store i32 -1431655766, i32* %4, align 4
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  store i32 -1431655766, i32* %5, align 4
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #14
  store i32 -1431655766, i32* %6, align 4
  %14 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 0
  %15 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %16 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 1
  %17 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %18 = call i32 @cr_png_get_IHDR(%struct.png_struct_def* %15, %struct.png_info_def* %17, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32* null, i32* null, i32* null) #14
  %19 = load i32, i32* %5, align 4
  %20 = icmp eq i32 %19, 16
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  %22 = load i32, i32* %6, align 4
  %23 = and i32 %22, -5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  store i32 8, i32* %5, align 4
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  call void @cr_png_set_strip_16(%struct.png_struct_def* %26) #14
  br label %27

27:                                               ; preds = %2, %25
  %28 = load i32, i32* %6, align 4
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i32 [ %28, %27 ], [ %22, %21 ]
  switch i32 %30, label %62 [
    i32 3, label %31
    i32 2, label %42
    i32 0, label %49
    i32 4, label %63
    i32 6, label %61
  ]

31:                                               ; preds = %29
  %32 = load i32, i32* %5, align 4
  %33 = icmp slt i32 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  store i32 8, i32* %5, align 4
  %35 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  call void @cr_png_set_packing(%struct.png_struct_def* %35) #14
  br label %36

36:                                               ; preds = %34, %31
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %38 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %39 = call i32 @cr_png_get_valid(%struct.png_struct_def* %37, %struct.png_info_def* %38, i32 16) #14
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i32
  br label %63

42:                                               ; preds = %29
  %43 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %44 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %45 = call i32 @cr_png_get_valid(%struct.png_struct_def* %43, %struct.png_info_def* %44, i32 16) #14
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %42
  %48 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  call void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def* %48) #14
  br label %63

49:                                               ; preds = %29
  %50 = load i32, i32* %5, align 4
  %51 = icmp slt i32 %50, 8
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  store i32 8, i32* %5, align 4
  %53 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  call void @cr_png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* %53) #14
  br label %54

54:                                               ; preds = %52, %49
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %56 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %57 = call i32 @cr_png_get_valid(%struct.png_struct_def* %55, %struct.png_info_def* %56, i32 16) #14
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  call void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def* %60) #14
  br label %63

61:                                               ; preds = %29
  br label %63

62:                                               ; preds = %29
  br label %63

63:                                               ; preds = %29, %54, %42, %59, %47, %62, %61, %36
  %64 = phi i32 [ 6, %62 ], [ 6, %61 ], [ 1, %59 ], [ 6, %47 ], [ 4, %36 ], [ 5, %42 ], [ 0, %54 ], [ 1, %29 ]
  %65 = phi i32 [ 1, %62 ], [ 1, %61 ], [ 2, %59 ], [ 2, %47 ], [ %41, %36 ], [ 0, %42 ], [ 0, %54 ], [ 1, %29 ]
  %66 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %67 = call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %66) #14
  %68 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 4
  %69 = load %class.SkCodec**, %class.SkCodec*** %68, align 8
  %70 = icmp eq %class.SkCodec** %69, null
  br i1 %70, label %273, label %71

71:                                               ; preds = %63
  %72 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %73 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %74 = call %"class.SkEncodedInfo::ICCProfile"* @_Z18read_color_profileP14png_struct_defP12png_info_def(%struct.png_struct_def* %72, %struct.png_info_def* %73)
  %75 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %74 to i64
  %76 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %74, null
  br i1 %76, label %106, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %74, i64 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %106 [
    i32 1129142603, label %80
    i32 1196573017, label %92
  ]

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %74, i64 0, i32 1, i32 0
  %82 = load %class.SkData*, %class.SkData** %81, align 8
  %83 = icmp eq %class.SkData* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.SkData, %class.SkData* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %82) #14
  %89 = bitcast %class.SkData* %82 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %89) #14
  br label %90

90:                                               ; preds = %80, %84, %88
  %91 = bitcast %"class.SkEncodedInfo::ICCProfile"* %74 to i8*
  call void @_ZdlPv(i8* %91) #16
  br label %106

92:                                               ; preds = %77
  %93 = icmp ugt i32 %64, 1
  br i1 %93, label %94, label %106

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %74, i64 0, i32 1, i32 0
  %96 = load %class.SkData*, %class.SkData** %95, align 8
  %97 = icmp eq %class.SkData* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkData, %class.SkData* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %96) #14
  %103 = bitcast %class.SkData* %96 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %103) #14
  br label %104

104:                                              ; preds = %94, %98, %102
  %105 = bitcast %"class.SkEncodedInfo::ICCProfile"* %74 to i8*
  call void @_ZdlPv(i8* %105) #16
  br label %106

106:                                              ; preds = %71, %90, %104, %92, %77
  %107 = phi i64 [ %75, %77 ], [ 0, %104 ], [ %75, %92 ], [ 0, %90 ], [ %75, %71 ]
  %108 = load i32, i32* %6, align 4
  %109 = icmp eq i32 %108, 4
  br i1 %109, label %110, label %126

110:                                              ; preds = %106
  %111 = bitcast %struct.png_color_8_struct** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #14
  store %struct.png_color_8_struct* inttoptr (i64 -6148914691236517206 to %struct.png_color_8_struct*), %struct.png_color_8_struct** %7, align 8
  %112 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %113 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %114 = call i32 @cr_png_get_sBIT(%struct.png_struct_def* %112, %struct.png_info_def* %113, %struct.png_color_8_struct** nonnull %7) #14
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %148, label %116

116:                                              ; preds = %110
  %117 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %7, align 8
  %118 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %117, i64 0, i32 4
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 8
  br i1 %120, label %121, label %148

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %117, i64 0, i32 3
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 1
  %125 = select i1 %124, i32 2, i32 %64
  br label %148

126:                                              ; preds = %106
  %127 = icmp eq i32 %65, 0
  br i1 %127, label %128, label %151

128:                                              ; preds = %126
  %129 = bitcast %struct.png_color_8_struct** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #14
  store %struct.png_color_8_struct* inttoptr (i64 -6148914691236517206 to %struct.png_color_8_struct*), %struct.png_color_8_struct** %8, align 8
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %14, align 8
  %131 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %132 = call i32 @cr_png_get_sBIT(%struct.png_struct_def* %130, %struct.png_info_def* %131, %struct.png_color_8_struct** nonnull %8) #14
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %148, label %134

134:                                              ; preds = %128
  %135 = load %struct.png_color_8_struct*, %struct.png_color_8_struct** %8, align 8
  %136 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %135, i64 0, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 5
  br i1 %138, label %139, label %148

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %135, i64 0, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %141, 6
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %135, i64 0, i32 2
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 5
  %147 = select i1 %146, i32 3, i32 %64
  br label %148

148:                                              ; preds = %139, %134, %128, %143, %116, %110, %121
  %149 = phi i8* [ %111, %121 ], [ %111, %110 ], [ %111, %116 ], [ %129, %143 ], [ %129, %128 ], [ %129, %134 ], [ %129, %139 ]
  %150 = phi i32 [ %125, %121 ], [ %64, %110 ], [ %64, %116 ], [ %147, %143 ], [ %64, %128 ], [ %64, %134 ], [ %64, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #14
  br label %151

151:                                              ; preds = %148, %126
  %152 = phi i32 [ %64, %126 ], [ %150, %148 ]
  %153 = bitcast %struct.SkEncodedInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 24, i1 false)
  %154 = load i32, i32* %3, align 4
  %155 = load i32, i32* %4, align 4
  %156 = load i32, i32* %5, align 4
  %157 = trunc i32 %156 to i8
  %158 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 0
  store i32 %154, i32* %158, align 8, !alias.scope !2
  %159 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 1
  store i32 %155, i32* %159, align 4, !alias.scope !2
  %160 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 2
  store i32 %152, i32* %160, align 8, !alias.scope !2
  %161 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 3
  store i32 %65, i32* %161, align 4, !alias.scope !2
  %162 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 4
  store i8 %157, i8* %162, align 8, !alias.scope !2
  %163 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5
  %164 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  store i64 %107, i64* %164, align 8, !alias.scope !2
  %165 = icmp eq i32 %67, 1
  br i1 %165, label %166, label %203

166:                                              ; preds = %151
  %167 = call i8* @_Znwm(i64 1264) #16
  %168 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 2
  %169 = load %class.SkStream*, %class.SkStream** %168, align 8
  %170 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 3
  %171 = load %class.SkPngChunkReader*, %class.SkPngChunkReader** %170, align 8
  %172 = bitcast %class.AutoCleanPng* %0 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8
  %174 = bitcast i8* %167 to %class.SkCodec*
  %175 = icmp eq i8 %157, 16
  br i1 %175, label %176, label %181

176:                                              ; preds = %166
  %177 = icmp eq i32 %152, 5
  %178 = select i1 %177, i32 22, i32 12
  %179 = icmp eq i32 %152, 6
  %180 = select i1 %179, i32 24, i32 %178
  br label %184

181:                                              ; preds = %166
  %182 = icmp eq i32 %152, 0
  %183 = select i1 %182, i32 2, i32 12
  br label %184

184:                                              ; preds = %181, %176
  %185 = phi i32 [ %180, %176 ], [ %183, %181 ]
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %174, %struct.SkEncodedInfo* nonnull dereferenceable(32) %9, i32 %185, %class.SkStream* %169, i32 1) #14
  %186 = bitcast i8* %167 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV10SkPngCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = icmp eq %class.SkPngChunkReader* %171, null
  br i1 %187, label %191, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %class.SkPngChunkReader, %class.SkPngChunkReader* %171, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = atomicrmw add i32* %189, i32 1 monotonic
  br label %191

191:                                              ; preds = %184, %188
  %192 = getelementptr inbounds i8, i8* %167, i64 1144
  %193 = bitcast i8* %192 to %class.SkPngChunkReader**
  store %class.SkPngChunkReader* %171, %class.SkPngChunkReader** %193, align 8
  %194 = getelementptr inbounds i8, i8* %167, i64 1152
  %195 = bitcast i8* %194 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %195, align 8
  %196 = getelementptr inbounds i8, i8* %167, i64 1168
  %197 = getelementptr inbounds i8, i8* %167, i64 1200
  %198 = bitcast i8* %197 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 32, i1 false) #14
  store i32 %156, i32* %198, align 8
  %199 = getelementptr inbounds i8, i8* %167, i64 1216
  %200 = bitcast i8* %199 to i64*
  store i64 0, i64* %200, align 8
  %201 = getelementptr inbounds i8, i8* %167, i64 1224
  store i8 0, i8* %201, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV18SkPngNormalDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %202 = getelementptr inbounds i8, i8* %167, i64 1228
  call void @llvm.memset.p0i8.i64(i8* align 4 %202, i8 0, i64 28, i1 false) #14
  br label %249

203:                                              ; preds = %151
  %204 = call i8* @_Znwm(i64 1280) #16
  %205 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 2
  %206 = load %class.SkStream*, %class.SkStream** %205, align 8
  %207 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %0, i64 0, i32 3
  %208 = load %class.SkPngChunkReader*, %class.SkPngChunkReader** %207, align 8
  %209 = bitcast %class.AutoCleanPng* %0 to <2 x i64>*
  %210 = load <2 x i64>, <2 x i64>* %209, align 8
  %211 = bitcast i8* %204 to %class.SkCodec*
  %212 = icmp eq i8 %157, 16
  br i1 %212, label %213, label %218

213:                                              ; preds = %203
  %214 = icmp eq i32 %152, 5
  %215 = select i1 %214, i32 22, i32 12
  %216 = icmp eq i32 %152, 6
  %217 = select i1 %216, i32 24, i32 %215
  br label %221

218:                                              ; preds = %203
  %219 = icmp eq i32 %152, 0
  %220 = select i1 %219, i32 2, i32 12
  br label %221

221:                                              ; preds = %218, %213
  %222 = phi i32 [ %217, %213 ], [ %220, %218 ]
  call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* nonnull %211, %struct.SkEncodedInfo* nonnull dereferenceable(32) %9, i32 %222, %class.SkStream* %206, i32 1) #14
  %223 = bitcast i8* %204 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV10SkPngCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %223, align 8
  %224 = icmp eq %class.SkPngChunkReader* %208, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %class.SkPngChunkReader, %class.SkPngChunkReader* %208, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = atomicrmw add i32* %226, i32 1 monotonic
  br label %228

228:                                              ; preds = %221, %225
  %229 = getelementptr inbounds i8, i8* %204, i64 1144
  %230 = bitcast i8* %229 to %class.SkPngChunkReader**
  store %class.SkPngChunkReader* %208, %class.SkPngChunkReader** %230, align 8
  %231 = getelementptr inbounds i8, i8* %204, i64 1152
  %232 = bitcast i8* %231 to <2 x i64>*
  store <2 x i64> %210, <2 x i64>* %232, align 8
  %233 = getelementptr inbounds i8, i8* %204, i64 1168
  %234 = getelementptr inbounds i8, i8* %204, i64 1200
  %235 = bitcast i8* %234 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 32, i1 false) #14
  store i32 %156, i32* %235, align 8
  %236 = getelementptr inbounds i8, i8* %204, i64 1216
  %237 = bitcast i8* %236 to i64*
  store i64 0, i64* %237, align 8
  %238 = getelementptr inbounds i8, i8* %204, i64 1224
  store i8 0, i8* %238, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV22SkPngInterlacedDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %223, align 8
  %239 = getelementptr inbounds i8, i8* %204, i64 1228
  %240 = bitcast i8* %239 to i32*
  store i32 %67, i32* %240, align 4
  %241 = getelementptr inbounds i8, i8* %204, i64 1232
  %242 = bitcast i8* %241 to i32*
  store i32 0, i32* %242, align 8
  %243 = getelementptr inbounds i8, i8* %204, i64 1236
  %244 = bitcast i8* %243 to i32*
  store i32 0, i32* %244, align 4
  %245 = getelementptr inbounds i8, i8* %204, i64 1256
  %246 = bitcast i8* %245 to i32*
  store i32 0, i32* %246, align 8
  %247 = getelementptr inbounds i8, i8* %204, i64 1260
  store i8 0, i8* %247, align 4
  %248 = getelementptr inbounds i8, i8* %204, i64 1264
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 16, i1 false) #14
  br label %249

249:                                              ; preds = %228, %191
  %250 = phi i8* [ %204, %228 ], [ %167, %191 ]
  %251 = bitcast %class.SkCodec*** %68 to i8***
  %252 = load i8**, i8*** %251, align 8
  store i8* %250, i8** %252, align 8
  %253 = bitcast %class.SkCodec*** %68 to %class.SkPngCodec***
  %254 = load %class.SkPngCodec**, %class.SkPngCodec*** %253, align 8
  %255 = load %class.SkPngCodec*, %class.SkPngCodec** %254, align 8
  %256 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %255, i64 0, i32 13
  store i64 %1, i64* %256, align 8
  %257 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %258 = load %"class.SkEncodedInfo::ICCProfile"*, %"class.SkEncodedInfo::ICCProfile"** %257, align 8
  store %"class.SkEncodedInfo::ICCProfile"* null, %"class.SkEncodedInfo::ICCProfile"** %257, align 8
  %259 = icmp eq %"class.SkEncodedInfo::ICCProfile"* %258, null
  br i1 %259, label %272, label %260

260:                                              ; preds = %249
  %261 = getelementptr inbounds %"class.SkEncodedInfo::ICCProfile", %"class.SkEncodedInfo::ICCProfile"* %258, i64 0, i32 1, i32 0
  %262 = load %class.SkData*, %class.SkData** %261, align 8
  %263 = icmp eq %class.SkData* %262, null
  br i1 %263, label %270, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %class.SkData, %class.SkData* %262, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw add i32* %265, i32 -1 acq_rel
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %270

268:                                              ; preds = %264
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %262) #14
  %269 = bitcast %class.SkData* %262 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %269) #14
  br label %270

270:                                              ; preds = %268, %264, %260
  %271 = bitcast %"class.SkEncodedInfo::ICCProfile"* %258 to i8*
  call void @_ZdlPv(i8* %271) #16
  br label %272

272:                                              ; preds = %270, %249
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #14
  br label %273

273:                                              ; preds = %63, %272
  %274 = bitcast %class.AutoCleanPng* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPngCodec11processDataEv(%class.SkPngCodec* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca [4096 x i8], align 16
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %5 = bitcast %"struct.SkPngCodec::voidp"* %4 to %struct.png_struct_def**
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %7 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %6, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %8 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %7, i64 0, i64 0
  %9 = call i32 @_setjmp(%struct.__jmp_buf_tag* %8) #15
  switch i32 %9, label %11 [
    i32 1, label %72
    i32 2, label %10
  ]

10:                                               ; preds = %1
  br label %72

11:                                               ; preds = %1
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 4096, i1 false)
  %13 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 14
  %14 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %16 = bitcast %"struct.SkPngCodec::voidp"* %15 to %struct.png_info_def**
  %17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2, i64 0, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 13
  %20 = bitcast i64* %3 to i8*
  br label %21

21:                                               ; preds = %68, %11
  %22 = phi i8 [ 0, %11 ], [ %47, %68 ]
  %23 = load i8, i8* %13, align 8, !range !5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %21
  %26 = load %class.SkStream*, %class.SkStream** %14, align 8
  %27 = bitcast %class.SkStream* %26 to i64 (%class.SkStream*, i8*, i64)***
  %28 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %27, align 8
  %29 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %28, i64 2
  %30 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %29, align 8
  %31 = call i64 %30(%class.SkStream* %26, i8* nonnull %12, i64 8) #14
  %32 = icmp ult i64 %31, 8
  br i1 %32, label %71, label %33

33:                                               ; preds = %25
  %34 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %35 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %34, %struct.png_info_def* %35, i8* nonnull %12, i64 8) #14
  %36 = load i32, i32* %18, align 4
  %37 = icmp eq i32 %36, 1145980233
  %38 = select i1 %37, i8 1, i8 %22
  %39 = call i32 @cr_png_get_uint_32(i8* nonnull %12) #14
  %40 = zext i32 %39 to i64
  br label %46

41:                                               ; preds = %21
  %42 = load i64, i64* %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  store i64 6071208852995440640, i64* %3, align 8
  %43 = trunc i64 %42 to i32
  call void @cr_png_save_uint_32(i8* nonnull %20, i32 %43) #14
  %44 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %45 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  call void @cr_png_process_data(%struct.png_struct_def* %44, %struct.png_info_def* %45, i8* nonnull %20, i64 8) #14
  store i8 1, i8* %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i8 [ %38, %33 ], [ %22, %41 ]
  %48 = phi i64 [ %40, %33 ], [ %42, %41 ]
  %49 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %50 = load %struct.png_info_def*, %struct.png_info_def** %16, align 8
  %51 = load %class.SkStream*, %class.SkStream** %14, align 8
  %52 = add i64 %48, 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %68, label %54

54:                                               ; preds = %46
  %55 = bitcast %class.SkStream* %51 to i64 (%class.SkStream*, i8*, i64)***
  br label %58

56:                                               ; preds = %58
  %57 = icmp eq i64 %67, 0
  br i1 %57, label %68, label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %52, %54 ], [ %67, %56 ]
  %60 = icmp ult i64 %59, 4096
  %61 = select i1 %60, i64 %59, i64 4096
  %62 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %55, align 8
  %63 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %62, i64 2
  %64 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %63, align 8
  %65 = call i64 %64(%class.SkStream* %51, i8* nonnull %12, i64 %61) #14
  call void @cr_png_process_data(%struct.png_struct_def* %49, %struct.png_info_def* %50, i8* nonnull %12, i64 %65) #14
  %66 = icmp ult i64 %65, %61
  %67 = sub i64 %59, %61
  br i1 %66, label %71, label %56

68:                                               ; preds = %56, %46
  %69 = and i8 %47, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %21, label %71

71:                                               ; preds = %25, %68, %58
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %12) #14
  br label %72

72:                                               ; preds = %1, %71, %10
  %73 = phi i1 [ true, %71 ], [ true, %10 ], [ false, %1 ]
  ret i1 %73
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @cr_png_save_uint_32(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPngCodec16createColorTableERK11SkImageInfo(%class.SkPngCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.png_color_struct*, align 8
  %5 = alloca [256 x i32], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #14
  store i32 -1431655766, i32* %3, align 4
  %9 = bitcast %struct.png_color_struct** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  store %struct.png_color_struct* inttoptr (i64 -6148914691236517206 to %struct.png_color_struct*), %struct.png_color_struct** %4, align 8
  %10 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %11 = bitcast %"struct.SkPngCodec::voidp"* %10 to %struct.png_struct_def**
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %13 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %14 = bitcast %"struct.SkPngCodec::voidp"* %13 to %struct.png_info_def**
  %15 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %16 = call i32 @cr_png_get_PLTE(%struct.png_struct_def* %12, %struct.png_info_def* %15, %struct.png_color_struct** nonnull %4, i32* nonnull %3) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %137, label %18

18:                                               ; preds = %2
  %19 = bitcast [256 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 1024, i1 false)
  %20 = bitcast %class.SkPngCodec* %0 to %class.SkCodec*
  %21 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 10
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = select i1 %23, i32 %25, i32 4
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #14
  store i32 0, i32* %7, align 4
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %30 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %31 = call i32 @cr_png_get_tRNS(%struct.png_struct_def* %29, %struct.png_info_def* %30, i8** nonnull %6, i32* nonnull %7, %struct.png_color_16_struct** null) #14
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %18
  %34 = load i32, i32* %7, align 4
  br label %75

35:                                               ; preds = %18
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, 2
  %41 = icmp eq i32 %39, 1
  %42 = and i1 %40, %41
  %43 = icmp eq i32 %26, 4
  %44 = select i1 %43, i32 (i32, i32, i32, i32)* @_ZL24premultiply_argb_as_rgbajjjj, i32 (i32, i32, i32, i32)* @_ZL24premultiply_argb_as_bgrajjjj
  %45 = select i1 %43, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_RGBAjjjj, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_BGRAjjjj
  %46 = select i1 %42, i32 (i32, i32, i32, i32)* %44, i32 (i32, i32, i32, i32)* %45
  %47 = load i32, i32* %7, align 4
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %75

49:                                               ; preds = %35
  %50 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  br label %51

51:                                               ; preds = %49, %51
  %52 = phi %struct.png_color_struct* [ %50, %49 ], [ %70, %51 ]
  %53 = phi i64 [ 0, %49 ], [ %71, %51 ]
  %54 = load i8*, i8** %6, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %52, i64 0, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %52, i64 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %52, i64 0, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = call i32 %46(i32 %57, i32 %60, i32 %63, i32 %66) #14, !callees !6
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %53
  store i32 %67, i32* %68, align 4
  %69 = load %struct.png_color_struct*, %struct.png_color_struct** %4, align 8
  %70 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %69, i64 1
  store %struct.png_color_struct* %70, %struct.png_color_struct** %4, align 8
  %71 = add nuw nsw i64 %53, 1
  %72 = load i32, i32* %7, align 4
  %73 = sext i32 %72 to i64
  %74 = icmp slt i64 %71, %73
  br i1 %74, label %51, label %75

75:                                               ; preds = %51, %33, %35
  %76 = phi i32 [ %34, %33 ], [ %47, %35 ], [ %72, %51 ]
  %77 = load i32, i32* %3, align 4
  %78 = icmp sgt i32 %77, %76
  br i1 %78, label %79, label %95

79:                                               ; preds = %75
  %80 = icmp eq i32 %26, 4
  br i1 %80, label %81, label %88

81:                                               ; preds = %79
  %82 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts11RGB_to_RGB1E, align 8
  %83 = sext i32 %76 to i64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %83
  %85 = bitcast %struct.png_color_struct** %4 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = sub nsw i32 %77, %76
  call void %82(i32* %84, i8* %86, i32 %87) #14
  br label %95

88:                                               ; preds = %79
  %89 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @_ZN6SkOpts11RGB_to_BGR1E, align 8
  %90 = sext i32 %76 to i64
  %91 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %90
  %92 = bitcast %struct.png_color_struct** %4 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = sub nsw i32 %77, %76
  call void %89(i32* %91, i8* %93, i32 %94) #14
  br label %95

95:                                               ; preds = %81, %88, %75
  %96 = load i32, i32* %21, align 8
  switch i32 %96, label %97 [
    i32 0, label %99
    i32 2, label %99
  ]

97:                                               ; preds = %95
  %98 = load i32, i32* %3, align 4
  call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %20, i8* nonnull %19, i8* nonnull %19, i32 %98) #14
  br label %99

99:                                               ; preds = %95, %95, %97
  %100 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 9
  %101 = load i32, i32* %100, align 8
  %102 = shl i32 1, %101
  %103 = load i32, i32* %3, align 4
  %104 = icmp sgt i32 %102, %103
  br i1 %104, label %105, label %118

105:                                              ; preds = %99
  %106 = icmp sgt i32 %103, 0
  br i1 %106, label %107, label %112

107:                                              ; preds = %105
  %108 = add nsw i32 %103, -1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  br label %112

112:                                              ; preds = %105, %107
  %113 = phi i32 [ %111, %107 ], [ -16777216, %105 ]
  %114 = sext i32 %103 to i64
  %115 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %114
  %116 = sub nsw i32 %102, %103
  %117 = load void (i32*, i32, i32)*, void (i32*, i32, i32)** @_ZN6SkOpts8memset32E, align 8
  call void %117(i32* %115, i32 %113, i32 %116) #14
  br label %118

118:                                              ; preds = %112, %99
  %119 = call i8* @_Znwm(i64 32) #16
  %120 = bitcast i8* %119 to %class.SkColorTable*
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 0
  call void @_ZN12SkColorTableC1EPKji(%class.SkColorTable* nonnull %120, i32* nonnull %121, i32 %102) #14
  %122 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 5, i32 0
  %123 = load %class.SkColorTable*, %class.SkColorTable** %122, align 8
  %124 = bitcast %class.SkColorTable** %122 to i8**
  store i8* %119, i8** %124, align 8
  %125 = icmp eq %class.SkColorTable* %123, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %123, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %136

130:                                              ; preds = %126
  %131 = bitcast %class.SkColorTable* %123 to %class.SkRefCntBase*
  %132 = bitcast %class.SkColorTable* %123 to void (%class.SkRefCntBase*)***
  %133 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %132, align 8
  %134 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, i64 2
  %135 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %134, align 8
  call void %135(%class.SkRefCntBase* nonnull %131) #14
  br label %136

136:                                              ; preds = %118, %126, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %19) #14
  br label %137

137:                                              ; preds = %2, %136
  %138 = phi i1 [ true, %136 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #14
  ret i1 %138
}

declare i32 @cr_png_get_PLTE(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_struct**, i32*) local_unnamed_addr #3

declare i32 @cr_png_get_tRNS(%struct.png_struct_def*, %struct.png_info_def*, i8**, i32*, %struct.png_color_16_struct**) local_unnamed_addr #3

declare void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12SkColorTableC1EPKji(%class.SkColorTable*, i32*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPngCodec5IsPngEPKvm(i8*, i64) local_unnamed_addr #1 align 2 {
  %3 = tail call i32 @cr_png_sig_cmp(i8* %0, i64 0, i64 %1) #14
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

declare i32 @cr_png_sig_cmp(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkEncodedInfo::ICCProfile"* @_Z18read_color_profileP14png_struct_defP12png_info_def(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.sk_sp, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca [3 x [3 x float]], align 4
  %10 = alloca [8 x i32], align 16
  %11 = alloca i32, align 4
  %12 = alloca %struct.skcms_Matrix3x3, align 4
  %13 = alloca %struct.skcms_ICCProfile, align 8
  %14 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %15 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  store i32 -1431655766, i32* %4, align 4
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #14
  store i32 -1431655766, i32* %6, align 4
  %18 = call i32 @cr_png_get_iCCP(%struct.png_struct_def* %0, %struct.png_info_def* %1, i8** nonnull %5, i32* nonnull %6, i8** nonnull %3, i32* nonnull %4) #14
  %19 = icmp eq i32 %18, 4096
  br i1 %19, label %20, label %50

20:                                               ; preds = %2
  %21 = bitcast %class.sk_sp* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %22, align 8
  %23 = load i8*, i8** %3, align 8
  %24 = load i32, i32* %4, align 4
  %25 = zext i32 %24 to i64
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* nonnull sret %7, i8* %23, i64 %25) #14
  %26 = bitcast %class.sk_sp* %7 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.SkData* null, %class.SkData** %22, align 8
  %28 = bitcast %class.sk_sp* %8 to i64*
  store i64 %27, i64* %28, align 8
  %29 = call %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp* nonnull %8) #14
  %30 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %29 to i64
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %32 = load %class.SkData*, %class.SkData** %31, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #14
  %39 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %39) #14
  br label %40

40:                                               ; preds = %20, %34, %38
  %41 = load %class.SkData*, %class.SkData** %22, align 8
  %42 = icmp eq %class.SkData* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %41) #14
  %48 = bitcast %class.SkData* %41 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %48) #14
  br label %49

49:                                               ; preds = %40, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %171

50:                                               ; preds = %2
  %51 = call i32 @cr_png_get_valid(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 2048) #14
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %171

53:                                               ; preds = %50
  %54 = bitcast [3 x [3 x float]]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %54)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -1, i64 36, i1 false)
  %55 = call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #14
  %56 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %55, i64 0, i32 8
  %57 = bitcast %struct.skcms_Matrix3x3* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* align 4 %57, i64 36, i1 false)
  %58 = bitcast [8 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #14
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %61 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %62 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %63 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %64 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %65 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %66 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %67 = bitcast i32* %11 to i8*
  %68 = bitcast [8 x i32]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #14
  store i32 -1431655766, i32* %11, align 4
  %69 = call i32 @cr_png_get_cHRM_fixed(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32* nonnull %59, i32* %60, i32* %61, i32* %62, i32* %63, i32* %64, i32* %65, i32* %66) #14
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %100, label %71

71:                                               ; preds = %53
  %72 = load i32, i32* %61, align 8
  %73 = sitofp i32 %72 to float
  %74 = fmul float %73, 0x3EE4F8B580000000
  %75 = load i32, i32* %62, align 4
  %76 = sitofp i32 %75 to float
  %77 = fmul float %76, 0x3EE4F8B580000000
  %78 = load i32, i32* %63, align 16
  %79 = sitofp i32 %78 to float
  %80 = fmul float %79, 0x3EE4F8B580000000
  %81 = load i32, i32* %64, align 4
  %82 = sitofp i32 %81 to float
  %83 = fmul float %82, 0x3EE4F8B580000000
  %84 = load i32, i32* %65, align 8
  %85 = sitofp i32 %84 to float
  %86 = fmul float %85, 0x3EE4F8B580000000
  %87 = load i32, i32* %66, align 4
  %88 = sitofp i32 %87 to float
  %89 = fmul float %88, 0x3EE4F8B580000000
  %90 = load i32, i32* %59, align 16
  %91 = sitofp i32 %90 to float
  %92 = fmul float %91, 0x3EE4F8B580000000
  %93 = load i32, i32* %60, align 4
  %94 = sitofp i32 %93 to float
  %95 = fmul float %94, 0x3EE4F8B580000000
  %96 = bitcast %struct.skcms_Matrix3x3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %96) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %96, i8 -1, i64 36, i1 false)
  %97 = call zeroext i1 @skcms_PrimariesToXYZD50(float %74, float %77, float %80, float %83, float %86, float %89, float %92, float %95, %struct.skcms_Matrix3x3* nonnull %12) #14
  br i1 %97, label %98, label %99

98:                                               ; preds = %71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* nonnull align 4 %96, i64 36, i1 false)
  br label %99

99:                                               ; preds = %71, %98
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %96) #14
  br label %100

100:                                              ; preds = %53, %99
  %101 = call i32 @cr_png_get_gAMA_fixed(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32* nonnull %11) #14
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %108

103:                                              ; preds = %100
  %104 = load i32, i32* %11, align 4
  %105 = sitofp i32 %104 to float
  %106 = fmul float %105, 0x3EE4F8B580000000
  %107 = fdiv float 1.000000e+00, %106
  br label %119

108:                                              ; preds = %100
  %109 = call %struct.skcms_TransferFunction* @skcms_sRGB_TransferFunction() #14
  %110 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %109, i64 0, i32 0
  %111 = load float, float* %110, align 4
  %112 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %109, i64 0, i32 1
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 4
  %115 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %109, i64 0, i32 5
  %116 = load float, float* %115, align 4
  %117 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %109, i64 0, i32 6
  %118 = load float, float* %117, align 4
  br label %119

119:                                              ; preds = %108, %103
  %120 = phi float [ 0.000000e+00, %103 ], [ %118, %108 ]
  %121 = phi float [ 0.000000e+00, %103 ], [ %116, %108 ]
  %122 = phi float [ %107, %103 ], [ %111, %108 ]
  %123 = phi <4 x float> [ <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %103 ], [ %114, %108 ]
  %124 = bitcast %struct.skcms_ICCProfile* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1008, i8* nonnull %124) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 1008, i1 false) #14
  %125 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 2
  store i32 1380401696, i32* %125, align 4
  %126 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 3
  store i32 1482250784, i32* %126, align 8
  %127 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 5
  store i8 1, i8* %127, align 8
  %128 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 0
  %129 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %128, i64 0, i32 0, i32 0
  store i32 0, i32* %129, align 8
  %130 = bitcast %union.skcms_Curve* %128 to %struct.anon*
  %131 = getelementptr inbounds %struct.anon, %struct.anon* %130, i64 0, i32 1, i32 0
  store float %122, float* %131, align 4
  %132 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 0, i32 0, i32 1
  %133 = bitcast i8** %132 to <4 x float>*
  store <4 x float> %123, <4 x float>* %133, align 8
  %134 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 0, i32 1
  %135 = bitcast [8 x i8]* %134 to float*
  store float %121, float* %135, align 8
  %136 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 0, i32 1, i64 4
  %137 = bitcast i8* %136 to float*
  store float %120, float* %137, align 4
  %138 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 1
  %139 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %138, i64 0, i32 0, i32 0
  store i32 0, i32* %139, align 8
  %140 = bitcast %union.skcms_Curve* %138 to %struct.anon*
  %141 = getelementptr inbounds %struct.anon, %struct.anon* %140, i64 0, i32 1, i32 0
  store float %122, float* %141, align 4
  %142 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 1, i32 0, i32 1
  %143 = bitcast i8** %142 to float*
  %144 = extractelement <4 x float> %123, i32 0
  store float %144, float* %143, align 8
  %145 = getelementptr inbounds %struct.anon, %struct.anon* %140, i64 0, i32 1, i32 2
  %146 = extractelement <4 x float> %123, i32 1
  store float %146, float* %145, align 4
  %147 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 1, i32 0, i32 2
  %148 = bitcast i8** %147 to float*
  %149 = extractelement <4 x float> %123, i32 2
  store float %149, float* %148, align 8
  %150 = getelementptr inbounds %struct.anon, %struct.anon* %140, i64 0, i32 1, i32 4
  %151 = extractelement <4 x float> %123, i32 3
  store float %151, float* %150, align 4
  %152 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 1, i32 1
  %153 = bitcast [8 x i8]* %152 to float*
  store float %121, float* %153, align 8
  %154 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 1, i32 1, i64 4
  %155 = bitcast i8* %154 to float*
  store float %120, float* %155, align 4
  %156 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 2
  %157 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %156, i64 0, i32 0, i32 0
  store i32 0, i32* %157, align 8
  %158 = bitcast %union.skcms_Curve* %156 to %struct.anon*
  %159 = getelementptr inbounds %struct.anon, %struct.anon* %158, i64 0, i32 1, i32 0
  store float %122, float* %159, align 4
  %160 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 2, i32 0, i32 1
  %161 = bitcast i8** %160 to <4 x float>*
  store <4 x float> %123, <4 x float>* %161, align 8
  %162 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 2, i32 1
  %163 = bitcast [8 x i8]* %162 to float*
  store float %121, float* %163, align 8
  %164 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 6, i64 2, i32 1, i64 4
  %165 = bitcast i8* %164 to float*
  store float %120, float* %165, align 4
  %166 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 7
  store i8 1, i8* %166, align 8
  %167 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 8
  %168 = bitcast %struct.skcms_Matrix3x3* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* nonnull align 4 %54, i64 36, i1 false)
  %169 = call %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeERK16skcms_ICCProfile(%struct.skcms_ICCProfile* nonnull dereferenceable(1008) %13) #14
  %170 = ptrtoint %"class.SkEncodedInfo::ICCProfile"* %169 to i64
  call void @llvm.lifetime.end.p0i8(i64 1008, i8* nonnull %124) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %54)
  br label %171

171:                                              ; preds = %50, %119, %49
  %172 = phi i64 [ %30, %49 ], [ %170, %119 ], [ 0, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %173 = inttoptr i64 %172 to %"class.SkEncodedInfo::ICCProfile"*
  ret %"class.SkEncodedInfo::ICCProfile"* %173
}

declare i32 @cr_png_get_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i8**, i32*, i8**, i32*) local_unnamed_addr #3

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* sret, i8*, i64) local_unnamed_addr #3

declare %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeE5sk_spI6SkDataE(%class.sk_sp*) local_unnamed_addr #3

declare i32 @cr_png_get_valid(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare %struct.skcms_ICCProfile* @skcms_sRGB_profile() local_unnamed_addr #3

declare i32 @cr_png_get_cHRM_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #3

declare zeroext i1 @skcms_PrimariesToXYZD50(float, float, float, float, float, float, float, float, %struct.skcms_Matrix3x3*) local_unnamed_addr #3

declare i32 @cr_png_get_gAMA_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32*) local_unnamed_addr #3

declare %struct.skcms_TransferFunction* @skcms_sRGB_TransferFunction() local_unnamed_addr #3

declare %"class.SkEncodedInfo::ICCProfile"* @_ZN13SkEncodedInfo10ICCProfile4MakeERK16skcms_ICCProfile(%struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodec15allocateStorageERK11SkImageInfo(%class.SkPngCodec* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %57

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %34 [
    i32 0, label %10
    i32 2, label %13
    i32 1, label %13
    i32 4, label %17
    i32 5, label %20
    i32 7, label %20
    i32 10, label %20
    i32 3, label %20
    i32 6, label %24
    i32 9, label %24
    i32 8, label %24
    i32 11, label %24
    i32 12, label %24
    i32 13, label %24
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %12 = load i8, i8* %11, align 8
  br label %28

13:                                               ; preds = %7, %7
  %14 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %15 = load i8, i8* %14, align 8
  %16 = shl i8 %15, 1
  br label %28

17:                                               ; preds = %7
  %18 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %19 = load i8, i8* %18, align 8
  br label %28

20:                                               ; preds = %7, %7, %7, %7
  %21 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %22 = load i8, i8* %21, align 8
  %23 = mul i8 %22, 3
  br label %28

24:                                               ; preds = %7, %7, %7, %7, %7, %7
  %25 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %26 = load i8, i8* %25, align 8
  %27 = shl i8 %26, 2
  br label %28

28:                                               ; preds = %10, %13, %17, %20, %24
  %29 = phi i8 [ %27, %24 ], [ %23, %20 ], [ %19, %17 ], [ %16, %13 ], [ %12, %10 ]
  %30 = icmp ugt i8 %29, 32
  %31 = lshr i8 %29, 3
  %32 = select i1 %30, i8 %31, i8 4
  %33 = zext i8 %32 to i64
  br label %34

34:                                               ; preds = %28, %7
  %35 = phi i64 [ 4, %7 ], [ %33, %28 ]
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %35, %38
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = tail call i8* @_Z15sk_malloc_throwmm(i64 %39, i64 1) #14
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i8* [ %42, %41 ], [ null, %34 ]
  %45 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  store i8* %44, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = ptrtoint i8* %44 to i64
  br label %53

50:                                               ; preds = %43
  tail call void @_Z7sk_freePv(i8* nonnull %46) #14
  %51 = bitcast i8** %45 to i64*
  %52 = load i64, i64* %51, align 8
  br label %53

53:                                               ; preds = %48, %50
  %54 = phi i64 [ %49, %48 ], [ %52, %50 ]
  %55 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 8
  %56 = bitcast i8** %55 to i64*
  store i64 %54, i64* %56, align 8
  br label %57

57:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodec13applyXformRowEPvPKv(%class.SkPngCodec*, i8*, i8*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %22 [
    i32 0, label %6
    i32 1, label %9
    i32 2, label %13
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %class.SkSwizzler*, %class.SkSwizzler** %7, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %8, i8* %1, i8* %2) #14
  br label %22

9:                                                ; preds = %3
  %10 = bitcast %class.SkPngCodec* %0 to %class.SkCodec*
  %11 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %10, i8* %1, i8* %2, i32 %12) #14
  br label %22

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %class.SkSwizzler*, %class.SkSwizzler** %14, align 8
  %16 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 8
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %15, i8* %17, i8* %2) #14
  %18 = bitcast %class.SkPngCodec* %0 to %class.SkCodec*
  %19 = load i8*, i8** %16, align 8
  %20 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 11
  %21 = load i32, i32* %20, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %18, i8* %1, i8* %19, i32 %21) #14
  br label %22

22:                                               ; preds = %3, %13, %9, %6
  ret void
}

declare void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler*, i8*, i8*) local_unnamed_addr #3

declare i32 @cr_png_get_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #3

declare void @cr_png_set_strip_16(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_packing(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #3

declare i32 @cr_png_get_sBIT(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_8_struct**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodecC2EO13SkEncodedInfoNSt3__110unique_ptrI8SkStreamNS2_14default_deleteIS4_EEEEP16SkPngChunkReaderPvSA_i(%class.SkPngCodec*, %struct.SkEncodedInfo* dereferenceable(32), %class.SkStream*, %class.SkPngChunkReader*, i8*, i8*, i32) unnamed_addr #1 align 2 {
  %8 = bitcast %class.SkPngCodec* %0 to %class.SkCodec*
  %9 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 16
  %12 = getelementptr inbounds %struct.SkEncodedInfo, %struct.SkEncodedInfo* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  br i1 %11, label %14, label %19

14:                                               ; preds = %7
  %15 = icmp eq i32 %13, 5
  %16 = select i1 %15, i32 22, i32 12
  %17 = icmp eq i32 %13, 6
  %18 = select i1 %17, i32 24, i32 %16
  br label %22

19:                                               ; preds = %7
  %20 = icmp eq i32 %13, 0
  %21 = select i1 %20, i32 2, i32 12
  br label %22

22:                                               ; preds = %19, %14
  %23 = phi i32 [ %18, %14 ], [ %21, %19 ]
  tail call void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec* %8, %struct.SkEncodedInfo* dereferenceable(32) %1, i32 %23, %class.SkStream* %2, i32 1) #14
  %24 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV10SkPngCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = icmp eq %class.SkPngChunkReader* %3, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkPngChunkReader, %class.SkPngChunkReader* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  br label %29

29:                                               ; preds = %26, %22
  %30 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 2, i32 0
  store %class.SkPngChunkReader* %3, %class.SkPngChunkReader** %30, align 8
  %31 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3, i32 0
  store i8* %4, i8** %31, align 8
  %32 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4, i32 0
  store i8* %5, i8** %32, align 8
  %33 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 5, i32 0
  %34 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 9
  %35 = bitcast %class.SkColorTable** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false)
  store i32 %6, i32* %34, align 8
  %36 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 13
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 14
  store i8 0, i8* %37, align 8
  ret void
}

declare void @_ZN7SkCodecC2EO13SkEncodedInfo17skcms_PixelFormatNSt3__110unique_ptrI8SkStreamNS3_14default_deleteIS5_EEEE15SkEncodedOrigin(%class.SkCodec*, %struct.SkEncodedInfo* dereferenceable(32), i32, %class.SkStream*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodec17destroyReadStructEv(%class.SkPngCodec*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"struct.SkPngCodec::voidp", %"struct.SkPngCodec::voidp"* %2, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.SkPngCodec::voidp"* %2 to %struct.png_struct_def**
  %8 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %9 = bitcast %"struct.SkPngCodec::voidp"* %8 to %struct.png_info_def**
  tail call void @cr_png_destroy_read_struct(%struct.png_struct_def** %7, %struct.png_info_def** %9, %struct.png_info_def** null) #14
  %10 = bitcast %"struct.SkPngCodec::voidp"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkCodecD2Ev(%class.SkCodec*) unnamed_addr #7

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10SkPngCodecD0Ev(%class.SkPngCodec* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @cr_png_destroy_read_struct(%struct.png_struct_def**, %struct.png_info_def**, %struct.png_info_def**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPngCodec16initializeXformsERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkPngCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %5 = bitcast %"struct.SkPngCodec::voidp"* %4 to %struct.png_struct_def**
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %7 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %6, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %8 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %7, i64 0, i64 0
  %9 = call i32 @_setjmp(%struct.__jmp_buf_tag* %8) #15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %48

11:                                               ; preds = %3
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %5, align 8
  %13 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %14 = bitcast %"struct.SkPngCodec::voidp"* %13 to %struct.png_info_def**
  %15 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  call void @cr_png_read_update_info(%struct.png_struct_def* %12, %struct.png_info_def* %15) #14
  %16 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %17 = load %class.SkSwizzler*, %class.SkSwizzler** %16, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %16, align 8
  %18 = icmp eq %class.SkSwizzler* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %11
  %20 = bitcast %class.SkSwizzler* %17 to void (%class.SkSwizzler*)***
  %21 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %21, i64 2
  %23 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %22, align 8
  call void %23(%class.SkSwizzler* nonnull %17) #14
  br label %24

24:                                               ; preds = %11, %19
  %25 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 2
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %41 [
    i32 5, label %27
    i32 6, label %31
    i32 0, label %31
  ]

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 16
  br i1 %30, label %31, label %46

31:                                               ; preds = %24, %24, %27
  %32 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 10
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %2, i64 0, i32 1
  %37 = load %struct.SkIRect*, %struct.SkIRect** %36, align 8
  %38 = icmp eq %struct.SkIRect* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  store i32 1, i32* %40, align 4
  br label %48

41:                                               ; preds = %31, %24, %35
  %42 = phi i1 [ true, %35 ], [ false, %31 ], [ false, %24 ]
  %43 = icmp eq i32 %26, 4
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = call zeroext i1 @_ZN10SkPngCodec16createColorTableERK11SkImageInfo(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  br i1 %45, label %46, label %48

46:                                               ; preds = %27, %44, %41
  %47 = phi i1 [ %42, %44 ], [ %42, %41 ], [ false, %27 ]
  call void @_ZN10SkPngCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %2, i1 zeroext %47)
  br label %48

48:                                               ; preds = %39, %46, %44, %3
  %49 = phi i32 [ 6, %3 ], [ 0, %46 ], [ 0, %39 ], [ 6, %44 ]
  ret i32 %49
}

declare void @cr_png_read_update_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkPngCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca %"struct.SkCodec::Options", align 8
  %7 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %class.SkColorSpace*, %class.SkColorSpace** %10, align 8
  %13 = icmp eq %class.SkColorSpace* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %4, %14
  store %class.SkColorSpace* %12, %class.SkColorSpace** %8, align 8
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %19 = bitcast i32* %18 to i64*
  %20 = bitcast i32* %9 to i64*
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %24 = bitcast %struct.SkISize* %23 to i64*
  %25 = bitcast %struct.SkISize* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = bitcast %"struct.SkCodec::Options"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  %28 = bitcast %"struct.SkCodec::Options"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %28, i64 24, i1 false)
  %29 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 10
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 2
  %33 = and i64 %21, -4294967296
  br i1 %32, label %34, label %109

34:                                               ; preds = %17
  %35 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %57

38:                                               ; preds = %34
  br i1 %13, label %39, label %43

39:                                               ; preds = %38
  %40 = ptrtoint %class.SkColorSpace* %12 to i64
  %41 = or i64 %33, 11
  %42 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %40, i64* %42, align 8
  br label %78

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !7
  %46 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %47 = bitcast %class.SkColorSpace* %46 to i8*
  %48 = ptrtoint %class.SkColorSpace* %12 to i64
  %49 = or i64 %33, 11
  %50 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %48, i64* %50, align 8
  %51 = icmp eq %class.SkColorSpace* %46, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %78

56:                                               ; preds = %52
  tail call void @_ZdlPv(i8* %47) #16
  br label %78

57:                                               ; preds = %34
  br i1 %13, label %58, label %63

58:                                               ; preds = %57
  %59 = ptrtoint %class.SkColorSpace* %12 to i64
  %60 = and i64 %21, -4294967296
  %61 = or i64 %60, 4
  %62 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %59, i64* %62, align 8
  br label %78

63:                                               ; preds = %57
  %64 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic, !noalias !14
  %66 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %67 = bitcast %class.SkColorSpace* %66 to i8*
  %68 = ptrtoint %class.SkColorSpace* %12 to i64
  %69 = and i64 %21, -4294967296
  %70 = or i64 %69, 4
  %71 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %68, i64* %71, align 8
  %72 = icmp eq %class.SkColorSpace* %66, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  tail call void @_ZdlPv(i8* %67) #16
  br label %78

78:                                               ; preds = %58, %39, %63, %73, %77, %43, %52, %56
  %79 = phi i64 [ %49, %56 ], [ %49, %52 ], [ %49, %43 ], [ %70, %77 ], [ %70, %73 ], [ %70, %63 ], [ %41, %39 ], [ %61, %58 ]
  store i64 %79, i64* %20, align 8
  store i64 %26, i64* %25, align 8
  %80 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %107

83:                                               ; preds = %78
  %84 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %85 = icmp eq %class.SkColorSpace* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = and i64 %79, 4294967295
  %88 = or i64 %87, 12884901888
  %89 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 0, i64* %89, align 8
  br label %105

90:                                               ; preds = %83
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 1 monotonic, !noalias !21
  %93 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %94 = ptrtoint %class.SkColorSpace* %84 to i64
  %95 = and i64 %79, 4294967295
  %96 = or i64 %95, 12884901888
  %97 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %class.SkColorSpace* %93, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %93 to i8*
  tail call void @_ZdlPv(i8* %104) #16
  br label %105

105:                                              ; preds = %103, %99, %90, %86
  %106 = phi i64 [ %88, %86 ], [ %96, %90 ], [ %96, %99 ], [ %96, %103 ]
  store i64 %106, i64* %20, align 8
  store i64 %26, i64* %25, align 8
  br label %107

107:                                              ; preds = %105, %78
  store i32 2, i32* %29, align 4
  %108 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %6, i64 0, i32 0
  store i32 1, i32* %108, align 8
  br label %109

109:                                              ; preds = %17, %107
  br i1 %3, label %110, label %134

110:                                              ; preds = %109
  %111 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 2
  %112 = load i32, i32* %111, align 8
  switch i32 %112, label %120 [
    i32 5, label %113
    i32 6, label %114
    i32 0, label %119
  ]

113:                                              ; preds = %110
  br label %120

114:                                              ; preds = %110
  %115 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1, i32 4
  %116 = load i8, i8* %115, align 8
  %117 = lshr i8 %116, 1
  %118 = zext i8 %117 to i32
  br label %120

119:                                              ; preds = %110
  br label %120

120:                                              ; preds = %110, %119, %114, %113
  %121 = phi i32 [ 0, %110 ], [ 1, %119 ], [ %118, %114 ], [ 6, %113 ]
  %122 = call %class.SkSwizzler* @_ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE(i32 %121, %struct.SkImageInfo* nonnull dereferenceable(24) %5, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %6) #14
  %123 = ptrtoint %class.SkSwizzler* %122 to i64
  %124 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %class.SkSwizzler*, %class.SkSwizzler** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.18"* %124 to i64*
  store i64 %123, i64* %127, align 8
  %128 = icmp eq %class.SkSwizzler* %126, null
  br i1 %128, label %156, label %129

129:                                              ; preds = %120
  %130 = bitcast %class.SkSwizzler* %126 to void (%class.SkSwizzler*)***
  %131 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %131, i64 2
  %133 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %132, align 8
  call void %133(%class.SkSwizzler* nonnull %126) #14
  br label %156

134:                                              ; preds = %109
  %135 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 5, i32 0
  %136 = load %class.SkColorTable*, %class.SkColorTable** %135, align 8
  %137 = icmp eq %class.SkColorTable* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %136, i64 0, i32 2
  %140 = load i32*, i32** %139, align 8
  br label %141

141:                                              ; preds = %134, %138
  %142 = phi i32* [ %140, %138 ], [ null, %134 ]
  %143 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 1
  %144 = call %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32) %143, i32* %142, %struct.SkImageInfo* nonnull dereferenceable(24) %5, %"struct.SkCodec::Options"* nonnull dereferenceable(24) %6, %struct.SkIRect* null) #14
  %145 = ptrtoint %class.SkSwizzler* %144 to i64
  %146 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = load %class.SkSwizzler*, %class.SkSwizzler** %147, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.18"* %146 to i64*
  store i64 %145, i64* %149, align 8
  %150 = icmp eq %class.SkSwizzler* %148, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %141
  %152 = bitcast %class.SkSwizzler* %148 to void (%class.SkSwizzler*)***
  %153 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %153, i64 2
  %155 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %154, align 8
  call void %155(%class.SkSwizzler* nonnull %148) #14
  br label %156

156:                                              ; preds = %141, %151, %120, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  %157 = load %class.SkColorSpace*, %class.SkColorSpace** %8, align 8
  %158 = icmp eq %class.SkColorSpace* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = bitcast %class.SkColorSpace* %157 to i8*
  call void @_ZdlPv(i8* %164) #16
  br label %165

165:                                              ; preds = %156, %159, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10SkPngCodec21initializeXformParamsEv(%class.SkPngCodec* nocapture) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %14 [
    i32 1, label %4
    i32 2, label %6
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 8, i32 1, i32 0
  br label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %class.SkSwizzler*, %class.SkSwizzler** %7, align 8
  %9 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %8, i64 0, i32 12
  br label %10

10:                                               ; preds = %4, %6
  %11 = phi i32* [ %9, %6 ], [ %5, %4 ]
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 11
  store i32 %12, i32* %13, align 8
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

declare %class.SkSwizzler* @_ZN10SkSwizzler10MakeSimpleEiRK11SkImageInfoRKN7SkCodec7OptionsE(i32, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) local_unnamed_addr #3

declare %class.SkSwizzler* @_ZN10SkSwizzler4MakeERK13SkEncodedInfoPKjRK11SkImageInfoRKN7SkCodec7OptionsEPK7SkIRect(%struct.SkEncodedInfo* dereferenceable(32), i32*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24), %struct.SkIRect*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkSampler* @_ZN10SkPngCodec10getSamplerEb(%class.SkPngCodec*, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %class.SkSwizzler*, %class.SkSwizzler** %3, align 8
  %5 = icmp ne %class.SkSwizzler* %4, null
  %6 = xor i1 %1, true
  %7 = or i1 %5, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 8
  %10 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 9
  tail call void @_ZN10SkPngCodec18initializeSwizzlerERK11SkImageInfoRKN7SkCodec7OptionsEb(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %9, %"struct.SkCodec::Options"* dereferenceable(24) %10, i1 zeroext true)
  %11 = load %class.SkSwizzler*, %class.SkSwizzler** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi %class.SkSwizzler* [ %11, %8 ], [ %4, %2 ]
  %14 = bitcast %class.SkSwizzler* %13 to %class.SkSampler*
  ret %class.SkSampler* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPngCodec8onRewindEv(%class.SkPngCodec*) unnamed_addr #1 align 2 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca %struct.png_info_def*, align 8
  %4 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"struct.SkPngCodec::voidp", %"struct.SkPngCodec::voidp"* %4, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.SkPngCodec::voidp"* %4 to %struct.png_struct_def**
  %10 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %11 = bitcast %"struct.SkPngCodec::voidp"* %10 to %struct.png_info_def**
  tail call void @cr_png_destroy_read_struct(%struct.png_struct_def** %9, %struct.png_info_def** %11, %struct.png_info_def** null) #14
  %12 = bitcast %"struct.SkPngCodec::voidp"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast %struct.png_struct_def** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  store %struct.png_struct_def* inttoptr (i64 -6148914691236517206 to %struct.png_struct_def*), %struct.png_struct_def** %2, align 8
  %15 = bitcast %struct.png_info_def** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  store %struct.png_info_def* inttoptr (i64 -6148914691236517206 to %struct.png_info_def*), %struct.png_info_def** %3, align 8
  %16 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %class.SkStream*, %class.SkStream** %16, align 8
  %18 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 2, i32 0
  %19 = load %class.SkPngChunkReader*, %class.SkPngChunkReader** %18, align 8
  %20 = call fastcc i32 @_ZL11read_headerP8SkStreamP16SkPngChunkReaderPP7SkCodecPP14png_struct_defPP12png_info_def(%class.SkStream* %17, %class.SkPngChunkReader* %19, %class.SkCodec** null, %struct.png_struct_def** nonnull %2, %struct.png_info_def** nonnull %3)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %13
  %23 = bitcast %struct.png_struct_def** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.SkPngCodec::voidp"* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %struct.png_info_def** %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %29 = bitcast %"struct.SkPngCodec::voidp"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 14
  store i8 0, i8* %30, align 8
  br label %31

31:                                               ; preds = %13, %22
  %32 = phi i1 [ true, %22 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL11read_headerP8SkStreamP16SkPngChunkReaderPP7SkCodecPP14png_struct_defPP12png_info_def(%class.SkStream*, %class.SkPngChunkReader*, %class.SkCodec**, %struct.png_struct_def**, %struct.png_info_def**) unnamed_addr #1 {
  %6 = alloca %class.AutoCleanPng, align 8
  %7 = call noalias %struct.png_struct_def* @cr_png_create_read_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* null, void (%struct.png_struct_def*, i8*)* nonnull @_ZL11sk_error_fnP14png_struct_defPKc, void (%struct.png_struct_def*, i8*)* nonnull @_Z13sk_warning_fnP14png_struct_defPKc) #14
  %8 = icmp eq %struct.png_struct_def* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.AutoCleanPng* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #14
  %11 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %6, i64 0, i32 0
  %12 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %6, i64 0, i32 1
  %13 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %6, i64 0, i32 2
  %14 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %6, i64 0, i32 3
  %15 = getelementptr inbounds %class.AutoCleanPng, %class.AutoCleanPng* %6, i64 0, i32 4
  store %struct.png_struct_def* %7, %struct.png_struct_def** %11, align 8
  store %struct.png_info_def* null, %struct.png_info_def** %12, align 8
  store %class.SkStream* %0, %class.SkStream** %13, align 8
  store %class.SkPngChunkReader* %1, %class.SkPngChunkReader** %14, align 8
  store %class.SkCodec** %2, %class.SkCodec*** %15, align 8
  %16 = call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %7) #14
  %17 = icmp eq %struct.png_info_def* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %9
  store %struct.png_info_def* %16, %struct.png_info_def** %12, align 8
  %19 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* nonnull %7, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %20 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %19, i64 0, i64 0
  %21 = call i32 @_setjmp(%struct.__jmp_buf_tag* %20) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = icmp eq %class.SkPngChunkReader* %1, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  call void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* nonnull %7, i32 3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i32 0) #14
  %26 = bitcast %class.SkPngChunkReader* %1 to i8*
  call void @cr_png_set_read_user_chunk_fn(%struct.png_struct_def* nonnull %7, i8* nonnull %26, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* nonnull @_ZL18sk_read_user_chunkP14png_struct_defP19png_unknown_chunk_t) #14
  br label %27

27:                                               ; preds = %23, %25
  %28 = call zeroext i1 @_ZN12AutoCleanPng12decodeBoundsEv(%class.AutoCleanPng* nonnull %6)
  br i1 %28, label %29, label %35

29:                                               ; preds = %27
  %30 = icmp eq %struct.png_struct_def** %3, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  store %struct.png_struct_def* %7, %struct.png_struct_def** %3, align 8
  br label %32

32:                                               ; preds = %29, %31
  %33 = icmp eq %struct.png_info_def** %4, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  store %struct.png_info_def* %16, %struct.png_info_def** %4, align 8
  br label %35

35:                                               ; preds = %27, %32, %34, %18, %9
  %36 = phi i32 [ 8, %9 ], [ 6, %18 ], [ 1, %27 ], [ 0, %32 ], [ 0, %34 ]
  %37 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %38 = icmp eq %struct.png_struct_def* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %41 = icmp eq %struct.png_info_def* %40, null
  %42 = select i1 %41, %struct.png_info_def** null, %struct.png_info_def** %12
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %11, %struct.png_info_def** %42, %struct.png_info_def** null) #14
  br label %43

43:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #14
  br label %44

44:                                               ; preds = %5, %43
  %45 = phi i32 [ %36, %43 ], [ 8, %5 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPngCodec11onGetPixelsERK11SkImageInfoPvmRKN7SkCodec7OptionsEPi(%class.SkPngCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24), i32*) unnamed_addr #1 align 2 {
  %7 = tail call i32 @_ZN10SkPngCodec16initializeXformsERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %11 = load %struct.SkIRect*, %struct.SkIRect** %10, align 8
  %12 = icmp eq %struct.SkIRect* %11, null
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  tail call void @_ZN10SkPngCodec15allocateStorageERK11SkImageInfo(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  %14 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %26 [
    i32 1, label %16
    i32 2, label %18
  ]

16:                                               ; preds = %13
  %17 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 8, i32 1, i32 0
  br label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %class.SkSwizzler*, %class.SkSwizzler** %19, align 8
  %21 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %20, i64 0, i32 12
  br label %22

22:                                               ; preds = %18, %16
  %23 = phi i32* [ %17, %16 ], [ %21, %18 ]
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 11
  store i32 %24, i32* %25, align 8
  br label %26

26:                                               ; preds = %22, %13
  %27 = bitcast %class.SkPngCodec* %0 to i32 (%class.SkPngCodec*, i8*, i64, i32*)***
  %28 = load i32 (%class.SkPngCodec*, i8*, i64, i32*)**, i32 (%class.SkPngCodec*, i8*, i64, i32*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%class.SkPngCodec*, i8*, i64, i32*)*, i32 (%class.SkPngCodec*, i8*, i64, i32*)** %28, i64 24
  %30 = load i32 (%class.SkPngCodec*, i8*, i64, i32*)*, i32 (%class.SkPngCodec*, i8*, i64, i32*)** %29, align 8
  %31 = tail call i32 %30(%class.SkPngCodec* %0, i8* %2, i64 %3, i32* %5) #14
  br label %32

32:                                               ; preds = %9, %6, %26
  %33 = phi i32 [ %31, %26 ], [ %7, %6 ], [ 9, %9 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPngCodec24onStartIncrementalDecodeERK11SkImageInfoPvmRKN7SkCodec7OptionsE(%class.SkPngCodec*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), i8*, i64, %"struct.SkCodec::Options"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = tail call i32 @_ZN10SkPngCodec16initializeXformsERK11SkImageInfoRKN7SkCodec7OptionsE(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1, %"struct.SkCodec::Options"* dereferenceable(24) %4)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %27

8:                                                ; preds = %5
  tail call void @_ZN10SkPngCodec15allocateStorageERK11SkImageInfo(%class.SkPngCodec* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  %9 = getelementptr inbounds %"struct.SkCodec::Options", %"struct.SkCodec::Options"* %4, i64 0, i32 1
  %10 = load %struct.SkIRect*, %struct.SkIRect** %9, align 8
  %11 = icmp eq %struct.SkIRect* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  br label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i32 [ %14, %12 ], [ 0, %16 ]
  %20 = phi i32* [ %15, %12 ], [ %17, %16 ]
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, -1
  %23 = bitcast %class.SkPngCodec* %0 to void (%class.SkPngCodec*, i32, i32, i8*, i64)***
  %24 = load void (%class.SkPngCodec*, i32, i32, i8*, i64)**, void (%class.SkPngCodec*, i32, i32, i8*, i64)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkPngCodec*, i32, i32, i8*, i64)*, void (%class.SkPngCodec*, i32, i32, i8*, i64)** %24, i64 25
  %26 = load void (%class.SkPngCodec*, i32, i32, i8*, i64)*, void (%class.SkPngCodec*, i32, i32, i8*, i64)** %25, align 8
  tail call void %26(%class.SkPngCodec* %0, i32 %19, i32 %22, i8* %2, i64 %3) #14
  br label %27

27:                                               ; preds = %5, %18
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPngCodec19onIncrementalDecodeEPi(%class.SkPngCodec*, i32*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %15 [
    i32 1, label %5
    i32 2, label %7
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 8, i32 1, i32 0
  br label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %class.SkSwizzler*, %class.SkSwizzler** %8, align 8
  %10 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %9, i64 0, i32 12
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i32* [ %6, %5 ], [ %10, %7 ]
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 11
  store i32 %13, i32* %14, align 8
  br label %15

15:                                               ; preds = %11, %2
  %16 = bitcast %class.SkPngCodec* %0 to i32 (%class.SkPngCodec*, i32*)***
  %17 = load i32 (%class.SkPngCodec*, i32*)**, i32 (%class.SkPngCodec*, i32*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.SkPngCodec*, i32*)*, i32 (%class.SkPngCodec*, i32*)** %17, i64 26
  %19 = load i32 (%class.SkPngCodec*, i32*)*, i32 (%class.SkPngCodec*, i32*)** %18, align 8
  %20 = tail call i32 %19(%class.SkPngCodec* %0, i32* %1) #14
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCodec* @_ZN10SkPngCodec14MakeFromStreamENSt3__110unique_ptrI8SkStreamNS0_14default_deleteIS2_EEEEPN7SkCodec6ResultEP16SkPngChunkReader(%class.SkStream*, i32* nocapture, %class.SkPngChunkReader*) local_unnamed_addr #1 align 2 {
  %4 = alloca %class.SkCodec*, align 8
  %5 = bitcast %class.SkCodec** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  store %class.SkCodec* null, %class.SkCodec** %4, align 8
  %6 = call fastcc i32 @_ZL11read_headerP8SkStreamP16SkPngChunkReaderPP7SkCodecPP14png_struct_defPP12png_info_def(%class.SkStream* %0, %class.SkPngChunkReader* %2, %class.SkCodec** nonnull %4, %struct.png_struct_def** null, %struct.png_info_def** null)
  store i32 %6, i32* %1, align 4
  %7 = icmp eq i32 %6, 0
  %8 = load %class.SkCodec*, %class.SkCodec** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %9 = icmp eq %class.SkStream* %0, null
  %10 = or i1 %9, %7
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = bitcast %class.SkStream* %0 to void (%class.SkStream*)***
  %13 = load void (%class.SkStream*)**, void (%class.SkStream*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkStream*)*, void (%class.SkStream*)** %13, i64 1
  %15 = load void (%class.SkStream*)*, void (%class.SkStream*)** %14, align 8
  call void %15(%class.SkStream* nonnull %0) #14
  br label %16

16:                                               ; preds = %3, %11
  ret %class.SkCodec* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK7SkCodec21onGetScaledDimensionsEf(%class.SkCodec*, float) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkCodec, %class.SkCodec* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec21onDimensionsSupportedERK7SkISize(%class.SkCodec*, %struct.SkISize* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK10SkPngCodec18onGetEncodedFormatEv(%class.SkPngCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkCodec*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkCodec*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec16onGetValidSubsetEP7SkIRect(%class.SkCodec*, %struct.SkIRect*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK7SkCodec18onGetScanlineOrderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare i32 @_ZNK7SkCodec16onOutputScanlineEi(%class.SkCodec*, i32) unnamed_addr #3

declare zeroext i1 @_ZN7SkCodec19conversionSupportedERK11SkImageInfobb(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14usesColorXformEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec15onGetFrameCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7SkCodec14onGetFrameInfoEiPNS_9FrameInfoE(%class.SkCodec*, i32, %"struct.SkCodec::FrameInfo"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec20onGetRepetitionCountEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkFrameHolder* @_ZNK7SkCodec14getFrameHolderEv(%class.SkCodec*) unnamed_addr #1 comdat align 2 {
  ret %class.SkFrameHolder* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec21onStartScanlineDecodeERK11SkImageInfoRKNS_7OptionsE(%class.SkCodec*, %struct.SkImageInfo* dereferenceable(24), %"struct.SkCodec::Options"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret i32 9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7SkCodec15onSkipScanlinesEi(%class.SkCodec*, i32) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN7SkCodec14onGetScanlinesEPvim(%class.SkCodec*, i8*, i32, i64) unnamed_addr #1 comdat align 2 {
  ret i32 0
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL24premultiply_argb_as_rgbajjjj(i32, i32, i32, i32) unnamed_addr #11 {
  %5 = icmp eq i32 %0, 255
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = mul i32 %1, %0
  %8 = add i32 %7, 128
  %9 = lshr i32 %8, 8
  %10 = add i32 %9, %8
  %11 = lshr i32 %10, 8
  %12 = mul i32 %2, %0
  %13 = add i32 %12, 128
  %14 = lshr i32 %13, 8
  %15 = add i32 %14, %13
  %16 = lshr i32 %15, 8
  %17 = mul i32 %3, %0
  %18 = add i32 %17, 128
  %19 = lshr i32 %18, 8
  %20 = add i32 %19, %18
  %21 = lshr i32 %20, 8
  br label %22

22:                                               ; preds = %4, %6
  %23 = phi i32 [ %11, %6 ], [ %1, %4 ]
  %24 = phi i32 [ %16, %6 ], [ %2, %4 ]
  %25 = phi i32 [ %21, %6 ], [ %3, %4 ]
  %26 = shl i32 %0, 24
  %27 = or i32 %23, %26
  %28 = shl i32 %24, 8
  %29 = or i32 %27, %28
  %30 = shl i32 %25, 16
  %31 = or i32 %29, %30
  ret i32 %31
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL24premultiply_argb_as_bgrajjjj(i32, i32, i32, i32) unnamed_addr #11 {
  %5 = icmp eq i32 %0, 255
  br i1 %5, label %22, label %6

6:                                                ; preds = %4
  %7 = mul i32 %1, %0
  %8 = add i32 %7, 128
  %9 = lshr i32 %8, 8
  %10 = add i32 %9, %8
  %11 = lshr i32 %10, 8
  %12 = mul i32 %2, %0
  %13 = add i32 %12, 128
  %14 = lshr i32 %13, 8
  %15 = add i32 %14, %13
  %16 = lshr i32 %15, 8
  %17 = mul i32 %3, %0
  %18 = add i32 %17, 128
  %19 = lshr i32 %18, 8
  %20 = add i32 %19, %18
  %21 = lshr i32 %20, 8
  br label %22

22:                                               ; preds = %4, %6
  %23 = phi i32 [ %11, %6 ], [ %1, %4 ]
  %24 = phi i32 [ %16, %6 ], [ %2, %4 ]
  %25 = phi i32 [ %21, %6 ], [ %3, %4 ]
  %26 = shl i32 %0, 24
  %27 = shl i32 %23, 16
  %28 = or i32 %27, %26
  %29 = shl i32 %24, 8
  %30 = or i32 %28, %29
  %31 = or i32 %30, %25
  ret i32 %31
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL18SkPackARGB_as_RGBAjjjj(i32, i32, i32, i32) unnamed_addr #11 {
  %5 = shl i32 %0, 24
  %6 = or i32 %5, %1
  %7 = shl i32 %2, 8
  %8 = or i32 %6, %7
  %9 = shl i32 %3, 16
  %10 = or i32 %8, %9
  ret i32 %10
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL18SkPackARGB_as_BGRAjjjj(i32, i32, i32, i32) unnamed_addr #11 {
  %5 = shl i32 %0, 24
  %6 = shl i32 %1, 16
  %7 = or i32 %6, %5
  %8 = shl i32 %2, 8
  %9 = or i32 %7, %8
  %10 = or i32 %9, %3
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPngCodecD2Ev(%class.SkPngCodec*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV10SkPngCodec, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"struct.SkPngCodec::voidp", %"struct.SkPngCodec::voidp"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.SkPngCodec::voidp"* %3 to %struct.png_struct_def**
  %9 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 4
  %10 = bitcast %"struct.SkPngCodec::voidp"* %9 to %struct.png_info_def**
  tail call void @cr_png_destroy_read_struct(%struct.png_struct_def** %8, %struct.png_info_def** %10, %struct.png_info_def** null) #14
  %11 = bitcast %"struct.SkPngCodec::voidp"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #14
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_Z7sk_freePv(i8* nonnull %14) #14
  br label %17

17:                                               ; preds = %12, %16
  %18 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %class.SkSwizzler*, %class.SkSwizzler** %18, align 8
  store %class.SkSwizzler* null, %class.SkSwizzler** %18, align 8
  %20 = icmp eq %class.SkSwizzler* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %class.SkSwizzler* %19 to void (%class.SkSwizzler*)***
  %23 = load void (%class.SkSwizzler*)**, void (%class.SkSwizzler*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %23, i64 2
  %25 = load void (%class.SkSwizzler*)*, void (%class.SkSwizzler*)** %24, align 8
  tail call void %25(%class.SkSwizzler* nonnull %19) #14
  br label %26

26:                                               ; preds = %17, %21
  %27 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 5, i32 0
  %28 = load %class.SkColorTable*, %class.SkColorTable** %27, align 8
  %29 = icmp eq %class.SkColorTable* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkColorTable, %class.SkColorTable* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorTable* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkColorTable* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #14
  br label %40

40:                                               ; preds = %26, %30, %34
  %41 = getelementptr inbounds %class.SkPngCodec, %class.SkPngCodec* %0, i64 0, i32 2, i32 0
  %42 = load %class.SkPngChunkReader*, %class.SkPngChunkReader** %41, align 8
  %43 = icmp eq %class.SkPngChunkReader* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkPngChunkReader, %class.SkPngChunkReader* %42, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkPngChunkReader* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkPngChunkReader* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  tail call void %53(%class.SkRefCntBase* nonnull %49) #14
  br label %54

54:                                               ; preds = %40, %44, %48
  %55 = bitcast %class.SkPngCodec* %0 to %class.SkCodec*
  tail call void @_ZN7SkCodecD2Ev(%class.SkCodec* %55) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoderD0Ev(%class.SkPngNormalDecoder*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkPngCodec*
  tail call void @_ZN10SkPngCodecD2Ev(%class.SkPngCodec* %2) #14
  %3 = bitcast %class.SkPngNormalDecoder* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN18SkPngNormalDecoder13decodeAllRowsEPvmPi(%class.SkPngNormalDecoder*, i8*, i64, i32*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkPngCodec*
  %8 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %9 = bitcast i8** %8 to %struct.png_struct_def**
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %11 = bitcast %class.SkPngNormalDecoder* %0 to i8*
  tail call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %10, i8* %11, void (%struct.png_struct_def*, %struct.png_info_def*)* null, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN18SkPngNormalDecoder15AllRowsCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* null) #14
  %12 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 3
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 4
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 5
  store i32 0, i32* %15, align 8
  %16 = add nsw i32 %6, -1
  %17 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 6
  store i32 %16, i32* %17, align 4
  %18 = tail call zeroext i1 @_ZN10SkPngCodec11processDataEv(%class.SkPngCodec* %7)
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load i32, i32* %14, align 4
  %21 = icmp eq i32 %20, %6
  br i1 %21, label %28, label %22

22:                                               ; preds = %19, %4
  %23 = icmp eq i32* %3, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = load i32, i32* %14, align 4
  store i32 %25, i32* %3, align 4
  br label %26

26:                                               ; preds = %22, %24
  %27 = select i1 %18, i32 1, i32 2
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi i32 [ %27, %26 ], [ 0, %19 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoder8setRangeEiiPvm(%class.SkPngNormalDecoder*, i32, i32, i8*, i64) unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %7 = bitcast i8** %6 to %struct.png_struct_def**
  %8 = load %struct.png_struct_def*, %struct.png_struct_def** %7, align 8
  %9 = bitcast %class.SkPngNormalDecoder* %0 to i8*
  tail call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %8, i8* %9, void (%struct.png_struct_def*, %struct.png_info_def*)* null, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN18SkPngNormalDecoder11RowCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* null) #14
  %10 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 5
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 6
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 3
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 4
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = sub i32 1, %1
  %16 = add i32 %15, %2
  %17 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 7
  store i32 %16, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN18SkPngNormalDecoder6decodeEPi(%class.SkPngNormalDecoder*, i32*) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkPngCodec*
  %4 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %class.SkSwizzler*, %class.SkSwizzler** %4, align 8
  %6 = icmp eq %class.SkSwizzler* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %5, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = sub nsw i32 %11, %13
  %15 = add nsw i32 %14, 1
  %16 = icmp sgt i32 %9, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %7
  %18 = sdiv i32 %15, %9
  br label %19

19:                                               ; preds = %7, %17
  %20 = phi i32 [ %18, %17 ], [ 1, %7 ]
  %21 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 7
  store i32 %20, i32* %21, align 8
  br label %22

22:                                               ; preds = %2, %19
  %23 = tail call zeroext i1 @_ZN10SkPngCodec11processDataEv(%class.SkPngCodec* %3)
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %24, %22
  %31 = icmp eq i32* %1, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %30, %32
  %36 = select i1 %23, i32 1, i32 2
  br label %37

37:                                               ; preds = %24, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %24 ]
  ret i32 %38
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoder15AllRowsCallbackEP14png_struct_defPhji(%struct.png_struct_def*, i8*, i32, i32) #1 comdat align 2 {
  %5 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #14
  %6 = bitcast i8* %5 to %class.SkPngNormalDecoder*
  tail call void @_ZN18SkPngNormalDecoder15allRowsCallbackEPhi(%class.SkPngNormalDecoder* %6, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoder15allRowsCallbackEPhi(%class.SkPngNormalDecoder*, i8*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 10
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %27 [
    i32 0, label %11
    i32 1, label %14
    i32 2, label %18
  ]

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %class.SkSwizzler*, %class.SkSwizzler** %12, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %13, i8* %8, i8* %1) #14
  br label %27

14:                                               ; preds = %3
  %15 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkCodec*
  %16 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 11
  %17 = load i32, i32* %16, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %15, i8* %8, i8* %1, i32 %17) #14
  br label %27

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %class.SkSwizzler*, %class.SkSwizzler** %19, align 8
  %21 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 8
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %20, i8* %22, i8* %1) #14
  %23 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkCodec*
  %24 = load i8*, i8** %21, align 8
  %25 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 11
  %26 = load i32, i32* %25, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %23, i8* %8, i8* %24, i32 %26) #14
  br label %27

27:                                               ; preds = %3, %11, %14, %18
  %28 = load i8*, i8** %7, align 8
  %29 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 4
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  store i8* %31, i8** %7, align 8
  ret void
}

declare i8* @cr_png_get_progressive_ptr(%struct.png_struct_def*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoder11RowCallbackEP14png_struct_defPhji(%struct.png_struct_def*, i8*, i32, i32) #1 comdat align 2 {
  %5 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #14
  %6 = bitcast i8* %5 to %class.SkPngNormalDecoder*
  tail call void @_ZN18SkPngNormalDecoder11rowCallbackEPhi(%class.SkPngNormalDecoder* %6, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkPngNormalDecoder11rowCallbackEPhi(%class.SkPngNormalDecoder*, i8*, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, %2
  br i1 %6, label %58, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %class.SkSwizzler*, %class.SkSwizzler** %8, align 8
  %10 = icmp eq %class.SkSwizzler* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = sub i32 %2, %5
  %13 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %9, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = sdiv i32 %14, -2
  %16 = add i32 %12, %15
  %17 = srem i32 %16, %14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %47

22:                                               ; preds = %7, %11
  %23 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 10
  %26 = load i32, i32* %25, align 4
  switch i32 %26, label %39 [
    i32 0, label %27
    i32 1, label %28
    i32 2, label %32
  ]

27:                                               ; preds = %22
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %9, i8* %24, i8* %1) #14
  br label %39

28:                                               ; preds = %22
  %29 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkCodec*
  %30 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 11
  %31 = load i32, i32* %30, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %29, i8* %24, i8* %1, i32 %31) #14
  br label %39

32:                                               ; preds = %22
  %33 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 8
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %9, i8* %34, i8* %1) #14
  %35 = bitcast %class.SkPngNormalDecoder* %0 to %class.SkCodec*
  %36 = load i8*, i8** %33, align 8
  %37 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 11
  %38 = load i32, i32* %37, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %35, i8* %24, i8* %36, i32 %38) #14
  br label %39

39:                                               ; preds = %22, %27, %28, %32
  %40 = load i8*, i8** %23, align 8
  %41 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  store i8* %43, i8** %23, align 8
  %44 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %44, align 4
  br label %47

47:                                               ; preds = %19, %39
  %48 = phi i32 [ %21, %19 ], [ %46, %39 ]
  %49 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 7
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.SkPngNormalDecoder, %class.SkPngNormalDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %54 = bitcast i8** %53 to %struct.png_struct_def**
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %54, align 8
  %56 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %55, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %57 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %56, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %57, i32 2) #17
  unreachable

58:                                               ; preds = %3, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPngInterlacedDecoderD2Ev(%class.SkPngInterlacedDecoder*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV22SkPngInterlacedDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #14
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkPngCodec*
  tail call void @_ZN10SkPngCodecD2Ev(%class.SkPngCodec* %8) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPngInterlacedDecoderD0Ev(%class.SkPngInterlacedDecoder*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV22SkPngInterlacedDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #14
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkPngCodec*
  tail call void @_ZN10SkPngCodecD2Ev(%class.SkPngCodec* %8) #14
  %9 = bitcast %class.SkPngInterlacedDecoder* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22SkPngInterlacedDecoder13decodeAllRowsEPvmPi(%class.SkPngInterlacedDecoder*, i8*, i64, i32*) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %8 = bitcast i8** %7 to %struct.png_struct_def**
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %10 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 4, i32 0
  %11 = bitcast i8** %10 to %struct.png_info_def**
  %12 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %13 = tail call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %9, %struct.png_info_def* %12) #14
  %14 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 8
  store i64 %13, i64* %14, align 8
  %15 = sext i32 %6 to i64
  %16 = mul i64 %13, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = tail call i8* @_Z15sk_malloc_throwmm(i64 %16, i64 1) #14
  br label %20

20:                                               ; preds = %18, %4
  %21 = phi i8* [ %19, %18 ], [ null, %4 ]
  %22 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  store i8* %21, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @_Z7sk_freePv(i8* nonnull %23) #14
  br label %26

26:                                               ; preds = %20, %25
  %27 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 7
  store i8 0, i8* %27, align 4
  %28 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkPngCodec*
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %30 = bitcast %class.SkPngInterlacedDecoder* %0 to i8*
  tail call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %29, i8* %30, void (%struct.png_struct_def*, %struct.png_info_def*)* null, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN22SkPngInterlacedDecoder21InterlacedRowCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* null) #14
  %31 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = add nsw i32 %6, -1
  %33 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 3
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 6
  store i32 0, i32* %34, align 8
  %35 = tail call zeroext i1 @_ZN10SkPngCodec11processDataEv(%class.SkPngCodec* %28)
  %36 = load i32, i32* %34, align 8
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %26
  %39 = load i8*, i8** %22, align 8
  %40 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 10
  %41 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 8
  %43 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkCodec*
  %44 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 11
  br label %47

45:                                               ; preds = %61, %26
  %46 = phi i32 [ %36, %26 ], [ %66, %61 ]
  br i1 %35, label %68, label %71

47:                                               ; preds = %38, %61
  %48 = phi i32 [ 0, %38 ], [ %65, %61 ]
  %49 = phi i8* [ %39, %38 ], [ %64, %61 ]
  %50 = phi i8* [ %1, %38 ], [ %62, %61 ]
  %51 = load i32, i32* %40, align 4
  switch i32 %51, label %61 [
    i32 0, label %52
    i32 1, label %54
    i32 2, label %56
  ]

52:                                               ; preds = %47
  %53 = load %class.SkSwizzler*, %class.SkSwizzler** %41, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %53, i8* %50, i8* %49) #14
  br label %61

54:                                               ; preds = %47
  %55 = load i32, i32* %44, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %43, i8* %50, i8* %49, i32 %55) #14
  br label %61

56:                                               ; preds = %47
  %57 = load %class.SkSwizzler*, %class.SkSwizzler** %41, align 8
  %58 = load i8*, i8** %42, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %57, i8* %58, i8* %49) #14
  %59 = load i8*, i8** %42, align 8
  %60 = load i32, i32* %44, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %43, i8* %50, i8* %59, i32 %60) #14
  br label %61

61:                                               ; preds = %47, %52, %54, %56
  %62 = getelementptr inbounds i8, i8* %50, i64 %2
  %63 = load i64, i64* %14, align 8
  %64 = getelementptr inbounds i8, i8* %49, i64 %63
  %65 = add nuw nsw i32 %48, 1
  %66 = load i32, i32* %34, align 8
  %67 = icmp slt i32 %65, %66
  br i1 %67, label %47, label %45

68:                                               ; preds = %45
  %69 = load i8, i8* %27, align 4, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68, %45
  %72 = icmp eq i32* %3, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %71
  store i32 %46, i32* %3, align 4
  br label %74

74:                                               ; preds = %71, %73
  %75 = select i1 %35, i32 1, i32 2
  br label %76

76:                                               ; preds = %68, %74
  %77 = phi i32 [ %75, %74 ], [ 0, %68 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPngInterlacedDecoder8setRangeEiiPvm(%class.SkPngInterlacedDecoder*, i32, i32, i8*, i64) unnamed_addr #1 comdat align 2 {
  %6 = sub i32 1, %1
  %7 = add i32 %6, %2
  %8 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %9 = bitcast i8** %8 to %struct.png_struct_def**
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %11 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 4, i32 0
  %12 = bitcast i8** %11 to %struct.png_info_def**
  %13 = load %struct.png_info_def*, %struct.png_info_def** %12, align 8
  %14 = tail call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %10, %struct.png_info_def* %13) #14
  %15 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 8
  store i64 %14, i64* %15, align 8
  %16 = sext i32 %7 to i64
  %17 = mul i64 %14, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  %20 = tail call i8* @_Z15sk_malloc_throwmm(i64 %17, i64 1) #14
  br label %21

21:                                               ; preds = %19, %5
  %22 = phi i8* [ %20, %19 ], [ null, %5 ]
  %23 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* %22, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  tail call void @_Z7sk_freePv(i8* nonnull %24) #14
  br label %27

27:                                               ; preds = %21, %26
  %28 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 7
  store i8 0, i8* %28, align 4
  %29 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %30 = bitcast %class.SkPngInterlacedDecoder* %0 to i8*
  tail call void @cr_png_set_progressive_read_fn(%struct.png_struct_def* %29, i8* %30, void (%struct.png_struct_def*, %struct.png_info_def*)* null, void (%struct.png_struct_def*, i8*, i32, i32)* nonnull @_ZN22SkPngInterlacedDecoder21InterlacedRowCallbackEP14png_struct_defPhji, void (%struct.png_struct_def*, %struct.png_info_def*)* null) #14
  %31 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 2
  store i32 %1, i32* %31, align 8
  %32 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 3
  store i32 %2, i32* %32, align 4
  %33 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 4
  store i8* %3, i8** %33, align 8
  %34 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 5
  store i64 %4, i64* %34, align 8
  %35 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 6
  store i32 0, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN22SkPngInterlacedDecoder6decodeEPi(%class.SkPngInterlacedDecoder*, i32*) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkPngCodec*
  %4 = tail call zeroext i1 @_ZN10SkPngCodec11processDataEv(%class.SkPngCodec* %3)
  %5 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = icmp eq i32* %1, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %8, %10
  %12 = select i1 %4, i32 1, i32 2
  br label %87

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %class.SkSwizzler*, %class.SkSwizzler** %14, align 8
  %16 = icmp eq %class.SkSwizzler* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %15, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %13, %17
  %21 = phi i32 [ %19, %17 ], [ 1, %13 ]
  %22 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = sub nsw i32 %23, %25
  %27 = add nsw i32 %26, 1
  %28 = icmp sgt i32 %21, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = sdiv i32 %27, %21
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %76

32:                                               ; preds = %20, %29
  %33 = phi i32 [ %30, %29 ], [ 1, %20 ]
  %34 = sdiv i32 %21, 2
  %35 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 8
  %37 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 10
  %38 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 8
  %39 = bitcast %class.SkPngInterlacedDecoder* %0 to %class.SkCodec*
  %40 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 11
  %41 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 5
  %42 = sext i32 %21 to i64
  %43 = icmp slt i32 %34, %6
  br i1 %43, label %44, label %76

44:                                               ; preds = %32
  %45 = sext i32 %34 to i64
  %46 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 4
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %44, %69
  %49 = phi i8* [ %47, %44 ], [ %72, %69 ]
  %50 = phi i32 [ 0, %44 ], [ %67, %69 ]
  %51 = phi i64 [ %45, %44 ], [ %70, %69 ]
  %52 = load i8*, i8** %35, align 8
  %53 = load i64, i64* %36, align 8
  %54 = mul i64 %53, %51
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i32, i32* %37, align 4
  switch i32 %56, label %66 [
    i32 0, label %57
    i32 1, label %59
    i32 2, label %61
  ]

57:                                               ; preds = %48
  %58 = load %class.SkSwizzler*, %class.SkSwizzler** %14, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %58, i8* %49, i8* %55) #14
  br label %66

59:                                               ; preds = %48
  %60 = load i32, i32* %40, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %39, i8* %49, i8* %55, i32 %60) #14
  br label %66

61:                                               ; preds = %48
  %62 = load %class.SkSwizzler*, %class.SkSwizzler** %14, align 8
  %63 = load i8*, i8** %38, align 8
  tail call void @_ZN10SkSwizzler7swizzleEPvPKh(%class.SkSwizzler* %62, i8* %63, i8* %55) #14
  %64 = load i8*, i8** %38, align 8
  %65 = load i32, i32* %40, align 8
  tail call void @_ZNK7SkCodec15applyColorXformEPvPKvi(%class.SkCodec* %39, i8* %49, i8* %64, i32 %65) #14
  br label %66

66:                                               ; preds = %48, %57, %59, %61
  %67 = add nuw nsw i32 %50, 1
  %68 = icmp eq i32 %67, %33
  br i1 %68, label %76, label %69

69:                                               ; preds = %66
  %70 = add i64 %51, %42
  %71 = load i64, i64* %41, align 8
  %72 = getelementptr inbounds i8, i8* %49, i64 %71
  %73 = load i32, i32* %5, align 8
  %74 = sext i32 %73 to i64
  %75 = icmp slt i64 %70, %74
  br i1 %75, label %48, label %76

76:                                               ; preds = %66, %69, %32, %29
  %77 = phi i32 [ 0, %29 ], [ 0, %32 ], [ %67, %69 ], [ %33, %66 ]
  br i1 %4, label %78, label %82

78:                                               ; preds = %76
  %79 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 7
  %80 = load i8, i8* %79, align 4, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %78, %76
  %83 = icmp eq i32* %1, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %82
  store i32 %77, i32* %1, align 4
  br label %85

85:                                               ; preds = %82, %84
  %86 = select i1 %4, i32 1, i32 2
  br label %87

87:                                               ; preds = %85, %78, %11
  %88 = phi i32 [ %12, %11 ], [ %86, %85 ], [ 0, %78 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPngInterlacedDecoder21InterlacedRowCallbackEP14png_struct_defPhji(%struct.png_struct_def*, i8*, i32, i32) #1 comdat align 2 {
  %5 = tail call i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* %0) #14
  %6 = bitcast i8* %5 to %class.SkPngInterlacedDecoder*
  tail call void @_ZN22SkPngInterlacedDecoder21interlacedRowCallbackEPhii(%class.SkPngInterlacedDecoder* %6, i8* %1, i32 %2, i32 %3)
  ret void
}

declare i64 @cr_png_get_rowbytes(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPngInterlacedDecoder21interlacedRowCallbackEPhii(%class.SkPngInterlacedDecoder*, i8*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, %2
  br i1 %7, label %58, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %2
  br i1 %11, label %58, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !5
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %58

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sub nsw i32 %2, %6
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 8
  %22 = load i64, i64* %21, align 8
  %23 = mul i64 %22, %20
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 3, i32 0
  %26 = bitcast i8** %25 to %struct.png_struct_def**
  %27 = load %struct.png_struct_def*, %struct.png_struct_def** %26, align 8
  tail call void @cr_png_progressive_combine_row(%struct.png_struct_def* %27, i8* %24, i8* %1) #14
  %28 = icmp eq i32 %3, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %16
  %30 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 8
  br label %58

33:                                               ; preds = %16
  %34 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, -1
  %37 = icmp eq i32 %36, %3
  br i1 %37, label %38, label %58

38:                                               ; preds = %33
  %39 = load i32, i32* %9, align 4
  %40 = icmp eq i32 %39, %2
  br i1 %40, label %41, label %58

41:                                               ; preds = %38
  store i8 1, i8* %13, align 4
  %42 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -1
  %45 = icmp eq i32 %44, %2
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.SkPngInterlacedDecoder, %class.SkPngInterlacedDecoder* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %class.SkSwizzler*, %class.SkSwizzler** %47, align 8
  %49 = icmp eq %class.SkSwizzler* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkSwizzler, %class.SkSwizzler* %48, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %58, label %54

54:                                               ; preds = %41, %50
  %55 = load %struct.png_struct_def*, %struct.png_struct_def** %26, align 8
  %56 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %55, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %57 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %56, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %57, i32 2) #17
  unreachable

58:                                               ; preds = %46, %29, %38, %33, %50, %12, %4, %8
  ret void
}

declare void @cr_png_progressive_combine_row(%struct.png_struct_def*, i8*, i8*) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare noalias %struct.png_struct_def* @cr_png_create_read_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZL11sk_error_fnP14png_struct_defPKc(%struct.png_struct_def*, i8* nocapture readnone) #8 {
  %3 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %0, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #14
  %4 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %3, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %4, i32 1) #17
  unreachable
}

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def*, i32, i8*, i32) local_unnamed_addr #3

declare void @cr_png_set_read_user_chunk_fn(%struct.png_struct_def*, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL18sk_read_user_chunkP14png_struct_defP19png_unknown_chunk_t(%struct.png_struct_def*, %struct.png_unknown_chunk_t*) #1 {
  %3 = tail call i8* @cr_png_get_user_chunk_ptr(%struct.png_struct_def* %0) #14
  %4 = bitcast i8* %3 to %class.SkPngChunkReader*
  %5 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %1, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %1, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %3 to i1 (%class.SkPngChunkReader*, i8*, i8*, i64)***
  %11 = load i1 (%class.SkPngChunkReader*, i8*, i8*, i64)**, i1 (%class.SkPngChunkReader*, i8*, i8*, i64)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.SkPngChunkReader*, i8*, i8*, i64)*, i1 (%class.SkPngChunkReader*, i8*, i8*, i64)** %11, i64 3
  %13 = load i1 (%class.SkPngChunkReader*, i8*, i8*, i64)*, i1 (%class.SkPngChunkReader*, i8*, i8*, i64)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.SkPngChunkReader* %4, i8* %5, i8* %7, i64 %9) #14
  %15 = select i1 %14, i32 1, i32 -1
  ret i32 %15
}

declare i8* @cr_png_get_user_chunk_ptr(%struct.png_struct_def*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind returns_twice }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13SkEncodedInfo4MakeEiiNS_5ColorENS_5AlphaEiNSt3__110unique_ptrINS_10ICCProfileENS2_14default_deleteIS4_EEEE"}
!5 = !{i8 0, i8 2}
!6 = !{i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_BGRAjjjj, i32 (i32, i32, i32, i32)* @_ZL18SkPackARGB_as_RGBAjjjj, i32 (i32, i32, i32, i32)* @_ZL24premultiply_argb_as_bgrajjjj, i32 (i32, i32, i32, i32)* @_ZL24premultiply_argb_as_rgbajjjj}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!9 = distinct !{!9, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!10 = distinct !{!10, !11, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!11 = distinct !{!11, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!12 = distinct !{!12, !13, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!14 = !{!15, !17, !19}
!15 = distinct !{!15, !16, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!16 = distinct !{!16, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!17 = distinct !{!17, !18, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!18 = distinct !{!18, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!19 = distinct !{!19, !20, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!20 = distinct !{!20, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!21 = !{!22, !24, !26}
!22 = distinct !{!22, !23, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!23 = distinct !{!23, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!24 = distinct !{!24, !25, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!25 = distinct !{!25, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!26 = distinct !{!26, !27, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!27 = distinct !{!27, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
