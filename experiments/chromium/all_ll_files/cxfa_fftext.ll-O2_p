; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_fftext.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_fftext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_FFText = type { %class.CXFA_FFWidget }
%class.CXFA_FFWidget = type { %"class.CFWL_Widget::AdapterIface", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %class.CFX_RectF }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_RectF = type { float, float, float, float }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.6", %"class.pdfium::span.8", i32, %"class.fxcrt::UnownedPtr.10", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.4", %"class.cppgc::internal::BasicMember.5" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember.4" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.2" }
%"class.pdfium::span.6" = type { %"class.fxcrt::UnownedPtr.7", i64 }
%"class.fxcrt::UnownedPtr.7" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.8" = type { %"class.fxcrt::UnownedPtr.9", i64 }
%"class.fxcrt::UnownedPtr.9" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.2"*, %"class.cppgc::internal::BasicMember.2"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.2"* }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.14", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.24" }
%"class.fxcrt::UnownedPtr.14" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.15" }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { float*, float*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.22", %"class.fxcrt::UnownedPtr.23" }
%"class.fxcrt::UnownedPtr.22" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.23" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr"* }
%class.CXFA_TextLayout = type { i8, i8, i32, float, %"class.std::__1::vector.32", %"class.cppgc::internal::BasicMember.39", %"class.cppgc::internal::BasicMember.40", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.41", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.46", %"class.std::__1::vector.64", %"class.std::__1::unique_ptr.72" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.CXFA_TextLayout::BlockData"*, %"struct.CXFA_TextLayout::BlockData"*, %"class.std::__1::__compressed_pair.34" }
%"struct.CXFA_TextLayout::BlockData" = type { i64, i64 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.CXFA_TextLayout::BlockData"* }
%"class.cppgc::internal::BasicMember.39" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.40" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.41" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.CFGAS_RTFBreak* }
%class.CFGAS_RTFBreak = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.CXFA_TextLayout::LoaderContext"* }
%"struct.CXFA_TextLayout::LoaderContext" = type { i8, i8, float, float, float, float, i32, i32, %"class.fxcrt::UnownedPtr.49", %"class.fxcrt::RetainPtr", %"class.cppgc::internal::BasicMember.2", %"class.std::__1::vector.15", %"class.std::__1::vector.54" }
%"class.fxcrt::UnownedPtr.49" = type { %class.CFX_XMLNode* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.CXFA_TextLayout::BlockHeight"*, %"struct.CXFA_TextLayout::BlockHeight"*, %"class.std::__1::__compressed_pair.56" }
%"struct.CXFA_TextLayout::BlockHeight" = type { i64, float }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.CXFA_TextLayout::BlockHeight"* }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr.66" = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.66"* }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.CXFA_TextTabstopsContext* }
%class.CXFA_TextTabstopsContext = type opaque
%class.CXFA_Margin = type { %class.CXFA_Node }
%class.CXFA_ContentLayoutItem = type { %class.CXFA_LayoutItem, %class.CFX_PTemplate, %class.CFX_STemplate, i16, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.81" }
%class.CXFA_LayoutItem = type { %"class.fxjs::GCedTreeNode", i32, %"class.cppgc::internal::BasicMember.2" }
%"class.fxjs::GCedTreeNode" = type { %"class.fxcrt::TreeNode.79" }
%"class.fxcrt::TreeNode.79" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.80", %"class.cppgc::internal::BasicMember.80", %"class.cppgc::internal::BasicMember.80", %"class.cppgc::internal::BasicMember.80", %"class.cppgc::internal::BasicMember.80" }
%"class.cppgc::internal::BasicMember.80" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_PTemplate = type { float, float }
%class.CFX_STemplate = type { float, float }
%"class.cppgc::internal::BasicMember.81" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.104" }
%"class.fxcrt::RetainPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CXFA_FFDoc = type <{ %"class.fxcrt::UnownedPtr.83", %"class.fxcrt::UnownedPtr.84", %"class.fxcrt::UnownedPtr.85", %"class.fxcrt::UnownedPtr.86", %"class.cppgc::internal::BasicMember.87", %"class.cppgc::internal::BasicMember.88", %"class.cppgc::internal::BasicMember.89", %"class.cppgc::internal::BasicMember.0", %"class.std::__1::unique_ptr.90", %"class.std::__1::map", i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.83" = type { %class.IXFA_DocEnvironment* }
%class.IXFA_DocEnvironment = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.84" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::UnownedPtr.85" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.86" = type { %class.CFX_XMLDocument* }
%class.CFX_XMLDocument = type opaque
%"class.cppgc::internal::BasicMember.87" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.88" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.89" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.CFGAS_PDFFontMgr* }
%class.CFGAS_PDFFontMgr = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CXFA_FFField = type opaque
%class.CFX_VTemplate = type opaque
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }

@_ZTV11CXFA_FFText = hidden unnamed_addr constant { [53 x i8*] } { [53 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*)* @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FFText*)* @_ZN11CXFA_FFTextD2Ev to i8*), i8* bitcast (void (%class.CXFA_FFText*)* @_ZN11CXFA_FFTextD0Ev to i8*), i8* bitcast (void (%class.CFX_Matrix*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget15GetRotateMatrixEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i1, %class.CFX_RectF*)* @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF to i8*), i8* bitcast (void (%class.CXFA_FFWidget*, i32*, float*)* @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11PreFinalizeEv to i8*), i8* bitcast (%class.CXFA_FFField* (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7AsFieldEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CXFA_FFWidget*, i32)* @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE to i8*), i8* bitcast (void (%class.CXFA_FFText*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*, i32)* @_ZN11CXFA_FFText12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE to i8*), i8* bitcast (i1 (%class.CXFA_FFText*)* @_ZN11CXFA_FFText8IsLoadedEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget10LoadWidgetEv to i8*), i8* bitcast (i1 (%class.CXFA_FFText*)* @_ZN11CXFA_FFText13PerformLayoutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget13UpdateFWLDataEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFText*, i32, %class.CFX_PTemplate*, i8)* @_ZN11CXFA_FFText24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12OnMouseEnterEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnMouseExitEv to i8*), i8* bitcast (i1 (%class.CXFA_FFText*, i32, %class.CFX_PTemplate*)* @_ZN11CXFA_FFText13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFText*, i32, %class.CFX_PTemplate*)* @_ZN11CXFA_FFText11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFText*, i32, %class.CFX_PTemplate*)* @_ZN11CXFA_FFText11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget10OnSetFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11OnKillFocusEPS_ to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget9OnKeyDownEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget7OnKeyUpEjj to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, i32, i32)* @_ZN13CXFA_FFWidget6OnCharEjj to i8*), i8* bitcast (i32 (%class.CXFA_FFText*, %class.CFX_PTemplate*)* @_ZN11CXFA_FFText7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanUndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanRedoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7CanCopyEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6CanCutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8CanPasteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget12CanSelectAllEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9CanDeleteEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget11CanDeSelectEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4UndoEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4RedoEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget4CopyEv to i8*), i8* bitcast (void (%"class.pdfium::Optional"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget3CutEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %"class.fxcrt::WideString"*)* @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget9SelectAllEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget6DeleteEv to i8*), i8* bitcast (void (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget8DeSelectEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget7GetTextEv to i8*), i8* bitcast (i8 (%class.CXFA_FFWidget*)* @_ZN13CXFA_FFWidget16GetFormFieldTypeEv to i8*), i8* bitcast (i1 (%class.CXFA_FFWidget*, %class.CFX_PTemplate*)* @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE to i8*)] }, align 8

@_ZN11CXFA_FFTextC1EP9CXFA_Node = hidden unnamed_addr alias void (%class.CXFA_FFText*, %class.CXFA_Node*), void (%class.CXFA_FFText*, %class.CXFA_Node*)* @_ZN11CXFA_FFTextC2EP9CXFA_Node
@_ZN11CXFA_FFTextD1Ev = hidden unnamed_addr alias void (%class.CXFA_FFText*), void (%class.CXFA_FFText*)* @_ZN11CXFA_FFTextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CXFA_FFTextC2EP9CXFA_Node(%class.CXFA_FFText*, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget* %3, %class.CXFA_Node* %1) #4
  %4 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [53 x i8*] }, { [53 x i8*] }* @_ZTV11CXFA_FFText, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN13CXFA_FFWidgetC2EP9CXFA_Node(%class.CXFA_FFWidget*, %class.CXFA_Node*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CXFA_FFTextD2Ev(%class.CXFA_FFText*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CXFA_FFTextD0Ev(%class.CXFA_FFText*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidgetD2Ev(%class.CXFA_FFWidget* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CXFA_FFText12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixN13CXFA_FFWidget15HighlightOptionE(%class.CXFA_FFText*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_Matrix, align 16
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.CFX_RectF*
  %8 = alloca %class.CFX_Matrix, align 16
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %class.CFX_RectF*
  %11 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget* %11) #4
  br i1 %12, label %13, label %174

13:                                               ; preds = %4
  %14 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #4
  %15 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 0
  %16 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 1
  %17 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %18 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 3
  %19 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %20 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %21 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -1, i64 24, i1 false)
  call void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* nonnull sret %5, %class.CXFA_FFWidget* %11) #4
  %22 = load float, float* %15, align 16, !noalias !2
  %23 = load float, float* %16, align 4, !noalias !2
  %24 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %25 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4, !noalias !2
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %28 = bitcast float* %24 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4, !noalias !2
  %30 = shufflevector <2 x float> %29, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %31 = load float, float* %17, align 8, !noalias !2
  %32 = load float, float* %18, align 4, !noalias !2
  %33 = insertelement <4 x float> undef, float %22, i32 0
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %35 = extractelement <2 x float> %26, i32 0
  %36 = extractelement <2 x float> %26, i32 1
  %37 = shufflevector <4 x float> %34, <4 x float> %27, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %38 = insertelement <4 x float> undef, float %35, i32 0
  %39 = insertelement <4 x float> %38, float %36, i32 1
  %40 = insertelement <4 x float> %39, float %31, i32 2
  %41 = insertelement <4 x float> %40, float %31, i32 3
  %42 = fmul <4 x float> %37, %41
  %43 = insertelement <4 x float> undef, float %23, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %45 = extractelement <2 x float> %29, i32 0
  %46 = extractelement <2 x float> %29, i32 1
  %47 = shufflevector <4 x float> %44, <4 x float> %30, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %48 = insertelement <4 x float> undef, float %45, i32 0
  %49 = insertelement <4 x float> %48, float %46, i32 1
  %50 = insertelement <4 x float> %49, float %32, i32 2
  %51 = insertelement <4 x float> %50, float %32, i32 3
  %52 = fmul <4 x float> %47, %51
  %53 = fadd <4 x float> %42, %52
  %54 = load float, float* %19, align 16, !noalias !2
  %55 = fmul float %35, %54
  %56 = load float, float* %20, align 4, !noalias !2
  %57 = fmul float %45, %56
  %58 = fadd float %55, %57
  %59 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %60 = load float, float* %59, align 4, !noalias !2
  %61 = fadd float %60, %58
  %62 = fmul float %36, %54
  %63 = fmul float %46, %56
  %64 = fadd float %62, %63
  %65 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %66 = load float, float* %65, align 4, !noalias !2
  %67 = fadd float %64, %66
  %68 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  store <4 x float> %53, <4 x float>* %68, align 16
  store float %61, float* %19, align 16
  store float %67, float* %20, align 4
  call void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget* %11, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* nonnull dereferenceable(24) %5, i32 %3) #4
  %69 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %70 = bitcast %"class.cppgc::internal::BasicMember.2"* %69 to %class.CXFA_Node**
  %71 = load %class.CXFA_Node*, %class.CXFA_Node** %70, align 8
  %72 = call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %71) #4
  %73 = icmp eq %class.CXFA_TextLayout* %72, null
  br i1 %73, label %173, label %74

74:                                               ; preds = %13
  %75 = call %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics* %1) #4
  %76 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #4
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  %78 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 1
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 3
  %81 = call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %11) #4
  %82 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %83 = extractvalue { <2 x float>, <2 x float> } %81, 0
  store <2 x float> %83, <2 x float>* %82, align 8
  %84 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %85 = extractvalue { <2 x float>, <2 x float> } %81, 1
  store <2 x float> %85, <2 x float>* %84, align 8
  %86 = load %class.CXFA_Node*, %class.CXFA_Node** %70, align 8
  %87 = call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %86) #4
  %88 = icmp eq %class.CXFA_Margin* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %74
  %90 = bitcast <2 x float> %83 to <2 x i32>
  %91 = bitcast <2 x float> %83 to <2 x i32>
  %92 = shufflevector <2 x i32> %91, <2 x i32> %90, <2 x i32> <i32 0, i32 3>
  br label %133

93:                                               ; preds = %74
  %94 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 1
  %95 = bitcast %"class.cppgc::internal::BasicMember"* %94 to %class.CXFA_ContentLayoutItem**
  %96 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %95, align 8
  %97 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %96, i64 0, i32 4
  %98 = bitcast %"class.cppgc::internal::BasicMember"* %97 to %class.CXFA_ContentLayoutItem**
  %99 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %98, align 8
  %100 = icmp eq %class.CXFA_ContentLayoutItem* %99, null
  %101 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %96, i64 0, i32 5
  %102 = bitcast %"class.cppgc::internal::BasicMember"* %101 to %class.CXFA_ContentLayoutItem**
  %103 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %102, align 8
  %104 = icmp eq %class.CXFA_ContentLayoutItem* %103, null
  br i1 %100, label %105, label %111

105:                                              ; preds = %93
  br i1 %104, label %106, label %109

106:                                              ; preds = %105
  call void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF* nonnull %7, %class.CXFA_Margin* nonnull %87) #4
  %107 = bitcast { <2 x float>, <2 x float> }* %6 to <2 x i32>*
  %108 = load <2 x i32>, <2 x i32>* %107, align 8
  br label %133

109:                                              ; preds = %105
  %110 = call float @_ZNK11CXFA_Margin11GetTopInsetEv(%class.CXFA_Margin* nonnull %87) #4
  br label %114

111:                                              ; preds = %93
  br i1 %104, label %112, label %114

112:                                              ; preds = %111
  %113 = call float @_ZNK11CXFA_Margin14GetBottomInsetEv(%class.CXFA_Margin* nonnull %87) #4
  br label %114

114:                                              ; preds = %111, %112, %109
  %115 = phi float [ 0.000000e+00, %111 ], [ 0.000000e+00, %112 ], [ %110, %109 ]
  %116 = phi float [ 0.000000e+00, %111 ], [ %113, %112 ], [ 0.000000e+00, %109 ]
  %117 = call float @_ZNK11CXFA_Margin12GetLeftInsetEv(%class.CXFA_Margin* nonnull %87) #4
  %118 = call float @_ZNK11CXFA_Margin13GetRightInsetEv(%class.CXFA_Margin* nonnull %87) #4
  %119 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %120 = load <2 x float>, <2 x float>* %119, align 8
  %121 = insertelement <2 x float> undef, float %117, i32 0
  %122 = insertelement <2 x float> %121, float %115, i32 1
  %123 = fadd <2 x float> %122, %120
  %124 = extractelement <2 x float> %123, i32 0
  store float %124, float* %77, align 8
  %125 = extractelement <2 x float> %123, i32 1
  store float %125, float* %78, align 4
  %126 = fadd float %117, %118
  %127 = load float, float* %79, align 8
  %128 = fsub float %127, %126
  store float %128, float* %79, align 8
  %129 = fadd float %115, %116
  %130 = load float, float* %80, align 4
  %131 = fsub float %130, %129
  store float %131, float* %80, align 4
  %132 = bitcast <2 x float> %123 to <2 x i32>
  br label %133

133:                                              ; preds = %89, %106, %114
  %134 = phi <2 x i32> [ %108, %106 ], [ %132, %114 ], [ %92, %89 ]
  %135 = bitcast %class.CFX_Matrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #4
  %136 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 4
  %137 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 5
  %138 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #4
  %139 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK9CFX_RectF(%class.CFX_Matrix* nonnull %5, %class.CFX_RectF* nonnull dereferenceable(16) %7) #4
  %140 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %141 = extractvalue { <2 x float>, <2 x float> } %139, 0
  store <2 x float> %141, <2 x float>* %140, align 8
  %142 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %143 = extractvalue { <2 x float>, <2 x float> } %139, 1
  store <2 x float> %143, <2 x float>* %142, align 8
  %144 = bitcast %class.CFX_Matrix* %5 to <4 x float>*
  %145 = load <4 x float>, <4 x float>* %144, align 16, !noalias !5
  %146 = extractelement <4 x float> %145, i32 2
  %147 = extractelement <4 x float> %145, i32 3
  %148 = extractelement <4 x float> %145, i32 0
  %149 = extractelement <4 x float> %145, i32 1
  %150 = fmul <4 x float> %145, zeroinitializer
  %151 = shufflevector <4 x float> %150, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %152 = fadd <4 x float> %145, %151
  %153 = bitcast <2 x i32> %134 to <2 x float>
  %154 = extractelement <2 x float> %153, i32 0
  %155 = fmul float %148, %154
  %156 = bitcast <2 x i32> %134 to <2 x float>
  %157 = extractelement <2 x float> %156, i32 1
  %158 = fmul float %146, %157
  %159 = fadd float %155, %158
  %160 = load float, float* %19, align 16, !noalias !5
  %161 = fadd float %160, %159
  %162 = fmul float %149, %154
  %163 = fmul float %147, %157
  %164 = fadd float %162, %163
  %165 = load float, float* %20, align 4, !noalias !5
  %166 = fadd float %164, %165
  %167 = bitcast %class.CFX_Matrix* %8 to <4 x float>*
  store <4 x float> %152, <4 x float>* %167, align 16
  store float %161, float* %136, align 16
  store float %166, float* %137, align 4
  %168 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 1
  %169 = bitcast %"class.cppgc::internal::BasicMember"* %168 to %class.CXFA_ContentLayoutItem**
  %170 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %169, align 8
  %171 = call i64 @_ZNK22CXFA_ContentLayoutItem8GetIndexEv(%class.CXFA_ContentLayoutItem* %170) #4
  %172 = call zeroext i1 @_ZN15CXFA_TextLayout10DrawStringEP16CFX_RenderDeviceRK10CFX_MatrixRK9CFX_RectFm(%class.CXFA_TextLayout* nonnull %72, %class.CFX_RenderDevice* %75, %class.CFX_Matrix* nonnull dereferenceable(24) %8, %class.CFX_RectF* nonnull dereferenceable(16) %10, i64 %171) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #4
  br label %173

173:                                              ; preds = %13, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #4
  br label %174

174:                                              ; preds = %4, %173
  ret void
}

declare zeroext i1 @_ZNK13CXFA_FFWidget16HasVisibleStatusEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN13CXFA_FFWidget15GetRotateMatrixEv(%class.CFX_Matrix* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12RenderWidgetEP16CFGAS_GEGraphicsRK10CFX_MatrixNS_15HighlightOptionE(%class.CXFA_FFWidget*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24), i32) unnamed_addr #1

declare %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node*) local_unnamed_addr #1

declare %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare void @_Z21XFA_RectWithoutMarginP9CFX_RectFPK11CXFA_Margin(%class.CFX_RectF*, %class.CXFA_Margin*) local_unnamed_addr #1

declare float @_ZNK11CXFA_Margin11GetTopInsetEv(%class.CXFA_Margin*) local_unnamed_addr #1

declare float @_ZNK11CXFA_Margin14GetBottomInsetEv(%class.CXFA_Margin*) local_unnamed_addr #1

declare float @_ZNK11CXFA_Margin12GetLeftInsetEv(%class.CXFA_Margin*) local_unnamed_addr #1

declare float @_ZNK11CXFA_Margin13GetRightInsetEv(%class.CXFA_Margin*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK9CFX_RectF(%class.CFX_Matrix*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN15CXFA_TextLayout10DrawStringEP16CFX_RenderDeviceRK10CFX_MatrixRK9CFX_RectFm(%class.CXFA_TextLayout*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %class.CFX_RectF* dereferenceable(16), i64) local_unnamed_addr #1

declare i64 @_ZNK22CXFA_ContentLayoutItem8GetIndexEv(%class.CXFA_ContentLayoutItem*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText8IsLoadedEv(%class.CXFA_FFText* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.cppgc::internal::BasicMember.2"* %2 to %class.CXFA_Node**
  %4 = load %class.CXFA_Node*, %class.CXFA_Node** %3, align 8
  %5 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %4) #4
  %6 = icmp eq %class.CXFA_TextLayout* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CXFA_TextLayout, %class.CXFA_TextLayout* %5, i64 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText13PerformLayoutEv(%class.CXFA_FFText*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_RectF*
  %4 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget* %4) #4
  %6 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %7 = bitcast %"class.cppgc::internal::BasicMember.2"* %6 to %class.CXFA_Node**
  %8 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %9 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %8) #4
  %10 = icmp eq %class.CXFA_TextLayout* %9, null
  br i1 %10, label %75, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CXFA_TextLayout, %class.CXFA_TextLayout* %9, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %75, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CXFA_TextLayout, %class.CXFA_TextLayout* %9, i64 0, i32 4
  %17 = bitcast %"class.std::__1::vector.32"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.CXFA_TextLayout, %class.CXFA_TextLayout* %9, i64 0, i32 4, i32 0, i32 1
  %20 = bitcast %"struct.CXFA_TextLayout::BlockData"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.cppgc::internal::BasicMember"* %21 to %class.CXFA_ContentLayoutItem**
  %23 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %22, align 8
  %24 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %23, i64 0, i32 4
  %25 = bitcast %"class.cppgc::internal::BasicMember"* %24 to %class.CXFA_ContentLayoutItem**
  %26 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %25, align 8
  %27 = icmp eq %class.CXFA_ContentLayoutItem* %26, null
  br i1 %27, label %28, label %33

28:                                               ; preds = %15
  %29 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %23, i64 0, i32 5
  %30 = bitcast %"class.cppgc::internal::BasicMember"* %29 to %class.CXFA_ContentLayoutItem**
  %31 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %30, align 8
  %32 = icmp eq %class.CXFA_ContentLayoutItem* %31, null
  br i1 %32, label %75, label %33

33:                                               ; preds = %28, %15
  %34 = tail call %class.CXFA_ContentLayoutItem* @_ZN22CXFA_ContentLayoutItem8GetFirstEv(%class.CXFA_ContentLayoutItem* %23) #4
  %35 = icmp eq %class.CXFA_ContentLayoutItem* %34, null
  br i1 %35, label %74, label %36

36:                                               ; preds = %33
  %37 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  %38 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 3
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %41 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  br label %42

42:                                               ; preds = %36, %68
  %43 = phi %class.CXFA_ContentLayoutItem* [ %34, %36 ], [ %72, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -1, i64 16, i1 false)
  %44 = call { <2 x float>, <2 x float> } @_ZNK22CXFA_ContentLayoutItem15GetAbsoluteRectEv(%class.CXFA_ContentLayoutItem* nonnull %43) #4
  %45 = extractvalue { <2 x float>, <2 x float> } %44, 0
  store <2 x float> %45, <2 x float>* %39, align 8
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 1
  store <2 x float> %46, <2 x float>* %40, align 8
  %47 = load %class.CXFA_Node*, %class.CXFA_Node** %7, align 8
  %48 = call %class.CXFA_Margin* @_ZNK9CXFA_Node17GetMarginIfExistsEv(%class.CXFA_Node* %47) #4
  %49 = icmp eq %class.CXFA_Margin* %48, null
  br i1 %49, label %68, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %43, i64 0, i32 4
  %52 = bitcast %"class.cppgc::internal::BasicMember"* %51 to %class.CXFA_ContentLayoutItem**
  %53 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %52, align 8
  %54 = icmp eq %class.CXFA_ContentLayoutItem* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = call float @_ZNK11CXFA_Margin11GetTopInsetEv(%class.CXFA_Margin* nonnull %48) #4
  %57 = load float, float* %38, align 4
  %58 = fsub float %57, %56
  store float %58, float* %38, align 4
  br label %68

59:                                               ; preds = %50
  %60 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %43, i64 0, i32 5
  %61 = bitcast %"class.cppgc::internal::BasicMember"* %60 to %class.CXFA_ContentLayoutItem**
  %62 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %61, align 8
  %63 = icmp eq %class.CXFA_ContentLayoutItem* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = call float @_ZNK11CXFA_Margin14GetBottomInsetEv(%class.CXFA_Margin* nonnull %48) #4
  %66 = load float, float* %38, align 4
  %67 = fsub float %66, %65
  store float %67, float* %38, align 4
  br label %68

68:                                               ; preds = %59, %42, %55, %64
  %69 = call i64 @_ZNK22CXFA_ContentLayoutItem8GetIndexEv(%class.CXFA_ContentLayoutItem* nonnull %43) #4
  call void @_ZN15CXFA_TextLayout10ItemBlocksERK9CFX_RectFm(%class.CXFA_TextLayout* nonnull %9, %class.CFX_RectF* nonnull dereferenceable(16) %3, i64 %69) #4
  %70 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %43, i64 0, i32 5
  %71 = bitcast %"class.cppgc::internal::BasicMember"* %70 to %class.CXFA_ContentLayoutItem**
  %72 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4
  %73 = icmp eq %class.CXFA_ContentLayoutItem* %72, null
  br i1 %73, label %74, label %42

74:                                               ; preds = %68, %33
  store i8 0, i8* %12, align 8
  br label %75

75:                                               ; preds = %11, %74, %28, %1
  %76 = phi i1 [ false, %1 ], [ true, %11 ], [ true, %28 ], [ true, %74 ]
  ret i1 %76
}

declare zeroext i1 @_ZN13CXFA_FFWidget13PerformLayoutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare %class.CXFA_ContentLayoutItem* @_ZN22CXFA_ContentLayoutItem8GetFirstEv(%class.CXFA_ContentLayoutItem*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK22CXFA_ContentLayoutItem15GetAbsoluteRectEv(%class.CXFA_ContentLayoutItem*) local_unnamed_addr #1

declare void @_ZN15CXFA_TextLayout10ItemBlocksERK9CFX_RectFm(%class.CXFA_TextLayout*, %class.CFX_RectF* dereferenceable(16), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText24AcceptsFocusOnButtonDownEjRK13CFX_PTemplateIfE16FWL_MouseCommand(%class.CXFA_FFText*, i32, %class.CFX_PTemplate* nocapture readonly dereferenceable(8), i8 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = icmp eq i8 %3, 0
  br i1 %6, label %7, label %49

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %9 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %8) #4
  %10 = extractvalue { <2 x float>, <2 x float> } %9, 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 1
  %12 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = extractelement <2 x float> %10, i32 0
  %15 = fcmp ult float %13, %14
  br i1 %15, label %49, label %16

16:                                               ; preds = %7
  %17 = extractelement <2 x float> %11, i32 0
  %18 = fadd float %14, %17
  %19 = fcmp olt float %13, %18
  br i1 %19, label %20, label %49

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = extractelement <2 x float> %10, i32 1
  %24 = fcmp ult float %22, %23
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = extractelement <2 x float> %11, i32 1
  %27 = fadd float %23, %26
  %28 = fcmp olt float %22, %27
  br i1 %28, label %29, label %49

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %31 = bitcast %"class.cppgc::internal::BasicMember.2"* %30 to %class.CXFA_Node**
  %32 = load %class.CXFA_Node*, %class.CXFA_Node** %31, align 8
  %33 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %32) #4
  %34 = icmp eq %class.CXFA_TextLayout* %33, null
  br i1 %34, label %49, label %35

35:                                               ; preds = %29
  %36 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %8) #4
  %37 = extractvalue { <2 x float>, <2 x float> } %36, 0
  %38 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #4
  %39 = extractelement <2 x float> %37, i32 0
  %40 = extractelement <2 x float> %37, i32 1
  %41 = load float, float* %12, align 4, !noalias !9
  %42 = fsub float %41, %39
  %43 = load float, float* %21, align 4, !noalias !9
  %44 = fsub float %43, %40
  %45 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float %42, float* %45, align 4, !alias.scope !9
  %46 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float %44, float* %46, align 4, !alias.scope !9
  %47 = call i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #4
  %48 = icmp ne i32* %47, null
  br label %49

49:                                               ; preds = %35, %29, %7, %16, %20, %25, %4
  %50 = phi i1 [ false, %4 ], [ false, %25 ], [ false, %20 ], [ false, %16 ], [ false, %7 ], [ %48, %35 ], [ false, %29 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN11CXFA_FFText17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_FFText*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.cppgc::internal::BasicMember.2"* %4 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  %7 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %6) #4
  %8 = icmp eq %class.CXFA_TextLayout* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %11 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %10) #4
  %12 = extractvalue { <2 x float>, <2 x float> } %11, 0
  %13 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  %14 = extractelement <2 x float> %12, i32 0
  %15 = extractelement <2 x float> %12, i32 1
  %16 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %17 = load float, float* %16, align 4, !noalias !12
  %18 = fsub float %17, %14
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %20 = load float, float* %19, align 4, !noalias !12
  %21 = fsub float %20, %15
  %22 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %18, float* %22, align 4, !alias.scope !12
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %21, float* %23, align 4, !alias.scope !12
  %24 = call i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout* nonnull %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  br label %25

25:                                               ; preds = %2, %9
  %26 = phi i32* [ %24, %9 ], [ null, %2 ]
  ret i32* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFText*, i32, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_FFWidget13SetButtonDownEb(%class.CXFA_FFWidget* %4, i1 zeroext true) #4
  ret i1 true
}

declare void @_ZN13CXFA_FFWidget13SetButtonDownEb(%class.CXFA_FFWidget*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CXFA_FFText*, i32, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %6 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %5) #4
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = extractelement <2 x float> %7, i32 0
  %12 = fcmp ult float %10, %11
  br i1 %12, label %46, label %13

13:                                               ; preds = %3
  %14 = extractelement <2 x float> %8, i32 0
  %15 = fadd float %11, %14
  %16 = fcmp olt float %10, %15
  br i1 %16, label %17, label %46

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = extractelement <2 x float> %7, i32 1
  %21 = fcmp ult float %19, %20
  br i1 %21, label %46, label %22

22:                                               ; preds = %17
  %23 = extractelement <2 x float> %8, i32 1
  %24 = fadd float %20, %23
  %25 = fcmp olt float %19, %24
  br i1 %25, label %26, label %46

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %28 = bitcast %"class.cppgc::internal::BasicMember.2"* %27 to %class.CXFA_Node**
  %29 = load %class.CXFA_Node*, %class.CXFA_Node** %28, align 8
  %30 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %29) #4
  %31 = icmp eq %class.CXFA_TextLayout* %30, null
  br i1 %31, label %46, label %32

32:                                               ; preds = %26
  %33 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %5) #4
  %34 = extractvalue { <2 x float>, <2 x float> } %33, 0
  %35 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = extractelement <2 x float> %34, i32 0
  %37 = extractelement <2 x float> %34, i32 1
  %38 = load float, float* %9, align 4, !noalias !15
  %39 = fsub float %38, %36
  %40 = load float, float* %18, align 4, !noalias !15
  %41 = fsub float %40, %37
  %42 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %39, float* %42, align 4, !alias.scope !15
  %43 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %41, float* %43, align 4, !alias.scope !15
  %44 = call i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout* nonnull %30, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  %45 = icmp ne i32* %44, null
  br label %46

46:                                               ; preds = %32, %26, %3, %13, %17, %22
  %47 = phi i1 [ false, %22 ], [ false, %17 ], [ false, %13 ], [ false, %3 ], [ %45, %32 ], [ false, %26 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CXFA_FFText11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFText*, i32, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN13CXFA_FFWidget12IsButtonDownEv(%class.CXFA_FFWidget* %6) #4
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  tail call void @_ZN13CXFA_FFWidget13SetButtonDownEb(%class.CXFA_FFWidget* %6, i1 zeroext false) #4
  %9 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %10 = bitcast %"class.cppgc::internal::BasicMember.2"* %9 to %class.CXFA_Node**
  %11 = load %class.CXFA_Node*, %class.CXFA_Node** %10, align 8
  %12 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %11) #4
  %13 = icmp eq %class.CXFA_TextLayout* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %8
  %15 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %6) #4
  %16 = extractvalue { <2 x float>, <2 x float> } %15, 0
  %17 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = extractelement <2 x float> %16, i32 0
  %19 = extractelement <2 x float> %16, i32 1
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %21 = load float, float* %20, align 4, !noalias !18
  %22 = fsub float %21, %18
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %24 = load float, float* %23, align 4, !noalias !18
  %25 = fsub float %24, %19
  %26 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float %22, float* %26, align 4, !alias.scope !18
  %27 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float %25, float* %27, align 4, !alias.scope !18
  %28 = call i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout* nonnull %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %29 = icmp eq i32* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %14
  %31 = call %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget* %6) #4
  %32 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #4
  call void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"* nonnull %5, i32* nonnull %28) #4
  call void @_ZN10CXFA_FFDoc7GotoURLERKN5fxcrt10WideStringE(%class.CXFA_FFDoc* %31, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #4
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #4
  br label %33

33:                                               ; preds = %8, %30, %14, %3
  %34 = phi i1 [ false, %3 ], [ true, %30 ], [ false, %14 ], [ false, %8 ]
  ret i1 %34
}

declare zeroext i1 @_ZN13CXFA_FFWidget12IsButtonDownEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare void @_ZN10CXFA_FFDoc7GotoURLERKN5fxcrt10WideStringE(%class.CXFA_FFDoc*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1EPKw(%"class.fxcrt::WideString"*, i32*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11CXFA_FFText7HitTestERK13CFX_PTemplateIfE(%class.CXFA_FFText*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0
  %5 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %4) #4
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = extractelement <2 x float> %6, i32 0
  %11 = fcmp ult float %9, %10
  br i1 %11, label %46, label %12

12:                                               ; preds = %2
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fadd float %10, %13
  %15 = fcmp olt float %9, %14
  br i1 %15, label %16, label %46

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = extractelement <2 x float> %6, i32 1
  %20 = fcmp ult float %18, %19
  br i1 %20, label %46, label %21

21:                                               ; preds = %16
  %22 = extractelement <2 x float> %7, i32 1
  %23 = fadd float %19, %22
  %24 = fcmp olt float %18, %23
  br i1 %24, label %25, label %46

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CXFA_FFText, %class.CXFA_FFText* %0, i64 0, i32 0, i32 4
  %27 = bitcast %"class.cppgc::internal::BasicMember.2"* %26 to %class.CXFA_Node**
  %28 = load %class.CXFA_Node*, %class.CXFA_Node** %27, align 8
  %29 = tail call %class.CXFA_TextLayout* @_ZN9CXFA_Node13GetTextLayoutEv(%class.CXFA_Node* %28) #4
  %30 = icmp eq %class.CXFA_TextLayout* %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %25
  %32 = tail call { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget20GetRectWithoutRotateEv(%class.CXFA_FFWidget* %4) #4
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  %35 = extractelement <2 x float> %33, i32 0
  %36 = extractelement <2 x float> %33, i32 1
  %37 = load float, float* %8, align 4, !noalias !21
  %38 = fsub float %37, %35
  %39 = load float, float* %17, align 4, !noalias !21
  %40 = fsub float %39, %36
  %41 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %38, float* %41, align 4, !alias.scope !21
  %42 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %40, float* %42, align 4, !alias.scope !21
  %43 = call i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout* nonnull %29, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  %44 = icmp eq i32* %43, null
  %45 = select i1 %44, i32 0, i32 19
  br label %46

46:                                               ; preds = %31, %25, %2, %12, %16, %21
  %47 = phi i32 [ 0, %21 ], [ 0, %16 ], [ 0, %12 ], [ 0, %2 ], [ %45, %31 ], [ 0, %25 ]
  ret i32 %47
}

declare i32* @_ZN15CXFA_TextLayout17GetLinkURLAtPointERK13CFX_PTemplateIfE(%class.CXFA_TextLayout*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK13CXFA_FFWidget5TraceEPN5cppgc7VisitorE(%class.CXFA_FFWidget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget12DisplayCaretEbPK9CFX_RectF(%class.CXFA_FFWidget*, i1 zeroext, %class.CFX_RectF*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget26GetBorderColorAndThicknessEPjPf(%class.CXFA_FFWidget*, i32*, float*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget11PreFinalizeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare %class.CXFA_FFField* @_ZN13CXFA_FFWidget7AsFieldEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN13CXFA_FFWidget7GetBBoxENS_11FocusOptionE(%class.CXFA_FFWidget*, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10LoadWidgetEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13UpdateFWLDataEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget20UpdateWidgetPropertyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseEnterEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnMouseExitEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget15OnRButtonDblClkEjRK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget10OnSetFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11OnKillFocusEPS_(%class.CXFA_FFWidget*, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9OnKeyDownEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7OnKeyUpEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6OnCharEjj(%class.CXFA_FFWidget*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanUndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanRedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget7CanCopyEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget6CanCutEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget8CanPasteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget12CanSelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget9CanDeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget11CanDeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4UndoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget4RedoEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget4CopyEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget3CutEv(%"class.pdfium::Optional"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget5PasteERKN5fxcrt10WideStringE(%class.CXFA_FFWidget*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget9SelectAllEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget6DeleteEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget8DeSelectEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare void @_ZN13CXFA_FFWidget7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i8 @_ZN13CXFA_FFWidget16GetFormFieldTypeEv(%class.CXFA_FFWidget*) unnamed_addr #1

declare zeroext i1 @_ZN13CXFA_FFWidget14PtInActiveRectERK13CFX_PTemplateIfE(%class.CXFA_FFWidget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!7 = distinct !{!7, !"_ZNK10CFX_MatrixmlERKS_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!11 = distinct !{!11, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!14 = distinct !{!14, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!17 = distinct !{!17, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!20 = distinct !{!20, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!23 = distinct !{!23, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
