; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/quic_decrypter.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/quic_decrypter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.quic::Aes128GcmDecrypter" = type { %"class.quic::AesBaseDecrypter.base", [4 x i8] }
%"class.quic::AesBaseDecrypter.base" = type <{ %"class.quic::AeadBaseDecrypter", %struct.aes_key_st }>
%"class.quic::AeadBaseDecrypter" = type { %"class.quic::QuicDecrypter", %struct.evp_aead_st*, i64, i64, i64, i8, i8, [32 x i8], [12 x i8], %"class.bssl::internal::StackAllocated" }
%struct.evp_aead_st = type opaque
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.aes_key_st = type { [60 x i32], i32 }
%"class.quic::Aes128Gcm12Decrypter" = type { %"class.quic::AesBaseDecrypter.base", [4 x i8] }
%"class.quic::ChaCha20Poly1305TlsDecrypter" = type { %"class.quic::ChaChaBaseDecrypter" }
%"class.quic::ChaChaBaseDecrypter" = type { %"class.quic::AeadBaseDecrypter", [32 x i8] }
%"class.quic::ChaCha20Poly1305Decrypter" = type { %"class.quic::ChaChaBaseDecrypter" }
%"class.quic::Aes256GcmDecrypter" = type { %"class.quic::AesBaseDecrypter.base", [4 x i8] }
%"struct.std::__1::array" = type { [32 x i8] }
%"class.quic::QuicHKDF" = type { %"class.std::__1::vector", %"class.absl::string_view", %"class.absl::string_view", %"class.absl::string_view", %"class.absl::string_view", %"class.absl::string_view", %"class.absl::string_view", %"class.absl::string_view" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i8* }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [68 x i8] c"../../net/third_party/quiche/src/quic/core/crypto/quic_decrypter.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Unsupported algorithm: \00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"TLS cipher suite is unknown to QUIC\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"QUIC key diversification\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicDecrypter"* @_ZN4quic13QuicDecrypter6CreateERKNS_17ParsedQuicVersionEj(%"struct.quic::ParsedQuicVersion"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  switch i32 %1, label %22 [
    i32 1196639553, label %4
    i32 808600387, label %13
  ]

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"* %0) #8
  %6 = tail call i8* @_Znwm(i64 936) #9
  br i1 %5, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast i8* %6 to %"class.quic::Aes128GcmDecrypter"*
  tail call void @_ZN4quic18Aes128GcmDecrypterC1Ev(%"class.quic::Aes128GcmDecrypter"* nonnull %8) #8
  %9 = ptrtoint i8* %6 to i64
  br label %30

10:                                               ; preds = %4
  %11 = bitcast i8* %6 to %"class.quic::Aes128Gcm12Decrypter"*
  tail call void @_ZN4quic20Aes128Gcm12DecrypterC1Ev(%"class.quic::Aes128Gcm12Decrypter"* nonnull %11) #8
  %12 = ptrtoint i8* %6 to i64
  br label %30

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"* %0) #8
  %15 = tail call i8* @_Znwm(i64 720) #9
  br i1 %14, label %16, label %19

16:                                               ; preds = %13
  %17 = bitcast i8* %15 to %"class.quic::ChaCha20Poly1305TlsDecrypter"*
  tail call void @_ZN4quic28ChaCha20Poly1305TlsDecrypterC1Ev(%"class.quic::ChaCha20Poly1305TlsDecrypter"* nonnull %17) #8
  %18 = ptrtoint i8* %15 to i64
  br label %30

19:                                               ; preds = %13
  %20 = bitcast i8* %15 to %"class.quic::ChaCha20Poly1305Decrypter"*
  tail call void @_ZN4quic25ChaCha20Poly1305DecrypterC1Ev(%"class.quic::ChaCha20Poly1305Decrypter"* nonnull %20) #8
  %21 = ptrtoint i8* %15 to i64
  br label %30

22:                                               ; preds = %2
  %23 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #8
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 43, i32 3) #8
  %26 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %26 to %"class.std::__1::basic_ostream"*
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i64 23) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %28, i32 %1) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #8
  br label %30

30:                                               ; preds = %24, %22, %19, %16, %10, %7
  %31 = phi i64 [ %18, %16 ], [ %21, %19 ], [ %9, %7 ], [ %12, %10 ], [ 0, %22 ], [ 0, %24 ]
  %32 = inttoptr i64 %31 to %"class.quic::QuicDecrypter"*
  ret %"class.quic::QuicDecrypter"* %32
}

declare zeroext i1 @_ZNK4quic17ParsedQuicVersion22UsesInitialObfuscatorsEv(%"struct.quic::ParsedQuicVersion"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicDecrypter"* @_ZN4quic13QuicDecrypter21CreateFromCipherSuiteEj(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  switch i32 %0, label %15 [
    i32 50336513, label %3
    i32 50336514, label %7
    i32 50336515, label %11
  ]

3:                                                ; preds = %1
  %4 = tail call i8* @_Znwm(i64 936) #9
  %5 = bitcast i8* %4 to %"class.quic::Aes128GcmDecrypter"*
  tail call void @_ZN4quic18Aes128GcmDecrypterC1Ev(%"class.quic::Aes128GcmDecrypter"* nonnull %5) #8
  %6 = ptrtoint i8* %4 to i64
  br label %22

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 936) #9
  %9 = bitcast i8* %8 to %"class.quic::Aes256GcmDecrypter"*
  tail call void @_ZN4quic18Aes256GcmDecrypterC1Ev(%"class.quic::Aes256GcmDecrypter"* nonnull %9) #8
  %10 = ptrtoint i8* %8 to i64
  br label %22

11:                                               ; preds = %1
  %12 = tail call i8* @_Znwm(i64 720) #9
  %13 = bitcast i8* %12 to %"class.quic::ChaCha20Poly1305TlsDecrypter"*
  tail call void @_ZN4quic28ChaCha20Poly1305TlsDecrypterC1Ev(%"class.quic::ChaCha20Poly1305TlsDecrypter"* nonnull %13) #8
  %14 = ptrtoint i8* %12 to i64
  br label %22

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %18) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 59, i32 2) #8
  %19 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i64 35) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %18) #8
  br label %22

22:                                               ; preds = %17, %15, %11, %7, %3
  %23 = phi i64 [ %14, %11 ], [ %10, %7 ], [ %6, %3 ], [ 0, %15 ], [ 0, %17 ]
  %24 = inttoptr i64 %23 to %"class.quic::QuicDecrypter"*
  ret %"class.quic::QuicDecrypter"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic13QuicDecrypter23DiversifyPreliminaryKeyEN4absl11string_viewES2_RKNSt3__15arrayIcLm32EEEmmPNS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESE_(i8*, i64, i8*, i64, %"struct.std::__1::array"* dereferenceable(32), i64, i64, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.quic::QuicHKDF", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.absl::string_view", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = bitcast %"class.quic::QuicHKDF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %17) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 136, i1 false)
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = icmp eq i8* %0, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #8, !alias.scope !2
  br label %46

22:                                               ; preds = %9
  %23 = icmp ugt i64 %1, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #10
  unreachable

26:                                               ; preds = %22
  %27 = icmp ult i64 %1, 23
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %1, 16
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8, !alias.scope !2
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8, !alias.scope !2
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1, i64* %35, align 8, !alias.scope !2
  br label %41

36:                                               ; preds = %26
  %37 = trunc i64 %1 to i8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1, !alias.scope !2
  %40 = icmp eq i64 %1, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36, %28
  %42 = phi i8* [ %31, %28 ], [ %19, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* nonnull align 1 %0, i64 %1, i1 false) #8
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %19, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %1
  store i8 0, i8* %45, align 1
  br label %46

46:                                               ; preds = %21, %43
  %47 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #8
  %48 = icmp eq i8* %2, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #8, !alias.scope !5
  %50 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %84

51:                                               ; preds = %46
  %52 = icmp ugt i64 %3, -17
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %54) #10
  unreachable

55:                                               ; preds = %51
  %56 = icmp ult i64 %3, 23
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = add nuw i64 %3, 16
  %59 = and i64 %58, -16
  %60 = tail call i8* @_Znwm(i64 %59) #9
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %60, i8** %61, align 8, !alias.scope !5
  %62 = or i64 %59, -9223372036854775808
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %62, i64* %63, align 8, !alias.scope !5
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %64, align 8, !alias.scope !5
  %65 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %71

66:                                               ; preds = %55
  %67 = trunc i64 %3 to i8
  %68 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 %67, i8* %69, align 1, !alias.scope !5
  %70 = icmp eq i64 %3, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66, %57
  %72 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %68, %66 ], [ %65, %57 ]
  %73 = phi i8* [ %47, %66 ], [ %60, %57 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* nonnull align 1 %2, i64 %3, i1 false) #8
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %72, %71 ], [ %68, %66 ]
  %76 = phi i8* [ %73, %71 ], [ %47, %66 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %3
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1, !noalias !8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8, !noalias !8
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8, !noalias !8
  br label %84

84:                                               ; preds = %49, %74
  %85 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %50, %49 ], [ %75, %74 ]
  %86 = phi i64 [ 0, %49 ], [ %83, %74 ]
  %87 = phi i8* [ null, %49 ], [ %81, %74 ]
  %88 = phi i8 [ 0, %49 ], [ %79, %74 ]
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %90 = icmp slt i8 %88, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = zext i8 %88 to i64
  %93 = select i1 %90, i8* %87, i8* %47
  %94 = select i1 %90, i64 %86, i64 %92
  %95 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %93, i64 %94) #8, !noalias !8
  %96 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %96, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #8, !noalias !8
  %97 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %84
  %102 = zext i8 %99 to i64
  %103 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  br label %111

104:                                              ; preds = %84
  %105 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = icmp sgt i64 %108, -1
  br i1 %109, label %111, label %110, !prof !11

110:                                              ; preds = %104
  call void @llvm.trap() #8
  unreachable

111:                                              ; preds = %101, %104
  %112 = phi i64 [ %106, %104 ], [ %103, %101 ]
  %113 = phi i64 [ %108, %104 ], [ %102, %101 ]
  %114 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %14, i64 0, i32 1
  %116 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 0
  store i64 24, i64* %115, align 8
  %117 = inttoptr i64 %112 to i8*
  call void @_ZN4quic8QuicHKDFC1EN4absl11string_viewES2_S2_mmmmm(%"class.quic::QuicHKDF"* nonnull %10, i8* %117, i64 %113, i8* %116, i64 32, %"class.absl::string_view"* nonnull byval(%"class.absl::string_view") align 8 %14, i64 0, i64 %5, i64 0, i64 %6, i64 0) #8
  %118 = load i8, i8* %98, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #9
  br label %123

123:                                              ; preds = %111, %120
  %124 = load i8, i8* %89, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %123
  %127 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %123, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #8
  %129 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #9
  br label %136

136:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  %137 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #8
  %138 = getelementptr inbounds %"class.quic::QuicHKDF", %"class.quic::QuicHKDF"* %10, i64 0, i32 2, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"class.quic::QuicHKDF", %"class.quic::QuicHKDF"* %10, i64 0, i32 2, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i8* %139, null
  br i1 %142, label %143, label %144

143:                                              ; preds = %136
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 24, i1 false) #8, !alias.scope !12
  br label %168

144:                                              ; preds = %136
  %145 = icmp ugt i64 %141, -17
  br i1 %145, label %146, label %148

146:                                              ; preds = %144
  %147 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %147) #10
  unreachable

148:                                              ; preds = %144
  %149 = icmp ult i64 %141, 23
  br i1 %149, label %158, label %150

150:                                              ; preds = %148
  %151 = add nuw i64 %141, 16
  %152 = and i64 %151, -16
  %153 = call i8* @_Znwm(i64 %152) #9
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %153, i8** %154, align 8, !alias.scope !12
  %155 = or i64 %152, -9223372036854775808
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %155, i64* %156, align 8, !alias.scope !12
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %141, i64* %157, align 8, !alias.scope !12
  br label %163

158:                                              ; preds = %148
  %159 = trunc i64 %141 to i8
  %160 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  store i8 %159, i8* %161, align 1, !alias.scope !12
  %162 = icmp eq i64 %141, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %158, %150
  %164 = phi i8* [ %153, %150 ], [ %137, %158 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %164, i8* nonnull align 1 %139, i64 %141, i1 false) #8
  br label %165

165:                                              ; preds = %163, %158
  %166 = phi i8* [ %137, %158 ], [ %164, %163 ]
  %167 = getelementptr inbounds i8, i8* %166, i64 %141
  store i8 0, i8* %167, align 1
  br label %168

168:                                              ; preds = %143, %165
  %169 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #9
  br label %176

176:                                              ; preds = %173, %168
  %177 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* nonnull align 8 %137, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #8
  %178 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #8
  %179 = getelementptr inbounds %"class.quic::QuicHKDF", %"class.quic::QuicHKDF"* %10, i64 0, i32 4, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds %"class.quic::QuicHKDF", %"class.quic::QuicHKDF"* %10, i64 0, i32 4, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i8* %180, null
  br i1 %183, label %184, label %185

184:                                              ; preds = %176
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 0, i64 24, i1 false) #8, !alias.scope !15
  br label %209

185:                                              ; preds = %176
  %186 = icmp ugt i64 %182, -17
  br i1 %186, label %187, label %189

187:                                              ; preds = %185
  %188 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %188) #10
  unreachable

189:                                              ; preds = %185
  %190 = icmp ult i64 %182, 23
  br i1 %190, label %199, label %191

191:                                              ; preds = %189
  %192 = add nuw i64 %182, 16
  %193 = and i64 %192, -16
  %194 = call i8* @_Znwm(i64 %193) #9
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %194, i8** %195, align 8, !alias.scope !15
  %196 = or i64 %193, -9223372036854775808
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %196, i64* %197, align 8, !alias.scope !15
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %182, i64* %198, align 8, !alias.scope !15
  br label %204

199:                                              ; preds = %189
  %200 = trunc i64 %182 to i8
  %201 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  store i8 %200, i8* %202, align 1, !alias.scope !15
  %203 = icmp eq i64 %182, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %199, %191
  %205 = phi i8* [ %194, %191 ], [ %178, %199 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %205, i8* nonnull align 1 %180, i64 %182, i1 false) #8
  br label %206

206:                                              ; preds = %204, %199
  %207 = phi i8* [ %178, %199 ], [ %205, %204 ]
  %208 = getelementptr inbounds i8, i8* %207, i64 %182
  store i8 0, i8* %208, align 1
  br label %209

209:                                              ; preds = %184, %206
  %210 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #9
  br label %217

217:                                              ; preds = %214, %209
  %218 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* nonnull align 8 %178, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #8
  call void @_ZN4quic8QuicHKDFD1Ev(%"class.quic::QuicHKDF"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %17) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4quic8QuicHKDFC1EN4absl11string_viewES2_S2_mmmmm(%"class.quic::QuicHKDF"*, i8*, i64, i8*, i64, %"class.absl::string_view"* byval(%"class.absl::string_view") align 8, i64, i64, i64, i64, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic8QuicHKDFD1Ev(%"class.quic::QuicHKDF"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !18
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4quic18Aes128GcmDecrypterC1Ev(%"class.quic::Aes128GcmDecrypter"*) unnamed_addr #1

declare void @_ZN4quic20Aes128Gcm12DecrypterC1Ev(%"class.quic::Aes128Gcm12Decrypter"*) unnamed_addr #1

declare void @_ZN4quic28ChaCha20Poly1305TlsDecrypterC1Ev(%"class.quic::ChaCha20Poly1305TlsDecrypter"*) unnamed_addr #1

declare void @_ZN4quic25ChaCha20Poly1305DecrypterC1Ev(%"class.quic::ChaCha20Poly1305Decrypter"*) unnamed_addr #1

declare void @_ZN4quic18Aes256GcmDecrypterC1Ev(%"class.quic::Aes256GcmDecrypter"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!18 = !{i8 0, i8 2}
