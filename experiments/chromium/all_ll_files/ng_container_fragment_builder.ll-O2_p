; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_container_fragment_builder.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_container_fragment_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGContainerFragmentBuilder" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.1639", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::Vector.1865", %"class.WTF::HashMap.1875", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.2006", %"class.WTF::Vector.2011", %class.scoped_refptr.2016, %class.scoped_refptr.1799, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.1631, i8, i8 }>
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2060 }
%class.scoped_refptr.2060 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2061", %"class.WTF::Vector.630", %"class.WTF::Vector.2063", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2061" = type { %"class.base::RefCounted.2062" }
%"class.base::RefCounted.2062" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2063" = type { %"class.WTF::VectorBuffer.2064" }
%"class.WTF::VectorBuffer.2064" = type { %"class.WTF::VectorBufferBase.2065" }
%"class.WTF::VectorBufferBase.2065" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2066 }
%union.anon.2066 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2051" }
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2053" }
%"class.blink::Member.2053" = type { %"class.blink::MemberBase.2054" }
%"class.blink::MemberBase.2054" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2074 }
%class.scoped_refptr.2074 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2084" }
%"class.blink::Member.2084" = type { %"class.blink::MemberBase.2085" }
%"class.blink::MemberBase.2085" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2075", %"class.WTF::Vector.2075" }
%"class.WTF::Vector.2075" = type { %"class.WTF::VectorBuffer.2076" }
%"class.WTF::VectorBuffer.2076" = type { %"class.WTF::VectorBufferBase.2077" }
%"class.WTF::VectorBufferBase.2077" = type { %class.scoped_refptr.2074*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2055" }
%"class.WTF::Vector.2055" = type { %"class.WTF::VectorBuffer.2056" }
%"class.WTF::VectorBuffer.2056" = type { %"class.WTF::VectorBufferBase.2057" }
%"class.WTF::VectorBufferBase.2057" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1644", %"class.absl::optional.1644", %"class.absl::optional.1644" }
%"class.absl::optional.1644" = type { %"class.absl::optional_internal::optional_data.1645" }
%"class.absl::optional_internal::optional_data.1645" = type { %"class.absl::optional_internal::optional_data_base.1646" }
%"class.absl::optional_internal::optional_data_base.1646" = type { %"class.absl::optional_internal::optional_data_dtor_base.1647" }
%"class.absl::optional_internal::optional_data_dtor_base.1647" = type { i8, %union.anon.1648 }
%union.anon.1648 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071", [32 x i8] }
%"class.WTF::VectorBufferBase.2071" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1631 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1634, %"class.WTF::Vector.1822", %"class.std::__1::unique_ptr.1827", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1848, %"class.blink::Persistent.1849" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1634 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1635", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1782, %union.anon.1798, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1635" = type { %"class.base::RefCounted.1636" }
%"class.base::RefCounted.1636" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1637, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%union.anon.1637 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1638 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1638 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1672 }
%class.scoped_refptr.1672 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1673", [4 x i8], %"class.std::__1::unique_ptr.1675", i64, %"class.WTF::Vector.1679", %"class.WTF::Vector.1684", %"class.WTF::Vector.1690", %"class.WTF::Vector.1708", %class.scoped_refptr.1546, %"class.WTF::HashMap.1714", %"class.WTF::Vector.1719", %"class.WTF::Vector.1679", %"class.WTF::Vector.1724", %"class.WTF::HashMap.1729", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1673" = type { %"class.base::RefCountedThreadSafe.1674" }
%"class.base::RefCountedThreadSafe.1674" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { i8* }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686", [8 x i8] }
%"class.WTF::VectorBufferBase.1686" = type { %class.scoped_refptr.1687*, i32, i32 }
%class.scoped_refptr.1687 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1690" = type { %"class.WTF::VectorBuffer.1691" }
%"class.WTF::VectorBuffer.1691" = type { %"class.WTF::VectorBufferBase.1692" }
%"class.WTF::VectorBufferBase.1692" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1694", %"class.std::__1::unique_ptr.1700" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1693 }
%class.scoped_refptr.1693 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1708" = type { %"class.WTF::VectorBuffer.1709" }
%"class.WTF::VectorBuffer.1709" = type { %"class.WTF::VectorBufferBase.1710" }
%"class.WTF::VectorBufferBase.1710" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1711", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1711" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1714" = type { %"class.WTF::HashTable.1715" }
%"class.WTF::HashTable.1715" = type <{ %"struct.WTF::KeyValuePair.1718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1718" = type opaque
%"class.WTF::Vector.1719" = type { %"class.WTF::VectorBuffer.1720" }
%"class.WTF::VectorBuffer.1720" = type { %"class.WTF::VectorBufferBase.1721" }
%"class.WTF::VectorBufferBase.1721" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1679" = type { %"class.WTF::VectorBuffer.1680" }
%"class.WTF::VectorBuffer.1680" = type { %"class.WTF::VectorBufferBase.1681", [16 x i8] }
%"class.WTF::VectorBufferBase.1681" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1724" = type { %"class.WTF::VectorBuffer.1725" }
%"class.WTF::VectorBuffer.1725" = type { %"class.WTF::VectorBufferBase.1726" }
%"class.WTF::VectorBufferBase.1726" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type { i8**, %"class.std::__1::unique_ptr.2086" }
%"class.std::__1::unique_ptr.2086" = type { %"class.std::__1::__compressed_pair.2087" }
%"class.std::__1::__compressed_pair.2087" = type { %"struct.std::__1::__compressed_pair_elem.2088" }
%"struct.std::__1::__compressed_pair_elem.2088" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1782 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.1798 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1639", %class.scoped_refptr.1799, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1800, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1672, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1801", %"class.absl::optional.1817" }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1800 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1804", %"class.WTF::Vector.1809", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1804" = type { %"class.WTF::VectorBuffer.1805" }
%"class.WTF::VectorBuffer.1805" = type { %"class.WTF::VectorBufferBase.1806" }
%"class.WTF::VectorBufferBase.1806" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811" }
%"class.WTF::VectorBufferBase.1811" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [8 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %class.scoped_refptr.1634*, i32, i32 }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1830", %"class.absl::optional.1835", %"class.absl::optional.1840" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1835" = type { %"class.absl::optional_internal::optional_data.1836" }
%"class.absl::optional_internal::optional_data.1836" = type { %"class.absl::optional_internal::optional_data_base.1837" }
%"class.absl::optional_internal::optional_data_base.1837" = type { %"class.absl::optional_internal::optional_data_dtor_base.1838" }
%"class.absl::optional_internal::optional_data_dtor_base.1838" = type { i8, [3 x i8], %union.anon.1839 }
%union.anon.1839 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1848 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1849" = type { %"class.blink::PersistentBase.1850" }
%"class.blink::PersistentBase.1850" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1853", %"struct.blink::PhysicalRect", %"class.blink::Member.1863" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"class.WTF::HashSet.1856"* }
%"class.WTF::HashSet.1856" = type { %"class.WTF::HashTable.1857" }
%"class.WTF::HashTable.1857" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1863" = type { %"class.blink::MemberBase.1864" }
%"class.blink::MemberBase.1864" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.absl::optional.1639" = type { %"class.absl::optional_internal::optional_data.1640" }
%"class.absl::optional_internal::optional_data.1640" = type { %"class.absl::optional_internal::optional_data_base.1641" }
%"class.absl::optional_internal::optional_data_base.1641" = type { %"class.absl::optional_internal::optional_data_dtor_base.1642" }
%"class.absl::optional_internal::optional_data_dtor_base.1642" = type { i8, %union.anon.1643 }
%union.anon.1643 = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1734" }
%"class.std::__1::unique_ptr.1734" = type { %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1737, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1754" }
%class.scoped_refptr.1737 = type { %"class.base::RefCountedData.1738"* }
%"class.base::RefCountedData.1738" = type { %"class.base::RefCountedThreadSafe.1739", %"class.WTF::Vector.1740" }
%"class.base::RefCountedThreadSafe.1739" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742" }
%"class.WTF::VectorBufferBase.1742" = type { %class.scoped_refptr.1743*, i32, i32 }
%class.scoped_refptr.1743 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1744", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1746" }
%"class.WTF::RefCounted.1744" = type { %"class.base::RefCounted.1745" }
%"class.base::RefCounted.1745" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1754" = type { %"class.std::__1::__compressed_pair.1755" }
%"class.std::__1::__compressed_pair.1755" = type { %"struct.std::__1::__compressed_pair_elem.1756" }
%"struct.std::__1::__compressed_pair_elem.1756" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1757", %"class.WTF::Vector.1770", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [320 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1760", %"class.WTF::Vector.1760", %class.scoped_refptr.1765, i8, [7 x i8] }>
%"class.WTF::Vector.1760" = type { %"class.WTF::VectorBuffer.1761" }
%"class.WTF::VectorBuffer.1761" = type { %"class.WTF::VectorBufferBase.1762", [8 x i8] }
%"class.WTF::VectorBufferBase.1762" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1765 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1766", %"class.WTF::Vector.1740", %"class.WTF::Vector.1740" }
%"class.WTF::RefCounted.1766" = type { %"class.base::RefCounted.1767" }
%"class.base::RefCounted.1767" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772", [288 x i8] }
%"class.WTF::VectorBufferBase.1772" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1760", %"class.WTF::Vector.1760" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1773 }
%class.scoped_refptr.1773 = type { %"class.blink::NGShapeExclusions"* }
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.1868", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1792 }
%union.anon.1792 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.1782 }
%"class.absl::optional.1868" = type { %"class.absl::optional_internal::optional_data.1869" }
%"class.absl::optional_internal::optional_data.1869" = type { %"class.absl::optional_internal::optional_data_base.1870" }
%"class.absl::optional_internal::optional_data_base.1870" = type { %"class.absl::optional_internal::optional_data_dtor_base.1871" }
%"class.absl::optional_internal::optional_data_dtor_base.1871" = type { i8, %union.anon.1872 }
%union.anon.1872 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.WTF::HashMap.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"struct.WTF::KeyValuePair.1879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1879" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.1931" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1880", %"class.std::__1::unique_ptr.1900" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1880" = type { %"class.blink::PersistentBase.1881" }
%"class.blink::PersistentBase.1881" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1884", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1887", %"class.WTF::HashMap.1892", %"class.WTF::String" }
%"class.WTF::Vector.1887" = type { %"class.WTF::VectorBuffer.1888" }
%"class.WTF::VectorBuffer.1888" = type { %"class.WTF::VectorBufferBase.1889" }
%"class.WTF::VectorBufferBase.1889" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"struct.WTF::KeyValuePair.1896"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1896" = type opaque
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1903", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1903" = type { %"class.WTF::HashTable.1906", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1906" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1909", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1909" = type { %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1911" }
%"struct.std::__1::__compressed_pair_elem.1911" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1912, %"class.std::__1::unique_ptr.1913", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1912 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2017", i16, %class.scoped_refptr.1912 }
%"class.WTF::ThreadSafeRefCounted.2017" = type { %"class.base::RefCountedThreadSafe.2018" }
%"class.base::RefCountedThreadSafe.2018" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1913" = type { %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.WTF::Vector.1916"* }
%"class.WTF::Vector.1916" = type { %"class.WTF::VectorBuffer.1917" }
%"class.WTF::VectorBuffer.1917" = type { %"class.WTF::VectorBufferBase.1918" }
%"class.WTF::VectorBufferBase.1918" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1927, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1927 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.1975", %"class.std::__1::unique_ptr.1981", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1934", %"class.std::__1::unique_ptr.1960", %"class.std::__1::unique_ptr.1884" }
%"class.WTF::Vector.1934" = type { %"class.WTF::VectorBuffer.1935" }
%"class.WTF::VectorBuffer.1935" = type { %"class.WTF::VectorBufferBase.1936" }
%"class.WTF::VectorBufferBase.1936" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1937, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.1937 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1938", float, %"class.blink::FloatRect", %"class.WTF::Vector.1940", %class.scoped_refptr.1946, %"class.std::__1::unique_ptr.1947", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1938" = type { %"class.base::RefCounted.1939" }
%"class.base::RefCounted.1939" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %class.scoped_refptr.1943*, i32, i32 }
%class.scoped_refptr.1943 = type opaque
%class.scoped_refptr.1946 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1950", i32, float }
%"class.WTF::Vector.1950" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952" }
%"class.WTF::VectorBufferBase.1952" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1963", %"class.WTF::Vector.1968" }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.1981" = type { %"class.std::__1::__compressed_pair.1982" }
%"class.std::__1::__compressed_pair.1982" = type { %"struct.std::__1::__compressed_pair_elem.1983" }
%"struct.std::__1::__compressed_pair_elem.1983" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.1984", %"class.WTF::Vector.1990", %"class.WTF::Vector.1990", %"class.WTF::HashMap.1995" }
%"class.WTF::Vector.1984" = type { %"class.WTF::VectorBuffer.1985" }
%"class.WTF::VectorBuffer.1985" = type { %"class.WTF::VectorBufferBase.1986" }
%"class.WTF::VectorBufferBase.1986" = type { %"struct.std::__1::pair.1987"*, i32, i32 }
%"struct.std::__1::pair.1987" = type opaque
%"class.WTF::Vector.1990" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992" }
%"class.WTF::VectorBufferBase.1992" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.1995" = type { %"class.WTF::HashTable.1996" }
%"class.WTF::HashTable.1996" = type <{ %"struct.WTF::KeyValuePair.1999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1999" = type opaque
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008", [64 x i8] }
%"class.WTF::VectorBufferBase.2008" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.1782 }
%"class.WTF::Vector.2011" = type { %"class.WTF::VectorBuffer.2012" }
%"class.WTF::VectorBuffer.2012" = type { %"class.WTF::VectorBufferBase.2013" }
%"class.WTF::VectorBufferBase.2013" = type { %class.scoped_refptr.1785*, i32, i32 }
%class.scoped_refptr.1785 = type { %"class.blink::NGBreakToken"* }
%class.scoped_refptr.2016 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%class.scoped_refptr.1799 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2019", [4 x i8], %union.anon.2021, %class.scoped_refptr.1799, i32, [4 x i8] }>
%"class.WTF::RefCounted.2019" = type { %"class.base::RefCounted.2020" }
%"class.base::RefCounted.2020" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2021 = type { %"class.blink::LayoutBox"* }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1783", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1785, %"class.std::__1::unique_ptr.1786" }
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"class.WTF::Vector.1789"* }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.base::CheckedContiguousIterator" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* }
%"struct.blink::NGPhysicalStaticPosition" = type { %"struct.blink::PhysicalOffset", i32, i32 }
%"class.WTF::HashMap.2023" = type { %"class.WTF::HashTable.2024" }
%"class.WTF::HashTable.2024" = type <{ %"struct.WTF::KeyValuePair.2027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2027" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs.2028" }
%"struct.blink::NGMulticolWithPendingOOFs.2028" = type { %"struct.blink::PhysicalOffset", %"struct.blink::NGContainingBlock.2029" }
%"struct.blink::NGContainingBlock.2029" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %class.scoped_refptr.1782 }
%"class.base::CheckedContiguousIterator.2032" = type { %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* }
%"struct.blink::NGPhysicalOOFNodeForFragmentation" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGContainingBlock.2029", %"struct.blink::NGContainingBlock.2029" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.2022 }
%union.anon.2022 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2092", %"class.blink::Member.2094", %"class.blink::Member.2096", %"class.blink::Member.2115", %"class.blink::Member.2117" }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2100", %"class.blink::HeapHashSet.2109" }
%"class.blink::HeapVector.2100" = type { %"class.WTF::Vector.2103" }
%"class.WTF::Vector.2103" = type { %"class.WTF::VectorBuffer.2104" }
%"class.WTF::VectorBuffer.2104" = type { %"class.WTF::VectorBufferBase.2105" }
%"class.WTF::VectorBufferBase.2105" = type { %"class.blink::Member.2106"*, i32, i32 }
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2109" = type { %"class.WTF::HashSet.2112" }
%"class.WTF::HashSet.2112" = type { %"class.WTF::HashTable.2113" }
%"class.WTF::HashTable.2113" = type <{ %"class.blink::Member.2106"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::HeapHashSet.2119"* }
%"class.blink::HeapHashSet.2119" = type opaque

$_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE6insertIS3_EEvjOT_ = comdat any

$_ZNSt3__14swapIN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_ = comdat any

$_ZNSt3__14swapIN3WTF7HashMapIPN5blink9LayoutBoxENS3_25NGMulticolWithPendingOOFsINS3_13LogicalOffsetEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSB_IS8_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISH_EE5valueEvE4typeERSH_SK_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEdeEv = comdat any

$_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEC2EPKS2_PS2_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEE15CheckComparableERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISB_SG_SH_EERKS3_RKS8_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_ = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm = comdat any

$_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink32NGLogicalOutOfFlowPositionedNodeENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRNS1_11NGBlockNodeENS1_23NGLogicalStaticPositionEDnRbNS1_17NGContainingBlockINS1_13LogicalOffsetEEESE_RKN4absl8optionalINS1_11LogicalRectEEEEEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENS2_25NGMulticolWithPendingOOFsINS2_14PhysicalOffsetEEEEEEEPKcv = private unnamed_addr constant [143 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::LayoutBox *, blink::NGMulticolWithPendingOOFs<blink::PhysicalOffset> >]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGLogicalOutOfFlowPositionedNode]\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NGBreakToken>]\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEPKcv = private unnamed_addr constant [98 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGContainerFragmentBuilder::ChildWithOffset]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENS2_25NGMulticolWithPendingOOFsINS2_13LogicalOffsetEEEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::LayoutBox *, blink::NGMulticolWithPendingOOFs<blink::LogicalOffset> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder12ReplaceChildEjRKNS_18NGPhysicalFragmentENS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"*, i32, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.blink::NGPhysicalFragment"* %2, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #8
  br label %8

8:                                                ; preds = %4, %6
  %9 = ptrtoint %"class.blink::NGPhysicalFragment"* %2 to i64
  %10 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %11 = tail call dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2006"* %10, i32 %1) #8
  %12 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %11 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %11, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr.1782* %13 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %13, i64 0, i32 0
  %16 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %15, align 8
  store i64 %9, i64* %14, align 8
  %17 = icmp eq %"class.blink::NGPhysicalFragment"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #8
  %20 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %16) #8
  br label %24

24:                                               ; preds = %23, %18, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder18PropagateChildDataERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_PKNS_12LayoutInlineEN4absl8optionalINS_10LayoutUnitEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64, i64, %"class.blink::LayoutInline"*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::NGBreakToken"*, align 8
  %8 = trunc i64 %5 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = lshr i64 %5, 32
  %12 = trunc i64 %11 to i32
  tail call void @_ZN5blink26NGContainerFragmentBuilder26PropagateOOFPositionedInfoERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_S4_PKNS_12LayoutInlineENS_10LayoutUnitEPKNS_17NGContainingBlockIS4_EES4_(%"class.blink::NGContainerFragmentBuilder"* %0, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %1, i64 %2, i64 %3, i64 0, %"class.blink::LayoutInline"* %4, i32 %12, %"struct.blink::NGContainingBlock"* null, i64 0)
  br label %13

13:                                               ; preds = %6, %10
  %14 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 28
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %79

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %19 = bitcast i24* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  %23 = and i32 %20, 960
  %24 = icmp eq i32 %23, 640
  %25 = or i1 %22, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  store i8 1, i8* %14, align 1
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %17, %26
  %29 = phi i32 [ %20, %17 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = lshr i32 %29, 10
  %33 = and i32 %32, 3
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  br label %41

38:                                               ; preds = %28
  %39 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %31, i32 %33) #8
  %40 = load i32, i32* %19, align 8
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi i32 [ %29, %35 ], [ %40, %38 ]
  %43 = phi %"class.blink::ComputedStyle"* [ %37, %35 ], [ %39, %38 ]
  %44 = and i32 %42, 64
  %45 = icmp eq i32 %44, 0
  %46 = and i32 %42, 960
  %47 = icmp ne i32 %46, 256
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %79

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 8462480737302404222943232
  %54 = icmp eq i160 %53, 2417851639229258349412352
  br i1 %54, label %55, label %79

55:                                               ; preds = %49
  %56 = bitcast %"class.blink::NGContainerFragmentBuilder"* %0 to %"class.blink::ComputedStyleBase"**
  %57 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %57, i64 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 7, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %63, align 8
  br i1 %62, label %65, label %72

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 18, i32 2
  %67 = load i8, i8* %66, align 1
  switch i8 %67, label %68 [
    i8 8, label %71
    i8 1, label %71
  ]

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 7, i32 2
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %79 [
    i8 8, label %71
    i8 1, label %71
  ]

71:                                               ; preds = %68, %68, %65, %65
  store i8 1, i8* %14, align 1
  br label %79

72:                                               ; preds = %55
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 8, i32 2
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %75 [
    i8 8, label %78
    i8 1, label %78
  ]

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 17, i32 2
  %77 = load i8, i8* %76, align 1
  switch i8 %77, label %79 [
    i8 8, label %78
    i8 1, label %78
  ]

78:                                               ; preds = %75, %75, %72, %72
  store i8 1, i8* %14, align 1
  br label %79

79:                                               ; preds = %75, %68, %41, %49, %78, %71, %13
  %80 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 27
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %85 = bitcast i24* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 960
  %88 = icmp eq i32 %87, 512
  %89 = and i32 %86, 524288
  %90 = icmp ne i32 %89, 0
  %91 = or i1 %88, %90
  %92 = and i32 %86, 1048577
  %93 = icmp eq i32 %92, 1
  %94 = or i1 %93, %91
  br i1 %94, label %95, label %96

95:                                               ; preds = %83
  store i8 1, i8* %80, align 8
  br label %96

96:                                               ; preds = %83, %79, %95
  %97 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 23
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %117

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %102 = bitcast i24* %101 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 64
  %105 = icmp eq i32 %104, 0
  %106 = and i32 %103, 896
  %107 = icmp ugt i32 %106, 256
  %108 = and i1 %105, %107
  %109 = and i32 %103, 524288
  %110 = icmp ne i32 %109, 0
  %111 = or i1 %110, %108
  %112 = xor i1 %111, true
  %113 = and i32 %103, 2
  %114 = icmp ne i32 %113, 0
  %115 = and i1 %114, %112
  br i1 %115, label %116, label %117

116:                                              ; preds = %100
  store i8 1, i8* %97, align 4
  br label %117

117:                                              ; preds = %100, %96, %116
  %118 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 29
  %119 = load i8, i8* %118, align 2, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %180, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %123 = bitcast i24* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 960
  %126 = icmp eq i32 %125, 256
  br i1 %126, label %180, label %127

127:                                              ; preds = %121
  %128 = bitcast %"class.blink::NGBreakToken"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #8
  %129 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 4, i32 0
  %130 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %129, align 8
  store %"class.blink::NGBreakToken"* %130, %"class.blink::NGBreakToken"** %7, align 8
  %131 = and i32 %124, 64
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %151

133:                                              ; preds = %127
  %134 = icmp eq %"class.blink::NGBreakToken"* %130, null
  br i1 %134, label %179, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15
  %137 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 15, i32 0, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %138, %140
  br i1 %141, label %150, label %142, !prof !3

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %136, i64 0, i32 0, i32 0, i32 0
  %144 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %143, align 8
  %145 = zext i32 %138 to i64
  %146 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %144, i64 %145, i32 0
  store %"class.blink::NGBreakToken"* %130, %"class.blink::NGBreakToken"** %146, align 8
  %147 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %130, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %147) #8
  %148 = load i32, i32* %137, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %137, align 4
  br label %179

150:                                              ; preds = %135
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2011"* %136, %"class.blink::NGBreakToken"** nonnull dereferenceable(8) %7) #8
  br label %179

151:                                              ; preds = %127
  %152 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 16
  %153 = icmp eq %"class.blink::NGBreakToken"* %130, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %130, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %155) #8
  br label %156

156:                                              ; preds = %154, %151
  %157 = ptrtoint %"class.blink::NGBreakToken"* %130 to i64
  %158 = bitcast %class.scoped_refptr.2016* %152 to i64*
  %159 = getelementptr inbounds %class.scoped_refptr.2016, %class.scoped_refptr.2016* %152, i64 0, i32 0
  %160 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %159, align 8
  store i64 %157, i64* %158, align 8
  %161 = icmp eq %"class.blink::NGInlineBreakToken"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %160, i64 0, i32 0, i32 1, i32 0
  %164 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %163, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %164) #8
  %165 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %163, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.base::RefCounted.1633", %"class.base::RefCounted.1633"* %163, i64 -2
  %170 = bitcast %"class.base::RefCounted.1633"* %169 to %"class.blink::NGBreakToken"*
  %171 = bitcast %"class.base::RefCounted.1633"* %169 to void (%"class.blink::NGBreakToken"*)***
  %172 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %172, i64 1
  %174 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %173, align 8
  tail call void %174(%"class.blink::NGBreakToken"* nonnull %170) #8
  br label %175

175:                                              ; preds = %156, %162, %168
  %176 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 21
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %176, align 4
  br label %179

179:                                              ; preds = %150, %142, %133, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #8
  br label %180

180:                                              ; preds = %117, %179, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder26PropagateOOFPositionedInfoERKNS_18NGPhysicalFragmentENS_13LogicalOffsetES4_S4_PKNS_12LayoutInlineENS_10LayoutUnitEPKNS_17NGContainingBlockIS4_EES4_(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48), i64, i64, i64, %"class.blink::LayoutInline"*, i32, %"struct.blink::NGContainingBlock"* readonly, i64) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::LayoutBox"*, align 8
  %11 = alloca %"class.blink::LayoutBox"*, align 8
  %12 = alloca %"struct.blink::NGMulticolWithPendingOOFs", align 8
  %13 = alloca [19 x i8], align 1
  %14 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %15 = alloca [19 x i8], align 1
  %16 = alloca %"class.blink::WritingModeConverter", align 4
  %17 = alloca %"class.base::CheckedContiguousIterator", align 8
  %18 = alloca %"class.base::CheckedContiguousIterator", align 8
  %19 = alloca { i64, i64 }, align 8
  %20 = bitcast { i64, i64 }* %19 to %"struct.blink::NGPhysicalStaticPosition"*
  %21 = alloca %"struct.blink::NGLogicalOutOfFlowPositionedNode", align 8
  %22 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %23 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %24 = alloca [19 x i8], align 1
  %25 = alloca %"class.WTF::HashMap.2023", align 8
  %26 = alloca i64, align 8
  %27 = bitcast i64* %26 to %"struct.blink::PhysicalSize"*
  %28 = alloca i64, align 8
  %29 = bitcast i64* %28 to %"struct.blink::PhysicalSize"*
  %30 = alloca i64, align 8
  %31 = bitcast i64* %30 to %"struct.blink::PhysicalSize"*
  %32 = alloca %"class.base::CheckedContiguousIterator.2032", align 8
  %33 = alloca %"class.base::CheckedContiguousIterator.2032", align 8
  %34 = alloca i64, align 8
  %35 = bitcast i64* %34 to %"struct.blink::PhysicalSize"*
  %36 = alloca i64, align 8
  %37 = bitcast i64* %36 to %"struct.blink::PhysicalSize"*
  %38 = alloca i64, align 8
  %39 = bitcast i64* %38 to %"struct.blink::PhysicalSize"*
  %40 = alloca i64, align 8
  %41 = bitcast i64* %40 to %"struct.blink::PhysicalSize"*
  %42 = alloca %"class.blink::WritingModeConverter", align 4
  %43 = alloca { i64, i64 }, align 8
  %44 = bitcast { i64, i64 }* %43 to %"struct.blink::NGPhysicalStaticPosition"*
  %45 = alloca %"struct.blink::NGLogicalOutOfFlowPositionedNode", align 8
  %46 = alloca [19 x i8], align 1
  %47 = trunc i64 %2 to i32
  %48 = lshr i64 %2, 32
  %49 = trunc i64 %48 to i32
  %50 = trunc i64 %3 to i32
  %51 = lshr i64 %3, 32
  %52 = trunc i64 %51 to i32
  %53 = trunc i64 %4 to i32
  %54 = lshr i64 %4, 32
  %55 = trunc i64 %54 to i32
  %56 = trunc i64 %8 to i32
  %57 = lshr i64 %8, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %50, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %50) #8
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !3
  %65 = icmp slt i32 %52, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %52) #8
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !3
  %71 = icmp slt i32 %53, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %53) #8
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = icmp slt i32 %55, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %55) #8
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !3
  %83 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %16, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %83) #8
  %84 = bitcast %"class.blink::WritingModeConverter"* %16 to i32*
  store i32 -1431655766, i32* %84, align 4
  %85 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 1
  %86 = bitcast %"class.blink::WritingDirectionMode"* %85 to i16*
  %87 = load i16, i16* %86, align 8
  %88 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 2
  %89 = bitcast %"struct.blink::PhysicalSize"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.blink::WritingModeConverter"* %16 to i16*
  store i16 %87, i16* %91, align 4
  %92 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %16, i64 0, i32 1
  %93 = bitcast %"struct.blink::PhysicalSize"* %92 to i64*
  store i64 %90, i64* %93, align 4
  %94 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::Vector.1789"*, %"class.WTF::Vector.1789"** %94, align 8
  %96 = icmp eq %"class.WTF::Vector.1789"* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %9
  %98 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %95, i64 0, i32 0, i32 0, i32 0
  %99 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %98, align 8
  %100 = getelementptr inbounds %"class.WTF::Vector.1789", %"class.WTF::Vector.1789"* %95, i64 0, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  br label %103

103:                                              ; preds = %9, %97
  %104 = phi i64 [ %102, %97 ], [ 0, %9 ]
  %105 = phi %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* [ %99, %97 ], [ null, %9 ]
  %106 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #8
  %107 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %17, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %105, i64 %104
  %109 = bitcast %"class.base::CheckedContiguousIterator"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"* nonnull %17, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %105, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %105, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %108) #8
  %110 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #8
  %111 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %18, i64 0, i32 1
  %112 = bitcast %"class.base::CheckedContiguousIterator"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"* nonnull %18, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %105, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %108, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %108) #8
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %17, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %18) #8
  %113 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %107, align 8
  %114 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %111, align 8
  %115 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %113, %114
  br i1 %115, label %173, label %116

116:                                              ; preds = %103
  %117 = bitcast { i64, i64 }* %19 to i8*
  %118 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %120 = icmp eq %"class.blink::LayoutInline"* %5, null
  %121 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %5, i64 0, i32 0, i32 0
  %122 = bitcast %"class.blink::LayoutInline"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %123 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %5, i64 0, i32 0, i32 0, i32 4
  %124 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %123 to i96*
  %125 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %5, i64 0, i32 0, i32 0, i32 5, i32 0
  %126 = ptrtoint %"class.blink::LayoutInline"* %5 to i64
  %127 = icmp ne %"struct.blink::NGContainingBlock"* %7, null
  %128 = or i64 %57, %8
  %129 = trunc i64 %128 to i32
  %130 = icmp ne i32 %129, 0
  %131 = or i1 %127, %130
  %132 = icmp slt i32 %56, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = icmp slt i32 %58, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %7, i64 0, i32 2, i32 0
  %137 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21 to i8*
  %138 = bitcast %"struct.blink::NGContainingBlock"* %7 to i8*
  %139 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %22 to i8*
  %140 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %23 to i8*
  %141 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %14 to i8*
  %142 = getelementptr inbounds [19 x i8], [19 x i8]* %13, i64 0, i64 0
  %143 = getelementptr inbounds [19 x i8], [19 x i8]* %24, i64 0, i64 0
  %144 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 0
  %145 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 1
  %146 = bitcast %"struct.blink::NGLogicalStaticPosition"* %145 to i64*
  %147 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 1, i32 1
  %148 = bitcast i32* %147 to i64*
  %149 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 3
  %151 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 5, i32 0
  %152 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 6
  %153 = bitcast %"struct.blink::NGContainingBlock"* %152 to i8*
  %154 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 6, i32 2, i32 0
  %155 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 7
  %156 = bitcast %"struct.blink::NGContainingBlock"* %155 to i8*
  %157 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 7, i32 2, i32 0
  %158 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %21, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %159 = getelementptr inbounds i8, i8* %137, i64 89
  %160 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  %161 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %162 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %160, i64 0, i32 0, i32 0, i32 0
  %164 = icmp slt i32 %76, 0
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = icmp slt i32 %82, 0
  %167 = select i1 %166, i32 -2147483648, i32 2147483647
  %168 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  %169 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %170 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %171 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %168, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.WTF::Vector.1865"* %168 to i64*
  br label %182

173:                                              ; preds = %404, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #8
  %174 = icmp eq %"class.blink::NGPhysicalFragment"* %1, null
  br i1 %174, label %1224, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %177 = bitcast i24* %176 to i32*
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 64
  %180 = icmp eq i32 %179, 0
  %181 = bitcast %"class.blink::NGPhysicalFragment"* %1 to %"class.blink::NGPhysicalBoxFragment"*
  br i1 %180, label %409, label %1224

182:                                              ; preds = %116, %404
  %183 = call dereferenceable(32) %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %17)
  %184 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %183, i64 0, i32 0
  %185 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %184, align 8
  %186 = ptrtoint %"class.blink::LayoutBox"* %185 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #8
  %187 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %183, i64 0, i32 1
  %188 = bitcast %"struct.blink::PhysicalOffset"* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %183, i64 0, i32 2
  %191 = load i8, i8* %190, align 8
  %192 = and i8 %191, 3
  %193 = lshr i8 %191, 2
  %194 = and i8 %193, 3
  %195 = zext i8 %194 to i64
  %196 = shl nuw nsw i64 %195, 32
  %197 = zext i8 %192 to i64
  %198 = or i64 %196, %197
  store i64 %189, i64* %118, align 8
  store i64 %198, i64* %119, align 8
  %199 = call { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"* nonnull %20, %"class.blink::WritingModeConverter"* nonnull dereferenceable(12) %16)
  %200 = extractvalue { i64, i64 } %199, 0
  %201 = trunc i64 %200 to i32
  %202 = lshr i64 %200, 32
  %203 = trunc i64 %202 to i32
  %204 = extractvalue { i64, i64 } %199, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  %205 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %183, i64 0, i32 3
  %206 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %205, align 8
  %207 = ptrtoint %"class.blink::LayoutInline"* %206 to i64
  %208 = icmp ne %"class.blink::LayoutInline"* %206, null
  %209 = or i1 %120, %208
  br i1 %209, label %252, label %210

210:                                              ; preds = %182
  %211 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %122, align 8
  %212 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %211, i64 26
  %213 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %212, align 8
  %214 = call zeroext i1 %213(%"class.blink::LayoutObject"* nonnull %121) #8
  br i1 %214, label %215, label %252

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %185, i64 0, i32 0, i32 0, i32 5, i32 0
  %217 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %217, i64 0, i32 0, i32 9
  %219 = bitcast [20 x i8]* %218 to i160*
  %220 = load i160, i160* %219, align 8
  %221 = lshr i160 %220, 80
  %222 = trunc i160 %221 to i32
  %223 = and i32 %222, 7
  %224 = icmp eq i32 %223, 4
  %225 = and i160 %220, 128849018880
  %226 = icmp eq i160 %225, 42949672960
  %227 = and i1 %226, %224
  %228 = select i1 %227, i32 3, i32 %223
  switch i32 %228, label %252 [
    i32 0, label %229
    i32 1, label %247
  ]

229:                                              ; preds = %215
  %230 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %231 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %230, i64 0, i32 0, i32 9
  %232 = bitcast [20 x i8]* %231 to i160*
  %233 = load i160, i160* %232, align 8
  %234 = lshr i160 %233, 80
  %235 = trunc i160 %234 to i32
  %236 = and i32 %235, 7
  %237 = icmp eq i32 %236, 4
  %238 = and i160 %233, 128849018880
  %239 = icmp eq i160 %238, 42949672960
  %240 = and i1 %239, %237
  %241 = icmp ne i32 %236, 3
  %242 = xor i1 %241, %240
  br i1 %242, label %251, label %243

243:                                              ; preds = %229
  %244 = load i96, i96* %124, align 4
  %245 = and i96 %244, 68719476736
  %246 = icmp eq i96 %245, 0
  br i1 %246, label %252, label %251

247:                                              ; preds = %215
  %248 = load i96, i96* %124, align 4
  %249 = and i96 %248, 68719476736
  %250 = icmp eq i96 %249, 0
  br i1 %250, label %252, label %251

251:                                              ; preds = %243, %247, %229
  br label %252

252:                                              ; preds = %182, %243, %247, %215, %210, %251
  %253 = phi i64 [ %126, %251 ], [ %207, %247 ], [ %207, %182 ], [ %207, %243 ], [ %207, %210 ], [ %207, %215 ]
  br i1 %131, label %254, label %349

254:                                              ; preds = %252
  %255 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %185, i64 0, i32 0, i32 0, i32 5, i32 0
  %256 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %256, i64 0, i32 0, i32 9
  %258 = bitcast [20 x i8]* %257 to i160*
  %259 = load i160, i160* %258, align 8
  %260 = and i160 %259, 8462480737302404222943232
  %261 = icmp eq i160 %260, 1208925819614629174706176
  br i1 %261, label %262, label %349

262:                                              ; preds = %254
  %263 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %201, i32 %56) #8
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %133, i32 %265, !prof !3
  %267 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %203, i32 %58) #8
  %268 = extractvalue { i32, i1 } %267, 1
  %269 = extractvalue { i32, i1 } %267, 0
  %270 = select i1 %268, i32 %135, i32 %269, !prof !3
  %271 = zext i32 %270 to i64
  %272 = shl nuw i64 %271, 32
  br i1 %127, label %273, label %349

273:                                              ; preds = %262
  %274 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %136, align 8
  %275 = icmp eq %"class.blink::NGPhysicalFragment"* %274, null
  br i1 %275, label %349, label %276

276:                                              ; preds = %273
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %137) #8
  %277 = zext i32 %266 to i64
  %278 = or i64 %272, %277
  %279 = inttoptr i64 %253 to %"class.blink::LayoutInline"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* nonnull align 8 %138, i64 16, i1 false)
  %280 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %274, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %280) #8
  %281 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %136, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %138, i64 16, i1 false)
  %282 = icmp eq %"class.blink::NGPhysicalFragment"* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %281, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %284) #8
  br label %285

285:                                              ; preds = %276, %283
  %286 = phi i1 [ true, %276 ], [ false, %283 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141)
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %142)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %142, i8* nonnull align 1 %143, i64 19, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* nonnull align 8 %140, i64 16, i1 false)
  store %"class.blink::LayoutBox"* %185, %"class.blink::LayoutBox"** %144, align 8
  store i64 %278, i64* %146, align 8
  store i64 %204, i64* %148, align 8
  store %"class.blink::LayoutInline"* %279, %"class.blink::LayoutInline"** %149, align 8
  store i8 0, i8* %150, align 8
  store i32 0, i32* %151, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* nonnull align 8 %139, i64 16, i1 false)
  store %"class.blink::NGPhysicalFragment"* %274, %"class.blink::NGPhysicalFragment"** %154, align 8
  %287 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %274, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %287) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %141, i64 16, i1 false)
  store %"class.blink::NGPhysicalFragment"* %281, %"class.blink::NGPhysicalFragment"** %157, align 8
  br i1 %286, label %288, label %289

288:                                              ; preds = %285
  store i8 0, i8* %158, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* nonnull align 1 %142, i64 19, i1 false)
  br label %295

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %281, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %290) #8
  store i8 0, i8* %158, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* nonnull align 1 %142, i64 19, i1 false)
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %290) #8
  %291 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %281, i64 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %289
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %281) #8
  br label %295

295:                                              ; preds = %288, %289, %294
  %296 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %274, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %296) #8
  %297 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %295
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %274) #8
  br label %301

301:                                              ; preds = %295, %300
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %142)
  %302 = load i32, i32* %161, align 4
  %303 = load i32, i32* %162, align 8
  %304 = icmp eq i32 %302, %303
  br i1 %304, label %329, label %305, !prof !3

305:                                              ; preds = %301
  %306 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %163, align 8
  %307 = zext i32 %302 to i64
  %308 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307
  %309 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* nonnull align 8 %137, i64 40, i1 false) #8
  %310 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307, i32 6
  %311 = bitcast %"struct.blink::NGContainingBlock"* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %311, i8* align 8 %153, i64 16, i1 false) #8
  %312 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %154, align 8
  %313 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %312, %"class.blink::NGPhysicalFragment"** %313, align 8
  %314 = icmp eq %"class.blink::NGPhysicalFragment"* %312, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %305
  %316 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %312, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %316) #8
  br label %317

317:                                              ; preds = %315, %305
  %318 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307, i32 7
  %319 = bitcast %"struct.blink::NGContainingBlock"* %318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %319, i8* align 8 %156, i64 16, i1 false) #8
  %320 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %157, align 8
  %321 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %320, %"class.blink::NGPhysicalFragment"** %321, align 8
  %322 = icmp eq %"class.blink::NGPhysicalFragment"* %320, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %320, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %324) #8
  br label %325

325:                                              ; preds = %323, %317
  %326 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %306, i64 %307, i32 8, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %158, i64 20, i1 false) #8
  %327 = load i32, i32* %161, align 4
  %328 = add i32 %327, 1
  store i32 %328, i32* %161, align 4
  br label %330

329:                                              ; preds = %301
  call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"* %160, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nonnull dereferenceable(112) %21) #8
  br label %330

330:                                              ; preds = %325, %329
  %331 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %157, align 8
  %332 = icmp eq %"class.blink::NGPhysicalFragment"* %331, null
  br i1 %332, label %339, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %331, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %334) #8
  %335 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %331, i64 0, i32 0, i32 0, i32 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %333
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %331) #8
  br label %339

339:                                              ; preds = %338, %333, %330
  %340 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %154, align 8
  %341 = icmp eq %"class.blink::NGPhysicalFragment"* %340, null
  br i1 %341, label %348, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %340, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %343) #8
  %344 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %340, i64 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %342
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %340) #8
  br label %348

348:                                              ; preds = %339, %342, %347
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %137) #8
  br label %404

349:                                              ; preds = %273, %252, %262, %254
  %350 = phi i32 [ %266, %273 ], [ %266, %262 ], [ %201, %254 ], [ %201, %252 ]
  %351 = phi i32 [ %270, %273 ], [ %270, %262 ], [ %203, %254 ], [ %203, %252 ]
  %352 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %350, i32 %76) #8
  %353 = extractvalue { i32, i1 } %352, 1
  %354 = extractvalue { i32, i1 } %352, 0
  %355 = select i1 %353, i32 %165, i32 %354, !prof !3
  %356 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %351, i32 %82) #8
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 %167, i32 %358, !prof !3
  %360 = zext i32 %359 to i64
  %361 = shl nuw i64 %360, 32
  %362 = load i32, i32* %169, align 4
  %363 = load i32, i32* %170, align 8
  %364 = icmp eq i32 %362, %363
  br i1 %364, label %365, label %385, !prof !3

365:                                              ; preds = %349
  %366 = add i32 %362, 1
  %367 = lshr i32 %362, 2
  %368 = add i32 %366, %367
  %369 = icmp ugt i32 %368, 4
  %370 = select i1 %369, i32 %368, i32 4
  %371 = icmp ugt i32 %370, %366
  %372 = select i1 %371, i32 %370, i32 %366
  %373 = icmp ult i32 %362, %372
  br i1 %373, label %374, label %385, !prof !4

374:                                              ; preds = %365
  %375 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %171, align 8
  %376 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %375, null
  br i1 %376, label %377, label %384

377:                                              ; preds = %374
  %378 = zext i32 %372 to i64
  %379 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %378) #8
  %380 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %379, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %381 = ptrtoint i8* %380 to i64
  store atomic i64 %381, i64* %172 monotonic, align 8
  %382 = udiv i64 %379, 112
  %383 = trunc i64 %382 to i32
  store i32 %383, i32* %170, align 8
  br label %385

384:                                              ; preds = %374
  call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %168, i32 %372) #8
  br label %385

385:                                              ; preds = %349, %365, %377, %384
  %386 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %171, align 8
  %387 = load i32, i32* %169, align 4
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388
  %390 = zext i32 %355 to i64
  %391 = or i64 %361, %390
  %392 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %389 to i64*
  store i64 %186, i64* %392, align 8
  %393 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388, i32 1
  %394 = bitcast %"struct.blink::NGLogicalStaticPosition"* %393 to i64*
  store i64 %391, i64* %394, align 8
  %395 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388, i32 1, i32 1
  %396 = bitcast i32* %395 to i64*
  store i64 %204, i64* %396, align 8
  %397 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388, i32 2
  %398 = bitcast %"class.blink::LayoutInline"** %397 to i64*
  store i64 %253, i64* %398, align 8
  %399 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388, i32 3
  store i8 0, i8* %399, align 8
  %400 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %386, i64 %388, i32 5
  %401 = bitcast %"class.blink::LayoutUnit"* %400 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %401, i8 0, i64 53, i1 false) #8
  %402 = load i32, i32* %169, align 4
  %403 = add i32 %402, 1
  store i32 %403, i32* %169, align 4
  br label %404

404:                                              ; preds = %348, %385
  %405 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %17)
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %17, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %18) #8
  %406 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %107, align 8
  %407 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %111, align 8
  %408 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %406, %407
  br i1 %408, label %173, label %182

409:                                              ; preds = %175
  %410 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 1, i32 0, i32 0, i32 0, i32 0
  %411 = load i32, i32* %410, align 8
  %412 = and i32 %411, 8192
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %1224, label %414

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %181, i64 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %181, i64 0, i32 6, i64 %417
  %419 = and i32 %411, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %414
  %422 = bitcast %"struct.blink::NGLink"* %418 to %"struct.blink::PhysicalRect"*
  br label %433

423:                                              ; preds = %414
  %424 = bitcast %"struct.blink::NGLink"* %418 to i8*
  %425 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %418, i64 1
  %426 = bitcast %"struct.blink::NGLink"* %425 to i32*
  %427 = load i32, i32* %426, align 8
  %428 = shl i32 %427, 6
  %429 = or i32 %428, 24
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %424, i64 %430
  %432 = bitcast i8* %431 to %"struct.blink::PhysicalRect"*
  br label %433

433:                                              ; preds = %421, %423
  %434 = phi %"struct.blink::PhysicalRect"* [ %432, %423 ], [ %422, %421 ]
  %435 = and i32 %411, 64
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %434, i64 1
  %438 = select i1 %436, %"struct.blink::PhysicalRect"* %434, %"struct.blink::PhysicalRect"* %437
  %439 = and i32 %411, 1024
  %440 = icmp eq i32 %439, 0
  %441 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %438, i64 1
  %442 = select i1 %440, %"struct.blink::PhysicalRect"* %438, %"struct.blink::PhysicalRect"* %441
  %443 = and i32 %411, 2048
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %442, i64 1
  %446 = select i1 %444, %"struct.blink::PhysicalRect"* %442, %"struct.blink::PhysicalRect"* %445
  %447 = and i32 %411, 4096
  %448 = icmp eq i32 %447, 0
  %449 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %446, i64 1
  %450 = select i1 %448, %"struct.blink::PhysicalRect"* %446, %"struct.blink::PhysicalRect"* %449
  %451 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %450, i64 1, i32 1, i32 1, i32 0
  %452 = load i32, i32* %451, align 4
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %786, label %454

454:                                              ; preds = %433
  %455 = bitcast %"class.WTF::HashMap.2023"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %455) #8
  br i1 %420, label %456, label %458

456:                                              ; preds = %454
  %457 = bitcast %"struct.blink::NGLink"* %418 to %"struct.blink::PhysicalRect"*
  br label %468

458:                                              ; preds = %454
  %459 = bitcast %"struct.blink::NGLink"* %418 to i8*
  %460 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %418, i64 1
  %461 = bitcast %"struct.blink::NGLink"* %460 to i32*
  %462 = load i32, i32* %461, align 8, !noalias !5
  %463 = shl i32 %462, 6
  %464 = or i32 %463, 24
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds i8, i8* %459, i64 %465
  %467 = bitcast i8* %466 to %"struct.blink::PhysicalRect"*
  br label %468

468:                                              ; preds = %458, %456
  %469 = phi %"struct.blink::PhysicalRect"* [ %467, %458 ], [ %457, %456 ]
  %470 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %469, i64 1
  %471 = select i1 %436, %"struct.blink::PhysicalRect"* %469, %"struct.blink::PhysicalRect"* %470
  %472 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %471, i64 1
  %473 = select i1 %440, %"struct.blink::PhysicalRect"* %471, %"struct.blink::PhysicalRect"* %472
  %474 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %473, i64 1
  %475 = select i1 %444, %"struct.blink::PhysicalRect"* %473, %"struct.blink::PhysicalRect"* %474
  %476 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %475, i64 1
  %477 = select i1 %448, %"struct.blink::PhysicalRect"* %475, %"struct.blink::PhysicalRect"* %476
  %478 = getelementptr inbounds %"class.WTF::HashMap.2023", %"class.WTF::HashMap.2023"* %25, i64 0, i32 0
  %479 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %477, i64 1, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %455, i8 0, i64 20, i1 false) #8
  %480 = load i32, i32* %479, align 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %519, label %482

482:                                              ; preds = %468
  %483 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %477, i64 1
  call void @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2024"* nonnull %478, i32 %480) #8
  %484 = load i32, i32* %479, align 4
  %485 = icmp eq i32 %484, 0
  %486 = bitcast %"struct.blink::PhysicalRect"* %483 to %"struct.WTF::KeyValuePair.2027"**
  %487 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %486, align 8
  %488 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %477, i64 1, i32 1, i32 0, i32 0
  %489 = load i32, i32* %488, align 8
  %490 = zext i32 %489 to i64
  %491 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %487, i64 %490
  br i1 %485, label %519, label %492

492:                                              ; preds = %482
  %493 = icmp eq i32 %489, 0
  br i1 %493, label %501, label %494

494:                                              ; preds = %492, %498
  %495 = phi %"struct.WTF::KeyValuePair.2027"* [ %499, %498 ], [ %487, %492 ]
  %496 = bitcast %"struct.WTF::KeyValuePair.2027"* %495 to i64*
  %497 = load i64, i64* %496, align 8
  switch i64 %497, label %501 [
    i64 -1, label %498
    i64 0, label %498
  ]

498:                                              ; preds = %494, %494
  %499 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %495, i64 1
  %500 = icmp eq %"struct.WTF::KeyValuePair.2027"* %499, %491
  br i1 %500, label %519, label %494

501:                                              ; preds = %494, %492
  %502 = phi %"struct.WTF::KeyValuePair.2027"* [ %487, %492 ], [ %495, %494 ]
  %503 = icmp eq %"struct.WTF::KeyValuePair.2027"* %502, %491
  br i1 %503, label %519, label %504

504:                                              ; preds = %501, %517
  %505 = phi %"struct.WTF::KeyValuePair.2027"* [ %511, %517 ], [ %502, %501 ]
  %506 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %505, i64 0, i32 0
  %507 = call { %"struct.WTF::KeyValuePair.2027"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISB_SG_SH_EERKS3_RKS8_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2024"* nonnull %478, %"class.blink::LayoutBox"** dereferenceable(8) %506, %"struct.WTF::KeyValuePair.2027"* dereferenceable(40) %505) #8
  %508 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %505, i64 1
  %509 = icmp eq %"struct.WTF::KeyValuePair.2027"* %508, %491
  br i1 %509, label %519, label %510

510:                                              ; preds = %504, %514
  %511 = phi %"struct.WTF::KeyValuePair.2027"* [ %515, %514 ], [ %508, %504 ]
  %512 = bitcast %"struct.WTF::KeyValuePair.2027"* %511 to i64*
  %513 = load i64, i64* %512, align 8
  switch i64 %513, label %517 [
    i64 -1, label %514
    i64 0, label %514
  ]

514:                                              ; preds = %510, %510
  %515 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %511, i64 1
  %516 = icmp eq %"struct.WTF::KeyValuePair.2027"* %515, %491
  br i1 %516, label %519, label %510

517:                                              ; preds = %510
  %518 = icmp eq %"struct.WTF::KeyValuePair.2027"* %511, %491
  br i1 %518, label %519, label %504

519:                                              ; preds = %498, %517, %504, %514, %501, %482, %468
  %520 = getelementptr inbounds %"class.WTF::HashMap.2023", %"class.WTF::HashMap.2023"* %25, i64 0, i32 0, i32 2
  %521 = load i32, i32* %520, align 4
  %522 = icmp eq i32 %521, 0
  %523 = getelementptr inbounds %"class.WTF::HashMap.2023", %"class.WTF::HashMap.2023"* %25, i64 0, i32 0, i32 0
  %524 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %523, align 8
  %525 = getelementptr inbounds %"class.WTF::HashMap.2023", %"class.WTF::HashMap.2023"* %25, i64 0, i32 0, i32 1
  %526 = load i32, i32* %525, align 8
  %527 = zext i32 %526 to i64
  %528 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %524, i64 %527
  br i1 %522, label %574, label %529

529:                                              ; preds = %519
  %530 = icmp eq i32 %526, 0
  br i1 %530, label %538, label %531

531:                                              ; preds = %529, %535
  %532 = phi %"struct.WTF::KeyValuePair.2027"* [ %536, %535 ], [ %524, %529 ]
  %533 = bitcast %"struct.WTF::KeyValuePair.2027"* %532 to i64*
  %534 = load i64, i64* %533, align 8
  switch i64 %534, label %538 [
    i64 -1, label %535
    i64 0, label %535
  ]

535:                                              ; preds = %531, %531
  %536 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %532, i64 1
  %537 = icmp eq %"struct.WTF::KeyValuePair.2027"* %536, %528
  br i1 %537, label %574, label %531

538:                                              ; preds = %531, %529
  %539 = phi %"struct.WTF::KeyValuePair.2027"* [ %524, %529 ], [ %532, %531 ]
  %540 = icmp eq %"struct.WTF::KeyValuePair.2027"* %539, %528
  br i1 %540, label %574, label %541

541:                                              ; preds = %538
  %542 = bitcast i64* %26 to i8*
  %543 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %16, i64 0, i32 0, i32 1
  %544 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %545 = bitcast i64* %28 to i8*
  %546 = bitcast i64* %30 to i8*
  %547 = icmp slt i32 %47, 0
  %548 = select i1 %547, i32 -2147483648, i32 2147483647
  %549 = icmp slt i32 %49, 0
  %550 = select i1 %549, i32 -2147483648, i32 2147483647
  %551 = icmp slt i32 %6, 0
  %552 = select i1 %551, i32 -2147483648, i32 2147483647
  %553 = icmp slt i32 %76, 0
  %554 = select i1 %553, i32 -2147483648, i32 2147483647
  %555 = icmp slt i32 %82, 0
  %556 = select i1 %555, i32 -2147483648, i32 2147483647
  %557 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %12 to i8*
  %558 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %12 to i64*
  %559 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %12, i64 0, i32 1
  %560 = bitcast %"struct.blink::NGContainingBlock"* %559 to i64*
  %561 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %12, i64 0, i32 1, i32 1
  %562 = bitcast %"struct.blink::LogicalOffset"* %561 to i64*
  %563 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %12, i64 0, i32 1, i32 2, i32 0
  %564 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12
  %565 = bitcast %"class.blink::LayoutBox"** %10 to i8*
  %566 = bitcast %"class.blink::LayoutBox"** %10 to i64*
  %567 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %564, i64 0, i32 0
  %568 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %564, i64 0, i32 0, i32 0
  %569 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %570 = bitcast %"class.blink::LayoutBox"** %11 to i8*
  %571 = bitcast %"class.blink::LayoutBox"** %11 to i64*
  br label %602

572:                                              ; preds = %770, %780, %777
  %573 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %523, align 8
  br label %574

574:                                              ; preds = %535, %519, %572, %538
  %575 = phi %"struct.WTF::KeyValuePair.2027"* [ %573, %572 ], [ %524, %538 ], [ %524, %519 ], [ %524, %535 ]
  %576 = icmp eq %"struct.WTF::KeyValuePair.2027"* %575, null
  br i1 %576, label %782, label %577, !prof !4

577:                                              ; preds = %574
  %578 = load i32, i32* %525, align 8
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %600, label %580

580:                                              ; preds = %577
  %581 = zext i32 %578 to i64
  br label %582

582:                                              ; preds = %597, %580
  %583 = phi i64 [ 0, %580 ], [ %598, %597 ]
  %584 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %575, i64 %583, i32 0
  %585 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %584, align 8
  %586 = icmp eq %"class.blink::LayoutBox"* %585, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %586, label %597, label %587

587:                                              ; preds = %582
  %588 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %575, i64 %583, i32 1, i32 1, i32 2, i32 0
  %589 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %588, align 8
  %590 = icmp eq %"class.blink::NGPhysicalFragment"* %589, null
  br i1 %590, label %597, label %591

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %589, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %592) #8
  %593 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %589, i64 0, i32 0, i32 0, i32 0, i32 0
  %594 = load i32, i32* %593, align 4
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %591
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %589) #8
  br label %597

597:                                              ; preds = %596, %591, %587, %582
  %598 = add nuw nsw i64 %583, 1
  %599 = icmp eq i64 %598, %581
  br i1 %599, label %600, label %582

600:                                              ; preds = %597, %577
  %601 = bitcast %"struct.WTF::KeyValuePair.2027"* %575 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %601) #8
  store %"struct.WTF::KeyValuePair.2027"* null, %"struct.WTF::KeyValuePair.2027"** %523, align 8
  br label %782

602:                                              ; preds = %541, %780
  %603 = phi %"struct.WTF::KeyValuePair.2027"* [ %539, %541 ], [ %774, %780 ]
  %604 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %542) #8
  store i64 0, i64* %26, align 8
  %605 = load i8, i8* %83, align 4
  %606 = load i8, i8* %543, align 1
  %607 = or i8 %605, %606
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %609, label %614

609:                                              ; preds = %602
  %610 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %604, i64 0, i32 0, i32 0
  %611 = load i32, i32* %610, align 4
  %612 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 0, i32 1, i32 0
  %613 = load i32, i32* %612, align 4
  br label %619

614:                                              ; preds = %602
  %615 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %604, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %27) #8
  %616 = trunc i64 %615 to i32
  %617 = lshr i64 %615, 32
  %618 = trunc i64 %617 to i32
  br label %619

619:                                              ; preds = %609, %614
  %620 = phi i32 [ %613, %609 ], [ %618, %614 ]
  %621 = phi i32 [ %611, %609 ], [ %616, %614 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %542) #8
  %622 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 1, i32 2, i32 0
  %623 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %622, align 8
  %624 = icmp eq %"class.blink::NGPhysicalFragment"* %623, null
  br i1 %624, label %625, label %641

625:                                              ; preds = %619
  %626 = load i32, i32* %177, align 8
  %627 = and i32 %626, 64
  %628 = icmp ne i32 %627, 0
  %629 = and i32 %626, 960
  %630 = icmp eq i32 %629, 256
  %631 = or i1 %630, %628
  %632 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %544, align 8
  %633 = icmp eq %"class.blink::LayoutObject"* %632, null
  %634 = or i1 %631, %633
  br i1 %634, label %713, label %635

635:                                              ; preds = %625
  %636 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %632, i64 0, i32 4
  %637 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %636 to i96*
  %638 = load i96, i96* %637, align 4
  %639 = and i96 %638, 68719476736
  %640 = icmp eq i96 %639, 0
  br i1 %640, label %713, label %641

641:                                              ; preds = %619, %635
  %642 = phi %"class.blink::NGPhysicalFragment"* [ %1, %635 ], [ %623, %619 ]
  %643 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545) #8
  %644 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %642, i64 0, i32 2
  %645 = bitcast %"struct.blink::PhysicalSize"* %644 to i64*
  %646 = load i64, i64* %645, align 8
  store i64 %646, i64* %28, align 8
  %647 = load i8, i8* %83, align 4
  %648 = load i8, i8* %543, align 1
  %649 = or i8 %647, %648
  %650 = icmp eq i8 %649, 0
  br i1 %650, label %651, label %656

651:                                              ; preds = %641
  %652 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %643, i64 0, i32 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0
  %655 = load i32, i32* %654, align 4
  br label %664

656:                                              ; preds = %641
  %657 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %643, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %29) #8
  %658 = trunc i64 %657 to i32
  %659 = lshr i64 %657, 32
  %660 = trunc i64 %659 to i32
  %661 = load i64, i64* %645, align 8
  %662 = load i8, i8* %83, align 4
  %663 = load i8, i8* %543, align 1
  br label %664

664:                                              ; preds = %651, %656
  %665 = phi i8 [ %648, %651 ], [ %663, %656 ]
  %666 = phi i8 [ %647, %651 ], [ %662, %656 ]
  %667 = phi i64 [ %646, %651 ], [ %661, %656 ]
  %668 = phi i32 [ %655, %651 ], [ %660, %656 ]
  %669 = phi i32 [ %653, %651 ], [ %658, %656 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #8
  %670 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 1, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %546) #8
  store i64 %667, i64* %30, align 8
  %671 = or i8 %666, %665
  %672 = icmp eq i8 %671, 0
  br i1 %672, label %673, label %678

673:                                              ; preds = %664
  %674 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %670, i64 0, i32 0, i32 0
  %675 = load i32, i32* %674, align 4
  %676 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 0, i32 1, i32 1, i32 1, i32 1, i32 0
  %677 = load i32, i32* %676, align 4
  br label %683

678:                                              ; preds = %664
  %679 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %670, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %31) #8
  %680 = trunc i64 %679 to i32
  %681 = lshr i64 %679, 32
  %682 = trunc i64 %681 to i32
  br label %683

683:                                              ; preds = %673, %678
  %684 = phi i32 [ %677, %673 ], [ %682, %678 ]
  %685 = phi i32 [ %675, %673 ], [ %680, %678 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %546) #8
  %686 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %685, i32 %50) #8
  %687 = extractvalue { i32, i1 } %686, 1
  %688 = extractvalue { i32, i1 } %686, 0
  %689 = select i1 %687, i32 %60, i32 %688, !prof !3
  %690 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %684, i32 %52) #8
  %691 = extractvalue { i32, i1 } %690, 1
  %692 = extractvalue { i32, i1 } %690, 0
  %693 = select i1 %691, i32 %66, i32 %692, !prof !3
  %694 = load i32, i32* %177, align 8
  %695 = and i32 %694, 960
  %696 = icmp eq i32 %695, 256
  br i1 %696, label %706, label %697

697:                                              ; preds = %683
  %698 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %669, i32 %47) #8
  %699 = extractvalue { i32, i1 } %698, 1
  %700 = extractvalue { i32, i1 } %698, 0
  %701 = select i1 %699, i32 %548, i32 %700, !prof !3
  %702 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %668, i32 %49) #8
  %703 = extractvalue { i32, i1 } %702, 1
  %704 = extractvalue { i32, i1 } %702, 0
  %705 = select i1 %703, i32 %550, i32 %704, !prof !3
  br label %706

706:                                              ; preds = %697, %683
  %707 = phi i32 [ %669, %683 ], [ %701, %697 ]
  %708 = phi i32 [ %668, %683 ], [ %705, %697 ]
  %709 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %708, i32 %6) #8
  %710 = extractvalue { i32, i1 } %709, 1
  %711 = extractvalue { i32, i1 } %709, 0
  %712 = select i1 %710, i32 %552, i32 %711, !prof !3
  br label %722

713:                                              ; preds = %625, %635
  %714 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %621, i32 %76) #8
  %715 = extractvalue { i32, i1 } %714, 1
  %716 = extractvalue { i32, i1 } %714, 0
  %717 = select i1 %715, i32 %554, i32 %716, !prof !3
  %718 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %620, i32 %82) #8
  %719 = extractvalue { i32, i1 } %718, 1
  %720 = extractvalue { i32, i1 } %718, 0
  %721 = select i1 %719, i32 %556, i32 %720, !prof !3
  br label %722

722:                                              ; preds = %713, %706
  %723 = phi i1 [ true, %713 ], [ false, %706 ]
  %724 = phi %"class.blink::NGPhysicalFragment"* [ null, %713 ], [ %642, %706 ]
  %725 = phi i32 [ 0, %713 ], [ %689, %706 ]
  %726 = phi i32 [ 0, %713 ], [ %693, %706 ]
  %727 = phi i32 [ 0, %713 ], [ %707, %706 ]
  %728 = phi i32 [ 0, %713 ], [ %712, %706 ]
  %729 = phi i32 [ %717, %713 ], [ %621, %706 ]
  %730 = phi i32 [ %721, %713 ], [ %620, %706 ]
  %731 = bitcast %"struct.WTF::KeyValuePair.2027"* %603 to i64*
  %732 = load i64, i64* %731, align 8
  %733 = zext i32 %730 to i64
  %734 = shl nuw i64 %733, 32
  %735 = zext i32 %729 to i64
  %736 = or i64 %734, %735
  %737 = zext i32 %728 to i64
  %738 = shl nuw i64 %737, 32
  %739 = zext i32 %727 to i64
  %740 = or i64 %738, %739
  %741 = zext i32 %726 to i64
  %742 = shl nuw i64 %741, 32
  %743 = zext i32 %725 to i64
  %744 = or i64 %742, %743
  br i1 %723, label %751, label %745

745:                                              ; preds = %722
  %746 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %724, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %746) #8
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %746) #8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %746) #8
  %747 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %724, i64 0, i32 0, i32 0, i32 0, i32 0
  %748 = load i32, i32* %747, align 4
  %749 = icmp eq i32 %748, 0
  br i1 %749, label %750, label %751

750:                                              ; preds = %745
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %724) #8
  br label %751

751:                                              ; preds = %722, %745, %750
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %557)
  store i64 %736, i64* %558, align 8
  store i64 %740, i64* %560, align 8
  store i64 %744, i64* %562, align 8
  store %"class.blink::NGPhysicalFragment"* %724, %"class.blink::NGPhysicalFragment"** %563, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %565) #8
  store i64 %732, i64* %566, align 8
  %752 = call { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.1876"* %567, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %10) #8
  %753 = extractvalue { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } %752, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %565) #8
  %754 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %568, align 8
  %755 = load i32, i32* %569, align 8
  %756 = zext i32 %755 to i64
  %757 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %754, i64 %756
  %758 = icmp eq %"struct.WTF::KeyValuePair.1879"* %753, %757
  br i1 %758, label %759, label %761

759:                                              ; preds = %751
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570) #8
  store i64 %732, i64* %571, align 8
  %760 = call { %"struct.WTF::KeyValuePair.1879"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1876"* %567, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %11, %"struct.blink::NGMulticolWithPendingOOFs"* nonnull dereferenceable(32) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #8
  br label %761

761:                                              ; preds = %759, %751
  %762 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %563, align 8
  %763 = icmp eq %"class.blink::NGPhysicalFragment"* %762, null
  br i1 %763, label %770, label %764

764:                                              ; preds = %761
  %765 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %762, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %765) #8
  %766 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %762, i64 0, i32 0, i32 0, i32 0, i32 0
  %767 = load i32, i32* %766, align 4
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %770

769:                                              ; preds = %764
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %762) #8
  br label %770

770:                                              ; preds = %761, %764, %769
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %557)
  %771 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %603, i64 1
  %772 = icmp eq %"struct.WTF::KeyValuePair.2027"* %771, %528
  br i1 %772, label %572, label %773

773:                                              ; preds = %770, %777
  %774 = phi %"struct.WTF::KeyValuePair.2027"* [ %778, %777 ], [ %771, %770 ]
  %775 = bitcast %"struct.WTF::KeyValuePair.2027"* %774 to i64*
  %776 = load i64, i64* %775, align 8
  switch i64 %776, label %780 [
    i64 -1, label %777
    i64 0, label %777
  ]

777:                                              ; preds = %773, %773
  %778 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %774, i64 1
  %779 = icmp eq %"struct.WTF::KeyValuePair.2027"* %778, %528
  br i1 %779, label %572, label %773

780:                                              ; preds = %773
  %781 = icmp eq %"struct.WTF::KeyValuePair.2027"* %774, %528
  br i1 %781, label %572, label %602

782:                                              ; preds = %600, %574
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %455) #8
  %783 = load i32, i32* %410, align 8
  %784 = and i32 %783, 8192
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %1224, label %786

786:                                              ; preds = %433, %782
  %787 = phi i32 [ %783, %782 ], [ %411, %433 ]
  %788 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %181, i64 0, i32 2
  %789 = load i32, i32* %788, align 4
  %790 = zext i32 %789 to i64
  %791 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %181, i64 0, i32 6, i64 %790
  %792 = and i32 %787, 2
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %794, label %796

794:                                              ; preds = %786
  %795 = bitcast %"struct.blink::NGLink"* %791 to %"struct.blink::PhysicalRect"*
  br label %806

796:                                              ; preds = %786
  %797 = bitcast %"struct.blink::NGLink"* %791 to i8*
  %798 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %791, i64 1
  %799 = bitcast %"struct.blink::NGLink"* %798 to i32*
  %800 = load i32, i32* %799, align 8
  %801 = shl i32 %800, 6
  %802 = or i32 %801, 24
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds i8, i8* %797, i64 %803
  %805 = bitcast i8* %804 to %"struct.blink::PhysicalRect"*
  br label %806

806:                                              ; preds = %794, %796
  %807 = phi %"struct.blink::PhysicalRect"* [ %805, %796 ], [ %795, %794 ]
  %808 = and i32 %787, 64
  %809 = icmp eq i32 %808, 0
  %810 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %807, i64 1
  %811 = select i1 %809, %"struct.blink::PhysicalRect"* %807, %"struct.blink::PhysicalRect"* %810
  %812 = and i32 %787, 1024
  %813 = icmp eq i32 %812, 0
  %814 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %811, i64 1
  %815 = select i1 %813, %"struct.blink::PhysicalRect"* %811, %"struct.blink::PhysicalRect"* %814
  %816 = and i32 %787, 2048
  %817 = icmp eq i32 %816, 0
  %818 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %815, i64 1
  %819 = select i1 %817, %"struct.blink::PhysicalRect"* %815, %"struct.blink::PhysicalRect"* %818
  %820 = and i32 %787, 4096
  %821 = icmp eq i32 %820, 0
  %822 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %819, i64 1
  %823 = select i1 %821, %"struct.blink::PhysicalRect"* %819, %"struct.blink::PhysicalRect"* %822
  %824 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %823, i64 0, i32 1, i32 1, i32 0
  %825 = load i32, i32* %824, align 4
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %1224, label %827

827:                                              ; preds = %806
  br i1 %793, label %828, label %830

828:                                              ; preds = %827
  %829 = bitcast %"struct.blink::NGLink"* %791 to %"struct.blink::PhysicalRect"*
  br label %840

830:                                              ; preds = %827
  %831 = bitcast %"struct.blink::NGLink"* %791 to i8*
  %832 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %791, i64 1
  %833 = bitcast %"struct.blink::NGLink"* %832 to i32*
  %834 = load i32, i32* %833, align 8
  %835 = shl i32 %834, 6
  %836 = or i32 %835, 24
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds i8, i8* %831, i64 %837
  %839 = bitcast i8* %838 to %"struct.blink::PhysicalRect"*
  br label %840

840:                                              ; preds = %828, %830
  %841 = phi %"struct.blink::PhysicalRect"* [ %839, %830 ], [ %829, %828 ]
  %842 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %841, i64 1
  %843 = select i1 %809, %"struct.blink::PhysicalRect"* %841, %"struct.blink::PhysicalRect"* %842
  %844 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %843, i64 1
  %845 = select i1 %813, %"struct.blink::PhysicalRect"* %843, %"struct.blink::PhysicalRect"* %844
  %846 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %845, i64 1
  %847 = select i1 %817, %"struct.blink::PhysicalRect"* %845, %"struct.blink::PhysicalRect"* %846
  %848 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %847, i64 1
  %849 = select i1 %821, %"struct.blink::PhysicalRect"* %847, %"struct.blink::PhysicalRect"* %848
  %850 = bitcast %"struct.blink::PhysicalRect"* %849 to %"struct.blink::NGPhysicalOOFNodeForFragmentation"**
  %851 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %850, align 8
  %852 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %849, i64 0, i32 1, i32 1, i32 0
  %853 = load i32, i32* %852, align 4
  %854 = zext i32 %853 to i64
  %855 = bitcast %"class.base::CheckedContiguousIterator.2032"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %855) #8
  %856 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %32, i64 0, i32 1
  %857 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %851, i64 %854
  %858 = bitcast %"class.base::CheckedContiguousIterator.2032"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %858, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2032"* nonnull %32, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %851, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %851, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %857) #8
  %859 = bitcast %"class.base::CheckedContiguousIterator.2032"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %859) #8
  %860 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %33, i64 0, i32 1
  %861 = bitcast %"class.base::CheckedContiguousIterator.2032"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %861, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2032"* nonnull %33, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %851, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %857, %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %857) #8
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2032"* nonnull %32, %"class.base::CheckedContiguousIterator.2032"* nonnull dereferenceable(24) %33) #8
  %862 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %856, align 8
  %863 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %860, align 8
  %864 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %862, %863
  br i1 %864, label %921, label %865

865:                                              ; preds = %840
  %866 = bitcast i64* %34 to i8*
  %867 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %16, i64 0, i32 0, i32 1
  %868 = bitcast i64* %36 to i8*
  %869 = icmp slt i32 %47, 0
  %870 = select i1 %869, i32 -2147483648, i32 2147483647
  %871 = icmp slt i32 %49, 0
  %872 = select i1 %871, i32 -2147483648, i32 2147483647
  %873 = icmp slt i32 %6, 0
  %874 = select i1 %873, i32 -2147483648, i32 2147483647
  %875 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %876 = bitcast i64* %38 to i8*
  %877 = bitcast i64* %40 to i8*
  %878 = icmp eq %"struct.blink::NGContainingBlock"* %7, null
  %879 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %7, i64 0, i32 2, i32 0
  %880 = bitcast %"struct.blink::NGContainingBlock"* %7 to i64*
  %881 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %7, i64 0, i32 1
  %882 = bitcast %"struct.blink::LogicalOffset"* %881 to i64*
  %883 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %42, i64 0, i32 0, i32 0
  %884 = bitcast %"class.blink::WritingModeConverter"* %42 to i16*
  %885 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %42, i64 0, i32 1
  %886 = bitcast %"struct.blink::PhysicalSize"* %885 to i64*
  %887 = bitcast { i64, i64 }* %43 to i8*
  %888 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i64 0, i32 0
  %889 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i64 0, i32 1
  %890 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45 to i8*
  %891 = getelementptr inbounds [19 x i8], [19 x i8]* %15, i64 0, i64 0
  %892 = getelementptr inbounds [19 x i8], [19 x i8]* %46, i64 0, i64 0
  %893 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45 to i64*
  %894 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 1
  %895 = bitcast %"struct.blink::NGLogicalStaticPosition"* %894 to i64*
  %896 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 1, i32 1
  %897 = bitcast i32* %896 to i64*
  %898 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 2
  %899 = bitcast %"class.blink::LayoutInline"** %898 to i64*
  %900 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 3
  %901 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 5, i32 0
  %902 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 6
  %903 = bitcast %"struct.blink::NGContainingBlock"* %902 to i64*
  %904 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 6, i32 1
  %905 = bitcast %"struct.blink::LogicalOffset"* %904 to i64*
  %906 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 6, i32 2, i32 0
  %907 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 7
  %908 = bitcast %"struct.blink::NGContainingBlock"* %907 to i64*
  %909 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 7, i32 1
  %910 = bitcast %"struct.blink::LogicalOffset"* %909 to i64*
  %911 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 7, i32 2, i32 0
  %912 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %45, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %913 = getelementptr inbounds i8, i8* %890, i64 89
  %914 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  %915 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %916 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %917 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %914, i64 0, i32 0, i32 0, i32 0
  %918 = bitcast %"struct.blink::NGContainingBlock"* %902 to i8*
  %919 = bitcast %"struct.blink::NGContainingBlock"* %907 to i8*
  %920 = bitcast %"class.blink::WritingModeConverter"* %42 to i32*
  br label %922

921:                                              ; preds = %1219, %840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %859) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %855) #8
  br label %1224

922:                                              ; preds = %865, %1219
  %923 = call dereferenceable(80) %"struct.blink::NGPhysicalOOFNodeForFragmentation"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv(%"class.base::CheckedContiguousIterator.2032"* nonnull %32)
  %924 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 1, i32 2, i32 0
  %925 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %924, align 8
  %926 = icmp eq %"class.blink::NGPhysicalFragment"* %925, null
  br i1 %926, label %931, label %927

927:                                              ; preds = %922
  %928 = load i32, i32* %410, align 8
  %929 = and i32 %928, 65536
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %1219

931:                                              ; preds = %927, %922
  %932 = phi %"class.blink::NGPhysicalFragment"* [ %1, %922 ], [ %925, %927 ]
  %933 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 1, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %866) #8
  %934 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %932, i64 0, i32 2
  %935 = bitcast %"struct.blink::PhysicalSize"* %934 to i64*
  %936 = load i64, i64* %935, align 8
  store i64 %936, i64* %34, align 8
  %937 = load i8, i8* %83, align 4
  %938 = load i8, i8* %867, align 1
  %939 = or i8 %937, %938
  %940 = icmp eq i8 %939, 0
  br i1 %940, label %941, label %946

941:                                              ; preds = %931
  %942 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %933, i64 0, i32 0, i32 0
  %943 = load i32, i32* %942, align 4
  %944 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 1, i32 0, i32 1, i32 0
  %945 = load i32, i32* %944, align 4
  br label %954

946:                                              ; preds = %931
  %947 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %933, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %35) #8
  %948 = trunc i64 %947 to i32
  %949 = lshr i64 %947, 32
  %950 = trunc i64 %949 to i32
  %951 = load i64, i64* %935, align 8
  %952 = load i8, i8* %83, align 4
  %953 = load i8, i8* %867, align 1
  br label %954

954:                                              ; preds = %941, %946
  %955 = phi i8 [ %938, %941 ], [ %953, %946 ]
  %956 = phi i8 [ %937, %941 ], [ %952, %946 ]
  %957 = phi i64 [ %936, %941 ], [ %951, %946 ]
  %958 = phi i32 [ %945, %941 ], [ %950, %946 ]
  %959 = phi i32 [ %943, %941 ], [ %948, %946 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %866) #8
  %960 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 1, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %868) #8
  store i64 %957, i64* %36, align 8
  %961 = or i8 %956, %955
  %962 = icmp eq i8 %961, 0
  br i1 %962, label %963, label %968

963:                                              ; preds = %954
  %964 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %960, i64 0, i32 0, i32 0
  %965 = load i32, i32* %964, align 4
  %966 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 1, i32 1, i32 1, i32 0
  %967 = load i32, i32* %966, align 4
  br label %973

968:                                              ; preds = %954
  %969 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %960, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %37) #8
  %970 = trunc i64 %969 to i32
  %971 = lshr i64 %969, 32
  %972 = trunc i64 %971 to i32
  br label %973

973:                                              ; preds = %963, %968
  %974 = phi i32 [ %967, %963 ], [ %972, %968 ]
  %975 = phi i32 [ %965, %963 ], [ %970, %968 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %868) #8
  %976 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %975, i32 %50) #8
  %977 = extractvalue { i32, i1 } %976, 1
  %978 = extractvalue { i32, i1 } %976, 0
  %979 = select i1 %977, i32 %60, i32 %978, !prof !3
  %980 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %974, i32 %52) #8
  %981 = extractvalue { i32, i1 } %980, 1
  %982 = extractvalue { i32, i1 } %980, 0
  %983 = select i1 %981, i32 %66, i32 %982, !prof !3
  %984 = zext i32 %983 to i64
  %985 = shl nuw i64 %984, 32
  %986 = load i32, i32* %177, align 8
  %987 = and i32 %986, 960
  %988 = icmp eq i32 %987, 256
  br i1 %988, label %998, label %989

989:                                              ; preds = %973
  %990 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %959, i32 %47) #8
  %991 = extractvalue { i32, i1 } %990, 1
  %992 = extractvalue { i32, i1 } %990, 0
  %993 = select i1 %991, i32 %870, i32 %992, !prof !3
  %994 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %958, i32 %49) #8
  %995 = extractvalue { i32, i1 } %994, 1
  %996 = extractvalue { i32, i1 } %994, 0
  %997 = select i1 %995, i32 %872, i32 %996, !prof !3
  br label %998

998:                                              ; preds = %989, %973
  %999 = phi i32 [ %958, %973 ], [ %997, %989 ]
  %1000 = phi i32 [ %959, %973 ], [ %993, %989 ]
  %1001 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %999, i32 %6) #8
  %1002 = extractvalue { i32, i1 } %1001, 1
  %1003 = extractvalue { i32, i1 } %1001, 0
  %1004 = select i1 %1002, i32 %874, i32 %1003, !prof !3
  %1005 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 2, i32 2, i32 0
  %1006 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %1005, align 8
  %1007 = icmp eq %"class.blink::NGPhysicalFragment"* %1006, null
  br i1 %1007, label %1008, label %1021

1008:                                             ; preds = %998
  %1009 = and i32 %986, 64
  %1010 = icmp ne i32 %1009, 0
  %1011 = or i1 %988, %1010
  %1012 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %875, align 8
  %1013 = icmp eq %"class.blink::LayoutObject"* %1012, null
  %1014 = or i1 %1011, %1013
  br i1 %1014, label %1093, label %1015

1015:                                             ; preds = %1008
  %1016 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1012, i64 0, i32 4
  %1017 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1016 to i96*
  %1018 = load i96, i96* %1017, align 4
  %1019 = and i96 %1018, 68719476736
  %1020 = icmp eq i96 %1019, 0
  br i1 %1020, label %1093, label %1021

1021:                                             ; preds = %998, %1015
  %1022 = phi %"class.blink::NGPhysicalFragment"* [ %1, %1015 ], [ %1006, %998 ]
  %1023 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %876) #8
  %1024 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1022, i64 0, i32 2
  %1025 = bitcast %"struct.blink::PhysicalSize"* %1024 to i64*
  %1026 = load i64, i64* %1025, align 8
  store i64 %1026, i64* %38, align 8
  %1027 = load i8, i8* %83, align 4
  %1028 = load i8, i8* %867, align 1
  %1029 = or i8 %1027, %1028
  %1030 = icmp eq i8 %1029, 0
  br i1 %1030, label %1031, label %1036

1031:                                             ; preds = %1021
  %1032 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1023, i64 0, i32 0, i32 0
  %1033 = load i32, i32* %1032, align 4
  %1034 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 2, i32 0, i32 1, i32 0
  %1035 = load i32, i32* %1034, align 4
  br label %1044

1036:                                             ; preds = %1021
  %1037 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1023, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %39) #8
  %1038 = trunc i64 %1037 to i32
  %1039 = lshr i64 %1037, 32
  %1040 = trunc i64 %1039 to i32
  %1041 = load i64, i64* %1025, align 8
  %1042 = load i8, i8* %83, align 4
  %1043 = load i8, i8* %867, align 1
  br label %1044

1044:                                             ; preds = %1031, %1036
  %1045 = phi i8 [ %1028, %1031 ], [ %1043, %1036 ]
  %1046 = phi i8 [ %1027, %1031 ], [ %1042, %1036 ]
  %1047 = phi i64 [ %1026, %1031 ], [ %1041, %1036 ]
  %1048 = phi i32 [ %1035, %1031 ], [ %1040, %1036 ]
  %1049 = phi i32 [ %1033, %1031 ], [ %1038, %1036 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %876) #8
  %1050 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 2, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %877) #8
  store i64 %1047, i64* %40, align 8
  %1051 = or i8 %1046, %1045
  %1052 = icmp eq i8 %1051, 0
  br i1 %1052, label %1053, label %1058

1053:                                             ; preds = %1044
  %1054 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1050, i64 0, i32 0, i32 0
  %1055 = load i32, i32* %1054, align 4
  %1056 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 2, i32 1, i32 1, i32 0
  %1057 = load i32, i32* %1056, align 4
  br label %1063

1058:                                             ; preds = %1044
  %1059 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* nonnull %16, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1050, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %41) #8
  %1060 = trunc i64 %1059 to i32
  %1061 = lshr i64 %1059, 32
  %1062 = trunc i64 %1061 to i32
  br label %1063

1063:                                             ; preds = %1053, %1058
  %1064 = phi i32 [ %1057, %1053 ], [ %1062, %1058 ]
  %1065 = phi i32 [ %1055, %1053 ], [ %1060, %1058 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %877) #8
  %1066 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1065, i32 %50) #8
  %1067 = extractvalue { i32, i1 } %1066, 1
  %1068 = extractvalue { i32, i1 } %1066, 0
  %1069 = select i1 %1067, i32 %60, i32 %1068, !prof !3
  %1070 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1064, i32 %52) #8
  %1071 = extractvalue { i32, i1 } %1070, 1
  %1072 = extractvalue { i32, i1 } %1070, 0
  %1073 = select i1 %1071, i32 %66, i32 %1072, !prof !3
  %1074 = load i32, i32* %177, align 8
  %1075 = and i32 %1074, 960
  %1076 = icmp eq i32 %1075, 256
  br i1 %1076, label %1086, label %1077

1077:                                             ; preds = %1063
  %1078 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1049, i32 %47) #8
  %1079 = extractvalue { i32, i1 } %1078, 1
  %1080 = extractvalue { i32, i1 } %1078, 0
  %1081 = select i1 %1079, i32 %870, i32 %1080, !prof !3
  %1082 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1048, i32 %49) #8
  %1083 = extractvalue { i32, i1 } %1082, 1
  %1084 = extractvalue { i32, i1 } %1082, 0
  %1085 = select i1 %1083, i32 %872, i32 %1084, !prof !3
  br label %1086

1086:                                             ; preds = %1063, %1077
  %1087 = phi i32 [ %1048, %1063 ], [ %1085, %1077 ]
  %1088 = phi i32 [ %1049, %1063 ], [ %1081, %1077 ]
  %1089 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1087, i32 %6) #8
  %1090 = extractvalue { i32, i1 } %1089, 1
  %1091 = extractvalue { i32, i1 } %1089, 0
  %1092 = select i1 %1090, i32 %874, i32 %1091, !prof !3
  br label %1104

1093:                                             ; preds = %1008, %1015
  br i1 %878, label %1104, label %1094

1094:                                             ; preds = %1093
  %1095 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %879, align 8
  %1096 = load i64, i64* %880, align 4
  %1097 = trunc i64 %1096 to i32
  %1098 = lshr i64 %1096, 32
  %1099 = trunc i64 %1098 to i32
  %1100 = load i64, i64* %882, align 4
  %1101 = trunc i64 %1100 to i32
  %1102 = lshr i64 %1100, 32
  %1103 = trunc i64 %1102 to i32
  br label %1104

1104:                                             ; preds = %1093, %1086, %1094
  %1105 = phi i32 [ %1099, %1094 ], [ 0, %1093 ], [ %1092, %1086 ]
  %1106 = phi i32 [ %1097, %1094 ], [ 0, %1093 ], [ %1088, %1086 ]
  %1107 = phi i32 [ %1103, %1094 ], [ 0, %1093 ], [ %1073, %1086 ]
  %1108 = phi i32 [ %1101, %1094 ], [ 0, %1093 ], [ %1069, %1086 ]
  %1109 = phi %"class.blink::NGPhysicalFragment"* [ %1095, %1094 ], [ null, %1093 ], [ %1022, %1086 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %883) #8
  store i32 -1431655766, i32* %920, align 4
  %1110 = load i16, i16* %86, align 8
  %1111 = load i64, i64* %935, align 8
  store i16 %1110, i16* %884, align 4
  store i64 %1111, i64* %886, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %887) #8
  %1112 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 0, i32 1
  %1113 = bitcast %"struct.blink::PhysicalOffset"* %1112 to i64*
  %1114 = load i64, i64* %1113, align 8
  %1115 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 0, i32 2
  %1116 = load i8, i8* %1115, align 8
  %1117 = and i8 %1116, 3
  %1118 = lshr i8 %1116, 2
  %1119 = and i8 %1118, 3
  %1120 = zext i8 %1119 to i64
  %1121 = shl nuw nsw i64 %1120, 32
  %1122 = zext i8 %1117 to i64
  %1123 = or i64 %1121, %1122
  store i64 %1114, i64* %888, align 8
  store i64 %1123, i64* %889, align 8
  %1124 = call { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"* nonnull %44, %"class.blink::WritingModeConverter"* nonnull dereferenceable(12) %42)
  %1125 = extractvalue { i64, i64 } %1124, 0
  %1126 = extractvalue { i64, i64 } %1124, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %887) #8
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %890) #8
  %1127 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923 to i64*
  %1128 = load i64, i64* %1127, align 8
  %1129 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %923, i64 0, i32 0, i32 3
  %1130 = bitcast %"class.blink::LayoutInline"** %1129 to i64*
  %1131 = load i64, i64* %1130, align 8
  %1132 = zext i32 %1004 to i64
  %1133 = shl nuw i64 %1132, 32
  %1134 = zext i32 %1000 to i64
  %1135 = or i64 %1133, %1134
  %1136 = zext i32 %979 to i64
  %1137 = or i64 %985, %1136
  %1138 = icmp eq %"class.blink::NGPhysicalFragment"* %932, null
  br i1 %1138, label %1141, label %1139

1139:                                             ; preds = %1104
  %1140 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %932, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1140) #8
  br label %1141

1141:                                             ; preds = %1104, %1139
  %1142 = zext i32 %1105 to i64
  %1143 = shl nuw i64 %1142, 32
  %1144 = zext i32 %1106 to i64
  %1145 = or i64 %1143, %1144
  %1146 = zext i32 %1107 to i64
  %1147 = shl nuw i64 %1146, 32
  %1148 = zext i32 %1108 to i64
  %1149 = or i64 %1147, %1148
  %1150 = icmp eq %"class.blink::NGPhysicalFragment"* %1109, null
  br i1 %1150, label %1153, label %1151

1151:                                             ; preds = %1141
  %1152 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1109, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1152) #8
  br label %1153

1153:                                             ; preds = %1141, %1151
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %891)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %891, i8* nonnull align 1 %892, i64 19, i1 false)
  store i64 %1128, i64* %893, align 8
  store i64 %1125, i64* %895, align 8
  store i64 %1126, i64* %897, align 8
  store i64 %1131, i64* %899, align 8
  store i8 0, i8* %900, align 8
  store i32 0, i32* %901, align 4
  store i64 %1135, i64* %903, align 8
  store i64 %1137, i64* %905, align 8
  store %"class.blink::NGPhysicalFragment"* %932, %"class.blink::NGPhysicalFragment"** %906, align 8
  br i1 %1138, label %1156, label %1154

1154:                                             ; preds = %1153
  %1155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %932, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1155) #8
  br label %1156

1156:                                             ; preds = %1154, %1153
  store i64 %1145, i64* %908, align 8
  store i64 %1149, i64* %910, align 8
  store %"class.blink::NGPhysicalFragment"* %1109, %"class.blink::NGPhysicalFragment"** %911, align 8
  br i1 %1150, label %1157, label %1158

1157:                                             ; preds = %1156
  store i8 0, i8* %912, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %913, i8* nonnull align 1 %891, i64 19, i1 false)
  br label %1164

1158:                                             ; preds = %1156
  %1159 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1109, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1159) #8
  store i8 0, i8* %912, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %913, i8* nonnull align 1 %891, i64 19, i1 false)
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1159) #8
  %1160 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1109, i64 0, i32 0, i32 0, i32 0, i32 0
  %1161 = load i32, i32* %1160, align 4
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1163, label %1164

1163:                                             ; preds = %1158
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %1109) #8
  br label %1164

1164:                                             ; preds = %1163, %1158, %1157
  br i1 %1138, label %1171, label %1165

1165:                                             ; preds = %1164
  %1166 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %932, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1166) #8
  %1167 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %932, i64 0, i32 0, i32 0, i32 0, i32 0
  %1168 = load i32, i32* %1167, align 4
  %1169 = icmp eq i32 %1168, 0
  br i1 %1169, label %1170, label %1171

1170:                                             ; preds = %1165
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %932) #8
  br label %1171

1171:                                             ; preds = %1164, %1165, %1170
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %891)
  %1172 = load i32, i32* %915, align 4
  %1173 = load i32, i32* %916, align 8
  %1174 = icmp eq i32 %1172, %1173
  br i1 %1174, label %1199, label %1175, !prof !3

1175:                                             ; preds = %1171
  %1176 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %917, align 8
  %1177 = zext i32 %1172 to i64
  %1178 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177
  %1179 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1179, i8* nonnull align 8 %890, i64 40, i1 false) #8
  %1180 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177, i32 6
  %1181 = bitcast %"struct.blink::NGContainingBlock"* %1180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1181, i8* align 8 %918, i64 16, i1 false) #8
  %1182 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %906, align 8
  %1183 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %1182, %"class.blink::NGPhysicalFragment"** %1183, align 8
  %1184 = icmp eq %"class.blink::NGPhysicalFragment"* %1182, null
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1175
  %1186 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1182, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1186) #8
  br label %1187

1187:                                             ; preds = %1185, %1175
  %1188 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177, i32 7
  %1189 = bitcast %"struct.blink::NGContainingBlock"* %1188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1189, i8* align 8 %919, i64 16, i1 false) #8
  %1190 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %911, align 8
  %1191 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %1190, %"class.blink::NGPhysicalFragment"** %1191, align 8
  %1192 = icmp eq %"class.blink::NGPhysicalFragment"* %1190, null
  br i1 %1192, label %1195, label %1193

1193:                                             ; preds = %1187
  %1194 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1190, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1194) #8
  br label %1195

1195:                                             ; preds = %1193, %1187
  %1196 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1176, i64 %1177, i32 8, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1196, i8* align 8 %912, i64 20, i1 false) #8
  %1197 = load i32, i32* %915, align 4
  %1198 = add i32 %1197, 1
  store i32 %1198, i32* %915, align 4
  br label %1200

1199:                                             ; preds = %1171
  call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"* %914, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nonnull dereferenceable(112) %45) #8
  br label %1200

1200:                                             ; preds = %1195, %1199
  %1201 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %911, align 8
  %1202 = icmp eq %"class.blink::NGPhysicalFragment"* %1201, null
  br i1 %1202, label %1209, label %1203

1203:                                             ; preds = %1200
  %1204 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1201, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1204) #8
  %1205 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1201, i64 0, i32 0, i32 0, i32 0, i32 0
  %1206 = load i32, i32* %1205, align 4
  %1207 = icmp eq i32 %1206, 0
  br i1 %1207, label %1208, label %1209

1208:                                             ; preds = %1203
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %1201) #8
  br label %1209

1209:                                             ; preds = %1208, %1203, %1200
  %1210 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %906, align 8
  %1211 = icmp eq %"class.blink::NGPhysicalFragment"* %1210, null
  br i1 %1211, label %1218, label %1212

1212:                                             ; preds = %1209
  %1213 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1210, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1213) #8
  %1214 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1210, i64 0, i32 0, i32 0, i32 0, i32 0
  %1215 = load i32, i32* %1214, align 4
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1217, label %1218

1217:                                             ; preds = %1212
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %1210) #8
  br label %1218

1218:                                             ; preds = %1209, %1212, %1217
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %890) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %883) #8
  br label %1219

1219:                                             ; preds = %927, %1218
  %1220 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2032"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv(%"class.base::CheckedContiguousIterator.2032"* nonnull %32)
  call void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2032"* nonnull %32, %"class.base::CheckedContiguousIterator.2032"* nonnull dereferenceable(24) %33) #8
  %1221 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %856, align 8
  %1222 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %860, align 8
  %1223 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1221, %1222
  br i1 %1223, label %921, label %922

1224:                                             ; preds = %409, %806, %175, %782, %173, %921
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %83) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder16AddChildInternalE13scoped_refptrIKNS_18NGPhysicalFragmentEERKNS_13LogicalOffsetE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGPhysicalFragment"*, %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", align 8
  %5 = alloca %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", align 8
  %6 = ptrtoint %"class.blink::NGPhysicalFragment"* %1 to i64
  %7 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 3
  %8 = bitcast i24* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 64
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %9, 960
  %13 = icmp ne i32 %12, 256
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %41

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %1, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = bitcast %"class.blink::LayoutObject"* %17 to i1 (%"class.blink::LayoutObject"*, i32)***
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %17, i32 31) #8
  br i1 %22, label %23, label %41

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %25 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %4 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %4, i64 0, i32 1
  %30 = bitcast %class.scoped_refptr.1782* %29 to i64*
  store i64 %6, i64* %30, align 8
  call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE6insertIS3_EEvjOT_(%"class.WTF::Vector.2006"* %24, i32 0, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* nonnull dereferenceable(16) %4) #8
  %31 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %4, i64 0, i32 1, i32 0
  %32 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %31, align 8
  %33 = icmp eq %"class.blink::NGPhysicalFragment"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #8
  %36 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %32) #8
  br label %40

40:                                               ; preds = %23, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  br label %89

41:                                               ; preds = %3, %15
  %42 = tail call zeroext i1 @_ZNK5blink18NGPhysicalFragment24IsTextControlPlaceholderEv(%"class.blink::NGPhysicalFragment"* %1) #8
  %43 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %66

45:                                               ; preds = %41
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %49 = add i32 %44, -1
  %50 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  %51 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %5 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %5, i64 0, i32 1
  %55 = bitcast %class.scoped_refptr.1782* %54 to i64*
  store i64 %6, i64* %55, align 8
  call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE6insertIS3_EEvjOT_(%"class.WTF::Vector.2006"* %48, i32 %49, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* nonnull dereferenceable(16) %5)
  %56 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %5, i64 0, i32 1, i32 0
  %57 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %56, align 8
  %58 = icmp eq %"class.blink::NGPhysicalFragment"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %57, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #8
  %61 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %57) #8
  br label %65

65:                                               ; preds = %47, %59, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  br label %89

66:                                               ; preds = %41, %45
  %67 = phi i32 [ 0, %45 ], [ %44, %41 ]
  %68 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14
  %69 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %70 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %67, %71
  br i1 %72, label %73, label %76, !prof !3

73:                                               ; preds = %66
  %74 = add i32 %67, 1
  tail call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2006"* %68, i32 %74) #8
  %75 = load i32, i32* %69, align 4
  br label %76

76:                                               ; preds = %66, %73
  %77 = phi i32 [ %75, %73 ], [ %67, %66 ]
  %78 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %68, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %78, align 8
  %80 = zext i32 %77 to i64
  %81 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %79, i64 %80
  %82 = bitcast %"struct.blink::LogicalOffset"* %2 to i64*
  %83 = load i64, i64* %82, align 4
  %84 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %81 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %79, i64 %80, i32 1
  %86 = bitcast %class.scoped_refptr.1782* %85 to i64*
  store i64 %6, i64* %86, align 8
  %87 = load i32, i32* %69, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %69, align 4
  br label %89

89:                                               ; preds = %40, %76, %65
  ret void
}

declare zeroext i1 @_ZNK5blink18NGPhysicalFragment24IsTextControlPlaceholderEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE6insertIS3_EEvjOT_(%"class.WTF::Vector.2006"*, i32, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %30, align 8
  %32 = icmp ugt %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %31, i64 %34
  %36 = icmp ugt %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2006"* %0, i32 %29) #8
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %2 to i64
  %40 = ptrtoint %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %31 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 4
  call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2006"* %0, i32 %29) #8
  %43 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %30, align 8
  %44 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %48, i64 %49
  %51 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %50, i64 1
  %52 = icmp ne %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %51, null
  %53 = icmp ne %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %50, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %64, !prof !4

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %48, i64 %57
  %59 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %51 to i8*
  %60 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %50 to i8*
  %61 = ptrtoint %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %58 to i64
  %62 = ptrtoint %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %50 to i64
  %63 = sub i64 %61, %62
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* nonnull align 8 %60, i64 %63, i1 false) #8
  br label %64

64:                                               ; preds = %45, %55
  %65 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %46 to i64*
  %66 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %50 to i64*
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %48, i64 %49, i32 1
  %69 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %46, i64 0, i32 1
  %70 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %69, i64 0, i32 0
  %71 = bitcast %class.scoped_refptr.1782* %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %class.scoped_refptr.1782* %68 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %70, align 8
  %74 = load i32, i32* %9, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder26AddOutOfFlowChildCandidateENS_11NGBlockNodeERKNS_13LogicalOffsetENS_23NGLogicalStaticPosition10InlineEdgeENS5_9BlockEdgeEbN4absl8optionalINS_11LogicalRectEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8), i32, i32, i1 zeroext, %"class.absl::optional.1868"* byval(%"class.absl::optional.1868") align 8) local_unnamed_addr #0 align 2 {
  %9 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %10 = bitcast { %"class.blink::LayoutBox"*, i64 }* %9 to %"class.blink::NGBlockNode"*
  %11 = alloca i8, align 1
  %12 = alloca %"struct.blink::NGLogicalStaticPosition", align 8
  %13 = alloca i8*, align 8
  %14 = alloca %"struct.blink::NGContainingBlock", align 8
  %15 = alloca %"struct.blink::NGContainingBlock", align 8
  %16 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %9, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %16, align 8
  %17 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %9, i64 0, i32 1
  store i64 %2, i64* %17, align 8
  %18 = icmp ne i32 %5, 0
  %19 = and i1 %18, %6
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %11, align 1
  %21 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 31
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = or i8 %22, %20
  store i8 %23, i8* %21, align 4
  %24 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  %25 = bitcast %"struct.blink::NGLogicalStaticPosition"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = bitcast %"struct.blink::LogicalOffset"* %3 to i64*
  %27 = bitcast %"struct.blink::NGLogicalStaticPosition"* %12 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %12, i64 0, i32 1
  store i32 %4, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.blink::NGLogicalStaticPosition", %"struct.blink::NGLogicalStaticPosition"* %12, i64 0, i32 2
  store i32 %5, i32* %30, align 4
  %31 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  store i8* null, i8** %13, align 8
  %32 = bitcast %"struct.blink::NGContainingBlock"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #8
  %33 = bitcast %"struct.blink::NGContainingBlock"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #8
  %34 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %35, %37
  br i1 %38, label %39, label %61, !prof !3

39:                                               ; preds = %8
  %40 = add i32 %35, 1
  %41 = lshr i32 %35, 2
  %42 = add i32 %40, %41
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %40
  %46 = select i1 %45, i32 %44, i32 %40
  %47 = icmp ult i32 %35, %46
  br i1 %47, label %48, label %61, !prof !4

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %24, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %49, align 8
  %51 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  %53 = zext i32 %46 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %53) #8
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.1865"* %24 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = udiv i64 %54, 112
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %36, align 8
  br label %61

60:                                               ; preds = %48
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %24, i32 %46) #8
  br label %61

61:                                               ; preds = %8, %39, %52, %60
  %62 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %24, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %62, align 8
  %64 = load i32, i32* %34, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %63, i64 %65
  %67 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %66 to i8*
  %68 = call %"struct.blink::NGLogicalOutOfFlowPositionedNode"* @_ZN3WTF15ConstructTraitsIN5blink32NGLogicalOutOfFlowPositionedNodeENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRNS1_11NGBlockNodeENS1_23NGLogicalStaticPositionEDnRbNS1_17NGContainingBlockINS1_13LogicalOffsetEEESE_RKN4absl8optionalINS1_11LogicalRectEEEEEEPS2_PvDpOT_(i8* %67, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %10, %"struct.blink::NGLogicalStaticPosition"* nonnull dereferenceable(16) %12, i8** nonnull dereferenceable(8) %13, i8* nonnull dereferenceable(1) %11, %"struct.blink::NGContainingBlock"* nonnull dereferenceable(24) %14, %"struct.blink::NGContainingBlock"* nonnull dereferenceable(24) %15, %"class.absl::optional.1868"* nonnull dereferenceable(20) %7) #8
  %69 = load i32, i32* %34, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %34, align 4
  %71 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %15, i64 0, i32 2, i32 0
  %72 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %71, align 8
  %73 = icmp eq %"class.blink::NGPhysicalFragment"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %72, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #8
  %76 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %72) #8
  br label %80

80:                                               ; preds = %61, %74, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  %81 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %14, i64 0, i32 2, i32 0
  %82 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %81, align 8
  %83 = icmp eq %"class.blink::NGPhysicalFragment"* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %82, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %85) #8
  %86 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %82) #8
  br label %90

90:                                               ; preds = %80, %84, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder26AddOutOfFlowChildCandidateERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %31, !prof !3

9:                                                ; preds = %2
  %10 = add i32 %5, 1
  %11 = lshr i32 %5, 2
  %12 = add i32 %10, %11
  %13 = icmp ugt i32 %12, 4
  %14 = select i1 %13, i32 %12, i32 4
  %15 = icmp ugt i32 %14, %10
  %16 = select i1 %15, i32 %14, i32 %10
  %17 = icmp ult i32 %5, %16
  br i1 %17, label %18, label %31, !prof !4

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %19, align 8
  %21 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = zext i32 %16 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %23) #8
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.WTF::Vector.1865"* %3 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = udiv i64 %24, 112
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %6, align 8
  br label %31

30:                                               ; preds = %18
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %3, i32 %16) #8
  br label %31

31:                                               ; preds = %30, %22, %9, %2
  %32 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %32, align 8
  %34 = load i32, i32* %4, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35
  %37 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %36 to i8*
  %38 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false) #8
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35, i32 6
  %40 = bitcast %"struct.blink::NGContainingBlock"* %39 to i8*
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6
  %42 = bitcast %"struct.blink::NGContainingBlock"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %42, i64 16, i1 false) #8
  %43 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6, i32 2, i32 0
  %44 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %44, %"class.blink::NGPhysicalFragment"** %45, align 8
  %46 = icmp eq %"class.blink::NGPhysicalFragment"* %44, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  br label %49

49:                                               ; preds = %47, %31
  %50 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35, i32 7
  %51 = bitcast %"struct.blink::NGContainingBlock"* %50 to i8*
  %52 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7
  %53 = bitcast %"struct.blink::NGContainingBlock"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %53, i64 16, i1 false) #8
  %54 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7, i32 2, i32 0
  %55 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %54, align 8
  %56 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %55, %"class.blink::NGPhysicalFragment"** %56, align 8
  %57 = icmp eq %"class.blink::NGPhysicalFragment"* %55, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %55, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #8
  br label %60

60:                                               ; preds = %49, %58
  %61 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %33, i64 %35, i32 8, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 20, i1 false) #8
  %63 = load i32, i32* %4, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder32AddOutOfFlowInlineChildCandidateENS_11NGBlockNodeERKNS_13LogicalOffsetENS_13TextDirectionE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::LayoutBox"*, i64, %"struct.blink::LogicalOffset"* nocapture readonly dereferenceable(8), i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::optional.1868", align 8
  %7 = icmp eq i8 %4, 0
  %8 = select i1 %7, i32 0, i32 2
  %9 = getelementptr inbounds %"class.absl::optional.1868", %"class.absl::optional.1868"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  tail call void @_ZN5blink26NGContainerFragmentBuilder26AddOutOfFlowChildCandidateENS_11NGBlockNodeERKNS_13LogicalOffsetENS_23NGLogicalStaticPosition10InlineEdgeENS5_9BlockEdgeEbN4absl8optionalINS_11LogicalRectEEE(%"class.blink::NGContainerFragmentBuilder"* %0, %"class.blink::LayoutBox"* %1, i64 %2, %"struct.blink::LogicalOffset"* dereferenceable(8) %3, i32 %8, i32 0, i1 zeroext true, %"class.absl::optional.1868"* nonnull byval(%"class.absl::optional.1868") align 8 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder35AddOutOfFlowFragmentainerDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %42, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12
  %14 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %13 to i8*
  %15 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false) #8
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 6
  %17 = bitcast %"struct.blink::NGContainingBlock"* %16 to i8*
  %18 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6
  %19 = bitcast %"struct.blink::NGContainingBlock"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 16, i1 false) #8
  %20 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6, i32 2, i32 0
  %21 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %21, %"class.blink::NGPhysicalFragment"** %22, align 8
  %23 = icmp eq %"class.blink::NGPhysicalFragment"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #8
  br label %26

26:                                               ; preds = %24, %9
  %27 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 7
  %28 = bitcast %"struct.blink::NGContainingBlock"* %27 to i8*
  %29 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7
  %30 = bitcast %"struct.blink::NGContainingBlock"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 16, i1 false) #8
  %31 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7, i32 2, i32 0
  %32 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %32, %"class.blink::NGPhysicalFragment"** %33, align 8
  %34 = icmp eq %"class.blink::NGPhysicalFragment"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #8
  br label %37

37:                                               ; preds = %35, %26
  %38 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 8, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 20, i1 false) #8
  %40 = load i32, i32* %4, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %4, align 4
  br label %43

42:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"* %3, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %1) #8
  br label %43

43:                                               ; preds = %37, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder22AddOutOfFlowDescendantERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %42, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12
  %14 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %13 to i8*
  %15 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false) #8
  %16 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 6
  %17 = bitcast %"struct.blink::NGContainingBlock"* %16 to i8*
  %18 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6
  %19 = bitcast %"struct.blink::NGContainingBlock"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 16, i1 false) #8
  %20 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 6, i32 2, i32 0
  %21 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %21, %"class.blink::NGPhysicalFragment"** %22, align 8
  %23 = icmp eq %"class.blink::NGPhysicalFragment"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #8
  br label %26

26:                                               ; preds = %24, %9
  %27 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 7
  %28 = bitcast %"struct.blink::NGContainingBlock"* %27 to i8*
  %29 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7
  %30 = bitcast %"struct.blink::NGContainingBlock"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 16, i1 false) #8
  %31 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 7, i32 2, i32 0
  %32 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %32, %"class.blink::NGPhysicalFragment"** %33, align 8
  %34 = icmp eq %"class.blink::NGPhysicalFragment"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %36) #8
  br label %37

37:                                               ; preds = %35, %26
  %38 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, i64 %12, i32 8, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 20, i1 false) #8
  %40 = load i32, i32* %4, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %4, align 4
  br label %43

42:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"* %3, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %1) #8
  br label %43

43:                                               ; preds = %37, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder33SwapOutOfFlowPositionedCandidatesEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::Vector.1865"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  tail call void @_ZNSt3__14swapIN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.WTF::Vector.1865"* dereferenceable(16) %3, %"class.WTF::Vector.1865"* dereferenceable(16) %1)
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 31
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %62, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %1, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 4, i32 1, i32 0
  br label %18

17:                                               ; preds = %59, %7
  store i8 0, i8* %4, align 4
  br label %62

18:                                               ; preds = %15, %59
  %19 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %9, %15 ], [ %60, %59 ]
  %20 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %19, i64 0, i32 3
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %59, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %19, i64 0, i32 1, i32 2
  %25 = load i32, i32* %24, align 4
  switch i32 %25, label %58 [
    i32 1, label %26
    i32 2, label %44
  ]

26:                                               ; preds = %23
  %27 = load i32, i32* %16, align 4
  %28 = sdiv i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = tail call i1 @llvm.is.constant.i64(i64 %29) #8
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = icmp slt i32 %27, -1
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = add nsw i64 %29, 2147483648
  %35 = icmp ult i64 %34, 4294967296
  %36 = select i1 %35, i32 %28, i32 %33, !prof !4
  br label %37

37:                                               ; preds = %26, %31
  %38 = phi i32 [ %36, %31 ], [ %28, %26 ]
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %19, i64 0, i32 1, i32 0, i32 1, i32 0
  %40 = icmp slt i32 %38, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = load i32, i32* %39, align 4
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %38) #8
  br label %51

44:                                               ; preds = %23
  %45 = load i32, i32* %16, align 4
  %46 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %19, i64 0, i32 1, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %45, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %45) #8
  br label %51

51:                                               ; preds = %37, %44
  %52 = phi { i32, i1 } [ %50, %44 ], [ %43, %37 ]
  %53 = phi i32 [ %49, %44 ], [ %41, %37 ]
  %54 = phi i32* [ %46, %44 ], [ %39, %37 ]
  %55 = extractvalue { i32, i1 } %52, 1
  %56 = extractvalue { i32, i1 } %52, 0
  %57 = select i1 %55, i32 %53, i32 %56
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %51, %23
  store i8 0, i8* %20, align 8
  br label %59

59:                                               ; preds = %18, %58
  %60 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %19, i64 1
  %61 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %60, %13
  br i1 %61, label %17, label %18

62:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.WTF::Vector.1865"* dereferenceable(16), %"class.WTF::Vector.1865"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = bitcast %"class.WTF::Vector.1865"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  store atomic i64 %10, i64* %3 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %7, align 4
  %16 = load i32, i32* %14, align 4
  store i32 %16, i32* %7, align 4
  %17 = load i64, i64* %9, align 8
  store atomic i64 %4, i64* %9 monotonic, align 8
  store i32 %6, i32* %11, align 4
  store i32 %8, i32* %14, align 4
  %18 = inttoptr i64 %17 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %51, label %20, !prof !4

20:                                               ; preds = %2
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %49, label %22, !prof !3

22:                                               ; preds = %20
  %23 = zext i32 %15 to i64
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %18, i64 %23
  br label %25

25:                                               ; preds = %22, %46
  %26 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %47, %46 ], [ %18, %22 ]
  %27 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %26, i64 0, i32 7, i32 2, i32 0
  %28 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %27, align 8
  %29 = icmp eq %"class.blink::NGPhysicalFragment"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  %32 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %28) #8
  br label %36

36:                                               ; preds = %35, %30, %25
  %37 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %26, i64 0, i32 6, i32 2, i32 0
  %38 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %37, align 8
  %39 = icmp eq %"class.blink::NGPhysicalFragment"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #8
  %42 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %38) #8
  br label %46

46:                                               ; preds = %45, %40, %36
  %47 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %26, i64 1
  %48 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %47, %24
  br i1 %48, label %49, label %25

49:                                               ; preds = %46, %20
  %50 = inttoptr i64 %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  br label %51

51:                                               ; preds = %2, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder26AddMulticolWithPendingOOFsERKNS_11NGBlockNodeENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), %"struct.blink::NGMulticolWithPendingOOFs"* byval(%"struct.blink::NGMulticolWithPendingOOFs") align 8) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12
  %7 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = bitcast %"class.blink::NGBlockNode"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::LayoutBox"** %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %6, i64 0, i32 0
  %12 = call { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.1876"* %11, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4) #8
  %13 = extractvalue { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } %12, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %14 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %6, i64 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %15, i64 %18
  %20 = icmp eq %"struct.WTF::KeyValuePair.1879"* %13, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = load i64, i64* %8, align 8
  %24 = bitcast %"class.blink::LayoutBox"** %5 to i64*
  store i64 %23, i64* %24, align 8
  %25 = call { %"struct.WTF::KeyValuePair.1879"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1876"* %11, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5, %"struct.blink::NGMulticolWithPendingOOFs"* nonnull dereferenceable(32) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  br label %26

26:                                               ; preds = %3, %21
  %27 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %2, i64 0, i32 1, i32 2, i32 0
  %28 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %27, align 8
  %29 = icmp eq %"class.blink::NGPhysicalFragment"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  %32 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %28) #8
  br label %36

36:                                               ; preds = %26, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder28SwapMulticolsWithPendingOOFsEPN3WTF7HashMapIPNS_9LayoutBoxENS_25NGMulticolWithPendingOOFsINS_13LogicalOffsetEEENS1_7PtrHashIS3_EENS1_10HashTraitsIS4_EENSA_IS7_EENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::HashMap.1875"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 12
  tail call void @_ZNSt3__14swapIN3WTF7HashMapIPN5blink9LayoutBoxENS3_25NGMulticolWithPendingOOFsINS3_13LogicalOffsetEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSB_IS8_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISH_EE5valueEvE4typeERSH_SK_(%"class.WTF::HashMap.1875"* dereferenceable(24) %3, %"class.WTF::HashMap.1875"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN3WTF7HashMapIPN5blink9LayoutBoxENS3_25NGMulticolWithPendingOOFsINS3_13LogicalOffsetEEENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENSB_IS8_EENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableISH_EE5valueEvE4typeERSH_SK_(%"class.WTF::HashMap.1875"* dereferenceable(24), %"class.WTF::HashMap.1875"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %3 = bitcast %"class.WTF::HashMap.1875"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %0, i64 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 2147483647
  %12 = and i32 %10, -2147483648
  store i32 %12, i32* %9, align 8
  %13 = bitcast %"class.WTF::HashMap.1875"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  store atomic i64 %14, i64* %3 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %5, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %5, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %1, i64 0, i32 0, i32 2
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %7, align 4
  store i32 %19, i32* %18, align 4
  %21 = load i32, i32* %9, align 8
  %22 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %1, i64 0, i32 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 2147483647
  %25 = and i32 %21, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %9, align 8
  %27 = load i32, i32* %22, align 8
  %28 = and i32 %27, -2147483648
  %29 = getelementptr inbounds %"class.WTF::HashMap.1875", %"class.WTF::HashMap.1875"* %1, i64 0, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %29, align 8
  store atomic i64 %4, i64* %13 monotonic, align 8
  %31 = load i32, i32* %15, align 4
  store i32 %6, i32* %15, align 4
  store i32 %8, i32* %18, align 4
  %32 = or i32 %28, %11
  store i32 %32, i32* %22, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.1879"* %30, null
  br i1 %33, label %58, label %34, !prof !4

34:                                               ; preds = %2
  %35 = icmp eq i32 %31, 0
  br i1 %35, label %56, label %36

36:                                               ; preds = %34
  %37 = zext i32 %31 to i64
  br label %38

38:                                               ; preds = %53, %36
  %39 = phi i64 [ 0, %36 ], [ %54, %53 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %30, i64 %39, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %30, i64 %39, i32 1, i32 1, i32 2, i32 0
  %45 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %44, align 8
  %46 = icmp eq %"class.blink::NGPhysicalFragment"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #8
  %49 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %45) #8
  br label %53

53:                                               ; preds = %52, %47, %43, %38
  %54 = add nuw nsw i64 %39, 1
  %55 = icmp eq i64 %54, %37
  br i1 %55, label %56, label %38

56:                                               ; preds = %53, %34
  %57 = bitcast %"struct.WTF::KeyValuePair.1879"* %30 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #8
  br label %58

58:                                               ; preds = %2, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder37SwapOutOfFlowFragmentainerDescendantsEPN3WTF6VectorINS_32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NGContainerFragmentBuilder"*, %"class.WTF::Vector.1865"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 10
  tail call void @_ZNSt3__14swapIN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.WTF::Vector.1865"* dereferenceable(16) %3, %"class.WTF::Vector.1865"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder27TransferOutOfFlowCandidatesEPS0_NS_13LogicalOffsetEPKNS_25NGMulticolWithPendingOOFsIS2_EE(%"class.blink::NGContainerFragmentBuilder"* nocapture, %"class.blink::NGContainerFragmentBuilder"*, i64, %"struct.blink::NGMulticolWithPendingOOFs"* readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca [19 x i8], align 1
  %6 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %7 = alloca %"struct.blink::NGLogicalOutOfFlowPositionedNode", align 8
  %8 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %9 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %10 = alloca [19 x i8], align 1
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %56, label %22

22:                                               ; preds = %4
  %23 = icmp slt i32 %11, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = icmp slt i32 %13, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = icmp eq %"struct.blink::NGMulticolWithPendingOOFs"* %3, null
  %28 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %3, i64 0, i32 1, i32 2, i32 0
  %30 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7 to i8*
  %31 = bitcast %"struct.blink::NGContainingBlock"* %28 to i8*
  %32 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %8 to i8*
  %33 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %9 to i8*
  %34 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %6 to i8*
  %35 = getelementptr inbounds [19 x i8], [19 x i8]* %5, i64 0, i64 0
  %36 = getelementptr inbounds [19 x i8], [19 x i8]* %10, i64 0, i64 0
  %37 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 1
  %39 = bitcast %"struct.blink::NGLogicalStaticPosition"* %38 to i64*
  %40 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 3
  %42 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 5, i32 0
  %43 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 6
  %44 = bitcast %"struct.blink::NGContainingBlock"* %43 to i8*
  %45 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 6, i32 2, i32 0
  %46 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 7
  %47 = bitcast %"struct.blink::NGContainingBlock"* %46 to i8*
  %48 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 7, i32 2, i32 0
  %49 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds i8, i8* %30, i64 89
  %51 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %1, i64 0, i32 10
  %52 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %1, i64 0, i32 10, i32 0, i32 0, i32 2
  %53 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %1, i64 0, i32 10, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %51, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast i32* %40 to <2 x i64>*
  br label %97

56:                                               ; preds = %206, %4
  %57 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %96, label %60

60:                                               ; preds = %56
  %61 = load i32, i32* %17, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %92, label %63

63:                                               ; preds = %60
  %64 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %15, align 8
  %65 = zext i32 %61 to i64
  %66 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %64, i64 %65
  br label %67

67:                                               ; preds = %88, %63
  %68 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %89, %88 ], [ %64, %63 ]
  %69 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %68, i64 0, i32 7, i32 2, i32 0
  %70 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %69, align 8
  %71 = icmp eq %"class.blink::NGPhysicalFragment"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %70, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #8
  %74 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %72
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %70) #8
  br label %78

78:                                               ; preds = %77, %72, %67
  %79 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %68, i64 0, i32 6, i32 2, i32 0
  %80 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %79, align 8
  %81 = icmp eq %"class.blink::NGPhysicalFragment"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #8
  %84 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %80) #8
  br label %88

88:                                               ; preds = %87, %82, %78
  %89 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %68, i64 1
  %90 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %89, %66
  br i1 %90, label %91, label %67

91:                                               ; preds = %88
  store i32 0, i32* %17, align 4
  br label %92

92:                                               ; preds = %91, %60
  %93 = bitcast %"class.WTF::Vector.1865"* %14 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast %"class.WTF::Vector.1865"* %14 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  store i32 0, i32* %57, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %56, %92
  ret void

97:                                               ; preds = %22, %206
  %98 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %16, %22 ], [ %207, %206 ]
  %99 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 0, i32 0
  %100 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %99, align 8
  %101 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 0, i32 1, i32 0
  %102 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %101, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %11) #8
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %24, i32 %106, !prof !3
  %108 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 0, i32 1, i32 0, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %109, i32 %13) #8
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %26, i32 %112, !prof !3
  %114 = zext i32 %113 to i64
  %115 = shl nuw i64 %114, 32
  %116 = zext i32 %107 to i64
  %117 = or i64 %115, %116
  %118 = bitcast %"struct.blink::LogicalOffset"* %101 to i64*
  store i64 %117, i64* %118, align 4
  br i1 %27, label %205, label %119

119:                                              ; preds = %97
  %120 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %29, align 8
  %121 = icmp eq %"class.blink::NGPhysicalFragment"* %120, null
  br i1 %121, label %205, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %100, i64 0, i32 0, i32 0, i32 5, i32 0
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8
  %128 = and i160 %127, 8462480737302404222943232
  %129 = icmp eq i160 %128, 1208925819614629174706176
  br i1 %129, label %130, label %205

130:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #8
  %131 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 0, i32 1, i32 1
  %132 = bitcast i32* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8
  %134 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 0, i32 3
  %135 = load i8, i8* %134, align 8, !range !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %31, i64 16, i1 false)
  %136 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %120, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #8
  %137 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %29, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %31, i64 16, i1 false)
  %138 = icmp eq %"class.blink::NGPhysicalFragment"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %137, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %140) #8
  br label %141

141:                                              ; preds = %130, %139
  %142 = phi i1 [ true, %130 ], [ false, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  call void @llvm.lifetime.start.p0i8(i64 19, i8* nonnull %35)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* nonnull align 1 %36, i64 19, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %33, i64 16, i1 false)
  store %"class.blink::LayoutBox"* %100, %"class.blink::LayoutBox"** %37, align 8
  store i64 %117, i64* %39, align 8
  store <2 x i64> %133, <2 x i64>* %55, align 8
  store i8 %135, i8* %41, align 8
  store i32 0, i32* %42, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %32, i64 16, i1 false)
  store %"class.blink::NGPhysicalFragment"* %120, %"class.blink::NGPhysicalFragment"** %45, align 8
  %143 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %120, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %143) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %34, i64 16, i1 false)
  store %"class.blink::NGPhysicalFragment"* %137, %"class.blink::NGPhysicalFragment"** %48, align 8
  br i1 %142, label %144, label %145

144:                                              ; preds = %141
  store i8 0, i8* %49, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %35, i64 19, i1 false)
  br label %151

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %137, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %146) #8
  store i8 0, i8* %49, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %35, i64 19, i1 false)
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %146) #8
  %147 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %145
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %137) #8
  br label %151

151:                                              ; preds = %144, %145, %150
  %152 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %120, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %152) #8
  %153 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %151
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %120) #8
  br label %157

157:                                              ; preds = %151, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 19, i8* nonnull %35)
  %158 = load i32, i32* %52, align 4
  %159 = load i32, i32* %53, align 8
  %160 = icmp eq i32 %158, %159
  br i1 %160, label %185, label %161, !prof !3

161:                                              ; preds = %157
  %162 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %54, align 8
  %163 = zext i32 %158 to i64
  %164 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163
  %165 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* nonnull align 8 %30, i64 40, i1 false) #8
  %166 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163, i32 6
  %167 = bitcast %"struct.blink::NGContainingBlock"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %44, i64 16, i1 false) #8
  %168 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %45, align 8
  %169 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %168, %"class.blink::NGPhysicalFragment"** %169, align 8
  %170 = icmp eq %"class.blink::NGPhysicalFragment"* %168, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %168, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %172) #8
  br label %173

173:                                              ; preds = %171, %161
  %174 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163, i32 7
  %175 = bitcast %"struct.blink::NGContainingBlock"* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %47, i64 16, i1 false) #8
  %176 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %48, align 8
  %177 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %176, %"class.blink::NGPhysicalFragment"** %177, align 8
  %178 = icmp eq %"class.blink::NGPhysicalFragment"* %176, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %176, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %180) #8
  br label %181

181:                                              ; preds = %179, %173
  %182 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %162, i64 %163, i32 8, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %49, i64 20, i1 false) #8
  %183 = load i32, i32* %52, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %52, align 4
  br label %186

185:                                              ; preds = %157
  call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"* %51, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* nonnull dereferenceable(112) %7) #8
  br label %186

186:                                              ; preds = %181, %185
  %187 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %48, align 8
  %188 = icmp eq %"class.blink::NGPhysicalFragment"* %187, null
  br i1 %188, label %195, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %187, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %190) #8
  %191 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %187, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %189
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %187) #8
  br label %195

195:                                              ; preds = %194, %189, %186
  %196 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %45, align 8
  %197 = icmp eq %"class.blink::NGPhysicalFragment"* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %196, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %199) #8
  %200 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %196, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %198
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %196) #8
  br label %204

204:                                              ; preds = %195, %198, %203
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #8
  br label %206

205:                                              ; preds = %119, %97, %122
  call void @_ZN5blink26NGContainerFragmentBuilder26AddOutOfFlowChildCandidateERKNS_32NGLogicalOutOfFlowPositionedNodeE(%"class.blink::NGContainerFragmentBuilder"* %1, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112) %98)
  br label %206

206:                                              ; preds = %204, %205
  %207 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %98, i64 1
  %208 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %207, %20
  br i1 %208, label %56, label %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGContainerFragmentBuilder46MoveOutOfFlowDescendantCandidatesToDescendantsEv(%"class.blink::NGContainerFragmentBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11
  tail call void @_ZNSt3__14swapIN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS1_18PartitionAllocatorEEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.WTF::Vector.1865"* dereferenceable(16) %2, %"class.WTF::Vector.1865"* dereferenceable(16) %3)
  %4 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 0, i32 5
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 134217728
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %120, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGContainerFragmentBuilder", %"class.blink::NGContainerFragmentBuilder"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %120, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::LayoutObject"** %4 to %"class.blink::LayoutInline"**
  br label %21

21:                                               ; preds = %19, %117
  %22 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %13, %19 ], [ %118, %117 ]
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %22, i64 0, i32 2
  %24 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutInline"* %24, null
  br i1 %25, label %26, label %85

26:                                               ; preds = %21
  %27 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %22 to %"class.blink::LayoutObject"**
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %30, label %80, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*)***
  %33 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, i64 26
  %35 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* nonnull %29) #8
  br i1 %36, label %37, label %80

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = lshr i160 %42, 80
  %44 = trunc i160 %43 to i32
  %45 = and i32 %44, 7
  %46 = icmp eq i32 %45, 4
  %47 = and i160 %42, 128849018880
  %48 = icmp eq i160 %47, 42949672960
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 3, i32 %45
  switch i32 %50, label %80 [
    i32 0, label %51
    i32 1, label %72
  ]

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = lshr i160 %56, 80
  %58 = trunc i160 %57 to i32
  %59 = and i32 %58, 7
  %60 = icmp eq i32 %59, 4
  %61 = and i160 %56, 128849018880
  %62 = icmp eq i160 %61, 42949672960
  %63 = and i1 %62, %60
  %64 = icmp ne i32 %59, 3
  %65 = xor i1 %64, %63
  br i1 %65, label %78, label %66

66:                                               ; preds = %51
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %68 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %67 to i96*
  %69 = load i96, i96* %68, align 4
  %70 = and i96 %69, 68719476736
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %80, label %78

72:                                               ; preds = %37
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %74 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %73 to i96*
  %75 = load i96, i96* %74, align 4
  %76 = and i96 %75, 68719476736
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %66, %72, %51
  %79 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %20, align 8
  store %"class.blink::LayoutInline"* %79, %"class.blink::LayoutInline"** %23, align 8
  br label %82

80:                                               ; preds = %66, %72, %37, %26, %31
  %81 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %23, align 8
  br label %82

82:                                               ; preds = %80, %78
  %83 = phi %"class.blink::LayoutInline"* [ %81, %80 ], [ %79, %78 ]
  %84 = icmp eq %"class.blink::LayoutInline"* %83, null
  br i1 %84, label %117, label %85

85:                                               ; preds = %21, %82
  %86 = phi %"class.blink::LayoutInline"* [ %83, %82 ], [ %24, %21 ]
  %87 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %86, i64 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %86, i64 0, i32 0, i32 0, i32 4
  %89 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %88 to i96*
  %90 = load i96, i96* %89, align 4
  %91 = and i96 %90, 16777216
  %92 = icmp eq i96 %91, 0
  br i1 %92, label %93, label %114

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %86, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %114, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 0, i32 6, i32 0, i32 0
  br i1 %101, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::NodeData"** %102 to %"class.blink::NodeRareData"**
  %105 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %105, i64 0, i32 1, i32 0, i32 0
  br label %109

107:                                              ; preds = %97
  %108 = bitcast %"class.blink::NodeData"** %102 to %"class.blink::NodeRenderingData"**
  br label %109

109:                                              ; preds = %107, %103
  %110 = phi %"class.blink::NodeRenderingData"** [ %106, %103 ], [ %108, %107 ]
  %111 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %111, i64 0, i32 1
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  br label %114

114:                                              ; preds = %85, %93, %109
  %115 = phi %"class.blink::LayoutObject"* [ %113, %109 ], [ %87, %93 ], [ %87, %85 ]
  %116 = bitcast %"class.blink::LayoutInline"** %23 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %115, %"class.blink::LayoutObject"** %116, align 8
  br label %117

117:                                              ; preds = %82, %114
  %118 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %22, i64 1
  %119 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %118, %17
  br i1 %119, label %120, label %21

120:                                              ; preds = %117, %11, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %17 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  ret %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink24NGPhysicalStaticPosition16ConvertToLogicalERKNS_20WritingModeConverterE(%"struct.blink::NGPhysicalStaticPosition"*, %"class.blink::WritingModeConverter"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalSize"*
  %5 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %16 to i64
  %22 = or i64 %20, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %26

23:                                               ; preds = %2, %10
  %24 = call i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %5, %"struct.blink::PhysicalSize"* nonnull dereferenceable(8) %4) #8
  %25 = load i8, i8* %7, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  switch i8 %25, label %83 [
    i8 0, label %26
    i8 1, label %44
    i8 3, label %44
    i8 2, label %57
    i8 4, label %70
  ]

26:                                               ; preds = %14, %23
  %27 = phi i64 [ %22, %14 ], [ %24, %23 ]
  %28 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 0
  %31 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  %34 = xor i1 %30, %33
  %35 = select i1 %34, i64 0, i64 2
  %36 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i64 0, i64 8589934592
  %40 = icmp eq i32 %29, 1
  %41 = select i1 %40, i64 1, i64 %35
  %42 = icmp eq i32 %37, 1
  %43 = select i1 %42, i64 4294967296, i64 %39
  br label %102

44:                                               ; preds = %23, %23
  %45 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp ne i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  %51 = xor i1 %47, %50
  %52 = select i1 %51, i64 0, i64 2
  %53 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 2
  %56 = select i1 %55, i64 0, i64 8589934592
  br label %86

57:                                               ; preds = %23
  %58 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 0
  %64 = xor i1 %60, %63
  %65 = select i1 %64, i64 0, i64 2
  %66 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = select i1 %68, i64 0, i64 8589934592
  br label %93

70:                                               ; preds = %23
  %71 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp ne i32 %72, 2
  %74 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %1, i64 0, i32 0, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  %77 = xor i1 %73, %76
  %78 = select i1 %77, i64 0, i64 2
  %79 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, i64 0, i64 8589934592
  br label %93

83:                                               ; preds = %23
  %84 = add i8 %25, -1
  %85 = icmp ult i8 %84, 4
  br i1 %85, label %86, label %102

86:                                               ; preds = %44, %83
  %87 = phi i64 [ %56, %44 ], [ -6148914694099828736, %83 ]
  %88 = phi i64 [ %52, %44 ], [ 2863311530, %83 ]
  %89 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.blink::NGPhysicalStaticPosition", %"struct.blink::NGPhysicalStaticPosition"* %0, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %86, %57, %70
  %94 = phi i32 [ %92, %86 ], [ %67, %57 ], [ %80, %70 ]
  %95 = phi i32 [ %90, %86 ], [ %59, %57 ], [ %72, %70 ]
  %96 = phi i64 [ %87, %86 ], [ %69, %57 ], [ %82, %70 ]
  %97 = phi i64 [ %88, %86 ], [ %65, %57 ], [ %78, %70 ]
  %98 = icmp eq i32 %95, 1
  %99 = select i1 %98, i64 1, i64 %97
  %100 = icmp eq i32 %94, 1
  %101 = select i1 %100, i64 4294967296, i64 %96
  br label %102

102:                                              ; preds = %83, %93, %26
  %103 = phi i64 [ %24, %83 ], [ %24, %93 ], [ %27, %26 ]
  %104 = phi i64 [ 2863311530, %83 ], [ %99, %93 ], [ %41, %26 ]
  %105 = phi i64 [ -6148914694099828736, %83 ], [ %101, %93 ], [ %43, %26 ]
  %106 = insertvalue { i64, i64 } undef, i64 %103, 0
  %107 = and i64 %105, -4294967296
  %108 = and i64 %104, 4294967295
  %109 = or i64 %107, %108
  %110 = insertvalue { i64, i64 } %106, i64 %109, 1
  ret { i64, i64 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %17 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGPhysicalOutOfFlowPositionedNode", %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %26, i64 1
  store %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %27, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(80) %"struct.blink::NGPhysicalOOFNodeForFragmentation"* @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEdeEv(%"class.base::CheckedContiguousIterator.2032"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %17 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  ret %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2032"* @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEppEv(%"class.base::CheckedContiguousIterator.2032"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %11 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %12 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %17 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGPhysicalOOFNodeForFragmentation", %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %26, i64 1
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %27, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2032"* %0
}

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, align 8
  %8 = alloca %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, align 8
  %9 = alloca %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %1, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7, align 8
  store %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %2, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8, align 8
  store %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %3, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %2 to i64
  %18 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %3 to i64
  %21 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %30 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8, align 8
  %43 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %49 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %48, i8* %50) #8
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #8
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOutOfFlowPositionedNodeEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %11, align 8
  %15 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %12, align 8
  %16 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %20, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %32, align 8
  %36 = load %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %33, align 8
  %37 = icmp eq %"struct.blink::NGPhysicalOutOfFlowPositionedNode"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %42 = bitcast %"struct.blink::NGPhysicalOutOfFlowPositionedNode"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOutOfFlowPositionedNodeEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* %41, i8* %43) #8
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #8
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2024"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = mul nuw nsw i64 %27, 40
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENS2_25NGMulticolWithPendingOOFsINS2_14PhysicalOffsetEEEEEEEPKcv, i64 0, i64 0)) #8
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.2027"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 %28, i1 false) #8
  %31 = call %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2024"* %0, %"struct.WTF::KeyValuePair.2027"* %30, i32 %17, %"struct.WTF::KeyValuePair.2027"* null) #8
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2024"*, %"struct.WTF::KeyValuePair.2027"*, i32, %"struct.WTF::KeyValuePair.2027"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2024", align 8
  %6 = bitcast %"class.WTF::HashTable.2024"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2024"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2027"* %1, %"struct.WTF::KeyValuePair.2027"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2024"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2024"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %22 to i64
  br label %65

24:                                               ; preds = %112
  %25 = bitcast %"class.WTF::HashTable.2024"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2024"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %113, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2027"* [ null, %16 ], [ %116, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %114, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2027"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %56, %39
  %42 = phi i64 [ 0, %39 ], [ %57, %56 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBox"* %44, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %35, i64 %42, i32 1, i32 1, i32 2, i32 0
  %48 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %47, align 8
  %49 = icmp eq %"class.blink::NGPhysicalFragment"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #8
  %52 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %48) #8
  br label %56

56:                                               ; preds = %55, %50, %46, %41
  %57 = add nuw nsw i64 %42, 1
  %58 = icmp eq i64 %57, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %56, %37
  %60 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %61

61:                                               ; preds = %28, %59
  %62 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, -2147483648
  store i32 %64, i32* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.2027"* %33

65:                                               ; preds = %21, %112
  %66 = phi i64 [ %113, %112 ], [ %23, %21 ]
  %67 = phi i32 [ %114, %112 ], [ %13, %21 ]
  %68 = phi %"struct.WTF::KeyValuePair.2027"* [ %115, %112 ], [ %22, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.2027"* [ %116, %112 ], [ null, %21 ]
  %70 = phi i32 [ %117, %112 ], [ 0, %21 ]
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %68, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair.2027"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  switch i64 %74, label %75 [
    i64 -1, label %112
    i64 0, label %112
  ]

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %72, i64 0, i32 0
  %77 = call { %"struct.WTF::KeyValuePair.2027"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.2024"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %76) #8
  %78 = extractvalue { %"struct.WTF::KeyValuePair.2027"*, i8 } %77, 0
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %78, i64 0, i32 1, i32 1, i32 2, i32 0
  %80 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %79, align 8
  %81 = icmp eq %"class.blink::NGPhysicalFragment"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #8
  %84 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %80) #8
  br label %88

88:                                               ; preds = %75, %82, %87
  %89 = load i64, i64* %73, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.2027"* %78 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %78, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %68, i64 %71, i32 1
  %93 = bitcast %"struct.blink::NGMulticolWithPendingOOFs.2028"* %92 to i64*
  %94 = bitcast %"struct.blink::NGMulticolWithPendingOOFs.2028"* %91 to i64*
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %78, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %68, i64 %71, i32 1, i32 1
  %98 = bitcast %"struct.blink::NGContainingBlock.2029"* %96 to i8*
  %99 = bitcast %"struct.blink::NGContainingBlock.2029"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %78, i64 0, i32 1, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %68, i64 %71, i32 1, i32 1, i32 2
  %102 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %101, i64 0, i32 0
  %103 = bitcast %class.scoped_refptr.1782* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.scoped_refptr.1782* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %102, align 8
  %106 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %15, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %106, i64 %71
  %108 = icmp eq %"struct.WTF::KeyValuePair.2027"* %107, %3
  %109 = select i1 %108, %"struct.WTF::KeyValuePair.2027"* %78, %"struct.WTF::KeyValuePair.2027"* %69
  %110 = load i32, i32* %12, align 8
  %111 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %106 to i64
  br label %112

112:                                              ; preds = %65, %65, %88
  %113 = phi i64 [ %66, %65 ], [ %111, %88 ], [ %66, %65 ]
  %114 = phi i32 [ %67, %65 ], [ %110, %88 ], [ %67, %65 ]
  %115 = phi %"struct.WTF::KeyValuePair.2027"* [ %68, %65 ], [ %106, %88 ], [ %68, %65 ]
  %116 = phi %"struct.WTF::KeyValuePair.2027"* [ %69, %65 ], [ %109, %88 ], [ %69, %65 ]
  %117 = add i32 %70, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %24, label %65
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2027"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.2024"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2027"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2027"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2027"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2027"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2027"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2027"*, i8 } undef, %"struct.WTF::KeyValuePair.2027"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2027"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2027"*, i8 } %85
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2027"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISB_SG_SH_EERKS3_RKS8_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2024"*, %"class.blink::LayoutBox"** dereferenceable(8), %"struct.WTF::KeyValuePair.2027"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2027"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2024"* %0, %"struct.WTF::KeyValuePair.2027"* null)
  %9 = load %"struct.WTF::KeyValuePair.2027"*, %"struct.WTF::KeyValuePair.2027"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2027"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2027"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2027"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %130, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2027"* %60, %"struct.WTF::KeyValuePair.2027"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2027"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2027"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 40, i1 false) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"struct.WTF::KeyValuePair.2027"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.2027"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.2027"* %87 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %87, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %2, i64 0, i32 1
  %93 = bitcast %"struct.blink::NGMulticolWithPendingOOFs.2028"* %92 to i64*
  %94 = bitcast %"struct.blink::NGMulticolWithPendingOOFs.2028"* %91 to i64*
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %87, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %2, i64 0, i32 1, i32 1
  %98 = bitcast %"struct.blink::NGContainingBlock.2029"* %96 to i8*
  %99 = bitcast %"struct.blink::NGContainingBlock.2029"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %87, i64 0, i32 1, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2027", %"struct.WTF::KeyValuePair.2027"* %2, i64 0, i32 1, i32 1, i32 2, i32 0
  %102 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %101, align 8
  %103 = icmp eq %"class.blink::NGPhysicalFragment"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %86
  %105 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %102, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #8
  br label %106

106:                                              ; preds = %104, %86
  %107 = ptrtoint %"class.blink::NGPhysicalFragment"* %102 to i64
  %108 = bitcast %class.scoped_refptr.1782* %100 to i64*
  %109 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %100, i64 0, i32 0
  %110 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::NGPhysicalFragment"* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #8
  %114 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %112
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %110) #8
  br label %118

118:                                              ; preds = %106, %112, %117
  %119 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, %121
  %125 = shl i32 %124, 1
  %126 = load i32, i32* %12, align 8
  %127 = icmp ult i32 %125, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %118
  %129 = tail call %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2024"* %0, %"struct.WTF::KeyValuePair.2027"* %87)
  br label %130

130:                                              ; preds = %58, %118, %128
  %131 = phi i8 [ 1, %118 ], [ 1, %128 ], [ 0, %58 ]
  %132 = phi %"struct.WTF::KeyValuePair.2027"* [ %87, %118 ], [ %129, %128 ], [ %60, %58 ]
  %133 = insertvalue { %"struct.WTF::KeyValuePair.2027"*, i8 } undef, %"struct.WTF::KeyValuePair.2027"* %132, 0
  %134 = insertvalue { %"struct.WTF::KeyValuePair.2027"*, i8 } %133, i8 %131, 1
  ret { %"struct.WTF::KeyValuePair.2027"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2024"*, %"struct.WTF::KeyValuePair.2027"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2024", %"class.WTF::HashTable.2024"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 40
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENS2_25NGMulticolWithPendingOOFsINS2_14PhysicalOffsetEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.2027"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #8
  br label %39

39:                                               ; preds = %31, %38
  %40 = call %"struct.WTF::KeyValuePair.2027"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_14PhysicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2024"* %0, %"struct.WTF::KeyValuePair.2027"* %36, i32 %32, %"struct.WTF::KeyValuePair.2027"* %1) #8
  ret %"struct.WTF::KeyValuePair.2027"* %40
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i64 @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_14PhysicalOffsetERKNS_12PhysicalSizeE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalSize"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEEC2EPKS2_PS2_S5_(%"class.base::CheckedContiguousIterator.2032"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %8 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %9 = alloca %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7, align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %2, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  store %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %3, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2032"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %2 to i64
  %18 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %3 to i64
  %21 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %30 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8, align 8
  %43 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #8
  %49 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %48, i8* %50) #8
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #8
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIN5blink33NGPhysicalOOFNodeForFragmentationEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.2032"*, %"class.base::CheckedContiguousIterator.2032"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %11, align 8
  %15 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %12, align 8
  %16 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2032"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %21 = bitcast %"class.base::CheckedContiguousIterator.2032"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %20, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2032", %"class.base::CheckedContiguousIterator.2032"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %32, align 8
  %36 = load %"struct.blink::NGPhysicalOOFNodeForFragmentation"*, %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %33, align 8
  %37 = icmp eq %"struct.blink::NGPhysicalOOFNodeForFragmentation"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %42 = bitcast %"struct.blink::NGPhysicalOOFNodeForFragmentation"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink33NGPhysicalOOFNodeForFragmentationEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* %41, i8* %43) #8
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #8
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

declare void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %66

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %61, %60 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16 to i8*
  %18 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 40, i1 false) #8
  %19 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6
  %20 = bitcast %"struct.blink::NGContainingBlock"* %19 to i8*
  %21 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6
  %22 = bitcast %"struct.blink::NGContainingBlock"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 16, i1 false) #8
  %23 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 6, i32 2
  %24 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2
  %25 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %24, i64 0, i32 0
  %26 = bitcast %class.scoped_refptr.1782* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.scoped_refptr.1782* %23 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %25, align 8
  %29 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7
  %30 = bitcast %"struct.blink::NGContainingBlock"* %29 to i8*
  %31 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7
  %32 = bitcast %"struct.blink::NGContainingBlock"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 16, i1 false) #8
  %33 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 7, i32 2
  %34 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2
  %35 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %34, i64 0, i32 0
  %36 = bitcast %class.scoped_refptr.1782* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.scoped_refptr.1782* %33 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %35, align 8
  %39 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 20, i1 false) #8
  %41 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 7, i32 2, i32 0
  %42 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %41, align 8
  %43 = icmp eq %"class.blink::NGPhysicalFragment"* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %14
  %45 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #8
  %46 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %42) #8
  br label %50

50:                                               ; preds = %49, %44, %14
  %51 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 0, i32 6, i32 2, i32 0
  %52 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %51, align 8
  %53 = icmp eq %"class.blink::NGPhysicalFragment"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #8
  %56 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %52) #8
  br label %60

60:                                               ; preds = %59, %54, %50
  %61 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %16, i64 1
  %62 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %15, i64 1
  %63 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %65) #8
  br label %141

66:                                               ; preds = %2
  %67 = zext i32 %1 to i64
  %68 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %67) #8
  %69 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %70 = udiv i64 %68, 112
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %72, align 8
  %74 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %66
  %80 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73 to i8*
  br label %136

81:                                               ; preds = %66
  %82 = bitcast i8* %69 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %83

83:                                               ; preds = %81, %129
  %84 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %131, %129 ], [ %73, %81 ]
  %85 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %130, %129 ], [ %82, %81 ]
  %86 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85 to i8*
  %87 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 40, i1 false) #8
  %88 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6
  %89 = bitcast %"struct.blink::NGContainingBlock"* %88 to i8*
  %90 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6
  %91 = bitcast %"struct.blink::NGContainingBlock"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %91, i64 16, i1 false) #8
  %92 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 6, i32 2
  %93 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2
  %94 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %93, i64 0, i32 0
  %95 = bitcast %class.scoped_refptr.1782* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %class.scoped_refptr.1782* %92 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %94, align 8
  %98 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7
  %99 = bitcast %"struct.blink::NGContainingBlock"* %98 to i8*
  %100 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7
  %101 = bitcast %"struct.blink::NGContainingBlock"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %101, i64 16, i1 false) #8
  %102 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 7, i32 2
  %103 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2
  %104 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %103, i64 0, i32 0
  %105 = bitcast %class.scoped_refptr.1782* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %class.scoped_refptr.1782* %102 to i64*
  store i64 %106, i64* %107, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %104, align 8
  %108 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 20, i1 false) #8
  %110 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 7, i32 2, i32 0
  %111 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %110, align 8
  %112 = icmp eq %"class.blink::NGPhysicalFragment"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %83
  %114 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %114) #8
  %115 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %113
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %111) #8
  br label %119

119:                                              ; preds = %118, %113, %83
  %120 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 0, i32 6, i32 2, i32 0
  %121 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %120, align 8
  %122 = icmp eq %"class.blink::NGPhysicalFragment"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #8
  %125 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %123
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %121) #8
  br label %129

129:                                              ; preds = %128, %123, %119
  %130 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %85, i64 1
  %131 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %84, i64 1
  %132 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %131, %77
  br i1 %132, label %133, label %83

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::Vector.1865"* %0 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %79, %133
  %137 = phi i8* [ %135, %133 ], [ %80, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %137) #8
  %138 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 %71, i64* %138 monotonic, align 8
  %139 = trunc i64 %70 to i32
  %140 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %139, i32* %140, align 8
  br label %141

141:                                              ; preds = %136, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 19155236
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 19155236) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2006"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset", %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %24, i64 %25
  ret %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink12NGBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2011"*, %"class.blink::NGBreakToken"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2011", %"class.WTF::Vector.2011"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr.1785* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink12NGBreakTokenEEEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr.1785*, %class.scoped_refptr.1785** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr.1785* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr.1785* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #8
  %36 = bitcast %"class.WTF::Vector.2011"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  %40 = bitcast %"class.WTF::Vector.2011"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr.1785*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr.1785* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %1, align 8
  %50 = getelementptr inbounds %class.scoped_refptr.1785, %class.scoped_refptr.1785* %46, i64 %48, i32 0
  store %"class.blink::NGBreakToken"* %49, %"class.blink::NGBreakToken"** %50, align 8
  %51 = icmp eq %"class.blink::NGBreakToken"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %49, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #8
  br label %54

54:                                               ; preds = %45, %52
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink12NGBreakTokenEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2006"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %31, align 8
  %33 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2006"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2006"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2006"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2006"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %5, align 8
  %7 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*
  %10 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2006"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2006"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2007"* %19, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #8
  %46 = load %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*
  %51 = icmp eq %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2007"* %53, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2006"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2006", %"class.WTF::Vector.2006"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink26NGContainerFragmentBuilder15ChildWithOffsetEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink26NGContainerFragmentBuilder15ChildWithOffsetELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.2007"*, %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGLogicalOutOfFlowPositionedNode"* @_ZN3WTF15ConstructTraitsIN5blink32NGLogicalOutOfFlowPositionedNodeENS_12VectorTraitsIS2_EENS_18PartitionAllocatorEE9ConstructIJRNS1_11NGBlockNodeENS1_23NGLogicalStaticPositionEDnRbNS1_17NGContainingBlockINS1_13LogicalOffsetEEESE_RKN4absl8optionalINS1_11LogicalRectEEEEEEPS2_PvDpOT_(i8*, %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGLogicalStaticPosition"* dereferenceable(16), i8** dereferenceable(8), i8* dereferenceable(1), %"struct.blink::NGContainingBlock"* dereferenceable(24), %"struct.blink::NGContainingBlock"* dereferenceable(24), %"class.absl::optional.1868"* dereferenceable(20)) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"class.absl::optional_internal::optional_data_dtor_base.1871", align 8
  %10 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %11 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %12 = alloca { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }, align 8
  %13 = bitcast i8* %0 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  %14 = bitcast %"class.blink::NGBlockNode"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"struct.blink::NGLogicalStaticPosition"* %2 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 4
  %18 = load i8, i8* %4, align 1, !range !2
  %19 = bitcast %"struct.blink::NGContainingBlock"* %5 to i8*
  %20 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %19, i64 16, i1 false)
  %21 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %5, i64 0, i32 2, i32 0
  %22 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %21, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %21, align 8
  %23 = bitcast %"struct.blink::NGContainingBlock"* %6 to i8*
  %24 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %23, i64 16, i1 false)
  %25 = getelementptr inbounds %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock"* %6, i64 0, i32 2, i32 0
  %26 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %25, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %25, align 8
  %27 = getelementptr inbounds %"class.absl::optional.1868", %"class.absl::optional.1868"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset" }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28)
  %29 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1871", %"class.absl::optional_internal::optional_data_dtor_base.1871"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %29)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 4 %27, i64 20, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %24, i64 16, i1 false)
  %30 = bitcast i8* %0 to i64*
  store i64 %15, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %0, i64 8
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds i8, i8* %0, i64 24
  %34 = bitcast i8* %33 to %"class.blink::LayoutInline"**
  store %"class.blink::LayoutInline"* null, %"class.blink::LayoutInline"** %34, align 8
  %35 = getelementptr inbounds i8, i8* %0, i64 32
  store i8 %18, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %0, i64 36
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %0, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %20, i64 16, i1 false)
  %39 = getelementptr inbounds i8, i8* %0, i64 56
  %40 = bitcast i8* %39 to %"class.blink::NGPhysicalFragment"**
  store %"class.blink::NGPhysicalFragment"* %22, %"class.blink::NGPhysicalFragment"** %40, align 8
  %41 = icmp eq %"class.blink::NGPhysicalFragment"* %22, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #8
  br label %44

44:                                               ; preds = %42, %8
  %45 = getelementptr inbounds i8, i8* %0, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %28, i64 16, i1 false)
  %46 = getelementptr inbounds i8, i8* %0, i64 80
  %47 = bitcast i8* %46 to %"class.blink::NGPhysicalFragment"**
  store %"class.blink::NGPhysicalFragment"* %26, %"class.blink::NGPhysicalFragment"** %47, align 8
  %48 = icmp eq %"class.blink::NGPhysicalFragment"* %26, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %0, i64 88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %29, i64 20, i1 false)
  br label %58

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #8
  %53 = getelementptr inbounds i8, i8* %0, i64 88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %29, i64 20, i1 false)
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #8
  %54 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %26) #8
  br label %58

58:                                               ; preds = %57, %51, %49
  br i1 %41, label %65, label %59

59:                                               ; preds = %58
  %60 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #8
  %61 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %22) #8
  br label %65

65:                                               ; preds = %58, %59, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29)
  ret %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %13
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.1865"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"* dereferenceable(112)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  %8 = icmp ugt %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 112
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %0, i32 %22) #8
  %36 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %1 to i64
  %39 = ptrtoint %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 112
  %42 = getelementptr inbounds %"class.WTF::Vector.1865", %"class.WTF::Vector.1865"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !4

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink32NGLogicalOutOfFlowPositionedNodeEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink32NGLogicalOutOfFlowPositionedNodeEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1865"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 112
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::NGLogicalOutOfFlowPositionedNode"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink32NGLogicalOutOfFlowPositionedNodeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1865"* %0, i32 %50) #8
  %64 = load %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, %"struct.blink::NGLogicalOutOfFlowPositionedNode"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::NGLogicalOutOfFlowPositionedNode"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72
  %74 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %73 to i8*
  %75 = bitcast %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 40, i1 false) #8
  %76 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 6
  %77 = bitcast %"struct.blink::NGContainingBlock"* %76 to i8*
  %78 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 6
  %79 = bitcast %"struct.blink::NGContainingBlock"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %79, i64 16, i1 false) #8
  %80 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 6, i32 2, i32 0
  %81 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %80, align 8
  %82 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 6, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %81, %"class.blink::NGPhysicalFragment"** %82, align 8
  %83 = icmp eq %"class.blink::NGPhysicalFragment"* %81, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %81, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #8
  br label %86

86:                                               ; preds = %84, %68
  %87 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 7
  %88 = bitcast %"struct.blink::NGContainingBlock"* %87 to i8*
  %89 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 7
  %90 = bitcast %"struct.blink::NGContainingBlock"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %90, i64 16, i1 false) #8
  %91 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 7, i32 2, i32 0
  %92 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 7, i32 2, i32 0
  store %"class.blink::NGPhysicalFragment"* %92, %"class.blink::NGPhysicalFragment"** %93, align 8
  %94 = icmp eq %"class.blink::NGPhysicalFragment"* %92, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %92, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %96) #8
  br label %97

97:                                               ; preds = %86, %95
  %98 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %69, i64 %72, i32 8, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.blink::NGLogicalOutOfFlowPositionedNode", %"struct.blink::NGLogicalOutOfFlowPositionedNode"* %70, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 20, i1 false) #8
  %100 = load i32, i32* %3, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.1876"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1879"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.1879"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.1879"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.1879"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.1879"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } undef, %"struct.WTF::KeyValuePair.1879"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } %79, %"struct.WTF::KeyValuePair.1879"* %78, 1
  ret { %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1879"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1876"*, %"class.blink::LayoutBox"** dereferenceable(8), %"struct.blink::NGMulticolWithPendingOOFs"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1879"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1879"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1876"* %0, %"struct.WTF::KeyValuePair.1879"* null)
  %9 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1879"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.1879"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.1879"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %129, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.1879"* %60, %"struct.WTF::KeyValuePair.1879"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.1879"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.1879"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 40, i1 false) #8
  %80 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.1879"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.1879"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %89, i64 0, i32 1
  %92 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %2 to i64*
  %93 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %91 to i64*
  %94 = load i64, i64* %92, align 8
  store i64 %94, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %89, i64 0, i32 1, i32 1
  %96 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %2, i64 0, i32 1
  %97 = bitcast %"struct.blink::NGContainingBlock"* %95 to i8*
  %98 = bitcast %"struct.blink::NGContainingBlock"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 16, i1 false) #8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %89, i64 0, i32 1, i32 1, i32 2
  %100 = getelementptr inbounds %"struct.blink::NGMulticolWithPendingOOFs", %"struct.blink::NGMulticolWithPendingOOFs"* %2, i64 0, i32 1, i32 2, i32 0
  %101 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %100, align 8
  %102 = icmp eq %"class.blink::NGPhysicalFragment"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %101, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %104) #8
  br label %105

105:                                              ; preds = %103, %87
  %106 = ptrtoint %"class.blink::NGPhysicalFragment"* %101 to i64
  %107 = bitcast %class.scoped_refptr.1782* %99 to i64*
  %108 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %99, i64 0, i32 0
  %109 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %108, align 8
  store i64 %106, i64* %107, align 8
  %110 = icmp eq %"class.blink::NGPhysicalFragment"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %109, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %112) #8
  %113 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  tail call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %109) #8
  br label %117

117:                                              ; preds = %105, %111, %116
  %118 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  %124 = shl i32 %123, 1
  %125 = load i32, i32* %12, align 8
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %117
  %128 = tail call %"struct.WTF::KeyValuePair.1879"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1876"* %0, %"struct.WTF::KeyValuePair.1879"* %89)
  br label %129

129:                                              ; preds = %58, %117, %127
  %130 = phi i8 [ 1, %117 ], [ 1, %127 ], [ 0, %58 ]
  %131 = phi %"struct.WTF::KeyValuePair.1879"* [ %89, %117 ], [ %128, %127 ], [ %60, %58 ]
  %132 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, i8 } undef, %"struct.WTF::KeyValuePair.1879"* %131, 0
  %133 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, i8 } %132, i8 %130, 1
  ret { %"struct.WTF::KeyValuePair.1879"*, i8 } %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1879"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1876"*, %"struct.WTF::KeyValuePair.1879"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 40
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink9LayoutBoxENS2_25NGMulticolWithPendingOOFsINS2_13LogicalOffsetEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1879"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %34, i1 false) #8
  br label %39

39:                                               ; preds = %31, %38
  %40 = call %"struct.WTF::KeyValuePair.1879"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1876"* %0, %"struct.WTF::KeyValuePair.1879"* %36, i32 %32, %"struct.WTF::KeyValuePair.1879"* %1) #8
  ret %"struct.WTF::KeyValuePair.1879"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1879"* @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1876"*, %"struct.WTF::KeyValuePair.1879"*, i32, %"struct.WTF::KeyValuePair.1879"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1876", align 8
  %6 = bitcast %"class.WTF::HashTable.1876"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1876"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1879"* %1, %"struct.WTF::KeyValuePair.1879"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1876"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1876"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %22 to i64
  br label %65

24:                                               ; preds = %112
  %25 = bitcast %"class.WTF::HashTable.1876"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1876"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %113, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1879"* [ null, %16 ], [ %116, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %114, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1879"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %56, %39
  %42 = phi i64 [ 0, %39 ], [ %57, %56 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBox"* %44, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %35, i64 %42, i32 1, i32 1, i32 2, i32 0
  %48 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %47, align 8
  %49 = icmp eq %"class.blink::NGPhysicalFragment"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #8
  %52 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %48) #8
  br label %56

56:                                               ; preds = %55, %50, %46, %41
  %57 = add nuw nsw i64 %42, 1
  %58 = icmp eq i64 %57, %40
  br i1 %58, label %59, label %41

59:                                               ; preds = %56, %37
  %60 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %61

61:                                               ; preds = %28, %59
  %62 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, -2147483648
  store i32 %64, i32* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.1879"* %33

65:                                               ; preds = %21, %112
  %66 = phi i64 [ %113, %112 ], [ %23, %21 ]
  %67 = phi i32 [ %114, %112 ], [ %13, %21 ]
  %68 = phi %"struct.WTF::KeyValuePair.1879"* [ %115, %112 ], [ %22, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.1879"* [ %116, %112 ], [ null, %21 ]
  %70 = phi i32 [ %117, %112 ], [ 0, %21 ]
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %68, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair.1879"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  switch i64 %74, label %75 [
    i64 -1, label %112
    i64 0, label %112
  ]

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %72, i64 0, i32 0
  %77 = call { %"struct.WTF::KeyValuePair.1879"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1876"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %76) #8
  %78 = extractvalue { %"struct.WTF::KeyValuePair.1879"*, i8 } %77, 0
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %78, i64 0, i32 1, i32 1, i32 2, i32 0
  %80 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %79, align 8
  %81 = icmp eq %"class.blink::NGPhysicalFragment"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #8
  %84 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  call void @_ZN5blink24NGPhysicalFragmentTraits8DestructEPKNS_18NGPhysicalFragmentE(%"class.blink::NGPhysicalFragment"* nonnull %80) #8
  br label %88

88:                                               ; preds = %75, %82, %87
  %89 = load i64, i64* %73, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.1879"* %78 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %78, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %68, i64 %71, i32 1
  %93 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %92 to i64*
  %94 = bitcast %"struct.blink::NGMulticolWithPendingOOFs"* %91 to i64*
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %78, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %68, i64 %71, i32 1, i32 1
  %98 = bitcast %"struct.blink::NGContainingBlock"* %96 to i8*
  %99 = bitcast %"struct.blink::NGContainingBlock"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 16, i1 false) #8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %78, i64 0, i32 1, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %68, i64 %71, i32 1, i32 1, i32 2
  %102 = getelementptr inbounds %class.scoped_refptr.1782, %class.scoped_refptr.1782* %101, i64 0, i32 0
  %103 = bitcast %class.scoped_refptr.1782* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.scoped_refptr.1782* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.blink::NGPhysicalFragment"* null, %"class.blink::NGPhysicalFragment"** %102, align 8
  %106 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %15, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %106, i64 %71
  %108 = icmp eq %"struct.WTF::KeyValuePair.1879"* %107, %3
  %109 = select i1 %108, %"struct.WTF::KeyValuePair.1879"* %78, %"struct.WTF::KeyValuePair.1879"* %69
  %110 = load i32, i32* %12, align 8
  %111 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %106 to i64
  br label %112

112:                                              ; preds = %65, %65, %88
  %113 = phi i64 [ %66, %65 ], [ %111, %88 ], [ %66, %65 ]
  %114 = phi i32 [ %67, %65 ], [ %110, %88 ], [ %67, %65 ]
  %115 = phi %"struct.WTF::KeyValuePair.1879"* [ %68, %65 ], [ %106, %88 ], [ %68, %65 ]
  %116 = phi %"struct.WTF::KeyValuePair.1879"* [ %69, %65 ], [ %109, %88 ], [ %69, %65 ]
  %117 = add i32 %70, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %24, label %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1879"*, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxENS_12KeyValuePairIS3_NS1_25NGMulticolWithPendingOOFsINS1_13LogicalOffsetEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1876"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1879"*, %"struct.WTF::KeyValuePair.1879"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1876", %"class.WTF::HashTable.1876"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1879"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1879"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1879"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1879"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1879", %"struct.WTF::KeyValuePair.1879"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1879"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, i8 } undef, %"struct.WTF::KeyValuePair.1879"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1879"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1879"*, i8 } %85
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink21NGPhysicalBoxFragment24MulticolsWithPendingOOFsEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink21NGPhysicalBoxFragment24MulticolsWithPendingOOFsEv"}
