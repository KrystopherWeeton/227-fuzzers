; ModuleID = '../../native_client/src/trusted/service_runtime/linux/nacl_thread_nice.c'
source_filename = "../../native_client/src/trusted/service_runtime/linux/nacl_thread_nice.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [42 x i8] c"nacl_thread_nice failed (bad nice value)\0A\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @NaClThreadNiceInit() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @nacl_thread_nice(i32) local_unnamed_addr #1 {
  switch i32 %0, label %11 [
    i32 -5, label %2
    i32 0, label %5
    i32 5, label %8
  ]

2:                                                ; preds = %1
  %3 = tail call i32 @setpriority(i32 0, i32 0, i32 -10) #4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2, %1
  %6 = tail call i32 @setpriority(i32 0, i32 0, i32 0) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %12

8:                                                ; preds = %1
  %9 = tail call i32 @setpriority(i32 0, i32 0, i32 10) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %12

11:                                               ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #4
  br label %13

12:                                               ; preds = %8, %5
  br label %13

13:                                               ; preds = %8, %5, %2, %12, %11
  %14 = phi i32 [ -1, %11 ], [ -1, %12 ], [ 0, %2 ], [ 0, %5 ], [ 0, %8 ]
  ret i32 %14
}

; Function Attrs: nounwind
declare i32 @setpriority(i32, i32, i32) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
