; ModuleID = '../../chrome/browser/ui/tabs/existing_window_sub_menu_model.cc'
source_filename = "../../chrome/browser/ui/tabs/existing_window_sub_menu_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExistingWindowSubMenuModel = type { %class.ExistingBaseSubMenuModel.base, [4 x i8] }
%class.ExistingBaseSubMenuModel.base = type <{ %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, %"class.content::WebContents"*, i32 }>
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.14" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.7", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.7" = type { %"class.absl::variant_internal::VariantStateBase.8" }
%"class.absl::variant_internal::VariantStateBase.8" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector.19", %"class.std::__1::unique_ptr.26", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList", %class.Profile*, i8, %"class.std::__1::unique_ptr.37", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.64" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.TabGroupModel* }
%class.TabGroupModel = type opaque
%class.TabStripModelDelegate = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.30", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.32" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.Profile = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.TabStripModelOrderController* }
%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.51" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i32*, i32*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.58 }
%union.anon.58 = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.59, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.61" }
%class.scoped_refptr.59 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.60" }>
%"class.base::RefCountedThreadSafe.60" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.61" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.62 }
%class.scoped_refptr.62 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.63", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.63" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.64" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"class.std::__1::__compressed_pair.81" }
%"struct.ExistingBaseSubMenuModel::MenuItemInfo" = type <{ %"class.std::__1::basic_string", %"class.absl::optional.76", i8, [7 x i8] }>
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { %"class.ui::ImageModel" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::basic_string"* }
%class.ExistingBaseSubMenuModel = type <{ %"class.ui::SimpleMenuModel", %"class.ui::SimpleMenuModel::Delegate", %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, %"class.content::WebContents"*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.gfx::FontList" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque

$_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

@_ZTV26ExistingWindowSubMenuModel = hidden unnamed_addr constant { [38 x i8*], [15 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExistingWindowSubMenuModel*)* @_ZN26ExistingWindowSubMenuModelD2Ev to i8*), i8* bitcast (void (%class.ExistingWindowSubMenuModel*)* @_ZN26ExistingWindowSubMenuModelD0Ev to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*)* @_ZNK2ui15SimpleMenuModel8HasIconsEv to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*)* @_ZNK2ui15SimpleMenuModel12GetItemCountEv to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel9GetTypeAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel18GetSeparatorTypeAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetCommandIdAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel10GetLabelAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetMinorTextAtEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14GetMinorIconAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel15IsItemDynamicAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel18MayHaveMnemonicsAtEi to i8*), i8* bitcast (%"class.gfx::FontList"* (%"class.ui::MenuModel"*, i32)* @_ZNK2ui9MenuModel18GetLabelFontListAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32, %"class.ui::Accelerator"*)* @_ZNK2ui15SimpleMenuModel16GetAcceleratorAtEiPNS_11AcceleratorE to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel15IsItemCheckedAtEi to i8*), i8* bitcast (i32 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel12GetGroupIdAtEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel9GetIconAtEi to i8*), i8* bitcast (%"class.ui::ButtonMenuItemModel"* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel19GetButtonMenuItemAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsEnabledAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsVisibleAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel11IsAlertedAtEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel14IsNewFeatureAtEi to i8*), i8* bitcast (i8* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel22GetElementIdentifierAtEi to i8*), i8* bitcast (%"class.ui::MenuModel"* (%"class.ui::SimpleMenuModel"*, i32)* @_ZNK2ui15SimpleMenuModel17GetSubmenuModelAtEi to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*, i32)* @_ZN2ui15SimpleMenuModel11ActivatedAtEi to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*, i32, i32)* @_ZN2ui15SimpleMenuModel11ActivatedAtEii to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel12MenuWillShowEv to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel13MenuWillCloseEv to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel16MenuItemsChangedEv to i8*), i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32, %"class.ui::Accelerator"*)* @_ZNK26ExistingWindowSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE to i8*), i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32)* @_ZNK26ExistingWindowSubMenuModel18IsCommandIdCheckedEi to i8*), i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32)* @_ZNK26ExistingWindowSubMenuModel18IsCommandIdEnabledEi to i8*), i8* bitcast (void (%class.ExistingBaseSubMenuModel*, i32, i32)* @_ZN24ExistingBaseSubMenuModel14ExecuteCommandEii to i8*), i8* bitcast (void (%class.ExistingWindowSubMenuModel*, i32)* @_ZN26ExistingWindowSubMenuModel17ExecuteNewCommandEi to i8*), i8* bitcast (void (%class.ExistingWindowSubMenuModel*, i32)* @_ZN26ExistingWindowSubMenuModel22ExecuteExistingCommandEi to i8*)], [15 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32, %"class.ui::Accelerator"*)* @_ZThn72_NK26ExistingWindowSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE to i8*), i8* bitcast (void (%class.ExistingWindowSubMenuModel*)* @_ZThn72_N26ExistingWindowSubMenuModelD1Ev to i8*), i8* bitcast (void (%class.ExistingWindowSubMenuModel*)* @_ZThn72_N26ExistingWindowSubMenuModelD0Ev to i8*), i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32)* @_ZThn72_NK26ExistingWindowSubMenuModel18IsCommandIdCheckedEi to i8*), i8* bitcast (i1 (%class.ExistingWindowSubMenuModel*, i32)* @_ZThn72_NK26ExistingWindowSubMenuModel18IsCommandIdEnabledEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdVisibleEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdAlertedEi to i8*), i8* bitcast (i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate25IsItemForCommandIdDynamicEi to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate20GetLabelForCommandIdEi to i8*), i8* bitcast (void (%"class.ui::ImageModel"*, %"class.ui::SimpleMenuModel::Delegate"*, i32)* @_ZNK2ui15SimpleMenuModel8Delegate19GetIconForCommandIdEi to i8*), i8* bitcast (void (%class.ExistingBaseSubMenuModel*, i32, i32)* @_ZThn72_N24ExistingBaseSubMenuModel14ExecuteCommandEii to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel8Delegate14OnMenuWillShowEPS0_ to i8*), i8* bitcast (void (%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*)* @_ZN2ui15SimpleMenuModel8Delegate10MenuClosedEPS0_ to i8*)] }, align 8

@_ZN26ExistingWindowSubMenuModelC1EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli = hidden unnamed_addr alias void (%class.ExistingWindowSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32), void (%class.ExistingWindowSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32)* @_ZN26ExistingWindowSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli
@_ZN26ExistingWindowSubMenuModelD1Ev = hidden unnamed_addr alias void (%class.ExistingWindowSubMenuModel*), void (%class.ExistingWindowSubMenuModel*)* @_ZN26ExistingWindowSubMenuModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExistingWindowSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModeli(%class.ExistingWindowSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.74", align 8
  %6 = alloca %"class.std::__1::vector.86", align 8
  %7 = alloca %"struct.ExistingBaseSubMenuModel::MenuItemInfo", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector.74", align 8
  %10 = bitcast %class.ExistingWindowSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModelii(%class.ExistingBaseSubMenuModel* %10, %"class.ui::SimpleMenuModel::Delegate"* %1, %class.TabStripModel* %2, i32 %3, i32 1001) #9
  %11 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [15 x i8*] }, { [38 x i8*], [15 x i8*] }* @_ZTV26ExistingWindowSubMenuModel, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [15 x i8*] }, { [38 x i8*], [15 x i8*] }* @_ZTV26ExistingWindowSubMenuModel, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = bitcast %"class.std::__1::vector.74"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %5, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %5, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #9
  %17 = bitcast %"class.std::__1::vector.86"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %6, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.86"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN13TabStripModel29GetExistingWindowsForMoveMenuEv(%"class.std::__1::vector.86"* nonnull sret %6, %class.TabStripModel* %2) #9
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %23 = icmp eq %"class.std::__1::basic_string"* %21, %22
  br i1 %23, label %40, label %24

24:                                               ; preds = %4
  %25 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %7 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %31 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15 to i64*
  br label %133

34:                                               ; preds = %324
  %35 = load i64, i64* %33, align 8
  %36 = bitcast %"class.std::__1::vector.74"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = inttoptr i64 %37 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %39 = inttoptr i64 %35 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  br label %40

40:                                               ; preds = %4, %34
  %41 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %39, %34 ], [ null, %4 ]
  %42 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %38, %34 ], [ null, %4 ]
  %43 = phi i64 [ %37, %34 ], [ 0, %4 ]
  %44 = phi i64 [ %35, %34 ], [ 0, %4 ]
  %45 = bitcast %"class.std::__1::vector.74"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #9
  %46 = sub i64 %44, %43
  %47 = sdiv exact i64 %46, 88
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %74, label %49

49:                                               ; preds = %40
  %50 = icmp ugt i64 %47, 209622091746699450
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector.74"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %52) #10
  unreachable

53:                                               ; preds = %49
  %54 = call i8* @_Znwm(i64 %46) #11
  %55 = bitcast i8* %54 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %56 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %9, i64 0, i32 0, i32 1
  %57 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %56 to i8**
  store i8* %54, i8** %57, align 8
  %58 = bitcast %"class.std::__1::vector.74"* %9 to i8**
  store i8* %54, i8** %58, align 8
  %59 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %55, i64 %47
  %60 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %59, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %60, align 8
  %61 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %56 to i64*
  %62 = ptrtoint i8* %54 to i64
  %63 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %42, %41
  br i1 %63, label %72, label %64

64:                                               ; preds = %53, %64
  %65 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %68, %64 ], [ %55, %53 ]
  %66 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %67, %64 ], [ %42, %53 ]
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %65, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %66) #9
  %67 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %66, i64 1
  %68 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %65, i64 1
  %69 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %67, %41
  br i1 %69, label %70, label %64

70:                                               ; preds = %64
  %71 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %68 to i64
  br label %72

72:                                               ; preds = %70, %53
  %73 = phi i64 [ %62, %53 ], [ %71, %70 ]
  store i64 %73, i64* %61, align 8
  br label %74

74:                                               ; preds = %40, %72
  call void @_ZN24ExistingBaseSubMenuModel5BuildEiNSt3__16vectorINS_12MenuItemInfoENS0_9allocatorIS2_EEEE(%class.ExistingBaseSubMenuModel* %10, i32 8189, %"class.std::__1::vector.74"* nonnull %9) #9
  %75 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %9, i64 0, i32 0, i32 0
  %76 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %75, align 8
  %77 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %76, null
  br i1 %77, label %92, label %78

78:                                               ; preds = %74
  %79 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %76 to i8*
  %80 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %9, i64 0, i32 0, i32 1
  %81 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %80, align 8
  %82 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %81, %76
  br i1 %82, label %90, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %85, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %84, i64 -1
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %85) #9
  %86 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %85, %76
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::vector.74"* %9 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %78
  %91 = phi i8* [ %89, %87 ], [ %79, %78 ]
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %76, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %80, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %74, %90
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %94 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %94, label %116, label %95

95:                                               ; preds = %92
  %96 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  %97 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %98 = icmp eq %"class.std::__1::basic_string"* %97, %93
  br i1 %98, label %114, label %99

99:                                               ; preds = %95, %109
  %100 = phi %"class.std::__1::basic_string"* [ %101, %109 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 -1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %99
  %107 = bitcast %"class.std::__1::basic_string"* %101 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #11
  br label %109

109:                                              ; preds = %106, %99
  %110 = icmp eq %"class.std::__1::basic_string"* %101, %93
  br i1 %110, label %111, label %99

111:                                              ; preds = %109
  %112 = bitcast %"class.std::__1::vector.86"* %6 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %95
  %115 = phi i8* [ %113, %111 ], [ %96, %95 ]
  store %"class.std::__1::basic_string"* %93, %"class.std::__1::basic_string"** %19, align 8
  call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %92, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %117 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %14, align 8
  %118 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %117 to i8*
  %121 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15, align 8
  %122 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %121, %117
  br i1 %122, label %130, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %125, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %124, i64 -1
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %125) #9
  %126 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %125, %117
  br i1 %126, label %127, label %123

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::vector.74"* %5 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %119
  %131 = phi i8* [ %129, %127 ], [ %120, %119 ]
  store %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %117, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15, align 8
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %116, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  ret void

133:                                              ; preds = %24, %324
  %134 = phi %"class.std::__1::basic_string"* [ %21, %24 ], [ %327, %324 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #9
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %140, i64 24, i1 false) #9
  br label %311

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i16*, i16** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = icmp ult i64 %145, 11
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = trunc i64 %145 to i8
  store i8 %148, i8* %32, align 1
  br label %163

149:                                              ; preds = %141
  %150 = icmp ugt i64 %145, 9223372036854775791
  br i1 %150, label %151, label %153

151:                                              ; preds = %149
  %152 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %152) #10
  unreachable

153:                                              ; preds = %149
  %154 = add nuw nsw i64 %145, 8
  %155 = and i64 %154, -8
  %156 = icmp slt i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %153
  call void @abort() #10
  unreachable

158:                                              ; preds = %153
  %159 = shl i64 %155, 1
  %160 = call i8* @_Znwm(i64 %159) #11
  %161 = bitcast i8* %160 to i16*
  store i8* %160, i8** %27, align 8
  %162 = or i64 %155, -9223372036854775808
  store i64 %162, i64* %28, align 8
  store i64 %145, i64* %29, align 8
  br label %163

163:                                              ; preds = %158, %147
  %164 = phi i16* [ %30, %147 ], [ %161, %158 ]
  %165 = add nuw nsw i64 %145, 1
  %166 = add i64 %145, 1
  %167 = icmp ult i64 %166, 16
  br i1 %167, label %258, label %168

168:                                              ; preds = %163
  %169 = getelementptr i16, i16* %164, i64 1
  %170 = getelementptr i16, i16* %169, i64 %145
  %171 = getelementptr i16, i16* %143, i64 1
  %172 = getelementptr i16, i16* %171, i64 %145
  %173 = icmp ult i16* %164, %172
  %174 = icmp ult i16* %143, %170
  %175 = and i1 %173, %174
  br i1 %175, label %258, label %176

176:                                              ; preds = %168
  %177 = and i64 %166, -16
  %178 = sub i64 %165, %177
  %179 = getelementptr i16, i16* %143, i64 %177
  %180 = getelementptr i16, i16* %164, i64 %177
  %181 = add i64 %177, -16
  %182 = lshr exact i64 %181, 4
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 3
  %185 = icmp ult i64 %181, 48
  br i1 %185, label %237, label %186

186:                                              ; preds = %176
  %187 = sub nsw i64 %183, %184
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi i64 [ 0, %186 ], [ %234, %188 ]
  %190 = phi i64 [ %187, %186 ], [ %235, %188 ]
  %191 = getelementptr i16, i16* %143, i64 %189
  %192 = getelementptr i16, i16* %164, i64 %189
  %193 = bitcast i16* %191 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !2
  %195 = getelementptr i16, i16* %191, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  %197 = load <8 x i16>, <8 x i16>* %196, align 2, !alias.scope !2
  %198 = bitcast i16* %192 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %198, align 2, !alias.scope !5, !noalias !2
  %199 = getelementptr i16, i16* %192, i64 8
  %200 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %197, <8 x i16>* %200, align 2, !alias.scope !5, !noalias !2
  %201 = or i64 %189, 16
  %202 = getelementptr i16, i16* %143, i64 %201
  %203 = getelementptr i16, i16* %164, i64 %201
  %204 = bitcast i16* %202 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !2
  %206 = getelementptr i16, i16* %202, i64 8
  %207 = bitcast i16* %206 to <8 x i16>*
  %208 = load <8 x i16>, <8 x i16>* %207, align 2, !alias.scope !2
  %209 = bitcast i16* %203 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %209, align 2, !alias.scope !5, !noalias !2
  %210 = getelementptr i16, i16* %203, i64 8
  %211 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %208, <8 x i16>* %211, align 2, !alias.scope !5, !noalias !2
  %212 = or i64 %189, 32
  %213 = getelementptr i16, i16* %143, i64 %212
  %214 = getelementptr i16, i16* %164, i64 %212
  %215 = bitcast i16* %213 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !2
  %217 = getelementptr i16, i16* %213, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !2
  %220 = bitcast i16* %214 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %220, align 2, !alias.scope !5, !noalias !2
  %221 = getelementptr i16, i16* %214, i64 8
  %222 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %222, align 2, !alias.scope !5, !noalias !2
  %223 = or i64 %189, 48
  %224 = getelementptr i16, i16* %143, i64 %223
  %225 = getelementptr i16, i16* %164, i64 %223
  %226 = bitcast i16* %224 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !2
  %228 = getelementptr i16, i16* %224, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !2
  %231 = bitcast i16* %225 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %231, align 2, !alias.scope !5, !noalias !2
  %232 = getelementptr i16, i16* %225, i64 8
  %233 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %233, align 2, !alias.scope !5, !noalias !2
  %234 = add i64 %189, 64
  %235 = add i64 %190, -4
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %188, !llvm.loop !7

237:                                              ; preds = %188, %176
  %238 = phi i64 [ 0, %176 ], [ %234, %188 ]
  %239 = icmp eq i64 %184, 0
  br i1 %239, label %256, label %240

240:                                              ; preds = %237, %240
  %241 = phi i64 [ %253, %240 ], [ %238, %237 ]
  %242 = phi i64 [ %254, %240 ], [ %184, %237 ]
  %243 = getelementptr i16, i16* %143, i64 %241
  %244 = getelementptr i16, i16* %164, i64 %241
  %245 = bitcast i16* %243 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !2
  %247 = getelementptr i16, i16* %243, i64 8
  %248 = bitcast i16* %247 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !2
  %250 = bitcast i16* %244 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %250, align 2, !alias.scope !5, !noalias !2
  %251 = getelementptr i16, i16* %244, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %249, <8 x i16>* %252, align 2, !alias.scope !5, !noalias !2
  %253 = add i64 %241, 16
  %254 = add i64 %242, -1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %240, !llvm.loop !9

256:                                              ; preds = %240, %237
  %257 = icmp eq i64 %166, %177
  br i1 %257, label %311, label %258

258:                                              ; preds = %256, %168, %163
  %259 = phi i64 [ %165, %168 ], [ %165, %163 ], [ %178, %256 ]
  %260 = phi i16* [ %143, %168 ], [ %143, %163 ], [ %179, %256 ]
  %261 = phi i16* [ %164, %168 ], [ %164, %163 ], [ %180, %256 ]
  %262 = add i64 %259, -1
  %263 = and i64 %259, 7
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %276, label %265

265:                                              ; preds = %258, %265
  %266 = phi i64 [ %271, %265 ], [ %259, %258 ]
  %267 = phi i16* [ %273, %265 ], [ %260, %258 ]
  %268 = phi i16* [ %272, %265 ], [ %261, %258 ]
  %269 = phi i64 [ %274, %265 ], [ %263, %258 ]
  %270 = load i16, i16* %267, align 2
  store i16 %270, i16* %268, align 2
  %271 = add i64 %266, -1
  %272 = getelementptr inbounds i16, i16* %268, i64 1
  %273 = getelementptr inbounds i16, i16* %267, i64 1
  %274 = add i64 %269, -1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %265, !llvm.loop !11

276:                                              ; preds = %265, %258
  %277 = phi i64 [ %259, %258 ], [ %271, %265 ]
  %278 = phi i16* [ %260, %258 ], [ %273, %265 ]
  %279 = phi i16* [ %261, %258 ], [ %272, %265 ]
  %280 = icmp ult i64 %262, 7
  br i1 %280, label %311, label %281

281:                                              ; preds = %276, %281
  %282 = phi i64 [ %307, %281 ], [ %277, %276 ]
  %283 = phi i16* [ %309, %281 ], [ %278, %276 ]
  %284 = phi i16* [ %308, %281 ], [ %279, %276 ]
  %285 = load i16, i16* %283, align 2
  store i16 %285, i16* %284, align 2
  %286 = getelementptr inbounds i16, i16* %284, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = load i16, i16* %287, align 2
  store i16 %288, i16* %286, align 2
  %289 = getelementptr inbounds i16, i16* %284, i64 2
  %290 = getelementptr inbounds i16, i16* %283, i64 2
  %291 = load i16, i16* %290, align 2
  store i16 %291, i16* %289, align 2
  %292 = getelementptr inbounds i16, i16* %284, i64 3
  %293 = getelementptr inbounds i16, i16* %283, i64 3
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = getelementptr inbounds i16, i16* %284, i64 4
  %296 = getelementptr inbounds i16, i16* %283, i64 4
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2
  %298 = getelementptr inbounds i16, i16* %284, i64 5
  %299 = getelementptr inbounds i16, i16* %283, i64 5
  %300 = load i16, i16* %299, align 2
  store i16 %300, i16* %298, align 2
  %301 = getelementptr inbounds i16, i16* %284, i64 6
  %302 = getelementptr inbounds i16, i16* %283, i64 6
  %303 = load i16, i16* %302, align 2
  store i16 %303, i16* %301, align 2
  %304 = getelementptr inbounds i16, i16* %284, i64 7
  %305 = getelementptr inbounds i16, i16* %283, i64 7
  %306 = load i16, i16* %305, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %282, -8
  %308 = getelementptr inbounds i16, i16* %284, i64 8
  %309 = getelementptr inbounds i16, i16* %283, i64 8
  %310 = icmp eq i64 %307, 0
  br i1 %310, label %311, label %281, !llvm.loop !12

311:                                              ; preds = %276, %281, %256, %139
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8) #9
  %312 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15, align 8
  %313 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %16, align 8
  %314 = icmp ult %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %312, %313
  br i1 %314, label %315, label %318

315:                                              ; preds = %311
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %312, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull dereferenceable(88) %7) #9
  %316 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %312, i64 1
  %317 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %316 to i64
  store i64 %317, i64* %33, align 8
  br label %319

318:                                              ; preds = %311
  call void @_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.74"* nonnull %5, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull dereferenceable(88) %7) #9
  br label %319

319:                                              ; preds = %315, %318
  call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* nonnull %7) #9
  %320 = load i8, i8* %32, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %324

322:                                              ; preds = %319
  %323 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %323) #11
  br label %324

324:                                              ; preds = %319, %322
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #9
  %325 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15, align 8
  %326 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %325, i64 -1, i32 2
  store i8 0, i8* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 1
  %328 = icmp eq %"class.std::__1::basic_string"* %327, %22
  br i1 %328, label %34, label %133
}

declare void @_ZN24ExistingBaseSubMenuModelC2EPN2ui15SimpleMenuModel8DelegateEP13TabStripModelii(%class.ExistingBaseSubMenuModel*, %"class.ui::SimpleMenuModel::Delegate"*, %class.TabStripModel*, i32, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN13TabStripModel29GetExistingWindowsForMoveMenuEv(%"class.std::__1::vector.86"* sret, %class.TabStripModel*) local_unnamed_addr #1

declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"class.std::__1::basic_string"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN24ExistingBaseSubMenuModel5BuildEiNSt3__16vectorINS_12MenuItemInfoENS0_9allocatorIS2_EEEE(%class.ExistingBaseSubMenuModel*, i32, %"class.std::__1::vector.74"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExistingWindowSubMenuModelD2Ev(%class.ExistingWindowSubMenuModel*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.ExistingWindowSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N26ExistingWindowSubMenuModelD1Ev(%class.ExistingWindowSubMenuModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExistingWindowSubMenuModelD0Ev(%class.ExistingWindowSubMenuModel*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.ExistingWindowSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %2) #9
  %3 = bitcast %class.ExistingWindowSubMenuModel* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N26ExistingWindowSubMenuModelD0Ev(%class.ExistingWindowSubMenuModel*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to %class.ExistingBaseSubMenuModel*
  tail call void @_ZN24ExistingBaseSubMenuModelD2Ev(%class.ExistingBaseSubMenuModel* %3) #9
  %4 = bitcast %"class.std::__1::__compressed_pair.14"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26ExistingWindowSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE(%class.ExistingWindowSubMenuModel* nocapture readonly, i32, %"class.ui::Accelerator"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 2
  %9 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %8, align 8
  %10 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %9 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)***
  %11 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)*** %10, align 8
  %12 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.ui::SimpleMenuModel::Delegate"* %9, i32 18, %"class.ui::Accelerator"* %2) #9
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi i1 [ %13, %7 ], [ false, %3 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_NK26ExistingWindowSubMenuModel26GetAcceleratorForCommandIdEiPN2ui11AcceleratorE(%class.ExistingWindowSubMenuModel* nocapture readonly, i32, %"class.ui::Accelerator"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %4, i64 13
  %6 = bitcast %"class.std::__1::__compressed_pair.14"* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %4, i64 10
  %11 = bitcast %"class.std::__1::__compressed_pair.14"* %10 to %"class.ui::SimpleMenuModel::Delegate"**
  %12 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %11, align 8
  %13 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %12 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)***
  %14 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)*** %13, align 8
  %15 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32, %"class.ui::Accelerator"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.ui::SimpleMenuModel::Delegate"* %12, i32 18, %"class.ui::Accelerator"* %2) #9
  br label %17

17:                                               ; preds = %3, %9
  %18 = phi i1 [ %16, %9 ], [ false, %3 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26ExistingWindowSubMenuModel18IsCommandIdCheckedEi(%class.ExistingWindowSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 2
  %8 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %7, align 8
  %9 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %8 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)***
  %10 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %10, i64 3
  %12 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.ui::SimpleMenuModel::Delegate"* %8, i32 18) #9
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i1 [ %13, %6 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_NK26ExistingWindowSubMenuModel18IsCommandIdCheckedEi(%class.ExistingWindowSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %3, i64 13
  %5 = bitcast %"class.std::__1::__compressed_pair.14"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %3, i64 10
  %10 = bitcast %"class.std::__1::__compressed_pair.14"* %9 to %"class.ui::SimpleMenuModel::Delegate"**
  %11 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %10, align 8
  %12 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %11 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)***
  %13 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %13, i64 3
  %15 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.ui::SimpleMenuModel::Delegate"* %11, i32 18) #9
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi i1 [ %16, %8 ], [ false, %2 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK26ExistingWindowSubMenuModel18IsCommandIdEnabledEi(%class.ExistingWindowSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 2
  %8 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %7, align 8
  %9 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %8 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)***
  %10 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %10, i64 4
  %12 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.ui::SimpleMenuModel::Delegate"* %8, i32 18) #9
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i1 [ %13, %6 ], [ true, %2 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn72_NK26ExistingWindowSubMenuModel18IsCommandIdEnabledEi(%class.ExistingWindowSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 -1, i32 0, i32 0, i32 1, i32 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %3, i64 13
  %5 = bitcast %"class.std::__1::__compressed_pair.14"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.14"* %3, i64 10
  %10 = bitcast %"class.std::__1::__compressed_pair.14"* %9 to %"class.ui::SimpleMenuModel::Delegate"**
  %11 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %10, align 8
  %12 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %11 to i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)***
  %13 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)**, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %13, i64 4
  %15 = load i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)*, i1 (%"class.ui::SimpleMenuModel::Delegate"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.ui::SimpleMenuModel::Delegate"* %11, i32 18) #9
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi i1 [ %16, %8 ], [ true, %2 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN26ExistingWindowSubMenuModel17ShouldShowSubmenuEP7Profile(%class.Profile*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN6chrome21GetTabbedBrowserCountEP7Profile(%class.Profile* %0) #9
  %3 = icmp ugt i64 %2, 1
  ret i1 %3
}

declare i64 @_ZN6chrome21GetTabbedBrowserCountEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExistingWindowSubMenuModel17ExecuteNewCommandEi(%class.ExistingWindowSubMenuModel* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 2
  %4 = load %"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel::Delegate"** %3, align 8
  %5 = bitcast %"class.ui::SimpleMenuModel::Delegate"* %4 to void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)***
  %6 = load void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)**, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)** %6, i64 10
  %8 = load void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)*, void (%"class.ui::SimpleMenuModel::Delegate"*, i32, i32)** %7, align 8
  tail call void %8(%"class.ui::SimpleMenuModel::Delegate"* %4, i32 18, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26ExistingWindowSubMenuModel22ExecuteExistingCommandEi(%class.ExistingWindowSubMenuModel*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.ExistingWindowSubMenuModel* %0 to %class.ExistingBaseSubMenuModel*
  %4 = getelementptr inbounds %class.ExistingWindowSubMenuModel, %class.ExistingWindowSubMenuModel* %0, i64 0, i32 0, i32 3
  %5 = load %class.TabStripModel*, %class.TabStripModel** %4, align 8
  %6 = tail call i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel* %3) #9
  tail call void @_ZN13TabStripModel33ExecuteAddToExistingWindowCommandEii(%class.TabStripModel* %5, i32 %6, i32 %1) #9
  ret void
}

declare void @_ZN13TabStripModel33ExecuteAddToExistingWindowCommandEii(%class.TabStripModel*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK24ExistingBaseSubMenuModel15GetContextIndexEv(%class.ExistingBaseSubMenuModel*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8HasIconsEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel12GetItemCountEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel9GetTypeAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel18GetSeparatorTypeAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel14GetCommandIdAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel10GetLabelAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui9MenuModel19GetSecondaryLabelAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::MenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel14GetMinorTextAtEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel14GetMinorIconAtEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel15IsItemDynamicAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel18MayHaveMnemonicsAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.gfx::FontList"* @_ZNK2ui9MenuModel18GetLabelFontListAtEi(%"class.ui::MenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel16GetAcceleratorAtEiPNS_11AcceleratorE(%"class.ui::SimpleMenuModel"*, i32, %"class.ui::Accelerator"*) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel15IsItemCheckedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i32 @_ZNK2ui15SimpleMenuModel12GetGroupIdAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel9GetIconAtEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.ui::ButtonMenuItemModel"* @_ZNK2ui15SimpleMenuModel19GetButtonMenuItemAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsEnabledAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsVisibleAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel11IsAlertedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel14IsNewFeatureAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare i8* @_ZNK2ui15SimpleMenuModel22GetElementIdentifierAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare %"class.ui::MenuModel"* @_ZNK2ui15SimpleMenuModel17GetSubmenuModelAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel11ActivatedAtEi(%"class.ui::SimpleMenuModel"*, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel11ActivatedAtEii(%"class.ui::SimpleMenuModel"*, i32, i32) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel12MenuWillShowEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel13MenuWillCloseEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel16MenuItemsChangedEv(%"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN24ExistingBaseSubMenuModel14ExecuteCommandEii(%class.ExistingBaseSubMenuModel*, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdVisibleEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate18IsCommandIdAlertedEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK2ui15SimpleMenuModel8Delegate25IsItemForCommandIdDynamicEi(%"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel8Delegate20GetLabelForCommandIdEi(%"class.std::__1::basic_string"* sret, %"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

declare void @_ZNK2ui15SimpleMenuModel8Delegate19GetIconForCommandIdEi(%"class.ui::ImageModel"* sret, %"class.ui::SimpleMenuModel::Delegate"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn72_N24ExistingBaseSubMenuModel14ExecuteCommandEii(%class.ExistingBaseSubMenuModel*, i32, i32) unnamed_addr #0 align 2

declare void @_ZN2ui15SimpleMenuModel8Delegate14OnMenuWillShowEPS0_(%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*) unnamed_addr #1

declare void @_ZN2ui15SimpleMenuModel8Delegate10MenuClosedEPS0_(%"class.ui::SimpleMenuModel::Delegate"*, %"class.ui::SimpleMenuModel"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN24ExistingBaseSubMenuModel12MenuItemInfoENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.74"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.74"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 209622091746699450
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.74"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 88
  %20 = icmp ult i64 %19, 104811045873349725
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 209622091746699450, %14 ]
  %28 = mul i64 %27, 88
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %35 to i64
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %34, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %1) #9
  %37 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %34, i64 1
  %38 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %39, align 8
  %41 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3, align 8
  %42 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %47, i64 -1
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %48, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88) %49) #9
  %50 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.ExistingBaseSubMenuModel::MenuItemInfo"*
  %60 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.ExistingBaseSubMenuModel::MenuItemInfo", %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %62, i64 -1
  tail call void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoD1Ev(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %63) #9
  %64 = icmp eq %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN24ExistingBaseSubMenuModel12MenuItemInfoC1ERKS0_(%"struct.ExistingBaseSubMenuModel::MenuItemInfo"*, %"struct.ExistingBaseSubMenuModel::MenuItemInfo"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
