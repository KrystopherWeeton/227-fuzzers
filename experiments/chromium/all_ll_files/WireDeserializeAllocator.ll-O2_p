; ModuleID = '../../third_party/dawn/src/dawn_wire/WireDeserializeAllocator.cpp'
source_filename = "../../third_party/dawn/src/dawn_wire/WireDeserializeAllocator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_wire::WireDeserializeAllocator" = type { %"class.dawn_wire::DeserializeAllocator", i64, i8*, [2048 x i8], %"class.std::__1::vector" }
%"class.dawn_wire::DeserializeAllocator" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZTVN9dawn_wire24WireDeserializeAllocatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)* @_ZN9dawn_wire24WireDeserializeAllocator8GetSpaceEm to i8*), i8* bitcast (void (%"class.dawn_wire::WireDeserializeAllocator"*)* @_ZN9dawn_wire24WireDeserializeAllocatorD2Ev to i8*), i8* bitcast (void (%"class.dawn_wire::WireDeserializeAllocator"*)* @_ZN9dawn_wire24WireDeserializeAllocatorD0Ev to i8*)] }, align 8

@_ZN9dawn_wire24WireDeserializeAllocatorC1Ev = hidden unnamed_addr alias void (%"class.dawn_wire::WireDeserializeAllocator"*), void (%"class.dawn_wire::WireDeserializeAllocator"*)* @_ZN9dawn_wire24WireDeserializeAllocatorC2Ev
@_ZN9dawn_wire24WireDeserializeAllocatorD1Ev = hidden unnamed_addr alias void (%"class.dawn_wire::WireDeserializeAllocator"*), void (%"class.dawn_wire::WireDeserializeAllocator"*)* @_ZN9dawn_wire24WireDeserializeAllocatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24WireDeserializeAllocatorC2Ev(%"class.dawn_wire::WireDeserializeAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9dawn_wire24WireDeserializeAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast i8*** %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 3, i64 0
  store i8* %9, i8** %4, align 8
  store i64 2048, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24WireDeserializeAllocator5ResetEv(%"class.dawn_wire::WireDeserializeAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load i8**, i8*** %3, align 8
  %5 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load i8**, i8*** %5, align 8
  %7 = icmp eq i8** %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %1
  %9 = ptrtoint i8** %4 to i64
  br label %13

10:                                               ; preds = %19
  %11 = bitcast %"class.std::__1::vector"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %8, %10
  %14 = phi i64 [ %12, %10 ], [ %9, %8 ]
  %15 = bitcast i8*** %5 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 3, i64 0
  %17 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 1
  store i64 2048, i64* %18, align 8
  ret void

19:                                               ; preds = %1, %19
  %20 = phi i8** [ %22, %19 ], [ %4, %1 ]
  %21 = load i8*, i8** %20, align 8
  tail call void @free(i8* %21) #8
  %22 = getelementptr inbounds i8*, i8** %20, i64 1
  %23 = icmp eq i8** %22, %6
  br i1 %23, label %10, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24WireDeserializeAllocatorD2Ev(%"class.dawn_wire::WireDeserializeAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9dawn_wire24WireDeserializeAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp eq i8** %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = ptrtoint i8** %5 to i64
  br label %20

11:                                               ; preds = %15
  %12 = bitcast %"class.std::__1::vector"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = inttoptr i64 %13 to i8**
  br label %20

15:                                               ; preds = %1, %15
  %16 = phi i8** [ %18, %15 ], [ %5, %1 ]
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #8
  %18 = getelementptr inbounds i8*, i8** %16, i64 1
  %19 = icmp eq i8** %18, %7
  br i1 %19, label %11, label %15

20:                                               ; preds = %9, %11
  %21 = phi i8** [ %14, %11 ], [ %5, %9 ]
  %22 = phi i64 [ %13, %11 ], [ %10, %9 ]
  %23 = bitcast i8*** %6 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 3, i64 0
  %25 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 1
  store i64 2048, i64* %26, align 8
  %27 = icmp eq i8** %21, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = ptrtoint i8** %21 to i64
  store i64 %29, i64* %23, align 8
  %30 = bitcast i8** %21 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %20, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9dawn_wire24WireDeserializeAllocatorD0Ev(%"class.dawn_wire::WireDeserializeAllocator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9dawn_wire24WireDeserializeAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp eq i8** %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = ptrtoint i8** %5 to i64
  br label %20

11:                                               ; preds = %15
  %12 = bitcast %"class.std::__1::vector"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = inttoptr i64 %13 to i8**
  br label %20

15:                                               ; preds = %1, %15
  %16 = phi i8** [ %18, %15 ], [ %5, %1 ]
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #8
  %18 = getelementptr inbounds i8*, i8** %16, i64 1
  %19 = icmp eq i8** %18, %7
  br i1 %19, label %11, label %15

20:                                               ; preds = %11, %9
  %21 = phi i8** [ %14, %11 ], [ %5, %9 ]
  %22 = phi i64 [ %13, %11 ], [ %10, %9 ]
  %23 = bitcast i8*** %6 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 3, i64 0
  %25 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 1
  store i64 2048, i64* %26, align 8
  %27 = icmp eq i8** %21, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = ptrtoint i8** %21 to i64
  store i64 %29, i64* %23, align 8
  %30 = bitcast i8** %21 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %20, %28
  %32 = bitcast %"class.dawn_wire::WireDeserializeAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN9dawn_wire24WireDeserializeAllocator8GetSpaceEm(%"class.dawn_wire::WireDeserializeAllocator"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds i8, i8* %8, i64 %1
  store i8* %9, i8** %7, align 8
  %10 = sub i64 %4, %1
  store i64 %10, i64* %3, align 8
  br label %94

11:                                               ; preds = %2
  %12 = icmp ugt i64 %1, 2048
  %13 = select i1 %12, i64 %1, i64 2048
  %14 = tail call noalias i8* @malloc(i64 %13) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = icmp eq i8* %14, null
  br i1 %16, label %94, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 1
  %20 = load i8**, i8*** %19, align 8
  %21 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %22 = load i8**, i8*** %21, align 8
  %23 = icmp eq i8** %20, %22
  %24 = ptrtoint i8** %22 to i64
  br i1 %23, label %30, label %25

25:                                               ; preds = %17
  %26 = bitcast i8** %20 to i64*
  store i64 %15, i64* %26, align 8
  %27 = getelementptr inbounds i8*, i8** %20, i64 1
  %28 = ptrtoint i8** %27 to i64
  %29 = bitcast i8*** %19 to i64*
  store i64 %28, i64* %29, align 8
  br label %87

30:                                               ; preds = %17
  %31 = ptrtoint i8** %20 to i64
  %32 = bitcast i8*** %19 to i64*
  %33 = bitcast %"class.std::__1::vector"* %18 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #10
  unreachable

41:                                               ; preds = %30
  %42 = bitcast i8*** %21 to i64*
  %43 = sub i64 %24, %34
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 2
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #10
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %41 ]
  %56 = shl i64 %55, 3
  %57 = tail call i8* @_Znwm(i64 %56) #9
  %58 = bitcast i8* %57 to i8**
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi i8** [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds i8*, i8** %61, i64 %36
  %63 = getelementptr inbounds i8*, i8** %61, i64 %60
  %64 = ptrtoint i8** %63 to i64
  %65 = bitcast i8** %62 to i64*
  store i64 %15, i64* %65, align 8
  %66 = getelementptr inbounds i8*, i8** %62, i64 1
  %67 = ptrtoint i8** %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %69 = load i8**, i8*** %68, align 8
  %70 = load i64, i64* %32, align 8
  %71 = ptrtoint i8** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds i8*, i8** %62, i64 %74
  %76 = ptrtoint i8** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %59
  %79 = bitcast i8** %75 to i8*
  %80 = bitcast i8** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #8
  %81 = load i8**, i8*** %68, align 8
  br label %82

82:                                               ; preds = %78, %59
  %83 = phi i8** [ %69, %59 ], [ %81, %78 ]
  store i64 %76, i64* %33, align 8
  store i64 %67, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %84 = icmp eq i8** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast i8** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %25, %82, %85
  %88 = getelementptr inbounds %"class.dawn_wire::WireDeserializeAllocator", %"class.dawn_wire::WireDeserializeAllocator"* %0, i64 0, i32 2
  %89 = bitcast i8** %88 to i64*
  store i64 %15, i64* %89, align 8
  store i64 %13, i64* %3, align 8
  %90 = bitcast %"class.dawn_wire::WireDeserializeAllocator"* %0 to i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)***
  %91 = load i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)**, i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)*** %90, align 8
  %92 = load i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)*, i8* (%"class.dawn_wire::WireDeserializeAllocator"*, i64)** %91, align 8
  %93 = tail call i8* %92(%"class.dawn_wire::WireDeserializeAllocator"* %0, i64 %1) #8
  br label %94

94:                                               ; preds = %87, %11, %6
  %95 = phi i8* [ %8, %6 ], [ %93, %87 ], [ null, %11 ]
  ret i8* %95
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
