; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_contrast.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_contrast.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1589", i32, i8, [3 x i8], %"class.blink::HeapVector.1591", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1599", %"class.blink::Member.1601", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1610", %"class.blink::Member.1733", %"class.blink::Member.1735", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.3104" }
%"class.blink::Member.3104" = type { %"class.blink::MemberBase.3105" }
%"class.blink::MemberBase.3105" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3106" }
%"class.blink::Member.3106" = type { %"class.blink::MemberBase.3107" }
%"class.blink::MemberBase.3107" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1579", %"class.std::__1::unique_ptr.1579", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1585", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1566", %"class.std::__1::map.1575"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1549" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1558", %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::map.1566" = type { %"class.std::__1::__tree.1567" }
%"class.std::__1::__tree.1567" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1568", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type opaque
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1585" = type { %"class.WTF::HashTable.1586" }
%"class.WTF::HashTable.1586" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1603", i32, i32 }
%"class.blink::HeapHashMap.1603" = type { %"class.WTF::HashMap.1606" }
%"class.WTF::HashMap.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"struct.WTF::KeyValuePair.1609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1613" }
%"class.std::__1::unique_ptr.1613" = type { %"class.std::__1::__compressed_pair.1614" }
%"class.std::__1::__compressed_pair.1614" = type { %"struct.std::__1::__compressed_pair_elem.1615" }
%"struct.std::__1::__compressed_pair_elem.1615" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1616" }
%"class.WTF::Vector.1616" = type { %"class.WTF::VectorBuffer.1617" }
%"class.WTF::VectorBuffer.1617" = type { %"class.WTF::VectorBufferBase.1618" }
%"class.WTF::VectorBufferBase.1618" = type { %"class.mojo::StructPtr.1619"*, i32, i32 }
%"class.mojo::StructPtr.1619" = type { %"class.std::__1::unique_ptr.1620" }
%"class.std::__1::unique_ptr.1620" = type { %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.1622" }
%"struct.std::__1::__compressed_pair_elem.1622" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1623", %"class.WTF::HashMap.1630", %"class.WTF::HashMap.1635", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1640", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1623" = type { %"class.std::__1::unique_ptr.1624" }
%"class.std::__1::unique_ptr.1624" = type { %"class.std::__1::__compressed_pair.1625" }
%"class.std::__1::__compressed_pair.1625" = type { %"struct.std::__1::__compressed_pair_elem.1626" }
%"struct.std::__1::__compressed_pair_elem.1626" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type opaque
%"class.WTF::HashMap.1635" = type { %"class.WTF::HashTable.1636" }
%"class.WTF::HashTable.1636" = type <{ %"struct.WTF::KeyValuePair.1639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1639" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1640" = type { %"class.std::__1::unique_ptr.1641" }
%"class.std::__1::unique_ptr.1641" = type { %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1724" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1655", i32 }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1658", %"class.absl::optional.1659", %"class.absl::optional.1664", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1677", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1699", %"class.std::__1::map.1710", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1719", i8, %class.scoped_refptr.1669, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1720" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1658" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1659" = type { %"class.absl::optional_internal::optional_data.1660" }
%"class.absl::optional_internal::optional_data.1660" = type { %"class.absl::optional_internal::optional_data_base.1661" }
%"class.absl::optional_internal::optional_data_base.1661" = type { %"class.absl::optional_internal::optional_data_dtor_base.1662" }
%"class.absl::optional_internal::optional_data_dtor_base.1662" = type { i8, %union.anon.1663 }
%union.anon.1663 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1664" = type { %"class.absl::optional_internal::optional_data.1665" }
%"class.absl::optional_internal::optional_data.1665" = type { %"class.absl::optional_internal::optional_data_base.1666" }
%"class.absl::optional_internal::optional_data_base.1666" = type { %"class.absl::optional_internal::optional_data_dtor_base.1667" }
%"class.absl::optional_internal::optional_data_dtor_base.1667" = type { i8, %union.anon.1668 }
%union.anon.1668 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1669, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1670" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1670" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1675 }
%class.scoped_refptr.1675 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1737", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1669, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1737" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1676 }
%class.scoped_refptr.1676 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1680", %class.scoped_refptr.1681 }
%"class.base::RepeatingCallback.1680" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1681 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1682" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1686", %"class.std::__1::unique_ptr.1692", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1698" }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1698" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1699" = type { %"class.std::__1::__tree.1700" }
%"class.std::__1::__tree.1700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1701", %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1710" = type { %"class.std::__1::__tree.1711" }
%"class.std::__1::__tree.1711" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1712", %"class.std::__1::__compressed_pair.1716" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.1716" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1719" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1669 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1720" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1724" = type { %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.1726" }
%"struct.std::__1::__compressed_pair_elem.1726" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1738", i64 }
%"class.std::__1::vector.1738" = type { %"class.std::__1::__vector_base.1739" }
%"class.std::__1::__vector_base.1739" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1740" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1745", [4 x i8] }>
%"class.WTF::RefCounted.1745" = type { %"class.base::RefCounted.1746" }
%"class.base::RefCounted.1746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3108" }
%"class.WTF::Vector.3108" = type { %"class.WTF::VectorBuffer.3109" }
%"class.WTF::VectorBuffer.3109" = type { %"class.WTF::VectorBufferBase.3110" }
%"class.WTF::VectorBufferBase.3110" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3113", %"class.absl::optional.3113", %"class.absl::optional.3113" }
%"class.absl::optional.3113" = type { %"class.absl::optional_internal::optional_data.3114" }
%"class.absl::optional_internal::optional_data.3114" = type { %"class.absl::optional_internal::optional_data_base.3115" }
%"class.absl::optional_internal::optional_data_base.3115" = type { %"class.absl::optional_internal::optional_data_dtor_base.3116" }
%"class.absl::optional_internal::optional_data_dtor_base.3116" = type { i8, %union.anon.3117 }
%union.anon.3117 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3118 }
%class.scoped_refptr.3118 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3119", %"class.WTF::Vector.630", %"class.WTF::Vector.3121", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3119" = type { %"class.base::RefCounted.3120" }
%"class.base::RefCounted.3120" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3121" = type { %"class.WTF::VectorBuffer.3122" }
%"class.WTF::VectorBuffer.3122" = type { %"class.WTF::VectorBufferBase.3123" }
%"class.WTF::VectorBufferBase.3123" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3124 }
%union.anon.3124 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3128" }
%"class.WTF::VectorBuffer.3128" = type { %"class.WTF::VectorBufferBase.3129", [32 x i8] }
%"class.WTF::VectorBufferBase.3129" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3213 }
%class.scoped_refptr.3213 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3223" }
%"class.blink::Member.3223" = type { %"class.blink::MemberBase.3224" }
%"class.blink::MemberBase.3224" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3219" }
%"class.blink::MemberBase.3219" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3220" }
%"class.blink::MemberBase.3220" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3221" }
%"class.blink::MemberBase.3221" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3222" }
%"class.blink::MemberBase.3222" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3214", %"class.WTF::Vector.3214" }
%"class.WTF::Vector.3214" = type { %"class.WTF::VectorBuffer.3215" }
%"class.WTF::VectorBuffer.3215" = type { %"class.WTF::VectorBufferBase.3216" }
%"class.WTF::VectorBufferBase.3216" = type { %class.scoped_refptr.3213*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1848", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2069", %"class.std::__1::unique_ptr.2075", %"class.std::__1::unique_ptr.2081", %class.scoped_refptr.1844, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2087", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1807", %"class.std::__1::unique_ptr.1817" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1763, %"class.WTF::Vector.1764", %"class.std::__1::unique_ptr.1769", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1790, %"class.blink::Persistent.1791" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1763 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [8 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1772", %"class.absl::optional.1777", %"class.absl::optional.1782" }
%"class.absl::optional.1772" = type { %"class.absl::optional_internal::optional_data.1773" }
%"class.absl::optional_internal::optional_data.1773" = type { %"class.absl::optional_internal::optional_data_base.1774" }
%"class.absl::optional_internal::optional_data_base.1774" = type { %"class.absl::optional_internal::optional_data_dtor_base.1775" }
%"class.absl::optional_internal::optional_data_dtor_base.1775" = type { i8, %union.anon.1776 }
%union.anon.1776 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1777" = type { %"class.absl::optional_internal::optional_data.1778" }
%"class.absl::optional_internal::optional_data.1778" = type { %"class.absl::optional_internal::optional_data_base.1779" }
%"class.absl::optional_internal::optional_data_base.1779" = type { %"class.absl::optional_internal::optional_data_dtor_base.1780" }
%"class.absl::optional_internal::optional_data_dtor_base.1780" = type { i8, [3 x i8], %union.anon.1781 }
%union.anon.1781 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1782" = type { %"class.absl::optional_internal::optional_data.1783" }
%"class.absl::optional_internal::optional_data.1783" = type { %"class.absl::optional_internal::optional_data_base.1784" }
%"class.absl::optional_internal::optional_data_base.1784" = type { %"class.absl::optional_internal::optional_data_dtor_base.1785" }
%"class.absl::optional_internal::optional_data_dtor_base.1785" = type { i8, %union.anon.1786 }
%union.anon.1786 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1790 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1750", %"class.absl::optional.1755" }
%"class.absl::optional.1750" = type { %"class.absl::optional_internal::optional_data.1751" }
%"class.absl::optional_internal::optional_data.1751" = type { %"class.absl::optional_internal::optional_data_base.1752" }
%"class.absl::optional_internal::optional_data_base.1752" = type { %"class.absl::optional_internal::optional_data_dtor_base.1753" }
%"class.absl::optional_internal::optional_data_dtor_base.1753" = type { i8, %union.anon.1754 }
%union.anon.1754 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1755" = type { %"class.absl::optional_internal::optional_data.1756" }
%"class.absl::optional_internal::optional_data.1756" = type { %"class.absl::optional_internal::optional_data_base.1757" }
%"class.absl::optional_internal::optional_data_base.1757" = type { %"class.absl::optional_internal::optional_data_dtor_base.1758" }
%"class.absl::optional_internal::optional_data_dtor_base.1758" = type { i8, %union.anon.1759 }
%union.anon.1759 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1791" = type { %"class.blink::PersistentBase.1792" }
%"class.blink::PersistentBase.1792" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1795", %"struct.blink::PhysicalRect", %"class.blink::Member.1805" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"class.WTF::HashSet.1798"* }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1807" = type { %"class.blink::PersistentBase.1808" }
%"class.blink::PersistentBase.1808" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1811", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1817" = type { %"class.std::__1::__compressed_pair.1818" }
%"class.std::__1::__compressed_pair.1818" = type { %"struct.std::__1::__compressed_pair_elem.1819" }
%"struct.std::__1::__compressed_pair_elem.1819" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1820", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1820" = type { %"class.WTF::HashTable.1823", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1823" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1826", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1829, %"class.std::__1::unique_ptr.1830", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1747", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1829 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3017", i16, %class.scoped_refptr.1829 }
%"class.WTF::ThreadSafeRefCounted.3017" = type { %"class.base::RefCountedThreadSafe.3018" }
%"class.base::RefCountedThreadSafe.3018" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.WTF::Vector.1833"* }
%"class.WTF::Vector.1833" = type { %"class.WTF::VectorBuffer.1834" }
%"class.WTF::VectorBuffer.1834" = type { %"class.WTF::VectorBufferBase.1835" }
%"class.WTF::VectorBufferBase.1835" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1844, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1852", %"class.blink::Member.1857", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1859", i8, i32, %"class.blink::Color", %"class.absl::optional.1862", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"class.std::__1::unique_ptr.1872", i32, [4 x i8], %"class.WTF::HashSet.1875", %"class.blink::Member.1882", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1884", %"class.blink::HeapHashSet.1892", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1900", i8, %"class.blink::Member.1906", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1918", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1932", i8, %"class.std::__1::unique_ptr.1938", %"class.std::__1::unique_ptr.2019", %"class.WTF::Vector.2025", i32, %class.scoped_refptr.2030, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2031", %"class.blink::Member.2033", %"class.blink::Member.2035", %"class.blink::HeapHashSet.2037", %"class.blink::HeapHashSet.2044", %"class.std::__1::unique_ptr.2051", %"class.std::__1::unique_ptr.2058", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %class.scoped_refptr.1856*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1856 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2287", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2295", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2309", %"class.blink::FrameLoader", %"class.blink::Member.2330", %"class.blink::Member.343", %"class.blink::Member.2331", %"class.blink::Member.2333", %"class.blink::Member.2349", %"class.blink::Member.2351", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2353", %class.scoped_refptr.2577, %"class.blink::Member.2578", %"class.blink::Member.2580", %"class.blink::Member.2582", %"class.blink::Member.2584", %"class.blink::Member.2586", %"class.blink::Member.2590", %"class.blink::Member.2592", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2596", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2602", %"class.std::__1::unique_ptr.2603", %"class.absl::optional.2275", i32, [4 x i8], %"class.std::__1::unique_ptr.2609", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2617", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2622", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2627", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2630", %"class.blink::Member.2632", %"class.blink::Member.2634", %"class.blink::Member.2636", %"class.mojo::StructPtr.2639", %"class.blink::Member.2648", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2650", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2120", %"class.blink::Member.2122", %"class.blink::Member.2124", i8, i32, i8, i32, %"class.blink::Member.2257", %"class.blink::Member.2147", %"class.blink::FrameLifecycle", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.blink::Member.1857", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2268", i8, %"class.base::UnguessableToken", %"class.absl::optional.2270", %"class.absl::optional.2275", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2118", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2120" = type { %"class.blink::MemberBase.2121" }
%"class.blink::MemberBase.2121" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2118", %"class.blink::Member.2147", %"class.blink::Member.2149", %"class.blink::Member.2151", i8, %"class.WTF::Vector.2153" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2140" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2128" }
%"class.blink::HeapVector.2128" = type { %"class.WTF::Vector.2131" }
%"class.WTF::Vector.2131" = type { %"class.WTF::VectorBuffer.2132" }
%"class.WTF::VectorBuffer.2132" = type { %"class.WTF::VectorBufferBase.2133", [32 x i8] }
%"class.WTF::VectorBufferBase.2133" = type { %"struct.std::__1::pair.2134"*, i32, i32 }
%"struct.std::__1::pair.2134" = type { %"class.WTF::AtomicString", %"class.blink::Member.2135" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::HeapVector.2137"* }
%"class.blink::HeapVector.2137" = type opaque
%"class.std::__1::unique_ptr.2140" = type { %"class.std::__1::__compressed_pair.2141" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.WTF::Vector.2143"* }
%"class.WTF::Vector.2143" = type opaque
%"class.blink::Member.2149" = type { %"class.blink::MemberBase.2150" }
%"class.blink::MemberBase.2150" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2153" = type { %"class.WTF::VectorBuffer.2154" }
%"class.WTF::VectorBuffer.2154" = type { %"class.WTF::VectorBufferBase.2155" }
%"class.WTF::VectorBufferBase.2155" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2249" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2156, %"class.std::__1::unique_ptr.1655", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1669, i32 }>
%class.scoped_refptr.2156 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1669, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2215", %"class.absl::optional.2220", %"class.absl::optional.2173", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2240", i8, [7 x i8], %class.scoped_refptr.1669, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1682" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1669, %"class.std::__1::unique_ptr.2157", %"class.absl::optional.2167", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2173", %"class.std::__1::unique_ptr.2178", i8, i64, %class.scoped_refptr.2212, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2213", %"class.base::WeakPtrFactory.2214" }
%"class.std::__1::unique_ptr.2157" = type { %"class.std::__1::__compressed_pair.2158" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.2159" }
%"struct.std::__1::__compressed_pair_elem.2159" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1669, i8, %"class.mojo::ScopedHandleBase.2160", %class.scoped_refptr.2161, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2162", i8*, %"class.base::WeakPtrFactory.2163" }
%"class.mojo::ScopedHandleBase.2160" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2161 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2162" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2167" = type { %"class.absl::optional_internal::optional_data.2168" }
%"class.absl::optional_internal::optional_data.2168" = type { %"class.absl::optional_internal::optional_data_base.2169" }
%"class.absl::optional_internal::optional_data_base.2169" = type { %"class.absl::optional_internal::optional_data_dtor_base.2170" }
%"class.absl::optional_internal::optional_data_dtor_base.2170" = type { i8, %union.anon.2171 }
%union.anon.2171 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2172", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2172" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2178" = type { %"class.std::__1::__compressed_pair.2179" }
%"class.std::__1::__compressed_pair.2179" = type { %"struct.std::__1::__compressed_pair_elem.2180" }
%"struct.std::__1::__compressed_pair_elem.2180" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2181", i8, i64, %class.scoped_refptr.2182, %class.scoped_refptr.2207 }
%"class.base::RepeatingCallback.2181" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2182 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2183", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2185", %"class.std::__1::map.2196", i8, [7 x i8] }>
%"class.base::RefCounted.2183" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2184 }
%class.scoped_refptr.2184 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2185" = type { %"class.std::__1::__tree.2186" }
%"class.std::__1::__tree.2186" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2187", %"class.std::__1::__compressed_pair.2191" }
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2191" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2196" = type { %"class.std::__1::__tree.2197" }
%"class.std::__1::__tree.2197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2198", %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2207 = type { %"class.base::RefCountedData.2208"* }
%"class.base::RefCountedData.2208" = type opaque
%class.scoped_refptr.2212 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2213" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2214" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2215" = type { %"class.absl::optional_internal::optional_data.2216" }
%"class.absl::optional_internal::optional_data.2216" = type { %"class.absl::optional_internal::optional_data_base.2217" }
%"class.absl::optional_internal::optional_data_base.2217" = type { %"class.absl::optional_internal::optional_data_dtor_base.2218" }
%"class.absl::optional_internal::optional_data_dtor_base.2218" = type { i8, %union.anon.2219 }
%union.anon.2219 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2220" = type { %"class.absl::optional_internal::optional_data.2221" }
%"class.absl::optional_internal::optional_data.2221" = type { %"class.absl::optional_internal::optional_data_base.2222" }
%"class.absl::optional_internal::optional_data_base.2222" = type { %"class.absl::optional_internal::optional_data_dtor_base.2223" }
%"class.absl::optional_internal::optional_data_dtor_base.2223" = type { i8, [7 x i8], %union.anon.2224 }
%union.anon.2224 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2173" = type { %"class.absl::optional_internal::optional_data.2174" }
%"class.absl::optional_internal::optional_data.2174" = type { %"class.absl::optional_internal::optional_data_base.2175" }
%"class.absl::optional_internal::optional_data_base.2175" = type { %"class.absl::optional_internal::optional_data_dtor_base.2176" }
%"class.absl::optional_internal::optional_data_dtor_base.2176" = type { i8, %union.anon.2177 }
%union.anon.2177 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2225 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2225 = type { %"class.std::__1::map.2228" }
%"class.std::__1::map.2228" = type { %"class.std::__1::__tree.2229" }
%"class.std::__1::__tree.2229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2230", %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2230" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2239"*, i64 }
%"class.std::__1::unique_ptr.2239" = type opaque
%"class.std::__1::map.2240" = type { %"class.std::__1::__tree.2241" }
%"class.std::__1::__tree.2241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2242", %"class.std::__1::__compressed_pair.2246" }
%"class.std::__1::__compressed_pair.2242" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2249" = type { %"class.std::__1::__compressed_pair.2250" }
%"class.std::__1::__compressed_pair.2250" = type { %"struct.std::__1::__compressed_pair_elem.2251" }
%"struct.std::__1::__compressed_pair_elem.2251" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2118", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2259" }
%"class.base::internal::flat_tree.2259" = type { %"class.std::__1::vector.2260" }
%"class.std::__1::vector.2260" = type { %"class.std::__1::__vector_base.2261" }
%"class.std::__1::__vector_base.2261" = type { %"struct.std::__1::pair.2262"*, %"struct.std::__1::pair.2262"*, %"class.std::__1::__compressed_pair.2263" }
%"struct.std::__1::pair.2262" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2263" = type { %"struct.std::__1::__compressed_pair_elem.2264" }
%"struct.std::__1::__compressed_pair_elem.2264" = type { %"struct.std::__1::pair.2262"* }
%"class.blink::Member.2268" = type { %"class.blink::MemberBase.2269" }
%"class.blink::MemberBase.2269" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2270" = type { %"class.absl::optional_internal::optional_data.2271" }
%"class.absl::optional_internal::optional_data.2271" = type { %"class.absl::optional_internal::optional_data_base.2272" }
%"class.absl::optional_internal::optional_data_base.2272" = type { %"class.absl::optional_internal::optional_data_dtor_base.2273" }
%"class.absl::optional_internal::optional_data_dtor_base.2273" = type { i8, %union.anon.2274 }
%union.anon.2274 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2280" }
%"class.blink::HeapHashSet.2280" = type { %"class.WTF::HashSet.2283" }
%"class.WTF::HashSet.2283" = type { %"class.WTF::HashTable.2284" }
%"class.WTF::HashTable.2284" = type <{ %"class.blink::WeakMember.2286"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2286" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2287" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2288" }
%"class.blink::HeapHashMap.2288" = type { %"class.WTF::HashMap.2291" }
%"class.WTF::HashMap.2291" = type { %"class.WTF::HashTable.2292" }
%"class.WTF::HashTable.2292" = type <{ %"struct.WTF::KeyValuePair.2294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2294" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2295" = type { %"class.std::__1::__compressed_pair.2296" }
%"class.std::__1::__compressed_pair.2296" = type { %"struct.std::__1::__compressed_pair_elem.2297" }
%"struct.std::__1::__compressed_pair_elem.2297" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2298", %"class.base::WeakPtrFactory.2303" }
%"class.WTF::HashMap.2298" = type { %"class.WTF::HashTable.2299" }
%"class.WTF::HashTable.2299" = type <{ %"struct.WTF::KeyValuePair.2302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2302" = type opaque
%"class.base::WeakPtrFactory.2303" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2307" }
%"class.blink::Member.2307" = type { %"class.blink::MemberBase.2308" }
%"class.blink::MemberBase.2308" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3134" }
%"class.blink::WeakMember.3134" = type { %"class.blink::MemberBase.3135" }
%"class.blink::MemberBase.3135" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3136", i64, %"class.std::__1::map.3137", i8*, i64, %"class.base::WeakPtrFactory.3146" }
%"class.base::RepeatingCallback.3136" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3137" = type { %"class.std::__1::__tree.3138" }
%"class.std::__1::__tree.3138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3139", %"class.std::__1::__compressed_pair.3143" }
%"class.std::__1::__compressed_pair.3139" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"class.std::__1::__compressed_pair.3143" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3146" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2309" = type { %"class.WTF::HashSet.2312" }
%"class.WTF::HashSet.2312" = type { %"class.WTF::HashTable.2313" }
%"class.WTF::HashTable.2313" = type <{ %"class.blink::WeakMember.2315"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2315" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1857", %"class.blink::Member.2316", %"class.blink::Member.2318", %"class.std::__1::unique_ptr.2320", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2326" }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2320" = type { %"class.std::__1::__compressed_pair.2321" }
%"class.std::__1::__compressed_pair.2321" = type { %"struct.std::__1::__compressed_pair_elem.2322" }
%"struct.std::__1::__compressed_pair_elem.2322" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::HashSet.2326" = type { %"class.WTF::HashTable.2327" }
%"class.WTF::HashTable.2327" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1857", %"class.blink::Member.2337", %"class.blink::Member.2339", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2341", %"class.blink::Member.2347" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2341" = type { %"class.std::__1::__compressed_pair.2342" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.2343" }
%"struct.std::__1::__compressed_pair_elem.2343" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2349" = type { %"class.blink::MemberBase.2350" }
%"class.blink::MemberBase.2350" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2351" = type { %"class.blink::MemberBase.2352" }
%"class.blink::MemberBase.2352" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2357", %"class.blink::HeapListHashSet.2368", %"class.blink::HeapListHashSet.2379", %"class.blink::HeapListHashSet.2390", %"class.blink::HeapListHashSet.2401", %"class.blink::HeapListHashSet.2412", %"class.blink::HeapListHashSet.2423", %"class.blink::HeapListHashSet.2434", %"class.blink::HeapListHashSet.2445", %"class.blink::HeapListHashSet.2456", %"class.blink::HeapListHashSet.2467", %"class.blink::HeapListHashSet.2478", %"class.blink::HeapListHashSet.2489", %"class.blink::HeapListHashSet.2500", %"class.blink::HeapListHashSet.2511", %"class.blink::HeapListHashSet.2522", %"class.blink::HeapListHashSet.2533", %"class.blink::HeapListHashSet.2544", %"class.blink::HeapListHashSet.2555", %"class.blink::HeapListHashSet.2566" }
%"class.blink::HeapListHashSet.2357" = type { %"class.WTF::ListHashSet.base.2367", [7 x i8] }
%"class.WTF::ListHashSet.base.2367" = type <{ %"class.WTF::HashTable.2362", %"class.blink::Member.2364", %"class.blink::Member.2364", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2362" = type <{ %"class.blink::Member.2364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::HeapListHashSetNode.2366"* }
%"class.blink::HeapListHashSetNode.2366" = type { %"class.blink::Member.2580", %"class.blink::Member.2364", %"class.blink::Member.2364" }
%"class.blink::HeapListHashSet.2368" = type { %"class.WTF::ListHashSet.base.2378", [7 x i8] }
%"class.WTF::ListHashSet.base.2378" = type <{ %"class.WTF::HashTable.2373", %"class.blink::Member.2375", %"class.blink::Member.2375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2373" = type <{ %"class.blink::Member.2375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::HeapListHashSetNode.2377"* }
%"class.blink::HeapListHashSetNode.2377" = type { %"class.blink::Member.3013", %"class.blink::Member.2375", %"class.blink::Member.2375" }
%"class.blink::Member.3013" = type { %"class.blink::MemberBase.3014" }
%"class.blink::MemberBase.3014" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2379" = type { %"class.WTF::ListHashSet.base.2389", [7 x i8] }
%"class.WTF::ListHashSet.base.2389" = type <{ %"class.WTF::HashTable.2384", %"class.blink::Member.2386", %"class.blink::Member.2386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2384" = type <{ %"class.blink::Member.2386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::HeapListHashSetNode.2388"* }
%"class.blink::HeapListHashSetNode.2388" = type { %"class.blink::Member.3009", %"class.blink::Member.2386", %"class.blink::Member.2386" }
%"class.blink::Member.3009" = type { %"class.blink::MemberBase.3010" }
%"class.blink::MemberBase.3010" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2390" = type { %"class.WTF::ListHashSet.base.2400", [7 x i8] }
%"class.WTF::ListHashSet.base.2400" = type <{ %"class.WTF::HashTable.2395", %"class.blink::Member.2397", %"class.blink::Member.2397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2395" = type <{ %"class.blink::Member.2397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapListHashSetNode.2399"* }
%"class.blink::HeapListHashSetNode.2399" = type { %"class.blink::Member.3005", %"class.blink::Member.2397", %"class.blink::Member.2397" }
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2401" = type { %"class.WTF::ListHashSet.base.2411", [7 x i8] }
%"class.WTF::ListHashSet.base.2411" = type <{ %"class.WTF::HashTable.2406", %"class.blink::Member.2408", %"class.blink::Member.2408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2406" = type <{ %"class.blink::Member.2408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::HeapListHashSetNode.2410"* }
%"class.blink::HeapListHashSetNode.2410" = type { %"class.blink::Member.3001", %"class.blink::Member.2408", %"class.blink::Member.2408" }
%"class.blink::Member.3001" = type { %"class.blink::MemberBase.3002" }
%"class.blink::MemberBase.3002" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2412" = type { %"class.WTF::ListHashSet.base.2422", [7 x i8] }
%"class.WTF::ListHashSet.base.2422" = type <{ %"class.WTF::HashTable.2417", %"class.blink::Member.2419", %"class.blink::Member.2419", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2417" = type <{ %"class.blink::Member.2419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::HeapListHashSetNode.2421"* }
%"class.blink::HeapListHashSetNode.2421" = type { %"class.blink::Member.2997", %"class.blink::Member.2419", %"class.blink::Member.2419" }
%"class.blink::Member.2997" = type { %"class.blink::MemberBase.2998" }
%"class.blink::MemberBase.2998" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2423" = type { %"class.WTF::ListHashSet.base.2433", [7 x i8] }
%"class.WTF::ListHashSet.base.2433" = type <{ %"class.WTF::HashTable.2428", %"class.blink::Member.2430", %"class.blink::Member.2430", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2428" = type <{ %"class.blink::Member.2430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2430" = type { %"class.blink::MemberBase.2431" }
%"class.blink::MemberBase.2431" = type { %"class.blink::HeapListHashSetNode.2432"* }
%"class.blink::HeapListHashSetNode.2432" = type { %"class.blink::Member.2926", %"class.blink::Member.2430", %"class.blink::Member.2430" }
%"class.blink::Member.2926" = type { %"class.blink::MemberBase.2927" }
%"class.blink::MemberBase.2927" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.2928", %"class.v8::Isolate"*, %"class.blink::Member.2918", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.2935", %"class.blink::Member.2942", %"class.blink::HeapVector.2945", %"class.blink::HeapHashMap.2952", %"class.blink::HeapHashMap.2959", %"class.blink::HeapHashMap.2966", %"class.WTF::HashSet.2973", %"class.WTF::HashSet.2973", %"class.WTF::HashMap.2977", i32, %"class.blink::Member.326", %"class.blink::HeapHashMap.2982", %"class.blink::Member.2989", %"class.blink::Member.2991", %"class.blink::Member.2993", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.2928" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.2353", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2929" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.2699" }
%"class.WTF::Vector.2699" = type { %"class.WTF::VectorBuffer.2700" }
%"class.WTF::VectorBuffer.2700" = type { %"class.WTF::VectorBufferBase.2701" }
%"class.WTF::VectorBufferBase.2701" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.2702", %"class.mojo::StructPtr.2702" }
%"class.mojo::StructPtr.2702" = type { %"class.std::__1::unique_ptr.2703" }
%"class.std::__1::unique_ptr.2703" = type { %"class.std::__1::__compressed_pair.2704" }
%"class.std::__1::__compressed_pair.2704" = type { %"struct.std::__1::__compressed_pair_elem.2705" }
%"struct.std::__1::__compressed_pair_elem.2705" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.2706" }
%"class.WTF::HashMap.2706" = type { %"class.WTF::HashTable.2707" }
%"class.WTF::HashTable.2707" = type <{ %"struct.WTF::KeyValuePair.2710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2710" = type { %"class.WTF::String", %"class.absl::optional.2711" }
%"class.absl::optional.2711" = type { %"class.absl::optional_internal::optional_data.2712" }
%"class.absl::optional_internal::optional_data.2712" = type { %"class.absl::optional_internal::optional_data_base.2713" }
%"class.absl::optional_internal::optional_data_base.2713" = type { %"class.absl::optional_internal::optional_data_dtor_base.2714" }
%"class.absl::optional_internal::optional_data_dtor_base.2714" = type { i8, %union.anon.2715 }
%union.anon.2715 = type { %"class.WTF::Vector.2716" }
%"class.WTF::Vector.2716" = type { %"class.WTF::VectorBuffer.2717" }
%"class.WTF::VectorBuffer.2717" = type { %"class.WTF::VectorBufferBase.2718" }
%"class.WTF::VectorBufferBase.2718" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2929" = type { %"class.std::__1::__compressed_pair.2930" }
%"class.std::__1::__compressed_pair.2930" = type { %"struct.std::__1::__compressed_pair_elem.2931" }
%"struct.std::__1::__compressed_pair_elem.2931" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::Member.2918" = type { %"class.blink::MemberBase.2919" }
%"class.blink::MemberBase.2919" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::HeapHashSet.2935" = type { %"class.WTF::HashSet.2938" }
%"class.WTF::HashSet.2938" = type { %"class.WTF::HashTable.2939" }
%"class.WTF::HashTable.2939" = type <{ %"class.blink::Member.2941"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2941" = type opaque
%"class.blink::Member.2942" = type { %"class.blink::MemberBase.2943" }
%"class.blink::MemberBase.2943" = type { %"class.blink::HeapHashMap.2944"* }
%"class.blink::HeapHashMap.2944" = type opaque
%"class.blink::HeapVector.2945" = type { %"class.WTF::Vector.2948" }
%"class.WTF::Vector.2948" = type { %"class.WTF::VectorBuffer.2949" }
%"class.WTF::VectorBuffer.2949" = type { %"class.WTF::VectorBufferBase.2950" }
%"class.WTF::VectorBufferBase.2950" = type { %"class.blink::Member.2942"*, i32, i32 }
%"class.blink::HeapHashMap.2952" = type { %"class.WTF::HashMap.2955" }
%"class.WTF::HashMap.2955" = type { %"class.WTF::HashTable.2956" }
%"class.WTF::HashTable.2956" = type <{ %"struct.WTF::KeyValuePair.2958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2958" = type opaque
%"class.blink::HeapHashMap.2959" = type { %"class.WTF::HashMap.2962" }
%"class.WTF::HashMap.2962" = type { %"class.WTF::HashTable.2963" }
%"class.WTF::HashTable.2963" = type <{ %"struct.WTF::KeyValuePair.2965"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2965" = type opaque
%"class.blink::HeapHashMap.2966" = type { %"class.WTF::HashMap.2969" }
%"class.WTF::HashMap.2969" = type { %"class.WTF::HashTable.2970" }
%"class.WTF::HashTable.2970" = type <{ %"struct.WTF::KeyValuePair.2972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2972" = type opaque
%"class.WTF::HashSet.2973" = type { %"class.WTF::HashTable.2974" }
%"class.WTF::HashTable.2974" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.2977" = type { %"class.WTF::HashTable.2978" }
%"class.WTF::HashTable.2978" = type <{ %"struct.WTF::KeyValuePair.2981"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2981" = type opaque
%"class.blink::HeapHashMap.2982" = type { %"class.WTF::HashMap.2985" }
%"class.WTF::HashMap.2985" = type { %"class.WTF::HashTable.2986" }
%"class.WTF::HashTable.2986" = type <{ %"struct.WTF::KeyValuePair.2988"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2988" = type opaque
%"class.blink::Member.2989" = type { %"class.blink::MemberBase.2990" }
%"class.blink::MemberBase.2990" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.2991" = type { %"class.blink::MemberBase.2992" }
%"class.blink::MemberBase.2992" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.2993" = type { %"class.blink::MemberBase.2994" }
%"class.blink::MemberBase.2994" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::HeapListHashSet.2434" = type { %"class.WTF::ListHashSet.base.2444", [7 x i8] }
%"class.WTF::ListHashSet.base.2444" = type <{ %"class.WTF::HashTable.2439", %"class.blink::Member.2441", %"class.blink::Member.2441", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2439" = type <{ %"class.blink::Member.2441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::HeapListHashSetNode.2443"* }
%"class.blink::HeapListHashSetNode.2443" = type { %"class.blink::Member.2920", %"class.blink::Member.2441", %"class.blink::Member.2441" }
%"class.blink::Member.2920" = type { %"class.blink::MemberBase.2921" }
%"class.blink::MemberBase.2921" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2445" = type { %"class.WTF::ListHashSet.base.2455", [7 x i8] }
%"class.WTF::ListHashSet.base.2455" = type <{ %"class.WTF::HashTable.2450", %"class.blink::Member.2452", %"class.blink::Member.2452", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2450" = type <{ %"class.blink::Member.2452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::HeapListHashSetNode.2454"* }
%"class.blink::HeapListHashSetNode.2454" = type { %"class.blink::Member.2695", %"class.blink::Member.2452", %"class.blink::Member.2452" }
%"class.blink::Member.2695" = type { %"class.blink::MemberBase.2696" }
%"class.blink::MemberBase.2696" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type { %"class.blink::InspectorBaseAgent", %"class.std::__1::unique_ptr.2732", %"class.std::__1::unique_ptr.2739", %"class.std::__1::unique_ptr.2746", %"class.std::__1::unique_ptr.2753", %"class.WTF::HashMap.2766", %"class.blink::HeapHashMap.2771", %"class.WTF::HashMap.2778", %"class.std::__1::unique_ptr.2783", %"class.std::__1::unique_ptr.2790", i8, i8, i8, %"class.std::__1::unique_ptr.2890", %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2904", %"class.blink::HeapHashMap.2911", %"class.blink::Member.2918", %"class.blink::Member.2920", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOMSnapshot::Backend", %"class.blink::Member.2353", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2726" }
%"class.blink::protocol::DOMSnapshot::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2726" = type { %"class.std::__1::__compressed_pair.2727" }
%"class.std::__1::__compressed_pair.2727" = type { %"struct.std::__1::__compressed_pair_elem.2728" }
%"struct.std::__1::__compressed_pair_elem.2728" = type { %"class.blink::protocol::DOMSnapshot::Frontend"* }
%"class.blink::protocol::DOMSnapshot::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.std::__1::unique_ptr.2732" = type { %"class.std::__1::__compressed_pair.2733" }
%"class.std::__1::__compressed_pair.2733" = type { %"struct.std::__1::__compressed_pair_elem.2734" }
%"struct.std::__1::__compressed_pair_elem.2734" = type { %"class.std::__1::vector.2735"* }
%"class.std::__1::vector.2735" = type opaque
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.std::__1::vector.2742"* }
%"class.std::__1::vector.2742" = type opaque
%"class.std::__1::unique_ptr.2746" = type { %"class.std::__1::__compressed_pair.2747" }
%"class.std::__1::__compressed_pair.2747" = type { %"struct.std::__1::__compressed_pair_elem.2748" }
%"struct.std::__1::__compressed_pair_elem.2748" = type { %"class.std::__1::vector.2749"* }
%"class.std::__1::vector.2749" = type opaque
%"class.std::__1::unique_ptr.2753" = type { %"class.std::__1::__compressed_pair.2754" }
%"class.std::__1::__compressed_pair.2754" = type { %"struct.std::__1::__compressed_pair_elem.2755" }
%"struct.std::__1::__compressed_pair_elem.2755" = type { %"class.std::__1::vector.2756"* }
%"class.std::__1::vector.2756" = type { %"class.std::__1::__vector_base.2757" }
%"class.std::__1::__vector_base.2757" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2758" }
%"class.std::__1::__compressed_pair.2758" = type { %"struct.std::__1::__compressed_pair_elem.2759" }
%"struct.std::__1::__compressed_pair_elem.2759" = type { %"class.WTF::String"* }
%"class.WTF::HashMap.2766" = type { %"class.WTF::HashTable.2767" }
%"class.WTF::HashTable.2767" = type <{ %"struct.WTF::KeyValuePair.2770"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2770" = type opaque
%"class.blink::HeapHashMap.2771" = type { %"class.WTF::HashMap.2774" }
%"class.WTF::HashMap.2774" = type { %"class.WTF::HashTable.2775" }
%"class.WTF::HashTable.2775" = type <{ %"struct.WTF::KeyValuePair.2777"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2777" = type opaque
%"class.WTF::HashMap.2778" = type { %"class.WTF::HashTable.2779" }
%"class.WTF::HashTable.2779" = type <{ %"struct.WTF::KeyValuePair.2782"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2782" = type opaque
%"class.std::__1::unique_ptr.2783" = type { %"class.std::__1::__compressed_pair.2784" }
%"class.std::__1::__compressed_pair.2784" = type { %"struct.std::__1::__compressed_pair_elem.2785" }
%"struct.std::__1::__compressed_pair_elem.2785" = type { %"class.std::__1::vector.2786"* }
%"class.std::__1::vector.2786" = type opaque
%"class.std::__1::unique_ptr.2790" = type { %"class.std::__1::__compressed_pair.2791" }
%"class.std::__1::__compressed_pair.2791" = type { %"struct.std::__1::__compressed_pair_elem.2792" }
%"struct.std::__1::__compressed_pair_elem.2792" = type { %"class.blink::protocol::DOMSnapshot::DocumentSnapshot"* }
%"class.blink::protocol::DOMSnapshot::DocumentSnapshot" = type { %"class.crdtp::ProtocolObject", i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.2793", %"class.std::__1::unique_ptr.2853", %"class.std::__1::unique_ptr.2878", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2793" = type { %"class.std::__1::__compressed_pair.2794" }
%"class.std::__1::__compressed_pair.2794" = type { %"struct.std::__1::__compressed_pair_elem.2795" }
%"struct.std::__1::__compressed_pair_elem.2795" = type { %"class.blink::protocol::DOMSnapshot::NodeTreeSnapshot"* }
%"class.blink::protocol::DOMSnapshot::NodeTreeSnapshot" = type { %"class.crdtp::ProtocolObject.2796", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2812", %"class.crdtp::detail::PtrMaybe.2820", %"class.crdtp::detail::PtrMaybe.2820", %"class.crdtp::detail::PtrMaybe.2830", %"class.crdtp::detail::PtrMaybe.2830", %"class.crdtp::detail::PtrMaybe.2840", %"class.crdtp::detail::PtrMaybe.2820", %"class.crdtp::detail::PtrMaybe.2830", %"class.crdtp::detail::PtrMaybe.2820", %"class.crdtp::detail::PtrMaybe.2820" }
%"class.crdtp::ProtocolObject.2796" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2799" }
%"class.std::__1::unique_ptr.2799" = type { %"class.std::__1::__compressed_pair.2800" }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.2801" }
%"struct.std::__1::__compressed_pair_elem.2801" = type { %"class.std::__1::vector.2802"* }
%"class.std::__1::vector.2802" = type { %"class.std::__1::__vector_base.2803" }
%"class.std::__1::__vector_base.2803" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2804" }
%"class.std::__1::__compressed_pair.2804" = type { %"struct.std::__1::__compressed_pair_elem.2805" }
%"struct.std::__1::__compressed_pair_elem.2805" = type { i32* }
%"class.crdtp::detail::PtrMaybe.2812" = type { %"class.std::__1::unique_ptr.2813" }
%"class.std::__1::unique_ptr.2813" = type { %"class.std::__1::__compressed_pair.2814" }
%"class.std::__1::__compressed_pair.2814" = type { %"struct.std::__1::__compressed_pair_elem.2815" }
%"struct.std::__1::__compressed_pair_elem.2815" = type { %"class.std::__1::vector.2816"* }
%"class.std::__1::vector.2816" = type { %"class.std::__1::__vector_base.3201" }
%"class.std::__1::__vector_base.3201" = type { %"class.std::__1::unique_ptr.2799"*, %"class.std::__1::unique_ptr.2799"*, %"class.std::__1::__compressed_pair.3202" }
%"class.std::__1::__compressed_pair.3202" = type { %"struct.std::__1::__compressed_pair_elem.3203" }
%"struct.std::__1::__compressed_pair_elem.3203" = type { %"class.std::__1::unique_ptr.2799"* }
%"class.crdtp::detail::PtrMaybe.2840" = type { %"class.std::__1::unique_ptr.2841" }
%"class.std::__1::unique_ptr.2841" = type { %"class.std::__1::__compressed_pair.2842" }
%"class.std::__1::__compressed_pair.2842" = type { %"struct.std::__1::__compressed_pair_elem.2843" }
%"struct.std::__1::__compressed_pair_elem.2843" = type { %"class.blink::protocol::DOMSnapshot::RareIntegerData"* }
%"class.blink::protocol::DOMSnapshot::RareIntegerData" = type { %"class.crdtp::ProtocolObject.2844", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2799" }
%"class.crdtp::ProtocolObject.2844" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2830" = type { %"class.std::__1::unique_ptr.2831" }
%"class.std::__1::unique_ptr.2831" = type { %"class.std::__1::__compressed_pair.2832" }
%"class.std::__1::__compressed_pair.2832" = type { %"struct.std::__1::__compressed_pair_elem.2833" }
%"struct.std::__1::__compressed_pair_elem.2833" = type { %"class.blink::protocol::DOMSnapshot::RareBooleanData"* }
%"class.blink::protocol::DOMSnapshot::RareBooleanData" = type { %"class.crdtp::ProtocolObject.2834", %"class.std::__1::unique_ptr.2799" }
%"class.crdtp::ProtocolObject.2834" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2820" = type { %"class.std::__1::unique_ptr.2821" }
%"class.std::__1::unique_ptr.2821" = type { %"class.std::__1::__compressed_pair.2822" }
%"class.std::__1::__compressed_pair.2822" = type { %"struct.std::__1::__compressed_pair_elem.2823" }
%"struct.std::__1::__compressed_pair_elem.2823" = type { %"class.blink::protocol::DOMSnapshot::RareStringData"* }
%"class.blink::protocol::DOMSnapshot::RareStringData" = type { %"class.crdtp::ProtocolObject.2824", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2799" }
%"class.crdtp::ProtocolObject.2824" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2853" = type { %"class.std::__1::__compressed_pair.2854" }
%"class.std::__1::__compressed_pair.2854" = type { %"struct.std::__1::__compressed_pair_elem.2855" }
%"struct.std::__1::__compressed_pair_elem.2855" = type { %"class.blink::protocol::DOMSnapshot::LayoutTreeSnapshot"* }
%"class.blink::protocol::DOMSnapshot::LayoutTreeSnapshot" = type { %"class.crdtp::ProtocolObject.2856", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2813", %"class.std::__1::unique_ptr.2859", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2831", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2866", %"class.crdtp::detail::PtrMaybe.2866", %"class.crdtp::detail::PtrMaybe.2866", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.2867" }
%"class.crdtp::ProtocolObject.2856" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2859" = type { %"class.std::__1::__compressed_pair.2860" }
%"class.std::__1::__compressed_pair.2860" = type { %"struct.std::__1::__compressed_pair_elem.2861" }
%"struct.std::__1::__compressed_pair_elem.2861" = type { %"class.std::__1::vector.2862"* }
%"class.std::__1::vector.2862" = type { %"class.std::__1::__vector_base.3207" }
%"class.std::__1::__vector_base.3207" = type { %"class.std::__1::unique_ptr.2868"*, %"class.std::__1::unique_ptr.2868"*, %"class.std::__1::__compressed_pair.3208" }
%"class.std::__1::unique_ptr.2868" = type { %"class.std::__1::__compressed_pair.2869" }
%"class.std::__1::__compressed_pair.2869" = type { %"struct.std::__1::__compressed_pair_elem.2870" }
%"struct.std::__1::__compressed_pair_elem.2870" = type { %"class.std::__1::vector.2871"* }
%"class.std::__1::vector.2871" = type { %"class.std::__1::__vector_base.3195" }
%"class.std::__1::__vector_base.3195" = type { double*, double*, %"class.std::__1::__compressed_pair.3196" }
%"class.std::__1::__compressed_pair.3196" = type { %"struct.std::__1::__compressed_pair_elem.3197" }
%"struct.std::__1::__compressed_pair_elem.3197" = type { double* }
%"class.std::__1::__compressed_pair.3208" = type { %"struct.std::__1::__compressed_pair_elem.3209" }
%"struct.std::__1::__compressed_pair_elem.3209" = type { %"class.std::__1::unique_ptr.2868"* }
%"class.crdtp::detail::PtrMaybe.2866" = type { %"class.std::__1::unique_ptr.2859" }
%"class.crdtp::detail::PtrMaybe.2867" = type { %"class.std::__1::unique_ptr.2868" }
%"class.std::__1::unique_ptr.2878" = type { %"class.std::__1::__compressed_pair.2879" }
%"class.std::__1::__compressed_pair.2879" = type { %"struct.std::__1::__compressed_pair_elem.2880" }
%"struct.std::__1::__compressed_pair_elem.2880" = type { %"class.blink::protocol::DOMSnapshot::TextBoxSnapshot"* }
%"class.blink::protocol::DOMSnapshot::TextBoxSnapshot" = type { %"class.crdtp::ProtocolObject.2881", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2859", %"class.std::__1::unique_ptr.2799", %"class.std::__1::unique_ptr.2799" }
%"class.crdtp::ProtocolObject.2881" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe" = type { i8, double }
%"class.std::__1::unique_ptr.2890" = type { %"class.std::__1::__compressed_pair.2891" }
%"class.std::__1::__compressed_pair.2891" = type { %"struct.std::__1::__compressed_pair_elem.2892" }
%"struct.std::__1::__compressed_pair_elem.2892" = type { %"class.WTF::Vector.2893"* }
%"class.WTF::Vector.2893" = type opaque
%"class.std::__1::unique_ptr.2897" = type { %"class.std::__1::__compressed_pair.2898" }
%"class.std::__1::__compressed_pair.2898" = type { %"struct.std::__1::__compressed_pair_elem.2899" }
%"struct.std::__1::__compressed_pair_elem.2899" = type { %"class.WTF::HashMap.2900"* }
%"class.WTF::HashMap.2900" = type { %"class.WTF::HashTable.3019" }
%"class.WTF::HashTable.3019" = type <{ %"struct.WTF::KeyValuePair.3022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3022" = type <{ %"class.blink::PaintLayer"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2904" = type { %"class.std::__1::__compressed_pair.2905" }
%"class.std::__1::__compressed_pair.2905" = type { %"struct.std::__1::__compressed_pair_elem.2906" }
%"struct.std::__1::__compressed_pair_elem.2906" = type { %"class.WTF::HashMap.2907"* }
%"class.WTF::HashMap.2907" = type opaque
%"class.blink::HeapHashMap.2911" = type { %"class.WTF::HashMap.2914" }
%"class.WTF::HashMap.2914" = type { %"class.WTF::HashTable.2915" }
%"class.WTF::HashTable.2915" = type <{ %"struct.WTF::KeyValuePair.2917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2917" = type opaque
%"class.blink::HeapListHashSet.2456" = type { %"class.WTF::ListHashSet.base.2466", [7 x i8] }
%"class.WTF::ListHashSet.base.2466" = type <{ %"class.WTF::HashTable.2461", %"class.blink::Member.2463", %"class.blink::Member.2463", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2461" = type <{ %"class.blink::Member.2463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::HeapListHashSetNode.2465"* }
%"class.blink::HeapListHashSetNode.2465" = type { %"class.blink::Member.2691", %"class.blink::Member.2463", %"class.blink::Member.2463" }
%"class.blink::Member.2691" = type { %"class.blink::MemberBase.2692" }
%"class.blink::MemberBase.2692" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2467" = type { %"class.WTF::ListHashSet.base.2477", [7 x i8] }
%"class.WTF::ListHashSet.base.2477" = type <{ %"class.WTF::HashTable.2472", %"class.blink::Member.2474", %"class.blink::Member.2474", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2472" = type <{ %"class.blink::Member.2474"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2474" = type { %"class.blink::MemberBase.2475" }
%"class.blink::MemberBase.2475" = type { %"class.blink::HeapListHashSetNode.2476"* }
%"class.blink::HeapListHashSetNode.2476" = type { %"class.blink::Member.2584", %"class.blink::Member.2474", %"class.blink::Member.2474" }
%"class.blink::HeapListHashSet.2478" = type { %"class.WTF::ListHashSet.base.2488", [7 x i8] }
%"class.WTF::ListHashSet.base.2488" = type <{ %"class.WTF::HashTable.2483", %"class.blink::Member.2485", %"class.blink::Member.2485", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2483" = type <{ %"class.blink::Member.2485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2485" = type { %"class.blink::MemberBase.2486" }
%"class.blink::MemberBase.2486" = type { %"class.blink::HeapListHashSetNode.2487"* }
%"class.blink::HeapListHashSetNode.2487" = type { %"class.blink::Member.2685", %"class.blink::Member.2485", %"class.blink::Member.2485" }
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2489" = type { %"class.WTF::ListHashSet.base.2499", [7 x i8] }
%"class.WTF::ListHashSet.base.2499" = type <{ %"class.WTF::HashTable.2494", %"class.blink::Member.2496", %"class.blink::Member.2496", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2494" = type <{ %"class.blink::Member.2496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2496" = type { %"class.blink::MemberBase.2497" }
%"class.blink::MemberBase.2497" = type { %"class.blink::HeapListHashSetNode.2498"* }
%"class.blink::HeapListHashSetNode.2498" = type { %"class.blink::Member.2681", %"class.blink::Member.2496", %"class.blink::Member.2496" }
%"class.blink::Member.2681" = type { %"class.blink::MemberBase.2682" }
%"class.blink::MemberBase.2682" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2500" = type { %"class.WTF::ListHashSet.base.2510", [7 x i8] }
%"class.WTF::ListHashSet.base.2510" = type <{ %"class.WTF::HashTable.2505", %"class.blink::Member.2507", %"class.blink::Member.2507", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2505" = type <{ %"class.blink::Member.2507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::HeapListHashSetNode.2509"* }
%"class.blink::HeapListHashSetNode.2509" = type { %"class.blink::Member.2677", %"class.blink::Member.2507", %"class.blink::Member.2507" }
%"class.blink::Member.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2511" = type { %"class.WTF::ListHashSet.base.2521", [7 x i8] }
%"class.WTF::ListHashSet.base.2521" = type <{ %"class.WTF::HashTable.2516", %"class.blink::Member.2518", %"class.blink::Member.2518", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2516" = type <{ %"class.blink::Member.2518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2518" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::HeapListHashSetNode.2520"* }
%"class.blink::HeapListHashSetNode.2520" = type { %"class.blink::Member.2673", %"class.blink::Member.2518", %"class.blink::Member.2518" }
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2522" = type { %"class.WTF::ListHashSet.base.2532", [7 x i8] }
%"class.WTF::ListHashSet.base.2532" = type <{ %"class.WTF::HashTable.2527", %"class.blink::Member.2529", %"class.blink::Member.2529", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2527" = type <{ %"class.blink::Member.2529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2529" = type { %"class.blink::MemberBase.2530" }
%"class.blink::MemberBase.2530" = type { %"class.blink::HeapListHashSetNode.2531"* }
%"class.blink::HeapListHashSetNode.2531" = type { %"class.blink::Member.2669", %"class.blink::Member.2529", %"class.blink::Member.2529" }
%"class.blink::Member.2669" = type { %"class.blink::MemberBase.2670" }
%"class.blink::MemberBase.2670" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2533" = type { %"class.WTF::ListHashSet.base.2543", [7 x i8] }
%"class.WTF::ListHashSet.base.2543" = type <{ %"class.WTF::HashTable.2538", %"class.blink::Member.2540", %"class.blink::Member.2540", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2538" = type <{ %"class.blink::Member.2540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2540" = type { %"class.blink::MemberBase.2541" }
%"class.blink::MemberBase.2541" = type { %"class.blink::HeapListHashSetNode.2542"* }
%"class.blink::HeapListHashSetNode.2542" = type { %"class.blink::Member.2665", %"class.blink::Member.2540", %"class.blink::Member.2540" }
%"class.blink::Member.2665" = type { %"class.blink::MemberBase.2666" }
%"class.blink::MemberBase.2666" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2544" = type { %"class.WTF::ListHashSet.base.2554", [7 x i8] }
%"class.WTF::ListHashSet.base.2554" = type <{ %"class.WTF::HashTable.2549", %"class.blink::Member.2551", %"class.blink::Member.2551", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2549" = type <{ %"class.blink::Member.2551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::HeapListHashSetNode.2553"* }
%"class.blink::HeapListHashSetNode.2553" = type { %"class.blink::Member.2661", %"class.blink::Member.2551", %"class.blink::Member.2551" }
%"class.blink::Member.2661" = type { %"class.blink::MemberBase.2662" }
%"class.blink::MemberBase.2662" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2555" = type { %"class.WTF::ListHashSet.base.2565", [7 x i8] }
%"class.WTF::ListHashSet.base.2565" = type <{ %"class.WTF::HashTable.2560", %"class.blink::Member.2562", %"class.blink::Member.2562", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2560" = type <{ %"class.blink::Member.2562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::HeapListHashSetNode.2564"* }
%"class.blink::HeapListHashSetNode.2564" = type { %"class.blink::Member.2586", %"class.blink::Member.2562", %"class.blink::Member.2562" }
%"class.blink::HeapListHashSet.2566" = type { %"class.WTF::ListHashSet.base.2576", [7 x i8] }
%"class.WTF::ListHashSet.base.2576" = type <{ %"class.WTF::HashTable.2571", %"class.blink::Member.2573", %"class.blink::Member.2573", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2571" = type <{ %"class.blink::Member.2573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2573" = type { %"class.blink::MemberBase.2574" }
%"class.blink::MemberBase.2574" = type { %"class.blink::HeapListHashSetNode.2575"* }
%"class.blink::HeapListHashSetNode.2575" = type { %"class.blink::Member.2578", %"class.blink::Member.2573", %"class.blink::Member.2573" }
%class.scoped_refptr.2577 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2578" = type { %"class.blink::MemberBase.2579" }
%"class.blink::MemberBase.2579" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2580" = type { %"class.blink::MemberBase.2581" }
%"class.blink::MemberBase.2581" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2582" = type { %"class.blink::MemberBase.2583" }
%"class.blink::MemberBase.2583" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2584" = type { %"class.blink::MemberBase.2585" }
%"class.blink::MemberBase.2585" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2590" = type { %"class.blink::MemberBase.2591" }
%"class.blink::MemberBase.2591" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2594" }
%"class.blink::Member.2594" = type { %"class.blink::MemberBase.2595" }
%"class.blink::MemberBase.2595" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3149" }
%"class.mojo::Remote.3149" = type { %"class.mojo::internal::InterfacePtrState.3150" }
%"class.mojo::internal::InterfacePtrState.3150" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3151" }
%"class.std::__1::unique_ptr.3151" = type { %"class.std::__1::__compressed_pair.3152" }
%"class.std::__1::__compressed_pair.3152" = type { %"struct.std::__1::__compressed_pair_elem.3153" }
%"struct.std::__1::__compressed_pair_elem.3153" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2596" = type { %"class.std::__1::__compressed_pair.2597" }
%"class.std::__1::__compressed_pair.2597" = type { %"struct.std::__1::__compressed_pair_elem.2598" }
%"struct.std::__1::__compressed_pair_elem.2598" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2602" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2603" = type { %"class.std::__1::__compressed_pair.2604" }
%"class.std::__1::__compressed_pair.2604" = type { %"struct.std::__1::__compressed_pair_elem.2605" }
%"struct.std::__1::__compressed_pair_elem.2605" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2275" = type { %"class.absl::optional_internal::optional_data.2276" }
%"class.absl::optional_internal::optional_data.2276" = type { %"class.absl::optional_internal::optional_data_base.2277" }
%"class.absl::optional_internal::optional_data_base.2277" = type { %"class.absl::optional_internal::optional_data_dtor_base.2278" }
%"class.absl::optional_internal::optional_data_dtor_base.2278" = type { i8, %union.anon.2279 }
%union.anon.2279 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2609" = type { %"class.std::__1::__compressed_pair.2610" }
%"class.std::__1::__compressed_pair.2610" = type { %"struct.std::__1::__compressed_pair_elem.2611" }
%"struct.std::__1::__compressed_pair_elem.2611" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2615" }
%"class.blink::Member.2615" = type { %"class.blink::MemberBase.2616" }
%"class.blink::MemberBase.2616" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3159" }
%"class.mojo::AssociatedRemote.3159" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3160" }
%"class.mojo::internal::AssociatedInterfacePtrState.3160" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3161" }
%"class.std::__1::unique_ptr.3161" = type { %"class.std::__1::__compressed_pair.3162" }
%"class.std::__1::__compressed_pair.3162" = type { %"struct.std::__1::__compressed_pair_elem.3163" }
%"struct.std::__1::__compressed_pair_elem.3163" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2617" = type { %"class.blink::Member.2618" }
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3169" }
%"class.mojo::AssociatedRemote.3169" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3170" }
%"class.mojo::internal::AssociatedInterfacePtrState.3170" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3171" }
%"class.std::__1::unique_ptr.3171" = type { %"class.std::__1::__compressed_pair.3172" }
%"class.std::__1::__compressed_pair.3172" = type { %"struct.std::__1::__compressed_pair_elem.3173" }
%"struct.std::__1::__compressed_pair_elem.3173" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2620" }
%"class.blink::Member.2620" = type { %"class.blink::MemberBase.2621" }
%"class.blink::MemberBase.2621" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3179", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3179" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3180" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1655" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3180" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2622" = type { %"class.blink::Member.2623" }
%"class.blink::Member.2623" = type { %"class.blink::MemberBase.2624" }
%"class.blink::MemberBase.2624" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3183", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3184" }
%"class.blink::ThreadState::PrefinalizerRegistration.3183" = type { i8 }
%"class.mojo::AssociatedReceiver.3184" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3185" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2625" }
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3188", %"class.blink::Member.1857", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3188" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2156, %"class.std::__1::unique_ptr.1655", %"class.base::WeakPtrFactory.3189" }
%"class.base::WeakPtrFactory.3189" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2627" = type { %"class.blink::Member.2628" }
%"class.blink::Member.2628" = type { %"class.blink::MemberBase.2629" }
%"class.blink::MemberBase.2629" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3192", %"class.blink::Member.1857", %"class.mojo::AssociatedReceiver.3193" }
%"class.blink::ThreadState::PrefinalizerRegistration.3192" = type { i8 }
%"class.mojo::AssociatedReceiver.3193" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3194" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2632" = type { %"class.blink::MemberBase.2633" }
%"class.blink::MemberBase.2633" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2634" = type { %"class.blink::MemberBase.2635" }
%"class.blink::MemberBase.2635" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2636" = type { %"class.blink::MemberBase.2637" }
%"class.blink::MemberBase.2637" = type { %"class.blink::HeapHashMap.2638"* }
%"class.blink::HeapHashMap.2638" = type opaque
%"class.mojo::StructPtr.2639" = type { %"class.std::__1::unique_ptr.2640" }
%"class.std::__1::unique_ptr.2640" = type { %"class.std::__1::__compressed_pair.2641" }
%"class.std::__1::__compressed_pair.2641" = type { %"struct.std::__1::__compressed_pair_elem.2642" }
%"struct.std::__1::__compressed_pair_elem.2642" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2643", %"class.mojo::InlinedStructPtr.2644" }
%"class.mojo::InlinedStructPtr.2643" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2644" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2648" = type { %"class.blink::MemberBase.2649" }
%"class.blink::MemberBase.2649" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2650" = type { %"class.absl::optional_internal::optional_data.2651" }
%"class.absl::optional_internal::optional_data.2651" = type { %"class.absl::optional_internal::optional_data_base.2652" }
%"class.absl::optional_internal::optional_data_base.2652" = type { %"class.absl::optional_internal::optional_data_dtor_base.2653" }
%"class.absl::optional_internal::optional_data_dtor_base.2653" = type { i8, %union.anon.2654 }
%union.anon.2654 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1859" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1860", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.absl::optional.1862" = type { %"class.absl::optional_internal::optional_data.1863" }
%"class.absl::optional_internal::optional_data.1863" = type { %"class.absl::optional_internal::optional_data_base.1864" }
%"class.absl::optional_internal::optional_data_base.1864" = type { %"class.absl::optional_internal::optional_data_dtor_base.1865" }
%"class.absl::optional_internal::optional_data_dtor_base.1865" = type { i8, %union.anon.1866 }
%union.anon.1866 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapHashSet.1871"* }
%"class.blink::HeapHashSet.1871" = type opaque
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.WTF::HashSet.1875"* }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::Member.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::HeapHashSet.1892" = type { %"class.WTF::HashSet.1895" }
%"class.WTF::HashSet.1895" = type { %"class.WTF::HashTable.1896" }
%"class.WTF::HashTable.1896" = type <{ %"class.blink::Member.1898"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2104", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2114", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2106", %"class.blink::Member.2108", %"class.blink::Member.2110", %"class.blink::Member.2112", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2106" = type { %"class.blink::MemberBase.2107" }
%"class.blink::MemberBase.2107" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2114" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2115", { i64, i64 } }
%"class.blink::WeakMember.2115" = type { %"class.blink::MemberBase.1899" }
%"class.std::__1::unique_ptr.1900" = type { %"class.std::__1::__compressed_pair.1901" }
%"class.std::__1::__compressed_pair.1901" = type { %"struct.std::__1::__compressed_pair_elem.1902" }
%"struct.std::__1::__compressed_pair_elem.1902" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1906" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1910", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1910" = type { %"class.WTF::HashTable.1911" }
%"class.WTF::HashTable.1911" = type <{ %"struct.WTF::KeyValuePair.1913"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1913" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1914", i32, i32 }
%"class.WTF::Vector.1914" = type { %"class.WTF::VectorBuffer.1915" }
%"class.WTF::VectorBuffer.1915" = type { %"class.WTF::VectorBufferBase.1916" }
%"class.WTF::VectorBufferBase.1916" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1918" = type { %"class.WTF::LinkedHashSet.1921" }
%"class.WTF::LinkedHashSet.1921" = type { %"class.WTF::HashMap.1922", %"class.WTF::VectorBackedLinkedList.1926" }
%"class.WTF::HashMap.1922" = type { %"class.WTF::HashTable.1923" }
%"class.WTF::HashTable.1923" = type <{ %"struct.WTF::KeyValuePair.1925"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1925" = type opaque
%"class.WTF::VectorBackedLinkedList.1926" = type { %"class.WTF::Vector.1927", i32, i32 }
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"class.WTF::VectorBackedLinkedListNode.1930"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1930" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1932" = type { %"class.std::__1::__compressed_pair.1933" }
%"class.std::__1::__compressed_pair.1933" = type { %"struct.std::__1::__compressed_pair_elem.1934" }
%"struct.std::__1::__compressed_pair_elem.1934" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1938" = type { %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1941, %class.scoped_refptr.1941, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1996", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2001", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1941 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1942", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1949" }
%"class.WTF::RefCounted.1942" = type { %"class.base::RefCounted.1943" }
%"class.base::RefCounted.1943" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1944", i32, [4 x i8] }>
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946" }
%"class.WTF::VectorBufferBase.1946" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1952", %"class.std::__1::unique_ptr.1968", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1955", %"class.WTF::Vector.1960", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957" }
%"class.WTF::VectorBufferBase.1957" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1960" = type { %"class.WTF::VectorBuffer.1961" }
%"class.WTF::VectorBuffer.1961" = type { %"class.WTF::VectorBufferBase.1962" }
%"class.WTF::VectorBufferBase.1962" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1968" = type { %"class.std::__1::__compressed_pair.1969" }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.1970" }
%"struct.std::__1::__compressed_pair_elem.1970" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1971", %"class.absl::optional.1971" }
%"class.absl::optional.1971" = type { %"class.absl::optional_internal::optional_data.1972" }
%"class.absl::optional_internal::optional_data.1972" = type { %"class.absl::optional_internal::optional_data_base.1973" }
%"class.absl::optional_internal::optional_data_base.1973" = type { %"class.absl::optional_internal::optional_data_dtor_base.1974" }
%"class.absl::optional_internal::optional_data_dtor_base.1974" = type { i8, [3 x i8], %union.anon.1975 }
%union.anon.1975 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1949"*, %"class.absl::optional.1981", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1981" = type { %"class.absl::optional_internal::optional_data.1982" }
%"class.absl::optional_internal::optional_data.1982" = type { %"class.absl::optional_internal::optional_data_base.1983" }
%"class.absl::optional_internal::optional_data_base.1983" = type { %"class.absl::optional_internal::optional_data_dtor_base.1984" }
%"class.absl::optional_internal::optional_data_dtor_base.1984" = type { i8, %union.anon.1985 }
%union.anon.1985 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1986", %"class.WTF::Vector.1991" }
%"class.WTF::Vector.1986" = type { %"class.WTF::VectorBuffer.1987" }
%"class.WTF::VectorBuffer.1987" = type { %"class.WTF::VectorBufferBase.1988", [128 x i8] }
%"class.WTF::VectorBufferBase.1988" = type { i32*, i32, i32 }
%"class.WTF::Vector.1991" = type { %"class.WTF::VectorBuffer.1992" }
%"class.WTF::VectorBuffer.1992" = type { %"class.WTF::VectorBufferBase.1993", [128 x i8] }
%"class.WTF::VectorBufferBase.1993" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1996" = type { %"class.WTF::VectorBuffer.1997" }
%"class.WTF::VectorBuffer.1997" = type { %"class.WTF::VectorBufferBase.1998" }
%"class.WTF::VectorBufferBase.1998" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2001" = type { %"class.WTF::HashTable.2002" }
%"class.WTF::HashTable.2002" = type <{ %"struct.WTF::KeyValuePair.2005"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2005" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2006", %"class.WTF::Vector.2011" }
%"class.WTF::HashMap.2006" = type { %"class.WTF::HashTable.2007" }
%"class.WTF::HashTable.2007" = type <{ %"struct.WTF::KeyValuePair.2010"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2010" = type opaque
%"class.WTF::Vector.2011" = type { %"class.WTF::VectorBuffer.2012" }
%"class.WTF::VectorBuffer.2012" = type { %"class.WTF::VectorBufferBase.2013" }
%"class.WTF::VectorBufferBase.2013" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2019" = type { %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2025" = type { %"class.WTF::VectorBuffer.2026" }
%"class.WTF::VectorBuffer.2026" = type { %"class.WTF::VectorBufferBase.2027" }
%"class.WTF::VectorBufferBase.2027" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2030 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2031" = type { %"class.blink::MemberBase.2032" }
%"class.blink::MemberBase.2032" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2033" = type { %"class.blink::MemberBase.2034" }
%"class.blink::MemberBase.2034" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2037" = type { %"class.WTF::HashSet.2040" }
%"class.WTF::HashSet.2040" = type { %"class.WTF::HashTable.2041" }
%"class.WTF::HashTable.2041" = type <{ %"class.blink::WeakMember.2043"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2043" = type opaque
%"class.blink::HeapHashSet.2044" = type { %"class.WTF::HashSet.2047" }
%"class.WTF::HashSet.2047" = type { %"class.WTF::HashTable.2048" }
%"class.WTF::HashTable.2048" = type <{ %"class.blink::WeakMember.2050"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2050" = type opaque
%"class.std::__1::unique_ptr.2051" = type { %"class.std::__1::__compressed_pair.2052" }
%"class.std::__1::__compressed_pair.2052" = type { %"struct.std::__1::__compressed_pair_elem.2053" }
%"struct.std::__1::__compressed_pair_elem.2053" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2054" }
%"class.base::time_internal::TimeBase.2054" = type { i64 }
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2061", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2061" = type { %"class.absl::optional_internal::optional_data.2062" }
%"class.absl::optional_internal::optional_data.2062" = type { %"class.absl::optional_internal::optional_data_base.2063" }
%"class.absl::optional_internal::optional_data_base.2063" = type { %"class.absl::optional_internal::optional_data_dtor_base.2064" }
%"class.absl::optional_internal::optional_data_dtor_base.2064" = type { i8, %union.anon.2065 }
%union.anon.2065 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2069" = type { %"class.std::__1::__compressed_pair.2070" }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.2071" }
%"struct.std::__1::__compressed_pair_elem.2071" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2081" = type { %"class.std::__1::__compressed_pair.2082" }
%"class.std::__1::__compressed_pair.2082" = type { %"struct.std::__1::__compressed_pair_elem.2083" }
%"struct.std::__1::__compressed_pair_elem.2083" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1844 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2087" = type { %"class.blink::PersistentBase.2088" }
%"class.blink::PersistentBase.2088" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2091", i64 }
%"class.blink::HeapVector.2091" = type { %"class.WTF::Vector.2094" }
%"class.WTF::Vector.2094" = type { %"class.WTF::VectorBuffer.2095" }
%"class.WTF::VectorBuffer.2095" = type { %"class.WTF::VectorBufferBase.2096", [368 x i8] }
%"class.WTF::VectorBufferBase.2096" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1898", i8, %"class.blink::Member.2097", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2097" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::HeapLinkedHashSet.2099"* }
%"class.blink::HeapLinkedHashSet.2099" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::InspectorContrast" = type <{ %"class.cc::RTree", %"class.blink::HeapVector.3030", %"class.blink::Document"*, i8, [7 x i8] }>
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"class.std::__1::vector.3023", i8, [7 x i8] }>
%"struct.cc::RTree<blink::Member<blink::Node> >::Branch" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.blink::Member.318", %"class.gfx::Rect" }
%"struct.cc::RTree<blink::Member<blink::Node> >::Node" = type { i16, i16, [11 x %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"] }
%"class.std::__1::vector.3023" = type { %"class.std::__1::__vector_base.3024" }
%"class.std::__1::__vector_base.3024" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.std::__1::__compressed_pair.3025" }
%"class.std::__1::__compressed_pair.3025" = type { %"struct.std::__1::__compressed_pair_elem.3026" }
%"struct.std::__1::__compressed_pair_elem.3026" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* }
%"class.blink::HeapVector.3030" = type { %"class.WTF::Vector.3033" }
%"class.WTF::Vector.3033" = type { %"class.WTF::VectorBuffer.3034" }
%"class.WTF::VectorBuffer.3034" = type { %"class.WTF::VectorBufferBase.3035" }
%"class.WTF::VectorBufferBase.3035" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2118", %"class.blink::Member.3037", %"struct.blink::FramePolicy", %"class.blink::Member.3053", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3037" = type { %"class.blink::MemberBase.3038" }
%"class.blink::MemberBase.3038" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3039", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.3039" = type { %"class.std::__1::__vector_base.3040" }
%"class.std::__1::__vector_base.3040" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3048" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3041", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3041" = type { %"class.std::__1::__vector_base.3042" }
%"class.std::__1::__vector_base.3042" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3043" }
%"class.std::__1::__compressed_pair.3043" = type { %"struct.std::__1::__compressed_pair_elem.3044" }
%"struct.std::__1::__compressed_pair_elem.3044" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3048" = type { %"struct.std::__1::__compressed_pair_elem.3049" }
%"struct.std::__1::__compressed_pair_elem.3049" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3053" = type { %"class.blink::MemberBase.3054" }
%"class.blink::MemberBase.3054" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.std::__1::vector.3305" = type { %"class.std::__1::__vector_base.3306" }
%"class.std::__1::__vector_base.3306" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"class.std::__1::__compressed_pair.3307" }
%"class.std::__1::__compressed_pair.3307" = type { %"struct.std::__1::__compressed_pair_elem.3308" }
%"struct.std::__1::__compressed_pair_elem.3308" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* }
%"class.base::RepeatingCallback.3055" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3243", %"class.blink::Member.3245", %"class.blink::Member.3247", %"class.blink::Member.3266", %"class.blink::Member.3268" }
%"class.blink::Member.3243" = type { %"class.blink::MemberBase.3244" }
%"class.blink::MemberBase.3244" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3245" = type { %"class.blink::MemberBase.3246" }
%"class.blink::MemberBase.3246" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3247" = type { %"class.blink::MemberBase.3248" }
%"class.blink::MemberBase.3248" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3251", %"class.blink::HeapHashSet.3260" }
%"class.blink::HeapVector.3251" = type { %"class.WTF::Vector.3254" }
%"class.WTF::Vector.3254" = type { %"class.WTF::VectorBuffer.3255" }
%"class.WTF::VectorBuffer.3255" = type { %"class.WTF::VectorBufferBase.3256" }
%"class.WTF::VectorBufferBase.3256" = type { %"class.blink::Member.3257"*, i32, i32 }
%"class.blink::Member.3257" = type { %"class.blink::MemberBase.3258" }
%"class.blink::MemberBase.3258" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3260" = type { %"class.WTF::HashSet.3263" }
%"class.WTF::HashSet.3263" = type { %"class.WTF::HashTable.3264" }
%"class.WTF::HashTable.3264" = type <{ %"class.blink::Member.3257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3266" = type { %"class.blink::MemberBase.3267" }
%"class.blink::MemberBase.3267" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3268" = type { %"class.blink::MemberBase.3269" }
%"class.blink::MemberBase.3269" = type { %"class.blink::HeapHashSet.3270"* }
%"class.blink::HeapHashSet.3270" = type opaque
%class.anon.3103 = type { %"class.std::__1::unique_ptr.2897"* }
%"class.std::__1::vector.3058" = type { %"class.std::__1::__vector_base.3059" }
%"class.std::__1::__vector_base.3059" = type { %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"*, %"class.std::__1::__compressed_pair.3060" }
%"struct.blink::ContrastInfo" = type { %"class.blink::Element"*, i8, float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.std::__1::__compressed_pair.3060" = type { %"struct.std::__1::__compressed_pair_elem.3061" }
%"struct.std::__1::__compressed_pair_elem.3061" = type { %"struct.blink::ContrastInfo"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.3090" = type { %"class.WTF::VectorBuffer.3091" }
%"class.WTF::VectorBuffer.3091" = type { %"class.WTF::VectorBufferBase.3092" }
%"class.WTF::VectorBufferBase.3092" = type { %"class.blink::Color"*, i32, i32 }
%"class.blink::ParkableString" = type { %class.scoped_refptr.3065 }
%class.scoped_refptr.3065 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.3066", %"class.WTF::String", %"class.std::__1::unique_ptr.3068" }
%"class.WTF::RefCounted.3066" = type { %"class.base::RefCounted.3067" }
%"class.base::RefCounted.3067" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3068" = type { %"class.std::__1::__compressed_pair.3069" }
%"class.std::__1::__compressed_pair.3069" = type { %"struct.std::__1::__compressed_pair_elem.3070" }
%"struct.std::__1::__compressed_pair_elem.3070" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.3071", %"class.std::__1::unique_ptr.3077", %"class.WTF::Vector.3083", i8, i32 }
%"class.std::__1::unique_ptr.3071" = type { %"class.std::__1::__compressed_pair.3072" }
%"class.std::__1::__compressed_pair.3072" = type { %"struct.std::__1::__compressed_pair_elem.3073" }
%"struct.std::__1::__compressed_pair_elem.3073" = type { %"class.WTF::Vector.2716"* }
%"class.std::__1::unique_ptr.3077" = type { %"class.std::__1::__compressed_pair.3078" }
%"class.std::__1::__compressed_pair.3078" = type { %"struct.std::__1::__compressed_pair_elem.3079" }
%"struct.std::__1::__compressed_pair_elem.3079" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.3083" = type { %"class.WTF::VectorBuffer.3084" }
%"class.WTF::VectorBuffer.3084" = type { %"class.WTF::VectorBufferBase.2718", [32 x i8] }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.318", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3095" }
%"class.blink::WeakMember.3095" = type { %"class.blink::MemberBase.916" }
%"class.std::__1::vector.3096" = type { %"class.std::__1::__vector_base.3097" }
%"class.std::__1::__vector_base.3097" = type { %"class.blink::Member.318"*, %"class.blink::Member.318"*, %"class.std::__1::__compressed_pair.3098" }
%"class.std::__1::__compressed_pair.3098" = type { %"struct.std::__1::__compressed_pair_elem.3099" }
%"struct.std::__1::__compressed_pair_elem.3099" = type { %"class.blink::Member.318"* }
%"class.blink::StyleGeneratedImage" = type <{ %"class.blink::StyleImage.base", [7 x i8], %"class.blink::Member.3271", i8, [7 x i8] }>
%"class.blink::StyleImage.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.3271" = type { %"class.blink::MemberBase.3272" }
%"class.blink::MemberBase.3272" = type { %"class.blink::CSSImageGeneratorValue"* }
%"class.blink::CSSImageGeneratorValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap.3273", %"class.blink::GeneratedImageCache", %"class.blink::SelfKeepAlive" }
%"class.WTF::HashMap.3273" = type { %"class.WTF::HashTable.3274" }
%"class.WTF::HashTable.3274" = type <{ %"struct.WTF::KeyValuePair.3277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3277" = type opaque
%"class.blink::GeneratedImageCache" = type { %"class.WTF::HashCountedSet", %"class.WTF::HashMap.3283" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3278" }
%"class.WTF::HashMap.3278" = type { %"class.WTF::HashTable.3279" }
%"class.WTF::HashTable.3279" = type <{ %"struct.WTF::KeyValuePair.3282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3282" = type opaque
%"class.WTF::HashMap.3283" = type { %"class.WTF::HashTable.3284" }
%"class.WTF::HashTable.3284" = type <{ %"struct.WTF::KeyValuePair.3287"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3287" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3288" }
%"class.blink::Persistent.3288" = type { %"class.blink::PersistentBase.3289" }
%"class.blink::PersistentBase.3289" = type { %"class.blink::CSSImageGeneratorValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::cssvalue::CSSGradientValue" = type <{ %"class.blink::CSSImageGeneratorValue", %"class.blink::HeapVector.3290", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.3290" = type { %"class.WTF::Vector.3293" }
%"class.WTF::Vector.3293" = type { %"class.WTF::VectorBuffer.3294" }
%"class.WTF::VectorBuffer.3294" = type { %"class.WTF::VectorBufferBase.3295", [32 x i8] }
%"class.WTF::VectorBufferBase.3295" = type { %"struct.blink::cssvalue::CSSGradientColorStop"*, i32, i32 }
%"struct.blink::cssvalue::CSSGradientColorStop" = type { %"class.blink::Member.3296", %"class.blink::Member.1215" }
%"class.blink::Member.3296" = type { %"class.blink::MemberBase.3297" }
%"class.blink::MemberBase.3297" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE7reserveEm = comdat any

$_ZN2cc5RTreeIN5blink6MemberINS1_4NodeEEEE14BuildRecursiveEPNSt3__16vectorINS5_6BranchIS4_EENS6_9allocatorIS9_EEEEi = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE6BranchIS6_EENS_9allocatorIS9_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN5blink12ContrastInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK2cc5RTreeIN5blink6MemberINS1_4NodeEEEE15SearchRecursiveEPNS5_4NodeIS4_EERKN3gfx4RectEPNSt3__16vectorIS4_NSD_9allocatorIS4_EEEEPNSE_ISA_NSF_ISA_EEEE = comdat any

$_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_ = comdat any

$_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_4NodeEEEEET_S6_S6_S6_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [53 x i8] c"InspectorContrast::CollectNodesAndBuildRTreeIfNeeded\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"InspectorContrast::GetElementsWithContrastIssues\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"InspectorContrast::GetContrast\00", align 1
@__const._ZN5blink17InspectorContrast11GetContrastEPNS_7ElementE.result = private unnamed_addr constant { %"class.blink::Element"*, i8, [3 x i8], float, float, float, %"class.WTF::String", %"class.WTF::String" } { %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"bolder\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"600\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"700\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"800\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"900\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Color]\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names10kCanvasTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kPictureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN5blink17InspectorContrastC1EPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::InspectorContrast"*, %"class.blink::Document"*), void (%"class.blink::InspectorContrast"*, %"class.blink::Document"*)* @_ZN5blink17InspectorContrastC2EPNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrastC2EPNS_8DocumentE(%"class.blink::InspectorContrast"* nocapture, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 3
  %6 = bitcast %"class.blink::Node"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #15
  store i8 1, i8* %5, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::HeapVector.3030"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #15
  %9 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 3
  store i8 0, i8* %9, align 8
  %10 = tail call zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"* %1) #15
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %1) #15
  %13 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %11, %14
  %15 = phi %"class.blink::HTMLFrameOwnerElement"* [ %20, %14 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %19) #15
  %21 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %20, null
  br i1 %21, label %22, label %14

22:                                               ; preds = %14, %11, %2
  %23 = phi %"class.blink::Document"* [ %1, %2 ], [ %1, %11 ], [ %19, %14 ]
  %24 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 2
  store %"class.blink::Document"* %23, %"class.blink::Document"** %24, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast33CollectNodesAndBuildRTreeIfNeededEv(%"class.blink::InspectorContrast"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.3305", align 8
  %4 = alloca %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::RepeatingCallback.3055", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %1
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %12 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi i64 [ -6148914691236517206, %1 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), %10 ]
  %20 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %474

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 2
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %25) #15
  %27 = icmp eq %"class.blink::LocalFrame"* %26, null
  br i1 %27, label %474, label %28

28:                                               ; preds = %23
  %29 = call %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"* nonnull %26) #15
  %30 = icmp eq %"class.blink::LayoutView"* %29, null
  br i1 %30, label %474, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %29, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %32, align 8
  %34 = call zeroext i1 @_ZN5blink14LocalFrameView30UpdateLifecycleToPrePaintCleanENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"* %33, i32 13) #15
  br i1 %34, label %35, label %474

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::Document"** %24 to %"class.blink::Node"**
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = call i8* @_Znwm(i64 48) #16, !noalias !4
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::Node"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !4
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 ptrtoint (i1 (%"class.blink::Node"*)* @_ZN5blink12_GLOBAL__N_129NodeIsElementWithLayoutObjectEPNS_4NodeE to i64), i64* %41, align 8, !noalias !4
  %42 = bitcast %"class.base::RepeatingCallback.3055"* %6 to i8**
  store i8* %38, i8** %42, align 8, !alias.scope !4
  %43 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 1
  call void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"* %37, i32 2147483647, i1 zeroext true, %"class.base::RepeatingCallback.3055"* nonnull %6, %"class.blink::HeapVector.3030"* %43) #15
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.3055", %"class.base::RepeatingCallback.3055"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #15
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  call void @_ZN5blink17InspectorContrast24SortElementsByPaintOrderERNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEPNS_8DocumentE(%"class.blink::InspectorContrast"* undef, %"class.blink::HeapVector.3030"* dereferenceable(16) %43, %"class.blink::Document"* %45)
  %46 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0
  %47 = bitcast %"class.std::__1::vector.3305"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #15
  %48 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %3, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %3, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #15
  %51 = getelementptr inbounds %"class.blink::HeapVector.3030", %"class.blink::HeapVector.3030"* %43, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %50 to i64*
  %56 = bitcast %"class.std::__1::vector.3305"* %3 to i64*
  %57 = icmp eq i32 %53, 0
  %58 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %49 to i64*
  br i1 %57, label %66, label %59

59:                                               ; preds = %35
  %60 = shl nuw nsw i64 %54, 5
  %61 = call i8* @_Znwm(i64 %60) #16
  %62 = bitcast i8* %61 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %62, i64 %54
  %65 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %64 to i64
  store i64 %63, i64* %56, align 8
  store i64 %63, i64* %58, align 8
  store i64 %65, i64* %55, align 8
  br label %73

66:                                               ; preds = %297, %35
  %67 = phi i64 [ 0, %35 ], [ %299, %297 ]
  %68 = phi i64 [ 0, %35 ], [ %300, %297 ]
  %69 = sub i64 %68, %67
  %70 = ashr exact i64 %69, 5
  %71 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = inttoptr i64 %67 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  switch i64 %70, label %435 [
    i64 1, label %306
    i64 0, label %467
  ]

73:                                               ; preds = %297, %59
  %74 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %62, %59 ], [ %298, %297 ]
  %75 = phi i64 [ %63, %59 ], [ %299, %297 ]
  %76 = phi i64 [ %63, %59 ], [ %300, %297 ]
  %77 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %62, %59 ], [ %301, %297 ]
  %78 = phi i64 [ 0, %59 ], [ %302, %297 ]
  %79 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %74 to i64
  %80 = trunc i64 %78 to i32
  %81 = call dereferenceable(8) %"class.blink::Member.318"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3033"* %51, i32 %80) #15
  %82 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_111GetNodeRectEPNS_4NodeE(%"class.blink::Node"* %83) #15
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = extractvalue { i64, i64 } %84, 1
  %90 = sdiv i32 %86, 64
  %91 = srem i32 %86, 64
  %92 = add nsw i32 %91, 32
  %93 = ashr i32 %92, 6
  %94 = add nsw i32 %93, %90
  %95 = sdiv i32 %88, 64
  %96 = srem i32 %88, 64
  %97 = add nsw i32 %96, 32
  %98 = ashr i32 %97, 6
  %99 = add nsw i32 %98, %95
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = trunc i64 %89 to i32
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %102) #15
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !11
  %109 = sdiv i32 %108, 64
  %110 = srem i32 %108, 64
  %111 = add nsw i32 %110, 32
  %112 = ashr i32 %111, 6
  %113 = sub nsw i32 %109, %93
  %114 = add nsw i32 %112, %113
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %73
  %117 = add i32 %102, 4
  %118 = icmp ugt i32 %117, 8
  br i1 %118, label %119, label %122, !prof !12

119:                                              ; preds = %116
  %120 = icmp sgt i32 %102, 0
  %121 = select i1 %120, i32 1, i32 -1
  br label %122

122:                                              ; preds = %119, %116, %73
  %123 = phi i32 [ %121, %119 ], [ %114, %73 ], [ 0, %116 ]
  %124 = lshr i64 %89, 32
  %125 = trunc i64 %124 to i32
  %126 = icmp slt i32 %125, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %96, i32 %125) #15
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !11
  %132 = sdiv i32 %131, 64
  %133 = srem i32 %131, 64
  %134 = add nsw i32 %133, 32
  %135 = ashr i32 %134, 6
  %136 = sub nsw i32 %132, %98
  %137 = add nsw i32 %135, %136
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %145

139:                                              ; preds = %122
  %140 = add i32 %125, 4
  %141 = icmp ugt i32 %140, 8
  br i1 %141, label %142, label %145, !prof !12

142:                                              ; preds = %139
  %143 = icmp sgt i32 %125, 0
  %144 = select i1 %143, i32 1, i32 -1
  br label %145

145:                                              ; preds = %142, %139, %122
  %146 = phi i32 [ %144, %142 ], [ %137, %122 ], [ 0, %139 ]
  %147 = icmp sgt i32 %94, 0
  %148 = icmp sgt i32 %123, 0
  %149 = and i1 %147, %148
  %150 = sub nuw nsw i32 2147483647, %94
  %151 = icmp ult i32 %150, %123
  %152 = and i1 %151, %149
  %153 = select i1 %152, i32 %150, i32 %123
  %154 = icmp sgt i32 %99, 0
  %155 = icmp sgt i32 %146, 0
  %156 = and i1 %154, %155
  %157 = sub nuw nsw i32 2147483647, %99
  %158 = icmp ult i32 %157, %146
  %159 = and i1 %158, %156
  %160 = select i1 %159, i32 %157, i32 %146
  %161 = icmp sgt i32 %153, 0
  %162 = select i1 %161, i32 %153, i32 0
  %163 = icmp sgt i32 %160, 0
  %164 = select i1 %163, i32 %160, i32 0
  %165 = zext i32 %94 to i64
  %166 = or i64 %101, %165
  %167 = zext i32 %164 to i64
  %168 = shl nuw nsw i64 %167, 32
  %169 = zext i32 %162 to i64
  %170 = or i64 %168, %169
  %171 = icmp slt i32 %153, 1
  %172 = icmp slt i32 %160, 1
  %173 = or i1 %171, %172
  br i1 %173, label %297, label %174

174:                                              ; preds = %145
  %175 = call dereferenceable(8) %"class.blink::Member.318"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3033"* %51, i32 %80) #15, !noalias !13
  %176 = bitcast %"class.blink::Member.318"* %175 to i64*
  %177 = load i64, i64* %176, align 8, !noalias !13
  %178 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %50, align 8
  %179 = icmp ult %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, %178
  %180 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %178 to i64
  br i1 %179, label %181, label %190

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 0, i32 1
  %183 = bitcast %"class.blink::Member.318"* %182 to i64*
  store i64 %177, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 0, i32 2
  %185 = bitcast %"class.gfx::Rect"* %184 to i64*
  store i64 %166, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 0, i32 2, i32 1
  %187 = bitcast %"class.gfx::Size"* %186 to i64*
  store i64 %170, i64* %187, align 8
  %188 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 1
  %189 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %188 to i64
  store i64 %189, i64* %58, align 8
  br label %297

190:                                              ; preds = %174
  %191 = sub i64 %76, %75
  %192 = ashr exact i64 %191, 5
  %193 = add nsw i64 %192, 1
  %194 = icmp ugt i64 %193, 576460752303423487
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  %196 = bitcast %"class.std::__1::vector.3305"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %196) #17
  unreachable

197:                                              ; preds = %190
  %198 = sub i64 %180, %75
  %199 = ashr exact i64 %198, 5
  %200 = icmp ult i64 %199, 288230376151711743
  br i1 %200, label %201, label %209

201:                                              ; preds = %197
  %202 = ashr exact i64 %198, 4
  %203 = icmp ult i64 %202, %193
  %204 = select i1 %203, i64 %193, i64 %202
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %214, label %206

206:                                              ; preds = %201
  %207 = icmp ugt i64 %204, 576460752303423487
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  call void @abort() #17
  unreachable

209:                                              ; preds = %206, %197
  %210 = phi i64 [ %204, %206 ], [ 576460752303423487, %197 ]
  %211 = shl i64 %210, 5
  %212 = call i8* @_Znwm(i64 %211) #16
  %213 = bitcast i8* %212 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  br label %214

214:                                              ; preds = %209, %201
  %215 = phi i64 [ %210, %209 ], [ 0, %201 ]
  %216 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %213, %209 ], [ null, %201 ]
  %217 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %216, i64 %192
  %218 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %216, i64 %215
  %219 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %218 to i64
  %220 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %216, i64 %192, i32 1
  %221 = bitcast %"class.blink::Member.318"* %220 to i64*
  store i64 %177, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %216, i64 %192, i32 2
  %223 = bitcast %"class.gfx::Rect"* %222 to i64*
  store i64 %166, i64* %223, align 8
  %224 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %216, i64 %192, i32 2, i32 1
  %225 = bitcast %"class.gfx::Size"* %224 to i64*
  store i64 %170, i64* %225, align 8
  %226 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %217, i64 1
  %227 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %226 to i64
  %228 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, %74
  br i1 %228, label %290, label %229

229:                                              ; preds = %214
  %230 = getelementptr %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 -1
  %231 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %230 to i64
  %232 = sub i64 %231, %79
  %233 = and i64 %232, 32
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %250

235:                                              ; preds = %229
  %236 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %217, i64 -1
  %237 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 -1
  %238 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %217, i64 -1, i32 1
  %242 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 -1, i32 1
  %243 = bitcast %"class.blink::Member.318"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.blink::Member.318"* %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %217, i64 -1, i32 2
  %247 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %77, i64 -1, i32 2
  %248 = bitcast %"class.gfx::Rect"* %246 to i8*
  %249 = bitcast %"class.gfx::Rect"* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 16, i1 false) #15
  br label %250

250:                                              ; preds = %235, %229
  %251 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %236, %235 ], [ undef, %229 ]
  %252 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %236, %235 ], [ %217, %229 ]
  %253 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %237, %235 ], [ %77, %229 ]
  %254 = icmp ult i64 %232, 32
  br i1 %254, label %287, label %255

255:                                              ; preds = %250, %255
  %256 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %272, %255 ], [ %252, %250 ]
  %257 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %273, %255 ], [ %253, %250 ]
  %258 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -1
  %259 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -1
  %260 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %258 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -1, i32 1
  %264 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -1, i32 1
  %265 = bitcast %"class.blink::Member.318"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.blink::Member.318"* %263 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -1, i32 2
  %269 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -1, i32 2
  %270 = bitcast %"class.gfx::Rect"* %268 to i8*
  %271 = bitcast %"class.gfx::Rect"* %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %270, i8* align 8 %271, i64 16, i1 false) #15
  %272 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -2
  %273 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -2
  %274 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %272 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -2, i32 1
  %278 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -2, i32 1
  %279 = bitcast %"class.blink::Member.318"* %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"class.blink::Member.318"* %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %256, i64 -2, i32 2
  %283 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %257, i64 -2, i32 2
  %284 = bitcast %"class.gfx::Rect"* %282 to i8*
  %285 = bitcast %"class.gfx::Rect"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 16, i1 false) #15
  %286 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %273, %74
  br i1 %286, label %287, label %255

287:                                              ; preds = %255, %250
  %288 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %251, %250 ], [ %272, %255 ]
  %289 = load i64, i64* %56, align 8
  br label %290

290:                                              ; preds = %214, %287
  %291 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %288, %287 ], [ %217, %214 ]
  %292 = phi i64 [ %289, %287 ], [ %79, %214 ]
  %293 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %291 to i64
  store i64 %293, i64* %56, align 8
  store i64 %227, i64* %58, align 8
  store i64 %219, i64* %55, align 8
  %294 = icmp eq i64 %292, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %290
  %296 = inttoptr i64 %292 to i8*
  call void @_ZdlPv(i8* %296) #16
  br label %297

297:                                              ; preds = %295, %290, %181, %145
  %298 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %74, %145 ], [ %74, %181 ], [ %291, %290 ], [ %291, %295 ]
  %299 = phi i64 [ %75, %145 ], [ %75, %181 ], [ %293, %290 ], [ %293, %295 ]
  %300 = phi i64 [ %76, %145 ], [ %189, %181 ], [ %227, %290 ], [ %227, %295 ]
  %301 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %77, %145 ], [ %188, %181 ], [ %226, %290 ], [ %226, %295 ]
  %302 = add nuw nsw i64 %78, 1
  %303 = load i32, i32* %52, align 4
  %304 = zext i32 %303 to i64
  %305 = icmp ult i64 %302, %304
  br i1 %305, label %73, label %66

306:                                              ; preds = %66
  %307 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 2
  %308 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %309 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.std::__1::vector.3023"* %307 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = icmp eq i64 %310, %312
  %314 = inttoptr i64 %312 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  %315 = inttoptr i64 %310 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  br i1 %313, label %316, label %369

316:                                              ; preds = %306
  %317 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %318 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = sub i64 %319, %310
  %321 = sdiv exact i64 %320, 360
  %322 = call i8* @_Znwm(i64 360) #16
  %323 = bitcast i8* %322 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  %324 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %323, i64 %321
  %325 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %324 to i64
  %326 = getelementptr inbounds i8, i8* %322, i64 360
  %327 = ptrtoint i8* %326 to i64
  %328 = inttoptr i64 %319 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  %329 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %328, %314
  br i1 %329, label %361, label %330

330:                                              ; preds = %316, %356
  %331 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %333, %356 ], [ %324, %316 ]
  %332 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %334, %356 ], [ %328, %316 ]
  %333 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %331, i64 -1
  %334 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %332, i64 -1
  %335 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %334 to i32*
  %336 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %333 to i32*
  %337 = load i32, i32* %335, align 8
  store i32 %337, i32* %336, align 8
  br label %338

338:                                              ; preds = %338, %330
  %339 = phi i64 [ 0, %330 ], [ %354, %338 ]
  %340 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %331, i64 -1, i32 2, i64 %339
  %341 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %332, i64 -1, i32 2, i64 %339
  %342 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %331, i64 -1, i32 2, i64 %339, i32 1
  %346 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %332, i64 -1, i32 2, i64 %339, i32 1
  %347 = bitcast %"class.blink::Member.318"* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.blink::Member.318"* %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %331, i64 -1, i32 2, i64 %339, i32 2
  %351 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %332, i64 -1, i32 2, i64 %339, i32 2
  %352 = bitcast %"class.gfx::Rect"* %350 to i8*
  %353 = bitcast %"class.gfx::Rect"* %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %353, i64 16, i1 false) #15
  %354 = add nuw nsw i64 %339, 1
  %355 = icmp eq i64 %354, 11
  br i1 %355, label %356, label %338

356:                                              ; preds = %338
  %357 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %334, %314
  br i1 %357, label %358, label %330

358:                                              ; preds = %356
  %359 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %333 to i64
  %360 = load i64, i64* %311, align 8
  br label %361

361:                                              ; preds = %358, %316
  %362 = phi i64 [ %359, %358 ], [ %325, %316 ]
  %363 = phi i64 [ %360, %358 ], [ %319, %316 ]
  store i64 %362, i64* %311, align 8
  store i64 %325, i64* %318, align 8
  store i64 %327, i64* %309, align 8
  %364 = icmp eq i64 %363, 0
  %365 = bitcast i8* %326 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  br i1 %364, label %369, label %366

366:                                              ; preds = %361
  %367 = inttoptr i64 %363 to i8*
  call void @_ZdlPv(i8* %367) #16
  %368 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %308, align 8
  br label %369

369:                                              ; preds = %366, %361, %306
  %370 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %315, %306 ], [ %365, %361 ], [ %368, %366 ]
  %371 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %371) #15
  store i32 0, i32* %2, align 4
  %372 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %373 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %372, align 8
  %374 = icmp ult %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, %370
  br i1 %374, label %375, label %403

375:                                              ; preds = %369
  %376 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 0
  store i16 0, i16* %376, align 8
  %377 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 1
  store i16 0, i16* %377, align 2
  %378 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 0, i32 1, i32 0, i32 0
  %379 = bitcast %"class.blink::Node"** %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 24, i1 false) #15
  %380 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 1, i32 1, i32 0, i32 0
  %381 = bitcast %"class.blink::Node"** %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 24, i1 false) #15
  %382 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 2, i32 1, i32 0, i32 0
  %383 = bitcast %"class.blink::Node"** %382 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 24, i1 false) #15
  %384 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 3, i32 1, i32 0, i32 0
  %385 = bitcast %"class.blink::Node"** %384 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %385, i8 0, i64 24, i1 false) #15
  %386 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 4, i32 1, i32 0, i32 0
  %387 = bitcast %"class.blink::Node"** %386 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %387, i8 0, i64 24, i1 false) #15
  %388 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 5, i32 1, i32 0, i32 0
  %389 = bitcast %"class.blink::Node"** %388 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %389, i8 0, i64 24, i1 false) #15
  %390 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 6, i32 1, i32 0, i32 0
  %391 = bitcast %"class.blink::Node"** %390 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 24, i1 false) #15
  %392 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 7, i32 1, i32 0, i32 0
  %393 = bitcast %"class.blink::Node"** %392 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %393, i8 0, i64 24, i1 false) #15
  %394 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 8, i32 1, i32 0, i32 0
  %395 = bitcast %"class.blink::Node"** %394 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %395, i8 0, i64 24, i1 false) #15
  %396 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 9, i32 1, i32 0, i32 0
  %397 = bitcast %"class.blink::Node"** %396 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %397, i8 0, i64 24, i1 false) #15
  %398 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 0, i32 2, i64 10, i32 1, i32 0, i32 0
  %399 = bitcast %"class.blink::Node"** %398 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %399, i8 0, i64 24, i1 false) #15
  %400 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %373, i64 1
  %401 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %400 to i64
  %402 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %372 to i64*
  store i64 %401, i64* %402, align 8
  br label %405

403:                                              ; preds = %369
  call void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector.3023"* %307, i32* nonnull dereferenceable(4) %2) #15
  %404 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %372, align 8
  br label %405

405:                                              ; preds = %403, %375
  %406 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %400, %375 ], [ %404, %403 ]
  %407 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %406, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %371) #15
  %408 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1, i32 0
  store %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %407, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %408, align 8
  %409 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %48, align 8
  %410 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %409, i64 0, i32 2
  %411 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1, i32 2
  %412 = bitcast %"class.gfx::Rect"* %411 to i8*
  %413 = bitcast %"class.gfx::Rect"* %410 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %412, i8* align 4 %413, i64 16, i1 false) #15
  %414 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %407, i64 0, i32 0
  store i16 1, i16* %414, align 8
  %415 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %48, align 8
  %416 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %406, i64 -1, i32 2, i64 0
  %417 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %415 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %416 to i64*
  store i64 %418, i64* %419, align 8
  %420 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %406, i64 -1, i32 2, i64 0, i32 1
  %421 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %415, i64 0, i32 1
  %422 = bitcast %"class.blink::Member.318"* %421 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = bitcast %"class.blink::Member.318"* %420 to i64*
  store atomic i64 %423, i64* %424 monotonic, align 8
  %425 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %405
  %428 = inttoptr i64 %423 to i8*
  %429 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %428) #15
  br label %430

430:                                              ; preds = %427, %405
  %431 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %406, i64 -1, i32 2, i64 0, i32 2
  %432 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %415, i64 0, i32 2
  %433 = bitcast %"class.gfx::Rect"* %431 to i8*
  %434 = bitcast %"class.gfx::Rect"* %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %433, i8* align 8 %434, i64 16, i1 false) #15
  br label %465

435:                                              ; preds = %66
  %436 = uitofp i64 %70 to double
  %437 = call double @log(double %436) #15
  %438 = fdiv double %437, 0x40032EE3B77F374C
  %439 = call double @pow(double 1.100000e+01, double %438) #15
  %440 = fadd double %439, -1.000000e+00
  %441 = fdiv double %440, 1.000000e+01
  %442 = fptoui double %441 to i64
  %443 = add i64 %442, 6
  %444 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 2
  call void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE7reserveEm(%"class.std::__1::vector.3023"* %444, i64 %443) #15
  %445 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %445) #15
  call void @_ZN2cc5RTreeIN5blink6MemberINS1_4NodeEEEE14BuildRecursiveEPNSt3__16vectorINS5_6BranchIS4_EENS6_9allocatorIS9_EEEEi(%"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* nonnull sret %4, %"class.cc::RTree"* %46, %"class.std::__1::vector.3305"* nonnull %3, i32 0) #15
  %446 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1
  %447 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %4 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %446 to i64*
  store i64 %448, i64* %449, align 8
  %450 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1, i32 1
  %451 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %4, i64 0, i32 1
  %452 = bitcast %"class.blink::Member.318"* %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = bitcast %"class.blink::Member.318"* %450 to i64*
  store atomic i64 %453, i64* %454 monotonic, align 8
  %455 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %460, label %457

457:                                              ; preds = %435
  %458 = inttoptr i64 %453 to i8*
  %459 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %458) #15
  br label %460

460:                                              ; preds = %457, %435
  %461 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %0, i64 0, i32 0, i32 1, i32 2
  %462 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %4, i64 0, i32 2
  %463 = bitcast %"class.gfx::Rect"* %461 to i8*
  %464 = bitcast %"class.gfx::Rect"* %462 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %463, i8* align 8 %464, i64 16, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %445) #15
  br label %465

465:                                              ; preds = %460, %430
  %466 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %48, align 8
  br label %467

467:                                              ; preds = %465, %66
  %468 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %466, %465 ], [ %72, %66 ]
  %469 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %468, null
  br i1 %469, label %473, label %470

470:                                              ; preds = %467
  %471 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %468 to i64
  store i64 %471, i64* %58, align 8
  %472 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %468 to i8*
  call void @_ZdlPv(i8* %472) #16
  br label %473

473:                                              ; preds = %467, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #15
  store i8 1, i8* %20, align 8
  br label %474

474:                                              ; preds = %23, %31, %28, %473, %16
  %475 = icmp eq i8* %19, null
  br i1 %475, label %480, label %476

476:                                              ; preds = %474
  %477 = load i8, i8* %19, align 1
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %480, label %479

479:                                              ; preds = %476
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #15
  br label %480

480:                                              ; preds = %474, %476, %479
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::LayoutView"* @_ZNK5blink10LocalFrame19ContentLayoutObjectEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14LocalFrameView30UpdateLifecycleToPrePaintCleanENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #1

declare void @_ZN5blink17InspectorDOMAgent12CollectNodesEPNS_4NodeEibN4base17RepeatingCallbackIFbS2_EEEPNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Node"*, i32, i1 zeroext, %"class.base::RepeatingCallback.3055"*, %"class.blink::HeapVector.3030"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_129NodeIsElementWithLayoutObjectEPNS_4NodeE(%"class.blink::Node"* readonly) #3 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = and i32 %5, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %10, label %16, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %14 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %18

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %18

18:                                               ; preds = %12, %16
  %19 = phi %"class.blink::NodeRenderingData"** [ %15, %12 ], [ %17, %16 ]
  %20 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %20, i64 0, i32 1
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %3, %1, %18
  br label %25

25:                                               ; preds = %18, %24
  %26 = phi i1 [ false, %24 ], [ true, %18 ]
  ret i1 %26
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast24SortElementsByPaintOrderERNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEPNS_8DocumentE(%"class.blink::InspectorContrast"* nocapture readnone, %"class.blink::HeapVector.3030"* nocapture readonly dereferenceable(16), %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.3103, align 8
  %5 = alloca %"class.std::__1::unique_ptr.2897", align 8
  %6 = bitcast %"class.std::__1::unique_ptr.2897"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = tail call %"class.WTF::HashMap.2900"* @_ZN5blink25InspectorDOMSnapshotAgent19BuildPaintLayerTreeEPNS_8DocumentE(%"class.blink::Document"* %2) #15
  store %"class.WTF::HashMap.2900"* %8, %"class.WTF::HashMap.2900"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.3030", %"class.blink::HeapVector.3030"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector.3030", %"class.blink::HeapVector.3030"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %10, i64 %13
  %15 = bitcast %class.anon.3103* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %4, i64 0, i32 0
  store %"class.std::__1::unique_ptr.2897"* %5, %"class.std::__1::unique_ptr.2897"** %16, align 8
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %3, %23
  %19 = phi i64 [ %24, %23 ], [ %13, %3 ]
  %20 = shl i64 %19, 3
  %21 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %20, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = lshr i64 %19, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %18

26:                                               ; preds = %23, %3
  call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %10, %"class.blink::Member.318"* %14, %class.anon.3103* nonnull dereferenceable(8) %4, i64 %13, %"class.blink::Member.318"* null, i64 0) #15
  br label %29

27:                                               ; preds = %18
  %28 = bitcast i8* %21 to %"class.blink::Member.318"*
  call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %10, %"class.blink::Member.318"* %14, %class.anon.3103* nonnull dereferenceable(8) %4, i64 %13, %"class.blink::Member.318"* nonnull %28, i64 %19) #15
  call void @_ZdlPv(i8* nonnull %21) #16
  br label %29

29:                                               ; preds = %26, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %30 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %7, align 8
  store %"class.WTF::HashMap.2900"* null, %"class.WTF::HashMap.2900"** %7, align 8
  %31 = icmp eq %"class.WTF::HashMap.2900"* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %30, i64 0, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %33, align 8
  %35 = icmp eq %"struct.WTF::KeyValuePair.3022"* %34, null
  br i1 %35, label %38, label %36, !prof !2

36:                                               ; preds = %32
  %37 = bitcast %"struct.WTF::KeyValuePair.3022"* %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #15
  store %"struct.WTF::KeyValuePair.3022"* null, %"struct.WTF::KeyValuePair.3022"** %33, align 8
  br label %38

38:                                               ; preds = %36, %32
  %39 = bitcast %"class.WTF::HashMap.2900"* %30 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %39) #15
  br label %40

40:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast29GetElementsWithContrastIssuesEbm(%"class.std::__1::vector.3058"* noalias sret, %"class.blink::InspectorContrast"*, i1 zeroext, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"struct.blink::ContrastInfo", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %4
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %12 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  br label %16

16:                                               ; preds = %4, %10
  %17 = phi i64 [ -6148914691236517206, %4 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), %10 ]
  call void @_ZN5blink17InspectorContrast33CollectNodesAndBuildRTreeIfNeededEv(%"class.blink::InspectorContrast"* %1)
  %20 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.std::__1::vector.3058"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #15
  %24 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %176, label %31

31:                                               ; preds = %16
  %32 = bitcast %"struct.blink::ContrastInfo"* %6 to i8*
  %33 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 4
  %35 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 3
  %37 = xor i1 %2, true
  %38 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 5
  %39 = bitcast %"class.WTF::String"* %38 to i64*
  %40 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 6
  %41 = bitcast %"class.WTF::String"* %40 to i64*
  %42 = bitcast %"struct.blink::ContrastInfo"** %21 to i64*
  %43 = icmp eq i64 %3, 0
  %44 = bitcast %"class.std::__1::vector.3058"* %0 to i64*
  %45 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 6, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %6, i64 0, i32 5, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %38 to <2 x %"class.WTF::StringImpl"*>*
  br label %50

48:                                               ; preds = %122
  %49 = icmp eq %"class.blink::Member.318"* %124, %29
  br i1 %49, label %176, label %50

50:                                               ; preds = %31, %48
  %51 = phi %"class.blink::Member.318"* [ %25, %31 ], [ %124, %48 ]
  %52 = phi i1 [ false, %31 ], [ %89, %48 ]
  %53 = bitcast %"class.blink::Member.318"* %51 to %"class.blink::Element"**
  %54 = load %"class.blink::Element"*, %"class.blink::Element"** %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 bitcast ({ %"class.blink::Element"*, i8, [3 x i8], float, float, float, %"class.WTF::String", %"class.WTF::String" }* @__const._ZN5blink17InspectorContrast11GetContrastEPNS_7ElementE.result to i8*), i64 40, i1 false)
  call void @_ZN5blink17InspectorContrast11GetContrastEPNS_7ElementE(%"struct.blink::ContrastInfo"* nonnull sret %6, %"class.blink::InspectorContrast"* %1, %"class.blink::Element"* %54)
  %55 = load i8, i8* %33, align 8, !range !3
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %87, label %57

57:                                               ; preds = %50
  %58 = load float, float* %34, align 4
  %59 = load float, float* %35, align 4
  %60 = fcmp olt float %58, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = load float, float* %36, align 8
  %63 = fcmp uge float %58, %62
  %64 = or i1 %63, %37
  br i1 %64, label %87, label %65

65:                                               ; preds = %61, %57
  %66 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %21, align 8
  %67 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %22, align 8
  %68 = icmp ult %"struct.blink::ContrastInfo"* %66, %67
  br i1 %68, label %69, label %79

69:                                               ; preds = %65
  %70 = bitcast %"struct.blink::ContrastInfo"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %32, i64 24, i1 false) #15
  %71 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %66, i64 0, i32 5
  %72 = load i64, i64* %39, align 8
  %73 = bitcast %"class.WTF::String"* %71 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %66, i64 0, i32 6
  %75 = load i64, i64* %41, align 8
  %76 = bitcast %"class.WTF::String"* %74 to i64*
  store i64 %75, i64* %76, align 8
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %47, align 8
  %77 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %66, i64 1
  %78 = ptrtoint %"struct.blink::ContrastInfo"* %77 to i64
  store i64 %78, i64* %42, align 8
  br label %80

79:                                               ; preds = %65
  call void @_ZNSt3__16vectorIN5blink12ContrastInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.3058"* %0, %"struct.blink::ContrastInfo"* nonnull dereferenceable(40) %6) #15
  br label %80

80:                                               ; preds = %69, %79
  br i1 %43, label %87, label %81

81:                                               ; preds = %80
  %82 = load i64, i64* %42, align 8
  %83 = load i64, i64* %44, align 8
  %84 = sub i64 %82, %83
  %85 = sdiv exact i64 %84, 40
  %86 = icmp ult i64 %85, %3
  br i1 %86, label %87, label %88

87:                                               ; preds = %61, %81, %80, %50
  br label %88

88:                                               ; preds = %81, %87
  %89 = phi i1 [ %52, %87 ], [ true, %81 ]
  %90 = phi i32 [ 0, %87 ], [ 1, %81 ]
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #15
  br label %106

106:                                              ; preds = %105, %102, %88
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #15
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #15
  %123 = icmp eq i32 %90, 0
  %124 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %51, i64 1
  br i1 %123, label %48, label %125

125:                                              ; preds = %122
  %126 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %20, align 8
  %127 = icmp eq %"struct.blink::ContrastInfo"* %126, null
  %128 = or i1 %89, %127
  br i1 %128, label %176, label %129

129:                                              ; preds = %125
  %130 = bitcast %"struct.blink::ContrastInfo"* %126 to i8*
  %131 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %21, align 8
  %132 = icmp eq %"struct.blink::ContrastInfo"* %131, %126
  br i1 %132, label %174, label %133

133:                                              ; preds = %129, %169
  %134 = phi %"struct.blink::ContrastInfo"* [ %135, %169 ], [ %131, %129 ]
  %135 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 -1
  %136 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 -1, i32 6, i32 0, i32 0
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #15
  br label %152

152:                                              ; preds = %151, %148, %133
  %153 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %134, i64 -1, i32 5, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #15
  br label %169

169:                                              ; preds = %168, %165, %152
  %170 = icmp eq %"struct.blink::ContrastInfo"* %135, %126
  br i1 %170, label %171, label %133

171:                                              ; preds = %169
  %172 = bitcast %"class.std::__1::vector.3058"* %0 to i8**
  %173 = load i8*, i8** %172, align 8
  br label %174

174:                                              ; preds = %129, %171
  %175 = phi i8* [ %173, %171 ], [ %130, %129 ]
  store %"struct.blink::ContrastInfo"* %126, %"struct.blink::ContrastInfo"** %21, align 8
  call void @_ZdlPv(i8* %175) #16
  br label %176

176:                                              ; preds = %48, %16, %174, %125
  %177 = icmp eq i8* %19, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %176
  %179 = load i8, i8* %19, align 1
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %182, label %181

181:                                              ; preds = %178
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #15
  br label %182

182:                                              ; preds = %176, %178, %181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast11GetContrastEPNS_7ElementE(%"struct.blink::ContrastInfo"* noalias nocapture sret, %"class.blink::InspectorContrast"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.base::TimeTicks", align 8
  %19 = alloca float, align 4
  %20 = alloca %"class.WTF::Vector.3090", align 8
  %21 = alloca %"class.blink::Color", align 4
  %22 = alloca %"class.blink::Color", align 4
  %23 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), align 16
  %24 = and i8 %23, 25
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %3
  %27 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %28 = bitcast %"class.base::TimeTicks"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %18, i64 0, i32 0, i32 0
  %30 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %18, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %32

32:                                               ; preds = %3, %26
  %33 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), %26 ]
  %34 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 42, i32 0), %26 ]
  %35 = phi i64 [ -6148914691236517206, %3 ], [ %31, %26 ]
  %36 = bitcast %"struct.blink::ContrastInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 bitcast ({ %"class.blink::Element"*, i8, [3 x i8], float, float, float, %"class.WTF::String", %"class.WTF::String" }* @__const._ZN5blink17InspectorContrast11GetContrastEPNS_7ElementE.result to i8*), i64 24, i1 false)
  %37 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 1
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = bitcast %"class.WTF::StringImpl"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #15
  %40 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %497, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 12
  %47 = icmp eq i32 %46, 4
  br i1 %47, label %48, label %497

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %52, label %497

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1
  %54 = bitcast %"class.blink::Node"* %53 to i8*
  %55 = load i8, i8* %54, align 8, !range !3
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 0, i32 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.blink::ParkableString"*
  %60 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %59) #15
  br label %64

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 1
  %63 = bitcast i32* %62 to %"class.WTF::String"*
  br label %64

64:                                               ; preds = %57, %61
  %65 = phi %"class.WTF::String"* [ %60, %57 ], [ %63, %61 ]
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %65) #15
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %497, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %484, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %76, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::NodeData"** %77 to %"class.blink::NodeRareData"**
  %80 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %80, i64 0, i32 1, i32 0, i32 0
  br label %84

82:                                               ; preds = %72
  %83 = bitcast %"class.blink::NodeData"** %77 to %"class.blink::NodeRenderingData"**
  br label %84

84:                                               ; preds = %78, %82
  %85 = phi %"class.blink::NodeRenderingData"** [ %81, %78 ], [ %83, %82 ]
  %86 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %86, i64 0, i32 1
  %88 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %87, align 8
  %89 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 2) #15
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %88, i64 0, i32 5, i32 0
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %90, align 8
  %92 = call %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24) %89, %"class.blink::ComputedStyle"* dereferenceable(104) %91, %"class.blink::LayoutObject"* null) #15
  %93 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %92, i64 0, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 3
  br i1 %95, label %96, label %484

96:                                               ; preds = %84
  %97 = bitcast float* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #15
  store float 1.000000e+00, float* %19, align 4
  %98 = bitcast %"class.WTF::Vector.3090"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #15
  %99 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %20, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %20, i64 0, i32 0, i32 0, i32 2
  %101 = bitcast %"class.WTF::Vector.3090"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17InspectorContrast19GetBackgroundColorsEPNS_7ElementEPf(%"class.WTF::Vector.3090"* nonnull sret %20, %"class.blink::InspectorContrast"* %1, %"class.blink::Element"* %2, float* nonnull %19)
  %102 = load i32, i32* %100, align 4
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %474

104:                                              ; preds = %96
  %105 = bitcast %"class.blink::Color"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #15
  %106 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %21, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %92, i64 1, i32 1
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %106, align 4
  %110 = load float, float* %19, align 4
  %111 = call i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"* nonnull %21, float %110) #15
  store i32 %111, i32* %106, align 4
  %112 = bitcast %"class.blink::Color"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #15
  %113 = call dereferenceable(4) %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3090"* nonnull %20, i32 0)
  %114 = call i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"* %113, %"class.blink::Color"* nonnull dereferenceable(4) %21) #15
  %115 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %22, i64 0, i32 0
  store i32 %114, i32* %115, align 4
  %116 = call i32 @_ZNK5blink5ColorcvjEv(%"class.blink::Color"* nonnull %22) #15
  %117 = call dereferenceable(4) %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3090"* nonnull %20, i32 0)
  %118 = call i32 @_ZNK5blink5ColorcvjEv(%"class.blink::Color"* %117) #15
  %119 = call float @_ZN11color_utils16GetContrastRatioEjj(i32 %116, i32 %118) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #15
  %120 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN5blink17InspectorContrast11GetTextInfoEPNS_7ElementE(%"class.blink::InspectorContrast"* undef, %"class.blink::Element"* %2)
  %121 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %120, 0
  %122 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %120, 1
  %123 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #15
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %124, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %104
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #15
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !11

140:                                              ; preds = %131
  call void @llvm.trap() #15
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %143

143:                                              ; preds = %141, %126, %104
  %144 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #15
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !11

159:                                              ; preds = %150
  call void @llvm.trap() #15
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %162

162:                                              ; preds = %160, %145, %143
  %163 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #15
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %164, align 8
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 1
  %169 = load i32, i32* %168, align 4
  br label %170

170:                                              ; preds = %167, %162
  %171 = phi i32 [ %169, %167 ], [ 0, %162 ]
  %172 = add i32 %171, -2
  %173 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %16, i32 0, i32 %172) #15
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %164, align 8
  %174 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* nonnull %17, i8* null) #15
  %175 = fmul double %174, 7.200000e+01
  %176 = fdiv double %175, 9.600000e+01
  %177 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #15
  br i1 %144, label %178, label %182

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %179, align 8
  %180 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %181 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %180, i64* %181, align 8
  br label %190

182:                                              ; preds = %170
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %183, align 8
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %188 = bitcast i8** %187 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %188, align 8
  %189 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %190

190:                                              ; preds = %182, %178
  %191 = phi i64 [ %189, %182 ], [ %180, %178 ]
  %192 = phi i32 [ %185, %182 ], [ 0, %178 ]
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %192, i32* %193, align 8
  %194 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #15
  %195 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %191, i64* %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 4, i32* %197, align 8
  %198 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #15
  br i1 %198, label %315, label %199

199:                                              ; preds = %190
  %200 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #15
  br i1 %144, label %201, label %205

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %202, align 8
  %203 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %204 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %203, i64* %204, align 8
  br label %213

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %206, align 8
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %211 = bitcast i8** %210 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %211, align 8
  %212 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %213

213:                                              ; preds = %205, %201
  %214 = phi i64 [ %212, %205 ], [ %203, %201 ]
  %215 = phi i32 [ %208, %205 ], [ 0, %201 ]
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %215, i32* %216, align 8
  %217 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #15
  %218 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %214, i64* %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 6, i32* %220, align 8
  %221 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #15
  br i1 %221, label %315, label %222

222:                                              ; preds = %213
  %223 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #15
  br i1 %144, label %224, label %228

224:                                              ; preds = %222
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %225, align 8
  %226 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %227 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %226, i64* %227, align 8
  br label %236

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %234 = bitcast i8** %233 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %234, align 8
  %235 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %236

236:                                              ; preds = %228, %224
  %237 = phi i64 [ %235, %228 ], [ %226, %224 ]
  %238 = phi i32 [ %231, %228 ], [ 0, %224 ]
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %238, i32* %239, align 8
  %240 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #15
  %241 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %237, i64* %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %242, align 8
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 3, i32* %243, align 8
  %244 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #15
  br i1 %244, label %315, label %245

245:                                              ; preds = %236
  %246 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #15
  br i1 %144, label %247, label %251

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %248, align 8
  %249 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %250 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %249, i64* %250, align 8
  br label %259

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %256 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %257 = bitcast i8** %256 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %257, align 8
  %258 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %259

259:                                              ; preds = %251, %247
  %260 = phi i64 [ %258, %251 ], [ %249, %247 ]
  %261 = phi i32 [ %254, %251 ], [ 0, %247 ]
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %261, i32* %262, align 8
  %263 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #15
  %264 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %260, i64* %264, align 8
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8** %265, align 8
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 3, i32* %266, align 8
  %267 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #15
  br i1 %267, label %315, label %268

268:                                              ; preds = %259
  %269 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #15
  br i1 %144, label %270, label %274

270:                                              ; preds = %268
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %271, align 8
  %272 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %273 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %272, i64* %273, align 8
  br label %282

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %280 = bitcast i8** %279 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %280, align 8
  %281 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %282

282:                                              ; preds = %274, %270
  %283 = phi i64 [ %281, %274 ], [ %272, %270 ]
  %284 = phi i32 [ %277, %274 ], [ 0, %270 ]
  %285 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %284, i32* %285, align 8
  %286 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #15
  %287 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %283, i64* %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8** %288, align 8
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 3, i32* %289, align 8
  %290 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #15
  br i1 %290, label %315, label %291

291:                                              ; preds = %282
  %292 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #15
  br i1 %144, label %293, label %297

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %294, align 8
  %295 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %296 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %295, i64* %296, align 8
  br label %305

297:                                              ; preds = %291
  %298 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %298, align 8
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %302 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %303 = bitcast i8** %302 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %301, %"class.WTF::StringImpl"** %303, align 8
  %304 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %305

305:                                              ; preds = %297, %293
  %306 = phi i64 [ %304, %297 ], [ %295, %293 ]
  %307 = phi i32 [ %300, %297 ], [ 0, %293 ]
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %307, i32* %308, align 8
  %309 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %309) #15
  %310 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %306, i64* %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %311, align 8
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %312, align 8
  %313 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #15
  %314 = select i1 %313, double 1.400000e+01, double 1.800000e+01
  br label %315

315:                                              ; preds = %305, %190, %213, %236, %259, %282
  %316 = phi double [ 1.400000e+01, %282 ], [ 1.400000e+01, %259 ], [ 1.400000e+01, %236 ], [ 1.400000e+01, %213 ], [ 1.400000e+01, %190 ], [ %314, %305 ]
  %317 = fcmp oge double %176, %316
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #15
  br label %333

333:                                              ; preds = %332, %329, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #15
  br i1 %144, label %347, label %334

334:                                              ; preds = %333
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %343

341:                                              ; preds = %334
  %342 = add i32 %340, -1
  store i32 %342, i32* %339, align 4
  br label %343

343:                                              ; preds = %341, %334
  %344 = phi i32 [ %342, %341 ], [ %340, %334 ]
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %347

346:                                              ; preds = %343
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %347

347:                                              ; preds = %346, %343, %333
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #15
  br label %363

363:                                              ; preds = %347, %359, %362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #15
  store i8 1, i8* %37, align 8
  %364 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 4
  store float %119, float* %364, align 4
  %365 = select i1 %317, float 3.000000e+00, float 4.500000e+00
  %366 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 2
  store float %365, float* %366, align 4
  %367 = select i1 %317, float 4.500000e+00, float 7.000000e+00
  %368 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 3
  store float %367, float* %368, align 8
  %369 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 5
  br i1 %125, label %387, label %370

370:                                              ; preds = %363
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %387

375:                                              ; preds = %370
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i33
  %379 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %378, i33 1) #15
  %380 = extractvalue { i33, i1 } %379, 1
  %381 = extractvalue { i33, i1 } %379, 0
  %382 = icmp slt i33 %381, 0
  %383 = or i1 %380, %382
  br i1 %383, label %384, label %385, !prof !11

384:                                              ; preds = %375
  call void @llvm.trap() #15
  unreachable

385:                                              ; preds = %375
  %386 = trunc i33 %381 to i32
  store i32 %386, i32* %376, align 4
  br label %387

387:                                              ; preds = %385, %370, %363
  %388 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %389 = bitcast %"class.WTF::String"* %369 to i64*
  %390 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %369, i64 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  store i64 %388, i64* %389, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %406, label %393

393:                                              ; preds = %387
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  br i1 %397, label %400, label %402

400:                                              ; preds = %393
  %401 = add i32 %399, -1
  store i32 %401, i32* %398, align 4
  br label %402

402:                                              ; preds = %400, %393
  %403 = phi i32 [ %401, %400 ], [ %399, %393 ]
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %402
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %391) #15
  br label %406

406:                                              ; preds = %387, %402, %405
  %407 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 6
  br i1 %144, label %425, label %408

408:                                              ; preds = %406
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %425

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %415 = load i32, i32* %414, align 4
  %416 = zext i32 %415 to i33
  %417 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %416, i33 1) #15
  %418 = extractvalue { i33, i1 } %417, 1
  %419 = extractvalue { i33, i1 } %417, 0
  %420 = icmp slt i33 %419, 0
  %421 = or i1 %418, %420
  br i1 %421, label %422, label %423, !prof !11

422:                                              ; preds = %413
  call void @llvm.trap() #15
  unreachable

423:                                              ; preds = %413
  %424 = trunc i33 %419 to i32
  store i32 %424, i32* %414, align 4
  br label %425

425:                                              ; preds = %423, %408, %406
  %426 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %427 = bitcast %"class.WTF::String"* %407 to i64*
  %428 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %407, i64 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  store i64 %426, i64* %427, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %444, label %431

431:                                              ; preds = %425
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  br i1 %435, label %438, label %440

438:                                              ; preds = %431
  %439 = add i32 %437, -1
  store i32 %439, i32* %436, align 4
  br label %440

440:                                              ; preds = %438, %431
  %441 = phi i32 [ %439, %438 ], [ %437, %431 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #15
  br label %444

444:                                              ; preds = %425, %440, %443
  %445 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %0, i64 0, i32 0
  store %"class.blink::Element"* %2, %"class.blink::Element"** %445, align 8
  br i1 %144, label %459, label %446

446:                                              ; preds = %444
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #15
  br label %459

459:                                              ; preds = %458, %455, %444
  br i1 %125, label %473, label %460

460:                                              ; preds = %459
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #15
  br label %473

473:                                              ; preds = %459, %469, %472
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #15
  br label %474

474:                                              ; preds = %96, %473
  %475 = load %"class.blink::Color"*, %"class.blink::Color"** %99, align 8
  %476 = icmp eq %"class.blink::Color"* %475, null
  %477 = bitcast %"class.blink::Color"* %475 to i8*
  br i1 %476, label %483, label %478, !prof !2

478:                                              ; preds = %474
  %479 = load i32, i32* %100, align 4
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %482, label %481, !prof !11

481:                                              ; preds = %478
  store i32 0, i32* %100, align 4
  br label %482

482:                                              ; preds = %481, %478
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %477) #15
  store %"class.blink::Color"* null, %"class.blink::Color"** %99, align 8
  br label %483

483:                                              ; preds = %474, %482
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #15
  br label %484

484:                                              ; preds = %483, %84, %68
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %490 = load i32, i32* %489, align 4
  br i1 %488, label %491, label %493

491:                                              ; preds = %484
  %492 = add i32 %490, -1
  store i32 %492, i32* %489, align 4
  br label %493

493:                                              ; preds = %491, %484
  %494 = phi i32 [ %492, %491 ], [ %490, %484 ]
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %497

496:                                              ; preds = %493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %497

497:                                              ; preds = %43, %32, %496, %493, %64, %48
  %498 = icmp eq i8* %34, null
  br i1 %498, label %503, label %499

499:                                              ; preds = %497
  %500 = load i8, i8* %34, align 1
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %503, label %502

502:                                              ; preds = %499
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %34, i8* %33, i64 %35) #15
  br label %503

503:                                              ; preds = %497, %499, %502
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast19GetBackgroundColorsEPNS_7ElementEPf(%"class.WTF::Vector.3090"* noalias sret, %"class.blink::InspectorContrast"*, %"class.blink::Element"*, float* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Color", align 4
  %6 = bitcast %"class.WTF::Vector.3090"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #15
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %15, label %37

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %37

19:                                               ; preds = %15
  %20 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_111GetNodeRectEPNS_4NodeE(%"class.blink::Node"* nonnull %8)
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %24) #15
  %26 = icmp eq %"class.blink::LocalFrameView"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %19
  %28 = extractvalue { i64, i64 } %20, 0
  %29 = extractvalue { i64, i64 } %20, 1
  %30 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15
  %31 = tail call i32 @_ZNK5blink14LocalFrameView19BaseBackgroundColorEv(%"class.blink::LocalFrameView"* nonnull %25) #15
  %32 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 %31, i32* %32, align 4
  call void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3090"* %0, %"class.blink::Color"* nonnull dereferenceable(4) %5) #15
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = call zeroext i1 @_ZN5blink17InspectorContrast17GetColorsFromRectENS_12PhysicalRectERNS_8DocumentEPNS_7ElementERN3WTF6VectorINS_5ColorELj0ENS6_18PartitionAllocatorEEEPf(%"class.blink::InspectorContrast"* %1, i64 %28, i64 %29, %"class.blink::Document"* dereferenceable(2848) %35, %"class.blink::Element"* %2, %"class.WTF::Vector.3090"* dereferenceable(16) %0, float* %3)
  br label %37

37:                                               ; preds = %10, %4, %15, %19, %27
  ret void
}

declare i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"*, float) local_unnamed_addr #1

declare float @_ZN11color_utils16GetContrastRatioEjj(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3090"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Color"*, %"class.blink::Color"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %24, i64 %25
  ret %"class.blink::Color"* %26
}

declare i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #1

declare i32 @_ZNK5blink5ColorcvjEv(%"class.blink::Color"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN5blink17InspectorContrast11GetTextInfoEPNS_7ElementE(%"class.blink::InspectorContrast"* nocapture readnone, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #15
  %5 = bitcast i8* %4 to %"class.blink::CSSComputedStyleDeclaration"*
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %5, %"class.blink::Node"* %6, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #15
  br label %24

24:                                               ; preds = %2, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %25 = getelementptr inbounds i8, i8* %4, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %5, i32 8) #15
  %30 = icmp eq %"class.blink::CSSValue"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  %32 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %29) #15
  br label %33

33:                                               ; preds = %24, %31
  %34 = phi %"class.WTF::StringImpl"* [ null, %24 ], [ %32, %31 ]
  %35 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %5, i32 17) #15
  %36 = icmp eq %"class.blink::CSSValue"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %35) #15
  br label %39

39:                                               ; preds = %37, %33
  %40 = phi %"class.WTF::StringImpl"* [ null, %33 ], [ %38, %37 ]
  %41 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %34, 0
  %42 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %41, %"class.WTF::StringImpl"* %40, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %42
}

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSComputedStyleDeclaration19GetPropertyCSSValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_111GetNodeRectEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #0 {
  %2 = bitcast %"class.blink::Node"* %0 to { i64, i64 } (%"class.blink::Node"*)***
  %3 = load { i64, i64 } (%"class.blink::Node"*)**, { i64, i64 } (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds { i64, i64 } (%"class.blink::Node"*)*, { i64, i64 } (%"class.blink::Node"*)** %3, i64 52
  %5 = load { i64, i64 } (%"class.blink::Node"*)*, { i64, i64 } (%"class.blink::Node"*)** %4, align 8
  %6 = tail call { i64, i64 } %5(%"class.blink::Node"* %0) #15
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = extractvalue { i64, i64 } %6, 1
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"* %15) #15
  br i1 %16, label %49, label %17

17:                                               ; preds = %1, %23
  %18 = phi %"class.blink::Document"* [ %47, %23 ], [ %15, %1 ]
  %19 = phi i32 [ %43, %23 ], [ %10, %1 ]
  %20 = phi i32 [ %33, %23 ], [ %8, %1 ]
  %21 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %18) #15
  %22 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %21, null
  br i1 %22, label %49, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = tail call { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"* %24) #15
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %27) #15
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !11
  %34 = tail call { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"* %24) #15
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = lshr i64 %35, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp slt i32 %37, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %37) #15
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !11
  %44 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call zeroext i1 @_ZNK5blink8Document13IsInMainFrameEv(%"class.blink::Document"* %47) #15
  br i1 %48, label %49, label %17

49:                                               ; preds = %23, %17, %1
  %50 = phi i32 [ %8, %1 ], [ %20, %17 ], [ %33, %23 ]
  %51 = phi i32 [ %10, %1 ], [ %19, %17 ], [ %43, %23 ]
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %50 to i64
  %55 = or i64 %53, %54
  %56 = insertvalue { i64, i64 } undef, i64 %55, 0
  %57 = insertvalue { i64, i64 } %56, i64 %11, 1
  ret { i64, i64 } %57
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZNK5blink14LocalFrameView19BaseBackgroundColorEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17InspectorContrast17GetColorsFromRectENS_12PhysicalRectERNS_8DocumentEPNS_7ElementERN3WTF6VectorINS_5ColorELj0ENS6_18PartitionAllocatorEEEPf(%"class.blink::InspectorContrast"*, i64, i64, %"class.blink::Document"* nocapture readnone dereferenceable(2848), %"class.blink::Element"*, %"class.WTF::Vector.3090"* dereferenceable(16), float* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::Vector.3090", align 8
  %9 = alloca %"class.blink::Color", align 4
  %10 = alloca %"class.blink::Color", align 4
  %11 = alloca %"class.blink::Color", align 4
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"struct.blink::PhysicalRect"*
  %14 = alloca %"class.std::__1::vector.3096", align 8
  %15 = alloca %"class.blink::Color", align 4
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"struct.blink::PhysicalRect"*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %2, i64* %19, align 8
  %20 = bitcast %"class.std::__1::vector.3096"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %14, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %14, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::vector.3096"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN5blink17InspectorContrast16ElementsFromRectERKNS_12PhysicalRectERNS_8DocumentE(%"class.std::__1::vector.3096"* nonnull sret %14, %"class.blink::InspectorContrast"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13, %"class.blink::Document"* dereferenceable(2848) undef)
  store float 1.000000e+00, float* %6, align 4
  %24 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %21, align 8
  %25 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %22, align 8
  %26 = icmp eq %"class.blink::Member.318"* %24, %25
  br i1 %26, label %62, label %27

27:                                               ; preds = %7
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kPictureTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::Color"* %15 to i8*
  %41 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %15, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %5, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = bitcast %"class.WTF::Vector.3090"* %5 to i8**
  %46 = bitcast %"class.WTF::Vector.3090"* %5 to i64*
  %47 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.3090"* %8 to i8*
  %49 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %8, i64 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %8, i64 0, i32 0, i32 0, i32 2
  %51 = bitcast %"class.blink::Color"* %9 to i8*
  %52 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %9, i64 0, i32 0
  %53 = bitcast %"class.blink::Color"* %10 to i8*
  %54 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %10, i64 0, i32 0
  %55 = bitcast %"class.blink::Color"* %11 to i8*
  %56 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %11, i64 0, i32 0
  %57 = bitcast { i64, i64 }* %16 to i8*
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  br label %72

60:                                               ; preds = %438
  %61 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %21, align 8
  br label %62

62:                                               ; preds = %60, %7
  %63 = phi %"class.blink::Member.318"* [ %24, %7 ], [ %61, %60 ]
  %64 = phi i8 [ 0, %7 ], [ %439, %60 ]
  %65 = icmp ne i8 %64, 0
  %66 = icmp eq %"class.blink::Member.318"* %63, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = ptrtoint %"class.blink::Member.318"* %63 to i64
  %69 = bitcast %"class.blink::Member.318"** %22 to i64*
  store i64 %68, i64* %69, align 8
  %70 = bitcast %"class.blink::Member.318"* %63 to i8*
  call void @_ZdlPv(i8* %70) #16
  br label %71

71:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  ret i1 %65

72:                                               ; preds = %27, %438
  %73 = phi i8 [ 0, %27 ], [ %80, %438 ]
  %74 = phi i8 [ 0, %27 ], [ %439, %438 ]
  %75 = phi %"class.blink::Member.318"* [ %24, %27 ], [ %440, %438 ]
  %76 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %75, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::Member.318"* %75 to %"class.blink::Element"**
  %78 = load %"class.blink::Element"*, %"class.blink::Element"** %77, align 8
  %79 = icmp eq %"class.blink::Element"* %78, %4
  %80 = select i1 %79, i8 1, i8 %73
  %81 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %78, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %78, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %78, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %85, label %91, label %87

87:                                               ; preds = %72
  %88 = bitcast %"class.blink::NodeData"** %86 to %"class.blink::NodeRareData"**
  %89 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %89, i64 0, i32 1, i32 0, i32 0
  br label %93

91:                                               ; preds = %72
  %92 = bitcast %"class.blink::NodeData"** %86 to %"class.blink::NodeRenderingData"**
  br label %93

93:                                               ; preds = %87, %91
  %94 = phi %"class.blink::NodeRenderingData"** [ %90, %87 ], [ %92, %91 ]
  %95 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %95, i64 0, i32 1
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = icmp eq %"class.blink::Element"* %78, null
  %99 = and i32 %83, 48
  %100 = xor i1 %98, true
  %101 = icmp eq i32 %99, 0
  %102 = and i1 %101, %100
  br i1 %102, label %103, label %153

103:                                              ; preds = %93
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %106 = bitcast %"class.blink::Member.318"* %105 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %107 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %107, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %109, %111
  br i1 %112, label %169, label %113

113:                                              ; preds = %103
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %116 = bitcast %"class.blink::Member.318"* %115 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %119, %121
  br i1 %122, label %169, label %123

123:                                              ; preds = %113
  %124 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %125 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %126 = bitcast %"class.blink::Member.318"* %125 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %129, %131
  br i1 %132, label %169, label %133

133:                                              ; preds = %123
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %136 = bitcast %"class.blink::Member.318"* %135 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %137 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %137, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %139, %141
  br i1 %142, label %169, label %143

143:                                              ; preds = %133
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %146 = bitcast %"class.blink::Member.318"* %145 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %147 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %149, %151
  br i1 %152, label %169, label %159

153:                                              ; preds = %93
  %154 = icmp eq i32 %99, 32
  br i1 %154, label %169, label %155

155:                                              ; preds = %153
  %156 = xor i1 %98, true
  %157 = icmp eq i32 %99, 0
  %158 = and i1 %157, %156
  br i1 %158, label %159, label %178

159:                                              ; preds = %155, %143
  %160 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %161 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1, i32 2
  %162 = bitcast %"class.blink::Member.318"* %161 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %163 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %163, i64 0, i32 3, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %160, i64 0, i32 3, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %165, %167
  br i1 %168, label %169, label %178

169:                                              ; preds = %159, %153, %143, %133, %123, %113, %103
  %170 = load i32, i32* %43, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %438, label %172

172:                                              ; preds = %169
  %173 = load i32, i32* %44, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  store i32 0, i32* %44, align 4
  br label %176

176:                                              ; preds = %175, %172
  %177 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %177) #15
  br label %438

178:                                              ; preds = %155, %159
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 5, i32 0
  %180 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %179, align 8
  %181 = icmp eq %"class.blink::ComputedStyle"* %180, null
  br i1 %181, label %438, label %182

182:                                              ; preds = %178
  br i1 %79, label %189, label %183

183:                                              ; preds = %182
  %184 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %180, i64 0, i32 0, i32 9
  %185 = bitcast [20 x i8]* %184 to i160*
  %186 = load i160, i160* %185, align 8
  %187 = and i160 %186, 3802951800684688204490109616128
  %188 = icmp eq i160 %187, 0
  br i1 %188, label %438, label %189

189:                                              ; preds = %182, %183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #15
  store i32 -1431655766, i32* %41, align 4
  %190 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %191 = call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %180, %"class.blink::CSSProperty"* dereferenceable(24) %190) #15
  store i32 %191, i32* %41, align 4
  %192 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %180, i64 0, i32 0, i32 3, i32 0, i32 0
  %193 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %193, i64 0, i32 9
  %195 = load float, float* %194, align 8
  %196 = fcmp olt float %195, 1.000000e+00
  br i1 %196, label %197, label %210

197:                                              ; preds = %189
  %198 = icmp ugt i32 %191, -16777217
  %199 = uitofp i1 %198 to float
  %200 = fmul float %195, %199
  %201 = call i32 @_ZNK5blink5Color16CombineWithAlphaEf(%"class.blink::Color"* nonnull %15, float %200) #15
  store i32 %201, i32* %41, align 4
  br i1 %79, label %204, label %202

202:                                              ; preds = %197
  %203 = call zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64) %42, %"class.blink::Node"* dereferenceable(64) %81) #15
  br i1 %203, label %204, label %210

204:                                              ; preds = %202, %197
  %205 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %192, align 8
  %206 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %205, i64 0, i32 9
  %207 = load float, float* %206, align 8
  %208 = load float, float* %6, align 4
  %209 = fmul float %207, %208
  store float %209, float* %6, align 4
  br label %210

210:                                              ; preds = %202, %204, %189
  %211 = load i32, i32* %41, align 4
  %212 = icmp ult i32 %211, 16777216
  br i1 %212, label %259, label %213

213:                                              ; preds = %210
  %214 = icmp ult i32 %211, -16777216
  br i1 %214, label %215, label %237

215:                                              ; preds = %213
  %216 = load i32, i32* %44, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %227

218:                                              ; preds = %215
  %219 = load i32, i32* %43, align 8
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %226, label %221, !prof !11

221:                                              ; preds = %218
  %222 = load %"class.blink::Color"*, %"class.blink::Color"** %47, align 8
  %223 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %222, i64 0, i32 0
  store i32 %211, i32* %223, align 4
  %224 = load i32, i32* %44, align 4
  %225 = add i32 %224, 1
  store i32 %225, i32* %44, align 4
  br label %259

226:                                              ; preds = %218
  call void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3090"* %5, %"class.blink::Color"* nonnull dereferenceable(4) %15) #15
  br label %259

227:                                              ; preds = %215
  %228 = load %"class.blink::Color"*, %"class.blink::Color"** %47, align 8
  %229 = zext i32 %216 to i64
  %230 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %228, i64 %229
  br label %231

231:                                              ; preds = %227, %231
  %232 = phi %"class.blink::Color"* [ %235, %231 ], [ %228, %227 ]
  %233 = call i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"* %232, %"class.blink::Color"* nonnull dereferenceable(4) %15) #15
  %234 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %232, i64 0, i32 0
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %232, i64 1
  %236 = icmp eq %"class.blink::Color"* %235, %230
  br i1 %236, label %259, label %231

237:                                              ; preds = %213
  %238 = load i32, i32* %43, align 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %237
  %241 = load i32, i32* %44, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %244, label %243

243:                                              ; preds = %240
  store i32 0, i32* %44, align 4
  br label %244

244:                                              ; preds = %243, %240
  %245 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %245) #15
  %246 = load i32, i32* %43, align 8
  br label %247

247:                                              ; preds = %237, %244
  %248 = phi i32 [ 0, %237 ], [ %246, %244 ]
  %249 = load i32, i32* %44, align 4
  %250 = icmp eq i32 %249, %248
  br i1 %250, label %258, label %251, !prof !11

251:                                              ; preds = %247
  %252 = load %"class.blink::Color"*, %"class.blink::Color"** %47, align 8
  %253 = zext i32 %249 to i64
  %254 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %252, i64 %253, i32 0
  %255 = load i32, i32* %41, align 4
  store i32 %255, i32* %254, align 4
  %256 = load i32, i32* %44, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %44, align 4
  br label %259

258:                                              ; preds = %247
  call void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3090"* %5, %"class.blink::Color"* nonnull dereferenceable(4) %15) #15
  br label %259

259:                                              ; preds = %231, %258, %251, %226, %221, %210
  %260 = phi i8 [ %74, %210 ], [ %74, %221 ], [ %74, %226 ], [ 1, %251 ], [ 1, %258 ], [ %74, %231 ]
  %261 = phi i8 [ 0, %210 ], [ 1, %221 ], [ 1, %226 ], [ 1, %251 ], [ 1, %258 ], [ 1, %231 ]
  %262 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %180, i64 0, i32 0, i32 6, i32 0, i32 0
  %263 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %263, i64 0, i32 2, i32 5
  %265 = bitcast [7 x i8]* %264 to i56*
  %266 = load i56, i56* %265, align 8
  %267 = and i56 %266, 281474976710656
  %268 = icmp eq i56 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %263, i64 0, i32 2
  call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %270) #15
  %271 = load i56, i56* %265, align 8
  br label %272

272:                                              ; preds = %269, %259
  %273 = phi i56 [ %266, %259 ], [ %271, %269 ]
  %274 = and i56 %273, 8796093022208
  %275 = icmp eq i56 %274, 0
  br i1 %275, label %413, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %263, i64 0, i32 2, i32 1, i32 0, i32 0
  %278 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %277, align 8
  %279 = icmp eq %"class.blink::StyleImage"* %278, null
  br i1 %279, label %413, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %"class.blink::StyleImage", %"class.blink::StyleImage"* %278, i64 0, i32 1
  %282 = load i8, i8* %281, align 8
  %283 = and i8 %282, 4
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %294

285:                                              ; preds = %280
  %286 = load i32, i32* %43, align 8
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %413, label %288

288:                                              ; preds = %285
  %289 = load i32, i32* %44, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %292, label %291

291:                                              ; preds = %288
  store i32 0, i32* %44, align 4
  br label %292

292:                                              ; preds = %291, %288
  %293 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %293) #15
  br label %413

294:                                              ; preds = %280
  %295 = bitcast %"class.blink::StyleImage"* %278 to %"class.blink::StyleGeneratedImage"*
  %296 = call %"class.blink::CSSValue"* @_ZNK5blink19StyleGeneratedImage8CssValueEv(%"class.blink::StyleGeneratedImage"* nonnull %295) #15
  %297 = icmp eq %"class.blink::CSSValue"* %296, null
  br i1 %297, label %413, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %296, i64 0, i32 2
  %300 = load i8, i8* %299, align 1
  %301 = add i8 %300, -21
  %302 = icmp ugt i8 %301, 2
  %303 = bitcast %"class.blink::CSSValue"* %296 to %"class.blink::cssvalue::CSSGradientValue"*
  br i1 %302, label %413, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 6, i32 0, i32 0
  %306 = load %"class.blink::Node"*, %"class.blink::Node"** %305, align 8
  %307 = icmp eq %"class.blink::Node"* %306, null
  br i1 %307, label %308, label %315

308:                                              ; preds = %304, %308
  %309 = phi %"class.blink::LayoutObject"* [ %311, %308 ], [ %97, %304 ]
  %310 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %309, i64 0, i32 7
  %311 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 6, i32 0, i32 0
  %313 = load %"class.blink::Node"*, %"class.blink::Node"** %312, align 8
  %314 = icmp eq %"class.blink::Node"* %313, null
  br i1 %314, label %308, label %315

315:                                              ; preds = %308, %304
  %316 = phi %"class.blink::Node"* [ %306, %304 ], [ %313, %308 ]
  %317 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %316, i64 0, i32 3, i32 0, i32 0
  %318 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %318, i64 0, i32 2, i32 0, i32 0
  %320 = load %"class.blink::Document"*, %"class.blink::Document"** %319, align 8
  %321 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %179, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #15
  call void @_ZNK5blink8cssvalue16CSSGradientValue13GetStopColorsERKNS_8DocumentERKNS_13ComputedStyleE(%"class.WTF::Vector.3090"* nonnull sret %8, %"class.blink::cssvalue::CSSGradientValue"* nonnull %303, %"class.blink::Document"* dereferenceable(2848) %320, %"class.blink::ComputedStyle"* dereferenceable(104) %321) #15
  %322 = load i32, i32* %44, align 4
  switch i32 %322, label %348 [
    i32 0, label %323
    i32 1, label %353
  ]

323:                                              ; preds = %315
  %324 = load %"class.blink::Color"*, %"class.blink::Color"** %49, align 8
  %325 = load i32, i32* %50, align 4
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %324, i64 %326
  %328 = icmp eq i32 %325, 0
  br i1 %328, label %395, label %329

329:                                              ; preds = %323, %346
  %330 = phi i32 [ %347, %346 ], [ 0, %323 ]
  %331 = phi %"class.blink::Color"* [ %344, %346 ], [ %324, %323 ]
  %332 = load i32, i32* %43, align 8
  %333 = icmp eq i32 %330, %332
  br i1 %333, label %342, label %334, !prof !11

334:                                              ; preds = %329
  %335 = load %"class.blink::Color"*, %"class.blink::Color"** %47, align 8
  %336 = zext i32 %330 to i64
  %337 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %331, i64 0, i32 0
  %338 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %335, i64 %336, i32 0
  %339 = load i32, i32* %337, align 4
  store i32 %339, i32* %338, align 4
  %340 = load i32, i32* %44, align 4
  %341 = add i32 %340, 1
  store i32 %341, i32* %44, align 4
  br label %343

342:                                              ; preds = %329
  call void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3090"* %5, %"class.blink::Color"* dereferenceable(4) %331) #15
  br label %343

343:                                              ; preds = %342, %334
  %344 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %331, i64 1
  %345 = icmp eq %"class.blink::Color"* %344, %327
  br i1 %345, label %395, label %346

346:                                              ; preds = %343
  %347 = load i32, i32* %44, align 4
  br label %329

348:                                              ; preds = %315
  %349 = load i32, i32* %43, align 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %401, label %351

351:                                              ; preds = %348
  store i32 0, i32* %44, align 4
  %352 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %352) #15
  br label %401

353:                                              ; preds = %315
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #15
  store i32 -1431655766, i32* %52, align 4
  %354 = call dereferenceable(4) %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3090"* %5, i32 0) #15
  %355 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %354, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %52, align 4
  %357 = load i32, i32* %43, align 8
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %365, label %359

359:                                              ; preds = %353
  %360 = load i32, i32* %44, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %363, label %362

362:                                              ; preds = %359
  store i32 0, i32* %44, align 4
  br label %363

363:                                              ; preds = %362, %359
  %364 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %364) #15
  br label %365

365:                                              ; preds = %363, %353
  %366 = load %"class.blink::Color"*, %"class.blink::Color"** %49, align 8
  %367 = load i32, i32* %50, align 4
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %366, i64 %368
  %370 = icmp eq i32 %367, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %392, %365
  %372 = phi i8 [ %261, %365 ], [ %380, %392 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #15
  br label %395

373:                                              ; preds = %365, %392
  %374 = phi i8 [ %380, %392 ], [ %261, %365 ]
  %375 = phi %"class.blink::Color"* [ %393, %392 ], [ %366, %365 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #15
  store i32 -1431655766, i32* %54, align 4
  %376 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %375, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  store i32 %377, i32* %54, align 4
  %378 = icmp ugt i32 %377, 16777215
  %379 = zext i1 %378 to i8
  %380 = or i8 %374, %379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #15
  %381 = call i32 @_ZNK5blink5Color5BlendERKS0_(%"class.blink::Color"* nonnull %9, %"class.blink::Color"* nonnull dereferenceable(4) %10) #15
  store i32 %381, i32* %56, align 4
  %382 = load i32, i32* %44, align 4
  %383 = load i32, i32* %43, align 8
  %384 = icmp eq i32 %382, %383
  br i1 %384, label %391, label %385, !prof !11

385:                                              ; preds = %373
  %386 = load %"class.blink::Color"*, %"class.blink::Color"** %47, align 8
  %387 = zext i32 %382 to i64
  %388 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %386, i64 %387, i32 0
  store i32 %381, i32* %388, align 4
  %389 = load i32, i32* %44, align 4
  %390 = add i32 %389, 1
  store i32 %390, i32* %44, align 4
  br label %392

391:                                              ; preds = %373
  call void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3090"* %5, %"class.blink::Color"* nonnull dereferenceable(4) %11) #15
  br label %392

392:                                              ; preds = %391, %385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #15
  %393 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %375, i64 1
  %394 = icmp eq %"class.blink::Color"* %393, %369
  br i1 %394, label %371, label %373

395:                                              ; preds = %343, %371, %323
  %396 = phi i8 [ %372, %371 ], [ %261, %323 ], [ %261, %343 ]
  %397 = icmp eq i8 %260, 0
  br i1 %397, label %398, label %401

398:                                              ; preds = %395
  %399 = call zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"* nonnull %303, %"class.blink::Document"* dereferenceable(2848) %320, %"class.blink::ComputedStyle"* dereferenceable(104) %321) #15
  %400 = zext i1 %399 to i8
  br label %401

401:                                              ; preds = %395, %398, %351, %348
  %402 = phi i8 [ %260, %348 ], [ %260, %351 ], [ 1, %395 ], [ %400, %398 ]
  %403 = phi i8 [ %261, %348 ], [ %261, %351 ], [ %396, %395 ], [ %396, %398 ]
  %404 = load %"class.blink::Color"*, %"class.blink::Color"** %49, align 8
  %405 = icmp eq %"class.blink::Color"* %404, null
  %406 = bitcast %"class.blink::Color"* %404 to i8*
  br i1 %405, label %412, label %407, !prof !2

407:                                              ; preds = %401
  %408 = load i32, i32* %50, align 4
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %411, label %410, !prof !11

410:                                              ; preds = %407
  store i32 0, i32* %50, align 4
  br label %411

411:                                              ; preds = %410, %407
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %406) #15
  store %"class.blink::Color"* null, %"class.blink::Color"** %49, align 8
  br label %412

412:                                              ; preds = %411, %401
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #15
  br label %413

413:                                              ; preds = %285, %292, %272, %276, %294, %298, %412
  %414 = phi i8 [ %260, %272 ], [ %260, %276 ], [ %260, %294 ], [ %260, %298 ], [ %402, %412 ], [ 0, %292 ], [ 0, %285 ]
  %415 = phi i8 [ %261, %272 ], [ %261, %276 ], [ %261, %294 ], [ %261, %298 ], [ %403, %412 ], [ %261, %292 ], [ %261, %285 ]
  %416 = and i8 %80, 1
  %417 = icmp eq i8 %416, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #15
  br i1 %417, label %418, label %435

418:                                              ; preds = %413
  %419 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %420 = call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_111GetNodeRectEPNS_4NodeE(%"class.blink::Node"* %419)
  %421 = extractvalue { i64, i64 } %420, 0
  store i64 %421, i64* %58, align 8
  %422 = extractvalue { i64, i64 } %420, 1
  store i64 %422, i64* %59, align 8
  %423 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %17, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15
  %424 = icmp eq i8 %415, 0
  %425 = or i1 %424, %423
  br i1 %425, label %436, label %426

426:                                              ; preds = %418
  %427 = load i32, i32* %43, align 8
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %436, label %429

429:                                              ; preds = %426
  %430 = load i32, i32* %44, align 4
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %433, label %432

432:                                              ; preds = %429
  store i32 0, i32* %44, align 4
  br label %433

433:                                              ; preds = %432, %429
  %434 = load i8*, i8** %45, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  store i32 0, i32* %43, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %434) #15
  br label %436

435:                                              ; preds = %413
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15
  br label %436

436:                                              ; preds = %433, %426, %435, %418
  %437 = phi i8 [ %414, %418 ], [ %414, %435 ], [ 0, %426 ], [ 0, %433 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #15
  br label %438

438:                                              ; preds = %176, %169, %436, %178, %183
  %439 = phi i8 [ %74, %178 ], [ %437, %436 ], [ %74, %183 ], [ 0, %169 ], [ 0, %176 ]
  %440 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %75, i64 1
  %441 = and i8 %80, 1
  %442 = icmp eq i8 %441, 0
  %443 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %22, align 8
  %444 = icmp ne %"class.blink::Member.318"* %440, %443
  %445 = and i1 %442, %444
  br i1 %445, label %72, label %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorContrast16ElementsFromRectERKNS_12PhysicalRectERNS_8DocumentE(%"class.std::__1::vector.3096"* noalias sret, %"class.blink::InspectorContrast"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"class.blink::Document"* nocapture readnone dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  tail call void @_ZN5blink17InspectorContrast33CollectNodesAndBuildRTreeIfNeededEv(%"class.blink::InspectorContrast"* %1)
  %7 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.3096"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #15
  %10 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0
  %11 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sdiv i32 %13, 64
  %15 = srem i32 %13, 64
  %16 = add nsw i32 %15, 32
  %17 = ashr i32 %16, 6
  %18 = add nsw i32 %17, %14
  %19 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %24, %21
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %29) #15
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !11
  %36 = sdiv i32 %35, 64
  %37 = srem i32 %35, 64
  %38 = add nsw i32 %37, 32
  %39 = ashr i32 %38, 6
  %40 = sub nsw i32 %36, %17
  %41 = add nsw i32 %39, %40
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %4
  %44 = add i32 %29, 4
  %45 = icmp ugt i32 %44, 8
  br i1 %45, label %46, label %49, !prof !12

46:                                               ; preds = %43
  %47 = icmp sgt i32 %29, 0
  %48 = select i1 %47, i32 1, i32 -1
  br label %49

49:                                               ; preds = %46, %43, %4
  %50 = phi i32 [ %48, %46 ], [ %41, %4 ], [ 0, %43 ]
  %51 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %52) #15
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !11
  %59 = sdiv i32 %58, 64
  %60 = srem i32 %58, 64
  %61 = add nsw i32 %60, 32
  %62 = ashr i32 %61, 6
  %63 = sub nsw i32 %59, %24
  %64 = add nsw i32 %62, %63
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %49
  %67 = add i32 %52, 4
  %68 = icmp ugt i32 %67, 8
  br i1 %68, label %69, label %72, !prof !12

69:                                               ; preds = %66
  %70 = icmp sgt i32 %52, 0
  %71 = select i1 %70, i32 1, i32 -1
  br label %72

72:                                               ; preds = %49, %66, %69
  %73 = phi i32 [ %71, %69 ], [ %64, %49 ], [ 0, %66 ]
  %74 = icmp sgt i32 %18, 0
  %75 = icmp sgt i32 %50, 0
  %76 = and i1 %74, %75
  %77 = sub nuw nsw i32 2147483647, %18
  %78 = icmp ult i32 %77, %50
  %79 = and i1 %78, %76
  %80 = select i1 %79, i32 %77, i32 %50
  %81 = icmp sgt i32 %25, 0
  %82 = icmp sgt i32 %73, 0
  %83 = and i1 %81, %82
  %84 = sub nuw nsw i32 2147483647, %25
  %85 = icmp ult i32 %84, %73
  %86 = and i1 %85, %83
  %87 = select i1 %86, i32 %84, i32 %73
  %88 = icmp sgt i32 %80, 0
  %89 = select i1 %88, i32 %80, i32 0
  %90 = icmp sgt i32 %87, 0
  %91 = select i1 %90, i32 %87, i32 0
  %92 = zext i32 %18 to i64
  %93 = or i64 %27, %92
  %94 = zext i32 %91 to i64
  %95 = shl nuw nsw i64 %94, 32
  %96 = zext i32 %89 to i64
  %97 = or i64 %95, %96
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %93, i64* %98, align 8
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.3096"* %0 to i64*
  %101 = bitcast %"class.blink::Member.318"** %7 to i64*
  store i64 0, i64* %101, align 8
  %102 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %376, label %105

105:                                              ; preds = %72
  %106 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0, i32 3
  %107 = load i8, i8* %106, align 8, !range !3
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %370

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0, i32 1, i32 0
  %111 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %110, align 8
  %112 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %111, i64 0, i32 0
  %113 = load i16, i16* %112, align 8
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %376, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %111, i64 0, i32 1
  %117 = bitcast %"class.blink::Member.318"** %8 to i64*
  br label %118

118:                                              ; preds = %365, %115
  %119 = phi i64 [ 0, %115 ], [ %366, %365 ]
  %120 = load i16, i16* %116, align 2
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %122, label %362

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %111, i64 0, i32 2, i64 %119, i32 2
  %124 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %123) #15
  br i1 %124, label %125, label %365

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %111, i64 0, i32 2, i64 %119, i32 1
  %127 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %7, align 8
  %128 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %8, align 8
  %129 = icmp eq %"class.blink::Member.318"* %127, %128
  %130 = ptrtoint %"class.blink::Member.318"* %128 to i64
  br i1 %129, label %137, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::Member.318"* %126 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.blink::Member.318"* %127 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 1
  %136 = ptrtoint %"class.blink::Member.318"* %135 to i64
  store i64 %136, i64* %101, align 8
  br label %365

137:                                              ; preds = %125
  %138 = ptrtoint %"class.blink::Member.318"* %127 to i64
  %139 = load i64, i64* %100, align 8
  %140 = sub i64 %138, %139
  %141 = ashr exact i64 %140, 3
  %142 = add nsw i64 %141, 1
  %143 = icmp ugt i64 %142, 2305843009213693951
  %144 = inttoptr i64 %139 to %"class.blink::Member.318"*
  br i1 %143, label %145, label %147

145:                                              ; preds = %137
  %146 = bitcast %"class.std::__1::vector.3096"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #17
  unreachable

147:                                              ; preds = %137
  %148 = sub i64 %130, %139
  %149 = ashr exact i64 %148, 3
  %150 = icmp ult i64 %149, 1152921504606846975
  br i1 %150, label %151, label %159

151:                                              ; preds = %147
  %152 = ashr exact i64 %148, 2
  %153 = icmp ult i64 %152, %142
  %154 = select i1 %153, i64 %142, i64 %152
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = icmp ugt i64 %154, 2305843009213693951
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  call void @abort() #17
  unreachable

159:                                              ; preds = %156, %147
  %160 = phi i64 [ %154, %156 ], [ 2305843009213693951, %147 ]
  %161 = shl i64 %160, 3
  %162 = call i8* @_Znwm(i64 %161) #16
  %163 = bitcast i8* %162 to %"class.blink::Member.318"*
  br label %164

164:                                              ; preds = %159, %151
  %165 = phi i64 [ %160, %159 ], [ 0, %151 ]
  %166 = phi %"class.blink::Member.318"* [ %163, %159 ], [ null, %151 ]
  %167 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %166, i64 %141
  %168 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %166, i64 %165
  %169 = ptrtoint %"class.blink::Member.318"* %168 to i64
  %170 = bitcast %"class.blink::Member.318"* %126 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = bitcast %"class.blink::Member.318"* %167 to i64*
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %167, i64 1
  %174 = ptrtoint %"class.blink::Member.318"* %173 to i64
  %175 = icmp eq %"class.blink::Member.318"* %127, %144
  br i1 %175, label %355, label %176

176:                                              ; preds = %164
  %177 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  %178 = bitcast %"class.blink::Member.318"* %177 to i8*
  %179 = sub i64 0, %139
  %180 = getelementptr i8, i8* %178, i64 %179
  %181 = ptrtoint i8* %180 to i64
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = icmp ult i64 %183, 4
  br i1 %184, label %280, label %185

185:                                              ; preds = %176
  %186 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %166, i64 -1
  %187 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  %188 = bitcast %"class.blink::Member.318"* %187 to i8*
  %189 = sub i64 0, %139
  %190 = getelementptr i8, i8* %188, i64 %189
  %191 = ptrtoint i8* %190 to i64
  %192 = lshr i64 %191, 3
  %193 = sub nsw i64 %141, %192
  %194 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %186, i64 %193
  %195 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  %196 = sub nsw i64 0, %192
  %197 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %195, i64 %196
  %198 = icmp ult %"class.blink::Member.318"* %194, %127
  %199 = icmp ult %"class.blink::Member.318"* %197, %167
  %200 = and i1 %198, %199
  br i1 %200, label %280, label %201

201:                                              ; preds = %185
  %202 = and i64 %183, 4611686018427387900
  %203 = sub nsw i64 0, %202
  %204 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %167, i64 %203
  %205 = sub nsw i64 0, %202
  %206 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 %205
  %207 = add nsw i64 %202, -4
  %208 = lshr exact i64 %207, 2
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 1
  %211 = icmp eq i64 %207, 0
  br i1 %211, label %256, label %212

212:                                              ; preds = %201
  %213 = sub nuw nsw i64 %209, %210
  %214 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %167, i64 -1
  %215 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  %216 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %167, i64 -1
  %217 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  br label %218

218:                                              ; preds = %218, %212
  %219 = phi i64 [ 0, %212 ], [ %253, %218 ]
  %220 = phi i64 [ %213, %212 ], [ %254, %218 ]
  %221 = sub i64 0, %219
  %222 = sub i64 0, %219
  %223 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %214, i64 %221
  %224 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %215, i64 %222
  %225 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %224, i64 -1
  %226 = bitcast %"class.blink::Member.318"* %225 to <2 x i64>*
  %227 = load <2 x i64>, <2 x i64>* %226, align 8, !alias.scope !16
  %228 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %224, i64 -2
  %229 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %228, i64 -1
  %230 = bitcast %"class.blink::Member.318"* %229 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 8, !alias.scope !16
  %232 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %223, i64 -1
  %233 = bitcast %"class.blink::Member.318"* %232 to <2 x i64>*
  store <2 x i64> %227, <2 x i64>* %233, align 8, !alias.scope !19, !noalias !16
  %234 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %223, i64 -2
  %235 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %234, i64 -1
  %236 = bitcast %"class.blink::Member.318"* %235 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %236, align 8, !alias.scope !19, !noalias !16
  %237 = sub nuw nsw i64 -4, %219
  %238 = sub nuw nsw i64 -4, %219
  %239 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %216, i64 %237
  %240 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %217, i64 %238
  %241 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %240, i64 -1
  %242 = bitcast %"class.blink::Member.318"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !16
  %244 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %240, i64 -2
  %245 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %244, i64 -1
  %246 = bitcast %"class.blink::Member.318"* %245 to <2 x i64>*
  %247 = load <2 x i64>, <2 x i64>* %246, align 8, !alias.scope !16
  %248 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %239, i64 -1
  %249 = bitcast %"class.blink::Member.318"* %248 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %249, align 8, !alias.scope !19, !noalias !16
  %250 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %239, i64 -2
  %251 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %250, i64 -1
  %252 = bitcast %"class.blink::Member.318"* %251 to <2 x i64>*
  store <2 x i64> %247, <2 x i64>* %252, align 8, !alias.scope !19, !noalias !16
  %253 = add i64 %219, 8
  %254 = add i64 %220, -2
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %218, !llvm.loop !21

256:                                              ; preds = %218, %201
  %257 = phi i64 [ 0, %201 ], [ %253, %218 ]
  %258 = icmp eq i64 %210, 0
  br i1 %258, label %278, label %259

259:                                              ; preds = %256
  %260 = sub i64 0, %257
  %261 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %167, i64 -1
  %262 = sub i64 0, %257
  %263 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %127, i64 -1
  %264 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %261, i64 %260
  %265 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %263, i64 %262
  %266 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %265, i64 -1
  %267 = bitcast %"class.blink::Member.318"* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !16
  %269 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %265, i64 -2
  %270 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %269, i64 -1
  %271 = bitcast %"class.blink::Member.318"* %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !16
  %273 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %264, i64 -1
  %274 = bitcast %"class.blink::Member.318"* %273 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %274, align 8, !alias.scope !19, !noalias !16
  %275 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %264, i64 -2
  %276 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %275, i64 -1
  %277 = bitcast %"class.blink::Member.318"* %276 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %277, align 8, !alias.scope !19, !noalias !16
  br label %278

278:                                              ; preds = %256, %259
  %279 = icmp eq i64 %183, %202
  br i1 %279, label %352, label %280

280:                                              ; preds = %278, %185, %176
  %281 = phi %"class.blink::Member.318"* [ %167, %185 ], [ %167, %176 ], [ %204, %278 ]
  %282 = phi %"class.blink::Member.318"* [ %127, %185 ], [ %127, %176 ], [ %206, %278 ]
  %283 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %282, i64 -1
  %284 = bitcast %"class.blink::Member.318"* %283 to i8*
  %285 = sub i64 0, %139
  %286 = getelementptr i8, i8* %284, i64 %285
  %287 = ptrtoint i8* %286 to i64
  %288 = lshr i64 %287, 3
  %289 = add nuw nsw i64 %288, 1
  %290 = and i64 %289, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %303, label %292

292:                                              ; preds = %280, %292
  %293 = phi %"class.blink::Member.318"* [ %296, %292 ], [ %281, %280 ]
  %294 = phi %"class.blink::Member.318"* [ %297, %292 ], [ %282, %280 ]
  %295 = phi i64 [ %301, %292 ], [ %290, %280 ]
  %296 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %293, i64 -1
  %297 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %294, i64 -1
  %298 = bitcast %"class.blink::Member.318"* %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.blink::Member.318"* %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = add i64 %295, -1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %292, !llvm.loop !23

303:                                              ; preds = %292, %280
  %304 = phi %"class.blink::Member.318"* [ undef, %280 ], [ %296, %292 ]
  %305 = phi %"class.blink::Member.318"* [ %281, %280 ], [ %296, %292 ]
  %306 = phi %"class.blink::Member.318"* [ %282, %280 ], [ %297, %292 ]
  %307 = icmp ult i8* %286, inttoptr (i64 56 to i8*)
  br i1 %307, label %352, label %308

308:                                              ; preds = %303, %308
  %309 = phi %"class.blink::Member.318"* [ %346, %308 ], [ %305, %303 ]
  %310 = phi %"class.blink::Member.318"* [ %347, %308 ], [ %306, %303 ]
  %311 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -1
  %312 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -1
  %313 = bitcast %"class.blink::Member.318"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.blink::Member.318"* %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -2
  %317 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -2
  %318 = bitcast %"class.blink::Member.318"* %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.blink::Member.318"* %316 to i64*
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -3
  %322 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -3
  %323 = bitcast %"class.blink::Member.318"* %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.blink::Member.318"* %321 to i64*
  store i64 %324, i64* %325, align 8
  %326 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -4
  %327 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -4
  %328 = bitcast %"class.blink::Member.318"* %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = bitcast %"class.blink::Member.318"* %326 to i64*
  store i64 %329, i64* %330, align 8
  %331 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -5
  %332 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -5
  %333 = bitcast %"class.blink::Member.318"* %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.blink::Member.318"* %331 to i64*
  store i64 %334, i64* %335, align 8
  %336 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -6
  %337 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -6
  %338 = bitcast %"class.blink::Member.318"* %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.blink::Member.318"* %336 to i64*
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -7
  %342 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -7
  %343 = bitcast %"class.blink::Member.318"* %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"class.blink::Member.318"* %341 to i64*
  store i64 %344, i64* %345, align 8
  %346 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %309, i64 -8
  %347 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %310, i64 -8
  %348 = bitcast %"class.blink::Member.318"* %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.blink::Member.318"* %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = icmp eq %"class.blink::Member.318"* %347, %144
  br i1 %351, label %352, label %308, !llvm.loop !25

352:                                              ; preds = %303, %308, %278
  %353 = phi %"class.blink::Member.318"* [ %204, %278 ], [ %304, %303 ], [ %346, %308 ]
  %354 = load i64, i64* %100, align 8
  br label %355

355:                                              ; preds = %164, %352
  %356 = phi %"class.blink::Member.318"* [ %353, %352 ], [ %167, %164 ]
  %357 = phi i64 [ %354, %352 ], [ %139, %164 ]
  %358 = ptrtoint %"class.blink::Member.318"* %356 to i64
  store i64 %358, i64* %100, align 8
  store i64 %174, i64* %101, align 8
  store i64 %169, i64* %117, align 8
  %359 = icmp eq i64 %357, 0
  br i1 %359, label %365, label %360

360:                                              ; preds = %355
  %361 = inttoptr i64 %357 to i8*
  call void @_ZdlPv(i8* %361) #16
  br label %365

362:                                              ; preds = %118
  %363 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %111, i64 0, i32 2, i64 %119, i32 0
  %364 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %363, align 8
  call void @_ZNK2cc5RTreeIN5blink6MemberINS1_4NodeEEEE15SearchRecursiveEPNS5_4NodeIS4_EERKN3gfx4RectEPNSt3__16vectorIS4_NSD_9allocatorIS4_EEEEPNSE_ISA_NSF_ISA_EEEE(%"class.cc::RTree"* %10, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %364, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.3096"* %0, %"class.std::__1::vector.824"* null) #15
  br label %365

365:                                              ; preds = %360, %355, %131, %362, %122
  %366 = add nuw nsw i64 %119, 1
  %367 = load i16, i16* %112, align 8
  %368 = zext i16 %367 to i64
  %369 = icmp ult i64 %366, %368
  br i1 %369, label %118, label %376

370:                                              ; preds = %105
  %371 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0, i32 1, i32 2
  %372 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %371) #15
  br i1 %372, label %373, label %376

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %1, i64 0, i32 0, i32 1, i32 0
  %375 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %374, align 8
  call void @_ZNK2cc5RTreeIN5blink6MemberINS1_4NodeEEEE15SearchRecursiveEPNS5_4NodeIS4_EERKN3gfx4RectEPNSt3__16vectorIS4_NSD_9allocatorIS4_EEEEPNSE_ISA_NSF_ISA_EEEE(%"class.cc::RTree"* %10, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %375, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.3096"* %0, %"class.std::__1::vector.824"* null) #15
  br label %376

376:                                              ; preds = %365, %109, %72, %370, %373
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  ret void
}

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::HashMap.2900"* @_ZN5blink25InspectorDOMSnapshotAgent19BuildPaintLayerTreeEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

declare %"class.blink::CSSValue"* @_ZNK5blink19StyleGeneratedImage8CssValueEv(%"class.blink::StyleGeneratedImage"*) unnamed_addr #1

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue16CSSGradientValue13GetStopColorsERKNS_8DocumentERKNS_13ComputedStyleE(%"class.WTF::Vector.3090"* sret, %"class.blink::cssvalue::CSSGradientValue"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue16CSSGradientValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::cssvalue::CSSGradientValue"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3090"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3090"* %0, i32 %5, %"class.blink::Color"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Color"*, %"class.blink::Color"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 %10, i32 0
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %12, align 4
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3090"*, i32, %"class.blink::Color"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Color"*, %"class.blink::Color"** %4, align 8
  %6 = icmp ugt %"class.blink::Color"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 %10
  %12 = icmp ugt %"class.blink::Color"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Color"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3090"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::Color"*, %"class.blink::Color"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::Color"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::Color"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.3090"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.3090"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::Color"* %2 to i64
  %55 = ptrtoint %"class.blink::Color"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::Color"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5ColorEEEmm(i64 %70) #15
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5ColorEEEPKcv, i64 0, i64 0)) #15
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.3090"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::Color"*, %"class.blink::Color"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::Color"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::Color"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #15
  %86 = bitcast %"class.WTF::Vector.3090"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #15
  %90 = bitcast %"class.WTF::Vector.3090"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::Color"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::Color"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::Color"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::Color"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPN5blink4NodeEEJEEES6_E3RunEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, %"class.blink::Node"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (%"class.blink::Node"*)**
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %1) #15
  ret i1 %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPN5blink4NodeEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE7reserveEm(%"class.std::__1::vector.3023"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3023", %"class.std::__1::vector.3023"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3023"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 360
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  br i1 %10, label %12, label %67

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.3023", %"class.std::__1::vector.3023"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %13 to i64*
  %15 = icmp ugt i64 %1, 51240955760304310
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 360
  %21 = mul i64 %1, 360
  %22 = tail call i8* @_Znwm(i64 %21) #16
  %23 = bitcast i8* %22 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  %24 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %23, i64 %20
  %25 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %24 to i64
  %26 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %23, i64 %1
  %27 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  %29 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %28, %11
  br i1 %29, label %61, label %30

30:                                               ; preds = %17, %56
  %31 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %33, %56 ], [ %24, %17 ]
  %32 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %34, %56 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %32, i64 -1
  %35 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %34 to i32*
  %36 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33 to i32*
  %37 = load i32, i32* %35, align 8
  store i32 %37, i32* %36, align 8
  br label %38

38:                                               ; preds = %38, %30
  %39 = phi i64 [ 0, %30 ], [ %54, %38 ]
  %40 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %31, i64 -1, i32 2, i64 %39
  %41 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %32, i64 -1, i32 2, i64 %39
  %42 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %31, i64 -1, i32 2, i64 %39, i32 1
  %46 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %32, i64 -1, i32 2, i64 %39, i32 1
  %47 = bitcast %"class.blink::Member.318"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::Member.318"* %45 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %31, i64 -1, i32 2, i64 %39, i32 2
  %51 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %32, i64 -1, i32 2, i64 %39, i32 2
  %52 = bitcast %"class.gfx::Rect"* %50 to i8*
  %53 = bitcast %"class.gfx::Rect"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #15
  %54 = add nuw nsw i64 %39, 1
  %55 = icmp eq i64 %54, 11
  br i1 %55, label %56, label %38

56:                                               ; preds = %38
  %57 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %34, %11
  br i1 %57, label %58, label %30

58:                                               ; preds = %56
  %59 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33 to i64
  %60 = load i64, i64* %6, align 8
  br label %61

61:                                               ; preds = %17, %58
  %62 = phi i64 [ %59, %58 ], [ %25, %17 ]
  %63 = phi i64 [ %60, %58 ], [ %18, %17 ]
  store i64 %62, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %66) #16
  br label %67

67:                                               ; preds = %65, %61, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc5RTreeIN5blink6MemberINS1_4NodeEEEE14BuildRecursiveEPNSt3__16vectorINS5_6BranchIS4_EENS6_9allocatorIS9_EEEEi(%"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* noalias sret, %"class.cc::RTree"*, %"class.std::__1::vector.3305"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.3305"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = icmp eq i64 %11, 32
  %13 = inttoptr i64 %10 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  br i1 %12, label %14, label %27

14:                                               ; preds = %4
  %15 = inttoptr i64 %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %0 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %13, i64 0, i32 1
  %20 = bitcast %"class.blink::Member.318"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.318"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %13, i64 0, i32 2
  %25 = bitcast %"class.gfx::Rect"* %23 to i8*
  %26 = bitcast %"class.gfx::Rect"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false) #15
  br label %276

27:                                               ; preds = %4
  %28 = ashr exact i64 %11, 5
  %29 = urem i64 %28, 11
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = icmp ugt i32 %30, 5
  %34 = sub nsw i32 6, %30
  %35 = select i1 %33, i32 0, i32 %34
  br label %36

36:                                               ; preds = %32, %27
  %37 = phi i32 [ 0, %27 ], [ %35, %32 ]
  %38 = icmp eq i64 %11, 0
  br i1 %38, label %267, label %39

39:                                               ; preds = %36
  %40 = bitcast i32* %5 to i8*
  %41 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 1
  %42 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %43 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2
  %44 = trunc i32 %3 to i16
  %45 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %41 to i64*
  %46 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %2, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 3
  br label %48

48:                                               ; preds = %39, %251
  %49 = phi i64 [ 0, %39 ], [ %256, %251 ]
  %50 = phi i64 [ 0, %39 ], [ %145, %251 ]
  %51 = phi i32 [ %37, %39 ], [ %60, %251 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %48
  %54 = icmp slt i32 %51, 6
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = sub nsw i32 11, %51
  br label %59

57:                                               ; preds = %53
  %58 = add nsw i32 %51, -5
  br label %59

59:                                               ; preds = %48, %55, %57
  %60 = phi i32 [ 0, %55 ], [ %58, %57 ], [ 0, %48 ]
  %61 = phi i32 [ %56, %55 ], [ 6, %57 ], [ 11, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40)
  store i32 %3, i32* %5, align 4
  %62 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %41, align 8
  %63 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %42, align 8
  %64 = icmp ult %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, %63
  br i1 %64, label %65, label %92

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 0
  store i16 0, i16* %66, align 8
  %67 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 1
  store i16 %44, i16* %67, align 2
  %68 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 0, i32 1, i32 0, i32 0
  %69 = bitcast %"class.blink::Node"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #15
  %70 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 1, i32 1, i32 0, i32 0
  %71 = bitcast %"class.blink::Node"** %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #15
  %72 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 2, i32 1, i32 0, i32 0
  %73 = bitcast %"class.blink::Node"** %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #15
  %74 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 3, i32 1, i32 0, i32 0
  %75 = bitcast %"class.blink::Node"** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #15
  %76 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 4, i32 1, i32 0, i32 0
  %77 = bitcast %"class.blink::Node"** %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #15
  %78 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 5, i32 1, i32 0, i32 0
  %79 = bitcast %"class.blink::Node"** %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #15
  %80 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 6, i32 1, i32 0, i32 0
  %81 = bitcast %"class.blink::Node"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #15
  %82 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 7, i32 1, i32 0, i32 0
  %83 = bitcast %"class.blink::Node"** %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #15
  %84 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 8, i32 1, i32 0, i32 0
  %85 = bitcast %"class.blink::Node"** %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #15
  %86 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 9, i32 1, i32 0, i32 0
  %87 = bitcast %"class.blink::Node"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #15
  %88 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 0, i32 2, i64 10, i32 1, i32 0, i32 0
  %89 = bitcast %"class.blink::Node"** %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #15
  %90 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %62, i64 1
  %91 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %90 to i64
  store i64 %91, i64* %45, align 8
  br label %94

92:                                               ; preds = %59
  call void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector.3023"* %43, i32* nonnull dereferenceable(4) %5) #15
  %93 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %41, align 8
  br label %94

94:                                               ; preds = %65, %92
  %95 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %90, %65 ], [ %93, %92 ]
  %96 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40)
  %97 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %96, i64 0, i32 0
  store i16 1, i16* %97, align 8
  %98 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %46, align 8
  %99 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %98, i64 %50
  %100 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 0
  %101 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %99 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %100 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %98, i64 %50, i32 1
  %106 = bitcast %"class.blink::Member.318"* %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::Member.318"* %104 to i64*
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %94
  %112 = inttoptr i64 %107 to i8*
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #15
  br label %114

114:                                              ; preds = %94, %111
  %115 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 0, i32 2
  %116 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %98, i64 %50, i32 2
  %117 = bitcast %"class.gfx::Rect"* %115 to i8*
  %118 = bitcast %"class.gfx::Rect"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #15
  %119 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %46, align 8
  %120 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119, i64 %50, i32 2, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119, i64 %50, i32 2, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119, i64 %50, i32 2, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119, i64 %50, i32 2, i32 1, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %96 to i64
  %129 = add nsw i32 %125, %121
  %130 = add nsw i32 %127, %123
  %131 = add nuw i64 %50, 1
  %132 = icmp sgt i32 %61, 1
  br i1 %132, label %133, label %140

133:                                              ; preds = %114
  %134 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119 to i64
  %135 = zext i32 %61 to i64
  %136 = load i64, i64* %7, align 8
  %137 = sub i64 %136, %134
  %138 = ashr exact i64 %137, 5
  %139 = icmp ult i64 %131, %138
  br i1 %139, label %191, label %140

140:                                              ; preds = %233, %242, %133, %114
  %141 = phi i32 [ %121, %114 ], [ %121, %133 ], [ %204, %242 ], [ %204, %233 ]
  %142 = phi i32 [ %123, %114 ], [ %123, %133 ], [ %208, %242 ], [ %208, %233 ]
  %143 = phi i32 [ %129, %114 ], [ %129, %133 ], [ %213, %242 ], [ %213, %233 ]
  %144 = phi i32 [ %130, %114 ], [ %130, %133 ], [ %218, %242 ], [ %218, %233 ]
  %145 = phi i64 [ %131, %114 ], [ %131, %133 ], [ %240, %242 ], [ %240, %233 ]
  %146 = icmp sgt i32 %141, -1
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %143, i32 %141) #15
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !11
  %152 = icmp sgt i32 %142, -1
  %153 = select i1 %152, i32 -2147483648, i32 2147483647
  %154 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %144, i32 %142) #15
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 %153, i32 %156, !prof !11
  %158 = icmp sgt i32 %141, 0
  %159 = icmp sgt i32 %151, 0
  %160 = and i1 %158, %159
  %161 = sub nuw nsw i32 2147483647, %141
  %162 = icmp ult i32 %161, %151
  %163 = and i1 %162, %160
  %164 = select i1 %163, i32 %161, i32 %151
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = icmp sgt i32 %142, 0
  %168 = icmp sgt i32 %157, 0
  %169 = and i1 %167, %168
  %170 = sub nuw nsw i32 2147483647, %142
  %171 = icmp ult i32 %170, %157
  %172 = and i1 %171, %169
  %173 = select i1 %172, i32 %170, i32 %157
  %174 = icmp sgt i32 %173, 0
  %175 = select i1 %174, i32 %173, i32 0
  %176 = add nsw i32 %166, %141
  %177 = icmp eq i32 %176, %143
  %178 = add nsw i32 %175, %142
  %179 = icmp eq i32 %178, %144
  %180 = and i1 %177, %179
  %181 = zext i1 %180 to i8
  %182 = load i8, i8* %47, align 8, !range !3
  %183 = and i8 %182, %181
  store i8 %183, i8* %47, align 8
  %184 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %46, align 8
  %185 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49
  %186 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %185 to i64*
  store i64 %128, i64* %186, align 8
  %187 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49, i32 1
  %188 = bitcast %"class.blink::Member.318"* %187 to i64*
  store atomic i64 0, i64* %188 monotonic, align 8
  %189 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %251, label %249

191:                                              ; preds = %133, %242
  %192 = phi i32 [ %204, %242 ], [ %121, %133 ]
  %193 = phi i32 [ %208, %242 ], [ %123, %133 ]
  %194 = phi i32 [ %213, %242 ], [ %129, %133 ]
  %195 = phi i32 [ %218, %242 ], [ %130, %133 ]
  %196 = phi i64 [ %240, %242 ], [ %131, %133 ]
  %197 = phi i64 [ %239, %242 ], [ 1, %133 ]
  %198 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %244, %242 ], [ %119, %133 ]
  %199 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196
  %200 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196, i32 2
  %201 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %200, i64 0, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp slt i32 %202, %192
  %204 = select i1 %203, i32 %202, i32 %192
  %205 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196, i32 2, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = icmp slt i32 %206, %193
  %208 = select i1 %207, i32 %206, i32 %193
  %209 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196, i32 2, i32 1, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = add nsw i32 %210, %202
  %212 = icmp slt i32 %194, %211
  %213 = select i1 %212, i32 %211, i32 %194
  %214 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196, i32 2, i32 1, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, %206
  %217 = icmp slt i32 %195, %216
  %218 = select i1 %217, i32 %216, i32 %195
  %219 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 %197
  %220 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %199 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %219 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 %197, i32 1
  %224 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %198, i64 %196, i32 1
  %225 = bitcast %"class.blink::Member.318"* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.blink::Member.318"* %223 to i64*
  store atomic i64 %226, i64* %227 monotonic, align 8
  %228 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %233, label %230

230:                                              ; preds = %191
  %231 = inttoptr i64 %226 to i8*
  %232 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %231) #15
  br label %233

233:                                              ; preds = %191, %230
  %234 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %95, i64 -1, i32 2, i64 %197, i32 2
  %235 = bitcast %"class.gfx::Rect"* %234 to i8*
  %236 = bitcast %"class.gfx::Rect"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 16, i1 false) #15
  %237 = load i16, i16* %97, align 8
  %238 = add i16 %237, 1
  store i16 %238, i16* %97, align 8
  %239 = add nuw nsw i64 %197, 1
  %240 = add nuw i64 %196, 1
  %241 = icmp eq i64 %239, %135
  br i1 %241, label %140, label %242

242:                                              ; preds = %233
  %243 = load i64, i64* %9, align 8
  %244 = inttoptr i64 %243 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  %245 = load i64, i64* %7, align 8
  %246 = sub i64 %245, %243
  %247 = ashr exact i64 %246, 5
  %248 = icmp ult i64 %240, %247
  br i1 %248, label %191, label %140

249:                                              ; preds = %140
  %250 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #15
  br label %251

251:                                              ; preds = %140, %249
  %252 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49, i32 2, i32 0, i32 0
  store i32 %141, i32* %252, align 8
  %253 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49, i32 2, i32 0, i32 1
  store i32 %142, i32* %253, align 4
  %254 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49, i32 2, i32 1, i32 0
  store i32 %166, i32* %254, align 8
  %255 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %184, i64 %49, i32 2, i32 1, i32 1
  store i32 %175, i32* %255, align 4
  %256 = add i64 %49, 1
  %257 = load i64, i64* %7, align 8
  %258 = load i64, i64* %9, align 8
  %259 = sub i64 %257, %258
  %260 = ashr exact i64 %259, 5
  %261 = icmp ult i64 %145, %260
  br i1 %261, label %48, label %262

262:                                              ; preds = %251
  %263 = inttoptr i64 %258 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  %264 = icmp ugt i64 %256, %260
  br i1 %264, label %265, label %267

265:                                              ; preds = %262
  %266 = sub i64 %256, %260
  call void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE6BranchIS6_EENS_9allocatorIS9_EEE8__appendEm(%"class.std::__1::vector.3305"* %2, i64 %266) #15
  br label %274

267:                                              ; preds = %36, %262
  %268 = phi i64 [ %260, %262 ], [ 0, %36 ]
  %269 = phi i64 [ %256, %262 ], [ 0, %36 ]
  %270 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %263, %262 ], [ %13, %36 ]
  %271 = icmp ult i64 %269, %268
  br i1 %271, label %272, label %274

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %270, i64 %269
  store %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %273, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %6, align 8
  br label %274

274:                                              ; preds = %265, %267, %272
  %275 = add nsw i32 %3, 1
  call void @_ZN2cc5RTreeIN5blink6MemberINS1_4NodeEEEE14BuildRecursiveEPNSt3__16vectorINS5_6BranchIS4_EENS6_9allocatorIS9_EEEEi(%"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* sret %0, %"class.cc::RTree"* %1, %"class.std::__1::vector.3305"* %2, i32 %275)
  br label %276

276:                                              ; preds = %274, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.318"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3033"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3033", %"class.WTF::Vector.3033"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %24, i64 %25
  ret %"class.blink::Member.318"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE4NodeIS6_EENS_9allocatorIS9_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector.3023"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3023", %"class.std::__1::vector.3023"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3023"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 360
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 51240955760304310
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3023"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3023", %"class.std::__1::vector.3023"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 360
  %20 = icmp ult i64 %19, 25620477880152155
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 51240955760304310, %14 ]
  %28 = mul i64 %27, 360
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %35 to i64
  %37 = load i32, i32* %1, align 4
  %38 = trunc i32 %37 to i16
  %39 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %34, i64 0, i32 0
  store i16 0, i16* %39, align 8
  %40 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 1
  store i16 %38, i16* %40, align 2
  %41 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.blink::Node"** %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #15
  %43 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 1, i32 1, i32 0, i32 0
  %44 = bitcast %"class.blink::Node"** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #15
  %45 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 2, i32 1, i32 0, i32 0
  %46 = bitcast %"class.blink::Node"** %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #15
  %47 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 3, i32 1, i32 0, i32 0
  %48 = bitcast %"class.blink::Node"** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #15
  %49 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 4, i32 1, i32 0, i32 0
  %50 = bitcast %"class.blink::Node"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #15
  %51 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 5, i32 1, i32 0, i32 0
  %52 = bitcast %"class.blink::Node"** %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #15
  %53 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 6, i32 1, i32 0, i32 0
  %54 = bitcast %"class.blink::Node"** %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #15
  %55 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 7, i32 1, i32 0, i32 0
  %56 = bitcast %"class.blink::Node"** %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #15
  %57 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 8, i32 1, i32 0, i32 0
  %58 = bitcast %"class.blink::Node"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #15
  %59 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 9, i32 1, i32 0, i32 0
  %60 = bitcast %"class.blink::Node"** %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #15
  %61 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %33, i64 %9, i32 2, i64 10, i32 1, i32 0, i32 0
  %62 = bitcast %"class.blink::Node"** %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #15
  %63 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %34, i64 1
  %64 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.3023", %"class.std::__1::vector.3023"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %65, align 8
  %67 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %3, align 8
  %68 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %67, %66
  br i1 %68, label %69, label %71

69:                                               ; preds = %31
  %70 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %66 to i64
  br label %101

71:                                               ; preds = %31, %97
  %72 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %74, %97 ], [ %34, %31 ]
  %73 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %75, %97 ], [ %67, %31 ]
  %74 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %72, i64 -1
  %75 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %73, i64 -1
  %76 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %75 to i32*
  %77 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %74 to i32*
  %78 = load i32, i32* %76, align 8
  store i32 %78, i32* %77, align 8
  br label %79

79:                                               ; preds = %79, %71
  %80 = phi i64 [ 0, %71 ], [ %95, %79 ]
  %81 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %72, i64 -1, i32 2, i64 %80
  %82 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %73, i64 -1, i32 2, i64 %80
  %83 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %72, i64 -1, i32 2, i64 %80, i32 1
  %87 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %73, i64 -1, i32 2, i64 %80, i32 1
  %88 = bitcast %"class.blink::Member.318"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.318"* %86 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %72, i64 -1, i32 2, i64 %80, i32 2
  %92 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %73, i64 -1, i32 2, i64 %80, i32 2
  %93 = bitcast %"class.gfx::Rect"* %91 to i8*
  %94 = bitcast %"class.gfx::Rect"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #15
  %95 = add nuw nsw i64 %80, 1
  %96 = icmp eq i64 %95, 11
  br i1 %96, label %97, label %79

97:                                               ; preds = %79
  %98 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %75, %66
  br i1 %98, label %99, label %71

99:                                               ; preds = %97
  %100 = load i64, i64* %6, align 8
  br label %101

101:                                              ; preds = %69, %99
  %102 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* [ %34, %69 ], [ %74, %99 ]
  %103 = phi i64 [ %70, %69 ], [ %100, %99 ]
  %104 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %102 to i64
  store i64 %104, i64* %6, align 8
  store i64 %64, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %105 = icmp eq i64 %103, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = inttoptr i64 %103 to i8*
  tail call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %101, %106
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeIN5blink6MemberINS3_4NodeEEEE6BranchIS6_EENS_9allocatorIS9_EEE8__appendEm(%"class.std::__1::vector.3305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %13, i64 %18, i32 0
  %20 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %180

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.3305"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.3305"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %57, i64 %33
  %59 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %58 to i64
  %60 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  %63 = add i64 %62, -32
  %64 = lshr exact i64 %63, 5
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #15
  %73 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %69, i64 1
  %74 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !26

77:                                               ; preds = %68
  %78 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 224
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 32, i1 false) #15
  %87 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 1
  %88 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 32, i1 false) #15
  %89 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 2
  %90 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 32, i1 false) #15
  %91 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 3
  %92 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 32, i1 false) #15
  %93 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 4
  %94 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 32, i1 false) #15
  %95 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 5
  %96 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #15
  %97 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 6
  %98 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 32, i1 false) #15
  %99 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 7
  %100 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #15
  %101 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %84, i64 8
  %102 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %101 to i64
  %103 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %60 to i64
  %106 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.3305", %"class.std::__1::vector.3305"* %0, i64 0, i32 0, i32 0
  %108 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %107, align 8
  %109 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %108 to i64
  %110 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"** %6, align 8
  %111 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %110, %108
  br i1 %111, label %174, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %110, i64 -1, i32 0
  %114 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = and i64 %115, 32
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %133

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %58, i64 -1
  %120 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %110, i64 -1
  %121 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %58, i64 -1, i32 1
  %125 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %110, i64 -1, i32 1
  %126 = bitcast %"class.blink::Member.318"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::Member.318"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %58, i64 -1, i32 2
  %130 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %110, i64 -1, i32 2
  %131 = bitcast %"class.gfx::Rect"* %129 to i8*
  %132 = bitcast %"class.gfx::Rect"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #15
  br label %133

133:                                              ; preds = %118, %112
  %134 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ undef, %112 ], [ %119, %118 ]
  %135 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %58, %112 ], [ %119, %118 ]
  %136 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %110, %112 ], [ %120, %118 ]
  %137 = icmp ult i64 %115, 32
  br i1 %137, label %170, label %138

138:                                              ; preds = %133, %138
  %139 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %155, %138 ], [ %135, %133 ]
  %140 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %156, %138 ], [ %136, %133 ]
  %141 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -1
  %142 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -1
  %143 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -1, i32 1
  %147 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -1, i32 1
  %148 = bitcast %"class.blink::Member.318"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.blink::Member.318"* %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -1, i32 2
  %152 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -1, i32 2
  %153 = bitcast %"class.gfx::Rect"* %151 to i8*
  %154 = bitcast %"class.gfx::Rect"* %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 16, i1 false) #15
  %155 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -2
  %156 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -2
  %157 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -2, i32 1
  %161 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -2, i32 1
  %162 = bitcast %"class.blink::Member.318"* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.blink::Member.318"* %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %139, i64 -2, i32 2
  %166 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %140, i64 -2, i32 2
  %167 = bitcast %"class.gfx::Rect"* %165 to i8*
  %168 = bitcast %"class.gfx::Rect"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false) #15
  %169 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %156, %108
  br i1 %169, label %170, label %138

170:                                              ; preds = %138, %133
  %171 = phi %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* [ %134, %133 ], [ %155, %138 ]
  %172 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"* %171 to i64
  %173 = load i64, i64* %30, align 8
  br label %174

174:                                              ; preds = %104, %170
  %175 = phi i64 [ %172, %170 ], [ %59, %104 ]
  %176 = phi i64 [ %173, %170 ], [ %109, %104 ]
  store i64 %175, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = inttoptr i64 %176 to i8*
  tail call void @_ZdlPv(i8* %179) #16
  br label %180

180:                                              ; preds = %178, %174, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink12ContrastInfoENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.3058"*, %"struct.blink::ContrastInfo"* dereferenceable(40)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::ContrastInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3058"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 461168601842738790
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3058"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::ContrastInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 40
  %20 = icmp ult i64 %19, 230584300921369395
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 461168601842738790, %14 ]
  %28 = mul i64 %27, 40
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to %"struct.blink::ContrastInfo"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::ContrastInfo"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::ContrastInfo"* %35 to i64
  %37 = bitcast %"struct.blink::ContrastInfo"* %34 to i8*
  %38 = bitcast %"struct.blink::ContrastInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #15
  %39 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %33, i64 %9, i32 5
  %40 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %1, i64 0, i32 5
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 0, i32 0, i32 0
  %42 = bitcast %"class.WTF::String"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.WTF::String"* %39 to i64*
  store i64 %43, i64* %44, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  %45 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %33, i64 %9, i32 6
  %46 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %1, i64 0, i32 6
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::String"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.WTF::String"* %45 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %51 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %34, i64 1
  %52 = ptrtoint %"struct.blink::ContrastInfo"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.3058", %"class.std::__1::vector.3058"* %0, i64 0, i32 0, i32 0
  %54 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %53, align 8
  %55 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %3, align 8
  %56 = icmp eq %"struct.blink::ContrastInfo"* %55, %54
  br i1 %56, label %57, label %59

57:                                               ; preds = %31
  %58 = ptrtoint %"struct.blink::ContrastInfo"* %54 to i64
  br label %82

59:                                               ; preds = %31, %59
  %60 = phi %"struct.blink::ContrastInfo"* [ %62, %59 ], [ %34, %31 ]
  %61 = phi %"struct.blink::ContrastInfo"* [ %63, %59 ], [ %55, %31 ]
  %62 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %60, i64 -1
  %63 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %61, i64 -1
  %64 = bitcast %"struct.blink::ContrastInfo"* %62 to i8*
  %65 = bitcast %"struct.blink::ContrastInfo"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #15
  %66 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %60, i64 -1, i32 5
  %67 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %61, i64 -1, i32 5
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::String"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.WTF::String"* %66 to i64*
  store i64 %70, i64* %71, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %72 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %60, i64 -1, i32 6
  %73 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %61, i64 -1, i32 6
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::String"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %78 = icmp eq %"struct.blink::ContrastInfo"* %63, %54
  br i1 %78, label %79, label %59

79:                                               ; preds = %59
  %80 = load i64, i64* %6, align 8
  %81 = load %"struct.blink::ContrastInfo"*, %"struct.blink::ContrastInfo"** %3, align 8
  br label %82

82:                                               ; preds = %57, %79
  %83 = phi %"struct.blink::ContrastInfo"* [ %54, %57 ], [ %81, %79 ]
  %84 = phi %"struct.blink::ContrastInfo"* [ %34, %57 ], [ %62, %79 ]
  %85 = phi i64 [ %58, %57 ], [ %80, %79 ]
  %86 = ptrtoint %"struct.blink::ContrastInfo"* %84 to i64
  store i64 %86, i64* %6, align 8
  store i64 %52, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %87 = inttoptr i64 %85 to %"struct.blink::ContrastInfo"*
  %88 = icmp eq %"struct.blink::ContrastInfo"* %83, %87
  br i1 %88, label %127, label %89

89:                                               ; preds = %82, %125
  %90 = phi %"struct.blink::ContrastInfo"* [ %91, %125 ], [ %83, %82 ]
  %91 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %90, i64 -1
  %92 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %90, i64 -1, i32 6, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #15
  br label %108

108:                                              ; preds = %107, %104, %89
  %109 = getelementptr inbounds %"struct.blink::ContrastInfo", %"struct.blink::ContrastInfo"* %90, i64 -1, i32 5, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #15
  br label %125

125:                                              ; preds = %124, %121, %108
  %126 = icmp eq %"struct.blink::ContrastInfo"* %91, %87
  br i1 %126, label %127, label %89

127:                                              ; preds = %125, %82
  %128 = icmp eq i64 %85, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = inttoptr i64 %85 to i8*
  tail call void @_ZdlPv(i8* %130) #16
  br label %131

131:                                              ; preds = %127, %129
  ret void
}

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !11

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #15
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %40, i8* %41) #15
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #15
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !11

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #15
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2cc5RTreeIN5blink6MemberINS1_4NodeEEEE15SearchRecursiveEPNS5_4NodeIS4_EERKN3gfx4RectEPNSt3__16vectorIS4_NSD_9allocatorIS4_EEEEPNSE_ISA_NSF_ISA_EEEE(%"class.cc::RTree"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.3096"*, %"class.std::__1::vector.824"*) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %1, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.blink::Member.318"** %11 to i64*
  %14 = bitcast %"class.std::__1::vector.3096"* %3 to i64*
  %15 = bitcast %"class.blink::Member.318"** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector.3096", %"class.std::__1::vector.3096"* %3, i64 0, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::vector.824"* %4, null
  %18 = getelementptr inbounds %"class.std::__1::vector.824", %"class.std::__1::vector.824"* %4, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.824", %"class.std::__1::vector.824"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.gfx::Rect"** %18 to i64*
  %21 = bitcast %"class.std::__1::vector.824"* %4 to i64*
  %22 = bitcast %"class.gfx::Rect"** %19 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.824", %"class.std::__1::vector.824"* %4, i64 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %333, %5
  ret void

25:                                               ; preds = %9, %333
  %26 = phi i64 [ 0, %9 ], [ %334, %333 ]
  %27 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %1, i64 0, i32 2, i64 %26, i32 2
  %28 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %2, %"class.gfx::Rect"* dereferenceable(16) %27) #15
  br i1 %28, label %29, label %333

29:                                               ; preds = %25
  %30 = load i16, i16* %10, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %330

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %1, i64 0, i32 2, i64 %26, i32 1
  %34 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %11, align 8
  %35 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %12, align 8
  %36 = icmp eq %"class.blink::Member.318"* %34, %35
  %37 = ptrtoint %"class.blink::Member.318"* %35 to i64
  br i1 %36, label %44, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::Member.318"* %33 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::Member.318"* %34 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %34, i64 1
  %43 = ptrtoint %"class.blink::Member.318"* %42 to i64
  store i64 %43, i64* %13, align 8
  br label %265

44:                                               ; preds = %32
  %45 = ptrtoint %"class.blink::Member.318"* %34 to i64
  %46 = load i64, i64* %14, align 8
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::vector.3096"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #17
  unreachable

53:                                               ; preds = %44
  %54 = sub i64 %37, %46
  %55 = ashr exact i64 %54, 3
  %56 = icmp ult i64 %55, 1152921504606846975
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = ashr exact i64 %54, 2
  %59 = icmp ult i64 %58, %49
  %60 = select i1 %59, i64 %49, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = icmp ugt i64 %60, 2305843009213693951
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  tail call void @abort() #17
  unreachable

65:                                               ; preds = %62, %53
  %66 = phi i64 [ %60, %62 ], [ 2305843009213693951, %53 ]
  %67 = shl i64 %66, 3
  %68 = tail call i8* @_Znwm(i64 %67) #16
  %69 = bitcast i8* %68 to %"class.blink::Member.318"*
  br label %70

70:                                               ; preds = %65, %57
  %71 = phi i64 [ %66, %65 ], [ 0, %57 ]
  %72 = phi %"class.blink::Member.318"* [ %69, %65 ], [ null, %57 ]
  %73 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %72, i64 %48
  %74 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %72, i64 %71
  %75 = ptrtoint %"class.blink::Member.318"* %74 to i64
  %76 = bitcast %"class.blink::Member.318"* %33 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::Member.318"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %73, i64 1
  %80 = ptrtoint %"class.blink::Member.318"* %79 to i64
  %81 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %16, align 8
  %82 = ptrtoint %"class.blink::Member.318"* %81 to i64
  %83 = load %"class.blink::Member.318"*, %"class.blink::Member.318"** %11, align 8
  %84 = icmp eq %"class.blink::Member.318"* %83, %81
  br i1 %84, label %258, label %85

85:                                               ; preds = %70
  %86 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  %87 = ptrtoint %"class.blink::Member.318"* %86 to i64
  %88 = sub i64 %87, %82
  %89 = lshr i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = icmp ult i64 %90, 4
  br i1 %91, label %185, label %92

92:                                               ; preds = %85
  %93 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %72, i64 -1
  %94 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  %95 = ptrtoint %"class.blink::Member.318"* %94 to i64
  %96 = sub i64 %95, %82
  %97 = lshr i64 %96, 3
  %98 = sub nsw i64 %48, %97
  %99 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %93, i64 %98
  %100 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  %101 = sub nsw i64 0, %97
  %102 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %100, i64 %101
  %103 = icmp ult %"class.blink::Member.318"* %99, %83
  %104 = icmp ult %"class.blink::Member.318"* %102, %73
  %105 = and i1 %103, %104
  br i1 %105, label %185, label %106

106:                                              ; preds = %92
  %107 = and i64 %90, 4611686018427387900
  %108 = sub nsw i64 0, %107
  %109 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %73, i64 %108
  %110 = sub nsw i64 0, %107
  %111 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 %110
  %112 = add nsw i64 %107, -4
  %113 = lshr exact i64 %112, 2
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %112, 0
  br i1 %116, label %161, label %117

117:                                              ; preds = %106
  %118 = sub nuw nsw i64 %114, %115
  %119 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %73, i64 -1
  %120 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  %121 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %73, i64 -1
  %122 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  br label %123

123:                                              ; preds = %123, %117
  %124 = phi i64 [ 0, %117 ], [ %158, %123 ]
  %125 = phi i64 [ %118, %117 ], [ %159, %123 ]
  %126 = sub i64 0, %124
  %127 = sub i64 0, %124
  %128 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %119, i64 %126
  %129 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %120, i64 %127
  %130 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %129, i64 -1
  %131 = bitcast %"class.blink::Member.318"* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !27
  %133 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %129, i64 -2
  %134 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %133, i64 -1
  %135 = bitcast %"class.blink::Member.318"* %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !27
  %137 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %128, i64 -1
  %138 = bitcast %"class.blink::Member.318"* %137 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %138, align 8, !alias.scope !30, !noalias !27
  %139 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %128, i64 -2
  %140 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %139, i64 -1
  %141 = bitcast %"class.blink::Member.318"* %140 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %141, align 8, !alias.scope !30, !noalias !27
  %142 = sub nuw nsw i64 -4, %124
  %143 = sub nuw nsw i64 -4, %124
  %144 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %121, i64 %142
  %145 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %122, i64 %143
  %146 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %145, i64 -1
  %147 = bitcast %"class.blink::Member.318"* %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !27
  %149 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %145, i64 -2
  %150 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %149, i64 -1
  %151 = bitcast %"class.blink::Member.318"* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !27
  %153 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %144, i64 -1
  %154 = bitcast %"class.blink::Member.318"* %153 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %154, align 8, !alias.scope !30, !noalias !27
  %155 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %144, i64 -2
  %156 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %155, i64 -1
  %157 = bitcast %"class.blink::Member.318"* %156 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %157, align 8, !alias.scope !30, !noalias !27
  %158 = add i64 %124, 8
  %159 = add i64 %125, -2
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %123, !llvm.loop !32

161:                                              ; preds = %123, %106
  %162 = phi i64 [ 0, %106 ], [ %158, %123 ]
  %163 = icmp eq i64 %115, 0
  br i1 %163, label %183, label %164

164:                                              ; preds = %161
  %165 = sub i64 0, %162
  %166 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %73, i64 -1
  %167 = sub i64 0, %162
  %168 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %83, i64 -1
  %169 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %166, i64 %165
  %170 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %168, i64 %167
  %171 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %170, i64 -1
  %172 = bitcast %"class.blink::Member.318"* %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8, !alias.scope !27
  %174 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %170, i64 -2
  %175 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %174, i64 -1
  %176 = bitcast %"class.blink::Member.318"* %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !27
  %178 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %169, i64 -1
  %179 = bitcast %"class.blink::Member.318"* %178 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %179, align 8, !alias.scope !30, !noalias !27
  %180 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %169, i64 -2
  %181 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %180, i64 -1
  %182 = bitcast %"class.blink::Member.318"* %181 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %182, align 8, !alias.scope !30, !noalias !27
  br label %183

183:                                              ; preds = %161, %164
  %184 = icmp eq i64 %90, %107
  br i1 %184, label %255, label %185

185:                                              ; preds = %183, %92, %85
  %186 = phi %"class.blink::Member.318"* [ %73, %92 ], [ %73, %85 ], [ %109, %183 ]
  %187 = phi %"class.blink::Member.318"* [ %83, %92 ], [ %83, %85 ], [ %111, %183 ]
  %188 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %187, i64 -1
  %189 = ptrtoint %"class.blink::Member.318"* %188 to i64
  %190 = sub i64 %189, %82
  %191 = lshr i64 %190, 3
  %192 = add nuw nsw i64 %191, 1
  %193 = and i64 %192, 7
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %206, label %195

195:                                              ; preds = %185, %195
  %196 = phi %"class.blink::Member.318"* [ %199, %195 ], [ %186, %185 ]
  %197 = phi %"class.blink::Member.318"* [ %200, %195 ], [ %187, %185 ]
  %198 = phi i64 [ %204, %195 ], [ %193, %185 ]
  %199 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %196, i64 -1
  %200 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %197, i64 -1
  %201 = bitcast %"class.blink::Member.318"* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.blink::Member.318"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = add i64 %198, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %195, !llvm.loop !33

206:                                              ; preds = %195, %185
  %207 = phi %"class.blink::Member.318"* [ undef, %185 ], [ %199, %195 ]
  %208 = phi %"class.blink::Member.318"* [ %186, %185 ], [ %199, %195 ]
  %209 = phi %"class.blink::Member.318"* [ %187, %185 ], [ %200, %195 ]
  %210 = icmp ult i64 %190, 56
  br i1 %210, label %255, label %211

211:                                              ; preds = %206, %211
  %212 = phi %"class.blink::Member.318"* [ %249, %211 ], [ %208, %206 ]
  %213 = phi %"class.blink::Member.318"* [ %250, %211 ], [ %209, %206 ]
  %214 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -1
  %215 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -1
  %216 = bitcast %"class.blink::Member.318"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.blink::Member.318"* %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -2
  %220 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -2
  %221 = bitcast %"class.blink::Member.318"* %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member.318"* %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -3
  %225 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -3
  %226 = bitcast %"class.blink::Member.318"* %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.blink::Member.318"* %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -4
  %230 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -4
  %231 = bitcast %"class.blink::Member.318"* %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.blink::Member.318"* %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -5
  %235 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -5
  %236 = bitcast %"class.blink::Member.318"* %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.blink::Member.318"* %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -6
  %240 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -6
  %241 = bitcast %"class.blink::Member.318"* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.blink::Member.318"* %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -7
  %245 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -7
  %246 = bitcast %"class.blink::Member.318"* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.blink::Member.318"* %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %212, i64 -8
  %250 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %213, i64 -8
  %251 = bitcast %"class.blink::Member.318"* %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.blink::Member.318"* %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = icmp eq %"class.blink::Member.318"* %250, %81
  br i1 %254, label %255, label %211, !llvm.loop !34

255:                                              ; preds = %206, %211, %183
  %256 = phi %"class.blink::Member.318"* [ %109, %183 ], [ %207, %206 ], [ %249, %211 ]
  %257 = load i64, i64* %14, align 8
  br label %258

258:                                              ; preds = %70, %255
  %259 = phi %"class.blink::Member.318"* [ %256, %255 ], [ %73, %70 ]
  %260 = phi i64 [ %257, %255 ], [ %82, %70 ]
  %261 = ptrtoint %"class.blink::Member.318"* %259 to i64
  store i64 %261, i64* %14, align 8
  store i64 %80, i64* %13, align 8
  store i64 %75, i64* %15, align 8
  %262 = icmp eq i64 %260, 0
  br i1 %262, label %265, label %263

263:                                              ; preds = %258
  %264 = inttoptr i64 %260 to i8*
  tail call void @_ZdlPv(i8* %264) #16
  br label %265

265:                                              ; preds = %38, %258, %263
  br i1 %17, label %333, label %266

266:                                              ; preds = %265
  %267 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %18, align 8
  %268 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %19, align 8
  %269 = icmp eq %"class.gfx::Rect"* %267, %268
  %270 = ptrtoint %"class.gfx::Rect"* %268 to i64
  br i1 %269, label %276, label %271

271:                                              ; preds = %266
  %272 = bitcast %"class.gfx::Rect"* %267 to i8*
  %273 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %272, i8* align 4 %273, i64 16, i1 false) #15
  %274 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %267, i64 1
  %275 = ptrtoint %"class.gfx::Rect"* %274 to i64
  store i64 %275, i64* %20, align 8
  br label %333

276:                                              ; preds = %266
  %277 = ptrtoint %"class.gfx::Rect"* %267 to i64
  %278 = load i64, i64* %21, align 8
  %279 = sub i64 %277, %278
  %280 = ashr exact i64 %279, 4
  %281 = add nsw i64 %280, 1
  %282 = icmp ugt i64 %281, 1152921504606846975
  br i1 %282, label %283, label %285

283:                                              ; preds = %276
  %284 = bitcast %"class.std::__1::vector.824"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %284) #17
  unreachable

285:                                              ; preds = %276
  %286 = sub i64 %270, %278
  %287 = ashr exact i64 %286, 4
  %288 = icmp ult i64 %287, 576460752303423487
  br i1 %288, label %289, label %297

289:                                              ; preds = %285
  %290 = ashr exact i64 %286, 3
  %291 = icmp ult i64 %290, %281
  %292 = select i1 %291, i64 %281, i64 %290
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %302, label %294

294:                                              ; preds = %289
  %295 = icmp ugt i64 %292, 1152921504606846975
  br i1 %295, label %296, label %297

296:                                              ; preds = %294
  tail call void @abort() #17
  unreachable

297:                                              ; preds = %294, %285
  %298 = phi i64 [ %292, %294 ], [ 1152921504606846975, %285 ]
  %299 = shl i64 %298, 4
  %300 = tail call i8* @_Znwm(i64 %299) #16
  %301 = bitcast i8* %300 to %"class.gfx::Rect"*
  br label %302

302:                                              ; preds = %297, %289
  %303 = phi i64 [ %298, %297 ], [ 0, %289 ]
  %304 = phi %"class.gfx::Rect"* [ %301, %297 ], [ null, %289 ]
  %305 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %304, i64 %280
  %306 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %304, i64 %303
  %307 = ptrtoint %"class.gfx::Rect"* %306 to i64
  %308 = bitcast %"class.gfx::Rect"* %305 to i8*
  %309 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %308, i8* align 4 %309, i64 16, i1 false) #15
  %310 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %305, i64 1
  %311 = ptrtoint %"class.gfx::Rect"* %310 to i64
  %312 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %23, align 8
  %313 = load i64, i64* %20, align 8
  %314 = ptrtoint %"class.gfx::Rect"* %312 to i64
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 4
  %317 = sub nsw i64 0, %316
  %318 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %305, i64 %317
  %319 = ptrtoint %"class.gfx::Rect"* %318 to i64
  %320 = icmp sgt i64 %315, 0
  br i1 %320, label %321, label %325

321:                                              ; preds = %302
  %322 = bitcast %"class.gfx::Rect"* %318 to i8*
  %323 = bitcast %"class.gfx::Rect"* %312 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %323, i64 %315, i1 false) #15
  %324 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %23, align 8
  br label %325

325:                                              ; preds = %321, %302
  %326 = phi %"class.gfx::Rect"* [ %312, %302 ], [ %324, %321 ]
  store i64 %319, i64* %21, align 8
  store i64 %311, i64* %20, align 8
  store i64 %307, i64* %22, align 8
  %327 = icmp eq %"class.gfx::Rect"* %326, null
  br i1 %327, label %333, label %328

328:                                              ; preds = %325
  %329 = bitcast %"class.gfx::Rect"* %326 to i8*
  tail call void @_ZdlPv(i8* %329) #16
  br label %333

330:                                              ; preds = %29
  %331 = getelementptr inbounds %"struct.cc::RTree<blink::Member<blink::Node> >::Node", %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %1, i64 0, i32 2, i64 %26, i32 0
  %332 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %331, align 8
  tail call void @_ZNK2cc5RTreeIN5blink6MemberINS1_4NodeEEEE15SearchRecursiveEPNS5_4NodeIS4_EERKN3gfx4RectEPNSt3__16vectorIS4_NSD_9allocatorIS4_EEEEPNSE_ISA_NSF_ISA_EEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %332, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.std::__1::vector.3096"* %3, %"class.std::__1::vector.824"* %4)
  br label %333

333:                                              ; preds = %328, %325, %271, %265, %25, %330
  %334 = add nuw nsw i64 %26, 1
  %335 = load i16, i16* %6, align 8
  %336 = zext i16 %335 to i64
  %337 = icmp ult i64 %334, %336
  br i1 %337, label %25, label %24
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3090"*, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::Color"* @_ZN3WTF6VectorIN5blink5ColorELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3090"* %0, i32 %5, %"class.blink::Color"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.3090", %"class.WTF::Vector.3090"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Color"*, %"class.blink::Color"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 %10, i32 0
  %13 = load i32, i32* %11, align 4
  store i32 %13, i32* %12, align 4
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"*, %"class.blink::Member.318"*, %class.anon.3103* dereferenceable(8), i64, %"class.blink::Member.318"*, i64) unnamed_addr #0 {
  %7 = alloca %"class.blink::PaintLayer"*, align 8
  %8 = alloca %"class.blink::PaintLayer"*, align 8
  %9 = alloca %"class.blink::PaintLayer"*, align 8
  %10 = alloca %"class.blink::PaintLayer"*, align 8
  %11 = alloca %"class.blink::PaintLayer"*, align 8
  %12 = alloca %"class.blink::PaintLayer"*, align 8
  switch i64 %3, label %114 [
    i64 0, label %390
    i64 1, label %390
    i64 2, label %13
  ]

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %1, i64 -1
  %15 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 0, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 6, i32 0, i32 0
  br i1 %22, label %28, label %24

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::NodeData"** %23 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %13
  %29 = bitcast %"class.blink::NodeData"** %23 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 6, i32 0, i32 0
  br i1 %38, label %44, label %40

40:                                               ; preds = %30
  %41 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %30
  %45 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %"class.blink::NodeRenderingData"** [ %43, %40 ], [ %45, %44 ]
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 1
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %53, align 8
  %55 = bitcast %"class.blink::PaintLayer"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #15
  %56 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %34) #15
  store %"class.blink::PaintLayer"* %56, %"class.blink::PaintLayer"** %11, align 8
  %57 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %54, i64 0, i32 0
  %58 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %57, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %11) #15
  %59 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %58, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #15
  %60 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %51, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %62, i64 0, i32 0, i32 0
  %64 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %62, i64 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %64, i64 %67
  %69 = icmp eq %"struct.WTF::KeyValuePair.3022"* %59, %68
  br i1 %69, label %73, label %70

70:                                               ; preds = %46
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %59, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  br label %73

73:                                               ; preds = %70, %46
  %74 = phi i32 [ %72, %70 ], [ 0, %46 ]
  %75 = bitcast %"class.blink::PaintLayer"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #15
  %76 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %50) #15
  store %"class.blink::PaintLayer"* %76, %"class.blink::PaintLayer"** %12, align 8
  %77 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %62, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %77, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %12) #15
  %79 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %78, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #15
  %80 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %51, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %82, i64 0, i32 0, i32 0
  %84 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %83, align 8
  %85 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %82, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %84, i64 %87
  %89 = icmp eq %"struct.WTF::KeyValuePair.3022"* %79, %88
  br i1 %89, label %93, label %90

90:                                               ; preds = %73
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %79, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  br label %93

93:                                               ; preds = %73, %90
  %94 = phi i32 [ %92, %90 ], [ 0, %73 ]
  %95 = icmp slt i32 %74, %94
  br i1 %95, label %96, label %390

96:                                               ; preds = %93
  %97 = bitcast %"class.blink::Member.318"* %0 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::Member.318"* %14 to i64*
  %100 = load i64, i64* %99, align 8
  store atomic i64 %100, i64* %97 monotonic, align 8
  store atomic i64 %98, i64* %99 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.blink::Member.318"* %0 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #15
  br label %107

107:                                              ; preds = %103, %96
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %390, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::Member.318"* %14 to i8**
  %112 = load i8*, i8** %111, align 8
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #15
  br label %390

114:                                              ; preds = %6
  %115 = icmp slt i64 %3, 1
  br i1 %115, label %116, label %232

116:                                              ; preds = %114
  %117 = icmp eq %"class.blink::Member.318"* %0, %1
  br i1 %117, label %390, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 1
  %120 = icmp eq %"class.blink::Member.318"* %119, %1
  br i1 %120, label %390, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %123 = bitcast %"class.blink::PaintLayer"** %9 to i8*
  %124 = bitcast %"class.blink::PaintLayer"** %10 to i8*
  br label %125

125:                                              ; preds = %218, %121
  %126 = phi %"class.blink::Member.318"* [ %119, %121 ], [ %219, %218 ]
  %127 = bitcast %"class.blink::Member.318"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq %"class.blink::Member.318"* %126, %0
  br i1 %129, label %210, label %130

130:                                              ; preds = %125
  %131 = inttoptr i64 %128 to %"class.blink::Node"*
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 1
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 6, i32 0, i32 0
  %134 = bitcast %"class.blink::NodeData"** %133 to %"class.blink::NodeRareData"**
  %135 = bitcast %"class.blink::NodeData"** %133 to %"class.blink::NodeRenderingData"**
  br label %136

136:                                              ; preds = %230, %130
  %137 = phi %"class.blink::Member.318"* [ %126, %130 ], [ %138, %230 ]
  %138 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %137, i64 -1
  %139 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = load i32, i32* %132, align 8
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %136
  %145 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %134, align 8
  %146 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %145, i64 0, i32 1, i32 0, i32 0
  br label %147

147:                                              ; preds = %144, %136
  %148 = phi %"class.blink::NodeRenderingData"** [ %146, %144 ], [ %135, %136 ]
  %149 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %149, i64 0, i32 1
  %151 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %140, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %140, i64 0, i32 6, i32 0, i32 0
  br i1 %155, label %161, label %157

157:                                              ; preds = %147
  %158 = bitcast %"class.blink::NodeData"** %156 to %"class.blink::NodeRareData"**
  %159 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %159, i64 0, i32 1, i32 0, i32 0
  br label %163

161:                                              ; preds = %147
  %162 = bitcast %"class.blink::NodeData"** %156 to %"class.blink::NodeRenderingData"**
  br label %163

163:                                              ; preds = %161, %157
  %164 = phi %"class.blink::NodeRenderingData"** [ %160, %157 ], [ %162, %161 ]
  %165 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %165, i64 0, i32 1
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %122, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %169, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #15
  %171 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %151) #15
  store %"class.blink::PaintLayer"* %171, %"class.blink::PaintLayer"** %9, align 8
  %172 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %170, i64 0, i32 0
  %173 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %172, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %9) #15
  %174 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %173, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #15
  %175 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %122, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %176, align 8
  %178 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %177, i64 0, i32 0, i32 0
  %179 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %178, align 8
  %180 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %177, i64 0, i32 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %179, i64 %182
  %184 = icmp eq %"struct.WTF::KeyValuePair.3022"* %174, %183
  br i1 %184, label %188, label %185

185:                                              ; preds = %163
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %174, i64 0, i32 1
  %187 = load i32, i32* %186, align 8
  br label %188

188:                                              ; preds = %185, %163
  %189 = phi i32 [ %187, %185 ], [ 0, %163 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #15
  %190 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %167) #15
  store %"class.blink::PaintLayer"* %190, %"class.blink::PaintLayer"** %10, align 8
  %191 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %177, i64 0, i32 0
  %192 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %191, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %10) #15
  %193 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %192, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #15
  %194 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %122, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %195, align 8
  %197 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %196, i64 0, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %197, align 8
  %199 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %196, i64 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %198, i64 %201
  %203 = icmp eq %"struct.WTF::KeyValuePair.3022"* %193, %202
  br i1 %203, label %207, label %204

204:                                              ; preds = %188
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %193, i64 0, i32 1
  %206 = load i32, i32* %205, align 8
  br label %207

207:                                              ; preds = %204, %188
  %208 = phi i32 [ %206, %204 ], [ 0, %188 ]
  %209 = icmp slt i32 %189, %208
  br i1 %209, label %221, label %210

210:                                              ; preds = %230, %207, %125
  %211 = phi %"class.blink::Member.318"* [ %0, %125 ], [ %137, %207 ], [ %0, %230 ]
  %212 = bitcast %"class.blink::Member.318"* %211 to i64*
  store atomic i64 %128, i64* %212 monotonic, align 8
  %213 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %210
  %216 = inttoptr i64 %128 to i8*
  %217 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %216) #15
  br label %218

218:                                              ; preds = %215, %210
  %219 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %126, i64 1
  %220 = icmp eq %"class.blink::Member.318"* %219, %1
  br i1 %220, label %390, label %125

221:                                              ; preds = %207
  %222 = bitcast %"class.blink::Member.318"* %138 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.blink::Member.318"* %137 to i64*
  store atomic i64 %223, i64* %224 monotonic, align 8
  %225 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %221
  %228 = inttoptr i64 %223 to i8*
  %229 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %228) #15
  br label %230

230:                                              ; preds = %227, %221
  %231 = icmp eq %"class.blink::Member.318"* %138, %0
  br i1 %231, label %210, label %136

232:                                              ; preds = %114
  %233 = lshr i64 %3, 1
  %234 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 %233
  %235 = icmp sgt i64 %3, %5
  br i1 %235, label %388, label %236

236:                                              ; preds = %232
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE"(%"class.blink::Member.318"* %0, %"class.blink::Member.318"* %234, %class.anon.3103* dereferenceable(8) %2, i64 %233, %"class.blink::Member.318"* %4)
  %237 = sub nsw i64 %3, %233
  %238 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %4, i64 %233
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE"(%"class.blink::Member.318"* %234, %"class.blink::Member.318"* %1, %class.anon.3103* dereferenceable(8) %2, i64 %237, %"class.blink::Member.318"* %238)
  %239 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %4, i64 %3
  %240 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %241 = bitcast %"class.blink::PaintLayer"** %7 to i8*
  %242 = bitcast %"class.blink::PaintLayer"** %8 to i8*
  br label %245

243:                                              ; preds = %368
  %244 = icmp eq %"class.blink::Member.318"* %369, %239
  br i1 %244, label %390, label %373

245:                                              ; preds = %368, %236
  %246 = phi %"class.blink::Member.318"* [ %4, %236 ], [ %370, %368 ]
  %247 = phi %"class.blink::Member.318"* [ %0, %236 ], [ %371, %368 ]
  %248 = phi %"class.blink::Member.318"* [ %238, %236 ], [ %369, %368 ]
  %249 = icmp eq %"class.blink::Member.318"* %248, %239
  br i1 %249, label %250, label %267

250:                                              ; preds = %245
  %251 = icmp eq %"class.blink::Member.318"* %246, %238
  br i1 %251, label %390, label %252

252:                                              ; preds = %250, %263
  %253 = phi %"class.blink::Member.318"* [ %264, %263 ], [ %246, %250 ]
  %254 = phi %"class.blink::Member.318"* [ %265, %263 ], [ %247, %250 ]
  %255 = bitcast %"class.blink::Member.318"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.blink::Member.318"* %254 to i64*
  store atomic i64 %256, i64* %257 monotonic, align 8
  %258 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %252
  %261 = inttoptr i64 %256 to i8*
  %262 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %261) #15
  br label %263

263:                                              ; preds = %260, %252
  %264 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %253, i64 1
  %265 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %254, i64 1
  %266 = icmp eq %"class.blink::Member.318"* %264, %238
  br i1 %266, label %390, label %252

267:                                              ; preds = %245
  %268 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %248, i64 0, i32 0, i32 0
  %269 = load %"class.blink::Node"*, %"class.blink::Node"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %246, i64 0, i32 0, i32 0
  %271 = load %"class.blink::Node"*, %"class.blink::Node"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %269, i64 0, i32 1
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %269, i64 0, i32 6, i32 0, i32 0
  br i1 %275, label %281, label %277

277:                                              ; preds = %267
  %278 = bitcast %"class.blink::NodeData"** %276 to %"class.blink::NodeRareData"**
  %279 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %279, i64 0, i32 1, i32 0, i32 0
  br label %283

281:                                              ; preds = %267
  %282 = bitcast %"class.blink::NodeData"** %276 to %"class.blink::NodeRenderingData"**
  br label %283

283:                                              ; preds = %281, %277
  %284 = phi %"class.blink::NodeRenderingData"** [ %280, %277 ], [ %282, %281 ]
  %285 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %285, i64 0, i32 1
  %287 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 1
  %289 = load i32, i32* %288, align 8
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 6, i32 0, i32 0
  br i1 %291, label %297, label %293

293:                                              ; preds = %283
  %294 = bitcast %"class.blink::NodeData"** %292 to %"class.blink::NodeRareData"**
  %295 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %295, i64 0, i32 1, i32 0, i32 0
  br label %299

297:                                              ; preds = %283
  %298 = bitcast %"class.blink::NodeData"** %292 to %"class.blink::NodeRenderingData"**
  br label %299

299:                                              ; preds = %297, %293
  %300 = phi %"class.blink::NodeRenderingData"** [ %296, %293 ], [ %298, %297 ]
  %301 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %301, i64 0, i32 1
  %303 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %302, align 8
  %304 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %240, align 8
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %304, i64 0, i32 0, i32 0, i32 0
  %306 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %305, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #15
  %307 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %287) #15
  store %"class.blink::PaintLayer"* %307, %"class.blink::PaintLayer"** %7, align 8
  %308 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %306, i64 0, i32 0
  %309 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %308, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %7) #15
  %310 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %309, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #15
  %311 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %240, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %312, align 8
  %314 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %313, i64 0, i32 0, i32 0
  %315 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %314, align 8
  %316 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %313, i64 0, i32 0, i32 1
  %317 = load i32, i32* %316, align 8
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %315, i64 %318
  %320 = icmp eq %"struct.WTF::KeyValuePair.3022"* %310, %319
  br i1 %320, label %324, label %321

321:                                              ; preds = %299
  %322 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %310, i64 0, i32 1
  %323 = load i32, i32* %322, align 8
  br label %324

324:                                              ; preds = %321, %299
  %325 = phi i32 [ %323, %321 ], [ 0, %299 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #15
  %326 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %303) #15
  store %"class.blink::PaintLayer"* %326, %"class.blink::PaintLayer"** %8, align 8
  %327 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %313, i64 0, i32 0
  %328 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %327, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %8) #15
  %329 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %328, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #15
  %330 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %240, align 8
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %330, i64 0, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %331, align 8
  %333 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %332, i64 0, i32 0, i32 0
  %334 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %333, align 8
  %335 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %332, i64 0, i32 0, i32 1
  %336 = load i32, i32* %335, align 8
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %334, i64 %337
  %339 = icmp eq %"struct.WTF::KeyValuePair.3022"* %329, %338
  br i1 %339, label %343, label %340

340:                                              ; preds = %324
  %341 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %329, i64 0, i32 1
  %342 = load i32, i32* %341, align 8
  br label %343

343:                                              ; preds = %340, %324
  %344 = phi i32 [ %342, %340 ], [ 0, %324 ]
  %345 = icmp slt i32 %325, %344
  br i1 %345, label %346, label %357

346:                                              ; preds = %343
  %347 = bitcast %"class.blink::Member.318"* %248 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.blink::Member.318"* %247 to i64*
  store atomic i64 %348, i64* %349 monotonic, align 8
  %350 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %355, label %352

352:                                              ; preds = %346
  %353 = inttoptr i64 %348 to i8*
  %354 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %353) #15
  br label %355

355:                                              ; preds = %352, %346
  %356 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %248, i64 1
  br label %368

357:                                              ; preds = %343
  %358 = bitcast %"class.blink::Member.318"* %246 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.blink::Member.318"* %247 to i64*
  store atomic i64 %359, i64* %360 monotonic, align 8
  %361 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %366, label %363

363:                                              ; preds = %357
  %364 = inttoptr i64 %359 to i8*
  %365 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %364) #15
  br label %366

366:                                              ; preds = %363, %357
  %367 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %246, i64 1
  br label %368

368:                                              ; preds = %366, %355
  %369 = phi %"class.blink::Member.318"* [ %356, %355 ], [ %248, %366 ]
  %370 = phi %"class.blink::Member.318"* [ %246, %355 ], [ %367, %366 ]
  %371 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %247, i64 1
  %372 = icmp eq %"class.blink::Member.318"* %370, %238
  br i1 %372, label %243, label %245

373:                                              ; preds = %243, %384
  %374 = phi %"class.blink::Member.318"* [ %386, %384 ], [ %371, %243 ]
  %375 = phi %"class.blink::Member.318"* [ %385, %384 ], [ %369, %243 ]
  %376 = bitcast %"class.blink::Member.318"* %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = bitcast %"class.blink::Member.318"* %374 to i64*
  store atomic i64 %377, i64* %378 monotonic, align 8
  %379 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %384, label %381

381:                                              ; preds = %373
  %382 = inttoptr i64 %377 to i8*
  %383 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %382) #15
  br label %384

384:                                              ; preds = %381, %373
  %385 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %375, i64 1
  %386 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %374, i64 1
  %387 = icmp eq %"class.blink::Member.318"* %385, %239
  br i1 %387, label %390, label %373

388:                                              ; preds = %232
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %0, %"class.blink::Member.318"* %234, %class.anon.3103* dereferenceable(8) %2, i64 %233, %"class.blink::Member.318"* %4, i64 %5)
  %389 = sub nsw i64 %3, %233
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %234, %"class.blink::Member.318"* %1, %class.anon.3103* dereferenceable(8) %2, i64 %389, %"class.blink::Member.318"* %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl"(%"class.blink::Member.318"* %0, %"class.blink::Member.318"* %234, %"class.blink::Member.318"* %1, %class.anon.3103* dereferenceable(8) %2, i64 %233, i64 %389, %"class.blink::Member.318"* %4, i64 %5)
  br label %390

390:                                              ; preds = %384, %263, %218, %250, %243, %118, %116, %110, %107, %388, %93, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE"(%"class.blink::Member.318"*, %"class.blink::Member.318"*, %class.anon.3103* dereferenceable(8), i64, %"class.blink::Member.318"*) unnamed_addr #0 {
  %6 = alloca %"class.blink::PaintLayer"*, align 8
  %7 = alloca %"class.blink::PaintLayer"*, align 8
  %8 = alloca %"class.blink::PaintLayer"*, align 8
  %9 = alloca %"class.blink::PaintLayer"*, align 8
  %10 = alloca %"class.blink::PaintLayer"*, align 8
  %11 = alloca %"class.blink::PaintLayer"*, align 8
  %12 = alloca %"class.blink::PaintLayer"*, align 8
  %13 = alloca %"class.blink::PaintLayer"*, align 8
  switch i64 %3, label %117 [
    i64 0, label %787
    i64 1, label %14
    i64 2, label %18
  ]

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::Member.318"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.318"* %4 to i64*
  store i64 %16, i64* %17, align 8
  br label %787

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %1, i64 -1
  %20 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 6, i32 0, i32 0
  br i1 %27, label %33, label %29

29:                                               ; preds = %18
  %30 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRareData"**
  %31 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %31, i64 0, i32 1, i32 0, i32 0
  br label %35

33:                                               ; preds = %18
  %34 = bitcast %"class.blink::NodeData"** %28 to %"class.blink::NodeRenderingData"**
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi %"class.blink::NodeRenderingData"** [ %32, %29 ], [ %34, %33 ]
  %37 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %37, i64 0, i32 1
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 6, i32 0, i32 0
  br i1 %43, label %49, label %45

45:                                               ; preds = %35
  %46 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRareData"**
  %47 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %47, i64 0, i32 1, i32 0, i32 0
  br label %51

49:                                               ; preds = %35
  %50 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRenderingData"**
  br label %51

51:                                               ; preds = %49, %45
  %52 = phi %"class.blink::NodeRenderingData"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %58, align 8
  %60 = bitcast %"class.blink::PaintLayer"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #15
  %61 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %39) #15
  store %"class.blink::PaintLayer"* %61, %"class.blink::PaintLayer"** %12, align 8
  %62 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %59, i64 0, i32 0
  %63 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %62, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %12) #15
  %64 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %63, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #15
  %65 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %56, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %67, i64 0, i32 0, i32 0
  %69 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %67, i64 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %69, i64 %72
  %74 = icmp eq %"struct.WTF::KeyValuePair.3022"* %64, %73
  br i1 %74, label %78, label %75

75:                                               ; preds = %51
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %64, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %75, %51
  %79 = phi i32 [ %77, %75 ], [ 0, %51 ]
  %80 = bitcast %"class.blink::PaintLayer"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #15
  %81 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %55) #15
  store %"class.blink::PaintLayer"* %81, %"class.blink::PaintLayer"** %13, align 8
  %82 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %67, i64 0, i32 0
  %83 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %82, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %13) #15
  %84 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %83, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #15
  %85 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %56, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %86, align 8
  %88 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %87, i64 0, i32 0, i32 0
  %89 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %88, align 8
  %90 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %87, i64 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %89, i64 %92
  %94 = icmp eq %"struct.WTF::KeyValuePair.3022"* %84, %93
  br i1 %94, label %98, label %95

95:                                               ; preds = %78
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %84, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  br label %98

98:                                               ; preds = %78, %95
  %99 = phi i32 [ %97, %95 ], [ 0, %78 ]
  %100 = icmp slt i32 %79, %99
  br i1 %100, label %101, label %109

101:                                              ; preds = %98
  %102 = bitcast %"class.blink::Member.318"* %19 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.blink::Member.318"* %4 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %4, i64 1
  %106 = bitcast %"class.blink::Member.318"* %0 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::Member.318"* %105 to i64*
  store i64 %107, i64* %108, align 8
  br label %787

109:                                              ; preds = %98
  %110 = bitcast %"class.blink::Member.318"* %0 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.blink::Member.318"* %4 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %4, i64 1
  %114 = bitcast %"class.blink::Member.318"* %19 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member.318"* %113 to i64*
  store i64 %115, i64* %116, align 8
  br label %787

117:                                              ; preds = %5
  %118 = icmp slt i64 %3, 9
  br i1 %118, label %119, label %329

119:                                              ; preds = %117
  %120 = icmp eq %"class.blink::Member.318"* %0, %1
  br i1 %120, label %787, label %121

121:                                              ; preds = %119
  %122 = bitcast %"class.blink::Member.318"* %0 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.blink::Member.318"* %4 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 1
  %126 = icmp eq %"class.blink::Member.318"* %125, %1
  br i1 %126, label %787, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %129 = bitcast %"class.blink::PaintLayer"** %8 to i8*
  %130 = bitcast %"class.blink::PaintLayer"** %9 to i8*
  %131 = bitcast %"class.blink::PaintLayer"** %10 to i8*
  %132 = bitcast %"class.blink::PaintLayer"** %11 to i8*
  br label %133

133:                                              ; preds = %326, %127
  %134 = phi %"class.blink::Member.318"* [ %125, %127 ], [ %327, %326 ]
  %135 = phi %"class.blink::Member.318"* [ %4, %127 ], [ %136, %326 ]
  %136 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %135, i64 1
  %137 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %134, i64 0, i32 0, i32 0
  %138 = load %"class.blink::Node"*, %"class.blink::Node"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %135, i64 0, i32 0, i32 0
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 6, i32 0, i32 0
  br i1 %144, label %150, label %146

146:                                              ; preds = %133
  %147 = bitcast %"class.blink::NodeData"** %145 to %"class.blink::NodeRareData"**
  %148 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %148, i64 0, i32 1, i32 0, i32 0
  br label %152

150:                                              ; preds = %133
  %151 = bitcast %"class.blink::NodeData"** %145 to %"class.blink::NodeRenderingData"**
  br label %152

152:                                              ; preds = %150, %146
  %153 = phi %"class.blink::NodeRenderingData"** [ %149, %146 ], [ %151, %150 ]
  %154 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %154, i64 0, i32 1
  %156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %140, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %140, i64 0, i32 6, i32 0, i32 0
  br i1 %160, label %166, label %162

162:                                              ; preds = %152
  %163 = bitcast %"class.blink::NodeData"** %161 to %"class.blink::NodeRareData"**
  %164 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %164, i64 0, i32 1, i32 0, i32 0
  br label %168

166:                                              ; preds = %152
  %167 = bitcast %"class.blink::NodeData"** %161 to %"class.blink::NodeRenderingData"**
  br label %168

168:                                              ; preds = %166, %162
  %169 = phi %"class.blink::NodeRenderingData"** [ %165, %162 ], [ %167, %166 ]
  %170 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %170, i64 0, i32 1
  %172 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %171, align 8
  %173 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %174, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #15
  %176 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %156) #15
  store %"class.blink::PaintLayer"* %176, %"class.blink::PaintLayer"** %8, align 8
  %177 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %175, i64 0, i32 0
  %178 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %177, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %8) #15
  %179 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %178, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #15
  %180 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %180, i64 0, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %181, align 8
  %183 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %182, i64 0, i32 0, i32 0
  %184 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %183, align 8
  %185 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %182, i64 0, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %184, i64 %187
  %189 = icmp eq %"struct.WTF::KeyValuePair.3022"* %179, %188
  br i1 %189, label %193, label %190

190:                                              ; preds = %168
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %179, i64 0, i32 1
  %192 = load i32, i32* %191, align 8
  br label %193

193:                                              ; preds = %190, %168
  %194 = phi i32 [ %192, %190 ], [ 0, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #15
  %195 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %172) #15
  store %"class.blink::PaintLayer"* %195, %"class.blink::PaintLayer"** %9, align 8
  %196 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %182, i64 0, i32 0
  %197 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %196, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %9) #15
  %198 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %197, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #15
  %199 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %199, i64 0, i32 0, i32 0, i32 0
  %201 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %200, align 8
  %202 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %201, i64 0, i32 0, i32 0
  %203 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %202, align 8
  %204 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %201, i64 0, i32 0, i32 1
  %205 = load i32, i32* %204, align 8
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %203, i64 %206
  %208 = icmp eq %"struct.WTF::KeyValuePair.3022"* %198, %207
  br i1 %208, label %212, label %209

209:                                              ; preds = %193
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %198, i64 0, i32 1
  %211 = load i32, i32* %210, align 8
  br label %212

212:                                              ; preds = %209, %193
  %213 = phi i32 [ %211, %209 ], [ 0, %193 ]
  %214 = icmp slt i32 %194, %213
  br i1 %214, label %215, label %322

215:                                              ; preds = %212
  %216 = bitcast %"class.blink::Member.318"* %135 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.blink::Member.318"* %136 to i64*
  store i64 %217, i64* %218, align 8
  %219 = icmp eq %"class.blink::Member.318"* %135, %4
  br i1 %219, label %313, label %220

220:                                              ; preds = %215, %311
  %221 = phi %"class.blink::Member.318"* [ %223, %311 ], [ %135, %215 ]
  %222 = load %"class.blink::Node"*, %"class.blink::Node"** %137, align 8
  %223 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %221, i64 -1
  %224 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %223, i64 0, i32 0, i32 0
  %225 = load %"class.blink::Node"*, %"class.blink::Node"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %222, i64 0, i32 6, i32 0, i32 0
  br i1 %229, label %235, label %231

231:                                              ; preds = %220
  %232 = bitcast %"class.blink::NodeData"** %230 to %"class.blink::NodeRareData"**
  %233 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %233, i64 0, i32 1, i32 0, i32 0
  br label %237

235:                                              ; preds = %220
  %236 = bitcast %"class.blink::NodeData"** %230 to %"class.blink::NodeRenderingData"**
  br label %237

237:                                              ; preds = %235, %231
  %238 = phi %"class.blink::NodeRenderingData"** [ %234, %231 ], [ %236, %235 ]
  %239 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %238, align 8
  %240 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %239, i64 0, i32 1
  %241 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %240, align 8
  %242 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %225, i64 0, i32 1
  %243 = load i32, i32* %242, align 8
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %225, i64 0, i32 6, i32 0, i32 0
  br i1 %245, label %251, label %247

247:                                              ; preds = %237
  %248 = bitcast %"class.blink::NodeData"** %246 to %"class.blink::NodeRareData"**
  %249 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %249, i64 0, i32 1, i32 0, i32 0
  br label %253

251:                                              ; preds = %237
  %252 = bitcast %"class.blink::NodeData"** %246 to %"class.blink::NodeRenderingData"**
  br label %253

253:                                              ; preds = %251, %247
  %254 = phi %"class.blink::NodeRenderingData"** [ %250, %247 ], [ %252, %251 ]
  %255 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %255, i64 0, i32 1
  %257 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %256, align 8
  %258 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %259, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #15
  %261 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %241) #15
  store %"class.blink::PaintLayer"* %261, %"class.blink::PaintLayer"** %10, align 8
  %262 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %260, i64 0, i32 0
  %263 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %262, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %10) #15
  %264 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %263, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #15
  %265 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %266, align 8
  %268 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %267, i64 0, i32 0, i32 0
  %269 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %268, align 8
  %270 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %267, i64 0, i32 0, i32 1
  %271 = load i32, i32* %270, align 8
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %269, i64 %272
  %274 = icmp eq %"struct.WTF::KeyValuePair.3022"* %264, %273
  br i1 %274, label %278, label %275

275:                                              ; preds = %253
  %276 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %264, i64 0, i32 1
  %277 = load i32, i32* %276, align 8
  br label %278

278:                                              ; preds = %275, %253
  %279 = phi i32 [ %277, %275 ], [ 0, %253 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #15
  %280 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %257) #15
  store %"class.blink::PaintLayer"* %280, %"class.blink::PaintLayer"** %11, align 8
  %281 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %267, i64 0, i32 0
  %282 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %281, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %11) #15
  %283 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %282, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #15
  %284 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %128, align 8
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %284, i64 0, i32 0, i32 0, i32 0
  %286 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %285, align 8
  %287 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %286, i64 0, i32 0, i32 0
  %288 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %287, align 8
  %289 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %286, i64 0, i32 0, i32 1
  %290 = load i32, i32* %289, align 8
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %288, i64 %291
  %293 = icmp eq %"struct.WTF::KeyValuePair.3022"* %283, %292
  br i1 %293, label %297, label %294

294:                                              ; preds = %278
  %295 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %283, i64 0, i32 1
  %296 = load i32, i32* %295, align 8
  br label %297

297:                                              ; preds = %294, %278
  %298 = phi i32 [ %296, %294 ], [ 0, %278 ]
  %299 = icmp slt i32 %279, %298
  br i1 %299, label %302, label %300

300:                                              ; preds = %297
  %301 = bitcast %"class.blink::Member.318"* %221 to i64*
  br label %313

302:                                              ; preds = %297
  %303 = bitcast %"class.blink::Member.318"* %223 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.blink::Member.318"* %221 to i64*
  store atomic i64 %304, i64* %305 monotonic, align 8
  %306 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %302
  %309 = inttoptr i64 %304 to i8*
  %310 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %309) #15
  br label %311

311:                                              ; preds = %308, %302
  %312 = icmp eq %"class.blink::Member.318"* %223, %4
  br i1 %312, label %313, label %220

313:                                              ; preds = %311, %300, %215
  %314 = phi i64* [ %124, %215 ], [ %301, %300 ], [ %124, %311 ]
  %315 = bitcast %"class.blink::Member.318"* %134 to i64*
  %316 = load i64, i64* %315, align 8
  store atomic i64 %316, i64* %314 monotonic, align 8
  %317 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %326, label %319

319:                                              ; preds = %313
  %320 = inttoptr i64 %316 to i8*
  %321 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %320) #15
  br label %326

322:                                              ; preds = %212
  %323 = bitcast %"class.blink::Member.318"* %134 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.blink::Member.318"* %136 to i64*
  store i64 %324, i64* %325, align 8
  br label %326

326:                                              ; preds = %322, %319, %313
  %327 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %134, i64 1
  %328 = icmp eq %"class.blink::Member.318"* %327, %1
  br i1 %328, label %787, label %133

329:                                              ; preds = %117
  %330 = lshr i64 %3, 1
  %331 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 %330
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %0, %"class.blink::Member.318"* %331, %class.anon.3103* dereferenceable(8) %2, i64 %330, %"class.blink::Member.318"* %4, i64 %330)
  %332 = sub nsw i64 %3, %330
  %333 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %4, i64 %330
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl"(%"class.blink::Member.318"* %331, %"class.blink::Member.318"* %1, %class.anon.3103* dereferenceable(8) %2, i64 %332, %"class.blink::Member.318"* %333, i64 %332)
  %334 = icmp eq i64 %330, 0
  br i1 %334, label %339, label %335

335:                                              ; preds = %329
  %336 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %2, i64 0, i32 0
  %337 = bitcast %"class.blink::PaintLayer"** %6 to i8*
  %338 = bitcast %"class.blink::PaintLayer"** %7 to i8*
  br label %513

339:                                              ; preds = %782, %329
  %340 = phi %"class.blink::Member.318"* [ %331, %329 ], [ %783, %782 ]
  %341 = phi %"class.blink::Member.318"* [ %4, %329 ], [ %785, %782 ]
  %342 = ptrtoint %"class.blink::Member.318"* %340 to i64
  %343 = icmp eq %"class.blink::Member.318"* %340, %1
  br i1 %343, label %787, label %344

344:                                              ; preds = %339
  %345 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %1, i64 -1, i32 0, i32 0
  %346 = ptrtoint %"class.blink::Node"** %345 to i64
  %347 = sub i64 %346, %342
  %348 = lshr i64 %347, 3
  %349 = add nuw nsw i64 %348, 1
  %350 = icmp ult i64 %349, 4
  br i1 %350, label %443, label %351

351:                                              ; preds = %344
  %352 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %1, i64 -1, i32 0, i32 0
  %353 = ptrtoint %"class.blink::Node"** %352 to i64
  %354 = sub i64 %353, %342
  %355 = lshr i64 %354, 3
  %356 = add nuw nsw i64 %355, 1
  %357 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %356
  %358 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %356
  %359 = icmp ult %"class.blink::Member.318"* %341, %358
  %360 = icmp ult %"class.blink::Member.318"* %340, %357
  %361 = and i1 %359, %360
  br i1 %361, label %443, label %362

362:                                              ; preds = %351
  %363 = and i64 %349, 4611686018427387900
  %364 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %363
  %365 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %363
  %366 = add nsw i64 %363, -4
  %367 = lshr exact i64 %366, 2
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 3
  %370 = icmp ult i64 %366, 12
  br i1 %370, label %422, label %371

371:                                              ; preds = %362
  %372 = sub nsw i64 %368, %369
  br label %373

373:                                              ; preds = %373, %371
  %374 = phi i64 [ 0, %371 ], [ %419, %373 ]
  %375 = phi i64 [ %372, %371 ], [ %420, %373 ]
  %376 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %374
  %377 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %374
  %378 = bitcast %"class.blink::Member.318"* %377 to <2 x i64>*
  %379 = load <2 x i64>, <2 x i64>* %378, align 8, !alias.scope !35
  %380 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %377, i64 2
  %381 = bitcast %"class.blink::Member.318"* %380 to <2 x i64>*
  %382 = load <2 x i64>, <2 x i64>* %381, align 8, !alias.scope !35
  %383 = bitcast %"class.blink::Member.318"* %376 to <2 x i64>*
  store <2 x i64> %379, <2 x i64>* %383, align 8, !alias.scope !38, !noalias !35
  %384 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %376, i64 2
  %385 = bitcast %"class.blink::Member.318"* %384 to <2 x i64>*
  store <2 x i64> %382, <2 x i64>* %385, align 8, !alias.scope !38, !noalias !35
  %386 = or i64 %374, 4
  %387 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %386
  %388 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %386
  %389 = bitcast %"class.blink::Member.318"* %388 to <2 x i64>*
  %390 = load <2 x i64>, <2 x i64>* %389, align 8, !alias.scope !35
  %391 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %388, i64 2
  %392 = bitcast %"class.blink::Member.318"* %391 to <2 x i64>*
  %393 = load <2 x i64>, <2 x i64>* %392, align 8, !alias.scope !35
  %394 = bitcast %"class.blink::Member.318"* %387 to <2 x i64>*
  store <2 x i64> %390, <2 x i64>* %394, align 8, !alias.scope !38, !noalias !35
  %395 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %387, i64 2
  %396 = bitcast %"class.blink::Member.318"* %395 to <2 x i64>*
  store <2 x i64> %393, <2 x i64>* %396, align 8, !alias.scope !38, !noalias !35
  %397 = or i64 %374, 8
  %398 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %397
  %399 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %397
  %400 = bitcast %"class.blink::Member.318"* %399 to <2 x i64>*
  %401 = load <2 x i64>, <2 x i64>* %400, align 8, !alias.scope !35
  %402 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %399, i64 2
  %403 = bitcast %"class.blink::Member.318"* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !35
  %405 = bitcast %"class.blink::Member.318"* %398 to <2 x i64>*
  store <2 x i64> %401, <2 x i64>* %405, align 8, !alias.scope !38, !noalias !35
  %406 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %398, i64 2
  %407 = bitcast %"class.blink::Member.318"* %406 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %407, align 8, !alias.scope !38, !noalias !35
  %408 = or i64 %374, 12
  %409 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %408
  %410 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %408
  %411 = bitcast %"class.blink::Member.318"* %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8, !alias.scope !35
  %413 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %410, i64 2
  %414 = bitcast %"class.blink::Member.318"* %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !35
  %416 = bitcast %"class.blink::Member.318"* %409 to <2 x i64>*
  store <2 x i64> %412, <2 x i64>* %416, align 8, !alias.scope !38, !noalias !35
  %417 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %409, i64 2
  %418 = bitcast %"class.blink::Member.318"* %417 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %418, align 8, !alias.scope !38, !noalias !35
  %419 = add i64 %374, 16
  %420 = add i64 %375, -4
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %373, !llvm.loop !40

422:                                              ; preds = %373, %362
  %423 = phi i64 [ 0, %362 ], [ %419, %373 ]
  %424 = icmp eq i64 %369, 0
  br i1 %424, label %441, label %425

425:                                              ; preds = %422, %425
  %426 = phi i64 [ %438, %425 ], [ %423, %422 ]
  %427 = phi i64 [ %439, %425 ], [ %369, %422 ]
  %428 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %341, i64 %426
  %429 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %340, i64 %426
  %430 = bitcast %"class.blink::Member.318"* %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !35
  %432 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %429, i64 2
  %433 = bitcast %"class.blink::Member.318"* %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !35
  %435 = bitcast %"class.blink::Member.318"* %428 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %435, align 8, !alias.scope !38, !noalias !35
  %436 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %428, i64 2
  %437 = bitcast %"class.blink::Member.318"* %436 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %437, align 8, !alias.scope !38, !noalias !35
  %438 = add i64 %426, 4
  %439 = add i64 %427, -1
  %440 = icmp eq i64 %439, 0
  br i1 %440, label %441, label %425, !llvm.loop !41

441:                                              ; preds = %425, %422
  %442 = icmp eq i64 %349, %363
  br i1 %442, label %787, label %443

443:                                              ; preds = %441, %351, %344
  %444 = phi %"class.blink::Member.318"* [ %341, %351 ], [ %341, %344 ], [ %364, %441 ]
  %445 = phi %"class.blink::Member.318"* [ %340, %351 ], [ %340, %344 ], [ %365, %441 ]
  %446 = ptrtoint %"class.blink::Member.318"* %445 to i64
  %447 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %1, i64 -1, i32 0, i32 0
  %448 = ptrtoint %"class.blink::Node"** %447 to i64
  %449 = sub i64 %448, %446
  %450 = lshr i64 %449, 3
  %451 = add nuw nsw i64 %450, 1
  %452 = and i64 %451, 7
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %465, label %454

454:                                              ; preds = %443, %454
  %455 = phi %"class.blink::Member.318"* [ %462, %454 ], [ %444, %443 ]
  %456 = phi %"class.blink::Member.318"* [ %461, %454 ], [ %445, %443 ]
  %457 = phi i64 [ %463, %454 ], [ %452, %443 ]
  %458 = bitcast %"class.blink::Member.318"* %456 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = bitcast %"class.blink::Member.318"* %455 to i64*
  store i64 %459, i64* %460, align 8
  %461 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %456, i64 1
  %462 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %455, i64 1
  %463 = add i64 %457, -1
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %454, !llvm.loop !42

465:                                              ; preds = %454, %443
  %466 = phi %"class.blink::Member.318"* [ %444, %443 ], [ %462, %454 ]
  %467 = phi %"class.blink::Member.318"* [ %445, %443 ], [ %461, %454 ]
  %468 = icmp ult i64 %449, 56
  br i1 %468, label %787, label %469

469:                                              ; preds = %465, %469
  %470 = phi %"class.blink::Member.318"* [ %511, %469 ], [ %466, %465 ]
  %471 = phi %"class.blink::Member.318"* [ %510, %469 ], [ %467, %465 ]
  %472 = bitcast %"class.blink::Member.318"* %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = bitcast %"class.blink::Member.318"* %470 to i64*
  store i64 %473, i64* %474, align 8
  %475 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 1
  %476 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 1
  %477 = bitcast %"class.blink::Member.318"* %475 to i64*
  %478 = load i64, i64* %477, align 8
  %479 = bitcast %"class.blink::Member.318"* %476 to i64*
  store i64 %478, i64* %479, align 8
  %480 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 2
  %481 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 2
  %482 = bitcast %"class.blink::Member.318"* %480 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = bitcast %"class.blink::Member.318"* %481 to i64*
  store i64 %483, i64* %484, align 8
  %485 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 3
  %486 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 3
  %487 = bitcast %"class.blink::Member.318"* %485 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.blink::Member.318"* %486 to i64*
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 4
  %491 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 4
  %492 = bitcast %"class.blink::Member.318"* %490 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = bitcast %"class.blink::Member.318"* %491 to i64*
  store i64 %493, i64* %494, align 8
  %495 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 5
  %496 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 5
  %497 = bitcast %"class.blink::Member.318"* %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = bitcast %"class.blink::Member.318"* %496 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 6
  %501 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 6
  %502 = bitcast %"class.blink::Member.318"* %500 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = bitcast %"class.blink::Member.318"* %501 to i64*
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 7
  %506 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 7
  %507 = bitcast %"class.blink::Member.318"* %505 to i64*
  %508 = load i64, i64* %507, align 8
  %509 = bitcast %"class.blink::Member.318"* %506 to i64*
  store i64 %508, i64* %509, align 8
  %510 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %471, i64 8
  %511 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %470, i64 8
  %512 = icmp eq %"class.blink::Member.318"* %510, %1
  br i1 %512, label %787, label %469, !llvm.loop !43

513:                                              ; preds = %782, %335
  %514 = phi %"class.blink::Member.318"* [ %0, %335 ], [ %784, %782 ]
  %515 = phi %"class.blink::Member.318"* [ %4, %335 ], [ %785, %782 ]
  %516 = phi %"class.blink::Member.318"* [ %331, %335 ], [ %783, %782 ]
  %517 = icmp eq %"class.blink::Member.318"* %516, %1
  br i1 %517, label %518, label %693

518:                                              ; preds = %513
  %519 = ptrtoint %"class.blink::Member.318"* %514 to i64
  %520 = icmp eq %"class.blink::Member.318"* %514, %331
  br i1 %520, label %787, label %521

521:                                              ; preds = %518
  %522 = add nsw i64 %330, -1
  %523 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 %522, i32 0, i32 0
  %524 = ptrtoint %"class.blink::Node"** %523 to i64
  %525 = sub i64 %524, %519
  %526 = lshr i64 %525, 3
  %527 = add nuw nsw i64 %526, 1
  %528 = icmp ult i64 %527, 4
  br i1 %528, label %622, label %529

529:                                              ; preds = %521
  %530 = add nsw i64 %330, -1
  %531 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 %530, i32 0, i32 0
  %532 = ptrtoint %"class.blink::Node"** %531 to i64
  %533 = sub i64 %532, %519
  %534 = lshr i64 %533, 3
  %535 = add nuw nsw i64 %534, 1
  %536 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %535
  %537 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %535
  %538 = icmp ult %"class.blink::Member.318"* %515, %537
  %539 = icmp ult %"class.blink::Member.318"* %514, %536
  %540 = and i1 %538, %539
  br i1 %540, label %622, label %541

541:                                              ; preds = %529
  %542 = and i64 %527, 4611686018427387900
  %543 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %542
  %544 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %542
  %545 = add nsw i64 %542, -4
  %546 = lshr exact i64 %545, 2
  %547 = add nuw nsw i64 %546, 1
  %548 = and i64 %547, 3
  %549 = icmp ult i64 %545, 12
  br i1 %549, label %601, label %550

550:                                              ; preds = %541
  %551 = sub nsw i64 %547, %548
  br label %552

552:                                              ; preds = %552, %550
  %553 = phi i64 [ 0, %550 ], [ %598, %552 ]
  %554 = phi i64 [ %551, %550 ], [ %599, %552 ]
  %555 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %553
  %556 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %553
  %557 = bitcast %"class.blink::Member.318"* %555 to <2 x i64>*
  %558 = load <2 x i64>, <2 x i64>* %557, align 8, !alias.scope !44
  %559 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %555, i64 2
  %560 = bitcast %"class.blink::Member.318"* %559 to <2 x i64>*
  %561 = load <2 x i64>, <2 x i64>* %560, align 8, !alias.scope !44
  %562 = bitcast %"class.blink::Member.318"* %556 to <2 x i64>*
  store <2 x i64> %558, <2 x i64>* %562, align 8, !alias.scope !47, !noalias !44
  %563 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %556, i64 2
  %564 = bitcast %"class.blink::Member.318"* %563 to <2 x i64>*
  store <2 x i64> %561, <2 x i64>* %564, align 8, !alias.scope !47, !noalias !44
  %565 = or i64 %553, 4
  %566 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %565
  %567 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %565
  %568 = bitcast %"class.blink::Member.318"* %566 to <2 x i64>*
  %569 = load <2 x i64>, <2 x i64>* %568, align 8, !alias.scope !44
  %570 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %566, i64 2
  %571 = bitcast %"class.blink::Member.318"* %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !44
  %573 = bitcast %"class.blink::Member.318"* %567 to <2 x i64>*
  store <2 x i64> %569, <2 x i64>* %573, align 8, !alias.scope !47, !noalias !44
  %574 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %567, i64 2
  %575 = bitcast %"class.blink::Member.318"* %574 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %575, align 8, !alias.scope !47, !noalias !44
  %576 = or i64 %553, 8
  %577 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %576
  %578 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %576
  %579 = bitcast %"class.blink::Member.318"* %577 to <2 x i64>*
  %580 = load <2 x i64>, <2 x i64>* %579, align 8, !alias.scope !44
  %581 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %577, i64 2
  %582 = bitcast %"class.blink::Member.318"* %581 to <2 x i64>*
  %583 = load <2 x i64>, <2 x i64>* %582, align 8, !alias.scope !44
  %584 = bitcast %"class.blink::Member.318"* %578 to <2 x i64>*
  store <2 x i64> %580, <2 x i64>* %584, align 8, !alias.scope !47, !noalias !44
  %585 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %578, i64 2
  %586 = bitcast %"class.blink::Member.318"* %585 to <2 x i64>*
  store <2 x i64> %583, <2 x i64>* %586, align 8, !alias.scope !47, !noalias !44
  %587 = or i64 %553, 12
  %588 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %587
  %589 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %587
  %590 = bitcast %"class.blink::Member.318"* %588 to <2 x i64>*
  %591 = load <2 x i64>, <2 x i64>* %590, align 8, !alias.scope !44
  %592 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %588, i64 2
  %593 = bitcast %"class.blink::Member.318"* %592 to <2 x i64>*
  %594 = load <2 x i64>, <2 x i64>* %593, align 8, !alias.scope !44
  %595 = bitcast %"class.blink::Member.318"* %589 to <2 x i64>*
  store <2 x i64> %591, <2 x i64>* %595, align 8, !alias.scope !47, !noalias !44
  %596 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %589, i64 2
  %597 = bitcast %"class.blink::Member.318"* %596 to <2 x i64>*
  store <2 x i64> %594, <2 x i64>* %597, align 8, !alias.scope !47, !noalias !44
  %598 = add i64 %553, 16
  %599 = add i64 %554, -4
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %601, label %552, !llvm.loop !49

601:                                              ; preds = %552, %541
  %602 = phi i64 [ 0, %541 ], [ %598, %552 ]
  %603 = icmp eq i64 %548, 0
  br i1 %603, label %620, label %604

604:                                              ; preds = %601, %604
  %605 = phi i64 [ %617, %604 ], [ %602, %601 ]
  %606 = phi i64 [ %618, %604 ], [ %548, %601 ]
  %607 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 %605
  %608 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 %605
  %609 = bitcast %"class.blink::Member.318"* %607 to <2 x i64>*
  %610 = load <2 x i64>, <2 x i64>* %609, align 8, !alias.scope !44
  %611 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %607, i64 2
  %612 = bitcast %"class.blink::Member.318"* %611 to <2 x i64>*
  %613 = load <2 x i64>, <2 x i64>* %612, align 8, !alias.scope !44
  %614 = bitcast %"class.blink::Member.318"* %608 to <2 x i64>*
  store <2 x i64> %610, <2 x i64>* %614, align 8, !alias.scope !47, !noalias !44
  %615 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %608, i64 2
  %616 = bitcast %"class.blink::Member.318"* %615 to <2 x i64>*
  store <2 x i64> %613, <2 x i64>* %616, align 8, !alias.scope !47, !noalias !44
  %617 = add i64 %605, 4
  %618 = add i64 %606, -1
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %620, label %604, !llvm.loop !50

620:                                              ; preds = %604, %601
  %621 = icmp eq i64 %527, %542
  br i1 %621, label %787, label %622

622:                                              ; preds = %620, %529, %521
  %623 = phi %"class.blink::Member.318"* [ %514, %529 ], [ %514, %521 ], [ %543, %620 ]
  %624 = phi %"class.blink::Member.318"* [ %515, %529 ], [ %515, %521 ], [ %544, %620 ]
  %625 = ptrtoint %"class.blink::Member.318"* %623 to i64
  %626 = add nsw i64 %330, -1
  %627 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %0, i64 %626, i32 0, i32 0
  %628 = ptrtoint %"class.blink::Node"** %627 to i64
  %629 = sub i64 %628, %625
  %630 = lshr i64 %629, 3
  %631 = add nuw nsw i64 %630, 1
  %632 = and i64 %631, 7
  %633 = icmp eq i64 %632, 0
  br i1 %633, label %645, label %634

634:                                              ; preds = %622, %634
  %635 = phi %"class.blink::Member.318"* [ %641, %634 ], [ %623, %622 ]
  %636 = phi %"class.blink::Member.318"* [ %642, %634 ], [ %624, %622 ]
  %637 = phi i64 [ %643, %634 ], [ %632, %622 ]
  %638 = bitcast %"class.blink::Member.318"* %635 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = bitcast %"class.blink::Member.318"* %636 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %635, i64 1
  %642 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %636, i64 1
  %643 = add i64 %637, -1
  %644 = icmp eq i64 %643, 0
  br i1 %644, label %645, label %634, !llvm.loop !51

645:                                              ; preds = %634, %622
  %646 = phi %"class.blink::Member.318"* [ %623, %622 ], [ %641, %634 ]
  %647 = phi %"class.blink::Member.318"* [ %624, %622 ], [ %642, %634 ]
  %648 = icmp ult i64 %629, 56
  br i1 %648, label %787, label %649

649:                                              ; preds = %645, %649
  %650 = phi %"class.blink::Member.318"* [ %690, %649 ], [ %646, %645 ]
  %651 = phi %"class.blink::Member.318"* [ %691, %649 ], [ %647, %645 ]
  %652 = bitcast %"class.blink::Member.318"* %650 to i64*
  %653 = load i64, i64* %652, align 8
  %654 = bitcast %"class.blink::Member.318"* %651 to i64*
  store i64 %653, i64* %654, align 8
  %655 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 1
  %656 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 1
  %657 = bitcast %"class.blink::Member.318"* %655 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = bitcast %"class.blink::Member.318"* %656 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 2
  %661 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 2
  %662 = bitcast %"class.blink::Member.318"* %660 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"class.blink::Member.318"* %661 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 3
  %666 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 3
  %667 = bitcast %"class.blink::Member.318"* %665 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"class.blink::Member.318"* %666 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 4
  %671 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 4
  %672 = bitcast %"class.blink::Member.318"* %670 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"class.blink::Member.318"* %671 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 5
  %676 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 5
  %677 = bitcast %"class.blink::Member.318"* %675 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"class.blink::Member.318"* %676 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 6
  %681 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 6
  %682 = bitcast %"class.blink::Member.318"* %680 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"class.blink::Member.318"* %681 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 7
  %686 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 7
  %687 = bitcast %"class.blink::Member.318"* %685 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"class.blink::Member.318"* %686 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %650, i64 8
  %691 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %651, i64 8
  %692 = icmp eq %"class.blink::Member.318"* %690, %331
  br i1 %692, label %787, label %649, !llvm.loop !52

693:                                              ; preds = %513
  %694 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %516, i64 0, i32 0, i32 0
  %695 = load %"class.blink::Node"*, %"class.blink::Node"** %694, align 8
  %696 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 0, i32 0, i32 0
  %697 = load %"class.blink::Node"*, %"class.blink::Node"** %696, align 8
  %698 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %695, i64 0, i32 1
  %699 = load i32, i32* %698, align 8
  %700 = and i32 %699, 1
  %701 = icmp eq i32 %700, 0
  %702 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %695, i64 0, i32 6, i32 0, i32 0
  br i1 %701, label %707, label %703

703:                                              ; preds = %693
  %704 = bitcast %"class.blink::NodeData"** %702 to %"class.blink::NodeRareData"**
  %705 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %704, align 8
  %706 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %705, i64 0, i32 1, i32 0, i32 0
  br label %709

707:                                              ; preds = %693
  %708 = bitcast %"class.blink::NodeData"** %702 to %"class.blink::NodeRenderingData"**
  br label %709

709:                                              ; preds = %707, %703
  %710 = phi %"class.blink::NodeRenderingData"** [ %706, %703 ], [ %708, %707 ]
  %711 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %710, align 8
  %712 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %711, i64 0, i32 1
  %713 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %712, align 8
  %714 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %697, i64 0, i32 1
  %715 = load i32, i32* %714, align 8
  %716 = and i32 %715, 1
  %717 = icmp eq i32 %716, 0
  %718 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %697, i64 0, i32 6, i32 0, i32 0
  br i1 %717, label %723, label %719

719:                                              ; preds = %709
  %720 = bitcast %"class.blink::NodeData"** %718 to %"class.blink::NodeRareData"**
  %721 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %720, align 8
  %722 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %721, i64 0, i32 1, i32 0, i32 0
  br label %725

723:                                              ; preds = %709
  %724 = bitcast %"class.blink::NodeData"** %718 to %"class.blink::NodeRenderingData"**
  br label %725

725:                                              ; preds = %723, %719
  %726 = phi %"class.blink::NodeRenderingData"** [ %722, %719 ], [ %724, %723 ]
  %727 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %726, align 8
  %728 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %727, i64 0, i32 1
  %729 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %728, align 8
  %730 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %336, align 8
  %731 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %730, i64 0, i32 0, i32 0, i32 0
  %732 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %731, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #15
  %733 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %713) #15
  store %"class.blink::PaintLayer"* %733, %"class.blink::PaintLayer"** %6, align 8
  %734 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %732, i64 0, i32 0
  %735 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %734, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %6) #15
  %736 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %735, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #15
  %737 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %336, align 8
  %738 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %737, i64 0, i32 0, i32 0, i32 0
  %739 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %738, align 8
  %740 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %739, i64 0, i32 0, i32 0
  %741 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %740, align 8
  %742 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %739, i64 0, i32 0, i32 1
  %743 = load i32, i32* %742, align 8
  %744 = zext i32 %743 to i64
  %745 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %741, i64 %744
  %746 = icmp eq %"struct.WTF::KeyValuePair.3022"* %736, %745
  br i1 %746, label %750, label %747

747:                                              ; preds = %725
  %748 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %736, i64 0, i32 1
  %749 = load i32, i32* %748, align 8
  br label %750

750:                                              ; preds = %747, %725
  %751 = phi i32 [ %749, %747 ], [ 0, %725 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %338) #15
  %752 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %729) #15
  store %"class.blink::PaintLayer"* %752, %"class.blink::PaintLayer"** %7, align 8
  %753 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %739, i64 0, i32 0
  %754 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %753, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %7) #15
  %755 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %754, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #15
  %756 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %336, align 8
  %757 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %756, i64 0, i32 0, i32 0, i32 0
  %758 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %757, align 8
  %759 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %758, i64 0, i32 0, i32 0
  %760 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %759, align 8
  %761 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %758, i64 0, i32 0, i32 1
  %762 = load i32, i32* %761, align 8
  %763 = zext i32 %762 to i64
  %764 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %760, i64 %763
  %765 = icmp eq %"struct.WTF::KeyValuePair.3022"* %755, %764
  br i1 %765, label %769, label %766

766:                                              ; preds = %750
  %767 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %755, i64 0, i32 1
  %768 = load i32, i32* %767, align 8
  br label %769

769:                                              ; preds = %766, %750
  %770 = phi i32 [ %768, %766 ], [ 0, %750 ]
  %771 = icmp slt i32 %751, %770
  br i1 %771, label %772, label %777

772:                                              ; preds = %769
  %773 = bitcast %"class.blink::Member.318"* %516 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = bitcast %"class.blink::Member.318"* %515 to i64*
  store i64 %774, i64* %775, align 8
  %776 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %516, i64 1
  br label %782

777:                                              ; preds = %769
  %778 = bitcast %"class.blink::Member.318"* %514 to i64*
  %779 = load i64, i64* %778, align 8
  %780 = bitcast %"class.blink::Member.318"* %515 to i64*
  store i64 %779, i64* %780, align 8
  %781 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %514, i64 1
  br label %782

782:                                              ; preds = %777, %772
  %783 = phi %"class.blink::Member.318"* [ %776, %772 ], [ %516, %777 ]
  %784 = phi %"class.blink::Member.318"* [ %514, %772 ], [ %781, %777 ]
  %785 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %515, i64 1
  %786 = icmp eq %"class.blink::Member.318"* %784, %331
  br i1 %786, label %339, label %513

787:                                              ; preds = %645, %649, %465, %469, %326, %620, %441, %518, %339, %121, %119, %101, %109, %5, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl"(%"class.blink::Member.318"*, %"class.blink::Member.318"*, %"class.blink::Member.318"*, %class.anon.3103* readonly dereferenceable(8), i64, i64, %"class.blink::Member.318"*, i64) unnamed_addr #0 {
  %9 = alloca %"class.blink::PaintLayer"*, align 8
  %10 = alloca %"class.blink::PaintLayer"*, align 8
  %11 = alloca %"class.blink::PaintLayer"*, align 8
  %12 = alloca %"class.blink::PaintLayer"*, align 8
  %13 = alloca %"class.blink::PaintLayer"*, align 8
  %14 = alloca %"class.blink::PaintLayer"*, align 8
  %15 = alloca %"class.blink::PaintLayer"*, align 8
  %16 = alloca %"class.blink::PaintLayer"*, align 8
  %17 = alloca %"class.blink::PaintLayer"*, align 8
  %18 = alloca %"class.blink::PaintLayer"*, align 8
  %19 = icmp eq i64 %5, 0
  br i1 %19, label %993, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %class.anon.3103, %class.anon.3103* %3, i64 0, i32 0
  %22 = bitcast %"class.blink::PaintLayer"** %13 to i8*
  %23 = bitcast %"class.blink::PaintLayer"** %14 to i8*
  %24 = bitcast %"class.blink::PaintLayer"** %9 to i8*
  %25 = bitcast %"class.blink::PaintLayer"** %10 to i8*
  %26 = bitcast %"class.blink::PaintLayer"** %11 to i8*
  %27 = bitcast %"class.blink::PaintLayer"** %12 to i8*
  br label %28

28:                                               ; preds = %20, %986
  %29 = phi %"class.blink::Member.318"* [ %0, %20 ], [ %991, %986 ]
  %30 = phi %"class.blink::Member.318"* [ %1, %20 ], [ %990, %986 ]
  %31 = phi i64 [ %5, %20 ], [ %989, %986 ]
  %32 = phi i64 [ %4, %20 ], [ %988, %986 ]
  %33 = phi %"class.blink::Member.318"* [ %2, %20 ], [ %987, %986 ]
  %34 = icmp sgt i64 %32, %7
  %35 = icmp sgt i64 %31, %7
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %28
  %38 = icmp eq i64 %32, 0
  br i1 %38, label %993, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 0, i32 0, i32 0
  br label %655

41:                                               ; preds = %28
  %42 = ptrtoint %"class.blink::Member.318"* %30 to i64
  %43 = ptrtoint %"class.blink::Member.318"* %29 to i64
  %44 = icmp sgt i64 %32, %31
  br i1 %44, label %176, label %45

45:                                               ; preds = %41
  %46 = icmp eq %"class.blink::Member.318"* %29, %30
  br i1 %46, label %993, label %47

47:                                               ; preds = %45
  %48 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 -1, i32 0, i32 0
  %49 = ptrtoint %"class.blink::Node"** %48 to i64
  %50 = sub i64 %49, %43
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = icmp ult i64 %52, 4
  br i1 %53, label %54, label %82

54:                                               ; preds = %172, %82, %47
  %55 = phi %"class.blink::Member.318"* [ %29, %82 ], [ %29, %47 ], [ %95, %172 ]
  %56 = phi %"class.blink::Member.318"* [ %6, %82 ], [ %6, %47 ], [ %96, %172 ]
  %57 = ptrtoint %"class.blink::Member.318"* %55 to i64
  %58 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 -1, i32 0, i32 0
  %59 = ptrtoint %"class.blink::Node"** %58 to i64
  %60 = sub i64 %59, %57
  %61 = lshr i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 7
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %54, %65
  %66 = phi %"class.blink::Member.318"* [ %72, %65 ], [ %55, %54 ]
  %67 = phi %"class.blink::Member.318"* [ %73, %65 ], [ %56, %54 ]
  %68 = phi i64 [ %74, %65 ], [ %63, %54 ]
  %69 = bitcast %"class.blink::Member.318"* %66 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::Member.318"* %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %66, i64 1
  %73 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %67, i64 1
  %74 = add i64 %68, -1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %65, !llvm.loop !53

76:                                               ; preds = %65, %54
  %77 = phi %"class.blink::Member.318"* [ undef, %54 ], [ %67, %65 ]
  %78 = phi %"class.blink::Member.318"* [ undef, %54 ], [ %73, %65 ]
  %79 = phi %"class.blink::Member.318"* [ %55, %54 ], [ %72, %65 ]
  %80 = phi %"class.blink::Member.318"* [ %56, %54 ], [ %73, %65 ]
  %81 = icmp ult i64 %60, 56
  br i1 %81, label %304, label %437

82:                                               ; preds = %47
  %83 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 -1, i32 0, i32 0
  %84 = ptrtoint %"class.blink::Node"** %83 to i64
  %85 = sub i64 %84, %43
  %86 = lshr i64 %85, 3
  %87 = add nuw nsw i64 %86, 1
  %88 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %87
  %89 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %87
  %90 = icmp ugt %"class.blink::Member.318"* %89, %6
  %91 = icmp ult %"class.blink::Member.318"* %29, %88
  %92 = and i1 %90, %91
  br i1 %92, label %54, label %93

93:                                               ; preds = %82
  %94 = and i64 %52, 4611686018427387900
  %95 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %94
  %96 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %94
  %97 = add nsw i64 %94, -4
  %98 = lshr exact i64 %97, 2
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 12
  br i1 %101, label %153, label %102

102:                                              ; preds = %93
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %105
  %108 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %105
  %109 = bitcast %"class.blink::Member.318"* %107 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !54
  %111 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %107, i64 2
  %112 = bitcast %"class.blink::Member.318"* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !54
  %114 = bitcast %"class.blink::Member.318"* %108 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !57, !noalias !54
  %115 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %108, i64 2
  %116 = bitcast %"class.blink::Member.318"* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !57, !noalias !54
  %117 = or i64 %105, 4
  %118 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %117
  %119 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %117
  %120 = bitcast %"class.blink::Member.318"* %118 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !54
  %122 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %118, i64 2
  %123 = bitcast %"class.blink::Member.318"* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !54
  %125 = bitcast %"class.blink::Member.318"* %119 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !57, !noalias !54
  %126 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %119, i64 2
  %127 = bitcast %"class.blink::Member.318"* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !57, !noalias !54
  %128 = or i64 %105, 8
  %129 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %128
  %130 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %128
  %131 = bitcast %"class.blink::Member.318"* %129 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !54
  %133 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %129, i64 2
  %134 = bitcast %"class.blink::Member.318"* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !54
  %136 = bitcast %"class.blink::Member.318"* %130 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 8, !alias.scope !57, !noalias !54
  %137 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %130, i64 2
  %138 = bitcast %"class.blink::Member.318"* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 8, !alias.scope !57, !noalias !54
  %139 = or i64 %105, 12
  %140 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %139
  %141 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %139
  %142 = bitcast %"class.blink::Member.318"* %140 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 8, !alias.scope !54
  %144 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %140, i64 2
  %145 = bitcast %"class.blink::Member.318"* %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !54
  %147 = bitcast %"class.blink::Member.318"* %141 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %147, align 8, !alias.scope !57, !noalias !54
  %148 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %141, i64 2
  %149 = bitcast %"class.blink::Member.318"* %148 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %149, align 8, !alias.scope !57, !noalias !54
  %150 = add i64 %105, 16
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !59

153:                                              ; preds = %104, %93
  %154 = phi i64 [ 0, %93 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %29, i64 %157
  %160 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %157
  %161 = bitcast %"class.blink::Member.318"* %159 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !54
  %163 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %159, i64 2
  %164 = bitcast %"class.blink::Member.318"* %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !54
  %166 = bitcast %"class.blink::Member.318"* %160 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %166, align 8, !alias.scope !57, !noalias !54
  %167 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %160, i64 2
  %168 = bitcast %"class.blink::Member.318"* %167 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %168, align 8, !alias.scope !57, !noalias !54
  %169 = add i64 %157, 4
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !60

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %52, %94
  %174 = add nsw i64 %94, -1
  %175 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %174
  br i1 %173, label %304, label %54

176:                                              ; preds = %41
  %177 = icmp eq %"class.blink::Member.318"* %30, %33
  br i1 %177, label %993, label %178

178:                                              ; preds = %176
  %179 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %33, i64 -1, i32 0, i32 0
  %180 = ptrtoint %"class.blink::Node"** %179 to i64
  %181 = sub i64 %180, %42
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = icmp ult i64 %183, 4
  br i1 %184, label %185, label %212

185:                                              ; preds = %302, %212, %178
  %186 = phi %"class.blink::Member.318"* [ %30, %212 ], [ %30, %178 ], [ %225, %302 ]
  %187 = phi %"class.blink::Member.318"* [ %6, %212 ], [ %6, %178 ], [ %226, %302 ]
  %188 = ptrtoint %"class.blink::Member.318"* %186 to i64
  %189 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %33, i64 -1, i32 0, i32 0
  %190 = ptrtoint %"class.blink::Node"** %189 to i64
  %191 = sub i64 %190, %188
  %192 = lshr i64 %191, 3
  %193 = add nuw nsw i64 %192, 1
  %194 = and i64 %193, 7
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %207, label %196

196:                                              ; preds = %185, %196
  %197 = phi %"class.blink::Member.318"* [ %203, %196 ], [ %186, %185 ]
  %198 = phi %"class.blink::Member.318"* [ %204, %196 ], [ %187, %185 ]
  %199 = phi i64 [ %205, %196 ], [ %194, %185 ]
  %200 = bitcast %"class.blink::Member.318"* %197 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.blink::Member.318"* %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %197, i64 1
  %204 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %198, i64 1
  %205 = add i64 %199, -1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %196, !llvm.loop !61

207:                                              ; preds = %196, %185
  %208 = phi %"class.blink::Member.318"* [ undef, %185 ], [ %204, %196 ]
  %209 = phi %"class.blink::Member.318"* [ %186, %185 ], [ %203, %196 ]
  %210 = phi %"class.blink::Member.318"* [ %187, %185 ], [ %204, %196 ]
  %211 = icmp ult i64 %191, 56
  br i1 %211, label %481, label %611

212:                                              ; preds = %178
  %213 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %33, i64 -1, i32 0, i32 0
  %214 = ptrtoint %"class.blink::Node"** %213 to i64
  %215 = sub i64 %214, %42
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %217
  %219 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %217
  %220 = icmp ugt %"class.blink::Member.318"* %219, %6
  %221 = icmp ult %"class.blink::Member.318"* %30, %218
  %222 = and i1 %220, %221
  br i1 %222, label %185, label %223

223:                                              ; preds = %212
  %224 = and i64 %183, 4611686018427387900
  %225 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %224
  %226 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %235
  %238 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %235
  %239 = bitcast %"class.blink::Member.318"* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !62
  %241 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %237, i64 2
  %242 = bitcast %"class.blink::Member.318"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !62
  %244 = bitcast %"class.blink::Member.318"* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !65, !noalias !62
  %245 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %238, i64 2
  %246 = bitcast %"class.blink::Member.318"* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !65, !noalias !62
  %247 = or i64 %235, 4
  %248 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %247
  %249 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %247
  %250 = bitcast %"class.blink::Member.318"* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !62
  %252 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %248, i64 2
  %253 = bitcast %"class.blink::Member.318"* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !62
  %255 = bitcast %"class.blink::Member.318"* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 8, !alias.scope !65, !noalias !62
  %256 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %249, i64 2
  %257 = bitcast %"class.blink::Member.318"* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 8, !alias.scope !65, !noalias !62
  %258 = or i64 %235, 8
  %259 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %258
  %260 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %258
  %261 = bitcast %"class.blink::Member.318"* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !62
  %263 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %259, i64 2
  %264 = bitcast %"class.blink::Member.318"* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !62
  %266 = bitcast %"class.blink::Member.318"* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 8, !alias.scope !65, !noalias !62
  %267 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %260, i64 2
  %268 = bitcast %"class.blink::Member.318"* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 8, !alias.scope !65, !noalias !62
  %269 = or i64 %235, 12
  %270 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %269
  %271 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %269
  %272 = bitcast %"class.blink::Member.318"* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !62
  %274 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %270, i64 2
  %275 = bitcast %"class.blink::Member.318"* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !62
  %277 = bitcast %"class.blink::Member.318"* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 8, !alias.scope !65, !noalias !62
  %278 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %271, i64 2
  %279 = bitcast %"class.blink::Member.318"* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 8, !alias.scope !65, !noalias !62
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !67

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %287
  %290 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 %287
  %291 = bitcast %"class.blink::Member.318"* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !62
  %293 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %289, i64 2
  %294 = bitcast %"class.blink::Member.318"* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !62
  %296 = bitcast %"class.blink::Member.318"* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !65, !noalias !62
  %297 = getelementptr %"class.blink::Member.318", %"class.blink::Member.318"* %290, i64 2
  %298 = bitcast %"class.blink::Member.318"* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !65, !noalias !62
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !68

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %183, %224
  br i1 %303, label %481, label %185

304:                                              ; preds = %76, %437, %172
  %305 = phi %"class.blink::Member.318"* [ %175, %172 ], [ %77, %76 ], [ %474, %437 ]
  %306 = phi %"class.blink::Member.318"* [ %96, %172 ], [ %78, %76 ], [ %479, %437 ]
  %307 = icmp eq %"class.blink::Member.318"* %306, %6
  br i1 %307, label %993, label %308

308:                                              ; preds = %304
  %309 = bitcast %"class.blink::PaintLayer"** %15 to i8*
  %310 = bitcast %"class.blink::PaintLayer"** %16 to i8*
  br label %311

311:                                              ; preds = %432, %308
  %312 = phi %"class.blink::Member.318"* [ %6, %308 ], [ %434, %432 ]
  %313 = phi %"class.blink::Member.318"* [ %29, %308 ], [ %435, %432 ]
  %314 = phi %"class.blink::Member.318"* [ %30, %308 ], [ %433, %432 ]
  %315 = icmp eq %"class.blink::Member.318"* %314, %33
  br i1 %315, label %316, label %331

316:                                              ; preds = %311, %327
  %317 = phi %"class.blink::Member.318"* [ %329, %327 ], [ %313, %311 ]
  %318 = phi %"class.blink::Member.318"* [ %328, %327 ], [ %312, %311 ]
  %319 = bitcast %"class.blink::Member.318"* %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.blink::Member.318"* %317 to i64*
  store atomic i64 %320, i64* %321 monotonic, align 8
  %322 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %327, label %324

324:                                              ; preds = %316
  %325 = inttoptr i64 %320 to i8*
  %326 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %325) #15
  br label %327

327:                                              ; preds = %324, %316
  %328 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %318, i64 1
  %329 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %317, i64 1
  %330 = icmp eq %"class.blink::Member.318"* %318, %305
  br i1 %330, label %993, label %316

331:                                              ; preds = %311
  %332 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %314, i64 0, i32 0, i32 0
  %333 = load %"class.blink::Node"*, %"class.blink::Node"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %312, i64 0, i32 0, i32 0
  %335 = load %"class.blink::Node"*, %"class.blink::Node"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %333, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %333, i64 0, i32 6, i32 0, i32 0
  br i1 %339, label %345, label %341

341:                                              ; preds = %331
  %342 = bitcast %"class.blink::NodeData"** %340 to %"class.blink::NodeRareData"**
  %343 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %342, align 8
  %344 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %343, i64 0, i32 1, i32 0, i32 0
  br label %347

345:                                              ; preds = %331
  %346 = bitcast %"class.blink::NodeData"** %340 to %"class.blink::NodeRenderingData"**
  br label %347

347:                                              ; preds = %345, %341
  %348 = phi %"class.blink::NodeRenderingData"** [ %344, %341 ], [ %346, %345 ]
  %349 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %349, i64 0, i32 1
  %351 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %335, i64 0, i32 1
  %353 = load i32, i32* %352, align 8
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %335, i64 0, i32 6, i32 0, i32 0
  br i1 %355, label %361, label %357

357:                                              ; preds = %347
  %358 = bitcast %"class.blink::NodeData"** %356 to %"class.blink::NodeRareData"**
  %359 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %359, i64 0, i32 1, i32 0, i32 0
  br label %363

361:                                              ; preds = %347
  %362 = bitcast %"class.blink::NodeData"** %356 to %"class.blink::NodeRenderingData"**
  br label %363

363:                                              ; preds = %361, %357
  %364 = phi %"class.blink::NodeRenderingData"** [ %360, %357 ], [ %362, %361 ]
  %365 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %365, i64 0, i32 1
  %367 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %366, align 8
  %368 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %368, i64 0, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %369, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #15
  %371 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %351) #15
  store %"class.blink::PaintLayer"* %371, %"class.blink::PaintLayer"** %15, align 8
  %372 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %370, i64 0, i32 0
  %373 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %372, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %15) #15
  %374 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %373, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #15
  %375 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %376 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %375, i64 0, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %376, align 8
  %378 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %377, i64 0, i32 0, i32 0
  %379 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %378, align 8
  %380 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %377, i64 0, i32 0, i32 1
  %381 = load i32, i32* %380, align 8
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %379, i64 %382
  %384 = icmp eq %"struct.WTF::KeyValuePair.3022"* %374, %383
  br i1 %384, label %388, label %385

385:                                              ; preds = %363
  %386 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %374, i64 0, i32 1
  %387 = load i32, i32* %386, align 8
  br label %388

388:                                              ; preds = %385, %363
  %389 = phi i32 [ %387, %385 ], [ 0, %363 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #15
  %390 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %367) #15
  store %"class.blink::PaintLayer"* %390, %"class.blink::PaintLayer"** %16, align 8
  %391 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %377, i64 0, i32 0
  %392 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %391, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %16) #15
  %393 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %392, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #15
  %394 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %394, i64 0, i32 0, i32 0, i32 0
  %396 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %395, align 8
  %397 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %396, i64 0, i32 0, i32 0
  %398 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %397, align 8
  %399 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %396, i64 0, i32 0, i32 1
  %400 = load i32, i32* %399, align 8
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %398, i64 %401
  %403 = icmp eq %"struct.WTF::KeyValuePair.3022"* %393, %402
  br i1 %403, label %407, label %404

404:                                              ; preds = %388
  %405 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %393, i64 0, i32 1
  %406 = load i32, i32* %405, align 8
  br label %407

407:                                              ; preds = %404, %388
  %408 = phi i32 [ %406, %404 ], [ 0, %388 ]
  %409 = icmp slt i32 %389, %408
  br i1 %409, label %410, label %421

410:                                              ; preds = %407
  %411 = bitcast %"class.blink::Member.318"* %314 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.blink::Member.318"* %313 to i64*
  store atomic i64 %412, i64* %413 monotonic, align 8
  %414 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %410
  %417 = inttoptr i64 %412 to i8*
  %418 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %417) #15
  br label %419

419:                                              ; preds = %416, %410
  %420 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %314, i64 1
  br label %432

421:                                              ; preds = %407
  %422 = bitcast %"class.blink::Member.318"* %312 to i64*
  %423 = load i64, i64* %422, align 8
  %424 = bitcast %"class.blink::Member.318"* %313 to i64*
  store atomic i64 %423, i64* %424 monotonic, align 8
  %425 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %421
  %428 = inttoptr i64 %423 to i8*
  %429 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %428) #15
  br label %430

430:                                              ; preds = %427, %421
  %431 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %312, i64 1
  br label %432

432:                                              ; preds = %430, %419
  %433 = phi %"class.blink::Member.318"* [ %420, %419 ], [ %314, %430 ]
  %434 = phi %"class.blink::Member.318"* [ %312, %419 ], [ %431, %430 ]
  %435 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %313, i64 1
  %436 = icmp eq %"class.blink::Member.318"* %434, %306
  br i1 %436, label %993, label %311

437:                                              ; preds = %76, %437
  %438 = phi %"class.blink::Member.318"* [ %478, %437 ], [ %79, %76 ]
  %439 = phi %"class.blink::Member.318"* [ %479, %437 ], [ %80, %76 ]
  %440 = bitcast %"class.blink::Member.318"* %438 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.blink::Member.318"* %439 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 1
  %444 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 1
  %445 = bitcast %"class.blink::Member.318"* %443 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.blink::Member.318"* %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 2
  %449 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 2
  %450 = bitcast %"class.blink::Member.318"* %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.blink::Member.318"* %449 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 3
  %454 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 3
  %455 = bitcast %"class.blink::Member.318"* %453 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.blink::Member.318"* %454 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 4
  %459 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 4
  %460 = bitcast %"class.blink::Member.318"* %458 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.blink::Member.318"* %459 to i64*
  store i64 %461, i64* %462, align 8
  %463 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 5
  %464 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 5
  %465 = bitcast %"class.blink::Member.318"* %463 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.blink::Member.318"* %464 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 6
  %469 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 6
  %470 = bitcast %"class.blink::Member.318"* %468 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = bitcast %"class.blink::Member.318"* %469 to i64*
  store i64 %471, i64* %472, align 8
  %473 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 7
  %474 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 7
  %475 = bitcast %"class.blink::Member.318"* %473 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.blink::Member.318"* %474 to i64*
  store i64 %476, i64* %477, align 8
  %478 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %438, i64 8
  %479 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %439, i64 8
  %480 = icmp eq %"class.blink::Member.318"* %478, %30
  br i1 %480, label %304, label %437, !llvm.loop !69

481:                                              ; preds = %207, %611, %302
  %482 = phi %"class.blink::Member.318"* [ %226, %302 ], [ %208, %207 ], [ %653, %611 ]
  %483 = icmp eq %"class.blink::Member.318"* %482, %6
  br i1 %483, label %993, label %484

484:                                              ; preds = %481
  %485 = bitcast %"class.blink::PaintLayer"** %17 to i8*
  %486 = bitcast %"class.blink::PaintLayer"** %18 to i8*
  br label %487

487:                                              ; preds = %607, %484
  %488 = phi %"class.blink::Member.318"* [ %33, %484 ], [ %588, %607 ]
  %489 = phi %"class.blink::Member.318"* [ %482, %484 ], [ %609, %607 ]
  %490 = phi %"class.blink::Member.318"* [ %30, %484 ], [ %608, %607 ]
  %491 = icmp eq %"class.blink::Member.318"* %490, %29
  br i1 %491, label %492, label %507

492:                                              ; preds = %487, %505
  %493 = phi %"class.blink::Member.318"* [ %495, %505 ], [ %489, %487 ]
  %494 = phi %"class.blink::Member.318"* [ %496, %505 ], [ %488, %487 ]
  %495 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %493, i64 -1
  %496 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %494, i64 -1
  %497 = bitcast %"class.blink::Member.318"* %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = bitcast %"class.blink::Member.318"* %496 to i64*
  store atomic i64 %498, i64* %499 monotonic, align 8
  %500 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %505, label %502

502:                                              ; preds = %492
  %503 = inttoptr i64 %498 to i8*
  %504 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %503) #15
  br label %505

505:                                              ; preds = %502, %492
  %506 = icmp eq %"class.blink::Member.318"* %495, %6
  br i1 %506, label %993, label %492

507:                                              ; preds = %487
  %508 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %490, i64 -1
  %509 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %489, i64 -1
  %510 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %509, i64 0, i32 0, i32 0
  %511 = load %"class.blink::Node"*, %"class.blink::Node"** %510, align 8
  %512 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %508, i64 0, i32 0, i32 0
  %513 = load %"class.blink::Node"*, %"class.blink::Node"** %512, align 8
  %514 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %511, i64 0, i32 1
  %515 = load i32, i32* %514, align 8
  %516 = and i32 %515, 1
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %511, i64 0, i32 6, i32 0, i32 0
  br i1 %517, label %523, label %519

519:                                              ; preds = %507
  %520 = bitcast %"class.blink::NodeData"** %518 to %"class.blink::NodeRareData"**
  %521 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %520, align 8
  %522 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %521, i64 0, i32 1, i32 0, i32 0
  br label %525

523:                                              ; preds = %507
  %524 = bitcast %"class.blink::NodeData"** %518 to %"class.blink::NodeRenderingData"**
  br label %525

525:                                              ; preds = %523, %519
  %526 = phi %"class.blink::NodeRenderingData"** [ %522, %519 ], [ %524, %523 ]
  %527 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %527, i64 0, i32 1
  %529 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %528, align 8
  %530 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %513, i64 0, i32 1
  %531 = load i32, i32* %530, align 8
  %532 = and i32 %531, 1
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %513, i64 0, i32 6, i32 0, i32 0
  br i1 %533, label %539, label %535

535:                                              ; preds = %525
  %536 = bitcast %"class.blink::NodeData"** %534 to %"class.blink::NodeRareData"**
  %537 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %536, align 8
  %538 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %537, i64 0, i32 1, i32 0, i32 0
  br label %541

539:                                              ; preds = %525
  %540 = bitcast %"class.blink::NodeData"** %534 to %"class.blink::NodeRenderingData"**
  br label %541

541:                                              ; preds = %539, %535
  %542 = phi %"class.blink::NodeRenderingData"** [ %538, %535 ], [ %540, %539 ]
  %543 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %542, align 8
  %544 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %543, i64 0, i32 1
  %545 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %544, align 8
  %546 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %546, i64 0, i32 0, i32 0, i32 0
  %548 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %547, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %485) #15
  %549 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %529) #15
  store %"class.blink::PaintLayer"* %549, %"class.blink::PaintLayer"** %17, align 8
  %550 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %548, i64 0, i32 0
  %551 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %550, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %17) #15
  %552 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %551, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %485) #15
  %553 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %554, align 8
  %556 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %555, i64 0, i32 0, i32 0
  %557 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %556, align 8
  %558 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %555, i64 0, i32 0, i32 1
  %559 = load i32, i32* %558, align 8
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %557, i64 %560
  %562 = icmp eq %"struct.WTF::KeyValuePair.3022"* %552, %561
  br i1 %562, label %566, label %563

563:                                              ; preds = %541
  %564 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %552, i64 0, i32 1
  %565 = load i32, i32* %564, align 8
  br label %566

566:                                              ; preds = %563, %541
  %567 = phi i32 [ %565, %563 ], [ 0, %541 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #15
  %568 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %545) #15
  store %"class.blink::PaintLayer"* %568, %"class.blink::PaintLayer"** %18, align 8
  %569 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %555, i64 0, i32 0
  %570 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %569, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %18) #15
  %571 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %570, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #15
  %572 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %573 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %572, i64 0, i32 0, i32 0, i32 0
  %574 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %573, align 8
  %575 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %574, i64 0, i32 0, i32 0
  %576 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %575, align 8
  %577 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %574, i64 0, i32 0, i32 1
  %578 = load i32, i32* %577, align 8
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %576, i64 %579
  %581 = icmp eq %"struct.WTF::KeyValuePair.3022"* %571, %580
  br i1 %581, label %585, label %582

582:                                              ; preds = %566
  %583 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %571, i64 0, i32 1
  %584 = load i32, i32* %583, align 8
  br label %585

585:                                              ; preds = %582, %566
  %586 = phi i32 [ %584, %582 ], [ 0, %566 ]
  %587 = icmp slt i32 %567, %586
  %588 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %488, i64 -1
  br i1 %587, label %589, label %598

589:                                              ; preds = %585
  %590 = bitcast %"class.blink::Member.318"* %508 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.blink::Member.318"* %588 to i64*
  store atomic i64 %591, i64* %592 monotonic, align 8
  %593 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %607, label %595

595:                                              ; preds = %589
  %596 = inttoptr i64 %591 to i8*
  %597 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %596) #15
  br label %607

598:                                              ; preds = %585
  %599 = bitcast %"class.blink::Member.318"* %509 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = bitcast %"class.blink::Member.318"* %588 to i64*
  store atomic i64 %600, i64* %601 monotonic, align 8
  %602 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %607, label %604

604:                                              ; preds = %598
  %605 = inttoptr i64 %600 to i8*
  %606 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %605) #15
  br label %607

607:                                              ; preds = %604, %598, %595, %589
  %608 = phi %"class.blink::Member.318"* [ %508, %589 ], [ %508, %595 ], [ %490, %598 ], [ %490, %604 ]
  %609 = phi %"class.blink::Member.318"* [ %489, %589 ], [ %489, %595 ], [ %509, %598 ], [ %509, %604 ]
  %610 = icmp eq %"class.blink::Member.318"* %609, %6
  br i1 %610, label %993, label %487

611:                                              ; preds = %207, %611
  %612 = phi %"class.blink::Member.318"* [ %652, %611 ], [ %209, %207 ]
  %613 = phi %"class.blink::Member.318"* [ %653, %611 ], [ %210, %207 ]
  %614 = bitcast %"class.blink::Member.318"* %612 to i64*
  %615 = load i64, i64* %614, align 8
  %616 = bitcast %"class.blink::Member.318"* %613 to i64*
  store i64 %615, i64* %616, align 8
  %617 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 1
  %618 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 1
  %619 = bitcast %"class.blink::Member.318"* %617 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = bitcast %"class.blink::Member.318"* %618 to i64*
  store i64 %620, i64* %621, align 8
  %622 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 2
  %623 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 2
  %624 = bitcast %"class.blink::Member.318"* %622 to i64*
  %625 = load i64, i64* %624, align 8
  %626 = bitcast %"class.blink::Member.318"* %623 to i64*
  store i64 %625, i64* %626, align 8
  %627 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 3
  %628 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 3
  %629 = bitcast %"class.blink::Member.318"* %627 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = bitcast %"class.blink::Member.318"* %628 to i64*
  store i64 %630, i64* %631, align 8
  %632 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 4
  %633 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 4
  %634 = bitcast %"class.blink::Member.318"* %632 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = bitcast %"class.blink::Member.318"* %633 to i64*
  store i64 %635, i64* %636, align 8
  %637 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 5
  %638 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 5
  %639 = bitcast %"class.blink::Member.318"* %637 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = bitcast %"class.blink::Member.318"* %638 to i64*
  store i64 %640, i64* %641, align 8
  %642 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 6
  %643 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 6
  %644 = bitcast %"class.blink::Member.318"* %642 to i64*
  %645 = load i64, i64* %644, align 8
  %646 = bitcast %"class.blink::Member.318"* %643 to i64*
  store i64 %645, i64* %646, align 8
  %647 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 7
  %648 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 7
  %649 = bitcast %"class.blink::Member.318"* %647 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = bitcast %"class.blink::Member.318"* %648 to i64*
  store i64 %650, i64* %651, align 8
  %652 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %612, i64 8
  %653 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %613, i64 8
  %654 = icmp eq %"class.blink::Member.318"* %652, %33
  br i1 %654, label %481, label %611, !llvm.loop !70

655:                                              ; preds = %39, %735
  %656 = phi %"class.blink::Member.318"* [ %29, %39 ], [ %736, %735 ]
  %657 = phi i64 [ %32, %39 ], [ %737, %735 ]
  %658 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %659 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %656, i64 0, i32 0, i32 0
  %660 = load %"class.blink::Node"*, %"class.blink::Node"** %659, align 8
  %661 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %658, i64 0, i32 1
  %662 = load i32, i32* %661, align 8
  %663 = and i32 %662, 1
  %664 = icmp eq i32 %663, 0
  %665 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %658, i64 0, i32 6, i32 0, i32 0
  br i1 %664, label %670, label %666

666:                                              ; preds = %655
  %667 = bitcast %"class.blink::NodeData"** %665 to %"class.blink::NodeRareData"**
  %668 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %667, align 8
  %669 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %668, i64 0, i32 1, i32 0, i32 0
  br label %672

670:                                              ; preds = %655
  %671 = bitcast %"class.blink::NodeData"** %665 to %"class.blink::NodeRenderingData"**
  br label %672

672:                                              ; preds = %670, %666
  %673 = phi %"class.blink::NodeRenderingData"** [ %669, %666 ], [ %671, %670 ]
  %674 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %673, align 8
  %675 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %674, i64 0, i32 1
  %676 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %675, align 8
  %677 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %660, i64 0, i32 1
  %678 = load i32, i32* %677, align 8
  %679 = and i32 %678, 1
  %680 = icmp eq i32 %679, 0
  %681 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %660, i64 0, i32 6, i32 0, i32 0
  br i1 %680, label %686, label %682

682:                                              ; preds = %672
  %683 = bitcast %"class.blink::NodeData"** %681 to %"class.blink::NodeRareData"**
  %684 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %683, align 8
  %685 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %684, i64 0, i32 1, i32 0, i32 0
  br label %688

686:                                              ; preds = %672
  %687 = bitcast %"class.blink::NodeData"** %681 to %"class.blink::NodeRenderingData"**
  br label %688

688:                                              ; preds = %686, %682
  %689 = phi %"class.blink::NodeRenderingData"** [ %685, %682 ], [ %687, %686 ]
  %690 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %689, align 8
  %691 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %690, i64 0, i32 1
  %692 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %691, align 8
  %693 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %694 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %693, i64 0, i32 0, i32 0, i32 0
  %695 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %694, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  %696 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %676) #15
  store %"class.blink::PaintLayer"* %696, %"class.blink::PaintLayer"** %13, align 8
  %697 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %695, i64 0, i32 0
  %698 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %697, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %13) #15
  %699 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %698, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %700 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %701 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %700, i64 0, i32 0, i32 0, i32 0
  %702 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %701, align 8
  %703 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %702, i64 0, i32 0, i32 0
  %704 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %703, align 8
  %705 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %702, i64 0, i32 0, i32 1
  %706 = load i32, i32* %705, align 8
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %704, i64 %707
  %709 = icmp eq %"struct.WTF::KeyValuePair.3022"* %699, %708
  br i1 %709, label %713, label %710

710:                                              ; preds = %688
  %711 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %699, i64 0, i32 1
  %712 = load i32, i32* %711, align 8
  br label %713

713:                                              ; preds = %710, %688
  %714 = phi i32 [ %712, %710 ], [ 0, %688 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  %715 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %692) #15
  store %"class.blink::PaintLayer"* %715, %"class.blink::PaintLayer"** %14, align 8
  %716 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %702, i64 0, i32 0
  %717 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %716, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %14) #15
  %718 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %717, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %719 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %720 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %719, i64 0, i32 0, i32 0, i32 0
  %721 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %720, align 8
  %722 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %721, i64 0, i32 0, i32 0
  %723 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %722, align 8
  %724 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %721, i64 0, i32 0, i32 1
  %725 = load i32, i32* %724, align 8
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %723, i64 %726
  %728 = icmp eq %"struct.WTF::KeyValuePair.3022"* %718, %727
  br i1 %728, label %732, label %729

729:                                              ; preds = %713
  %730 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %718, i64 0, i32 1
  %731 = load i32, i32* %730, align 8
  br label %732

732:                                              ; preds = %713, %729
  %733 = phi i32 [ %731, %729 ], [ 0, %713 ]
  %734 = icmp slt i32 %714, %733
  br i1 %734, label %739, label %735

735:                                              ; preds = %732
  %736 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %656, i64 1
  %737 = add nsw i64 %657, -1
  %738 = icmp eq i64 %737, 0
  br i1 %738, label %993, label %655

739:                                              ; preds = %732
  %740 = icmp slt i64 %657, %31
  br i1 %740, label %741, label %844

741:                                              ; preds = %739
  %742 = sdiv i64 %31, 2
  %743 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %30, i64 %742
  %744 = ptrtoint %"class.blink::Member.318"* %30 to i64
  %745 = ptrtoint %"class.blink::Member.318"* %656 to i64
  %746 = sub i64 %744, %745
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %839, label %748

748:                                              ; preds = %741
  %749 = ashr exact i64 %746, 3
  %750 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %743, i64 0, i32 0, i32 0
  br label %751

751:                                              ; preds = %828, %748
  %752 = phi %"class.WTF::HashMap.2900"* [ %721, %748 ], [ %817, %828 ]
  %753 = phi i64 [ %749, %748 ], [ %835, %828 ]
  %754 = phi %"class.blink::Member.318"* [ %656, %748 ], [ %834, %828 ]
  %755 = lshr i64 %753, 1
  %756 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %754, i64 %755
  %757 = load %"class.blink::Node"*, %"class.blink::Node"** %750, align 8
  %758 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %756, i64 0, i32 0, i32 0
  %759 = load %"class.blink::Node"*, %"class.blink::Node"** %758, align 8
  %760 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %757, i64 0, i32 1
  %761 = load i32, i32* %760, align 8
  %762 = and i32 %761, 1
  %763 = icmp eq i32 %762, 0
  %764 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %757, i64 0, i32 6, i32 0, i32 0
  br i1 %763, label %769, label %765

765:                                              ; preds = %751
  %766 = bitcast %"class.blink::NodeData"** %764 to %"class.blink::NodeRareData"**
  %767 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %766, align 8
  %768 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %767, i64 0, i32 1, i32 0, i32 0
  br label %771

769:                                              ; preds = %751
  %770 = bitcast %"class.blink::NodeData"** %764 to %"class.blink::NodeRenderingData"**
  br label %771

771:                                              ; preds = %769, %765
  %772 = phi %"class.blink::NodeRenderingData"** [ %768, %765 ], [ %770, %769 ]
  %773 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %772, align 8
  %774 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %773, i64 0, i32 1
  %775 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %774, align 8
  %776 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %759, i64 0, i32 1
  %777 = load i32, i32* %776, align 8
  %778 = and i32 %777, 1
  %779 = icmp eq i32 %778, 0
  %780 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %759, i64 0, i32 6, i32 0, i32 0
  br i1 %779, label %785, label %781

781:                                              ; preds = %771
  %782 = bitcast %"class.blink::NodeData"** %780 to %"class.blink::NodeRareData"**
  %783 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %782, align 8
  %784 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %783, i64 0, i32 1, i32 0, i32 0
  br label %787

785:                                              ; preds = %771
  %786 = bitcast %"class.blink::NodeData"** %780 to %"class.blink::NodeRenderingData"**
  br label %787

787:                                              ; preds = %785, %781
  %788 = phi %"class.blink::NodeRenderingData"** [ %784, %781 ], [ %786, %785 ]
  %789 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %788, align 8
  %790 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %789, i64 0, i32 1
  %791 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %790, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %792 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %775) #15
  store %"class.blink::PaintLayer"* %792, %"class.blink::PaintLayer"** %11, align 8
  %793 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %752, i64 0, i32 0
  %794 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %793, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %11) #15
  %795 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %794, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  %796 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %797 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %796, i64 0, i32 0, i32 0, i32 0
  %798 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %797, align 8
  %799 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %798, i64 0, i32 0, i32 0
  %800 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %799, align 8
  %801 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %798, i64 0, i32 0, i32 1
  %802 = load i32, i32* %801, align 8
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %800, i64 %803
  %805 = icmp eq %"struct.WTF::KeyValuePair.3022"* %795, %804
  br i1 %805, label %809, label %806

806:                                              ; preds = %787
  %807 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %795, i64 0, i32 1
  %808 = load i32, i32* %807, align 8
  br label %809

809:                                              ; preds = %806, %787
  %810 = phi i32 [ %808, %806 ], [ 0, %787 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  %811 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %791) #15
  store %"class.blink::PaintLayer"* %811, %"class.blink::PaintLayer"** %12, align 8
  %812 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %798, i64 0, i32 0
  %813 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %812, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %12) #15
  %814 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %813, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %815 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %816 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %815, i64 0, i32 0, i32 0, i32 0
  %817 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %816, align 8
  %818 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %817, i64 0, i32 0, i32 0
  %819 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %818, align 8
  %820 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %817, i64 0, i32 0, i32 1
  %821 = load i32, i32* %820, align 8
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %819, i64 %822
  %824 = icmp eq %"struct.WTF::KeyValuePair.3022"* %814, %823
  br i1 %824, label %828, label %825

825:                                              ; preds = %809
  %826 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %814, i64 0, i32 1
  %827 = load i32, i32* %826, align 8
  br label %828

828:                                              ; preds = %825, %809
  %829 = phi i32 [ %827, %825 ], [ 0, %809 ]
  %830 = icmp slt i32 %810, %829
  %831 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %756, i64 1
  %832 = xor i64 %755, -1
  %833 = add i64 %753, %832
  %834 = select i1 %830, %"class.blink::Member.318"* %754, %"class.blink::Member.318"* %831
  %835 = select i1 %830, i64 %755, i64 %833
  %836 = icmp eq i64 %835, 0
  br i1 %836, label %837, label %751

837:                                              ; preds = %828
  %838 = ptrtoint %"class.blink::Member.318"* %834 to i64
  br label %839

839:                                              ; preds = %837, %741
  %840 = phi i64 [ %838, %837 ], [ %745, %741 ]
  %841 = phi %"class.blink::Member.318"* [ %834, %837 ], [ %656, %741 ]
  %842 = sub i64 %840, %745
  %843 = ashr exact i64 %842, 3
  br label %967

844:                                              ; preds = %739
  %845 = icmp eq i64 %657, 1
  br i1 %845, label %846, label %864

846:                                              ; preds = %844
  %847 = bitcast %"class.blink::Member.318"* %656 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = bitcast %"class.blink::Member.318"* %30 to i64*
  %850 = load i64, i64* %849, align 8
  store atomic i64 %850, i64* %847 monotonic, align 8
  store atomic i64 %848, i64* %849 monotonic, align 8
  %851 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %857, label %853

853:                                              ; preds = %846
  %854 = bitcast %"class.blink::Member.318"* %656 to i8**
  %855 = load i8*, i8** %854, align 8
  %856 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %855) #15
  br label %857

857:                                              ; preds = %853, %846
  %858 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %993, label %860

860:                                              ; preds = %857
  %861 = bitcast %"class.blink::Member.318"* %30 to i8**
  %862 = load i8*, i8** %861, align 8
  %863 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %862) #15
  br label %993

864:                                              ; preds = %844
  %865 = sdiv i64 %657, 2
  %866 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %656, i64 %865
  %867 = ptrtoint %"class.blink::Member.318"* %33 to i64
  %868 = ptrtoint %"class.blink::Member.318"* %30 to i64
  %869 = sub i64 %867, %868
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %962, label %871

871:                                              ; preds = %864
  %872 = ashr exact i64 %869, 3
  %873 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %866, i64 0, i32 0, i32 0
  br label %874

874:                                              ; preds = %951, %871
  %875 = phi %"class.WTF::HashMap.2900"* [ %721, %871 ], [ %940, %951 ]
  %876 = phi i64 [ %872, %871 ], [ %958, %951 ]
  %877 = phi %"class.blink::Member.318"* [ %30, %871 ], [ %957, %951 ]
  %878 = lshr i64 %876, 1
  %879 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %877, i64 %878
  %880 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %879, i64 0, i32 0, i32 0
  %881 = load %"class.blink::Node"*, %"class.blink::Node"** %880, align 8
  %882 = load %"class.blink::Node"*, %"class.blink::Node"** %873, align 8
  %883 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %881, i64 0, i32 1
  %884 = load i32, i32* %883, align 8
  %885 = and i32 %884, 1
  %886 = icmp eq i32 %885, 0
  %887 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %881, i64 0, i32 6, i32 0, i32 0
  br i1 %886, label %892, label %888

888:                                              ; preds = %874
  %889 = bitcast %"class.blink::NodeData"** %887 to %"class.blink::NodeRareData"**
  %890 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %889, align 8
  %891 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %890, i64 0, i32 1, i32 0, i32 0
  br label %894

892:                                              ; preds = %874
  %893 = bitcast %"class.blink::NodeData"** %887 to %"class.blink::NodeRenderingData"**
  br label %894

894:                                              ; preds = %892, %888
  %895 = phi %"class.blink::NodeRenderingData"** [ %891, %888 ], [ %893, %892 ]
  %896 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %895, align 8
  %897 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %896, i64 0, i32 1
  %898 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %897, align 8
  %899 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %882, i64 0, i32 1
  %900 = load i32, i32* %899, align 8
  %901 = and i32 %900, 1
  %902 = icmp eq i32 %901, 0
  %903 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %882, i64 0, i32 6, i32 0, i32 0
  br i1 %902, label %908, label %904

904:                                              ; preds = %894
  %905 = bitcast %"class.blink::NodeData"** %903 to %"class.blink::NodeRareData"**
  %906 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %905, align 8
  %907 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %906, i64 0, i32 1, i32 0, i32 0
  br label %910

908:                                              ; preds = %894
  %909 = bitcast %"class.blink::NodeData"** %903 to %"class.blink::NodeRenderingData"**
  br label %910

910:                                              ; preds = %908, %904
  %911 = phi %"class.blink::NodeRenderingData"** [ %907, %904 ], [ %909, %908 ]
  %912 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %911, align 8
  %913 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %912, i64 0, i32 1
  %914 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %913, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %915 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %898) #15
  store %"class.blink::PaintLayer"* %915, %"class.blink::PaintLayer"** %9, align 8
  %916 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %875, i64 0, i32 0
  %917 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %916, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %9) #15
  %918 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %917, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %919 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %920 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %919, i64 0, i32 0, i32 0, i32 0
  %921 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %920, align 8
  %922 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %921, i64 0, i32 0, i32 0
  %923 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %922, align 8
  %924 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %921, i64 0, i32 0, i32 1
  %925 = load i32, i32* %924, align 8
  %926 = zext i32 %925 to i64
  %927 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %923, i64 %926
  %928 = icmp eq %"struct.WTF::KeyValuePair.3022"* %918, %927
  br i1 %928, label %932, label %929

929:                                              ; preds = %910
  %930 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %918, i64 0, i32 1
  %931 = load i32, i32* %930, align 8
  br label %932

932:                                              ; preds = %929, %910
  %933 = phi i32 [ %931, %929 ], [ 0, %910 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %934 = call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"* %914) #15
  store %"class.blink::PaintLayer"* %934, %"class.blink::PaintLayer"** %10, align 8
  %935 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %921, i64 0, i32 0
  %936 = call { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"* %935, %"class.blink::PaintLayer"** nonnull dereferenceable(8) %10) #15
  %937 = extractvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %936, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %938 = load %"class.std::__1::unique_ptr.2897"*, %"class.std::__1::unique_ptr.2897"** %21, align 8
  %939 = getelementptr inbounds %"class.std::__1::unique_ptr.2897", %"class.std::__1::unique_ptr.2897"* %938, i64 0, i32 0, i32 0, i32 0
  %940 = load %"class.WTF::HashMap.2900"*, %"class.WTF::HashMap.2900"** %939, align 8
  %941 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %940, i64 0, i32 0, i32 0
  %942 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %941, align 8
  %943 = getelementptr inbounds %"class.WTF::HashMap.2900", %"class.WTF::HashMap.2900"* %940, i64 0, i32 0, i32 1
  %944 = load i32, i32* %943, align 8
  %945 = zext i32 %944 to i64
  %946 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %942, i64 %945
  %947 = icmp eq %"struct.WTF::KeyValuePair.3022"* %937, %946
  br i1 %947, label %951, label %948

948:                                              ; preds = %932
  %949 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %937, i64 0, i32 1
  %950 = load i32, i32* %949, align 8
  br label %951

951:                                              ; preds = %948, %932
  %952 = phi i32 [ %950, %948 ], [ 0, %932 ]
  %953 = icmp slt i32 %933, %952
  %954 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %879, i64 1
  %955 = xor i64 %878, -1
  %956 = add i64 %876, %955
  %957 = select i1 %953, %"class.blink::Member.318"* %954, %"class.blink::Member.318"* %877
  %958 = select i1 %953, i64 %956, i64 %878
  %959 = icmp eq i64 %958, 0
  br i1 %959, label %960, label %874

960:                                              ; preds = %951
  %961 = ptrtoint %"class.blink::Member.318"* %957 to i64
  br label %962

962:                                              ; preds = %960, %864
  %963 = phi i64 [ %961, %960 ], [ %868, %864 ]
  %964 = phi %"class.blink::Member.318"* [ %957, %960 ], [ %30, %864 ]
  %965 = sub i64 %963, %868
  %966 = ashr exact i64 %965, 3
  br label %967

967:                                              ; preds = %962, %839
  %968 = phi %"class.blink::Member.318"* [ %841, %839 ], [ %866, %962 ]
  %969 = phi %"class.blink::Member.318"* [ %743, %839 ], [ %964, %962 ]
  %970 = phi i64 [ %843, %839 ], [ %865, %962 ]
  %971 = phi i64 [ %742, %839 ], [ %966, %962 ]
  %972 = sub nsw i64 %657, %970
  %973 = sub nsw i64 %31, %971
  %974 = icmp eq %"class.blink::Member.318"* %968, %30
  br i1 %974, label %979, label %975

975:                                              ; preds = %967
  %976 = icmp eq %"class.blink::Member.318"* %30, %969
  br i1 %976, label %979, label %977

977:                                              ; preds = %975
  %978 = call %"class.blink::Member.318"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_4NodeEEEEET_S6_S6_S6_(%"class.blink::Member.318"* %968, %"class.blink::Member.318"* %30, %"class.blink::Member.318"* %969) #15
  br label %979

979:                                              ; preds = %967, %975, %977
  %980 = phi %"class.blink::Member.318"* [ %978, %977 ], [ %969, %967 ], [ %968, %975 ]
  %981 = add nsw i64 %971, %970
  %982 = add nsw i64 %973, %972
  %983 = icmp slt i64 %981, %982
  br i1 %983, label %984, label %985

984:                                              ; preds = %979
  call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl"(%"class.blink::Member.318"* %656, %"class.blink::Member.318"* %968, %"class.blink::Member.318"* %980, %class.anon.3103* dereferenceable(8) %3, i64 %970, i64 %971, %"class.blink::Member.318"* %6, i64 %7)
  br label %986

985:                                              ; preds = %979
  call fastcc void @"_ZNSt3__115__inplace_mergeIRZN5blink17InspectorContrast24SortElementsByPaintOrderERNS1_10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEPNS1_8DocumentEE3$_2PS6_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl"(%"class.blink::Member.318"* %980, %"class.blink::Member.318"* %969, %"class.blink::Member.318"* %33, %class.anon.3103* dereferenceable(8) %3, i64 %972, i64 %973, %"class.blink::Member.318"* %6, i64 %7)
  br label %986

986:                                              ; preds = %984, %985
  %987 = phi %"class.blink::Member.318"* [ %33, %984 ], [ %980, %985 ]
  %988 = phi i64 [ %972, %984 ], [ %970, %985 ]
  %989 = phi i64 [ %973, %984 ], [ %971, %985 ]
  %990 = phi %"class.blink::Member.318"* [ %969, %984 ], [ %968, %985 ]
  %991 = phi %"class.blink::Member.318"* [ %980, %984 ], [ %656, %985 ]
  %992 = icmp eq i64 %989, 0
  br i1 %992, label %993, label %28

993:                                              ; preds = %986, %37, %735, %432, %327, %607, %505, %8, %860, %857, %481, %304, %176, %45
  ret void
}

declare %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject13PaintingLayerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } @_ZN3WTF9HashTableIPN5blink10PaintLayerENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE4findERKS3_(%"class.WTF::HashTable.3019"*, %"class.blink::PaintLayer"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3019", %"class.WTF::HashTable.3019"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3022"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.3019", %"class.WTF::HashTable.3019"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::PaintLayer"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %34, i64 0, i32 0
  %36 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::PaintLayer"*
  %38 = icmp eq %"class.blink::PaintLayer"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::PaintLayer"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::PaintLayer"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %63, i64 0, i32 0
  %65 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %64, align 8
  %66 = icmp eq %"class.blink::PaintLayer"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3022"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3022"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3022", %"struct.WTF::KeyValuePair.3022"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.3022"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.3022"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } undef, %"struct.WTF::KeyValuePair.3022"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %79, %"struct.WTF::KeyValuePair.3022"* %78, 1
  ret { %"struct.WTF::KeyValuePair.3022"*, %"struct.WTF::KeyValuePair.3022"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.318"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_4NodeEEEEET_S6_S6_S6_(%"class.blink::Member.318"*, %"class.blink::Member.318"*, %"class.blink::Member.318"*) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %30, %3
  %5 = phi %"class.blink::Member.318"* [ %1, %3 ], [ %31, %30 ]
  %6 = phi %"class.blink::Member.318"* [ %0, %3 ], [ %26, %30 ]
  %7 = phi %"class.blink::Member.318"* [ %1, %3 ], [ %27, %30 ]
  %8 = bitcast %"class.blink::Member.318"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::Member.318"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  store atomic i64 %11, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::Member.318"* %6 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #15
  br label %18

18:                                               ; preds = %14, %4
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::Member.318"* %7 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #15
  br label %25

25:                                               ; preds = %18, %21
  %26 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %6, i64 1
  %27 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %7, i64 1
  %28 = icmp eq %"class.blink::Member.318"* %27, %2
  %29 = icmp eq %"class.blink::Member.318"* %26, %5
  br i1 %28, label %32, label %30

30:                                               ; preds = %25
  %31 = select i1 %29, %"class.blink::Member.318"* %27, %"class.blink::Member.318"* %5
  br label %4

32:                                               ; preds = %25
  br i1 %29, label %65, label %33

33:                                               ; preds = %32, %63
  %34 = phi %"class.blink::Member.318"* [ %64, %63 ], [ %5, %32 ]
  %35 = phi %"class.blink::Member.318"* [ %58, %63 ], [ %26, %32 ]
  %36 = phi %"class.blink::Member.318"* [ %59, %63 ], [ %5, %32 ]
  br label %37

37:                                               ; preds = %33, %62
  %38 = phi %"class.blink::Member.318"* [ %58, %62 ], [ %35, %33 ]
  %39 = phi %"class.blink::Member.318"* [ %34, %62 ], [ %36, %33 ]
  %40 = bitcast %"class.blink::Member.318"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member.318"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.blink::Member.318"* %38 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %46, %37
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member.318"* %39 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #15
  br label %57

57:                                               ; preds = %50, %53
  %58 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %38, i64 1
  %59 = getelementptr inbounds %"class.blink::Member.318", %"class.blink::Member.318"* %39, i64 1
  %60 = icmp eq %"class.blink::Member.318"* %59, %2
  %61 = icmp eq %"class.blink::Member.318"* %58, %34
  br i1 %60, label %62, label %63

62:                                               ; preds = %57
  br i1 %61, label %65, label %37

63:                                               ; preds = %57
  %64 = select i1 %61, %"class.blink::Member.318"* %59, %"class.blink::Member.318"* %34
  br label %33

65:                                               ; preds = %62, %32
  ret %"class.blink::Member.318"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPN5blink4NodeEEJEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPN5blink4NodeEEJEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base13BindRepeatingIRPFbPN5blink4NodeEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!8 = distinct !{!8, !"_ZN4base13BindRepeatingIRPFbPN5blink4NodeEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!9 = distinct !{!9, !10, !"_ZN3WTF13BindRepeatingIPFbPN5blink4NodeEEJES4_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF13BindRepeatingIPFbPN5blink4NodeEEJES4_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{!"branch_weights", i32 4001, i32 4000000}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZZN5blink17InspectorContrast33CollectNodesAndBuildRTreeIfNeededEvENK3$_1clERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEm: argument 0"}
!15 = distinct !{!15, !"_ZZN5blink17InspectorContrast33CollectNodesAndBuildRTreeIfNeededEvENK3$_1clERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEEm"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.isvectorized", i32 1}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !22}
!26 = distinct !{!26, !24}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !22}
!33 = distinct !{!33, !24}
!34 = distinct !{!34, !22}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !22}
!41 = distinct !{!41, !24}
!42 = distinct !{!42, !24}
!43 = distinct !{!43, !22}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !22}
!50 = distinct !{!50, !24}
!51 = distinct !{!51, !24}
!52 = distinct !{!52, !22}
!53 = distinct !{!53, !24}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !22}
!60 = distinct !{!60, !24}
!61 = distinct !{!61, !24}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !22}
!68 = distinct !{!68, !24}
!69 = distinct !{!69, !22}
!70 = distinct !{!70, !22}
