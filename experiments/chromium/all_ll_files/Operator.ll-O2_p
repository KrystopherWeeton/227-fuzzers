; ModuleID = '../../third_party/angle/src/compiler/translator/Operator.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/Operator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"++\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c".length()\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"equal\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"notEqual\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"lessThan\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"greaterThan\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"lessThanEqual\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"greaterThanEqual\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"^^\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"<<\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c">>\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"radians\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"degrees\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"exp2\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"inversesqrt\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"roundEven\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"modf\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"clamp\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"mix\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"smoothstep\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"isnan\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"isinf\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"fma\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"floatBitsToInt\00", align 1
@.str.74 = private unnamed_addr constant [16 x i8] c"floatBitsToUint\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"intBitsToFloat\00", align 1
@.str.76 = private unnamed_addr constant [16 x i8] c"uintBitsToFloat\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"frexp\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"ldexp\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"packSnorm2x16\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"packUnorm2x16\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"packHalf2x16\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c"unpackSnorm2x16\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"unpackUnorm2x16\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"unpackHalf2x16\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"packUnorm4x8\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"packSnorm4x8\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"unpackUnorm4x8\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"unpackSnorm4x8\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c"distance\00", align 1
@.str.91 = private unnamed_addr constant [4 x i8] c"dot\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"cross\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"faceforward\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"reflect\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"refract\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"dFdx\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"dFdy\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"fwidth\00", align 1
@.str.100 = private unnamed_addr constant [15 x i8] c"matrixCompMult\00", align 1
@.str.101 = private unnamed_addr constant [13 x i8] c"outerProduct\00", align 1
@.str.102 = private unnamed_addr constant [10 x i8] c"transpose\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"determinant\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.106 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.108 = private unnamed_addr constant [16 x i8] c"bitfieldExtract\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"bitfieldInsert\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"bitfieldReverse\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"bitCount\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"findLSB\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"findMSB\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"uaddCarry\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"usubBorrow\00", align 1
@.str.116 = private unnamed_addr constant [13 x i8] c"umulExtended\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"imulExtended\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"kill\00", align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.120 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.122 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"+=\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"-=\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"*=\00", align 1
@.str.126 = private unnamed_addr constant [3 x i8] c"/=\00", align 1
@.str.127 = private unnamed_addr constant [3 x i8] c"%=\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"<<=\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c">>=\00", align 1
@.str.130 = private unnamed_addr constant [3 x i8] c"&=\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"^=\00", align 1
@.str.132 = private unnamed_addr constant [3 x i8] c"|=\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"barrier\00", align 1
@.str.134 = private unnamed_addr constant [14 x i8] c"memoryBarrier\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"memoryBarrierAtomicCounter\00", align 1
@.str.136 = private unnamed_addr constant [20 x i8] c"memoryBarrierBuffer\00", align 1
@.str.137 = private unnamed_addr constant [19 x i8] c"memoryBarrierImage\00", align 1
@.str.138 = private unnamed_addr constant [20 x i8] c"memoryBarrierShared\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"groupMemoryBarrier\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"atomicAdd\00", align 1
@.str.141 = private unnamed_addr constant [10 x i8] c"atomicMin\00", align 1
@.str.142 = private unnamed_addr constant [10 x i8] c"atomicMax\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"atomicAnd\00", align 1
@.str.144 = private unnamed_addr constant [9 x i8] c"atomicOr\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"atomicXor\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"atomicExchange\00", align 1
@.str.147 = private unnamed_addr constant [15 x i8] c"atomicCompSwap\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c"EmitVertex\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"EndPrimitive\00", align 1
@.str.150 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@switch.table._Z17GetOperatorString9TOperator = private unnamed_addr constant [256 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_Z17GetOperatorString9TOperator(i8 zeroext) local_unnamed_addr #0 {
  %2 = xor i8 %0, -128
  %3 = zext i8 %2 to i64
  %4 = getelementptr inbounds [256 x i8*], [256 x i8*]* @switch.table._Z17GetOperatorString9TOperator, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z12IsAssignment9TOperator(i8 zeroext) local_unnamed_addr #0 {
  switch i8 %0, label %2 [
    i8 8, label %3
    i8 9, label %3
    i8 10, label %3
    i8 11, label %3
    i8 -118, label %3
    i8 -116, label %3
    i8 -115, label %3
    i8 -114, label %3
    i8 -113, label %3
    i8 -112, label %3
    i8 -111, label %3
    i8 -110, label %3
    i8 -109, label %3
    i8 -108, label %3
    i8 -107, label %3
    i8 -106, label %3
    i8 -105, label %3
    i8 -104, label %3
    i8 -103, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z16IsAtomicFunction9TOperator(i8 zeroext) local_unnamed_addr #0 {
  %2 = zext i8 %0 to i32
  %3 = add nsw i32 %2, -161
  %4 = icmp ult i32 %3, 8
  ret i1 %4
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
