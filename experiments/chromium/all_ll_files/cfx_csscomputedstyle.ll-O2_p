; ModuleID = '../../third_party/pdfium/core/fxcrt/css/cfx_csscomputedstyle.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/css/cfx_csscomputedstyle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CSSComputedStyle = type { %"class.fxcrt::Retainable", %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.std::__1::vector.5" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.CFX_CSSComputedStyle::InheritedData" = type <{ %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %"class.fxcrt::RetainPtr", float, float, i32, i16, i8, i8, i8, [7 x i8] }>
%class.CFX_CSSLength = type { i8, float }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_CSSValueList* }
%class.CFX_CSSValueList = type { %class.CFX_CSSValue.base, %"class.std::__1::vector" }
%class.CFX_CSSValue.base = type <{ %"class.fxcrt::Retainable", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.0"*, %"class.fxcrt::RetainPtr.0"*, %"class.std::__1::__compressed_pair.1" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CFX_CSSValue* }
%class.CFX_CSSValue = type <{ %"class.fxcrt::Retainable", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.fxcrt::RetainPtr.0"* }
%"class.CFX_CSSComputedStyle::NonInheritedData" = type <{ %class.CFX_CSSRect, %class.CFX_CSSRect, %class.CFX_CSSRect, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.CFX_CSSRect = type { %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength, %class.CFX_CSSLength }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty*, %"class.std::__1::__compressed_pair.13" }
%class.CFX_CSSCustomProperty = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.7" }
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_CSSCustomProperty* }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%class.CFX_CSSStringValue = type { %class.CFX_CSSValue.base, %"class.fxcrt::WideString" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI21CFX_CSSCustomPropertyNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@_ZTV20CFX_CSSComputedStyle = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_CSSComputedStyle*)* @_ZN20CFX_CSSComputedStyleD2Ev to i8*), i8* bitcast (void (%class.CFX_CSSComputedStyle*)* @_ZN20CFX_CSSComputedStyleD0Ev to i8*)] }, align 8

@_ZN20CFX_CSSComputedStyleC1Ev = hidden unnamed_addr alias void (%class.CFX_CSSComputedStyle*), void (%class.CFX_CSSComputedStyle*)* @_ZN20CFX_CSSComputedStyleC2Ev
@_ZN20CFX_CSSComputedStyleD1Ev = hidden unnamed_addr alias void (%class.CFX_CSSComputedStyle*), void (%class.CFX_CSSComputedStyle*)* @_ZN20CFX_CSSComputedStyleD2Ev
@_ZN20CFX_CSSComputedStyle13InheritedDataC1Ev = hidden unnamed_addr alias void (%"class.CFX_CSSComputedStyle::InheritedData"*), void (%"class.CFX_CSSComputedStyle::InheritedData"*)* @_ZN20CFX_CSSComputedStyle13InheritedDataC2Ev
@_ZN20CFX_CSSComputedStyle13InheritedDataD1Ev = hidden unnamed_addr alias void (%"class.CFX_CSSComputedStyle::InheritedData"*), void (%"class.CFX_CSSComputedStyle::InheritedData"*)* @_ZN20CFX_CSSComputedStyle13InheritedDataD2Ev
@_ZN20CFX_CSSComputedStyle16NonInheritedDataC1Ev = hidden unnamed_addr alias void (%"class.CFX_CSSComputedStyle::NonInheritedData"*), void (%"class.CFX_CSSComputedStyle::NonInheritedData"*)* @_ZN20CFX_CSSComputedStyle16NonInheritedDataC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyleC2Ev(%class.CFX_CSSComputedStyle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CFX_CSSComputedStyle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 0, i32 0
  store i8 2, i8* %4, align 4
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 0, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 1, i32 0
  store i8 2, i8* %6, align 4
  %7 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 1, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 2, i32 0
  store i8 3, i8* %8, align 4
  %9 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 3
  %11 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 4
  store float 1.200000e+01, float* %12, align 8
  %13 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 5
  store float 1.400000e+01, float* %13, align 4
  %14 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 6
  store i32 -16777216, i32* %14, align 8
  %15 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 7
  store i16 400, i16* %15, align 4
  %16 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 8
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 9
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 10
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i8 3, i8* %19, align 4
  %20 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i8 3, i8* %21, align 4
  %22 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 1, i32 1
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  store i8 3, i8* %23, align 4
  %24 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 3, i32 0
  store i8 3, i8* %25, align 4
  %26 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 3, i32 1
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  store i8 3, i8* %27, align 4
  %28 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  store i8 3, i8* %29, align 4
  %30 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 1, i32 1
  store float 0.000000e+00, float* %30, align 4
  %31 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 2, i32 0
  store i8 3, i8* %31, align 4
  %32 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 3, i32 0
  store i8 3, i8* %33, align 4
  %34 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1, i32 3, i32 1
  store float 0.000000e+00, float* %34, align 4
  %35 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i8 3, i8* %35, align 4
  %36 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  store float 0.000000e+00, float* %36, align 4
  %37 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 1, i32 0
  store i8 3, i8* %37, align 4
  %38 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 1, i32 1
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 2, i32 0
  store i8 3, i8* %39, align 4
  %40 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 2, i32 1
  store float 0.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 3, i32 0
  store i8 3, i8* %41, align 4
  %42 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 3, i32 1
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 7
  store float 0.000000e+00, float* %43, align 4
  %44 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 8
  store i8 3, i8* %44, align 4
  %45 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 0, i64 5, i1 false) #13
  %46 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::vector.5"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyleD2Ev(%class.CFX_CSSComputedStyle* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CFX_CSSComputedStyle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %3, i64 0, i32 0, i32 0
  %5 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %4, align 8
  %6 = icmp eq %class.CFX_CSSCustomProperty* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.CFX_CSSCustomProperty* %5 to i8*
  %9 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %9, align 8
  %11 = icmp eq %class.CFX_CSSCustomProperty* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %class.CFX_CSSCustomProperty* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %13, i64 -1
  tail call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* %14) #13
  %15 = icmp eq %class.CFX_CSSCustomProperty* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.5"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %class.CFX_CSSCustomProperty* %5, %class.CFX_CSSCustomProperty** %9, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %22, align 8
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %22, align 8
  %24 = icmp eq %class.CFX_CSSValueList* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %23, i64 0, i32 0, i32 0
  %32 = bitcast %class.CFX_CSSValueList* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #13
  br label %36

36:                                               ; preds = %21, %25, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyleD0Ev(%class.CFX_CSSComputedStyle*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV20CFX_CSSComputedStyle, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %3, i64 0, i32 0, i32 0
  %5 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %4, align 8
  %6 = icmp eq %class.CFX_CSSCustomProperty* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.CFX_CSSCustomProperty* %5 to i8*
  %9 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %9, align 8
  %11 = icmp eq %class.CFX_CSSCustomProperty* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %class.CFX_CSSCustomProperty* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %13, i64 -1
  tail call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* %14) #13
  %15 = icmp eq %class.CFX_CSSCustomProperty* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.5"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %class.CFX_CSSCustomProperty* %5, %class.CFX_CSSCustomProperty** %9, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %19, %1
  %22 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %22, align 8
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %22, align 8
  %24 = icmp eq %class.CFX_CSSValueList* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %23, i64 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %23, i64 0, i32 0, i32 0
  %32 = bitcast %class.CFX_CSSValueList* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #13
  br label %36

36:                                               ; preds = %21, %25, %30
  %37 = bitcast %class.CFX_CSSComputedStyle* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK20CFX_CSSComputedStyle14GetCustomStyleERKN5fxcrt10WideStringEPS1_(%class.CFX_CSSComputedStyle*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %6, align 8
  %8 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %8, align 8
  %10 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  br label %11

11:                                               ; preds = %14, %3
  %12 = phi %class.CFX_CSSCustomProperty* [ %7, %3 ], [ %15, %14 ]
  %13 = icmp eq %class.CFX_CSSCustomProperty* %12, %9
  br i1 %13, label %22, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %12, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %16 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %15, i64 0, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* dereferenceable(8) %16) #13
  %17 = call zeroext i1 @_ZNK5fxcrt10WideStringeqERKS0_(%"class.fxcrt::WideString"* %1, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br i1 %17, label %18, label %11

18:                                               ; preds = %14
  %19 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %12, i64 -1, i32 1
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %5, %"class.fxcrt::WideString"* dereferenceable(8) %20) #13
  %21 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %2, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i1 [ true, %18 ], [ false, %11 ]
  ret i1 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5fxcrt10WideStringeqERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20CFX_CSSComputedStyle17GetLastFontFamilyEv(%"class.pdfium::Optional"* noalias sret, %class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %4, align 8
  %6 = icmp eq %class.CFX_CSSValueList* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.fxcrt::RetainPtr.0"*, %"class.fxcrt::RetainPtr.0"** %8, align 8
  %10 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %5, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.fxcrt::RetainPtr.0"*, %"class.fxcrt::RetainPtr.0"** %10, align 8
  %12 = icmp eq %"class.fxcrt::RetainPtr.0"* %9, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  br label %41

15:                                               ; preds = %7
  %16 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr.0", %"class.fxcrt::RetainPtr.0"* %11, i64 -1
  %18 = bitcast %"class.fxcrt::RetainPtr.0"* %17 to %class.CFX_CSSStringValue**
  %19 = load %class.CFX_CSSStringValue*, %class.CFX_CSSStringValue** %18, align 8, !noalias !2
  %20 = icmp eq %class.CFX_CSSStringValue* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.CFX_CSSStringValue, %class.CFX_CSSStringValue* %19, i64 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !2
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8, !noalias !2
  %25 = getelementptr inbounds %class.CFX_CSSStringValue, %class.CFX_CSSStringValue* %19, i64 0, i32 1
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %3, %"class.fxcrt::WideString"* dereferenceable(8) %25) #13
  %26 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %26, align 8
  %27 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %27, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  %28 = load i64, i64* %22, align 8
  %29 = add nsw i64 %28, -1
  store i64 %29, i64* %22, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.CFX_CSSStringValue, %class.CFX_CSSStringValue* %19, i64 0, i32 0, i32 0
  %33 = bitcast %class.CFX_CSSStringValue* %19 to void (%"class.fxcrt::Retainable"*)***
  %34 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, i64 1
  %36 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, align 8
  call void %36(%"class.fxcrt::Retainable"* nonnull %32) #13
  br label %40

37:                                               ; preds = %15
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %3, %"class.fxcrt::WideString"* nonnull dereferenceable(8) inttoptr (i64 24 to %"class.fxcrt::WideString"*)) #13
  %38 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %39, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #13
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #13
  br label %40

40:                                               ; preds = %37, %21, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %41

41:                                               ; preds = %40, %13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK20CFX_CSSComputedStyle13GetFontWeightEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 7
  %3 = load i16, i16* %2, align 4
  ret i16 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK20CFX_CSSComputedStyle14GetFontVariantEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 8
  %3 = load i8, i8* %2, align 2
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK20CFX_CSSComputedStyle12GetFontStyleEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 9
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK20CFX_CSSComputedStyle11GetFontSizeEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 4
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK20CFX_CSSComputedStyle8GetColorEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle13SetFontWeightEt(%class.CFX_CSSComputedStyle* nocapture, i16 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 7
  store i16 %1, i16* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle14SetFontVariantE18CFX_CSSFontVariant(%class.CFX_CSSComputedStyle* nocapture, i8 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 8
  store i8 %1, i8* %3, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle12SetFontStyleE16CFX_CSSFontStyle(%class.CFX_CSSComputedStyle* nocapture, i8 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 9
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle11SetFontSizeEf(%class.CFX_CSSComputedStyle* nocapture, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 4
  store float %1, float* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle8SetColorEj(%class.CFX_CSSComputedStyle* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_CSSRect* @_ZNK20CFX_CSSComputedStyle14GetBorderWidthEv(%class.CFX_CSSComputedStyle* readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 12
  %3 = load i8, i8* %2, align 8, !range !5
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 1
  %6 = select i1 %4, %class.CFX_CSSRect* null, %class.CFX_CSSRect* %5
  ret %class.CFX_CSSRect* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_CSSRect* @_ZNK20CFX_CSSComputedStyle14GetMarginWidthEv(%class.CFX_CSSComputedStyle* readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 11
  %3 = load i8, i8* %2, align 1, !range !5
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0
  %6 = select i1 %4, %class.CFX_CSSRect* null, %class.CFX_CSSRect* %5
  ret %class.CFX_CSSRect* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_CSSRect* @_ZNK20CFX_CSSComputedStyle15GetPaddingWidthEv(%class.CFX_CSSComputedStyle* readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 13
  %3 = load i8, i8* %2, align 1, !range !5
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2
  %6 = select i1 %4, %class.CFX_CSSRect* null, %class.CFX_CSSRect* %5
  ret %class.CFX_CSSRect* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle14SetMarginWidthERK11CFX_CSSRect(%class.CFX_CSSComputedStyle* nocapture, %class.CFX_CSSRect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFX_CSSRect, %class.CFX_CSSRect* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 11
  store i8 1, i8* %5, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle15SetPaddingWidthERK11CFX_CSSRect(%class.CFX_CSSComputedStyle* nocapture, %class.CFX_CSSRect* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFX_CSSRect, %class.CFX_CSSRect* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 13
  store i8 1, i8* %5, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK20CFX_CSSComputedStyle10GetDisplayEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 8
  %3 = load i8, i8* %2, align 4
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK20CFX_CSSComputedStyle13GetLineHeightEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 5
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.CFX_CSSLength* @_ZNK20CFX_CSSComputedStyle13GetTextIndentEv(%class.CFX_CSSComputedStyle* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 2
  ret %class.CFX_CSSLength* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK20CFX_CSSComputedStyle12GetTextAlignEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 10
  %3 = load i8, i8* %2, align 8
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK20CFX_CSSComputedStyle16GetVerticalAlignEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 9
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK20CFX_CSSComputedStyle22GetNumberVerticalAlignEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 7
  %3 = load float, float* %2, align 8
  ret float %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK20CFX_CSSComputedStyle17GetTextDecorationEv(%class.CFX_CSSComputedStyle* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 10
  %3 = load i8, i8* %2, align 2
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %class.CFX_CSSLength* @_ZNK20CFX_CSSComputedStyle16GetLetterSpacingEv(%class.CFX_CSSComputedStyle* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 0
  ret %class.CFX_CSSLength* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle13SetLineHeightEf(%class.CFX_CSSComputedStyle* nocapture, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 5
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle13SetTextIndentERK13CFX_CSSLength(%class.CFX_CSSComputedStyle* nocapture, %class.CFX_CSSLength* nocapture readonly dereferenceable(8)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 2, i32 0
  %4 = bitcast %class.CFX_CSSLength* %1 to i64*
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle12SetTextAlignE16CFX_CSSTextAlign(%class.CFX_CSSComputedStyle* nocapture, i8 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 10
  store i8 %1, i8* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle22SetNumberVerticalAlignEf(%class.CFX_CSSComputedStyle* nocapture, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 9
  store i8 8, i8* %3, align 1
  %4 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 7
  store float %1, float* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle17SetTextDecorationEj(%class.CFX_CSSComputedStyle* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 2, i32 10
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle16SetLetterSpacingERK13CFX_CSSLength(%class.CFX_CSSComputedStyle* nocapture, %class.CFX_CSSLength* nocapture readonly dereferenceable(8)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %class.CFX_CSSLength* %1 to i64*
  %5 = bitcast i8* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle14AddCustomStyleERK21CFX_CSSCustomProperty(%class.CFX_CSSComputedStyle*, %class.CFX_CSSCustomProperty* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 1
  %4 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %3, align 8
  %5 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %6 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %5, align 8
  %7 = icmp eq %class.CFX_CSSCustomProperty* %4, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  tail call void @_ZN21CFX_CSSCustomPropertyC1ERKS_(%class.CFX_CSSCustomProperty* %4, %class.CFX_CSSCustomProperty* dereferenceable(16) %1) #13
  %9 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %4, i64 1
  %10 = ptrtoint %class.CFX_CSSCustomProperty* %9 to i64
  %11 = bitcast %class.CFX_CSSCustomProperty** %3 to i64*
  store i64 %10, i64* %11, align 8
  br label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.CFX_CSSComputedStyle, %class.CFX_CSSComputedStyle* %0, i64 0, i32 3
  tail call void @_ZNSt3__16vectorI21CFX_CSSCustomPropertyNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.5"* %13, %class.CFX_CSSCustomProperty* dereferenceable(16) %1) #13
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle13InheritedDataC2Ev(%"class.CFX_CSSComputedStyle::InheritedData"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 0, i32 0
  store i8 2, i8* %2, align 4
  %3 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 1, i32 0
  store i8 2, i8* %4, align 4
  %5 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 2, i32 0
  store i8 3, i8* %6, align 4
  %7 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 3
  %9 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 4
  store float 1.200000e+01, float* %10, align 8
  %11 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 5
  store float 1.400000e+01, float* %11, align 4
  %12 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 6
  store i32 -16777216, i32* %12, align 8
  %13 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 7
  store i16 400, i16* %13, align 4
  %14 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 8
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 9
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 10
  store i8 0, i8* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CFX_CSSComputedStyle13InheritedDataD2Ev(%"class.CFX_CSSComputedStyle::InheritedData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFX_CSSComputedStyle::InheritedData", %"class.CFX_CSSComputedStyle::InheritedData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %2, align 8
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %2, align 8
  %4 = icmp eq %class.CFX_CSSValueList* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CFX_CSSValueList* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CFX_CSSComputedStyle16NonInheritedDataC2Ev(%"class.CFX_CSSComputedStyle::NonInheritedData"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 0, i32 0
  store i8 3, i8* %2, align 4
  %3 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 1, i32 0
  store i8 3, i8* %4, align 4
  %5 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 1, i32 1
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 2, i32 0
  store i8 3, i8* %6, align 4
  %7 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 3, i32 0
  store i8 3, i8* %8, align 4
  %9 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 0, i32 3, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 0, i32 0
  store i8 3, i8* %10, align 4
  %11 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 0, i32 1
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 1, i32 0
  store i8 3, i8* %12, align 4
  %13 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 1, i32 1
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 2, i32 0
  store i8 3, i8* %14, align 4
  %15 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 2, i32 1
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 3, i32 0
  store i8 3, i8* %16, align 4
  %17 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 1, i32 3, i32 1
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 0, i32 0
  store i8 3, i8* %18, align 4
  %19 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 0, i32 1
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 1, i32 0
  store i8 3, i8* %20, align 4
  %21 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 1, i32 1
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 2, i32 0
  store i8 3, i8* %22, align 4
  %23 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 2, i32 1
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 3, i32 0
  store i8 3, i8* %24, align 4
  %25 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 2, i32 3, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 7
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 8
  store i8 3, i8* %27, align 4
  %28 = getelementptr inbounds %"class.CFX_CSSComputedStyle::NonInheritedData", %"class.CFX_CSSComputedStyle::NonInheritedData"* %0, i64 0, i32 9
  call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 5, i1 false)
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21CFX_CSSCustomPropertyNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.5"*, %class.CFX_CSSCustomProperty* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.CFX_CSSCustomProperty** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.5"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.5"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.CFX_CSSCustomProperty** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.CFX_CSSCustomProperty*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.CFX_CSSCustomProperty* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %36, i64 %9
  %38 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %36, i64 %35
  %39 = ptrtoint %class.CFX_CSSCustomProperty* %38 to i64
  tail call void @_ZN21CFX_CSSCustomPropertyC1ERKS_(%class.CFX_CSSCustomProperty* %37, %class.CFX_CSSCustomProperty* dereferenceable(16) %1) #13
  %40 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %37, i64 1
  %41 = ptrtoint %class.CFX_CSSCustomProperty* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %0, i64 0, i32 0, i32 0
  %43 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %42, align 8
  %44 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %3, align 8
  %45 = icmp eq %class.CFX_CSSCustomProperty* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %class.CFX_CSSCustomProperty* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %class.CFX_CSSCustomProperty* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %class.CFX_CSSCustomProperty* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %49, i64 -1
  %52 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %50, i64 -1
  tail call void @_ZN21CFX_CSSCustomPropertyC1ERKS_(%class.CFX_CSSCustomProperty* %51, %class.CFX_CSSCustomProperty* dereferenceable(16) %52) #13
  %53 = icmp eq %class.CFX_CSSCustomProperty* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %class.CFX_CSSCustomProperty* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %class.CFX_CSSCustomProperty* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %class.CFX_CSSCustomProperty* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %class.CFX_CSSCustomProperty*
  %63 = icmp eq %class.CFX_CSSCustomProperty* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %class.CFX_CSSCustomProperty* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %class.CFX_CSSCustomProperty, %class.CFX_CSSCustomProperty* %65, i64 -1
  tail call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* %66) #13
  %67 = icmp eq %class.CFX_CSSCustomProperty* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN21CFX_CSSCustomPropertyC1ERKS_(%class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty* dereferenceable(16)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSStringValueEENS0_IT_EEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt9RetainPtrI12CFX_CSSValueE2AsI18CFX_CSSStringValueEENS0_IT_EEv"}
!5 = !{i8 0, i8 2}
