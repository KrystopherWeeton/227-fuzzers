; ModuleID = '../../net/cert/internal/cert_issuer_source_aia.cc'
source_filename = "../../net/cert/internal/cert_issuer_source_aia.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::CertIssuerSourceAia" = type { %"class.net::CertIssuerSource", %class.scoped_refptr }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::CertNetFetcher"* }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe.1", %"class.std::__1::unique_ptr", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.3", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.27", %"class.std::__1::vector.27", i8, %"class.std::__1::vector", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.34", i8, i8, %"class.absl::optional", %"class.absl::optional.42", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.29" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.36" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.42", %"class.absl::optional.42", %"class.absl::optional.42" }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %class.scoped_refptr.61*, %class.scoped_refptr.61*, %"class.std::__1::__compressed_pair.62" }
%class.scoped_refptr.61 = type { %"class.net::ParsedCertificate"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.scoped_refptr.61* }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.net::CertIssuerSource::Request"* }
%"class.net::CertIssuerSource::Request" = type { i32 (...)** }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.net::CertNetFetcher::Request"* }
%"class.net::CertNetFetcher::Request" = type { i32 (...)** }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.81" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.75" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::unique_ptr.90"* }
%"class.net::(anonymous namespace)::AiaRequest" = type { %"class.net::CertIssuerSource::Request", %"class.std::__1::vector.88", i64 }
%"class.net::PEMTokenizer" = type { %"class.base::BasicStringPiece", i64, %"class.std::__1::basic_string", %"class.std::__1::vector.125", %"class.std::__1::basic_string" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"struct.net::PEMTokenizer::PEMType"*, %"struct.net::PEMTokenizer::PEMType"*, %"class.std::__1::__compressed_pair.127" }
%"struct.net::PEMTokenizer::PEMType" = type opaque
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.net::PEMTokenizer::PEMType"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { i8*, i8*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::CertErrors" = type { %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.120" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.net::CertError"* }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net14CertNetFetcher7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

@_ZTVN3net19CertIssuerSourceAiaE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::CertIssuerSourceAia"*)* @_ZN3net19CertIssuerSourceAiaD2Ev to i8*), i8* bitcast (void (%"class.net::CertIssuerSourceAia"*)* @_ZN3net19CertIssuerSourceAiaD0Ev to i8*), i8* bitcast (void (%"class.net::CertIssuerSourceAia"*, %"class.net::ParsedCertificate"*, %"class.std::__1::vector.59"*)* @_ZN3net19CertIssuerSourceAia16SyncGetIssuersOfEPKNS_17ParsedCertificateEPNSt3__16vectorI13scoped_refptrIS1_ENS4_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.net::CertIssuerSourceAia"*, %"class.net::ParsedCertificate"*, %"class.std::__1::unique_ptr.67"*)* @_ZN3net19CertIssuerSourceAia17AsyncGetIssuersOfEPKNS_17ParsedCertificateEPNSt3__110unique_ptrINS_16CertIssuerSource7RequestENS4_14default_deleteIS7_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [50 x i8] c"../../net/cert/internal/cert_issuer_source_aia.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"kMaxFetchesPerCert exceeded, skipping\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"invalid AIA URL: \00", align 1
@_ZTVN3net12_GLOBAL__N_110AiaRequestE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::AiaRequest"*)* @_ZN3net12_GLOBAL__N_110AiaRequestD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::AiaRequest"*)* @_ZN3net12_GLOBAL__N_110AiaRequestD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::AiaRequest"*, %"class.std::__1::vector.59"*)* @_ZN3net12_GLOBAL__N_110AiaRequest7GetNextEPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [40 x i8] c"AiaRequest::OnFetchCompleted got error \00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"Error parsing cert retrieved from AIA (as DER):\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"CERTIFICATE\00", align 8

@_ZN3net19CertIssuerSourceAiaC1E13scoped_refptrINS_14CertNetFetcherEE = hidden unnamed_addr alias void (%"class.net::CertIssuerSourceAia"*, %"class.net::CertNetFetcher"*), void (%"class.net::CertIssuerSourceAia"*, %"class.net::CertNetFetcher"*)* @_ZN3net19CertIssuerSourceAiaC2E13scoped_refptrINS_14CertNetFetcherEE
@_ZN3net19CertIssuerSourceAiaD1Ev = hidden unnamed_addr alias void (%"class.net::CertIssuerSourceAia"*), void (%"class.net::CertIssuerSourceAia"*)* @_ZN3net19CertIssuerSourceAiaD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19CertIssuerSourceAiaC2E13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertIssuerSourceAia"* nocapture, %"class.net::CertNetFetcher"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::CertNetFetcher"* %1 to i64
  %4 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net19CertIssuerSourceAiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19CertIssuerSourceAiaD2Ev(%"class.net::CertIssuerSourceAia"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net19CertIssuerSourceAiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %3, align 8
  %5 = icmp eq %"class.net::CertNetFetcher"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::CertNetFetcher", %"class.net::CertNetFetcher"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::CertNetFetcher"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::CertNetFetcher"*)***
  %15 = load void (%"class.net::CertNetFetcher"*)**, void (%"class.net::CertNetFetcher"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %15, i64 5
  %17 = load void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %16, align 8
  tail call void %17(%"class.net::CertNetFetcher"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19CertIssuerSourceAiaD0Ev(%"class.net::CertIssuerSourceAia"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net19CertIssuerSourceAiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %3, align 8
  %5 = icmp eq %"class.net::CertNetFetcher"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::CertNetFetcher", %"class.net::CertNetFetcher"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.net::CertNetFetcher"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.net::CertNetFetcher"*)***
  %15 = load void (%"class.net::CertNetFetcher"*)**, void (%"class.net::CertNetFetcher"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %15, i64 5
  %17 = load void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %16, align 8
  tail call void %17(%"class.net::CertNetFetcher"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.net::CertIssuerSourceAia"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net19CertIssuerSourceAia16SyncGetIssuersOfEPKNS_17ParsedCertificateEPNSt3__16vectorI13scoped_refptrIS1_ENS4_9allocatorIS7_EEEE(%"class.net::CertIssuerSourceAia"* nocapture, %"class.net::ParsedCertificate"* nocapture, %"class.std::__1::vector.59"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19CertIssuerSourceAia17AsyncGetIssuersOfEPKNS_17ParsedCertificateEPNSt3__110unique_ptrINS_16CertIssuerSource7RequestENS4_14default_deleteIS7_EEEE(%"class.net::CertIssuerSourceAia"* nocapture readonly, %"class.net::ParsedCertificate"* nocapture readonly, %"class.std::__1::unique_ptr.67"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.90", align 8
  %5 = alloca %"class.std::__1::vector.73", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %9, align 8
  store %"class.net::CertIssuerSource::Request"* null, %"class.net::CertIssuerSource::Request"** %9, align 8
  %11 = icmp eq %"class.net::CertIssuerSource::Request"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.net::CertIssuerSource::Request"* %10 to void (%"class.net::CertIssuerSource::Request"*)***
  %14 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %14, i64 1
  %16 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %15, align 8
  tail call void %16(%"class.net::CertIssuerSource::Request"* nonnull %10) #10
  br label %17

17:                                               ; preds = %3, %12
  %18 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %1, i64 0, i32 20
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %151, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::vector.73"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %5, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %5, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %26 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %1, i64 0, i32 23, i32 0, i32 0
  %27 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %26, align 8
  %28 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %1, i64 0, i32 23, i32 0, i32 1
  %29 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %28, align 8
  %30 = icmp eq %"class.base::BasicStringPiece"* %27, %29
  br i1 %30, label %150, label %31

31:                                               ; preds = %21
  %32 = bitcast %class.GURL* %6 to i8*
  %33 = getelementptr inbounds %class.GURL, %class.GURL* %6, i64 0, i32 1
  %34 = bitcast %class.GURL** %24 to i64*
  %35 = bitcast %"class.std::__1::vector.73"* %5 to i64*
  %36 = bitcast %"class.logging::LogMessage"* %7 to i8*
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = bitcast %"class.logging::LogMessage"* %8 to i8*
  %40 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  br label %46

42:                                               ; preds = %79
  %43 = load %class.GURL*, %class.GURL** %23, align 8
  %44 = load %class.GURL*, %class.GURL** %24, align 8
  %45 = icmp eq %class.GURL* %43, %44
  br i1 %45, label %134, label %82

46:                                               ; preds = %31, %79
  %47 = phi %"class.base::BasicStringPiece"* [ %27, %31 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 120, i1 false)
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %47, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %49, i64 %51) #10
  %52 = load i8, i8* %33, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %46
  %55 = load i64, i64* %34, align 8
  %56 = load i64, i64* %35, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 120
  %59 = icmp ult i64 %58, 5
  %60 = inttoptr i64 %55 to %class.GURL*
  br i1 %59, label %61, label %68

61:                                               ; preds = %54
  %62 = load %class.GURL*, %class.GURL** %25, align 8
  %63 = icmp eq %class.GURL* %62, %60
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  call void @_ZN4GURLC1ERKS_(%class.GURL* %60, %class.GURL* nonnull dereferenceable(120) %6) #10
  %65 = getelementptr inbounds %class.GURL, %class.GURL* %60, i64 1
  %66 = ptrtoint %class.GURL* %65 to i64
  store i64 %66, i64* %34, align 8
  br label %79

67:                                               ; preds = %61
  call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.73"* nonnull %5, %class.GURL* nonnull dereferenceable(120) %6) #10
  br label %79

68:                                               ; preds = %54
  %69 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %69, label %70, label %79

70:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 160, i32 2) #10
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #10
  br label %79

72:                                               ; preds = %46
  %73 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %73, label %74, label %79

74:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 164, i32 2) #10
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17) #10
  %76 = load i8*, i8** %48, align 8
  %77 = load i64, i64* %50, align 8
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160) %75, i8* %76, i64 %77) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #10
  br label %79

79:                                               ; preds = %74, %72, %70, %68, %67, %64
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #10
  %80 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %47, i64 1
  %81 = icmp eq %"class.base::BasicStringPiece"* %80, %29
  br i1 %81, label %42, label %46

82:                                               ; preds = %42
  %83 = call i8* @_Znwm(i64 40) #11
  %84 = bitcast i8* %83 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_110AiaRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 8
  %86 = bitcast i8* %85 to %"class.std::__1::vector.88"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 32, i1 false) #10
  %87 = getelementptr inbounds %"class.net::CertIssuerSourceAia", %"class.net::CertIssuerSourceAia"* %0, i64 0, i32 1, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.90"* %4 to i8*
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %4, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to %"class.std::__1::unique_ptr.90"**
  %92 = getelementptr inbounds i8, i8* %83, i64 24
  %93 = bitcast i8* %92 to %"class.std::__1::unique_ptr.90"**
  %94 = bitcast i8* %90 to i64*
  br label %104

95:                                               ; preds = %129
  %96 = load %"class.net::CertIssuerSource::Request"*, %"class.net::CertIssuerSource::Request"** %9, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.67"* %2 to i8**
  store i8* %83, i8** %97, align 8
  %98 = icmp eq %"class.net::CertIssuerSource::Request"* %96, null
  br i1 %98, label %132, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.net::CertIssuerSource::Request"* %96 to void (%"class.net::CertIssuerSource::Request"*)***
  %101 = load void (%"class.net::CertIssuerSource::Request"*)**, void (%"class.net::CertIssuerSource::Request"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %101, i64 1
  %103 = load void (%"class.net::CertIssuerSource::Request"*)*, void (%"class.net::CertIssuerSource::Request"*)** %102, align 8
  call void %103(%"class.net::CertIssuerSource::Request"* nonnull %96) #10
  br label %132

104:                                              ; preds = %82, %129
  %105 = phi %class.GURL* [ %43, %82 ], [ %130, %129 ]
  %106 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %87, align 8
  %107 = bitcast %"class.net::CertNetFetcher"* %106 to %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)***
  %108 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)**, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*** %107, align 8
  %109 = getelementptr inbounds %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %108, i64 1
  %110 = load %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)*, %"class.net::CertNetFetcher::Request"* (%"class.net::CertNetFetcher"*, %class.GURL*, i32, i32)** %109, align 8
  %111 = call %"class.net::CertNetFetcher::Request"* %110(%"class.net::CertNetFetcher"* %106, %class.GURL* dereferenceable(120) %105, i32 10000, i32 65536) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  store %"class.net::CertNetFetcher::Request"* %111, %"class.net::CertNetFetcher::Request"** %89, align 8
  %112 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %91, align 8
  %113 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %93, align 8
  %114 = icmp ult %"class.std::__1::unique_ptr.90"* %112, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %104
  %116 = ptrtoint %"class.net::CertNetFetcher::Request"* %111 to i64
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %89, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.90"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %112, i64 1
  %119 = ptrtoint %"class.std::__1::unique_ptr.90"* %118 to i64
  store i64 %119, i64* %94, align 8
  br label %121

120:                                              ; preds = %104
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net14CertNetFetcher7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"* %86, %"class.std::__1::unique_ptr.90"* nonnull dereferenceable(8) %4) #10
  br label %121

121:                                              ; preds = %120, %115
  %122 = load %"class.net::CertNetFetcher::Request"*, %"class.net::CertNetFetcher::Request"** %89, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %89, align 8
  %123 = icmp eq %"class.net::CertNetFetcher::Request"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %121
  %125 = bitcast %"class.net::CertNetFetcher::Request"* %122 to void (%"class.net::CertNetFetcher::Request"*)***
  %126 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %126, i64 1
  %128 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %127, align 8
  call void %128(%"class.net::CertNetFetcher::Request"* nonnull %122) #10
  br label %129

129:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %130 = getelementptr inbounds %class.GURL, %class.GURL* %105, i64 1
  %131 = icmp eq %class.GURL* %130, %44
  br i1 %131, label %95, label %104

132:                                              ; preds = %99, %95
  %133 = load %class.GURL*, %class.GURL** %23, align 8
  br label %134

134:                                              ; preds = %132, %42
  %135 = phi %class.GURL* [ %133, %132 ], [ %44, %42 ]
  %136 = icmp eq %class.GURL* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %134
  %138 = bitcast %class.GURL* %135 to i8*
  %139 = load %class.GURL*, %class.GURL** %24, align 8
  %140 = icmp eq %class.GURL* %139, %135
  br i1 %140, label %148, label %141

141:                                              ; preds = %137, %141
  %142 = phi %class.GURL* [ %143, %141 ], [ %139, %137 ]
  %143 = getelementptr inbounds %class.GURL, %class.GURL* %142, i64 -1
  call void @_ZN4GURLD1Ev(%class.GURL* %143) #10
  %144 = icmp eq %class.GURL* %143, %135
  br i1 %144, label %145, label %141

145:                                              ; preds = %141
  %146 = bitcast %"class.std::__1::vector.73"* %5 to i8**
  %147 = load i8*, i8** %146, align 8
  br label %148

148:                                              ; preds = %145, %137
  %149 = phi i8* [ %147, %145 ], [ %138, %137 ]
  store %class.GURL* %135, %class.GURL** %24, align 8
  call void @_ZdlPv(i8* %149) #11
  br label %150

150:                                              ; preds = %21, %134, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br label %151

151:                                              ; preds = %17, %150
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_110AiaRequestD2Ev(%"class.net::(anonymous namespace)::AiaRequest"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_110AiaRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.90"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.90"* %5 to i8*
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.90"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.90"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::CertNetFetcher::Request"*, %"class.net::CertNetFetcher::Request"** %15, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %15, align 8
  %17 = icmp eq %"class.net::CertNetFetcher::Request"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.net::CertNetFetcher::Request"* %16 to void (%"class.net::CertNetFetcher::Request"*)***
  %20 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %20, i64 1
  %22 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %21, align 8
  tail call void %22(%"class.net::CertNetFetcher::Request"* nonnull %16) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.90"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.88"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.90"* %5, %"class.std::__1::unique_ptr.90"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_110AiaRequestD0Ev(%"class.net::(anonymous namespace)::AiaRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_110AiaRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.90"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.90"* %5 to i8*
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.90"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.90"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::CertNetFetcher::Request"*, %"class.net::CertNetFetcher::Request"** %15, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %15, align 8
  %17 = icmp eq %"class.net::CertNetFetcher::Request"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.net::CertNetFetcher::Request"* %16 to void (%"class.net::CertNetFetcher::Request"*)***
  %20 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %20, i64 1
  %22 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %21, align 8
  tail call void %22(%"class.net::CertNetFetcher::Request"* nonnull %16) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.90"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.88"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.90"* %5, %"class.std::__1::unique_ptr.90"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.net::(anonymous namespace)::AiaRequest"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_110AiaRequest7GetNextEPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS2_9allocatorIS6_EEEE(%"class.net::(anonymous namespace)::AiaRequest"* nocapture, %"class.std::__1::vector.59"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.net::PEMTokenizer", align 8
  %5 = alloca %"class.std::__1::vector.132", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::vector.105", align 8
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::AiaRequest", %"class.net::(anonymous namespace)::AiaRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.90"** %11 to i64*
  %13 = bitcast %"class.std::__1::vector.88"* %10 to i64*
  %14 = bitcast i32* %7 to i8*
  %15 = bitcast %"class.std::__1::vector.105"* %8 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %8, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.105", %"class.std::__1::vector.105"* %8, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::vector.105"* %8 to i64*
  %19 = bitcast i8** %17 to i64*
  %20 = bitcast %"class.logging::LogMessage"* %6 to i8*
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  %23 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %25 = bitcast %"class.base::BasicStringPiece"* %3 to i64*
  %26 = bitcast %"class.net::PEMTokenizer"* %4 to i8*
  %27 = bitcast %"class.std::__1::vector.132"* %5 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %5, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector.132"* %5 to i8**
  %30 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"** %30 to i8**
  %32 = bitcast %"class.std::__1::basic_string"** %28 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %5, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %4, i64 0, i32 4
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.net::PEMTokenizer", %"class.net::PEMTokenizer"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  br label %40

40:                                               ; preds = %127, %2
  %41 = load i64, i64* %9, align 8
  %42 = load i64, i64* %12, align 8
  %43 = load i64, i64* %13, align 8
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %41, %45
  br i1 %46, label %47, label %128

47:                                               ; preds = %40
  %48 = inttoptr i64 %43 to %"class.std::__1::unique_ptr.90"*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %49 = add nuw i64 %41, 1
  store i64 %49, i64* %9, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %48, i64 %41, i32 0, i32 0, i32 0
  %51 = load %"class.net::CertNetFetcher::Request"*, %"class.net::CertNetFetcher::Request"** %50, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %50, align 8
  %52 = bitcast %"class.net::CertNetFetcher::Request"* %51 to void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)***
  %53 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)**, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)** %53, i64 2
  %55 = load void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)*, void (%"class.net::CertNetFetcher::Request"*, i32*, %"class.std::__1::vector.105"*)** %54, align 8
  call void %55(%"class.net::CertNetFetcher::Request"* %51, i32* nonnull %7, %"class.std::__1::vector.105"* nonnull %8) #10
  %56 = load i32, i32* %7, align 4
  %57 = load i64, i64* %18, align 8
  %58 = load i64, i64* %19, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %47
  %61 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %61, label %62, label %110

62:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 104, i32 2) #10
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i64 39) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %63, i32 %56) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #10
  br label %110

65:                                               ; preds = %47
  %66 = inttoptr i64 %57 to i8*
  %67 = sub i64 %58, %57
  %68 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116ParseCertFromDerEPKhmPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEE(i8* %66, i64 %67, %"class.std::__1::vector.59"* %1) #10
  br i1 %68, label %110, label %69

69:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  store i64 %57, i64* %25, align 8
  store i64 %67, i64* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 96, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #10
  %70 = call i8* @_Znwm(i64 24) #11
  store i8* %70, i8** %29, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 24
  store i8* %71, i8** %31, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* nonnull align 8 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11, i1 false) #10
  %72 = getelementptr inbounds i8, i8* %70, i64 11
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %70, i64 23
  store i8 11, i8* %73, align 1
  %74 = ptrtoint i8* %71 to i64
  store i64 %74, i64* %32, align 8
  call void @_ZN3net12PEMTokenizerC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE(%"class.net::PEMTokenizer"* nonnull %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.std::__1::vector.132"* nonnull dereferenceable(24) %5) #10
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %33, align 8
  %76 = icmp eq %"class.std::__1::basic_string"* %75, null
  br i1 %76, label %97, label %77

77:                                               ; preds = %69
  %78 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %80 = icmp eq %"class.std::__1::basic_string"* %79, %75
  br i1 %80, label %95, label %81

81:                                               ; preds = %77, %91
  %82 = phi %"class.std::__1::basic_string"* [ %83, %91 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 -1
  %84 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %88, %81
  %92 = icmp eq %"class.std::__1::basic_string"* %83, %75
  br i1 %92, label %93, label %81

93:                                               ; preds = %91
  %94 = load i8*, i8** %29, align 8
  br label %95

95:                                               ; preds = %93, %77
  %96 = phi i8* [ %94, %93 ], [ %78, %77 ]
  store %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"** %28, align 8
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %95, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #10
  %98 = call zeroext i1 @_ZN3net12PEMTokenizer7GetNextEv(%"class.net::PEMTokenizer"* nonnull %4) #10
  br i1 %98, label %99, label %108

99:                                               ; preds = %97
  %100 = load i8, i8* %36, align 1
  %101 = icmp slt i8 %100, 0
  %102 = load i8*, i8** %37, align 8
  %103 = load i64, i64* %38, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i8* %102, i8* %39
  %106 = select i1 %101, i64 %103, i64 %104
  %107 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116ParseCertFromDerEPKhmPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEE(i8* %105, i64 %106, %"class.std::__1::vector.59"* %1) #10
  br label %108

108:                                              ; preds = %99, %97
  %109 = phi i1 [ %107, %99 ], [ false, %97 ]
  call void @_ZN3net12PEMTokenizerD1Ev(%"class.net::PEMTokenizer"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %110

110:                                              ; preds = %60, %62, %65, %108
  %111 = phi i1 [ true, %65 ], [ %109, %108 ], [ false, %60 ], [ false, %62 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  %114 = inttoptr i64 %57 to i8*
  call void @_ZdlPv(i8* nonnull %114) #11
  br label %115

115:                                              ; preds = %110, %113
  %116 = icmp eq %"class.net::CertNetFetcher::Request"* %51, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %115
  %118 = bitcast %"class.net::CertNetFetcher::Request"* %51 to void (%"class.net::CertNetFetcher::Request"*)***
  %119 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %119, i64 1
  %121 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %120, align 8
  call void %121(%"class.net::CertNetFetcher::Request"* nonnull %51) #10
  br label %122

122:                                              ; preds = %115, %117
  %123 = load i8*, i8** %16, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %122
  %126 = ptrtoint i8* %123 to i64
  store i64 %126, i64* %19, align 8
  call void @_ZdlPv(i8* nonnull %123) #11
  br label %127

127:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  br i1 %111, label %128, label %40

128:                                              ; preds = %127, %40
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116ParseCertFromDerEPKhmPNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEE(i8*, i64, %"class.std::__1::vector.59"*) unnamed_addr #0 {
  %4 = alloca %"class.net::CertErrors", align 8
  %5 = alloca %"struct.net::ParseCertificateOptions", align 1
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.net::CertErrors"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = bitcast %"class.net::CertErrors"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %4) #10
  %10 = call %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferEPKhm(i8* %0, i64 %1) #10
  %11 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #10
  %12 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #10
  store i8 %12, i8* %11, align 1
  %13 = call zeroext i1 @_ZN3net17ParsedCertificate20CreateAndAddToVectorENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS1_6vectorI13scoped_refptrIS0_ENS1_9allocatorISE_EEEEPNS_10CertErrorsE(%struct.crypto_buffer_st* %10, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %5, %"class.std::__1::vector.59"* %2, %"class.net::CertErrors"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #10
  br i1 %13, label %39, label %14

14:                                               ; preds = %3
  %15 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 32, i32 2) #10
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i64 48) #10
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::CertErrors"* nonnull %4) #10
  %22 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #10
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %16
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %16, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #10
  br label %39

39:                                               ; preds = %38, %14, %3
  %40 = phi i1 [ true, %3 ], [ false, %14 ], [ false, %38 ]
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret i1 %40
}

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #4

declare zeroext i1 @_ZN3net17ParsedCertificate20CreateAndAddToVectorENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS1_6vectorI13scoped_refptrIS0_ENS1_9allocatorISE_EEEEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.std::__1::vector.59"*, %"class.net::CertErrors"*) local_unnamed_addr #4

declare %struct.crypto_buffer_st* @_ZN3net9x509_util18CreateCryptoBufferEPKhm(i8*, i64) local_unnamed_addr #4

declare i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #4

declare void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::CertErrors"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare void @_ZN3net12PEMTokenizerC1ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS3_6vectorINS3_12basic_stringIcS5_NS3_9allocatorIcEEEENSB_ISD_EEEE(%"class.net::PEMTokenizer"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::vector.132"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZN3net12PEMTokenizer7GetNextEv(%"class.net::PEMTokenizer"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net12PEMTokenizerD1Ev(%"class.net::PEMTokenizer"*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net14CertNetFetcher7RequestENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.88"*, %"class.std::__1::unique_ptr.90"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.90"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.88"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.88"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.90"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.90"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.90"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.90"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.90"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.90"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.90"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.90"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.90"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.net::CertNetFetcher::Request"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.90"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.90"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.90"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.90"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.90"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.90"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.90"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.90"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.90"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.90"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.90"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.90"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.90"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.90"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.90"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.90"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.90"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.90"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.90"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.90"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.90"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.90"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.90"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.90"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.90"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.90"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.90"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.90"*, %"class.std::__1::unique_ptr.90"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.90"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.90"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.90"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.90"*
  %138 = icmp eq %"class.std::__1::unique_ptr.90"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.90"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.90"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.net::CertNetFetcher::Request"*, %"class.net::CertNetFetcher::Request"** %142, align 8
  store %"class.net::CertNetFetcher::Request"* null, %"class.net::CertNetFetcher::Request"** %142, align 8
  %144 = icmp eq %"class.net::CertNetFetcher::Request"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.net::CertNetFetcher::Request"* %143 to void (%"class.net::CertNetFetcher::Request"*)***
  %147 = load void (%"class.net::CertNetFetcher::Request"*)**, void (%"class.net::CertNetFetcher::Request"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %147, i64 1
  %149 = load void (%"class.net::CertNetFetcher::Request"*)*, void (%"class.net::CertNetFetcher::Request"*)** %148, align 8
  tail call void %149(%"class.net::CertNetFetcher::Request"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.90"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.73"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.GURL** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.73"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.73"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.GURL** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %class.GURL*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.GURL* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %9
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %32
  %36 = ptrtoint %class.GURL* %35 to i64
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %34, %class.GURL* dereferenceable(120) %1) #10
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %34, i64 1
  %38 = ptrtoint %class.GURL* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 0
  %40 = load %class.GURL*, %class.GURL** %39, align 8
  %41 = load %class.GURL*, %class.GURL** %3, align 8
  %42 = icmp eq %class.GURL* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.GURL* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.GURL* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.GURL* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %46, i64 -1
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %47, i64 -1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %48, %class.GURL* dereferenceable(120) %49) #10
  %50 = icmp eq %class.GURL* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.GURL*, %class.GURL** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.GURL* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.GURL* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.GURL* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.GURL*
  %60 = icmp eq %class.GURL* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.GURL* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %62, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %63) #10
  %64 = icmp eq %class.GURL* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
