; ModuleID = '../../sql/meta_table.cc'
source_filename = "../../sql/meta_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.15", [4 x i8] }>
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::Statement" = type <{ %class.scoped_refptr.23, i8, i8, [6 x i8] }>
%class.scoped_refptr.23 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>

@_ZN3sql9MetaTable12kMmapFailureE = hidden local_unnamed_addr constant i64 -2, align 8
@_ZN3sql9MetaTable12kMmapSuccessE = hidden local_unnamed_addr constant i64 -1, align 8
@.str = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"SELECT value FROM meta WHERE key = ?\00", align 1
@_ZN12_GLOBAL__N_114kMmapStatusKeyE = internal unnamed_addr constant [12 x i8] c"mmap_status\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"REPLACE INTO meta VALUES (?, ?)\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"SELECT COUNT(*) FROM sqlite_master\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"SELECT value FROM meta WHERE key=?\00", align 1
@_ZN12_GLOBAL__N_111kVersionKeyE = internal constant [8 x i8] c"version\00", align 1
@.str.5 = private unnamed_addr constant [82 x i8] c"CREATE TABLE meta(key LONGVARCHAR NOT NULL UNIQUE PRIMARY KEY, value LONGVARCHAR)\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"Sqlite.Version\00", align 1
@_ZN12_GLOBAL__N_121kCompatibleVersionKeyE = internal constant [24 x i8] c"last_compatible_version\00", align 16
@.str.7 = private unnamed_addr constant [29 x i8] c"DELETE FROM meta WHERE key=?\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"../../sql/meta_table.cc\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"INSERT OR REPLACE INTO meta (key,value) VALUES (?,?)\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"Sqlite.DeprecationVersionResult\00", align 1
@_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3sql9MetaTableC1Ev = hidden unnamed_addr alias void (%"class.sql::MetaTable"*), void (%"class.sql::MetaTable"*)* @_ZN3sql9MetaTableC2Ev
@_ZN3sql9MetaTableD1Ev = hidden unnamed_addr alias void (%"class.sql::MetaTable"*), void (%"class.sql::MetaTable"*)* @_ZN3sql9MetaTableD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3sql9MetaTableC2Ev(%"class.sql::MetaTable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  store %"class.sql::Database"* null, %"class.sql::Database"** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3sql9MetaTableD2Ev(%"class.sql::MetaTable"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable14DoesTableExistEPNS_8DatabaseE(%"class.sql::Database"*) local_unnamed_addr #2 align 2 {
  %2 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  ret i1 %2
}

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable13GetMmapStatusEPNS_8DatabaseEPl(%"class.sql::Database"*, i64* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #7
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #7
  %9 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %6, align 8
  %10 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %9, i64 0, i32 3
  %11 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %10, align 8
  %12 = icmp eq %struct.sqlite3_stmt* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 11, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_114kMmapStatusKeyE, i64 0, i64 0), i64 11, i1 false) #7
  %17 = getelementptr inbounds i8, i8* %14, i64 11
  store i8 0, i8* %17, align 1
  %18 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %3, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #7
  %19 = load i8, i8* %16, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #8
  br label %24

24:                                               ; preds = %13, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  %25 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #7
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #7
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i64 [ %27, %26 ], [ 0, %24 ]
  store i64 %29, i64* %1, align 8
  %30 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %3) #7
  br label %31

31:                                               ; preds = %2, %28
  %32 = phi i1 [ %30, %28 ], [ false, %2 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #3

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #3

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable13SetMmapStatusEPNS_8DatabaseEl(%"class.sql::Database"*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #7
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %7) #7
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #7
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 11, i8* %10, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_114kMmapStatusKeyE, i64 0, i64 0), i64 11, i1 false) #7
  %11 = getelementptr inbounds i8, i8* %8, i64 11
  store i8 0, i8* %11, align 1
  %12 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %3, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #7
  %13 = load i8, i8* %10, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #8
  br label %18

18:                                               ; preds = %2, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #7
  %19 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %1) #7
  %20 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %20
}

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql9MetaTable16RazeIfDeprecatedEPNS_8DatabaseEi(%"class.sql::Database"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0)) #7
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #7
  br i1 %10, label %11, label %27

11:                                               ; preds = %6
  %12 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %3, i32 0) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %99, label %14

14:                                               ; preds = %11
  %15 = load atomic i64, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %16 = inttoptr i64 %15 to %"class.base::HistogramBase"*
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %20 = ptrtoint %"class.base::HistogramBase"* %19 to i64
  store atomic i64 %20, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi %"class.base::HistogramBase"* [ %16, %14 ], [ %19, %18 ]
  %23 = bitcast %"class.base::HistogramBase"* %22 to void (%"class.base::HistogramBase"*, i32)***
  %24 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, i64 6
  %26 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %25, align 8
  call void %26(%"class.base::HistogramBase"* %22, i32 0) #7
  br label %99

27:                                               ; preds = %6
  %28 = load atomic i64, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %29 = inttoptr i64 %28 to %"class.base::HistogramBase"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %33 = ptrtoint %"class.base::HistogramBase"* %32 to i64
  store atomic i64 %33, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi %"class.base::HistogramBase"* [ %29, %27 ], [ %32, %31 ]
  %36 = bitcast %"class.base::HistogramBase"* %35 to void (%"class.base::HistogramBase"*, i32)***
  %37 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %37, i64 6
  %39 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %38, align 8
  call void %39(%"class.base::HistogramBase"* %35, i32 1) #7
  br label %99

40:                                               ; preds = %2
  %41 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #7
  %42 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  %43 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %43) #7
  %44 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_111kVersionKeyE, i64 0, i64 0)) #7
  %45 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #7
  br i1 %45, label %71, label %46

46:                                               ; preds = %40
  %47 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %4) #7
  %48 = load atomic i64, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %49 = inttoptr i64 %48 to %"class.base::HistogramBase"*
  %50 = icmp eq i64 %48, 0
  br i1 %47, label %61, label %51

51:                                               ; preds = %46
  br i1 %50, label %52, label %55

52:                                               ; preds = %51
  %53 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %54 = ptrtoint %"class.base::HistogramBase"* %53 to i64
  store atomic i64 %54, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %55

55:                                               ; preds = %51, %52
  %56 = phi %"class.base::HistogramBase"* [ %49, %51 ], [ %53, %52 ]
  %57 = bitcast %"class.base::HistogramBase"* %56 to void (%"class.base::HistogramBase"*, i32)***
  %58 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %58, i64 6
  %60 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, align 8
  call void %60(%"class.base::HistogramBase"* %56, i32 2) #7
  br label %99

61:                                               ; preds = %46
  br i1 %50, label %62, label %65

62:                                               ; preds = %61
  %63 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %64 = ptrtoint %"class.base::HistogramBase"* %63 to i64
  store atomic i64 %64, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %65

65:                                               ; preds = %61, %62
  %66 = phi %"class.base::HistogramBase"* [ %49, %61 ], [ %63, %62 ]
  %67 = bitcast %"class.base::HistogramBase"* %66 to void (%"class.base::HistogramBase"*, i32)***
  %68 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %68, i64 6
  %70 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %69, align 8
  call void %70(%"class.base::HistogramBase"* %66, i32 3) #7
  br label %99

71:                                               ; preds = %40
  %72 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %4, i32 0) #7
  call void @_ZN3sql9Statement5ClearEv(%"class.sql::Statement"* nonnull %4) #7
  %73 = icmp sgt i32 %72, %1
  br i1 %73, label %99, label %74

74:                                               ; preds = %71
  %75 = call zeroext i1 @_ZN3sql8Database4RazeEv(%"class.sql::Database"* %0) #7
  %76 = load atomic i64, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %77 = inttoptr i64 %76 to %"class.base::HistogramBase"*
  %78 = icmp eq i64 %76, 0
  br i1 %75, label %79, label %89

79:                                               ; preds = %74
  br i1 %78, label %80, label %83

80:                                               ; preds = %79
  %81 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %82 = ptrtoint %"class.base::HistogramBase"* %81 to i64
  store atomic i64 %82, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %83

83:                                               ; preds = %79, %80
  %84 = phi %"class.base::HistogramBase"* [ %77, %79 ], [ %81, %80 ]
  %85 = bitcast %"class.base::HistogramBase"* %84 to void (%"class.base::HistogramBase"*, i32)***
  %86 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %86, i64 6
  %88 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %87, align 8
  call void %88(%"class.base::HistogramBase"* %84, i32 4) #7
  br label %99

89:                                               ; preds = %74
  br i1 %78, label %90, label %93

90:                                               ; preds = %89
  %91 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #7
  %92 = ptrtoint %"class.base::HistogramBase"* %91 to i64
  store atomic i64 %92, i64* @_ZZN12_GLOBAL__N_122RecordDeprecationEventENS_20DeprecationEventTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %93

93:                                               ; preds = %89, %90
  %94 = phi %"class.base::HistogramBase"* [ %77, %89 ], [ %91, %90 ]
  %95 = bitcast %"class.base::HistogramBase"* %94 to void (%"class.base::HistogramBase"*, i32)***
  %96 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %96, i64 6
  %98 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %97, align 8
  call void %98(%"class.base::HistogramBase"* %94, i32 5) #7
  br label %99

99:                                               ; preds = %65, %55, %71, %83, %93, %34, %21, %11
  %100 = phi %"class.sql::Statement"* [ %3, %11 ], [ %3, %21 ], [ %3, %34 ], [ %4, %93 ], [ %4, %83 ], [ %4, %71 ], [ %4, %55 ], [ %4, %65 ]
  %101 = phi i8* [ %7, %11 ], [ %7, %21 ], [ %7, %34 ], [ %41, %93 ], [ %41, %83 ], [ %41, %71 ], [ %41, %55 ], [ %41, %65 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %100) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #7
  ret void
}

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"*, i32, i8*) local_unnamed_addr #3

declare void @_ZN3sql9Statement5ClearEv(%"class.sql::Statement"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql8Database4RazeEv(%"class.sql::Database"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"* nocapture, %"class.sql::Database"*, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.sql::Transaction", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  store %"class.sql::Database"* %1, %"class.sql::Database"** %10, align 8
  %11 = bitcast %"class.sql::Transaction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = bitcast %"class.sql::Transaction"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %8, %"class.sql::Database"* %1) #7
  %13 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %8) #7
  br i1 %13, label %14, label %51

14:                                               ; preds = %4
  %15 = call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %10, align 8
  br i1 %15, label %34, label %17

17:                                               ; preds = %14
  %18 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.5, i64 0, i64 0)) #7
  br i1 %18, label %19, label %51

19:                                               ; preds = %17
  %20 = load %"class.sql::Database"*, %"class.sql::Database"** %10, align 8
  %21 = call zeroext i1 @_ZN3sql9MetaTable13SetMmapStatusEPNS_8DatabaseEl(%"class.sql::Database"* %20, i64 -1)
  %22 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #7
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %7) #7
  %23 = load %"class.sql::Database"*, %"class.sql::Database"** %10, align 8
  %24 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %24) #7
  %25 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %7, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_111kVersionKeyE, i64 0, i64 0)) #7
  %26 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %7, i32 1, i32 %2) #7
  %27 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %7) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  %28 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false) #7
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %6) #7
  %29 = load %"class.sql::Database"*, %"class.sql::Database"** %10, align 8
  %30 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %29, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %30) #7
  %31 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %6, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_121kCompatibleVersionKeyE, i64 0, i64 0)) #7
  %32 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %6, i32 1, i32 %3) #7
  %33 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %6) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  br label %49

34:                                               ; preds = %14
  %35 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %36 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 14, i8* %37, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14, i1 false) #7
  %38 = getelementptr inbounds i8, i8* %35, i64 14
  store i8 0, i8* %38, align 2
  %39 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #7
  store i32 0, i32* %5, align 4
  %40 = call zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_111kVersionKeyE, i64 0, i64 0), i32* nonnull %5) #7
  %41 = load i32, i32* %5, align 4
  %42 = select i1 %40, i32 %41, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #7
  call void @_ZNK3sql8Database18AddTaggedHistogramERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.sql::Database"* %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 %42) #7
  %43 = load i8, i8* %37, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %34, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  br label %49

49:                                               ; preds = %48, %19
  %50 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %8) #7
  br label %51

51:                                               ; preds = %17, %4, %49
  %52 = phi i1 [ %50, %49 ], [ false, %4 ], [ false, %17 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  ret i1 %52
}

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #3

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql9MetaTable16SetVersionNumberEi(%"class.sql::MetaTable"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false) #7
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %3) #7
  %5 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %6 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %7 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %7) #7
  %8 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %3, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_111kVersionKeyE, i64 0, i64 0)) #7
  %9 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 1, i32 %1) #7
  %10 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql9MetaTable26SetCompatibleVersionNumberEi(%"class.sql::MetaTable"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false) #7
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %3) #7
  %5 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %6 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %7 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %7) #7
  %8 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %3, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_121kCompatibleVersionKeyE, i64 0, i64 0)) #7
  %9 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %3, i32 1, i32 %1) #7
  %10 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret void
}

declare void @_ZNK3sql8Database18AddTaggedHistogramERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.sql::Database"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql9MetaTable16GetVersionNumberEv(%"class.sql::MetaTable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 0, i32* %2, align 4
  %4 = call zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_111kVersionKeyE, i64 0, i64 0), i32* nonnull %2)
  %5 = load i32, i32* %2, align 4
  %6 = select i1 %4, i32 %5, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret i32 %6
}

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3sql9MetaTable5ResetEv(%"class.sql::MetaTable"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  store %"class.sql::Database"* null, %"class.sql::Database"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8SetValueEPKci(%"class.sql::MetaTable"* nocapture readonly, i8*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %7 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %11 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 1, i32 %2) #7
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"* nocapture readonly, i8*, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %7 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 267, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %11 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #7
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %4, i32 0) #7
  store i32 %13, i32* %2, align 4
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i1 [ true, %12 ], [ false, %3 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3sql9MetaTable26GetCompatibleVersionNumberEv(%"class.sql::MetaTable"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #7
  store i32 0, i32* %2, align 4
  %4 = call zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPi(%"class.sql::MetaTable"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_121kCompatibleVersionKeyE, i64 0, i64 0), i32* nonnull %2)
  %5 = load i32, i32* %2, align 4
  %6 = select i1 %4, i32 %5, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #7
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8SetValueEPKcRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.sql::MetaTable"* nocapture readonly, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %7 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %11 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %12
}

declare void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3sql9MetaTable19PrepareSetStatementEPNS_9StatementEPKc(%"class.sql::MetaTable"* nocapture readonly, %"class.sql::Statement"*, i8*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %5 = load %"class.sql::Database"*, %"class.sql::Database"** %4, align 8
  %6 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  tail call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* %1, %"class.sql::Database::StatementRef"* %6) #7
  %7 = tail call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* %1, i32 0, i8* %2) #7
  ret void
}

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8SetValueEPKcl(%"class.sql::MetaTable"* nocapture readonly, i8*, i64) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %7 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %2) #7
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.sql::MetaTable"* nocapture readonly, i8*, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %8 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %8, align 8
  %10 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 267, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %10) #7
  %11 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #7
  br i1 %12, label %13, label %24

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %5, %"class.sql::Statement"* nonnull %4, i32 0) #7
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #8
  br label %22

22:                                               ; preds = %19, %13
  %23 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %14, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  br label %24

24:                                               ; preds = %3, %22
  %25 = phi i1 [ true, %22 ], [ false, %3 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable19PrepareGetStatementEPNS_9StatementEPKc(%"class.sql::MetaTable"* nocapture readonly, %"class.sql::Statement"*, i8*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %5 = load %"class.sql::Database"*, %"class.sql::Database"** %4, align 8
  %6 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 267, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #7
  tail call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* %1, %"class.sql::Database::StatementRef"* %6) #7
  %7 = tail call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* %1, i32 0, i8* %2) #7
  %8 = tail call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %1) #7
  ret i1 %8
}

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable8GetValueEPKcPl(%"class.sql::MetaTable"* nocapture readonly, i8*, i64* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN3sql9StatementC1Ev(%"class.sql::Statement"* nonnull %4) #7
  %7 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %9 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 267, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %9) #7
  %10 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %4, i32 0, i8* %1) #7
  %11 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #7
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #7
  store i64 %13, i64* %2, align 8
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i1 [ true, %12 ], [ false, %3 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3sql9MetaTable9DeleteKeyEPKc(%"class.sql::MetaTable"* nocapture readonly, i8*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.sql::MetaTable", %"class.sql::MetaTable"* %0, i64 0, i32 0
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #7
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #7
  %9 = call zeroext i1 @_ZN3sql9Statement11BindCStringEiPKc(%"class.sql::Statement"* nonnull %3, i32 0, i8* %1) #7
  %10 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #7
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret i1 %10
}

declare void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) local_unnamed_addr #3

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
