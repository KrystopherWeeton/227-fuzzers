; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/entdec.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/entdec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.od_ec_dec = type { i8*, i32, i8*, i8*, i32, i16, i16 }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @od_ec_dec_init(%struct.od_ec_dec* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 1
  store i32 -14, i32* %5, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  %8 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 2
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 3
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 4
  store i32 2147483647, i32* %10, align 8
  %11 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 5
  store i16 -32768, i16* %11, align 4
  %12 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 6
  store i16 -15, i16* %12, align 2
  %13 = icmp eq i32 %2, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %3
  %15 = load i8, i8* %1, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 23
  %18 = xor i32 %17, 2147483647
  %19 = getelementptr inbounds i8, i8* %1, i64 1
  %20 = icmp ugt i32 %2, 1
  br i1 %20, label %36, label %21

21:                                               ; preds = %43, %36, %14
  %22 = phi i32 [ %18, %14 ], [ %40, %36 ], [ %47, %43 ]
  %23 = phi i16 [ -7, %14 ], [ 1, %36 ], [ 9, %43 ]
  %24 = phi i8* [ %19, %14 ], [ %41, %36 ], [ %48, %43 ]
  %25 = phi i1 [ %20, %14 ], [ %42, %36 ], [ %49, %43 ]
  br i1 %25, label %32, label %26

26:                                               ; preds = %3, %21
  %27 = phi i8* [ %24, %21 ], [ %1, %3 ]
  %28 = phi i16 [ %23, %21 ], [ -15, %3 ]
  %29 = phi i32 [ %22, %21 ], [ 2147483647, %3 ]
  %30 = sub nsw i16 16370, %28
  %31 = sext i16 %30 to i32
  store i32 %31, i32* %5, align 8
  br label %32

32:                                               ; preds = %21, %26
  %33 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %34 = phi i32 [ %29, %26 ], [ %22, %21 ]
  %35 = phi i16 [ 16384, %26 ], [ %23, %21 ]
  store i32 %34, i32* %10, align 8
  store i16 %35, i16* %12, align 2
  store i8* %33, i8** %9, align 8
  ret void

36:                                               ; preds = %14
  %37 = load i8, i8* %19, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %38, 15
  %40 = xor i32 %39, %18
  %41 = getelementptr inbounds i8, i8* %1, i64 2
  %42 = icmp ne i32 %2, 2
  br i1 %42, label %43, label %21

43:                                               ; preds = %36
  %44 = load i8, i8* %41, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 7
  %47 = xor i32 %46, %40
  %48 = getelementptr inbounds i8, i8* %1, i64 3
  %49 = icmp ugt i32 %2, 3
  br label %21
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @od_ec_decode_bool_q15(%struct.od_ec_dec* nocapture, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 5
  %6 = load i16, i16* %5, align 4
  %7 = zext i16 %6 to i32
  %8 = lshr i32 %7, 8
  %9 = lshr i32 %1, 6
  %10 = mul i32 %8, %9
  %11 = lshr i32 %10, 1
  %12 = add nuw i32 %11, 4
  %13 = shl i32 %12, 16
  %14 = icmp ult i32 %4, %13
  %15 = sub i32 %7, %12
  %16 = sub i32 0, %13
  %17 = select i1 %14, i32 0, i32 %16
  %18 = select i1 %14, i32 %12, i32 %15
  %19 = zext i1 %14 to i32
  %20 = tail call i32 @llvm.ctlz.i32(i32 %18, i1 true) #6, !range !2
  %21 = xor i32 %20, 31
  %22 = sub nsw i32 15, %21
  %23 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 6
  %24 = load i16, i16* %23, align 2
  %25 = trunc i32 %22 to i16
  %26 = sub i16 %24, %25
  store i16 %26, i16* %23, align 2
  %27 = add i32 %4, 1
  %28 = add i32 %27, %17
  %29 = shl i32 %28, %22
  %30 = add i32 %29, -1
  store i32 %30, i32* %3, align 8
  %31 = shl i32 %18, %22
  %32 = trunc i32 %31 to i16
  store i16 %32, i16* %5, align 4
  %33 = icmp slt i16 %26, 0
  br i1 %33, label %34, label %72

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = icmp ult i8* %36, %38
  br i1 %39, label %40, label %59

40:                                               ; preds = %34
  %41 = sext i16 %26 to i32
  %42 = sub nsw i32 8, %41
  br label %43

43:                                               ; preds = %43, %40
  %44 = phi i8* [ %54, %43 ], [ %36, %40 ]
  %45 = phi i16 [ %52, %43 ], [ %26, %40 ]
  %46 = phi i32 [ %51, %43 ], [ %30, %40 ]
  %47 = phi i32 [ %53, %43 ], [ %42, %40 ]
  %48 = load i8, i8* %44, align 1
  %49 = zext i8 %48 to i32
  %50 = shl i32 %49, %47
  %51 = xor i32 %50, %46
  %52 = add i16 %45, 8
  %53 = add nsw i32 %47, -8
  %54 = getelementptr inbounds i8, i8* %44, i64 1
  %55 = icmp sgt i32 %53, -1
  %56 = icmp ult i8* %54, %38
  %57 = and i1 %56, %55
  br i1 %57, label %43, label %58

58:                                               ; preds = %43
  br i1 %56, label %68, label %59

59:                                               ; preds = %58, %34
  %60 = phi i8* [ %54, %58 ], [ %36, %34 ]
  %61 = phi i16 [ %52, %58 ], [ %26, %34 ]
  %62 = phi i32 [ %51, %58 ], [ %30, %34 ]
  %63 = sext i16 %61 to i32
  %64 = sub nsw i32 16384, %63
  %65 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = add nsw i32 %64, %66
  store i32 %67, i32* %65, align 8
  br label %68

68:                                               ; preds = %59, %58
  %69 = phi i8* [ %60, %59 ], [ %54, %58 ]
  %70 = phi i32 [ %62, %59 ], [ %51, %58 ]
  %71 = phi i16 [ 16384, %59 ], [ %52, %58 ]
  store i32 %70, i32* %3, align 8
  store i16 %71, i16* %23, align 2
  store i8* %69, i8** %35, align 8
  br label %72

72:                                               ; preds = %2, %68
  ret i32 %19
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @od_ec_decode_cdf_q15(%struct.od_ec_dec* nocapture, i16* nocapture readonly, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 5
  %7 = load i16, i16* %6, align 4
  %8 = zext i16 %7 to i32
  %9 = lshr i32 %5, 16
  %10 = lshr i32 %8, 8
  %11 = add i32 %2, -2
  br label %12

12:                                               ; preds = %12, %3
  %13 = phi i64 [ %15, %12 ], [ -1, %3 ]
  %14 = phi i32 [ %25, %12 ], [ %8, %3 ]
  %15 = add nsw i64 %13, 1
  %16 = getelementptr inbounds i16, i16* %1, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = lshr i16 %17, 6
  %19 = zext i16 %18 to i32
  %20 = mul nuw nsw i32 %10, %19
  %21 = lshr i32 %20, 1
  %22 = trunc i64 %13 to i32
  %23 = sub i32 %11, %22
  %24 = shl nsw i32 %23, 2
  %25 = add i32 %21, %24
  %26 = icmp ult i32 %9, %25
  br i1 %26, label %12, label %27

27:                                               ; preds = %12
  %28 = trunc i64 %15 to i32
  %29 = sub i32 %14, %25
  %30 = shl i32 %25, 16
  %31 = tail call i32 @llvm.ctlz.i32(i32 %29, i1 true) #6, !range !2
  %32 = xor i32 %31, 31
  %33 = sub nsw i32 15, %32
  %34 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 6
  %35 = load i16, i16* %34, align 2
  %36 = trunc i32 %33 to i16
  %37 = sub i16 %35, %36
  store i16 %37, i16* %34, align 2
  %38 = add i32 %5, 1
  %39 = sub i32 %38, %30
  %40 = shl i32 %39, %33
  %41 = add i32 %40, -1
  store i32 %41, i32* %4, align 8
  %42 = shl i32 %29, %33
  %43 = trunc i32 %42 to i16
  store i16 %43, i16* %6, align 4
  %44 = icmp slt i16 %37, 0
  br i1 %44, label %45, label %83

45:                                               ; preds = %27
  %46 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = icmp ult i8* %47, %49
  br i1 %50, label %51, label %70

51:                                               ; preds = %45
  %52 = sext i16 %37 to i32
  %53 = sub nsw i32 8, %52
  br label %54

54:                                               ; preds = %54, %51
  %55 = phi i8* [ %65, %54 ], [ %47, %51 ]
  %56 = phi i16 [ %63, %54 ], [ %37, %51 ]
  %57 = phi i32 [ %62, %54 ], [ %41, %51 ]
  %58 = phi i32 [ %64, %54 ], [ %53, %51 ]
  %59 = load i8, i8* %55, align 1
  %60 = zext i8 %59 to i32
  %61 = shl i32 %60, %58
  %62 = xor i32 %61, %57
  %63 = add i16 %56, 8
  %64 = add nsw i32 %58, -8
  %65 = getelementptr inbounds i8, i8* %55, i64 1
  %66 = icmp sgt i32 %64, -1
  %67 = icmp ult i8* %65, %49
  %68 = and i1 %67, %66
  br i1 %68, label %54, label %69

69:                                               ; preds = %54
  br i1 %67, label %79, label %70

70:                                               ; preds = %69, %45
  %71 = phi i8* [ %65, %69 ], [ %47, %45 ]
  %72 = phi i16 [ %63, %69 ], [ %37, %45 ]
  %73 = phi i32 [ %62, %69 ], [ %41, %45 ]
  %74 = sext i16 %72 to i32
  %75 = sub nsw i32 16384, %74
  %76 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %75, %77
  store i32 %78, i32* %76, align 8
  br label %79

79:                                               ; preds = %70, %69
  %80 = phi i8* [ %71, %70 ], [ %65, %69 ]
  %81 = phi i32 [ %73, %70 ], [ %62, %69 ]
  %82 = phi i16 [ 16384, %70 ], [ %63, %69 ]
  store i32 %81, i32* %4, align 8
  store i16 %82, i16* %34, align 2
  store i8* %80, i8** %46, align 8
  br label %83

83:                                               ; preds = %27, %79
  ret i32 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @od_ec_dec_tell(%struct.od_ec_dec* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.od_ec_dec* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = shl nsw i64 %7, 3
  %9 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 6
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i64
  %12 = sub nsw i64 %8, %11
  %13 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = trunc i64 %12 to i32
  %16 = add i32 %14, %15
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @od_ec_dec_tell_frac(%struct.od_ec_dec* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.od_ec_dec* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = shl nsw i64 %7, 3
  %9 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 6
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i64
  %12 = sub nsw i64 %8, %11
  %13 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = trunc i64 %12 to i32
  %16 = add i32 %14, %15
  %17 = getelementptr inbounds %struct.od_ec_dec, %struct.od_ec_dec* %0, i64 0, i32 5
  %18 = load i16, i16* %17, align 4
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @od_ec_tell_frac(i32 %16, i32 %19) #6
  ret i32 %20
}

declare i32 @od_ec_tell_frac(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
