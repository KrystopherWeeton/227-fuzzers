; ModuleID = '../../content/browser/conversions/rate_limit_table.cc'
source_filename = "../../content/browser/conversions/rate_limit_table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::RateLimitTable" = type { %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"* }
%"class.content::ConversionStorage::Delegate" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"struct.content::ConversionReport" = type { %"class.content::StorableImpression", i64, %"class.base::Time", %"class.base::Time", %"class.base::TimeDelta", %"class.absl::optional.19" }
%"class.content::StorableImpression" = type { i64, %"class.url::Origin", %"class.url::Origin", %"class.url::Origin", %"class.base::Time", %"class.base::Time", i32, i64, %"class.absl::optional.19" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { i64 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.24, i8, i8, [6 x i8] }>
%class.scoped_refptr.24 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::RepeatingCallback.25" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i64*, i64*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64* }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::flat_tree.33" = type { %"class.std::__1::vector.26" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

@_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE18kRateLimitTableSql = internal constant [303 x i8] c"CREATE TABLE IF NOT EXISTS rate_limits(rate_limit_id INTEGER PRIMARY KEY,attribution_type INTEGER NOT NULL,impression_id INTEGER NOT NULL,impression_site TEXT NOT NULL,impression_origin TEXT NOT NULL,conversion_destination TEXT NOT NULL,conversion_origin TEXT NOT NULL,conversion_time INTEGER NOT NULL)\00", align 16
@_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE36kRateLimitImpressionSiteTypeIndexSql = internal constant [154 x i8] c"CREATE INDEX IF NOT EXISTS rate_limit_impression_site_type_idx ON rate_limits(attribution_type, conversion_destination, impression_site, conversion_time)\00", align 16
@_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE32kRateLimitConversionTimeIndexSql = internal constant [90 x i8] c"CREATE INDEX IF NOT EXISTS rate_limit_conversion_time_idx ON rate_limits(conversion_time)\00", align 16
@_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE28kRateLimitImpressionIndexSql = internal constant [86 x i8] c"CREATE INDEX IF NOT EXISTS rate_limit_impression_id_idx ON rate_limits(impression_id)\00", align 16
@_ZZN7content14RateLimitTable12AddRateLimitEPN3sql8DatabaseERKNS_16ConversionReportEE18kStoreRateLimitSql = internal constant [176 x i8] c"INSERT INTO rate_limits (attribution_type, impression_id, impression_site, impression_origin, conversion_destination, conversion_origin, conversion_time) VALUES(?,?,?,?,?,?,?)\00", align 16
@.str = private unnamed_addr constant [54 x i8] c"../../content/browser/conversions/rate_limit_table.cc\00", align 1
@_ZZN7content14RateLimitTable20IsAttributionAllowedEPN3sql8DatabaseERKNS_16ConversionReportEN4base4TimeEE22kAttributionAllowedSql = internal constant [139 x i8] c"SELECT COUNT(*) FROM rate_limits WHERE attribution_type = ? AND impression_site = ? AND conversion_destination = ? AND conversion_time > ?\00", align 16
@_ZZN7content14RateLimitTable19ClearAllDataInRangeEPN3sql8DatabaseEN4base4TimeES5_E24kDeleteRateLimitRangeSql = internal constant [62 x i8] c"DELETE FROM rate_limits WHERE conversion_time BETWEEN ? AND ?\00", align 16
@_ZZN7content14RateLimitTable19ClearAllDataAllTimeEPN3sql8DatabaseEE23kDeleteAllRateLimitsSql = internal constant [24 x i8] c"DELETE FROM rate_limits\00", align 16
@_ZZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEEE18kScanCandidateData = internal constant [155 x i8] c"SELECT rate_limit_id, impression_site, impression_origin, conversion_destination, conversion_origin FROM rate_limits WHERE conversion_time BETWEEN ? AND ?\00", align 16
@_ZZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEEE19kDeleteRateLimitSql = internal constant [48 x i8] c"DELETE FROM rate_limits WHERE rate_limit_id = ?\00", align 16
@_ZZN7content14RateLimitTable23DeleteExpiredRateLimitsEPN3sql8DatabaseEE24kDeleteExpiredRateLimits = internal constant [51 x i8] c"DELETE FROM rate_limits WHERE conversion_time <= ?\00", align 16
@_ZZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEEE19kDeleteRateLimitSql = internal constant [48 x i8] c"DELETE FROM rate_limits WHERE impression_id = ?\00", align 16
@.str.1 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

@_ZN7content14RateLimitTableC1EPKNS_17ConversionStorage8DelegateEPKN4base5ClockE = hidden unnamed_addr alias void (%"class.content::RateLimitTable"*, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*), void (%"class.content::RateLimitTable"*, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*)* @_ZN7content14RateLimitTableC2EPKNS_17ConversionStorage8DelegateEPKN4base5ClockE
@_ZN7content14RateLimitTableD1Ev = hidden unnamed_addr alias void (%"class.content::RateLimitTable"*), void (%"class.content::RateLimitTable"*)* @_ZN7content14RateLimitTableD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content14RateLimitTableC2EPKNS_17ConversionStorage8DelegateEPKN4base5ClockE(%"class.content::RateLimitTable"* nocapture, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::RateLimitTable", %"class.content::RateLimitTable"* %0, i64 0, i32 0
  store %"class.content::ConversionStorage::Delegate"* %1, %"class.content::ConversionStorage::Delegate"** %4, align 8
  %5 = getelementptr inbounds %"class.content::RateLimitTable", %"class.content::RateLimitTable"* %0, i64 0, i32 1
  store %"class.base::Clock"* %2, %"class.base::Clock"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content14RateLimitTableD2Ev(%"class.content::RateLimitTable"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseE(%"class.content::RateLimitTable"* nocapture readnone, %"class.sql::Database"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([303 x i8], [303 x i8]* @_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE18kRateLimitTableSql, i64 0, i64 0)) #12
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([154 x i8], [154 x i8]* @_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE36kRateLimitImpressionSiteTypeIndexSql, i64 0, i64 0)) #12
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE32kRateLimitConversionTimeIndexSql, i64 0, i64 0)) #12
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @_ZZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseEE28kRateLimitImpressionIndexSql, i64 0, i64 0)) #12
  br label %10

10:                                               ; preds = %6, %4, %2, %8
  %11 = phi i1 [ %9, %8 ], [ false, %2 ], [ false, %4 ], [ false, %6 ]
  ret i1 %11
}

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable12AddRateLimitEPN3sql8DatabaseERKNS_16ConversionReportE(%"class.content::RateLimitTable"* nocapture readonly, %"class.sql::Database"*, %"struct.content::ConversionReport"* dereferenceable(344)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::SchemefulSite", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.net::SchemefulSite", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = tail call i32 @_ZN7content14RateLimitTable23DeleteExpiredRateLimitsEPN3sql8DatabaseE(%"class.content::RateLimitTable"* %0, %"class.sql::Database"* %1)
  %12 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 89, i8* getelementptr inbounds ([176 x i8], [176 x i8]* @_ZZN7content14RateLimitTable12AddRateLimitEPN3sql8DatabaseERKNS_16ConversionReportEE18kStoreRateLimitSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %14) #12
  %15 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 0, i32 0) #12
  %16 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %3
  call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %23) #12
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = bitcast %"class.net::SchemefulSite"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0, i32 1
  call void @_ZN3net13SchemefulSiteC1ERKN3url6OriginE(%"class.net::SchemefulSite"* nonnull %6, %"class.url::Origin"* dereferenceable(80) %27) #12
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::SchemefulSite"* nonnull %6) #12
  %28 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %21, %33
  %37 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %6, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %38 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.url::Origin"* %27) #12
  %39 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  %49 = bitcast %"class.net::SchemefulSite"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %49) #12
  call void @_ZNK7content18StorableImpression21ConversionDestinationEv(%"class.net::SchemefulSite"* nonnull sret %9, %"class.content::StorableImpression"* %16) #12
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.net::SchemefulSite"* nonnull %9) #12
  %50 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %51 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %47, %55
  %59 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %9, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  %60 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0, i32 2
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.url::Origin"* %61) #12
  %62 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %4, i32 5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %63 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %58, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %71 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %4, i32 6, i64 %72) #12
  %74 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content14RateLimitTable23DeleteExpiredRateLimitsEPN3sql8DatabaseE(%"class.content::RateLimitTable"* nocapture readonly, %"class.sql::Database"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = getelementptr inbounds %"class.content::RateLimitTable", %"class.content::RateLimitTable"* %0, i64 0, i32 1
  %6 = load %"class.base::Clock"*, %"class.base::Clock"** %5, align 8
  %7 = bitcast %"class.base::Clock"* %6 to i64 (%"class.base::Clock"*)***
  %8 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %8, i64 2
  %10 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::Clock"* %6) #12
  %12 = getelementptr inbounds %"class.content::RateLimitTable", %"class.content::RateLimitTable"* %0, i64 0, i32 0
  %13 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %12, align 8
  %14 = bitcast %"class.content::ConversionStorage::Delegate"* %13 to { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)***
  %15 = load { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)**, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*** %14, align 8
  %16 = getelementptr inbounds { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)** %15, i64 7
  %17 = load { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)** %16, align 8
  %18 = tail call { i64, i32 } %17(%"class.content::ConversionStorage::Delegate"* %13) #12
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %11, i64* %21, align 8
  %22 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %23 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  %24 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 216, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @_ZZN7content14RateLimitTable23DeleteExpiredRateLimitsEPN3sql8DatabaseEE24kDeleteExpiredRateLimits, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %25) #12
  %26 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %4, i32 0, i64 %22) #12
  %27 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #12
  br i1 %27, label %28, label %30

28:                                               ; preds = %2
  %29 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %1) #12
  br label %30

30:                                               ; preds = %2, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %2 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  ret i32 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #3

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN3net13SchemefulSiteC1ERKN3url6OriginE(%"class.net::SchemefulSite"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

declare void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.net::SchemefulSite"*) local_unnamed_addr #3

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #3

declare void @_ZNK7content18StorableImpression21ConversionDestinationEv(%"class.net::SchemefulSite"* sret, %"class.content::StorableImpression"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable20IsAttributionAllowedEPN3sql8DatabaseERKNS_16ConversionReportEN4base4TimeE(%"class.content::RateLimitTable"* nocapture readonly, %"class.sql::Database"*, %"struct.content::ConversionReport"* dereferenceable(344), i64) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.net::SchemefulSite", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.net::SchemefulSite", align 8
  %11 = getelementptr inbounds %"class.content::RateLimitTable", %"class.content::RateLimitTable"* %0, i64 0, i32 0
  %12 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %11, align 8
  %13 = bitcast %"class.content::ConversionStorage::Delegate"* %12 to { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)***
  %14 = load { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)**, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*** %13, align 8
  %15 = getelementptr inbounds { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)** %14, i64 7
  %16 = load { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)*, { i64, i32 } (%"class.content::ConversionStorage::Delegate"*)** %15, align 8
  %17 = tail call { i64, i32 } %16(%"class.content::ConversionStorage::Delegate"* %12) #12
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %3, i64* %20, align 8
  %21 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %5, i64 %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %22 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 118, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @_ZZN7content14RateLimitTable20IsAttributionAllowedEPN3sql8DatabaseERKNS_16ConversionReportEN4base4TimeEE22kAttributionAllowedSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %24) #12
  %25 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %6, i32 0, i32 0) #12
  %26 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast %"class.net::SchemefulSite"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %2, i64 0, i32 0, i32 1
  call void @_ZN3net13SchemefulSiteC1ERKN3url6OriginE(%"class.net::SchemefulSite"* nonnull %8, %"class.url::Origin"* dereferenceable(80) %29) #12
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::SchemefulSite"* nonnull %8) #12
  %30 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %6, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %31 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %4, %35
  %39 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %8, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %40 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = bitcast %"class.net::SchemefulSite"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %41) #12
  call void @_ZNK7content18StorableImpression21ConversionDestinationEv(%"class.net::SchemefulSite"* nonnull sret %10, %"class.content::StorableImpression"* %28) #12
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.net::SchemefulSite"* nonnull %10) #12
  %42 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %6, i32 2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #12
  %43 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %38, %47
  %51 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %10, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  %52 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %6, i32 3, i64 %21) #12
  %53 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #12
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = extractvalue { i64, i32 } %17, 1
  %56 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 0) #12
  %57 = sext i32 %55 to i64
  %58 = icmp slt i64 %56, %57
  br label %59

59:                                               ; preds = %50, %54
  %60 = phi i1 [ %58, %54 ], [ false, %50 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  ret i1 %60
}

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #3

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataInRangeEPN3sql8DatabaseEN4base4TimeES5_(%"class.content::RateLimitTable"* nocapture readnone, %"class.sql::Database"*, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 143, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @_ZZN7content14RateLimitTable19ClearAllDataInRangeEPN3sql8DatabaseEN4base4TimeES5_E24kDeleteRateLimitRangeSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %8) #12
  %9 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 0, i64 %2) #12
  %10 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 1, i64 %3) #12
  %11 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataAllTimeEPN3sql8DatabaseE(%"class.content::RateLimitTable"* nocapture readnone, %"class.sql::Database"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 154, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZN7content14RateLimitTable19ClearAllDataAllTimeEPN3sql8DatabaseEE23kDeleteAllRateLimitsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %6) #12
  %7 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEE(%"class.content::RateLimitTable"* nocapture readnone, %"class.sql::Database"*, i64, i64, %"class.base::RepeatingCallback.25"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.url::Origin", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.url::Origin", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.url::Origin", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.url::Origin", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.sql::Transaction", align 8
  %17 = alloca %"class.sql::Statement", align 8
  %18 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  %22 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 173, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @_ZZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEEE18kScanCandidateData, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %24) #12
  %25 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %7, i32 0, i64 %2) #12
  %26 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %7, i32 1, i64 %3) #12
  %27 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #12
  br i1 %27, label %28, label %157

28:                                               ; preds = %5
  %29 = bitcast %"class.url::Origin"* %8 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %31 = getelementptr inbounds %"class.base::RepeatingCallback.25", %"class.base::RepeatingCallback.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.url::Origin"* %10 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %34 = bitcast %"class.url::Origin"* %12 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %36 = bitcast %"class.url::Origin"* %14 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast i64** %20 to i64*
  %51 = bitcast %"class.std::__1::vector.26"* %6 to i64*
  %52 = bitcast i64** %21 to i64*
  br label %53

53:                                               ; preds = %28, %155
  %54 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %9, %"class.sql::Statement"* nonnull %7, i32 1) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #12
  %55 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %31, align 8
  %56 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %55, i64 0, i32 1
  %57 = bitcast void ()** %56 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %58 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %57, align 8
  %59 = call zeroext i1 %58(%"class.base::internal::BindStateBase"* %55, %"class.url::Origin"* nonnull dereferenceable(80) %8) #12
  br i1 %59, label %97, label %60

60:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %11, %"class.sql::Statement"* nonnull %7, i32 2) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %61 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %31, align 8
  %62 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %61, i64 0, i32 1
  %63 = bitcast void ()** %62 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %64 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %63, align 8
  %65 = call zeroext i1 %64(%"class.base::internal::BindStateBase"* %61, %"class.url::Origin"* nonnull dereferenceable(80) %10) #12
  br i1 %65, label %90, label %66

66:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %13, %"class.sql::Statement"* nonnull %7, i32 3) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #12
  %67 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %31, align 8
  %68 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %67, i64 0, i32 1
  %69 = bitcast void ()** %68 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %70 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %69, align 8
  %71 = call zeroext i1 %70(%"class.base::internal::BindStateBase"* %67, %"class.url::Origin"* nonnull dereferenceable(80) %12) #12
  br i1 %71, label %83, label %72

72:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %15, %"class.sql::Statement"* nonnull %7, i32 4) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #12
  %73 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %31, align 8
  %74 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %73, i64 0, i32 1
  %75 = bitcast void ()** %74 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %76 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %75, align 8
  %77 = call zeroext i1 %76(%"class.base::internal::BindStateBase"* %73, %"class.url::Origin"* nonnull dereferenceable(80) %14) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %14) #12
  %78 = load i8, i8* %39, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %72
  %81 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #12
  br label %83

83:                                               ; preds = %66, %82
  %84 = phi i1 [ %77, %82 ], [ true, %66 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %12) #12
  %85 = load i8, i8* %42, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #12
  br label %90

90:                                               ; preds = %60, %89
  %91 = phi i1 [ %84, %89 ], [ true, %60 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %10) #12
  %92 = load i8, i8* %45, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #12
  br label %97

97:                                               ; preds = %53, %96
  %98 = phi i1 [ %91, %96 ], [ true, %53 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #12
  %99 = load i8, i8* %48, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #12
  br i1 %98, label %104, label %155

104:                                              ; preds = %103
  %105 = load i64*, i64** %20, align 8
  %106 = load i64*, i64** %21, align 8
  %107 = icmp eq i64* %105, %106
  %108 = ptrtoint i64* %106 to i64
  br i1 %107, label %112, label %109

109:                                              ; preds = %104
  store i64 %54, i64* %105, align 8
  %110 = getelementptr inbounds i64, i64* %105, i64 1
  %111 = ptrtoint i64* %110 to i64
  store i64 %111, i64* %50, align 8
  br label %155

112:                                              ; preds = %104
  %113 = ptrtoint i64* %105 to i64
  %114 = load i64, i64* %51, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %120) #14
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %108, %114
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, 1152921504606846975
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 2
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 2305843009213693951
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  call void @abort() #14
  unreachable

133:                                              ; preds = %130, %121
  %134 = phi i64 [ %128, %130 ], [ 2305843009213693951, %121 ]
  %135 = shl i64 %134, 3
  %136 = call i8* @_Znwm(i64 %135) #13
  %137 = bitcast i8* %136 to i64*
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi i8* [ %136, %133 ], [ null, %125 ]
  %141 = phi i64* [ %137, %133 ], [ null, %125 ]
  %142 = getelementptr inbounds i64, i64* %141, i64 %116
  %143 = getelementptr inbounds i64, i64* %141, i64 %139
  %144 = ptrtoint i64* %143 to i64
  store i64 %54, i64* %142, align 8
  %145 = getelementptr inbounds i64, i64* %142, i64 1
  %146 = ptrtoint i64* %145 to i64
  %147 = ptrtoint i64* %141 to i64
  %148 = icmp sgt i64 %115, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %138
  %150 = inttoptr i64 %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %150, i64 %115, i1 false) #12
  br label %151

151:                                              ; preds = %149, %138
  store i64 %147, i64* %51, align 8
  store i64 %146, i64* %50, align 8
  store i64 %144, i64* %52, align 8
  %152 = icmp eq i64 %114, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %151
  %154 = inttoptr i64 %114 to i8*
  call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %153, %151, %109, %103
  %156 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #12
  br i1 %156, label %53, label %157

157:                                              ; preds = %155, %5
  %158 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %7) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  br i1 %158, label %159, label %183

159:                                              ; preds = %157
  %160 = bitcast %"class.sql::Transaction"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #12
  %161 = bitcast %"class.sql::Transaction"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %16, %"class.sql::Database"* %1) #12
  %162 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %16) #12
  br i1 %162, label %163, label %181

163:                                              ; preds = %159
  %164 = load i64*, i64** %19, align 8
  %165 = load i64*, i64** %20, align 8
  %166 = icmp eq i64* %164, %165
  br i1 %166, label %179, label %167

167:                                              ; preds = %163
  %168 = bitcast %"class.sql::Statement"* %17 to i8*
  %169 = bitcast %"class.sql::Statement"* %17 to i8*
  br label %172

170:                                              ; preds = %172
  %171 = icmp eq i64* %178, %165
  br i1 %171, label %179, label %172

172:                                              ; preds = %167, %170
  %173 = phi i64* [ %164, %167 ], [ %178, %170 ]
  %174 = load i64, i64* %173, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 16, i1 false)
  %175 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 199, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEEE19kDeleteRateLimitSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %17, %"class.sql::Database::StatementRef"* %175) #12
  %176 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %17, i32 0, i64 %174) #12
  %177 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %17) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #12
  %178 = getelementptr inbounds i64, i64* %173, i64 1
  br i1 %177, label %170, label %181

179:                                              ; preds = %170, %163
  %180 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %16) #12
  br label %181

181:                                              ; preds = %172, %159, %179
  %182 = phi i1 [ %180, %179 ], [ false, %159 ], [ false, %172 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #12
  br label %183

183:                                              ; preds = %157, %181
  %184 = phi i1 [ %182, %181 ], [ false, %157 ]
  %185 = load i64*, i64** %19, align 8
  %186 = icmp eq i64* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = ptrtoint i64* %185 to i64
  %189 = bitcast i64** %20 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast i64* %185 to i8*
  call void @_ZdlPv(i8* %190) #13
  br label %191

191:                                              ; preds = %183, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  ret i1 %184
}

declare void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #5

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #3

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #3

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #5

declare i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEE(%"class.content::RateLimitTable"* nocapture readnone, %"class.sql::Database"*, %"class.base::internal::flat_tree.33"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sql::Transaction", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %4, %"class.sql::Database"* %1) #12
  %8 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %4) #12
  br i1 %8, label %9, label %29

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::internal::flat_tree.33", %"class.base::internal::flat_tree.33"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::flat_tree.33", %"class.base::internal::flat_tree.33"* %2, i64 0, i32 0, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %11, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.sql::Statement"* %5 to i8*
  %17 = bitcast %"class.sql::Statement"* %5 to i8*
  br label %20

18:                                               ; preds = %20
  %19 = icmp eq i64* %26, %13
  br i1 %19, label %27, label %20

20:                                               ; preds = %15, %18
  %21 = phi i64* [ %11, %15 ], [ %26, %18 ]
  %22 = load i64, i64* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %23 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i64 236, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEEE19kDeleteRateLimitSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %23) #12
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %22) #12
  %25 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  %26 = getelementptr inbounds i64, i64* %21, i64 1
  br i1 %25, label %18, label %29

27:                                               ; preds = %18, %9
  %28 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %4) #12
  br label %29

29:                                               ; preds = %20, %3, %27
  %30 = phi i1 [ %28, %27 ], [ false, %3 ], [ false, %20 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
