; ModuleID = '../../ui/events/keycodes/keyboard_code_conversion_x.cc'
source_filename = "../../ui/events/keycodes/keyboard_code_conversion_x.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::(anonymous namespace)::MAP0" = type { i32, i8 }
%"struct.ui::(anonymous namespace)::MAP1" = type { i32, i32, i8 }
%"struct.ui::(anonymous namespace)::MAP2" = type { i32, i32, i32, i8 }
%"struct.ui::(anonymous namespace)::MAP3" = type { i32, i32, i32, i32, i8 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"struct.x11::Input::DeviceEvent" = type { i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"struct.x11::Input::ModifierInfo" = type { i32, i32, i32, i32 }
%"struct.x11::Input::GroupInfo" = type { i8, i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.x11::Input::Fp3232"*, %"struct.x11::Input::Fp3232"*, %"class.std::__1::__compressed_pair.3" }
%"struct.x11::Input::Fp3232" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.x11::Input::Fp3232"* }
%"struct.x11::KeyEvent" = type <{ i32, i8, i8, i16, i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.190", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.207", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.248", %"class.base::circular_deque", %"class.base::ObserverList.254", %"class.x11::Event"*, %"class.base::circular_deque.258", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.270" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.x11::Render"* }
%"class.x11::Render" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.x11::Input"* }
%"class.x11::Input" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.200" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.193", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.195" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.200" = type <{ %"class.std::__1::vector.193", %"class.base::LinkedList.201", i64, i32, [4 x i8] }>
%"class.base::LinkedList.201" = type { %"class.base::LinkNode.202" }
%"class.base::LinkNode.202" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.213", %"class.std::__1::vector.220" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.215" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.222" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.224" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.241" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.243" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.254" = type <{ %"class.std::__1::vector.193", %"class.base::LinkedList.255", i64, i32, [4 x i8] }>
%"class.base::LinkedList.255" = type { %"class.base::LinkNode.256" }
%"class.base::LinkNode.256" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::circular_deque.258" = type { %"class.base::internal::VectorBuffer.259", i64, i64 }
%"class.base::internal::VectorBuffer.259" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.261, %"class.std::__1::unique_ptr.263" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.261 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.262", [4 x i8] }>
%"class.base::RefCountedThreadSafe.262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.269 }
%union.anon.269 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.270" = type { %"class.base::internal::CallbackBase" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN2ui12_GLOBAL__N_14map0E = internal constant [51 x %"struct.ui::(anonymous namespace)::MAP0"] [%"struct.ui::(anonymous namespace)::MAP0" { i32 37, i8 53 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 38, i8 49 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 60, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 123, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 124, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 125, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 126, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 161, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 173, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 178, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 181, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 187, i8 57 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 189, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 191, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 223, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 229, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 234, i8 51 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 235, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 236, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 238, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 241, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 242, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 245, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 247, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 253, i8 55 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 254, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 417, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 432, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 437, i8 50 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 438, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 443, i8 53 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 486, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 492, i8 50 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 498, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 501, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 504, i8 53 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 505, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 507, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 510, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 601, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 689, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 697, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 699, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 741, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 757, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 950, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 954, i8 87 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 992, i8 -33 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 1007, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 1009, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP0" { i32 1011, i8 -36 }], align 16
@_ZN2ui12_GLOBAL__N_14map1E = internal constant [177 x %"struct.ui::(anonymous namespace)::MAP1"] [%"struct.ui::(anonymous namespace)::MAP1" { i32 33, i32 10, i8 49 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 33, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 33, i32 61, i8 -33 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 34, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 34, i32 12, i8 51 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 35, i32 49, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 36, i32 35, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 36, i32 51, i8 -33 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 39, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 39, i32 24, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 39, i32 25, i8 87 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 39, i32 35, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 39, i32 61, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 40, i32 14, i8 53 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 40, i32 18, i8 57 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 40, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 41, i32 19, i8 48 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 41, i32 20, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 41, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 42, i32 35, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 42, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 10, i8 49 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 21, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 34, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 35, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 47, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 43, i32 51, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 12, i8 51 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 14, i8 53 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 18, i8 57 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 25, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 55, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 58, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 44, i32 59, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 45, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 45, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 45, i32 20, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 45, i32 38, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 45, i32 48, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 16, i8 55 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 26, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 27, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 32, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 60, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 46, i32 61, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 20, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 24, i8 81 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 34, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 49, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 47, i32 61, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 58, i32 10, i8 49 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 58, i32 14, i8 53 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 58, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 58, i32 60, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 24, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 34, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 47, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 49, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 52, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 59, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 59, i32 61, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 61, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 61, i32 21, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 61, i32 35, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 63, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 63, i32 16, i8 55 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 63, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 63, i32 20, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 64, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 64, i32 49, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 91, i32 10, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 91, i32 20, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 91, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 91, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 91, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 92, i32 21, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 11, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 21, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 49, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 93, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 95, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 95, i32 20, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 167, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 167, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 167, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 171, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 171, i32 21, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 176, i32 21, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 176, i32 49, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 186, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 186, i32 49, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 224, i32 19, i8 48 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 224, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 225, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 225, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 226, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 226, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 228, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 230, i32 47, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 230, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 18, i8 57 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 51, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 231, i32 59, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 232, i32 16, i8 55 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 232, i32 34, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 232, i32 48, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 233, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 233, i32 19, i8 48 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 233, i32 61, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 237, i32 18, i8 57 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 237, i32 49, i8 48 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 240, i32 34, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 240, i32 35, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 243, i32 21, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 243, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 244, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 244, i32 47, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 246, i32 19, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 246, i32 20, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 246, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 248, i32 47, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 248, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 249, i32 48, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 249, i32 51, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 250, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 250, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 252, i32 25, i8 87 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 433, i32 10, i8 49 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 433, i32 24, i8 81 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 433, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 435, i32 47, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 435, i32 51, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 12, i8 51 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 38, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 41, i8 70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 441, i32 60, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 442, i32 47, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 442, i32 60, i8 -66 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 446, i32 15, i8 54 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 446, i32 21, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 446, i32 25, i8 87 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 446, i32 34, i8 89 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 446, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 447, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 447, i32 51, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 483, i32 10, i8 49 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 483, i32 34, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 488, i32 11, i8 50 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 488, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 488, i32 33, i8 88 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 488, i32 47, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 488, i32 59, i8 -68 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 490, i32 12, i8 51 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 496, i32 19, i8 48 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 496, i32 35, i8 -35 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 999, i32 14, i8 53 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1004, i32 13, i8 52 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1004, i32 48, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1017, i32 16, i8 55 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1022, i32 17, i8 56 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1022, i32 24, i8 81 }, %"struct.ui::(anonymous namespace)::MAP1" { i32 1022, i32 53, i8 88 }], align 16
@_ZN2ui12_GLOBAL__N_14map2E = internal constant [24 x %"struct.ui::(anonymous namespace)::MAP2"] [%"struct.ui::(anonymous namespace)::MAP2" { i32 35, i32 51, i32 39, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 39, i32 48, i32 34, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 39, i32 49, i32 34, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 39, i32 49, i32 183, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 39, i32 51, i32 0, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 45, i32 61, i32 61, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 47, i32 12, i32 51, i8 51 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 47, i32 12, i32 63, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 47, i32 19, i32 48, i8 48 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 47, i32 19, i32 63, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 61, i32 61, i32 37, i8 -33 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 61, i32 61, i32 43, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 92, i32 51, i32 124, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 96, i32 49, i32 0, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 96, i32 49, i32 172, i8 -33 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 167, i32 49, i32 176, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 167, i32 49, i32 189, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 224, i32 48, i32 176, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 224, i32 48, i32 228, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 228, i32 48, i32 224, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 233, i32 47, i32 201, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 233, i32 47, i32 246, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 246, i32 47, i32 233, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP2" { i32 252, i32 34, i32 232, i8 -70 }], align 16
@_ZN2ui12_GLOBAL__N_14map3E = internal constant [46 x %"struct.ui::(anonymous namespace)::MAP3"] [%"struct.ui::(anonymous namespace)::MAP3" { i32 35, i32 51, i32 126, i32 0, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 20, i32 63, i32 0, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 20, i32 63, i32 221, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 21, i32 42, i32 0, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 48, i32 64, i32 0, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 51, i32 42, i32 0, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 51, i32 42, i32 189, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 51, i32 42, i32 419, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 52, i32 34, i32 0, i8 90 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 39, i32 52, i32 34, i32 472, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 43, i32 20, i32 63, i32 0, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 43, i32 20, i32 63, i32 92, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 43, i32 20, i32 63, i32 501, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 21, i32 95, i32 0, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 21, i32 95, i32 947, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 61, i32 95, i32 0, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 61, i32 95, i32 42, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 61, i32 95, i32 47, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 45, i32 61, i32 95, i32 110, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 61, i32 20, i32 37, i32 0, i8 -69 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 61, i32 20, i32 37, i32 45, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 92, i32 49, i32 124, i32 49, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 92, i32 49, i32 124, i32 977, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 92, i32 51, i32 47, i32 0, i8 -36 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 92, i32 51, i32 47, i32 419, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 0, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 49, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 59, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 96, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 191, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 96, i32 49, i32 126, i32 501, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 228, i32 48, i32 196, i32 0, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 228, i32 48, i32 196, i32 422, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 228, i32 48, i32 196, i32 504, i8 -34 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 231, i32 47, i32 199, i32 0, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 231, i32 47, i32 199, i32 222, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 246, i32 47, i32 214, i32 0, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 246, i32 47, i32 214, i32 478, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 252, i32 20, i32 220, i32 0, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 252, i32 34, i32 220, i32 0, i8 -70 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 252, i32 34, i32 220, i32 419, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 490, i32 61, i32 458, i32 0, i8 -67 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 490, i32 61, i32 458, i32 110, i8 -65 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 999, i32 34, i32 967, i32 0, i8 -37 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 1017, i32 47, i32 985, i32 0, i8 -64 }, %"struct.ui::(anonymous namespace)::MAP3" { i32 1017, i32 47, i32 985, i32 478, i8 -70 }], align 16
@_ZZN2ui38DefaultKeyboardCodeFromHardwareKeycodeEjE19kHardwareKeycodeMap = internal unnamed_addr constant [136 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 27, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 48, i32 189, i32 187, i32 8, i32 9, i32 81, i32 87, i32 69, i32 82, i32 84, i32 89, i32 85, i32 73, i32 79, i32 80, i32 219, i32 221, i32 13, i32 162, i32 65, i32 83, i32 68, i32 70, i32 71, i32 72, i32 74, i32 75, i32 76, i32 186, i32 222, i32 192, i32 160, i32 220, i32 90, i32 88, i32 67, i32 86, i32 66, i32 78, i32 77, i32 188, i32 190, i32 191, i32 161, i32 106, i32 164, i32 32, i32 20, i32 112, i32 113, i32 114, i32 115, i32 116, i32 117, i32 118, i32 119, i32 120, i32 121, i32 144, i32 145, i32 103, i32 104, i32 105, i32 109, i32 100, i32 101, i32 102, i32 107, i32 97, i32 98, i32 99, i32 96, i32 110, i32 0, i32 244, i32 220, i32 122, i32 123, i32 226, i32 0, i32 0, i32 28, i32 0, i32 29, i32 108, i32 13, i32 163, i32 111, i32 44, i32 165, i32 13, i32 36, i32 38, i32 33, i32 37, i32 39, i32 35, i32 40, i32 34, i32 45, i32 46, i32 0, i32 173, i32 174, i32 175, i32 152, i32 187, i32 0, i32 19, i32 182, i32 110, i32 21, i32 25, i32 220, i32 91, i32 92, i32 230], align 16
@.str = private unnamed_addr constant [55 x i8] c"../../ui/events/keycodes/keyboard_code_conversion_x.cc\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Unknown keycode:\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui25KeyboardCodeFromXKeyEventERKN3x115EventE(%"class.x11::Event"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %25 [
    i32 31, label %4
    i32 52, label %14
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %"struct.x11::Input::DeviceEvent"**
  %7 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %6, align 8
  %8 = icmp eq %"struct.x11::Input::DeviceEvent"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 15, i32 3
  %13 = load i32, i32* %12, align 4
  br label %25

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %16 = bitcast i8** %15 to %"struct.x11::KeyEvent"**
  %17 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %16, align 8
  %18 = icmp eq %"struct.x11::KeyEvent"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %1, %4, %9, %14, %19
  %26 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %24, %19 ], [ 0, %4 ], [ %13, %9 ]
  %27 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %22, %19 ], [ 0, %4 ], [ %11, %9 ]
  %28 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %29 = trunc i32 %27 to i8
  %30 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %28, i8 zeroext %29, i32 %26) #7
  %31 = add i32 %30, -65408
  %32 = icmp ult i32 %31, 62
  %33 = and i32 %30, -65536
  %34 = icmp eq i32 %33, 285212672
  %35 = or i1 %32, %34
  %36 = and i32 %30, -16
  %37 = icmp eq i32 %36, 65360
  %38 = or i1 %37, %35
  br i1 %38, label %52, label %39

39:                                               ; preds = %25
  %40 = add i32 %30, -65470
  %41 = icmp ult i32 %40, 35
  %42 = add i32 %30, -65505
  %43 = icmp ult i32 %42, 14
  %44 = or i1 %41, %43
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = add i32 %30, -65025
  %47 = icmp ult i32 %46, 19
  %48 = or i32 %30, 1
  %49 = icmp eq i32 %48, 65407
  %50 = or i1 %49, %47
  br i1 %50, label %52, label %51

51:                                               ; preds = %45
  switch i32 %30, label %54 [
    i32 65288, label %52
    i32 65289, label %52
    i32 65290, label %52
    i32 65291, label %52
    i32 65293, label %52
    i32 65299, label %52
    i32 65300, label %52
    i32 65301, label %52
    i32 65307, label %52
    i32 65535, label %52
    i32 32, label %52
  ]

52:                                               ; preds = %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %51, %45, %39, %25
  %53 = tail call i32 @_ZN2ui23KeyboardCodeFromXKeysymEj(i32 %30)
  br label %346

54:                                               ; preds = %51
  %55 = and i32 %26, 239
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = and i32 %26, -240
  %59 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %60 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %59, i8 zeroext %29, i32 %58) #7
  br label %61

61:                                               ; preds = %54, %57
  %62 = phi i32 [ %26, %54 ], [ %58, %57 ]
  %63 = phi i32 [ %30, %54 ], [ %60, %57 ]
  %64 = add i32 %63, -97
  %65 = icmp ult i32 %64, 26
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = add nsw i32 %63, -32
  br label %346

68:                                               ; preds = %61
  %69 = add i32 %63, -48
  %70 = icmp ult i32 %69, 10
  br i1 %70, label %346, label %71

71:                                               ; preds = %68
  %72 = add i32 %63, -65408
  %73 = icmp ult i32 %72, 62
  %74 = and i32 %63, -65536
  %75 = icmp eq i32 %74, 285212672
  %76 = or i1 %73, %75
  %77 = and i32 %63, -16
  %78 = icmp eq i32 %77, 65360
  %79 = or i1 %78, %76
  br i1 %79, label %321, label %80

80:                                               ; preds = %71
  %81 = add i32 %63, -65470
  %82 = icmp ult i32 %81, 35
  %83 = add i32 %63, -65505
  %84 = icmp ult i32 %83, 14
  %85 = or i1 %82, %84
  br i1 %85, label %321, label %86

86:                                               ; preds = %80
  %87 = add i32 %63, -65025
  %88 = icmp ult i32 %87, 19
  %89 = or i32 %63, 1
  %90 = icmp eq i32 %89, 65407
  %91 = or i1 %90, %88
  br i1 %91, label %321, label %92

92:                                               ; preds = %86
  %93 = and i32 %63, 65535
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 51, %92 ], [ %106, %94 ]
  %96 = phi %"struct.ui::(anonymous namespace)::MAP0"* [ getelementptr inbounds ([51 x %"struct.ui::(anonymous namespace)::MAP0"], [51 x %"struct.ui::(anonymous namespace)::MAP0"]* @_ZN2ui12_GLOBAL__N_14map0E, i64 0, i64 0), %92 ], [ %105, %94 ]
  %97 = lshr i64 %95, 1
  %98 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP0", %"struct.ui::(anonymous namespace)::MAP0"* %96, i64 %97
  %99 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP0", %"struct.ui::(anonymous namespace)::MAP0"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, %93
  %102 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP0", %"struct.ui::(anonymous namespace)::MAP0"* %98, i64 1
  %103 = xor i64 %97, -1
  %104 = add i64 %95, %103
  %105 = select i1 %101, %"struct.ui::(anonymous namespace)::MAP0"* %102, %"struct.ui::(anonymous namespace)::MAP0"* %96
  %106 = select i1 %101, i64 %104, i64 %97
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %94

108:                                              ; preds = %94
  %109 = icmp eq %"struct.ui::(anonymous namespace)::MAP0"* %105, getelementptr inbounds ([51 x %"struct.ui::(anonymous namespace)::MAP0"], [51 x %"struct.ui::(anonymous namespace)::MAP0"]* @_ZN2ui12_GLOBAL__N_14map0E, i64 1, i64 0)
  br i1 %109, label %119, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP0", %"struct.ui::(anonymous namespace)::MAP0"* %105, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %93, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP0", %"struct.ui::(anonymous namespace)::MAP0"* %105, i64 0, i32 1
  %116 = load i8, i8* %115, align 4
  %117 = zext i8 %116 to i32
  %118 = icmp eq i8 %116, 0
  br i1 %118, label %119, label %346

119:                                              ; preds = %110, %108, %114
  br label %120

120:                                              ; preds = %119, %138
  %121 = phi i64 [ %140, %138 ], [ 177, %119 ]
  %122 = phi %"struct.ui::(anonymous namespace)::MAP1"* [ %139, %138 ], [ getelementptr inbounds ([177 x %"struct.ui::(anonymous namespace)::MAP1"], [177 x %"struct.ui::(anonymous namespace)::MAP1"]* @_ZN2ui12_GLOBAL__N_14map1E, i64 0, i64 0), %119 ]
  %123 = lshr i64 %121, 1
  %124 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %122, i64 %123
  %125 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %124, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, %93
  br i1 %127, label %128, label %132

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %122, i64 %123, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp ult i32 %130, %27
  br i1 %131, label %134, label %138

132:                                              ; preds = %120
  %133 = icmp ult i32 %126, %93
  br i1 %133, label %134, label %138

134:                                              ; preds = %132, %128
  %135 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %124, i64 1
  %136 = xor i64 %123, -1
  %137 = add i64 %121, %136
  br label %138

138:                                              ; preds = %134, %132, %128
  %139 = phi %"struct.ui::(anonymous namespace)::MAP1"* [ %135, %134 ], [ %122, %132 ], [ %122, %128 ]
  %140 = phi i64 [ %137, %134 ], [ %123, %132 ], [ %123, %128 ]
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %120

142:                                              ; preds = %138
  %143 = icmp eq %"struct.ui::(anonymous namespace)::MAP1"* %139, getelementptr inbounds ([177 x %"struct.ui::(anonymous namespace)::MAP1"], [177 x %"struct.ui::(anonymous namespace)::MAP1"]* @_ZN2ui12_GLOBAL__N_14map1E, i64 1, i64 0)
  br i1 %143, label %158, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %139, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, %93
  br i1 %147, label %148, label %158

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %139, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %27, %150
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP1", %"struct.ui::(anonymous namespace)::MAP1"* %139, i64 0, i32 2
  %154 = load i8, i8* %153, align 4
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %152
  %157 = zext i8 %154 to i32
  br label %346

158:                                              ; preds = %144, %148, %142, %152
  %159 = or i32 %62, 1
  %160 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %161 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %160, i8 zeroext %29, i32 %159) #7
  %162 = and i32 %161, 65535
  br label %163

163:                                              ; preds = %187, %158
  %164 = phi i64 [ 24, %158 ], [ %189, %187 ]
  %165 = phi %"struct.ui::(anonymous namespace)::MAP2"* [ getelementptr inbounds ([24 x %"struct.ui::(anonymous namespace)::MAP2"], [24 x %"struct.ui::(anonymous namespace)::MAP2"]* @_ZN2ui12_GLOBAL__N_14map2E, i64 0, i64 0), %158 ], [ %188, %187 ]
  %166 = lshr i64 %164, 1
  %167 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %165, i64 %166
  %168 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, %93
  br i1 %170, label %171, label %181

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %165, i64 %166, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, %27
  br i1 %174, label %175, label %179

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %165, i64 %166, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = icmp ult i32 %177, %162
  br i1 %178, label %183, label %187

179:                                              ; preds = %171
  %180 = icmp ult i32 %173, %27
  br i1 %180, label %183, label %187

181:                                              ; preds = %163
  %182 = icmp ult i32 %169, %93
  br i1 %182, label %183, label %187

183:                                              ; preds = %181, %179, %175
  %184 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %167, i64 1
  %185 = xor i64 %166, -1
  %186 = add i64 %164, %185
  br label %187

187:                                              ; preds = %183, %181, %179, %175
  %188 = phi %"struct.ui::(anonymous namespace)::MAP2"* [ %184, %183 ], [ %165, %181 ], [ %165, %175 ], [ %165, %179 ]
  %189 = phi i64 [ %186, %183 ], [ %166, %181 ], [ %166, %175 ], [ %166, %179 ]
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %163

191:                                              ; preds = %187
  %192 = icmp eq %"struct.ui::(anonymous namespace)::MAP2"* %188, getelementptr inbounds ([24 x %"struct.ui::(anonymous namespace)::MAP2"], [24 x %"struct.ui::(anonymous namespace)::MAP2"]* @_ZN2ui12_GLOBAL__N_14map2E, i64 1, i64 0)
  br i1 %192, label %211, label %193

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %188, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %93
  br i1 %196, label %197, label %211

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %188, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, %27
  br i1 %200, label %201, label %211

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %188, i64 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %162, %203
  br i1 %204, label %205, label %211

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP2", %"struct.ui::(anonymous namespace)::MAP2"* %188, i64 0, i32 3
  %207 = load i8, i8* %206, align 4
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = zext i8 %207 to i32
  br label %346

211:                                              ; preds = %201, %197, %193, %191, %205
  %212 = and i32 %62, -10
  %213 = or i32 %212, 8
  %214 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %215 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %214, i8 zeroext %29, i32 %213) #7
  %216 = and i32 %215, 65535
  br label %217

217:                                              ; preds = %247, %211
  %218 = phi i64 [ 46, %211 ], [ %249, %247 ]
  %219 = phi %"struct.ui::(anonymous namespace)::MAP3"* [ getelementptr inbounds ([46 x %"struct.ui::(anonymous namespace)::MAP3"], [46 x %"struct.ui::(anonymous namespace)::MAP3"]* @_ZN2ui12_GLOBAL__N_14map3E, i64 0, i64 0), %211 ], [ %248, %247 ]
  %220 = lshr i64 %218, 1
  %221 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %219, i64 %220
  %222 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, %93
  br i1 %224, label %225, label %241

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %219, i64 %220, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, %27
  br i1 %228, label %229, label %239

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %219, i64 %220, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %162
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %219, i64 %220, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = icmp ult i32 %235, %216
  br i1 %236, label %243, label %247

237:                                              ; preds = %229
  %238 = icmp ult i32 %231, %162
  br i1 %238, label %243, label %247

239:                                              ; preds = %225
  %240 = icmp ult i32 %227, %27
  br i1 %240, label %243, label %247

241:                                              ; preds = %217
  %242 = icmp ult i32 %223, %93
  br i1 %242, label %243, label %247

243:                                              ; preds = %241, %239, %237, %233
  %244 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %221, i64 1
  %245 = xor i64 %220, -1
  %246 = add i64 %218, %245
  br label %247

247:                                              ; preds = %243, %241, %239, %237, %233
  %248 = phi %"struct.ui::(anonymous namespace)::MAP3"* [ %244, %243 ], [ %219, %241 ], [ %219, %233 ], [ %219, %237 ], [ %219, %239 ]
  %249 = phi i64 [ %246, %243 ], [ %220, %241 ], [ %220, %233 ], [ %220, %237 ], [ %220, %239 ]
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %217

251:                                              ; preds = %247
  %252 = icmp eq %"struct.ui::(anonymous namespace)::MAP3"* %248, getelementptr inbounds ([46 x %"struct.ui::(anonymous namespace)::MAP3"], [46 x %"struct.ui::(anonymous namespace)::MAP3"]* @_ZN2ui12_GLOBAL__N_14map3E, i64 1, i64 0)
  br i1 %252, label %274, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %248, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, %93
  br i1 %256, label %257, label %274

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %248, i64 0, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, %27
  br i1 %260, label %261, label %274

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %248, i64 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %263, %162
  br i1 %264, label %265, label %274

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %248, i64 0, i32 3
  %267 = load i32, i32* %266, align 4
  %268 = icmp eq i32 %216, %267
  br i1 %268, label %269, label %274

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %248, i64 0, i32 4
  %271 = load i8, i8* %270, align 4
  %272 = zext i8 %271 to i32
  %273 = icmp eq i8 %271, 0
  br i1 %273, label %274, label %346

274:                                              ; preds = %265, %261, %257, %253, %251, %269
  br label %275

275:                                              ; preds = %274, %299
  %276 = phi i64 [ %301, %299 ], [ 46, %274 ]
  %277 = phi %"struct.ui::(anonymous namespace)::MAP3"* [ %300, %299 ], [ getelementptr inbounds ([46 x %"struct.ui::(anonymous namespace)::MAP3"], [46 x %"struct.ui::(anonymous namespace)::MAP3"]* @_ZN2ui12_GLOBAL__N_14map3E, i64 0, i64 0), %274 ]
  %278 = lshr i64 %276, 1
  %279 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %277, i64 %278
  %280 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %279, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, %93
  br i1 %282, label %283, label %293

283:                                              ; preds = %275
  %284 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %277, i64 %278, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, %27
  br i1 %286, label %287, label %291

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %277, i64 %278, i32 2
  %289 = load i32, i32* %288, align 4
  %290 = icmp ult i32 %289, %162
  br i1 %290, label %295, label %299

291:                                              ; preds = %283
  %292 = icmp ult i32 %285, %27
  br i1 %292, label %295, label %299

293:                                              ; preds = %275
  %294 = icmp ult i32 %281, %93
  br i1 %294, label %295, label %299

295:                                              ; preds = %287, %293, %291
  %296 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %279, i64 1
  %297 = xor i64 %278, -1
  %298 = add i64 %276, %297
  br label %299

299:                                              ; preds = %287, %295, %293, %291
  %300 = phi %"struct.ui::(anonymous namespace)::MAP3"* [ %296, %295 ], [ %277, %293 ], [ %277, %291 ], [ %277, %287 ]
  %301 = phi i64 [ %298, %295 ], [ %278, %293 ], [ %278, %291 ], [ %278, %287 ]
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %275

303:                                              ; preds = %299
  %304 = icmp eq %"struct.ui::(anonymous namespace)::MAP3"* %300, getelementptr inbounds ([46 x %"struct.ui::(anonymous namespace)::MAP3"], [46 x %"struct.ui::(anonymous namespace)::MAP3"]* @_ZN2ui12_GLOBAL__N_14map3E, i64 1, i64 0)
  br i1 %304, label %321, label %305

305:                                              ; preds = %303
  %306 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %300, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, %93
  br i1 %308, label %309, label %321

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %300, i64 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, %27
  br i1 %312, label %313, label %321

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %300, i64 0, i32 2
  %315 = load i32, i32* %314, align 4
  %316 = icmp eq i32 %315, %162
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"struct.ui::(anonymous namespace)::MAP3", %"struct.ui::(anonymous namespace)::MAP3"* %300, i64 0, i32 4
  %319 = load i8, i8* %318, align 4
  %320 = zext i8 %319 to i32
  br label %346

321:                                              ; preds = %305, %309, %313, %303, %86, %80, %71
  %322 = tail call i32 @_ZN2ui23KeyboardCodeFromXKeysymEj(i32 %63)
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %346

324:                                              ; preds = %321
  %325 = add i32 %63, -65505
  %326 = icmp ult i32 %325, 14
  br i1 %326, label %346, label %327

327:                                              ; preds = %324
  %328 = add i32 %63, -65025
  %329 = icmp ult i32 %328, 19
  %330 = or i32 %63, 1
  %331 = icmp eq i32 %330, 65407
  %332 = or i1 %331, %329
  br i1 %332, label %346, label %333

333:                                              ; preds = %327
  %334 = icmp ult i32 %27, 136
  br i1 %334, label %342, label %335

335:                                              ; preds = %333
  switch i32 %27, label %341 [
    i32 166, label %346
    i32 167, label %336
    i32 181, label %337
    i32 212, label %338
    i32 232, label %339
    i32 233, label %340
  ]

336:                                              ; preds = %335
  br label %346

337:                                              ; preds = %335
  br label %346

338:                                              ; preds = %335
  br label %346

339:                                              ; preds = %335
  br label %346

340:                                              ; preds = %335
  br label %346

341:                                              ; preds = %335
  br label %346

342:                                              ; preds = %333
  %343 = zext i32 %27 to i64
  %344 = getelementptr inbounds [136 x i32], [136 x i32]* @_ZZN2ui38DefaultKeyboardCodeFromHardwareKeycodeEjE19kHardwareKeycodeMap, i64 0, i64 %343
  %345 = load i32, i32* %344, align 4
  br label %346

346:                                              ; preds = %269, %317, %324, %114, %342, %341, %340, %339, %338, %337, %336, %335, %209, %156, %321, %327, %68, %66, %52
  %347 = phi i32 [ %53, %52 ], [ %67, %66 ], [ %63, %68 ], [ 0, %327 ], [ %322, %321 ], [ %157, %156 ], [ %210, %209 ], [ 0, %341 ], [ 217, %340 ], [ 216, %339 ], [ 251, %338 ], [ 168, %337 ], [ 167, %336 ], [ %345, %342 ], [ 8, %335 ], [ %117, %114 ], [ 0, %324 ], [ %272, %269 ], [ %320, %317 ]
  ret i32 %347
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui23KeyboardCodeFromXKeysymEj(i32) local_unnamed_addr #2 {
  switch i32 %0, label %95 [
    i32 65288, label %96
    i32 65535, label %2
    i32 65439, label %2
    i32 65289, label %3
    i32 65417, label %3
    i32 65056, label %3
    i32 64773, label %3
    i32 65290, label %4
    i32 65293, label %4
    i32 65421, label %4
    i32 65076, label %4
    i32 65291, label %5
    i32 65437, label %5
    i32 65408, label %6
    i32 32, label %6
    i32 65360, label %7
    i32 65429, label %7
    i32 65367, label %8
    i32 65436, label %8
    i32 65365, label %9
    i32 65434, label %9
    i32 65366, label %10
    i32 65435, label %10
    i32 65361, label %11
    i32 65430, label %11
    i32 65363, label %12
    i32 65432, label %12
    i32 65364, label %13
    i32 65433, label %13
    i32 65362, label %14
    i32 65431, label %14
    i32 65307, label %15
    i32 65325, label %16
    i32 65326, label %16
    i32 65329, label %17
    i32 65332, label %18
    i32 65313, label %19
    i32 65315, label %20
    i32 65314, label %21
    i32 65322, label %22
    i32 65456, label %23
    i32 65457, label %23
    i32 65458, label %23
    i32 65459, label %23
    i32 65460, label %23
    i32 65461, label %23
    i32 65462, label %23
    i32 65463, label %23
    i32 65464, label %23
    i32 65465, label %23
    i32 215, label %25
    i32 65450, label %25
    i32 65451, label %26
    i32 65452, label %27
    i32 65453, label %28
    i32 65454, label %29
    i32 65455, label %30
    i32 65469, label %31
    i32 61, label %31
    i32 43, label %31
    i32 44, label %32
    i32 60, label %32
    i32 45, label %33
    i32 95, label %33
    i32 62, label %34
    i32 46, label %34
    i32 58, label %35
    i32 59, label %35
    i32 63, label %36
    i32 47, label %36
    i32 126, label %37
    i32 96, label %37
    i32 91, label %38
    i32 123, label %38
    i32 92, label %39
    i32 124, label %39
    i32 93, label %40
    i32 125, label %40
    i32 39, label %41
    i32 34, label %41
    i32 65041, label %42
    i32 65505, label %43
    i32 65506, label %43
    i32 65507, label %44
    i32 65508, label %44
    i32 65511, label %45
    i32 65512, label %45
    i32 65513, label %45
    i32 65514, label %45
    i32 65027, label %46
    i32 65406, label %46
    i32 65312, label %47
    i32 65299, label %48
    i32 65509, label %49
    i32 65407, label %50
    i32 65300, label %51
    i32 65376, label %52
    i32 65377, label %53
    i32 65378, label %54
    i32 65379, label %55
    i32 65438, label %55
    i32 65386, label %56
    i32 65515, label %57
    i32 65516, label %58
    i32 65383, label %59
    i32 65470, label %60
    i32 65471, label %60
    i32 65472, label %60
    i32 65473, label %60
    i32 65474, label %60
    i32 65475, label %60
    i32 65476, label %60
    i32 65477, label %60
    i32 65478, label %60
    i32 65479, label %60
    i32 65480, label %60
    i32 65481, label %60
    i32 65482, label %60
    i32 65483, label %60
    i32 65484, label %60
    i32 65485, label %60
    i32 65486, label %60
    i32 65487, label %60
    i32 65488, label %60
    i32 65489, label %60
    i32 65490, label %60
    i32 65491, label %60
    i32 65492, label %60
    i32 65493, label %60
    i32 65425, label %62
    i32 65426, label %62
    i32 65427, label %62
    i32 65428, label %62
    i32 171, label %64
    i32 187, label %64
    i32 176, label %64
    i32 249, label %64
    i32 217, label %64
    i32 166, label %64
    i32 269025153, label %65
    i32 269025093, label %66
    i32 269025094, label %67
    i32 269025095, label %68
    i32 269025096, label %69
    i32 269025097, label %70
    i32 269025062, label %71
    i32 269025063, label %72
    i32 269025139, label %73
    i32 269025064, label %74
    i32 269025051, label %75
    i32 269025072, label %76
    i32 269025048, label %77
    i32 269025042, label %78
    i32 269025041, label %79
    i32 269025043, label %80
    i32 269025047, label %81
    i32 269025046, label %82
    i32 269025045, label %83
    i32 269025044, label %84
    i32 269025049, label %85
    i32 269025098, label %86
    i32 269025099, label %87
    i32 269025053, label %87
    i32 269025173, label %88
    i32 269025066, label %89
    i32 269025071, label %90
    i32 269025027, label %91
    i32 269025026, label %92
    i32 269025030, label %93
    i32 269025029, label %94
  ]

2:                                                ; preds = %1, %1
  br label %96

3:                                                ; preds = %1, %1, %1, %1
  br label %96

4:                                                ; preds = %1, %1, %1, %1
  br label %96

5:                                                ; preds = %1, %1
  br label %96

6:                                                ; preds = %1, %1
  br label %96

7:                                                ; preds = %1, %1
  br label %96

8:                                                ; preds = %1, %1
  br label %96

9:                                                ; preds = %1, %1
  br label %96

10:                                               ; preds = %1, %1
  br label %96

11:                                               ; preds = %1, %1
  br label %96

12:                                               ; preds = %1, %1
  br label %96

13:                                               ; preds = %1, %1
  br label %96

14:                                               ; preds = %1, %1
  br label %96

15:                                               ; preds = %1
  br label %96

16:                                               ; preds = %1, %1
  br label %96

17:                                               ; preds = %1
  br label %96

18:                                               ; preds = %1
  br label %96

19:                                               ; preds = %1
  br label %96

20:                                               ; preds = %1
  br label %96

21:                                               ; preds = %1
  br label %96

22:                                               ; preds = %1
  br label %96

23:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %24 = add nsw i32 %0, -65360
  br label %96

25:                                               ; preds = %1, %1
  br label %96

26:                                               ; preds = %1
  br label %96

27:                                               ; preds = %1
  br label %96

28:                                               ; preds = %1
  br label %96

29:                                               ; preds = %1
  br label %96

30:                                               ; preds = %1
  br label %96

31:                                               ; preds = %1, %1, %1
  br label %96

32:                                               ; preds = %1, %1
  br label %96

33:                                               ; preds = %1, %1
  br label %96

34:                                               ; preds = %1, %1
  br label %96

35:                                               ; preds = %1, %1
  br label %96

36:                                               ; preds = %1, %1
  br label %96

37:                                               ; preds = %1, %1
  br label %96

38:                                               ; preds = %1, %1
  br label %96

39:                                               ; preds = %1, %1
  br label %96

40:                                               ; preds = %1, %1
  br label %96

41:                                               ; preds = %1, %1
  br label %96

42:                                               ; preds = %1
  br label %96

43:                                               ; preds = %1, %1
  br label %96

44:                                               ; preds = %1, %1
  br label %96

45:                                               ; preds = %1, %1, %1, %1
  br label %96

46:                                               ; preds = %1, %1
  br label %96

47:                                               ; preds = %1
  br label %96

48:                                               ; preds = %1
  br label %96

49:                                               ; preds = %1
  br label %96

50:                                               ; preds = %1
  br label %96

51:                                               ; preds = %1
  br label %96

52:                                               ; preds = %1
  br label %96

53:                                               ; preds = %1
  br label %96

54:                                               ; preds = %1
  br label %96

55:                                               ; preds = %1, %1
  br label %96

56:                                               ; preds = %1
  br label %96

57:                                               ; preds = %1
  br label %96

58:                                               ; preds = %1
  br label %96

59:                                               ; preds = %1
  br label %96

60:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %61 = add nsw i32 %0, -65358
  br label %96

62:                                               ; preds = %1, %1, %1, %1
  %63 = add nsw i32 %0, -65313
  br label %96

64:                                               ; preds = %1, %1, %1, %1, %1, %1
  br label %96

65:                                               ; preds = %1
  br label %96

66:                                               ; preds = %1
  br label %96

67:                                               ; preds = %1
  br label %96

68:                                               ; preds = %1
  br label %96

69:                                               ; preds = %1
  br label %96

70:                                               ; preds = %1
  br label %96

71:                                               ; preds = %1
  br label %96

72:                                               ; preds = %1
  br label %96

73:                                               ; preds = %1
  br label %96

74:                                               ; preds = %1
  br label %96

75:                                               ; preds = %1
  br label %96

76:                                               ; preds = %1
  br label %96

77:                                               ; preds = %1
  br label %96

78:                                               ; preds = %1
  br label %96

79:                                               ; preds = %1
  br label %96

80:                                               ; preds = %1
  br label %96

81:                                               ; preds = %1
  br label %96

82:                                               ; preds = %1
  br label %96

83:                                               ; preds = %1
  br label %96

84:                                               ; preds = %1
  br label %96

85:                                               ; preds = %1
  br label %96

86:                                               ; preds = %1
  br label %96

87:                                               ; preds = %1, %1
  br label %96

88:                                               ; preds = %1
  br label %96

89:                                               ; preds = %1
  br label %96

90:                                               ; preds = %1
  br label %96

91:                                               ; preds = %1
  br label %96

92:                                               ; preds = %1
  br label %96

93:                                               ; preds = %1
  br label %96

94:                                               ; preds = %1
  br label %96

95:                                               ; preds = %1
  br label %96

96:                                               ; preds = %1, %95, %94, %93, %92, %91, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %62, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %97 = phi i32 [ 0, %95 ], [ 232, %94 ], [ 218, %93 ], [ 217, %92 ], [ 216, %91 ], [ 95, %90 ], [ 152, %89 ], [ 151, %88 ], [ 183, %87 ], [ 182, %86 ], [ 180, %85 ], [ 179, %84 ], [ 178, %83 ], [ 177, %82 ], [ 176, %81 ], [ 175, %80 ], [ 174, %79 ], [ 173, %78 ], [ 172, %77 ], [ 171, %76 ], [ 170, %75 ], [ 169, %74 ], [ 168, %73 ], [ 167, %72 ], [ 166, %71 ], [ 129, %70 ], [ 128, %69 ], [ 127, %68 ], [ 126, %67 ], [ 125, %66 ], [ 124, %65 ], [ 226, %64 ], [ %63, %62 ], [ %61, %60 ], [ 93, %59 ], [ 92, %58 ], [ 91, %57 ], [ 47, %56 ], [ 45, %55 ], [ 43, %54 ], [ 44, %53 ], [ 41, %52 ], [ 145, %51 ], [ 144, %50 ], [ 20, %49 ], [ 19, %48 ], [ 230, %47 ], [ 225, %46 ], [ 18, %45 ], [ 17, %44 ], [ 16, %43 ], [ 223, %42 ], [ 222, %41 ], [ 221, %40 ], [ 220, %39 ], [ 219, %38 ], [ 192, %37 ], [ 191, %36 ], [ 186, %35 ], [ 190, %34 ], [ 189, %33 ], [ 188, %32 ], [ 187, %31 ], [ 111, %30 ], [ 110, %29 ], [ 109, %28 ], [ 108, %27 ], [ 107, %26 ], [ 106, %25 ], [ %24, %23 ], [ 244, %22 ], [ 29, %21 ], [ 28, %20 ], [ 25, %19 ], [ 25, %18 ], [ 21, %17 ], [ 21, %16 ], [ 27, %15 ], [ 38, %14 ], [ 40, %13 ], [ 39, %12 ], [ 37, %11 ], [ 34, %10 ], [ 33, %9 ], [ 35, %8 ], [ 36, %7 ], [ 32, %6 ], [ 12, %5 ], [ 13, %4 ], [ 9, %3 ], [ 46, %2 ], [ 8, %1 ]
  ret i32 %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2ui38DefaultKeyboardCodeFromHardwareKeycodeEj(i32) local_unnamed_addr #2 {
  %2 = icmp ult i32 %0, 136
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  switch i32 %0, label %9 [
    i32 166, label %14
    i32 167, label %4
    i32 181, label %5
    i32 212, label %6
    i32 232, label %7
    i32 233, label %8
  ]

4:                                                ; preds = %3
  br label %14

5:                                                ; preds = %3
  br label %14

6:                                                ; preds = %3
  br label %14

7:                                                ; preds = %3
  br label %14

8:                                                ; preds = %3
  br label %14

9:                                                ; preds = %3
  br label %14

10:                                               ; preds = %1
  %11 = zext i32 %0 to i64
  %12 = getelementptr inbounds [136 x i32], [136 x i32]* @_ZZN2ui38DefaultKeyboardCodeFromHardwareKeycodeEjE19kHardwareKeycodeMap, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %3, %10, %9, %8, %7, %6, %5, %4
  %15 = phi i32 [ 0, %9 ], [ 217, %8 ], [ 216, %7 ], [ 251, %6 ], [ 168, %5 ], [ 167, %4 ], [ %13, %10 ], [ 8, %3 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui14CodeFromXEventERKN3x115EventE(%"class.x11::Event"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %16 [
    i32 31, label %4
    i32 52, label %12
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %"struct.x11::Input::DeviceEvent"**
  %7 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %6, align 8
  %8 = icmp eq %"struct.x11::Input::DeviceEvent"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  br label %21

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %14 = bitcast i8** %13 to %"struct.x11::KeyEvent"**
  %15 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %14, align 8
  br label %16

16:                                               ; preds = %1, %4, %12
  %17 = phi %"struct.x11::KeyEvent"* [ %15, %12 ], [ null, %4 ], [ null, %1 ]
  %18 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  br label %21

21:                                               ; preds = %16, %9
  %22 = phi i32 [ %11, %9 ], [ %20, %16 ]
  %23 = tail call i32 @_ZN2ui16KeycodeConverter22NativeKeycodeToDomCodeEi(i32 %22) #7
  ret i32 %23
}

declare i32 @_ZN2ui16KeycodeConverter22NativeKeycodeToDomCodeEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN2ui22GetCharacterFromXEventERKN3x115EventE(%"class.x11::Event"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %25 [
    i32 31, label %4
    i32 52, label %14
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %"struct.x11::Input::DeviceEvent"**
  %7 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %6, align 8
  %8 = icmp eq %"struct.x11::Input::DeviceEvent"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 15, i32 3
  %13 = load i32, i32* %12, align 4
  br label %25

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %16 = bitcast i8** %15 to %"struct.x11::KeyEvent"**
  %17 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %16, align 8
  %18 = icmp eq %"struct.x11::KeyEvent"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %1, %4, %9, %14, %19
  %26 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %22, %19 ], [ 0, %4 ], [ %11, %9 ]
  %27 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %24, %19 ], [ 0, %4 ], [ %13, %9 ]
  %28 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %29 = trunc i32 %26 to i8
  %30 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %28, i8 zeroext %29, i32 %27) #7
  %31 = zext i32 %30 to i64
  %32 = tail call zeroext i16 @_ZN2ui30GetUnicodeCharacterFromXKeySymEm(i64 %31) #7
  ret i16 %32
}

declare zeroext i16 @_ZN2ui30GetUnicodeCharacterFromXKeySymEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui19GetDomKeyFromXEventERKN3x115EventE(%"class.x11::Event"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %25 [
    i32 31, label %4
    i32 52, label %14
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %6 = bitcast i8** %5 to %"struct.x11::Input::DeviceEvent"**
  %7 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %6, align 8
  %8 = icmp eq %"struct.x11::Input::DeviceEvent"* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %7, i64 0, i32 15, i32 3
  %13 = load i32, i32* %12, align 4
  br label %25

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %0, i64 0, i32 3
  %16 = bitcast i8** %15 to %"struct.x11::KeyEvent"**
  %17 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %16, align 8
  %18 = icmp eq %"struct.x11::KeyEvent"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %17, i64 0, i32 12
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %1, %4, %9, %14, %19
  %26 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %22, %19 ], [ 0, %4 ], [ %11, %9 ]
  %27 = phi i32 [ 0, %1 ], [ 0, %14 ], [ %24, %19 ], [ 0, %4 ], [ %13, %9 ]
  %28 = and i32 %27, -5
  %29 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %30 = trunc i32 %26 to i8
  %31 = tail call i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"* %29, i8 zeroext %30, i32 %28) #7
  %32 = zext i32 %31 to i64
  %33 = tail call zeroext i16 @_ZN2ui30GetUnicodeCharacterFromXKeySymEm(i64 %32) #7
  %34 = tail call i32 @_ZN2ui15XKeySymToDomKeyEjDs(i32 %31, i16 zeroext %33) #7
  ret i32 %34
}

declare i32 @_ZN2ui15XKeySymToDomKeyEjDs(i32, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui24XKeysymForWindowsKeyCodeENS_12KeyboardCodeEb(i32, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::LogMessage", align 8
  switch i32 %0, label %132 [
    i32 96, label %140
    i32 97, label %4
    i32 98, label %5
    i32 99, label %6
    i32 100, label %7
    i32 101, label %8
    i32 102, label %9
    i32 103, label %10
    i32 104, label %11
    i32 105, label %12
    i32 106, label %13
    i32 107, label %14
    i32 109, label %15
    i32 110, label %16
    i32 111, label %17
    i32 8, label %18
    i32 9, label %19
    i32 12, label %21
    i32 13, label %22
    i32 16, label %23
    i32 160, label %23
    i32 161, label %24
    i32 17, label %25
    i32 18, label %26
    i32 93, label %27
    i32 225, label %28
    i32 230, label %29
    i32 19, label %30
    i32 20, label %31
    i32 21, label %32
    i32 25, label %33
    i32 28, label %34
    i32 29, label %35
    i32 243, label %36
    i32 244, label %37
    i32 27, label %38
    i32 32, label %39
    i32 33, label %40
    i32 34, label %41
    i32 35, label %42
    i32 36, label %43
    i32 37, label %44
    i32 38, label %45
    i32 39, label %46
    i32 40, label %47
    i32 41, label %48
    i32 42, label %49
    i32 43, label %50
    i32 45, label %51
    i32 46, label %52
    i32 47, label %53
    i32 48, label %54
    i32 49, label %56
    i32 50, label %58
    i32 51, label %60
    i32 52, label %62
    i32 53, label %64
    i32 54, label %66
    i32 55, label %68
    i32 56, label %70
    i32 57, label %72
    i32 65, label %74
    i32 66, label %74
    i32 67, label %74
    i32 68, label %74
    i32 69, label %74
    i32 70, label %74
    i32 71, label %74
    i32 72, label %74
    i32 73, label %74
    i32 74, label %74
    i32 75, label %74
    i32 76, label %74
    i32 77, label %74
    i32 78, label %74
    i32 79, label %74
    i32 80, label %74
    i32 81, label %74
    i32 82, label %74
    i32 83, label %74
    i32 84, label %74
    i32 85, label %74
    i32 86, label %74
    i32 87, label %74
    i32 88, label %74
    i32 89, label %74
    i32 90, label %74
    i32 91, label %78
    i32 92, label %79
    i32 144, label %80
    i32 145, label %81
    i32 186, label %82
    i32 187, label %84
    i32 188, label %86
    i32 189, label %88
    i32 190, label %90
    i32 191, label %92
    i32 192, label %94
    i32 219, label %96
    i32 220, label %98
    i32 221, label %100
    i32 222, label %102
    i32 223, label %104
    i32 226, label %105
    i32 112, label %107
    i32 113, label %107
    i32 114, label %107
    i32 115, label %107
    i32 116, label %107
    i32 117, label %107
    i32 118, label %107
    i32 119, label %107
    i32 120, label %107
    i32 121, label %107
    i32 122, label %107
    i32 123, label %107
    i32 124, label %107
    i32 125, label %107
    i32 126, label %107
    i32 127, label %107
    i32 128, label %107
    i32 129, label %107
    i32 130, label %107
    i32 131, label %107
    i32 132, label %107
    i32 133, label %107
    i32 134, label %107
    i32 135, label %107
    i32 166, label %109
    i32 167, label %110
    i32 168, label %111
    i32 169, label %112
    i32 170, label %113
    i32 171, label %114
    i32 172, label %115
    i32 173, label %116
    i32 174, label %117
    i32 175, label %118
    i32 176, label %119
    i32 177, label %120
    i32 178, label %121
    i32 179, label %122
    i32 180, label %123
    i32 182, label %124
    i32 183, label %125
    i32 151, label %126
    i32 152, label %127
    i32 216, label %128
    i32 217, label %129
    i32 218, label %130
    i32 232, label %131
  ]

4:                                                ; preds = %2
  br label %140

5:                                                ; preds = %2
  br label %140

6:                                                ; preds = %2
  br label %140

7:                                                ; preds = %2
  br label %140

8:                                                ; preds = %2
  br label %140

9:                                                ; preds = %2
  br label %140

10:                                               ; preds = %2
  br label %140

11:                                               ; preds = %2
  br label %140

12:                                               ; preds = %2
  br label %140

13:                                               ; preds = %2
  br label %140

14:                                               ; preds = %2
  br label %140

15:                                               ; preds = %2
  br label %140

16:                                               ; preds = %2
  br label %140

17:                                               ; preds = %2
  br label %140

18:                                               ; preds = %2
  br label %140

19:                                               ; preds = %2
  %20 = select i1 %1, i32 65056, i32 65289
  br label %140

21:                                               ; preds = %2
  br label %140

22:                                               ; preds = %2
  br label %140

23:                                               ; preds = %2, %2
  br label %140

24:                                               ; preds = %2
  br label %140

25:                                               ; preds = %2
  br label %140

26:                                               ; preds = %2
  br label %140

27:                                               ; preds = %2
  br label %140

28:                                               ; preds = %2
  br label %140

29:                                               ; preds = %2
  br label %140

30:                                               ; preds = %2
  br label %140

31:                                               ; preds = %2
  br label %140

32:                                               ; preds = %2
  br label %140

33:                                               ; preds = %2
  br label %140

34:                                               ; preds = %2
  br label %140

35:                                               ; preds = %2
  br label %140

36:                                               ; preds = %2
  br label %140

37:                                               ; preds = %2
  br label %140

38:                                               ; preds = %2
  br label %140

39:                                               ; preds = %2
  br label %140

40:                                               ; preds = %2
  br label %140

41:                                               ; preds = %2
  br label %140

42:                                               ; preds = %2
  br label %140

43:                                               ; preds = %2
  br label %140

44:                                               ; preds = %2
  br label %140

45:                                               ; preds = %2
  br label %140

46:                                               ; preds = %2
  br label %140

47:                                               ; preds = %2
  br label %140

48:                                               ; preds = %2
  br label %140

49:                                               ; preds = %2
  br label %140

50:                                               ; preds = %2
  br label %140

51:                                               ; preds = %2
  br label %140

52:                                               ; preds = %2
  br label %140

53:                                               ; preds = %2
  br label %140

54:                                               ; preds = %2
  %55 = select i1 %1, i32 41, i32 48
  br label %140

56:                                               ; preds = %2
  %57 = select i1 %1, i32 33, i32 49
  br label %140

58:                                               ; preds = %2
  %59 = select i1 %1, i32 64, i32 50
  br label %140

60:                                               ; preds = %2
  %61 = select i1 %1, i32 35, i32 51
  br label %140

62:                                               ; preds = %2
  %63 = select i1 %1, i32 36, i32 52
  br label %140

64:                                               ; preds = %2
  %65 = select i1 %1, i32 37, i32 53
  br label %140

66:                                               ; preds = %2
  %67 = select i1 %1, i32 94, i32 54
  br label %140

68:                                               ; preds = %2
  %69 = select i1 %1, i32 38, i32 55
  br label %140

70:                                               ; preds = %2
  %71 = select i1 %1, i32 42, i32 56
  br label %140

72:                                               ; preds = %2
  %73 = select i1 %1, i32 40, i32 57
  br label %140

74:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %75 = select i1 %1, i32 65, i32 97
  %76 = add nsw i32 %0, -65
  %77 = add nuw nsw i32 %76, %75
  br label %140

78:                                               ; preds = %2
  br label %140

79:                                               ; preds = %2
  br label %140

80:                                               ; preds = %2
  br label %140

81:                                               ; preds = %2
  br label %140

82:                                               ; preds = %2
  %83 = select i1 %1, i32 58, i32 59
  br label %140

84:                                               ; preds = %2
  %85 = select i1 %1, i32 43, i32 61
  br label %140

86:                                               ; preds = %2
  %87 = select i1 %1, i32 60, i32 44
  br label %140

88:                                               ; preds = %2
  %89 = select i1 %1, i32 95, i32 45
  br label %140

90:                                               ; preds = %2
  %91 = select i1 %1, i32 62, i32 46
  br label %140

92:                                               ; preds = %2
  %93 = select i1 %1, i32 63, i32 47
  br label %140

94:                                               ; preds = %2
  %95 = select i1 %1, i32 126, i32 96
  br label %140

96:                                               ; preds = %2
  %97 = select i1 %1, i32 123, i32 91
  br label %140

98:                                               ; preds = %2
  %99 = select i1 %1, i32 124, i32 92
  br label %140

100:                                              ; preds = %2
  %101 = select i1 %1, i32 125, i32 93
  br label %140

102:                                              ; preds = %2
  %103 = select i1 %1, i32 34, i32 39
  br label %140

104:                                              ; preds = %2
  br label %140

105:                                              ; preds = %2
  %106 = select i1 %1, i32 171, i32 187
  br label %140

107:                                              ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %108 = add nuw nsw i32 %0, 65358
  br label %140

109:                                              ; preds = %2
  br label %140

110:                                              ; preds = %2
  br label %140

111:                                              ; preds = %2
  br label %140

112:                                              ; preds = %2
  br label %140

113:                                              ; preds = %2
  br label %140

114:                                              ; preds = %2
  br label %140

115:                                              ; preds = %2
  br label %140

116:                                              ; preds = %2
  br label %140

117:                                              ; preds = %2
  br label %140

118:                                              ; preds = %2
  br label %140

119:                                              ; preds = %2
  br label %140

120:                                              ; preds = %2
  br label %140

121:                                              ; preds = %2
  br label %140

122:                                              ; preds = %2
  br label %140

123:                                              ; preds = %2
  br label %140

124:                                              ; preds = %2
  br label %140

125:                                              ; preds = %2
  br label %140

126:                                              ; preds = %2
  br label %140

127:                                              ; preds = %2
  br label %140

128:                                              ; preds = %2
  br label %140

129:                                              ; preds = %2
  br label %140

130:                                              ; preds = %2
  br label %140

131:                                              ; preds = %2
  br label %140

132:                                              ; preds = %2
  %133 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #7
  br i1 %133, label %134, label %140

134:                                              ; preds = %132
  %135 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %135) #7
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1463, i32 1) #7
  %136 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %137 = bitcast %"class.std::__1::basic_ostringstream"* %136 to %"class.std::__1::basic_ostream"*
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16) #7
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %138, i32 %0) #7
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %135) #7
  br label %140

140:                                              ; preds = %134, %132, %2, %131, %130, %129, %128, %127, %126, %125, %124, %123, %122, %121, %120, %119, %118, %117, %116, %115, %114, %113, %112, %111, %110, %109, %107, %105, %104, %102, %100, %98, %96, %94, %92, %90, %88, %86, %84, %82, %81, %80, %79, %78, %74, %72, %70, %68, %66, %64, %62, %60, %58, %56, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %141 = phi i32 [ 269025029, %131 ], [ 269025030, %130 ], [ 269025026, %129 ], [ 269025027, %128 ], [ 269025066, %127 ], [ 269025173, %126 ], [ 269025099, %125 ], [ 269025098, %124 ], [ 269025049, %123 ], [ 269025044, %122 ], [ 269025045, %121 ], [ 269025046, %120 ], [ 269025047, %119 ], [ 269025043, %118 ], [ 269025041, %117 ], [ 269025042, %116 ], [ 269025048, %115 ], [ 269025072, %114 ], [ 269025051, %113 ], [ 269025064, %112 ], [ 269025139, %111 ], [ 269025063, %110 ], [ 269025062, %109 ], [ %108, %107 ], [ %106, %105 ], [ 65041, %104 ], [ %103, %102 ], [ %101, %100 ], [ %99, %98 ], [ %97, %96 ], [ %95, %94 ], [ %93, %92 ], [ %91, %90 ], [ %89, %88 ], [ %87, %86 ], [ %85, %84 ], [ %83, %82 ], [ 65300, %81 ], [ 65407, %80 ], [ 65516, %79 ], [ 65515, %78 ], [ %77, %74 ], [ %73, %72 ], [ %71, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], [ %63, %62 ], [ %61, %60 ], [ %59, %58 ], [ %57, %56 ], [ %55, %54 ], [ 65386, %53 ], [ 65535, %52 ], [ 65379, %51 ], [ 65378, %50 ], [ 65377, %49 ], [ 65376, %48 ], [ 65364, %47 ], [ 65363, %46 ], [ 65362, %45 ], [ 65361, %44 ], [ 65360, %43 ], [ 65367, %42 ], [ 65366, %41 ], [ 65365, %40 ], [ 32, %39 ], [ 65307, %38 ], [ 65322, %37 ], [ 65322, %36 ], [ 65314, %35 ], [ 65315, %34 ], [ 65332, %33 ], [ 65325, %32 ], [ 65509, %31 ], [ 65299, %30 ], [ 65312, %29 ], [ 65027, %28 ], [ 65383, %27 ], [ 65513, %26 ], [ 65507, %25 ], [ 65506, %24 ], [ 65505, %23 ], [ 65293, %22 ], [ 65291, %21 ], [ %20, %19 ], [ 65288, %18 ], [ 65455, %17 ], [ 65454, %16 ], [ 65453, %15 ], [ 65451, %14 ], [ 65450, %13 ], [ 65465, %12 ], [ 65464, %11 ], [ 65463, %10 ], [ 65462, %9 ], [ 65461, %8 ], [ 65460, %7 ], [ 65459, %6 ], [ 65458, %5 ], [ 65457, %4 ], [ 65456, %2 ], [ 0, %132 ], [ 0, %134 ]
  ret i32 %141
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui25XKeyCodeForWindowsKeyCodeENS_12KeyboardCodeEiPN3x1110ConnectionE(i32, i32, %"class.x11::Connection"*) local_unnamed_addr #0 {
  %4 = tail call i32 @_ZN2ui24XKeysymForWindowsKeyCodeENS_12KeyboardCodeEb(i32 %0, i1 zeroext false)
  %5 = tail call zeroext i8 @_ZNK3x1110Connection15KeysymToKeycodeEj(%"class.x11::Connection"* %2, i32 %4) #7
  %6 = zext i8 %5 to i32
  ret i32 %6
}

declare zeroext i8 @_ZNK3x1110Connection15KeysymToKeycodeEj(%"class.x11::Connection"*, i32) local_unnamed_addr #3

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #3

declare i32 @_ZNK3x1110Connection15KeycodeToKeysymENS_7KeyCodeEj(%"class.x11::Connection"*, i8 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
