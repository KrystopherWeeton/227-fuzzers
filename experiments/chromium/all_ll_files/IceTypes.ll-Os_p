; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceTypes.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceTypes.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.Ice::(anonymous namespace)::TypeAttributeFields" = type { i8, i64, i64, i32, i8*, i8* }
%"struct.Ice::(anonymous namespace)::TypePropertyFields" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32 }
%"class.Ice::FuncSigType" = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>

@_ZN3Ice12_GLOBAL__N_114TargetArchNameE = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0)], align 16
@_ZN3Ice12_GLOBAL__N_114TypeAttributesE = internal unnamed_addr constant [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"] [%"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 -1, i64 0, i64 1, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 0, i64 1, i64 1, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 0, i64 1, i64 1, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 1, i64 1, i64 1, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 2, i64 1, i64 1, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 3, i64 1, i64 1, i32 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 2, i64 4, i64 1, i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 3, i64 8, i64 1, i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 1, i64 4, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 1, i64 8, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 1, i64 16, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 1, i64 16, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 2, i64 8, i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 4, i64 4, i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0) }, %"struct.Ice::(anonymous namespace)::TypeAttributeFields" { i8 4, i64 4, i64 4, i32 6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0) }], align 16
@_ZN3Ice12_GLOBAL__N_119TypePropertiesTableE = internal unnamed_addr constant [15 x %"struct.Ice::(anonymous namespace)::TypePropertyFields"] [%"struct.Ice::(anonymous namespace)::TypePropertyFields" zeroinitializer, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 0, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i8 0, i8 0, i8 1, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i8 0, i8 0, i8 1, i32 1 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i32 8 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i32 9 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i8 1, i32 10 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i32 10 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i32 9 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 1, i8 0, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i32 8 }, %"struct.Ice::(anonymous namespace)::TypePropertyFields" { i8 1, i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i8 1, i8 0, i8 1, i32 8 }], align 16
@.str = private unnamed_addr constant [7 x i8] c"x86-32\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"x86-64\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"arm32\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"arm64\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"mips32\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"i1\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"i8\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"<4 x i1>\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"v4i1\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"<8 x i1>\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"v8i1\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"<16 x i1>\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"v16i1\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"<16 x i8>\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"v16i8\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"<8 x i16>\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"v8i16\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"<4 x i32>\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"v4i32\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"<4 x float>\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"v4f32\00", align 1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3Ice16targetArchStringENS_10TargetArchE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 5
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @_ZN3Ice12_GLOBAL__N_114TargetArchNameE, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN3Ice16typeWidthInBytesENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2) #3
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 0
  %5 = load i8, i8* %4, align 16
  %6 = sext i8 %5 to i32
  %7 = icmp eq i32 %0, 0
  %8 = shl i32 1, %6
  %9 = select i1 %7, i32 0, i32 %8
  %10 = sext i32 %9 to i64
  ret i64 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden signext i8 @_ZN3Ice20typeWidthInBytesLog2ENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 0
  %5 = load i8, i8* %4, align 16
  ret i8 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN3Ice16typeAlignInBytesENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN3Ice15typeNumElementsENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 2
  %5 = load i64, i64* %4, align 16
  ret i64 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3Ice15typeElementTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 3
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3Ice14getPointerTypeEv() local_unnamed_addr #0 {
  %1 = tail call i32 @_ZN3Ice14TargetLowering14getPointerTypeEv() #4
  ret i32 %1
}

; Function Attrs: optsize
declare i32 @_ZN3Ice14TargetLowering14getPointerTypeEv() local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice12isVectorTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = add nsw i64 %3, -8
  %5 = icmp ult i64 %4, 7
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice13isBooleanTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = lshr i64 1794, %3
  %5 = and i64 %4, 1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice13isIntegerTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = lshr i64 16190, %3
  %5 = and i64 %4, 1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice19isScalarIntegerTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = add nsw i64 %3, -1
  %5 = icmp ult i64 %4, 5
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice19isVectorIntegerTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = add nsw i64 %3, -8
  %5 = icmp ult i64 %4, 6
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice23isIntegerArithmeticTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = lshr i64 14396, %3
  %5 = and i64 %4, 1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice14isFloatingTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = lshr i64 16576, %3
  %5 = and i64 %4, 1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice20isScalarFloatingTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = or i32 %0, 1
  %4 = icmp eq i32 %3, 7
  ret i1 %4
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice20isVectorFloatingTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = icmp eq i32 %0, 14
  ret i1 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice15isLoadStoreTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = icmp eq i32 %0, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = zext i32 %0 to i64
  %6 = lshr i64 1794, %5
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br label %9

9:                                                ; preds = %1, %4
  %10 = phi i1 [ false, %1 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice19isCallParameterTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = add nsw i64 %3, -4
  %5 = icmp ult i64 %4, 11
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3Ice20getCompareResultTypeENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypePropertyFields"], [15 x %"struct.Ice::(anonymous namespace)::TypePropertyFields"]* @_ZN3Ice12_GLOBAL__N_119TypePropertiesTableE, i64 0, i64 %3, i32 10
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3Ice20getScalarIntBitWidthENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %4) #3
  %5 = zext i32 %0 to i64
  %6 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %5, i32 0
  %7 = load i8, i8* %6, align 16
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %0, 0
  %10 = shl i32 8, %8
  %11 = select i1 %9, i32 0, i32 %10
  br label %12

12:                                               ; preds = %1, %3
  %13 = phi i32 [ %11, %3 ], [ 1, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3Ice10typeStringENS_4TypeE(i32) local_unnamed_addr #0 {
  %2 = icmp slt i32 %0, 15
  tail call void @llvm.assume(i1 %2)
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %3, i32 4
  %5 = load i8*, i8** %4, align 16
  ret i8* %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3Ice14regClassStringENS_8RegClassE(i8 zeroext) local_unnamed_addr #0 {
  %2 = zext i8 %0 to i64
  %3 = icmp ult i8 %0, 15
  tail call void @llvm.assume(i1 %3)
  %4 = getelementptr inbounds [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"], [15 x %"struct.Ice::(anonymous namespace)::TypeAttributeFields"]* @_ZN3Ice12_GLOBAL__N_114TypeAttributesE, i64 0, i64 %2, i32 5
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice11FuncSigType4dumpERN4llvm11raw_ostreamE(%"class.Ice::FuncSigType"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #3

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
