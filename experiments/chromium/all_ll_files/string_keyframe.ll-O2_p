; ModuleID = '../../third_party/blink/renderer/core/animation/string_keyframe.cc'
source_filename = "../../third_party/blink/renderer/core/animation/string_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.129", i32, [4 x i8], %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.265", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.299", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.306", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.245", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__cxx_atomic_impl.168" }
%"struct.std::__1::__cxx_atomic_impl.168" = type { %"struct.std::__1::__cxx_atomic_base_impl.169" }
%"struct.std::__1::__cxx_atomic_base_impl.169" = type { i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist.218"* }
%"class.blink::Worklist.218" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.165" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.225", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.239", [4 x i8] }>
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { i64 }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { float }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.248", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.257" }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.287" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.204"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.314" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.306" = type { %"struct.std::__1::__atomic_base.307" }
%"struct.std::__1::__atomic_base.307" = type { %"struct.std::__1::__cxx_atomic_impl.308" }
%"struct.std::__1::__cxx_atomic_impl.308" = type { %"struct.std::__1::__cxx_atomic_base_impl.309" }
%"struct.std::__1::__cxx_atomic_base_impl.309" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap", %"class.blink::Member.26", %"class.blink::Member.26", %"class.WTF::HashMap.33", i8, i8, i8, [5 x i8] }>
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional", %"class.absl::optional.0", %class.scoped_refptr }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i32 }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.blink::Member" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.8, %"class.WTF::AtomicString" }
%union.anon.8 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StringKeyframe::PropertyResolver"* }
%"class.blink::StringKeyframe::PropertyResolver" = type <{ i32, [4 x i8], %"class.blink::Member.18", %"class.blink::Member.22", i8, [7 x i8] }>
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::ImmutableCSSPropertyValueSet"* }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.28", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.26" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.74", i32, i8, [3 x i8], %"class.blink::HeapVector.76", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.95", %"class.blink::Member.101", %"class.blink::Member.103", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.41" }
%"class.blink::HeapHashMap.41" = type { %"class.WTF::HashMap.44" }
%"class.WTF::HashMap.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ %"struct.WTF::KeyValuePair.47"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.47" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.53" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.50" }
%"class.WTF::HashTable.50" = type <{ %"class.blink::WeakMember.52"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.52" = type opaque
%"class.blink::Supplementable.53" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.54" }
%"class.blink::HeapHashMap.54" = type { %"class.WTF::HashMap.57" }
%"class.WTF::HashMap.57" = type { %"class.WTF::HashTable.58" }
%"class.WTF::HashTable.58" = type <{ %"struct.WTF::KeyValuePair.60"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.60" = type { i8*, %"class.blink::Member.736" }
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.738" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.61, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.blink::Member.69", i32, [4 x i8], %"class.WTF::HashSet.70", i32, i32 }
%class.scoped_refptr.61 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.40" }
%"class.WTF::HashSet.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.76" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::Member.82"*, i32, i32 }
%"class.blink::Member.82" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.88", i32, i32 }
%"class.blink::HeapHashMap.88" = type { %"class.WTF::HashMap.91" }
%"class.WTF::HashMap.91" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [96 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.18" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.743 }
%union.anon.743 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyleSheetContents" = type opaque
%"class.WTF::HashSet.106" = type { %"class.WTF::HashTable.107" }
%"class.WTF::HashTable.107" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.721" = type { %"class.WTF::Vector.724" }
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::CSSKeyframeShorthandValue" = type { %"class.blink::CSSValue", i32, %"class.blink::Member.22" }
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.115, %"class.blink::Member.310", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.115 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.116", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.116" = type { %"class.base::RefCounted.117" }
%"class.base::RefCounted.117" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.120" }
%"class.blink::HeapHashMap.120" = type { %"class.WTF::HashMap.123" }
%"class.WTF::HashMap.123" = type { %"class.WTF::HashTable.124" }
%"class.WTF::HashTable.124" = type <{ %"struct.WTF::KeyValuePair.126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.126" = type { %"class.blink::WeakMember.127", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.312" }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.327" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.319", %"class.blink::Member.319" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.319", %"class.blink::Member.321", %"class.blink::Member.319", %"class.blink::Member.319", %"class.blink::Member.323" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.343", %"class.blink::Member.345", %"class.blink::Member.321", %"class.blink::Member.347", %"class.blink::Member.347", %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::Member.375", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.380", %"class.blink::HeapVector.382" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.443", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.451", %"class.WTF::Vector.451", i8, i32, %"class.blink::Member.458", %"class.blink::Member.69", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.474", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.388", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.485", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.364", %"class.blink::Member.362", %"class.blink::Member.501", %"class.blink::Member.362", %"class.blink::Member.362", %"class.blink::Member.362", %"class.blink::UserActionElementSet", %"class.blink::Member.510", double, double, i64, i64, %"class.blink::HeapHashSet.512", %"class.blink::HeapHashSet.519", i16, i8, %"class.blink::Member.526", %"class.blink::Member.528", %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::TextLinkColors", %"class.blink::Member.534", i8, [7 x i8], %"class.blink::HeapHashMap.536", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.362", %"class.WTF::Vector.543", %"class.blink::Member.548", %"class.blink::Member.550", i8, %"class.blink::Member.362", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.552", %"class.blink::HeapVector.554", %"class.std::__1::unique_ptr.562", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.568", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.581", %"class.WTF::Vector.583", i8, i8, %"class.std::__1::unique_ptr.588", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.364", %"class.blink::HeapVector.594", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.602", i8, i32, %"class.blink::Member.604", %"class.blink::Member.606", %"class.blink::Member.608", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.610", %"class.WTF::HashMap.612", %"class.blink::Member.617", %"class.blink::Member.619", %"class.blink::Member.621", %"class.blink::Member.623", %"class.blink::Member.345", %"class.blink::Member.345", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.625", i8, i32, %"class.blink::Member.632", %"class.blink::Member.634", i32, %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::Member.640", %"class.std::__1::unique_ptr.642", i64, %"class.std::__1::unique_ptr.648", i32, i32, %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.660", %"class.WTF::Vector.662", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.667", %"class.blink::Member.674", %"class.std::__1::unique_ptr.676", %"class.blink::Member.682", i8, i8, %"class.WTF::String", %"class.blink::Member.684", i8, [7 x i8], %"class.blink::HeapHashMap.686", %"class.blink::HeapObserverSet.693", %"class.blink::Member.701", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.703", i32, i8, i8, %"class.blink::WeakMember.705", %"class.blink::Member.706" }
%"class.blink::Supplementable.443" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.444" }
%"class.blink::HeapHashMap.444" = type { %"class.WTF::HashMap.447" }
%"class.WTF::HashMap.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"struct.WTF::KeyValuePair.450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.450" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.454 }
%class.scoped_refptr.454 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.455", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.455" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.468" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::KURL"* }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.390", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.392, %"class.WTF::Vector.411", %"class.WTF::Vector.411", %"class.blink::Member.319", %"class.blink::Member.416", %"class.blink::HeapHashSet.420", %"class.blink::Member.345", %"class.WTF::HashSet.427", %"class.WTF::TextPosition", %"class.blink::Member.431", %"class.blink::HeapVector.433", %"class.blink::Member.440" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::StyleSheetContents"* }
%class.scoped_refptr.392 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.393", %"class.WTF::Vector.395" }
%"class.WTF::RefCounted.393" = type { %"class.base::RefCounted.394" }
%"class.base::RefCounted.394" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397" }
%"class.WTF::VectorBufferBase.397" = type { %"class.std::__1::unique_ptr.398"*, i32, i32 }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.401", %"class.WTF::String" }
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.418" }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.420" = type { %"class.WTF::HashSet.423" }
%"class.WTF::HashSet.423" = type { %"class.WTF::HashTable.424" }
%"class.WTF::HashTable.424" = type <{ %"class.blink::WeakMember.426"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.426" = type { %"class.blink::MemberBase.322" }
%"class.WTF::HashSet.427" = type { %"class.WTF::HashTable.428" }
%"class.WTF::HashTable.428" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.392, %"class.blink::Member.388", %"class.blink::Member.416" }
%"class.blink::HeapVector.433" = type { %"class.WTF::Vector.436" }
%"class.WTF::Vector.436" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"class.blink::Member.416"*, i32, i32 }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.503" }
%"class.blink::HeapHashMap.503" = type { %"class.WTF::HashMap.506" }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.509"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.509" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.512" = type { %"class.WTF::HashSet.515" }
%"class.WTF::HashSet.515" = type { %"class.WTF::HashTable.516" }
%"class.WTF::HashTable.516" = type <{ %"class.blink::WeakMember.518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.518" = type opaque
%"class.blink::HeapHashSet.519" = type { %"class.WTF::HashSet.522" }
%"class.WTF::HashSet.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"class.blink::WeakMember.525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.525" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.554" = type { %"class.WTF::Vector.557" }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { %"class.blink::Member.560"*, i32, i32 }
%"class.blink::Member.560" = type opaque
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.568" = type { %"class.WTF::HashSet.571" }
%"class.WTF::HashSet.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"class.blink::WeakMember.574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.574" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.575", i32, [4 x i8] }>
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"struct.std::__1::pair.578"*, i32, i32 }
%"struct.std::__1::pair.578" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.364" = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::Member.362"*, i32, i32 }
%"class.blink::HeapVector.594" = type { %"class.WTF::Vector.597" }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.598" }
%"class.WTF::VectorBuffer.598" = type { %"class.WTF::VectorBufferBase.599" }
%"class.WTF::VectorBufferBase.599" = type { %"class.blink::Member.600"*, i32, i32 }
%"class.blink::Member.600" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.345" }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"struct.WTF::KeyValuePair.616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.616" = type opaque
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.500", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.491, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.491 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.492" }>
%"class.base::RefCountedThreadSafe.492" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.493 }
%class.scoped_refptr.493 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.494", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.494" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.495" }
%"struct.std::__1::atomic.495" = type { %"struct.std::__1::__atomic_base.496" }
%"struct.std::__1::__atomic_base.496" = type { %"struct.std::__1::__atomic_base.497" }
%"struct.std::__1::__atomic_base.497" = type { %"struct.std::__1::__cxx_atomic_impl.498" }
%"struct.std::__1::__cxx_atomic_impl.498" = type { %"struct.std::__1::__cxx_atomic_base_impl.499" }
%"struct.std::__1::__cxx_atomic_base_impl.499" = type { i8 }
%"class.blink::WeakMember.500" = type { %"class.blink::MemberBase.346" }
%"class.blink::HeapHashSet.625" = type { %"class.WTF::HashSet.628" }
%"class.WTF::HashSet.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"class.blink::Member.631"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.631" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.686" = type { %"class.WTF::HashMap.689" }
%"class.WTF::HashMap.689" = type { %"class.WTF::HashTable.690" }
%"class.WTF::HashTable.690" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.blink::HeapObserverSet.693" = type { i32, [4 x i8], %"class.blink::HeapHashSet.694" }
%"class.blink::HeapHashSet.694" = type { %"class.WTF::HashSet.697" }
%"class.WTF::HashSet.697" = type { %"class.WTF::HashTable.698" }
%"class.WTF::HashTable.698" = type <{ %"class.blink::WeakMember.700"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.700" = type opaque
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.345", %"class.blink::HeapHashSet.710", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.717", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.710" = type { %"class.WTF::HashSet.713" }
%"class.WTF::HashSet.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"class.blink::Member.716"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.716" = type opaque
%"class.blink::HeapTaskRunnerTimer.717" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.718", { i64, i64 } }
%"class.blink::WeakMember.718" = type { %"class.blink::MemberBase.704" }
%"class.blink::WeakMember.705" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::Node"* }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.351" }
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type { %"class.WTF::AtomicString", %"class.blink::Member.358" }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.362", i32, %"class.blink::HeapVector.364" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.377" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::HeapHashMap.379"* }
%"class.blink::HeapHashMap.379" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.382" = type { %"class.WTF::Vector.385" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"class.blink::Member.388"*, i32, i32 }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.331", %"class.blink::Member.333", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.331" = type { %"class.WTF::SingleThreadedBitField.332" }
%"class.WTF::SingleThreadedBitField.332" = type { i32 }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.336", %"class.WTF::AtomicString", %"class.WTF::Vector.338" }
%"class.WTF::RefCounted.336" = type { %"class.base::RefCounted.337" }
%"class.base::RefCounted.337" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340", [32 x i8] }
%"class.WTF::VectorBufferBase.340" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe" = type { %"class.blink::Keyframe::PropertySpecificKeyframe.base", %"class.WTF::String" }
%"class.blink::Keyframe::PropertySpecificKeyframe.base" = type <{ i32 (...)**, double, %class.scoped_refptr, i32 }>
%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe" = type { %"class.blink::Keyframe::PropertySpecificKeyframe.base", %"class.blink::Member.18", %"class.blink::Member.730" }
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::internal::ConcurrentBucket" = type { [24 x i8], %"class.blink::Member"* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.839", %"class.WTF::HashMap.839", %"class.WTF::HashMap.844", %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.896", %"class.blink::Persistent.312", i8, i8, i8, %"class.WTF::Vector.451", %"class.std::__1::unique_ptr.902", %"class.blink::Persistent.908", %"class.blink::Persistent.912", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.821", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.827", %"class.std::__1::unique_ptr.833", i32, i32 }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ %"struct.WTF::KeyValuePair.843"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.843" = type opaque
%"class.WTF::HashMap.844" = type { %"class.WTF::HashTable.845" }
%"class.WTF::HashTable.845" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type opaque
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.857", %class.scoped_refptr.10 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.852", i8* }
%"class.WTF::HashMap.852" = type { %"class.WTF::HashTable.853" }
%"class.WTF::HashTable.853" = type <{ %"struct.WTF::KeyValuePair.856"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.856" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.857" = type { %"class.v8::PersistentValueMapBase.858" }
%"class.v8::PersistentValueMapBase.858" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.859", i8* }
%"class.WTF::HashMap.859" = type { %"class.WTF::HashTable.860" }
%"class.WTF::HashTable.860" = type <{ %"struct.WTF::KeyValuePair.863"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.863" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.864", %"class.WTF::String", %"class.std::__1::unique_ptr.866" }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.880", %"class.WTF::Vector.886", i8, i32 }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.WTF::Vector.872"* }
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.874", [32 x i8] }
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.908" = type { %"class.blink::PersistentBase.909" }
%"class.blink::PersistentBase.909" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.912" = type { %"class.blink::PersistentBase.913" }
%"class.blink::PersistentBase.913" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.916", i64 }
%"class.blink::HeapVector.916" = type { %"class.WTF::Vector.919" }
%"class.WTF::Vector.919" = type { %"class.WTF::VectorBuffer.920" }
%"class.WTF::VectorBuffer.920" = type { %"class.WTF::VectorBufferBase.921" }
%"class.WTF::VectorBufferBase.921" = type { %"struct.std::__1::pair.922"*, i32, i32 }
%"struct.std::__1::pair.922" = type { %"class.blink::UntracedMember", %"class.blink::Member.924" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink14StringKeyframe26PresentationAttributeValueERKNS_11CSSPropertyE = comdat any

$_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14StringKeyframeD2Ev = comdat any

$_ZN5blink14StringKeyframeD0Ev = comdat any

$_ZNK5blink14StringKeyframe16IsStringKeyframeEv = comdat any

$_ZNK5blink8Keyframe20IsTransitionKeyframeEv = comdat any

$_ZN5blink8Keyframe24PropertySpecificKeyframeD2Ev = comdat any

$_ZN5blink14StringKeyframe27CSSPropertySpecificKeyframeD0Ev = comdat any

$_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe9IsNeutralEv = comdat any

$_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe26GetCompositorKeyframeValueEv = comdat any

$_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv = comdat any

$_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD2Ev = comdat any

$_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD0Ev = comdat any

$_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe9IsNeutralEv = comdat any

$_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe8IsRevertEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_ = comdat any

$_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe26GetCompositorKeyframeValueEv = comdat any

$_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv = comdat any

$_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv = comdat any

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEEC2ERKSJ_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_RKS8_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISA_SF_SG_EERKS4_RKS7_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF7HashMapIPKN5blink13QualifiedNameENS_6StringENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS8_IS5_EENS_18PartitionAllocatorEE2atERKS4_ = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14StringKeyframe16PropertyResolverEEEPhm = comdat any

$_ZN5blink9NameTraitINS_14StringKeyframe16PropertyResolverEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_PS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe16PropertyResolverEE4CallIJRKNS_11CSSPropertyERPNS_26MutableCSSPropertyValueSetERbEEEPS2_DpOT_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS8_ = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES4_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_S2_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframe16PropertyResolverEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EESA_SA_EEvT0_SB_T1_SC_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE = comdat any

$_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEEEET_S7_S7_S7_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdPNS_14TimingFunctionEN3WTF6StringERNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27CSSPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEEPKNS_8CSSValueERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKN3WTF6StringERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_25CSSKeyframeShorthandValueEEEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_28ImmutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14StringKeyframeE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StringKeyframe"*)* @_ZN5blink14StringKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::StringKeyframe"*)* @_ZN5blink14StringKeyframeD0Ev to i8*), i8* bitcast (void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)* @_ZNK5blink14StringKeyframe10PropertiesEv to i8*), i8* bitcast (%"class.blink::Keyframe"* (%"class.blink::StringKeyframe"*)* @_ZNK5blink14StringKeyframe5CloneEv to i8*), i8* bitcast (void (%"class.blink::StringKeyframe"*, %"class.blink::V8ObjectBuilder"*, %"class.blink::Element"*)* @_ZNK5blink14StringKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe"*)* @_ZNK5blink14StringKeyframe16IsStringKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe"*)* @_ZNK5blink8Keyframe20IsTransitionKeyframeEv to i8*), i8* bitcast (void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink14StringKeyframe5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"*, i32, double)* @_ZNK5blink14StringKeyframe30CreatePropertySpecificKeyframeERKNS_14PropertyHandleENS_11EffectModel18CompositeOperationEd to i8*)] }, align 8
@_ZTVN5blink14StringKeyframe27CSSPropertySpecificKeyframeE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZN5blink8Keyframe24PropertySpecificKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*)* @_ZN5blink14StringKeyframe27CSSPropertySpecificKeyframeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe9IsNeutralEv to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe8IsRevertEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, double)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe15CloneWithOffsetEd to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_ to i8*), i8* bitcast (%"class.blink::CompositorKeyframeValue"* (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe26GetCompositorKeyframeValueEv to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE to i8*), i8* bitcast (%"class.blink::Interpolation"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe19CreateInterpolationERKNS_14PropertyHandleERKS1_ to i8*), i8* bitcast (void (%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe9IsNeutralEv to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe8IsRevertEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*, double)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe15CloneWithOffsetEd to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_ to i8*), i8* bitcast (%"class.blink::CompositorKeyframeValue"* (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe26GetCompositorKeyframeValueEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv to i8*), i8* bitcast (i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv to i8*), i8* bitcast (%"class.blink::Keyframe::PropertySpecificKeyframe"* (%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*)* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE to i8*), i8* bitcast (%"class.blink::Interpolation"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe19CreateInterpolationERKNS_14PropertyHandleERKS1_ to i8*), i8* bitcast (void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink8Keyframe24PropertySpecificKeyframe5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink8KeyframeE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [494 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::PropertyHandle, WTF::KeyValuePair<blink::PropertyHandle, blink::Member<blink::StringKeyframe::PropertyResolver> >, WTF::KeyValuePairKeyExtractor, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashMapValueTraits<WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::StringKeyframe::PropertyResolver> > >, WTF::HashTraits<blink::PropertyHandle>, blink::HeapAllocator> >]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13QualifiedNameENS_6StringEEEEEPKcv = private unnamed_addr constant [108 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::QualifiedName *, WTF::String>]\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [11 x i8] c"index >= 0\00", align 1
@.str.14 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/core/animation/string_keyframe.h\00", align 1
@_ZTVN5blink8Keyframe24PropertySpecificKeyframeE = external unnamed_addr constant { [15 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyValueSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14StringKeyframe16PropertyResolverEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StringKeyframe::PropertyResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14StringKeyframe16PropertyResolverEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.17 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframe16PropertyResolverEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [205 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StringKeyframe::PropertyResolver>, WTF::VectorTraits<blink::Member<blink::StringKeyframe::PropertyResolver> > >]\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8Keyframe24PropertySpecificKeyframeEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Keyframe::PropertySpecificKeyframe]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink14StringKeyframeC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"*), void (%"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"*)* @_ZN5blink14StringKeyframeC2ERKS0_
@_ZN5blink14StringKeyframe16PropertyResolverC1ENS_13CSSPropertyIDERKNS_8CSSValueE = hidden unnamed_addr alias void (%"class.blink::StringKeyframe::PropertyResolver"*, i32, %"class.blink::CSSValue"*), void (%"class.blink::StringKeyframe::PropertyResolver"*, i32, %"class.blink::CSSValue"*)* @_ZN5blink14StringKeyframe16PropertyResolverC2ENS_13CSSPropertyIDERKNS_8CSSValueE
@_ZN5blink14StringKeyframe16PropertyResolverC1ERKNS_11CSSPropertyEPKNS_26MutableCSSPropertyValueSetEb = hidden unnamed_addr alias void (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::CSSProperty"*, %"class.blink::MutableCSSPropertyValueSet"*, i1), void (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::CSSProperty"*, %"class.blink::MutableCSSPropertyValueSet"*, i1)* @_ZN5blink14StringKeyframe16PropertyResolverC2ERKNS_11CSSPropertyEPKNS_26MutableCSSPropertyValueSetEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframeC2ERKS0_(%"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = bitcast double* %7 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %10, align 8
  %12 = icmp eq %"class.blink::TimingFunction"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %20

20:                                               ; preds = %2, %13, %17
  %21 = ptrtoint %"class.blink::TimingFunction"* %11 to i64
  %22 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %6, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast double* %24 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3
  %27 = bitcast %class.scoped_refptr* %26 to i64*
  store i64 %21, i64* %27, align 8
  br i1 %12, label %28, label %55

28:                                               ; preds = %20
  %29 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #15
  %30 = icmp eq %"class.blink::LinearTimingFunction"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %35, %31, %28
  %39 = ptrtoint %"class.blink::LinearTimingFunction"* %29 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 0, i32 0
  %41 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %40, align 8
  store i64 %39, i64* %27, align 8
  %42 = icmp eq %"class.blink::TimingFunction"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.blink::TimingFunction"*
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %49 to void (%"class.blink::TimingFunction"*)***
  %52 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %52, i64 1
  %54 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %53, align 8
  call void %54(%"class.blink::TimingFunction"* nonnull %50) #15
  br label %55

55:                                               ; preds = %48, %43, %38, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14StringKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %56 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEEC2ERKSJ_(%"class.WTF::HashTable"* %56, %"class.WTF::HashTable"* dereferenceable(24) %57) #15
  %58 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %59 = getelementptr inbounds %"class.blink::Member.26", %"class.blink::Member.26"* %58, i64 0, i32 0, i32 0
  store %"class.blink::MutableCSSPropertyValueSet"* null, %"class.blink::MutableCSSPropertyValueSet"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %61, i64 0, i32 0
  %63 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %62) #15
  %64 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::MutableCSSPropertyValueSet"* %63, %"class.blink::MutableCSSPropertyValueSet"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4
  %66 = getelementptr inbounds %"class.WTF::HashMap.33", %"class.WTF::HashMap.33"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 2
  %68 = bitcast %"class.WTF::HashMap.33"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 20, i1 false) #15
  %69 = load i32, i32* %67, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %107, label %71

71:                                               ; preds = %55
  call void @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.34"* %66, i32 %69) #15
  %72 = load i32, i32* %67, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %75, i64 %78
  br i1 %73, label %107, label %80

80:                                               ; preds = %71
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"struct.WTF::KeyValuePair.37"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"struct.WTF::KeyValuePair.37"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.37"* %87, %79
  br i1 %88, label %107, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"struct.WTF::KeyValuePair.37"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair.37"* %90, %79
  br i1 %91, label %107, label %92

92:                                               ; preds = %89, %105
  %93 = phi %"struct.WTF::KeyValuePair.37"* [ %99, %105 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %93, i64 0, i32 0
  %95 = call { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISA_SF_SG_EERKS4_RKS7_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.34"* %66, %"class.blink::QualifiedName"** dereferenceable(8) %94, %"struct.WTF::KeyValuePair.37"* dereferenceable(16) %93) #15
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %93, i64 1
  %97 = icmp eq %"struct.WTF::KeyValuePair.37"* %96, %79
  br i1 %97, label %107, label %98

98:                                               ; preds = %92, %102
  %99 = phi %"struct.WTF::KeyValuePair.37"* [ %103, %102 ], [ %96, %92 ]
  %100 = bitcast %"struct.WTF::KeyValuePair.37"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  switch i64 %101, label %105 [
    i64 -1, label %102
    i64 0, label %102
  ]

102:                                              ; preds = %98, %98
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %99, i64 1
  %104 = icmp eq %"struct.WTF::KeyValuePair.37"* %103, %79
  br i1 %104, label %107, label %98

105:                                              ; preds = %98
  %106 = icmp eq %"struct.WTF::KeyValuePair.37"* %99, %79
  br i1 %106, label %107, label %92

107:                                              ; preds = %86, %92, %105, %102, %55, %71, %89
  %108 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 5
  %109 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 5
  %110 = load i8, i8* %109, align 8, !range !2
  store i8 %110, i8* %108, align 8
  %111 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 6
  %113 = load i8, i8* %112, align 1
  store i8 %113, i8* %111, align 1
  %114 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  %115 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 7
  %116 = load i8, i8* %115, align 2
  store i8 %116, i8* %114, align 2
  %117 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %117, align 8
  %119 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %118, null
  br i1 %119, label %130, label %120

120:                                              ; preds = %107
  %121 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %118, i64 0, i32 0
  %122 = call %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"* %121) #15
  %123 = ptrtoint %"class.blink::MutableCSSPropertyValueSet"* %122 to i64
  %124 = bitcast %"class.blink::Member.26"* %58 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  %128 = bitcast %"class.blink::MutableCSSPropertyValueSet"* %122 to i8*
  %129 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #15
  br label %130

130:                                              ; preds = %107, %127, %120
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet11MutableCopyEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKN3WTF12AtomicStringERKNS1_6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.blink::StringKeyframe::PropertyResolver"*, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #15
  %9 = bitcast i8* %8 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %9, i8 zeroext 0) #15
  %10 = getelementptr inbounds i8, i8* %8, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKN3WTF12AtomicStringERKNS1_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false, i32 %3, %"class.blink::StyleSheetContents"* %4, i1 zeroext true) #15
  %15 = bitcast i8* %8 to %"class.blink::CSSPropertyValueSet"*
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #15
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #15
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %5, %19, %34
  %37 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %15, %"class.WTF::StringImpl"* %17) #15
  %38 = and i16 %14, 1
  %39 = icmp ne i16 %38, 0
  %40 = icmp ne %"class.blink::CSSValue"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %114

42:                                               ; preds = %36
  %43 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  store i32 3, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1, i32 0
  %46 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #15
  store %"class.blink::CSSProperty"* %46, %"class.blink::CSSProperty"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #15
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  tail call void @llvm.trap() #15
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %42, %50, %65
  %68 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #15
  %69 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14StringKeyframe16PropertyResolverEEEPhm(i64 32) #15
  %70 = bitcast i8* %69 to i32*
  store i32 1, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 8
  %72 = bitcast i8* %71 to %"class.blink::CSSValue"**
  store %"class.blink::CSSValue"* %37, %"class.blink::CSSValue"** %72, align 8
  %73 = getelementptr inbounds i8, i8* %69, i64 16
  %74 = bitcast i8* %73 to %"class.blink::ImmutableCSSPropertyValueSet"**
  store %"class.blink::ImmutableCSSPropertyValueSet"* null, %"class.blink::ImmutableCSSPropertyValueSet"** %74, align 8
  %75 = getelementptr inbounds i8, i8* %69, i64 24
  store i8 0, i8* %75, align 8
  %76 = getelementptr inbounds i8, i8* %69, i64 -4
  %77 = bitcast i8* %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = or i16 %78, 1
  store atomic i16 %79, i16* %77 release, align 2
  %80 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %7 to i8**
  store i8* %69, i8** %80, align 8
  %81 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_PS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %81, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6, %"class.blink::StringKeyframe::PropertyResolver"** nonnull dereferenceable(8) %7) #15
  %83 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, 1
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %97

86:                                               ; preds = %67
  %87 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, 0
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1
  %89 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %7, align 8
  %90 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %89 to i64
  %91 = bitcast %"class.blink::Member"* %88 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %86
  %95 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %89 to i8*
  %96 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #15
  br label %97

97:                                               ; preds = %67, %86, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #15
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #15
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  br label %114

114:                                              ; preds = %113, %36
  ret i16 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKN3WTF12AtomicStringERKNS1_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink14StringKeyframe19SetCSSPropertyValueENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"*, i32, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::MutableCSSPropertyValueSet"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.blink::StringKeyframe::PropertyResolver"*, align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %1) #15
  %11 = tail call zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %10) #15
  br i1 %11, label %135, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::MutableCSSPropertyValueSet"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  store %"class.blink::MutableCSSPropertyValueSet"* inttoptr (i64 -6148914691236517206 to %"class.blink::MutableCSSPropertyValueSet"*), %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #15
  %15 = bitcast i8* %14 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %15, i8 zeroext 0) #15
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = bitcast %"class.blink::MutableCSSPropertyValueSet"** %6 to i8**
  store i8* %14, i8** %20, align 8
  %21 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %15, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false, i32 %3, %"class.blink::StyleSheetContents"* %4) #15
  %22 = and i16 %21, -256
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #15
  store i8 0, i8* %7, align 1
  %23 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %10, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %66, label %27

27:                                               ; preds = %12
  %28 = getelementptr inbounds i8, i8* %14, i64 28
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %79, label %32

32:                                               ; preds = %27
  %33 = icmp eq i8* %14, null
  %34 = bitcast i8* %14 to i32*
  br i1 %33, label %35, label %37

35:                                               ; preds = %32
  %36 = load i32, i32* %34, align 8
  br label %45

37:                                               ; preds = %32
  %38 = load i32, i32* %34, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, i8* %14, i64 16
  %42 = bitcast i8* %41 to %"class.WTF::Vector"*
  %43 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %42, i32 0) #15
  %44 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %43, i64 0, i32 0
  br label %53

45:                                               ; preds = %37, %35
  %46 = phi i32 [ %36, %35 ], [ %38, %37 ]
  %47 = getelementptr inbounds i8, i8* %14, i64 8
  %48 = bitcast i8* %47 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %49 = and i32 %46, 268435455
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %48, i64 %50
  %52 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %51 to %"struct.blink::CSSPropertyValueMetadata"*
  br label %53

53:                                               ; preds = %40, %45
  %54 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %52, %45 ], [ %44, %40 ]
  %55 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %54) #15
  %56 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %55) #15
  %57 = bitcast %"class.blink::CSSProperty"* %56 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %58 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %57, align 8
  %59 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %58, i64 11
  %60 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %59, align 8
  %61 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %60(%"class.blink::CSSProperty"* %56, i8 zeroext 0, i8 zeroext 0) #15
  %62 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, %55
  br i1 %64, label %79, label %65

65:                                               ; preds = %53
  store i8 1, i8* %7, align 1
  br label %77

66:                                               ; preds = %12
  %67 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %1) #15
  %68 = bitcast %"class.blink::CSSProperty"* %67 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %69 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %68, align 8
  %70 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %69, i64 11
  %71 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %70, align 8
  %72 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %71(%"class.blink::CSSProperty"* %67, i8 zeroext 0, i8 zeroext 0) #15
  %73 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %74, %1
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %7, align 1
  br i1 %75, label %77, label %79

77:                                               ; preds = %66, %65
  %78 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 5
  store i8 1, i8* %78, align 8
  br label %79

79:                                               ; preds = %66, %27, %53, %77
  %80 = and i16 %21, 1
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %133, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  %84 = call %"class.blink::StringKeyframe::PropertyResolver"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe16PropertyResolverEE4CallIJRKNS_11CSSPropertyERPNS_26MutableCSSPropertyValueSetERbEEEPS2_DpOT_(%"class.blink::CSSProperty"* dereferenceable(24) %10, %"class.blink::MutableCSSPropertyValueSet"** nonnull dereferenceable(8) %6, i8* nonnull dereferenceable(1) %7) #15
  store %"class.blink::StringKeyframe::PropertyResolver"* %84, %"class.blink::StringKeyframe::PropertyResolver"** %8, align 8
  %85 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %84, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %85, align 8
  %87 = icmp eq %"class.blink::CSSValue"* %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %84, i64 0, i32 3, i32 0, i32 0
  %90 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %89, align 8
  %91 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %90, null
  br i1 %91, label %132, label %92

92:                                               ; preds = %88, %82
  %93 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #15
  %94 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 0
  store i32 2, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %10, %"class.blink::CSSProperty"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %97, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9, %"class.blink::StringKeyframe::PropertyResolver"** nonnull dereferenceable(8) %8) #15
  %99 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, 1
  %100 = and i8 %99, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %113

102:                                              ; preds = %92
  %103 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, 0
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 1
  %105 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %8, align 8
  %106 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %105 to i64
  %107 = bitcast %"class.blink::Member"* %104 to i64*
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %102
  %111 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %105 to i8*
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #15
  br label %113

113:                                              ; preds = %92, %102, %110
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #15
  br label %129

129:                                              ; preds = %113, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #15
  %130 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %131 = bitcast %"class.blink::Member.26"* %130 to i64*
  store atomic i64 0, i64* %131 monotonic, align 8
  br label %132

132:                                              ; preds = %88, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15
  br label %133

133:                                              ; preds = %79, %132
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %134 = and i16 %21, 255
  br label %135

135:                                              ; preds = %5, %133
  %136 = phi i16 [ %134, %133 ], [ 1, %5 ]
  %137 = phi i16 [ %22, %133 ], [ 0, %5 ]
  %138 = or i16 %137, %136
  ret i16 %138
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #2

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14StringKeyframe16PropertyResolver7IsValidEv(%"class.blink::StringKeyframe::PropertyResolver"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %4 = icmp eq %"class.blink::CSSValue"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %6, align 8
  %8 = icmp ne %"class.blink::ImmutableCSSPropertyValueSet"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe19SetCSSPropertyValueERKNS_11CSSPropertyERKNS_8CSSValueE(%"class.blink::StringKeyframe"*, %"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::StringKeyframe::PropertyResolver"*, align 8
  %6 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = icmp eq i32 %7, 1
  br i1 %9, label %10, label %36

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 3, i32* %12, align 8, !alias.scope !4
  %13 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  %14 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #15, !noalias !4
  store %"class.blink::CSSProperty"* %14, %"class.blink::CSSProperty"** %13, align 8, !alias.scope !4
  %15 = bitcast i8* %11 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8, !noalias !4
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8, !alias.scope !4
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #15
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #15, !noalias !4
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4, !noalias !4
  br label %40

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 2, i32* %37, align 8, !alias.scope !4
  %38 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %1, %"class.blink::CSSProperty"** %38, align 8, !alias.scope !4
  %39 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8, !alias.scope !4
  br label %40

40:                                               ; preds = %10, %19, %34, %36
  %41 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  %42 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14StringKeyframe16PropertyResolverEEEPhm(i64 32) #15
  %43 = bitcast i8* %42 to i32*
  store i32 %7, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to %"class.blink::CSSValue"**
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to %"class.blink::ImmutableCSSPropertyValueSet"**
  store %"class.blink::ImmutableCSSPropertyValueSet"* null, %"class.blink::ImmutableCSSPropertyValueSet"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 24
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds i8, i8* %42, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %5 to i8**
  store i8* %42, i8** %53, align 8
  %54 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %55 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_PS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %54, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4, %"class.blink::StringKeyframe::PropertyResolver"** nonnull dereferenceable(8) %5) #15
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %55, 1
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %70

59:                                               ; preds = %40
  %60 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %55, 0
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 0, i32 1
  %62 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %5, align 8
  %63 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %62 to i64
  %64 = bitcast %"class.blink::Member"* %61 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %59
  %68 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %62 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #15
  br label %70

70:                                               ; preds = %40, %59, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  %71 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #15
  br label %87

87:                                               ; preds = %70, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  %88 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %89 = bitcast %"class.blink::Member.26"* %88 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe23RemoveCustomCSSPropertyERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #15
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %6, %10, %25
  %28 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %4, %"class.WTF::StringImpl"* %8, %"class.WTF::String"* null) #15
  br label %29

29:                                               ; preds = %2, %27
  %30 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %30, i64 0, i32 0
  %32 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"* %31, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  %34 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %30, i64 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %38
  %40 = select i1 %33, %"struct.WTF::KeyValuePair"* %39, %"struct.WTF::KeyValuePair"* %32
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %39, %40
  br i1 %41, label %43, label %42

42:                                               ; preds = %29
  tail call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable"* %31, %"struct.WTF::KeyValuePair"* %40) #15
  br label %43

43:                                               ; preds = %29, %42
  ret void
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe29SetPresentationAttributeValueERKNS_11CSSPropertyERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::StringKeyframe"* nocapture readonly, %"class.blink::CSSProperty"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #0 align 2 {
  %6 = tail call zeroext i1 @_ZN5blink13CSSAnimations28IsAnimationAffectingPropertyERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %1) #15
  br i1 %6, label %13, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %9, i32 %11, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false, i32 %3, %"class.blink::StyleSheetContents"* %4) #15
  br label %13

13:                                               ; preds = %7, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe20SetSVGAttributeValueERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::StringKeyframe"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName"*, align 8
  %5 = bitcast %"class.blink::QualifiedName"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4, i32 0
  %7 = call { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES4_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.34"* %6, %"class.blink::QualifiedName"** nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %2) #15
  %8 = extractvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %53

11:                                               ; preds = %3
  %12 = extractvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %7, 0
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %12, i64 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #15
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  call void @llvm.trap() #15
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %11
  %35 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %36 = bitcast %"class.WTF::String"* %13 to i64*
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %3, %34, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe10PropertiesEv(%"class.WTF::HashSet.106"* noalias sret, %"class.blink::StringKeyframe"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  tail call void @_ZNK5blink14StringKeyframe20EnsureCssPropertyMapEv(%"class.blink::StringKeyframe"* %1)
  %6 = bitcast %"class.WTF::HashSet.106"* %0 to i8*
  %7 = bitcast %"class.WTF::HashSet.106"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #15
  %8 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %0, i64 0, i32 0
  br label %31

19:                                               ; preds = %121, %2
  %20 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %128, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %0, i64 0, i32 0
  br label %157

31:                                               ; preds = %13, %121
  %32 = phi i64 [ 0, %13 ], [ %122, %121 ]
  %33 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %9, %13 ], [ %123, %121 ]
  %34 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %33, i64 0, i32 0
  %35 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %33, null
  %36 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %33, i64 0, i32 0, i32 0
  br i1 %35, label %37, label %39

37:                                               ; preds = %31
  %38 = load i32, i32* %36, align 8
  br label %48

39:                                               ; preds = %31
  %40 = load i32, i32* %36, align 4
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %48, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %34, i64 4
  %44 = bitcast %"class.blink::CSSPropertyValueSet"* %43 to %"class.WTF::Vector"*
  %45 = trunc i64 %32 to i32
  %46 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %44, i32 %45) #15
  %47 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %46, i64 0, i32 0
  br label %57

48:                                               ; preds = %39, %37
  %49 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %50 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %34, i64 2
  %51 = bitcast %"class.blink::CSSPropertyValueSet"* %50 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %52 = and i32 %49, 268435455
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %51, i64 %53
  %55 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %54 to %"struct.blink::CSSPropertyValueMetadata"*
  %56 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %55, i64 %32
  br label %57

57:                                               ; preds = %42, %48
  %58 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %56, %48 ], [ %47, %42 ]
  %59 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %58) #15
  %60 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %59) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  br i1 %35, label %70, label %61

61:                                               ; preds = %57
  %62 = load i32, i32* %36, align 4
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %34, i64 4
  %66 = bitcast %"class.blink::CSSPropertyValueSet"* %65 to %"class.WTF::Vector"*
  %67 = trunc i64 %32 to i32
  %68 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %66, i32 %67) #15
  %69 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %68, i64 0, i32 1, i32 0, i32 0
  br label %74

70:                                               ; preds = %61, %57
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %34, i64 2
  %72 = bitcast %"class.blink::CSSPropertyValueSet"* %71 to %"class.blink::Member.18"*
  %73 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %72, i64 %32, i32 0, i32 0
  br label %74

74:                                               ; preds = %64, %70
  %75 = phi %"class.blink::CSSValue"** [ %73, %70 ], [ %69, %64 ]
  %76 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %60, i64 0, i32 1
  %77 = load i32, i32* %76, align 8, !noalias !7
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %103

79:                                               ; preds = %74
  %80 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %75, align 8
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %80, i64 2, i32 2
  store i32 3, i32* %15, align 8, !alias.scope !7
  %82 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #15, !noalias !7
  store %"class.blink::CSSProperty"* %82, %"class.blink::CSSProperty"** %16, align 8, !alias.scope !7
  %83 = bitcast i8* %81 to %"class.WTF::StringImpl"**
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8, !noalias !7
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %17, align 8, !alias.scope !7
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %104, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4, !noalias !7
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %104

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4, !noalias !7
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #15
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %91
  call void @llvm.trap() #15, !noalias !7
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4, !noalias !7
  br label %104

103:                                              ; preds = %74
  store i32 2, i32* %15, align 8, !alias.scope !7
  store %"class.blink::CSSProperty"* %60, %"class.blink::CSSProperty"** %16, align 8, !alias.scope !7
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8, !alias.scope !7
  br label %104

104:                                              ; preds = %79, %86, %101, %103
  %105 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_S2_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.107"* %18, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #15
  br label %121

121:                                              ; preds = %104, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  %122 = add nuw nsw i64 %32, 1
  %123 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %8, align 8
  %124 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %123, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i64
  %127 = icmp ult i64 %122, %126
  br i1 %127, label %31, label %19

128:                                              ; preds = %203, %19
  %129 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %1, i64 0, i32 4, i32 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %133, i64 %136
  br i1 %131, label %210, label %138

138:                                              ; preds = %128
  %139 = icmp eq i32 %135, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %138, %144
  %141 = phi %"struct.WTF::KeyValuePair.37"* [ %145, %144 ], [ %133, %138 ]
  %142 = bitcast %"struct.WTF::KeyValuePair.37"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  switch i64 %143, label %147 [
    i64 -1, label %144
    i64 0, label %144
  ]

144:                                              ; preds = %140, %140
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %141, i64 1
  %146 = icmp eq %"struct.WTF::KeyValuePair.37"* %145, %137
  br i1 %146, label %210, label %140

147:                                              ; preds = %140, %138
  %148 = phi %"struct.WTF::KeyValuePair.37"* [ %133, %138 ], [ %141, %140 ]
  %149 = icmp eq %"struct.WTF::KeyValuePair.37"* %148, %137
  br i1 %149, label %210, label %150

150:                                              ; preds = %147
  %151 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %152 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %154 = bitcast %union.anon.8* %153 to i64*
  %155 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %0, i64 0, i32 0
  br label %211

157:                                              ; preds = %25, %203
  %158 = phi i64 [ 0, %25 ], [ %204, %203 ]
  %159 = phi %"class.blink::MutableCSSPropertyValueSet"* [ %21, %25 ], [ %205, %203 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %160 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %159, i64 0, i32 0
  %161 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %159, null
  %162 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %159, i64 0, i32 0, i32 0
  br i1 %161, label %163, label %165

163:                                              ; preds = %157
  %164 = load i32, i32* %162, align 8
  br label %174

165:                                              ; preds = %157
  %166 = load i32, i32* %162, align 4
  %167 = icmp sgt i32 %166, -1
  br i1 %167, label %174, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %160, i64 4
  %170 = bitcast %"class.blink::CSSPropertyValueSet"* %169 to %"class.WTF::Vector"*
  %171 = trunc i64 %158 to i32
  %172 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %170, i32 %171) #15
  %173 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %172, i64 0, i32 0
  br label %183

174:                                              ; preds = %165, %163
  %175 = phi i32 [ %164, %163 ], [ %166, %165 ]
  %176 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %160, i64 2
  %177 = bitcast %"class.blink::CSSPropertyValueSet"* %176 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %178 = and i32 %175, 268435455
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %177, i64 %179
  %181 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %180 to %"struct.blink::CSSPropertyValueMetadata"*
  %182 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %181, i64 %158
  br label %183

183:                                              ; preds = %168, %174
  %184 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %182, %174 ], [ %173, %168 ]
  %185 = call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %184) #15
  %186 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %185) #15
  store i32 4, i32* %27, align 8
  store %"class.blink::CSSProperty"* %186, %"class.blink::CSSProperty"** %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %187 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_S2_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.107"* %30, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %183
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #15
  br label %203

203:                                              ; preds = %183, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  %204 = add nuw nsw i64 %158, 1
  %205 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %20, align 8
  %206 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %205, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i64
  %209 = icmp ult i64 %204, %208
  br i1 %209, label %157, label %128

210:                                              ; preds = %144, %231, %241, %238, %128, %147
  ret void

211:                                              ; preds = %150, %241
  %212 = phi %"struct.WTF::KeyValuePair.37"* [ %148, %150 ], [ %235, %241 ]
  %213 = bitcast %"struct.WTF::KeyValuePair.37"* %212 to i64*
  %214 = load i64, i64* %213, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #15
  store i32 5, i32* %152, align 8
  store i64 %214, i64* %154, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %155, align 8
  %215 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_S2_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.107"* %156, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #15
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #15
  br label %231

231:                                              ; preds = %211, %227, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #15
  %232 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %212, i64 1
  %233 = icmp eq %"struct.WTF::KeyValuePair.37"* %232, %137
  br i1 %233, label %210, label %234

234:                                              ; preds = %231, %238
  %235 = phi %"struct.WTF::KeyValuePair.37"* [ %239, %238 ], [ %232, %231 ]
  %236 = bitcast %"struct.WTF::KeyValuePair.37"* %235 to i64*
  %237 = load i64, i64* %236, align 8
  switch i64 %237, label %241 [
    i64 -1, label %238
    i64 0, label %238
  ]

238:                                              ; preds = %234, %234
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %235, i64 1
  %240 = icmp eq %"struct.WTF::KeyValuePair.37"* %239, %137
  br i1 %240, label %210, label %234

241:                                              ; preds = %234
  %242 = icmp eq %"struct.WTF::KeyValuePair.37"* %235, %137
  br i1 %242, label %210, label %211
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe20EnsureCssPropertyMapEv(%"class.blink::StringKeyframe"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::HeapVector.721", align 8
  %6 = alloca %"class.blink::CSSPropertyName", align 8
  %7 = alloca %"class.blink::CSSPropertyValue", align 8
  %8 = alloca %"class.blink::StringKeyframe::PropertyResolver"*, align 8
  %9 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::Member.26", %"class.blink::Member.26"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %10, align 8
  %12 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %11, null
  br i1 %12, label %13, label %301

13:                                               ; preds = %1
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64 136) #15
  %15 = bitcast i8* %14 to %"class.blink::MutableCSSPropertyValueSet"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"* %15, i8 zeroext 0) #15
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = ptrtoint i8* %14 to i64
  %21 = bitcast %"class.blink::Member.26"* %9 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #15
  br label %26

26:                                               ; preds = %13, %24
  %27 = bitcast %"class.blink::HeapVector.721"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.blink::HeapVector.721", %"class.blink::HeapVector.721"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HeapVector.721", %"class.blink::HeapVector.721"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HeapVector.721", %"class.blink::HeapVector.721"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #15
  %31 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %38
  br i1 %33, label %79, label %40

40:                                               ; preds = %26
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %79, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %46 = bitcast %union.anon.8* %45 to i8*
  %47 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %72, %42
  %49 = phi %"struct.WTF::KeyValuePair"* [ %35, %42 ], [ %73, %72 ]
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  store i32 0, i32* %44, align 8, !alias.scope !10
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #15, !alias.scope !10
  %51 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %50, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 1
  %71 = or i1 %51, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %74 = icmp eq %"struct.WTF::KeyValuePair"* %73, %39
  br i1 %74, label %75, label %48

75:                                               ; preds = %72, %67
  %76 = phi %"struct.WTF::KeyValuePair"* [ %49, %67 ], [ %39, %72 ]
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %78 = load i32, i32* %36, align 8
  br label %79

79:                                               ; preds = %75, %26, %40
  %80 = phi i32 [ %37, %26 ], [ 0, %40 ], [ %78, %75 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %35, %26 ], [ %35, %40 ], [ %77, %75 ]
  %82 = phi %"struct.WTF::KeyValuePair"* [ %39, %26 ], [ %35, %40 ], [ %76, %75 ]
  %83 = zext i32 %80 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 %83
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %82, %84
  br i1 %85, label %282, label %86

86:                                               ; preds = %79
  %87 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %8 to i8*
  %88 = getelementptr inbounds %"class.blink::HeapVector.721", %"class.blink::HeapVector.721"* %5, i64 0, i32 0
  %89 = bitcast %"class.blink::CSSPropertyName"* %6 to i8*
  %90 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = bitcast %"class.blink::CSSPropertyValue"* %7 to i8*
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0
  %94 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %97 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %98 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %99 = bitcast %union.anon.8* %98 to i8*
  %100 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = bitcast %"class.blink::CSSPropertyName"* %6 to i64*
  br label %105

102:                                              ; preds = %260
  %103 = and i8 %230, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %282, label %263

105:                                              ; preds = %86, %260
  %106 = phi i8 [ 0, %86 ], [ %230, %260 ]
  %107 = phi %"struct.WTF::KeyValuePair"* [ %82, %86 ], [ %261, %260 ]
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = or i32 %109, 1
  %111 = icmp eq i32 %110, 3
  br i1 %111, label %112, label %229

112:                                              ; preds = %105
  %113 = icmp eq i32 %109, 3
  br i1 %113, label %114, label %197

114:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #15
  store i64 -6148914691236517206, i64* %101, align 8
  store i32 1, i32* %90, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %91, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #15
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %123
  call void @llvm.trap() #15
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %114, %118, %133
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 1, i32 0, i32 0
  %137 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %137, i64 0, i32 2
  %139 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %139, align 8
  %141 = icmp eq %"class.blink::CSSValue"* %140, null
  br i1 %141, label %142, label %161

142:                                              ; preds = %135
  %143 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %137, i64 0, i32 0
  %144 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSKeyframeShorthandValueEEEPvm(i64 16) #15
  %145 = bitcast i8* %144 to %"class.blink::CSSKeyframeShorthandValue"*
  %146 = load i32, i32* %143, align 4
  %147 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %137, i64 0, i32 3, i32 0, i32 0
  %148 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %147, align 8
  call void @_ZN5blink25CSSKeyframeShorthandValueC1ENS_13CSSPropertyIDEPNS_28ImmutableCSSPropertyValueSetE(%"class.blink::CSSKeyframeShorthandValue"* %145, i32 %146, %"class.blink::ImmutableCSSPropertyValueSet"* %148) #15
  %149 = getelementptr inbounds i8, i8* %144, i64 -4
  %150 = bitcast i8* %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = or i16 %151, 1
  store atomic i16 %152, i16* %150 release, align 2
  %153 = ptrtoint i8* %144 to i64
  %154 = bitcast %"class.blink::Member.18"* %138 to i64*
  store atomic i64 %153, i64* %154 monotonic, align 8
  %155 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %156 = icmp eq i32 %155, 0
  %157 = bitcast i8* %144 to %"class.blink::CSSValue"*
  br i1 %156, label %161, label %158

158:                                              ; preds = %142
  %159 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %144) #15
  %160 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %139, align 8
  br label %161

161:                                              ; preds = %135, %142, %158
  %162 = phi %"class.blink::CSSValue"* [ %140, %135 ], [ %157, %142 ], [ %160, %158 ]
  %163 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #15
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %93, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %6, i1 zeroext false, i32 0, i1 zeroext false, i1 zeroext false) #15
  store %"class.blink::CSSValue"* %162, %"class.blink::CSSValue"** %94, align 8
  %164 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"* %163, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %7, %"class.blink::CSSPropertyValue"* null) #15
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #15
  br label %180

180:                                              ; preds = %161, %176, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #15
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #15
  br label %196

196:                                              ; preds = %180, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #15
  br label %229

197:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #15
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 0, i32 1, i32 0, i32 0
  %199 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %198, align 8
  store %"class.blink::StringKeyframe::PropertyResolver"* %199, %"class.blink::StringKeyframe::PropertyResolver"** %8, align 8
  %200 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %199, i64 0, i32 4
  %201 = load i8, i8* %200, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %199 to i64
  br i1 %202, label %204, label %208

204:                                              ; preds = %197
  %205 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %199, i64 0, i32 3, i32 0, i32 0
  %206 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %205, align 8
  %207 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %206, null
  br i1 %207, label %209, label %208

208:                                              ; preds = %204, %197
  br label %209

209:                                              ; preds = %204, %208
  %210 = phi i8 [ 1, %208 ], [ %106, %204 ]
  %211 = load i32, i32* %30, align 4
  %212 = load i32, i32* %29, align 8
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %227, label %214, !prof !3

214:                                              ; preds = %209
  %215 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %216 = zext i32 %211 to i64
  %217 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %215, i64 %216
  %218 = bitcast %"class.blink::Member"* %217 to i64*
  store atomic i64 %203, i64* %218 monotonic, align 8
  %219 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %224, label %221

221:                                              ; preds = %214
  %222 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %199 to i8*
  %223 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %222) #15
  br label %224

224:                                              ; preds = %221, %214
  %225 = load i32, i32* %30, align 4
  %226 = add i32 %225, 1
  store i32 %226, i32* %30, align 4
  br label %228

227:                                              ; preds = %209
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.724"* nonnull %88, %"class.blink::StringKeyframe::PropertyResolver"** nonnull dereferenceable(8) %8) #15
  br label %228

228:                                              ; preds = %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #15
  br label %229

229:                                              ; preds = %196, %228, %105
  %230 = phi i8 [ %106, %105 ], [ %106, %196 ], [ %210, %228 ]
  %231 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %107, i64 1
  %232 = icmp eq %"struct.WTF::KeyValuePair"* %231, %39
  br i1 %232, label %260, label %233

233:                                              ; preds = %229, %257
  %234 = phi %"struct.WTF::KeyValuePair"* [ %258, %257 ], [ %231, %229 ]
  %235 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %234, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #15
  store i32 0, i32* %97, align 8, !alias.scope !15
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #15, !alias.scope !15
  %236 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %235, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #15
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #15
  br label %252

252:                                              ; preds = %251, %248, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #15
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %234, i64 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = icmp eq i32 %254, 1
  %256 = or i1 %236, %255
  br i1 %256, label %257, label %260

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %234, i64 1
  %259 = icmp eq %"struct.WTF::KeyValuePair"* %258, %39
  br i1 %259, label %260, label %233

260:                                              ; preds = %252, %257, %229
  %261 = phi %"struct.WTF::KeyValuePair"* [ %39, %229 ], [ %234, %252 ], [ %39, %257 ]
  %262 = icmp eq %"struct.WTF::KeyValuePair"* %261, %84
  br i1 %262, label %102, label %105

263:                                              ; preds = %102
  %264 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %265 = load i32, i32* %30, align 4
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %264, i64 %266
  %268 = bitcast i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268)
  store i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)* @_ZN5blink14StringKeyframe16PropertyResolver16HasLowerPriorityEPS1_S2_, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %269 = icmp eq i32 %265, 0
  br i1 %269, label %278, label %270

270:                                              ; preds = %263, %275
  %271 = phi i64 [ %276, %275 ], [ %266, %263 ]
  %272 = shl i64 %271, 3
  %273 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %272, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #15
  %274 = icmp eq i8* %273, null
  br i1 %274, label %275, label %279

275:                                              ; preds = %270
  %276 = lshr i64 %271, 1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %270

278:                                              ; preds = %275, %263
  call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %264, %"class.blink::Member"* %267, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** nonnull dereferenceable(8) %3, i64 %266, %"class.blink::Member"* null, i64 0) #15
  br label %281

279:                                              ; preds = %270
  %280 = bitcast i8* %273 to %"class.blink::Member"*
  call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %264, %"class.blink::Member"* %267, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** nonnull dereferenceable(8) %3, i64 %266, %"class.blink::Member"* nonnull %280, i64 %271) #15
  call void @_ZdlPv(i8* nonnull %273) #16
  br label %281

281:                                              ; preds = %278, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268)
  br label %282

282:                                              ; preds = %79, %102, %281
  %283 = load %"class.blink::Member"*, %"class.blink::Member"** %28, align 8
  %284 = load i32, i32* %30, align 4
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %283, i64 %285
  %287 = icmp eq i32 %284, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 6
  %290 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  br label %292

291:                                              ; preds = %292, %282
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  br label %301

292:                                              ; preds = %288, %292
  %293 = phi %"class.blink::Member"* [ %283, %288 ], [ %299, %292 ]
  %294 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %294, align 8
  %296 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %10, align 8
  %297 = load i8, i8* %289, align 1
  %298 = load i8, i8* %290, align 2
  call void @_ZN5blink14StringKeyframe16PropertyResolver8AppendToEPNS_26MutableCSSPropertyValueSetENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe::PropertyResolver"* %295, %"class.blink::MutableCSSPropertyValueSet"* %296, i8 zeroext %297, i8 zeroext %298)
  %299 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %293, i64 1
  %300 = icmp eq %"class.blink::Member"* %299, %286
  br i1 %300, label %291, label %292

301:                                              ; preds = %1, %291
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14StringKeyframe14HasCssPropertyEv(%"class.blink::StringKeyframe"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.WTF::HashSet.106", align 8
  %5 = bitcast %"class.WTF::HashSet.106"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %4, i64 0, i32 0, i32 2
  %9 = bitcast %"class.blink::StringKeyframe"* %0 to void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)***
  %10 = bitcast %"class.WTF::HashSet.106"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*** %9, align 8
  %12 = getelementptr inbounds void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)** %11, i64 2
  %13 = load void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)** %12, align 8
  call void %13(%"class.WTF::HashSet.106"* nonnull sret %4, %"class.blink::StringKeyframe"* %0) #15
  %14 = load i32, i32* %8, align 4
  %15 = icmp eq i32 %14, 0
  %16 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %6, align 8
  %17 = load i32, i32* %7, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %16, i64 %18
  br i1 %15, label %58, label %20

20:                                               ; preds = %1
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %58, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %26 = bitcast %union.anon.8* %25 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %51, %22
  %29 = phi %"class.blink::PropertyHandle"* [ %16, %22 ], [ %52, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  store i32 0, i32* %24, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #15, !alias.scope !20
  %30 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %29, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br label %46

46:                                               ; preds = %45, %42, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %47 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %29, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  %50 = or i1 %30, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %29, i64 1
  %53 = icmp eq %"class.blink::PropertyHandle"* %52, %19
  br i1 %53, label %54, label %28

54:                                               ; preds = %51, %46
  %55 = phi %"class.blink::PropertyHandle"* [ %19, %51 ], [ %29, %46 ]
  %56 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %6, align 8
  %57 = load i32, i32* %7, align 8
  br label %58

58:                                               ; preds = %54, %1, %20
  %59 = phi i32 [ %17, %1 ], [ 0, %20 ], [ %57, %54 ]
  %60 = phi %"class.blink::PropertyHandle"* [ %16, %1 ], [ %16, %20 ], [ %56, %54 ]
  %61 = phi %"class.blink::PropertyHandle"* [ %19, %1 ], [ %16, %20 ], [ %55, %54 ]
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %60, i64 %62
  %64 = icmp eq %"class.blink::PropertyHandle"* %61, %63
  br i1 %64, label %112, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %67 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %68 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %69 = bitcast %union.anon.8* %68 to i8*
  %70 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %65, %106
  %72 = phi %"class.blink::PropertyHandle"* [ %61, %65 ], [ %107, %106 ]
  %73 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = or i32 %74, 1
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %109, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %72, i64 1
  %79 = icmp eq %"class.blink::PropertyHandle"* %78, %19
  br i1 %79, label %106, label %80

80:                                               ; preds = %77, %103
  %81 = phi %"class.blink::PropertyHandle"* [ %104, %103 ], [ %78, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #15
  store i32 0, i32* %67, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #15, !alias.scope !25
  %82 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %81, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #15
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #15
  br label %98

98:                                               ; preds = %97, %94, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #15
  %99 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %81, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 1
  %102 = or i1 %82, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %81, i64 1
  %105 = icmp eq %"class.blink::PropertyHandle"* %104, %19
  br i1 %105, label %106, label %80

106:                                              ; preds = %98, %103, %77
  %107 = phi %"class.blink::PropertyHandle"* [ %19, %77 ], [ %81, %98 ], [ %19, %103 ]
  %108 = icmp eq %"class.blink::PropertyHandle"* %107, %63
  br i1 %108, label %109, label %71

109:                                              ; preds = %71, %106
  %110 = phi i1 [ false, %106 ], [ true, %71 ]
  %111 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %6, align 8
  br label %112

112:                                              ; preds = %109, %58
  %113 = phi %"class.blink::PropertyHandle"* [ %60, %58 ], [ %111, %109 ]
  %114 = phi i1 [ false, %58 ], [ %110, %109 ]
  %115 = icmp eq %"class.blink::PropertyHandle"* %113, null
  br i1 %115, label %148, label %116, !prof !30

116:                                              ; preds = %112
  %117 = load i32, i32* %7, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %146, label %119

119:                                              ; preds = %116
  %120 = zext i32 %117 to i64
  br label %121

121:                                              ; preds = %143, %119
  %122 = phi i64 [ 0, %119 ], [ %144, %143 ]
  %123 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %113, i64 %122, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %143, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %113, i64 %122, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %142, %139, %126, %121
  %144 = add nuw nsw i64 %122, 1
  %145 = icmp eq i64 %144, %120
  br i1 %145, label %146, label %121

146:                                              ; preds = %143, %116
  %147 = bitcast %"class.blink::PropertyHandle"* %113 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %147) #15
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %6, align 8
  br label %148

148:                                              ; preds = %112, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::StringKeyframe"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16), %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName"*, align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.blink::PropertyHandle", align 8
  %11 = alloca %"class.blink::PropertyHandle", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::HashSet.106", align 8
  %14 = alloca %"class.blink::PropertyHandle", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0
  tail call void @_ZNK5blink8Keyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::Keyframe"* %16, %"class.blink::V8ObjectBuilder"* dereferenceable(16) %1, %"class.blink::Element"* %2) #15
  %17 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 %24
  br i1 %19, label %65, label %26

26:                                               ; preds = %3
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %65, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.blink::PropertyHandle"* %10 to i8*
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 1
  %32 = bitcast %union.anon.8* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %58, %28
  %35 = phi %"struct.WTF::KeyValuePair"* [ %21, %28 ], [ %59, %58 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  store i32 0, i32* %30, align 8, !alias.scope !31
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #15, !alias.scope !31
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %36, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %10) #15
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %52, %49, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  %57 = or i1 %37, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %25
  br i1 %60, label %61, label %34

61:                                               ; preds = %58, %53
  %62 = phi %"struct.WTF::KeyValuePair"* [ %35, %53 ], [ %25, %58 ]
  %63 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %64 = load i32, i32* %22, align 8
  br label %65

65:                                               ; preds = %61, %3, %26
  %66 = phi i32 [ %23, %3 ], [ 0, %26 ], [ %64, %61 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %21, %3 ], [ %21, %26 ], [ %63, %61 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %25, %3 ], [ %21, %26 ], [ %62, %61 ]
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %69
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %68, %70
  br i1 %71, label %93, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::PropertyHandle"* %11 to i8*
  %74 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::StringView"* %12 to i8*
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  %79 = bitcast %"class.WTF::StringView"* %12 to i64*
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %81 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %1, i64 0, i32 0
  %82 = bitcast %"class.WTF::StringView"* %7 to i8*
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  %86 = bitcast %"class.WTF::StringView"* %7 to i64*
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %88 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  %90 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1
  %91 = bitcast %union.anon.8* %90 to i8*
  %92 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %177

93:                                               ; preds = %324, %65
  %94 = bitcast %"class.WTF::HashSet.106"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #15
  %95 = bitcast %"class.blink::StringKeyframe"* %0 to void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)***
  %96 = load void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)**, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)** %96, i64 2
  %98 = load void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)*, void (%"class.WTF::HashSet.106"*, %"class.blink::StringKeyframe"*)** %97, align 8
  call void %98(%"class.WTF::HashSet.106"* nonnull sret %13, %"class.blink::StringKeyframe"* %0) #15
  %99 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %13, i64 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %13, i64 0, i32 0, i32 0
  %103 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %102, align 8
  %104 = getelementptr inbounds %"class.WTF::HashSet.106", %"class.WTF::HashSet.106"* %13, i64 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %103, i64 %106
  br i1 %101, label %146, label %108

108:                                              ; preds = %93
  %109 = icmp eq i32 %105, 0
  br i1 %109, label %146, label %110

110:                                              ; preds = %108
  %111 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  %112 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 0
  %113 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 1
  %114 = bitcast %union.anon.8* %113 to i8*
  %115 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %116

116:                                              ; preds = %139, %110
  %117 = phi %"class.blink::PropertyHandle"* [ %103, %110 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #15
  store i32 0, i32* %112, align 8, !alias.scope !36
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #15, !alias.scope !36
  %118 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %117, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8) #15
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #15
  br label %134

134:                                              ; preds = %133, %130, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #15
  %135 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %117, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 1
  %138 = or i1 %118, %137
  br i1 %138, label %139, label %142

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %117, i64 1
  %141 = icmp eq %"class.blink::PropertyHandle"* %140, %107
  br i1 %141, label %142, label %116

142:                                              ; preds = %139, %134
  %143 = phi %"class.blink::PropertyHandle"* [ %107, %139 ], [ %117, %134 ]
  %144 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %102, align 8
  %145 = load i32, i32* %104, align 8
  br label %146

146:                                              ; preds = %142, %93, %108
  %147 = phi i32 [ %105, %93 ], [ 0, %108 ], [ %145, %142 ]
  %148 = phi %"class.blink::PropertyHandle"* [ %103, %93 ], [ %103, %108 ], [ %144, %142 ]
  %149 = phi %"class.blink::PropertyHandle"* [ %107, %93 ], [ %103, %108 ], [ %143, %142 ]
  %150 = zext i32 %147 to i64
  %151 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %148, i64 %150
  %152 = icmp eq %"class.blink::PropertyHandle"* %149, %151
  br i1 %152, label %329, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.blink::PropertyHandle"* %14 to i8*
  %155 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4
  %157 = bitcast %"class.blink::QualifiedName"** %4 to i8*
  %158 = bitcast %"class.blink::QualifiedName"** %4 to i64*
  %159 = bitcast %"class.WTF::StringView"* %15 to i8*
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %162 = bitcast i8** %161 to %"class.WTF::StringImpl"**
  %163 = bitcast %"class.WTF::StringView"* %15 to i64*
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %165 = getelementptr inbounds %"class.blink::V8ObjectBuilder", %"class.blink::V8ObjectBuilder"* %1, i64 0, i32 0
  %166 = bitcast %"class.WTF::StringView"* %5 to i8*
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %169 = bitcast i8** %168 to %"class.WTF::StringImpl"**
  %170 = bitcast %"class.WTF::StringView"* %5 to i64*
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %172 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  %173 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 0
  %174 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 1
  %175 = bitcast %union.anon.8* %174 to i8*
  %176 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %365

177:                                              ; preds = %72, %324
  %178 = phi %"struct.WTF::KeyValuePair"* [ %68, %72 ], [ %325, %324 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %178, i64 0, i32 1, i32 0, i32 0
  %180 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %180, i64 0, i32 2
  %182 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %181, i64 0, i32 0, i32 0
  %183 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %182, align 8
  %184 = icmp eq %"class.blink::CSSValue"* %183, null
  br i1 %184, label %185, label %204

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %180, i64 0, i32 0
  %187 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSKeyframeShorthandValueEEEPvm(i64 16) #15
  %188 = bitcast i8* %187 to %"class.blink::CSSKeyframeShorthandValue"*
  %189 = load i32, i32* %186, align 4
  %190 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %180, i64 0, i32 3, i32 0, i32 0
  %191 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %190, align 8
  call void @_ZN5blink25CSSKeyframeShorthandValueC1ENS_13CSSPropertyIDEPNS_28ImmutableCSSPropertyValueSetE(%"class.blink::CSSKeyframeShorthandValue"* %188, i32 %189, %"class.blink::ImmutableCSSPropertyValueSet"* %191) #15
  %192 = getelementptr inbounds i8, i8* %187, i64 -4
  %193 = bitcast i8* %192 to i16*
  %194 = load atomic i16, i16* %193 monotonic, align 2
  %195 = or i16 %194, 1
  store atomic i16 %195, i16* %193 release, align 2
  %196 = ptrtoint i8* %187 to i64
  %197 = bitcast %"class.blink::Member.18"* %181 to i64*
  store atomic i64 %196, i64* %197 monotonic, align 8
  %198 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %199 = icmp eq i32 %198, 0
  %200 = bitcast i8* %187 to %"class.blink::CSSValue"*
  br i1 %199, label %204, label %201

201:                                              ; preds = %185
  %202 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %187) #15
  %203 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %182, align 8
  br label %204

204:                                              ; preds = %177, %185, %201
  %205 = phi %"class.blink::CSSValue"* [ %183, %177 ], [ %200, %185 ], [ %203, %201 ]
  %206 = bitcast %"struct.WTF::KeyValuePair"* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %206, i64 16, i1 false) #15
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %178, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %74, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #15
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %215
  call void @llvm.trap() #15
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %204, %210, %225
  %228 = call %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %11) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #15
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %230, label %232

230:                                              ; preds = %227
  store i8* null, i8** %77, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %231, i64* %79, align 8
  br label %236

232:                                              ; preds = %227
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %76, align 8
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 1
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %78, align 8
  br label %236

236:                                              ; preds = %230, %232
  %237 = phi i32 [ %234, %232 ], [ 0, %230 ]
  store i32 %237, i32* %80, align 8
  %238 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %205) #15
  %239 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %81, align 8
  %240 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %239, i64 0, i32 1, i32 0, i32 0, i32 0
  %241 = load %"class.v8::Context"*, %"class.v8::Context"** %240, align 8
  %242 = icmp eq %"class.v8::Context"* %241, null
  br i1 %242, label %250, label %243

243:                                              ; preds = %236
  %244 = bitcast %"class.blink::ScriptState"* %239 to %"class.v8::internal::Isolate"**
  %245 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %244, align 8
  %246 = bitcast %"class.v8::Context"* %241 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %245, i64 %247) #15
  %249 = bitcast i64* %248 to %"class.v8::Context"*
  br label %250

250:                                              ; preds = %243, %236
  %251 = phi %"class.v8::Context"* [ %249, %243 ], [ null, %236 ]
  %252 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %251) #15
  %253 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %81, align 8
  %254 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %253, i64 0, i32 0
  %255 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %254, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #15
  %256 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %256, label %257, label %259

257:                                              ; preds = %250
  store i8* null, i8** %84, align 8
  %258 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %258, i64* %86, align 8
  br label %263

259:                                              ; preds = %250
  store %"class.WTF::StringImpl"* %238, %"class.WTF::StringImpl"** %83, align 8
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 1
  store %"class.WTF::StringImpl"* %262, %"class.WTF::StringImpl"** %85, align 8
  br label %263

263:                                              ; preds = %257, %259
  %264 = phi i32 [ %261, %259 ], [ 0, %257 ]
  store i32 %264, i32* %87, align 8
  %265 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %255, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #15
  %266 = bitcast %"class.v8::String"* %265 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #15
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.v8::Value"* %266) #15
  br i1 %256, label %280, label %267

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #15
  br label %280

280:                                              ; preds = %263, %276, %279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #15
  br i1 %229, label %294, label %281

281:                                              ; preds = %280
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #15
  br label %294

294:                                              ; preds = %280, %290, %293
  %295 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %178, i64 1
  %296 = icmp eq %"struct.WTF::KeyValuePair"* %295, %25
  br i1 %296, label %324, label %297

297:                                              ; preds = %294, %321
  %298 = phi %"struct.WTF::KeyValuePair"* [ %322, %321 ], [ %295, %294 ]
  %299 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %298, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #15
  store i32 0, i32* %89, align 8, !alias.scope !41
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #15, !alias.scope !41
  %300 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %299, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6) #15
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #15
  br label %316

316:                                              ; preds = %315, %312, %297
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #15
  %317 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %298, i64 0, i32 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 1
  %320 = or i1 %300, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %298, i64 1
  %323 = icmp eq %"struct.WTF::KeyValuePair"* %322, %25
  br i1 %323, label %324, label %297

324:                                              ; preds = %316, %321, %294
  %325 = phi %"struct.WTF::KeyValuePair"* [ %25, %294 ], [ %298, %316 ], [ %25, %321 ]
  %326 = icmp eq %"struct.WTF::KeyValuePair"* %325, %70
  br i1 %326, label %93, label %177

327:                                              ; preds = %502
  %328 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %102, align 8
  br label %329

329:                                              ; preds = %327, %146
  %330 = phi %"class.blink::PropertyHandle"* [ %328, %327 ], [ %148, %146 ]
  %331 = icmp eq %"class.blink::PropertyHandle"* %330, null
  br i1 %331, label %364, label %332, !prof !30

332:                                              ; preds = %329
  %333 = load i32, i32* %104, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %362, label %335

335:                                              ; preds = %332
  %336 = zext i32 %333 to i64
  br label %337

337:                                              ; preds = %359, %335
  %338 = phi i64 [ 0, %335 ], [ %360, %359 ]
  %339 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %330, i64 %338, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = icmp eq i32 %340, 1
  br i1 %341, label %359, label %342

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %330, i64 %338, i32 2, i32 0, i32 0, i32 0
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #15
  br label %359

359:                                              ; preds = %358, %355, %342, %337
  %360 = add nuw nsw i64 %338, 1
  %361 = icmp eq i64 %360, %336
  br i1 %361, label %362, label %337

362:                                              ; preds = %359, %332
  %363 = bitcast %"class.blink::PropertyHandle"* %330 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %363) #15
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %102, align 8
  br label %364

364:                                              ; preds = %329, %362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #15
  ret void

365:                                              ; preds = %153, %502
  %366 = phi %"class.blink::PropertyHandle"* [ %149, %153 ], [ %503, %502 ]
  %367 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %366, i64 0, i32 0
  %368 = load i32, i32* %367, align 8
  %369 = or i32 %368, 1
  %370 = icmp eq i32 %369, 3
  br i1 %370, label %473, label %371

371:                                              ; preds = %365
  %372 = bitcast %"class.blink::PropertyHandle"* %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* align 8 %372, i64 16, i1 false) #15
  %373 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %366, i64 0, i32 2, i32 0, i32 0, i32 0
  %374 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  store %"class.WTF::StringImpl"* %374, %"class.WTF::StringImpl"** %155, align 8
  %375 = icmp eq %"class.WTF::StringImpl"* %374, null
  br i1 %375, label %393, label %376

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = load atomic i32, i32* %377 monotonic, align 4
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %393

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %374, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = zext i32 %383 to i33
  %385 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %384, i33 1) #15
  %386 = extractvalue { i33, i1 } %385, 1
  %387 = extractvalue { i33, i1 } %385, 0
  %388 = icmp slt i33 %387, 0
  %389 = or i1 %386, %388
  br i1 %389, label %390, label %391, !prof !3

390:                                              ; preds = %381
  call void @llvm.trap() #15
  unreachable

391:                                              ; preds = %381
  %392 = trunc i33 %387 to i32
  store i32 %392, i32* %382, align 4
  br label %393

393:                                              ; preds = %371, %376, %391
  %394 = call %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %14) #15
  %395 = load i32, i32* %367, align 8
  %396 = icmp eq i32 %395, 4
  br i1 %396, label %397, label %402

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %366, i64 0, i32 1, i32 0
  %399 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %398, align 8
  %400 = call dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe26PresentationAttributeValueERKNS_11CSSPropertyE(%"class.blink::StringKeyframe"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %399)
  %401 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %400) #15
  br label %407

402:                                              ; preds = %393
  %403 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %366, i64 0, i32 1
  %404 = bitcast %union.anon.8* %403 to i64*
  %405 = load i64, i64* %404, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #15
  store i64 %405, i64* %158, align 8
  %406 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIPKN5blink13QualifiedNameENS_6StringENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS8_IS5_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.33"* %156, %"class.blink::QualifiedName"** nonnull dereferenceable(8) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #15
  br label %407

407:                                              ; preds = %402, %397
  %408 = phi %"class.WTF::StringImpl"* [ %401, %397 ], [ %406, %402 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #15
  %409 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %409, label %410, label %412

410:                                              ; preds = %407
  store i8* null, i8** %161, align 8
  %411 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %411, i64* %163, align 8
  br label %416

412:                                              ; preds = %407
  store %"class.WTF::StringImpl"* %394, %"class.WTF::StringImpl"** %160, align 8
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 1
  store %"class.WTF::StringImpl"* %415, %"class.WTF::StringImpl"** %162, align 8
  br label %416

416:                                              ; preds = %410, %412
  %417 = phi i32 [ %414, %412 ], [ 0, %410 ]
  store i32 %417, i32* %164, align 8
  %418 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %165, align 8
  %419 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %418, i64 0, i32 1, i32 0, i32 0, i32 0
  %420 = load %"class.v8::Context"*, %"class.v8::Context"** %419, align 8
  %421 = icmp eq %"class.v8::Context"* %420, null
  br i1 %421, label %429, label %422

422:                                              ; preds = %416
  %423 = bitcast %"class.blink::ScriptState"* %418 to %"class.v8::internal::Isolate"**
  %424 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %423, align 8
  %425 = bitcast %"class.v8::Context"* %420 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %424, i64 %426) #15
  %428 = bitcast i64* %427 to %"class.v8::Context"*
  br label %429

429:                                              ; preds = %422, %416
  %430 = phi %"class.v8::Context"* [ %428, %422 ], [ null, %416 ]
  %431 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %430) #15
  %432 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %165, align 8
  %433 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %432, i64 0, i32 0
  %434 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %433, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #15
  %435 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %435, label %436, label %438

436:                                              ; preds = %429
  store i8* null, i8** %168, align 8
  %437 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %437, i64* %170, align 8
  br label %442

438:                                              ; preds = %429
  store %"class.WTF::StringImpl"* %408, %"class.WTF::StringImpl"** %167, align 8
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 1
  store %"class.WTF::StringImpl"* %441, %"class.WTF::StringImpl"** %169, align 8
  br label %442

442:                                              ; preds = %436, %438
  %443 = phi i32 [ %440, %438 ], [ 0, %436 ]
  store i32 %443, i32* %171, align 8
  %444 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %434, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  %445 = bitcast %"class.v8::String"* %444 to %"class.v8::Value"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #15
  call void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.v8::Value"* %445) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #15
  br i1 %435, label %459, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #15
  br label %459

459:                                              ; preds = %442, %455, %458
  br i1 %409, label %473, label %460

460:                                              ; preds = %459
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  br i1 %464, label %467, label %469

467:                                              ; preds = %460
  %468 = add i32 %466, -1
  store i32 %468, i32* %465, align 4
  br label %469

469:                                              ; preds = %467, %460
  %470 = phi i32 [ %468, %467 ], [ %466, %460 ]
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %469
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #15
  br label %473

473:                                              ; preds = %472, %469, %459, %365
  %474 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %366, i64 1
  %475 = icmp eq %"class.blink::PropertyHandle"* %474, %107
  br i1 %475, label %502, label %476

476:                                              ; preds = %473, %499
  %477 = phi %"class.blink::PropertyHandle"* [ %500, %499 ], [ %474, %473 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #15
  store i32 0, i32* %173, align 8, !alias.scope !46
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false) #15, !alias.scope !46
  %478 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %477, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9) #15
  %479 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %480 = icmp eq %"class.WTF::StringImpl"* %479, null
  br i1 %480, label %494, label %481

481:                                              ; preds = %476
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load atomic i32, i32* %482 monotonic, align 4
  %484 = and i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %479, i64 0, i32 0
  %487 = load i32, i32* %486, align 4
  br i1 %485, label %488, label %490

488:                                              ; preds = %481
  %489 = add i32 %487, -1
  store i32 %489, i32* %486, align 4
  br label %490

490:                                              ; preds = %488, %481
  %491 = phi i32 [ %489, %488 ], [ %487, %481 ]
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %494

493:                                              ; preds = %490
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %479) #15
  br label %494

494:                                              ; preds = %493, %490, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #15
  %495 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %477, i64 0, i32 0
  %496 = load i32, i32* %495, align 8
  %497 = icmp eq i32 %496, 1
  %498 = or i1 %478, %497
  br i1 %498, label %499, label %502

499:                                              ; preds = %494
  %500 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %477, i64 1
  %501 = icmp eq %"class.blink::PropertyHandle"* %500, %107
  br i1 %501, label %502, label %476

502:                                              ; preds = %494, %499, %473
  %503 = phi %"class.blink::PropertyHandle"* [ %107, %473 ], [ %477, %494 ], [ %107, %499 ]
  %504 = icmp eq %"class.blink::PropertyHandle"* %503, %151
  br i1 %504, label %327, label %365
}

declare void @_ZNK5blink8Keyframe31AddKeyframePropertiesToV8ObjectERNS_15V8ObjectBuilderEPNS_7ElementE(%"class.blink::Keyframe"*, %"class.blink::V8ObjectBuilder"* dereferenceable(16), %"class.blink::Element"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink14StringKeyframe16PropertyResolver8CssValueEv(%"class.blink::StringKeyframe::PropertyResolver"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  %5 = icmp eq %"class.blink::CSSValue"* %4, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 0
  %8 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSKeyframeShorthandValueEEEPvm(i64 16) #15
  %9 = bitcast i8* %8 to %"class.blink::CSSKeyframeShorthandValue"*
  %10 = load i32, i32* %7, align 4
  %11 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %11, align 8
  tail call void @_ZN5blink25CSSKeyframeShorthandValueC1ENS_13CSSPropertyIDEPNS_28ImmutableCSSPropertyValueSetE(%"class.blink::CSSKeyframeShorthandValue"* %9, i32 %10, %"class.blink::ImmutableCSSPropertyValueSet"* %12) #15
  %13 = getelementptr inbounds i8, i8* %8, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = ptrtoint i8* %8 to i64
  %18 = bitcast %"class.blink::Member.18"* %2 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  %21 = bitcast i8* %8 to %"class.blink::CSSValue"*
  br i1 %20, label %25, label %22

22:                                               ; preds = %6
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #15
  %24 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %3, align 8
  br label %25

25:                                               ; preds = %22, %6, %1
  %26 = phi %"class.blink::CSSValue"* [ %4, %1 ], [ %21, %6 ], [ %24, %22 ]
  ret %"class.blink::CSSValue"* %26
}

declare %"class.WTF::StringImpl"* @_ZN5blink21AnimationInputHelpers33PropertyHandleToKeyframeAttributeENS_14PropertyHandleE(%"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe26PresentationAttributeValueERKNS_11CSSPropertyE(%"class.blink::StringKeyframe"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %7, i32 %9) #15
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = icmp slt i32 %10, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %12, align 8
  br label %25

16:                                               ; preds = %2
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #15
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %17, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %20, i8** %12, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 72, %"class.logging::CheckOpResult"* nonnull %4) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %26 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %6, align 8
  %27 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %26, i64 0, i32 0
  %28 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %26, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %26, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %27, i64 4
  %35 = bitcast %"class.blink::CSSPropertyValueSet"* %34 to %"class.WTF::Vector"*
  %36 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %35, i32 %10) #15
  %37 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %36, i64 0, i32 1, i32 0, i32 0
  br label %43

38:                                               ; preds = %29, %25
  %39 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %27, i64 2
  %40 = bitcast %"class.blink::CSSPropertyValueSet"* %39 to %"class.blink::Member.18"*
  %41 = zext i32 %10 to i64
  %42 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %40, i64 %41, i32 0, i32 0
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %"class.blink::CSSValue"** [ %42, %38 ], [ %37, %33 ]
  %45 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %44, align 8
  ret %"class.blink::CSSValue"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe5TraceEPNS_7VisitorE(%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #15
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #15
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::Member.26"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #15
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 3
  %31 = bitcast %"class.blink::Member.26"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #15
  br label %40

40:                                               ; preds = %29, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe"* @_ZNK5blink14StringKeyframe5CloneEv(%"class.blink::StringKeyframe"*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64 112) #15
  %3 = bitcast i8* %2 to %"class.blink::StringKeyframe"*
  tail call void @_ZN5blink14StringKeyframeC2ERKS0_(%"class.blink::StringKeyframe"* %3, %"class.blink::StringKeyframe"* dereferenceable(112) %0) #15
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = bitcast i8* %2 to %"class.blink::Keyframe"*
  ret %"class.blink::Keyframe"* %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14StringKeyframe35SetLogicalPropertyResolutionContextENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe"* nocapture, i8 zeroext, i8 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 2
  %10 = icmp eq i8 %9, %2
  br i1 %10, label %19, label %11

11:                                               ; preds = %7, %3
  store i8 %1, i8* %4, align 1
  %12 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 7
  store i8 %2, i8* %12, align 2
  %13 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::Member.26"* %17 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  br label %19

19:                                               ; preds = %7, %11, %16
  %20 = phi i1 [ true, %16 ], [ false, %11 ], [ false, %7 ]
  ret i1 %20
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKNS_16CSSPropertyValueEPS1_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValue"* dereferenceable(24), %"class.blink::CSSPropertyValue"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink14StringKeyframe16PropertyResolver16HasLowerPriorityEPS1_S2_(%"class.blink::StringKeyframe::PropertyResolver"* nocapture readonly, %"class.blink::StringKeyframe::PropertyResolver"* nocapture readonly) #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %3, align 8
  %5 = icmp ne %"class.blink::ImmutableCSSPropertyValueSet"* %4, null
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %6, align 8
  %8 = icmp ne %"class.blink::ImmutableCSSPropertyValueSet"* %7, null
  %9 = xor i1 %5, %8
  br i1 %9, label %33, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = xor i1 %13, %16
  %18 = xor i1 %5, true
  %19 = or i1 %17, %18
  %20 = and i1 %13, %17
  br i1 %19, label %33, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %4, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 268435455
  %25 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %7, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %7, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %21, %26
  %31 = phi i32 [ %29, %26 ], [ 1, %21 ]
  %32 = icmp ugt i32 %24, %31
  br label %33

33:                                               ; preds = %10, %2, %30
  %34 = phi i1 [ %32, %30 ], [ %5, %2 ], [ %20, %10 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe16PropertyResolver8AppendToEPNS_26MutableCSSPropertyValueSetENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe::PropertyResolver"* nocapture readonly, %"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %5, align 8
  %7 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %6, null
  br i1 %7, label %77, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %75, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %6, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 268435455
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %90, label %17

17:                                               ; preds = %12, %56
  %18 = phi i32 [ %71, %56 ], [ %14, %12 ]
  %19 = phi i64 [ %68, %56 ], [ 0, %12 ]
  %20 = phi %"class.blink::ImmutableCSSPropertyValueSet"* [ %69, %56 ], [ %6, %12 ]
  %21 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %20, null
  %22 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 0, i32 0, i32 0
  %23 = icmp sgt i32 %18, -1
  %24 = or i1 %21, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 2, i32 0
  %27 = bitcast %"class.blink::CSSPropertyValueSet"* %26 to %"class.WTF::Vector"*
  %28 = trunc i64 %19 to i32
  %29 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %27, i32 %28) #15
  %30 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %29, i64 0, i32 0
  %31 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %30) #15
  br label %41

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 1, i32 0
  %34 = bitcast %"class.blink::CSSPropertyValueSet"* %33 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %35 = and i32 %18, 268435455
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %34, i64 %36
  %38 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %37 to %"struct.blink::CSSPropertyValueMetadata"*
  %39 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %38, i64 %19
  %40 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %39) #15
  br i1 %21, label %51, label %41

41:                                               ; preds = %25, %32
  %42 = phi i32 [ %31, %25 ], [ %40, %32 ]
  %43 = load i32, i32* %22, align 4
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 2, i32 0
  %47 = bitcast %"class.blink::CSSPropertyValueSet"* %46 to %"class.WTF::Vector"*
  %48 = trunc i64 %19 to i32
  %49 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %47, i32 %48) #15
  %50 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %49, i64 0, i32 1, i32 0, i32 0
  br label %56

51:                                               ; preds = %41, %32
  %52 = phi i32 [ %42, %41 ], [ %40, %32 ]
  %53 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 1, i32 0
  %54 = bitcast %"class.blink::CSSPropertyValueSet"* %53 to %"class.blink::Member.18"*
  %55 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %54, i64 %19, i32 0, i32 0
  br label %56

56:                                               ; preds = %45, %51
  %57 = phi i32 [ %52, %51 ], [ %42, %45 ]
  %58 = phi %"class.blink::CSSValue"** [ %55, %51 ], [ %50, %45 ]
  %59 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %58, align 8
  %60 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %57) #15
  %61 = bitcast %"class.blink::CSSProperty"* %60 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %62 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %61, align 8
  %63 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %62, i64 11
  %64 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %63, align 8
  %65 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %64(%"class.blink::CSSProperty"* %60, i8 zeroext %2, i8 zeroext %3) #15
  %66 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %1, i32 %67, %"class.blink::CSSValue"* dereferenceable(3) %59, i1 zeroext false) #15
  %68 = add nuw nsw i64 %19, 1
  %69 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %5, align 8
  %70 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %69, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 268435455
  %73 = zext i32 %72 to i64
  %74 = icmp ult i64 %68, %73
  br i1 %74, label %17, label %90

75:                                               ; preds = %8
  %76 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %6, i64 0, i32 0
  tail call void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"* %1, %"class.blink::CSSPropertyValueSet"* %76) #15
  br label %90

77:                                               ; preds = %4
  %78 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %80, align 8
  %82 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %79) #15
  %83 = bitcast %"class.blink::CSSProperty"* %82 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %84 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %83, align 8
  %85 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %84, i64 11
  %86 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %85, align 8
  %87 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %86(%"class.blink::CSSProperty"* %82, i8 zeroext %2, i8 zeroext %3) #15
  %88 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %1, i32 %89, %"class.blink::CSSValue"* dereferenceable(3) %81, i1 zeroext false) #15
  br label %90

90:                                               ; preds = %56, %12, %75, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink14StringKeyframe30CreatePropertySpecificKeyframeERKNS_14PropertyHandleENS_11EffectModel18CompositeOperationEd(%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24), i32, double) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.blink::QualifiedName"*, align 8
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::TimingFunction"*, align 8
  %12 = alloca %"class.WTF::String", align 8
  store i32 %2, i32* %8, align 4
  store double %3, double* %9, align 8
  %13 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = select i1 %16, i32* %8, i32* %17
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %10, align 4
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = or i32 %21, 1
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %24, label %51

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %26 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %25, align 8
  %27 = tail call dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"* %0, %"class.blink::PropertyHandle"* dereferenceable(24) %1)
  %28 = ptrtoint %"class.blink::CSSValue"* %27 to i64
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #15
  %30 = icmp eq %"class.blink::TimingFunction"* %26, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  %38 = load i32, i32* %10, align 4
  br label %39

39:                                               ; preds = %24, %31, %35
  %40 = phi i32 [ %19, %24 ], [ %19, %31 ], [ %38, %35 ]
  %41 = bitcast i8* %29 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %41, double %3, %"class.blink::TimingFunction"* %26, i32 %40) #15
  %42 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27CSSPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %29, i64 32
  %44 = bitcast i8* %43 to i64*
  store i64 %28, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %29, i64 40
  %46 = bitcast i8* %45 to %"class.blink::CompositorKeyframeValue"**
  store %"class.blink::CompositorKeyframeValue"* null, %"class.blink::CompositorKeyframeValue"** %46, align 8
  %47 = getelementptr inbounds i8, i8* %29, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  br label %115

51:                                               ; preds = %4
  %52 = icmp eq i32 %21, 4
  br i1 %52, label %53, label %82

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %55 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1, i32 0
  %57 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %56, align 8
  %58 = tail call dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe26PresentationAttributeValueERKNS_11CSSPropertyE(%"class.blink::StringKeyframe"* %0, %"class.blink::CSSProperty"* dereferenceable(24) %57)
  %59 = ptrtoint %"class.blink::CSSValue"* %58 to i64
  %60 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #15
  %61 = icmp eq %"class.blink::TimingFunction"* %55, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  %69 = load i32, i32* %10, align 4
  br label %70

70:                                               ; preds = %53, %62, %66
  %71 = phi i32 [ %19, %53 ], [ %19, %62 ], [ %69, %66 ]
  %72 = bitcast i8* %60 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %72, double %3, %"class.blink::TimingFunction"* %55, i32 %71) #15
  %73 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27CSSPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds i8, i8* %60, i64 32
  %75 = bitcast i8* %74 to i64*
  store i64 %59, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %60, i64 40
  %77 = bitcast i8* %76 to %"class.blink::CompositorKeyframeValue"**
  store %"class.blink::CompositorKeyframeValue"* null, %"class.blink::CompositorKeyframeValue"** %77, align 8
  %78 = getelementptr inbounds i8, i8* %60, i64 -4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = or i16 %80, 1
  store atomic i16 %81, i16* %79 release, align 2
  br label %115

82:                                               ; preds = %51
  %83 = bitcast %"class.blink::TimingFunction"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15
  %84 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %85 = bitcast %"class.blink::TimingFunction"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::TimingFunction"** %11 to i64*
  store i64 %86, i64* %87, align 8
  %88 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #15
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1
  %90 = bitcast %union.anon.8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4
  %93 = bitcast %"class.blink::QualifiedName"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #15
  %94 = bitcast %"class.blink::QualifiedName"** %7 to i64*
  store i64 %91, i64* %94, align 8
  %95 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIPKN5blink13QualifiedNameENS_6StringENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS8_IS5_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.33"* %92, %"class.blink::QualifiedName"** nonnull dereferenceable(8) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #15
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %96, align 8
  %97 = call %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdPNS_14TimingFunctionEN3WTF6StringERNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* nonnull dereferenceable(8) %9, %"class.blink::TimingFunction"** nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, i32* nonnull dereferenceable(4) %10) #15
  %98 = bitcast %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %97 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %82
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #15
  br label %114

114:                                              ; preds = %82, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15
  br label %115

115:                                              ; preds = %114, %70, %39
  %116 = phi %"class.blink::Keyframe::PropertySpecificKeyframe"* [ %41, %39 ], [ %72, %70 ], [ %98, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(3) %"class.blink::CSSValue"* @_ZNK5blink14StringKeyframe16CssPropertyValueERKNS_14PropertyHandleE(%"class.blink::StringKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  tail call void @_ZNK5blink14StringKeyframe20EnsureCssPropertyMapEv(%"class.blink::StringKeyframe"* %0)
  %6 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 3
  %9 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  br i1 %8, label %11, label %34

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %11, %15, %30
  %33 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %10, %"class.WTF::StringImpl"* %13) #15
  br label %40

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1, i32 0
  %36 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = tail call i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"* %10, i32 %38) #15
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i32 [ %33, %32 ], [ %39, %34 ]
  %42 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %43, align 8
  %44 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp slt i32 %41, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %43, align 8
  br label %56

47:                                               ; preds = %40
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %41) #15
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %48, i8* %49) #15
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %43, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 64, %"class.logging::CheckOpResult"* nonnull %4) #15
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  br label %56

56:                                               ; preds = %46, %47, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  %57 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %9, align 8
  %58 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %57, i64 0, i32 0
  %59 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %57, null
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %57, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %58, i64 4
  %66 = bitcast %"class.blink::CSSPropertyValueSet"* %65 to %"class.WTF::Vector"*
  %67 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %66, i32 %41) #15
  %68 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %67, i64 0, i32 1, i32 0, i32 0
  br label %74

69:                                               ; preds = %60, %56
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %58, i64 2
  %71 = bitcast %"class.blink::CSSPropertyValueSet"* %70 to %"class.blink::Member.18"*
  %72 = zext i32 %41 to i64
  %73 = getelementptr inbounds %"class.blink::Member.18", %"class.blink::Member.18"* %71, i64 %72, i32 0, i32 0
  br label %74

74:                                               ; preds = %64, %69
  %75 = phi %"class.blink::CSSValue"** [ %73, %69 ], [ %68, %64 ]
  %76 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %75, align 8
  ret %"class.blink::CSSValue"* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* nocapture, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = tail call %"class.blink::CompositorKeyframeValue"* @_ZN5blink13StyleResolver37CreateCompositorKeyframeValueSnapshotERNS_7ElementERKNS_13ComputedStyleEPS4_RKNS_14PropertyHandleEPKNS_8CSSValueEd(%"class.blink::Element"* dereferenceable(104) %2, %"class.blink::ComputedStyle"* %3, %"class.blink::ComputedStyle"* %4, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.blink::CSSValue"* %7, double %9) #15
  %11 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 2
  %12 = ptrtoint %"class.blink::CompositorKeyframeValue"* %10 to i64
  %13 = bitcast %"class.blink::Member.730"* %11 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::CompositorKeyframeValue"* %10 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #15
  br label %19

19:                                               ; preds = %5, %16
  ret i1 true
}

declare %"class.blink::CompositorKeyframeValue"* @_ZN5blink13StyleResolver37CreateCompositorKeyframeValueSnapshotERNS_7ElementERKNS_13ComputedStyleEPS4_RKNS_14PropertyHandleEPKNS_8CSSValueEd(%"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::CSSValue"*, double) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe8IsRevertEv(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %4 = icmp eq %"class.blink::CSSValue"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %3, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 35
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* nocapture readnone, double, %"class.blink::TimingFunction"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #15
  %5 = bitcast i8* %4 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  tail call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %5, double %1, %"class.blink::TimingFunction"* %2, i32 1) #15
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27CSSPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 32
  %8 = getelementptr inbounds i8, i8* %4, i64 -4
  %9 = bitcast i8* %8 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe5TraceEPNS_7VisitorE(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.18"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::Member.730"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8Keyframe24PropertySpecificKeyframe5TraceEPNS_7VisitorE(%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe15CloneWithOffsetEd(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*, double) unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca %"class.blink::CSSValue"*, align 8
  store double %1, double* %3, align 8
  %5 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2
  %6 = bitcast %"class.blink::CSSValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.blink::CSSValue"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::CSSValue"** %4 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 3
  %12 = call %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27CSSPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEEPKNS_8CSSValueERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* nonnull dereferenceable(8) %3, %class.scoped_refptr* dereferenceable(8) %5, %"class.blink::CSSValue"** nonnull dereferenceable(8) %4, i32* dereferenceable(4) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %13 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %12, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.730"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.730"* %14 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = inttoptr i64 %16 to i8*
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #15
  br label %23

23:                                               ; preds = %2, %20
  %24 = bitcast %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %12 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe15CloneWithOffsetEd(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*, double) unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  store double %1, double* %3, align 8
  %4 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2
  %5 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 3
  %7 = call %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKN3WTF6StringERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* nonnull dereferenceable(8) %3, %class.scoped_refptr* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, i32* dereferenceable(4) %6) #15
  %8 = bitcast %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %7 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Keyframe::PropertySpecificKeyframe"* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe15NeutralKeyframeEd13scoped_refptrINS_14TimingFunctionEE(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* nocapture readnone, double, %"class.blink::TimingFunction"*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 40) #15
  %5 = bitcast i8* %4 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  tail call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %5, double %1, %"class.blink::TimingFunction"* %2, i32 1) #15
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 32
  %8 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  ret %"class.blink::Keyframe::PropertySpecificKeyframe"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14StringKeyframe16PropertyResolverC2ENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::StringKeyframe::PropertyResolver"* nocapture, i32, %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::ImmutableCSSPropertyValueSet"* null, %"class.blink::ImmutableCSSPropertyValueSet"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe16PropertyResolverC2ERKNS_11CSSPropertyEPKNS_26MutableCSSPropertyValueSetEb(%"class.blink::StringKeyframe::PropertyResolver"* nocapture, %"class.blink::CSSProperty"* nocapture readonly dereferenceable(24), %"class.blink::MutableCSSPropertyValueSet"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::Member.18"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i8 %5, i8* %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %2, i64 0, i32 0
  br i1 %15, label %17, label %26

17:                                               ; preds = %4
  %18 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %16, i32 %8) #15
  %19 = ptrtoint %"class.blink::CSSValue"* %18 to i64
  %20 = bitcast %"class.blink::Member.18"* %9 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %18, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #15
  br label %36

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3
  %28 = tail call %"class.blink::ImmutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet21ImmutableCopyIfNeededEv(%"class.blink::CSSPropertyValueSet"* %16) #15
  %29 = ptrtoint %"class.blink::ImmutableCSSPropertyValueSet"* %28 to i64
  %30 = bitcast %"class.blink::Member.22"* %27 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %28 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #15
  br label %36

36:                                               ; preds = %33, %26, %23, %17
  ret void
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare %"class.blink::ImmutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet21ImmutableCopyIfNeededEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14StringKeyframe16PropertyResolver11SetPropertyEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueENS_13TextDirectionENS_11WritingModeE(%"class.blink::StringKeyframe::PropertyResolver"* nocapture readnone, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i8 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %2) #15
  %8 = bitcast %"class.blink::CSSProperty"* %7 to %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)***
  %9 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)**, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %9, i64 11
  %11 = load %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)*, %"class.blink::CSSProperty"* (%"class.blink::CSSProperty"*, i8, i8)** %10, align 8
  %12 = tail call dereferenceable(24) %"class.blink::CSSProperty"* %11(%"class.blink::CSSProperty"* %7, i8 zeroext %4, i8 zeroext %5) #15
  %13 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %1, i32 %14, %"class.blink::CSSValue"* dereferenceable(3) %3, i1 zeroext false) #15
  ret void
}

declare void @_ZN5blink26MutableCSSPropertyValueSet26MergeAndOverrideOnConflictEPKNS_19CSSPropertyValueSetE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14StringKeyframe16PropertyResolver5TraceEPNS_7VisitorE(%"class.blink::StringKeyframe::PropertyResolver"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.18"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::StringKeyframe::PropertyResolver", %"class.blink::StringKeyframe::PropertyResolver"* %0, i64 0, i32 3
  %16 = bitcast %"class.blink::Member.22"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28ImmutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframeD2Ev(%"class.blink::StringKeyframe"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14StringKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.37"* %4, null
  br i1 %5, label %39, label %6, !prof !30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %34, %10
  %13 = phi i64 [ 0, %10 ], [ %35, %34 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %13, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %14, align 8
  %16 = icmp eq %"class.blink::QualifiedName"* %15, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  br i1 %16, label %34, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %13, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %34

34:                                               ; preds = %33, %30, %17, %12
  %35 = add nuw nsw i64 %13, 1
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %37, label %12

37:                                               ; preds = %34, %6
  %38 = bitcast %"struct.WTF::KeyValuePair.37"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #15
  store %"struct.WTF::KeyValuePair.37"* null, %"struct.WTF::KeyValuePair.37"** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %40 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %41 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %40, align 8
  %42 = icmp eq %"class.blink::TimingFunction"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.blink::TimingFunction"*
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %49 to void (%"class.blink::TimingFunction"*)***
  %52 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %52, i64 1
  %54 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %53, align 8
  tail call void %54(%"class.blink::TimingFunction"* nonnull %50) #15
  br label %55

55:                                               ; preds = %39, %43, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframeD0Ev(%"class.blink::StringKeyframe"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14StringKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.37"* %4, null
  br i1 %5, label %39, label %6, !prof !30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %34, %10
  %13 = phi i64 [ 0, %10 ], [ %35, %34 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %13, i32 0
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %14, align 8
  %16 = icmp eq %"class.blink::QualifiedName"* %15, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  br i1 %16, label %34, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %13, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %34

34:                                               ; preds = %33, %30, %17, %12
  %35 = add nuw nsw i64 %13, 1
  %36 = icmp eq i64 %35, %11
  br i1 %36, label %37, label %12

37:                                               ; preds = %34, %6
  %38 = bitcast %"struct.WTF::KeyValuePair.37"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #15
  store %"struct.WTF::KeyValuePair.37"* null, %"struct.WTF::KeyValuePair.37"** %3, align 8
  br label %39

39:                                               ; preds = %37, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink8KeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %40 = getelementptr inbounds %"class.blink::StringKeyframe", %"class.blink::StringKeyframe"* %0, i64 0, i32 0, i32 3, i32 0
  %41 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %40, align 8
  %42 = icmp eq %"class.blink::TimingFunction"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %41, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe"* %49 to %"class.blink::TimingFunction"*
  %51 = bitcast %"class.base::RefCountedThreadSafe"* %49 to void (%"class.blink::TimingFunction"*)***
  %52 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %52, i64 1
  %54 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %53, align 8
  tail call void %54(%"class.blink::TimingFunction"* nonnull %50) #15
  br label %55

55:                                               ; preds = %39, %43, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe16IsStringKeyframeEv(%"class.blink::StringKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe20IsTransitionKeyframeEv(%"class.blink::Keyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Keyframe24PropertySpecificKeyframeD2Ev(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #15
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframe27CSSPropertySpecificKeyframeD0Ev(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #15
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe9IsNeutralEv(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %4 = icmp eq %"class.blink::CSSValue"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CompositorKeyframeValue"* @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe26GetCompositorKeyframeValueEv(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe", %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CompositorKeyframeValue"*, %"class.blink::CompositorKeyframeValue"** %2, align 8
  ret %"class.blink::CompositorKeyframeValue"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe27CSSPropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv(%"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe36IsTransitionPropertySpecificKeyframeEv(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::Interpolation"* @_ZNK5blink8Keyframe24PropertySpecificKeyframe19CreateInterpolationERKNS_14PropertyHandleERKS1_(%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD2Ev(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %20 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2, i32 0
  %21 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %20, align 8
  %22 = icmp eq %"class.blink::TimingFunction"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.blink::TimingFunction"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.blink::TimingFunction"*)***
  %32 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %32, i64 1
  %34 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %33, align 8
  tail call void %34(%"class.blink::TimingFunction"* nonnull %30) #15
  br label %35

35:                                               ; preds = %19, %23, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StringKeyframe27SVGPropertySpecificKeyframeD0Ev(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %18, %15, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink8Keyframe24PropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %20 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 0, i32 2, i32 0
  %21 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %20, align 8
  %22 = icmp eq %"class.blink::TimingFunction"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %21, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.blink::TimingFunction"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.blink::TimingFunction"*)***
  %32 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %32, i64 1
  %34 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %33, align 8
  tail call void %34(%"class.blink::TimingFunction"* nonnull %30) #15
  br label %35

35:                                               ; preds = %19, %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe9IsNeutralEv(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe", %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe8IsRevertEv(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe31PopulateCompositorKeyframeValueERKNS_14PropertyHandleERNS_7ElementERKNS_13ComputedStyleEPS8_(%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::Element"* dereferenceable(104), %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CompositorKeyframeValue"* @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe26GetCompositorKeyframeValueEv(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CompositorKeyframeValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Keyframe24PropertySpecificKeyframe29IsCSSPropertySpecificKeyframeEv(%"class.blink::Keyframe::PropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14StringKeyframe27SVGPropertySpecificKeyframe29IsSVGPropertySpecificKeyframeEv(%"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !51

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #15
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #15
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #15
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEEC2ERKSJ_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %6 = bitcast %"class.WTF::HashTable"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  %7 = load i32, i32* %5, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %14
  br label %64

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %0, i32 %7)
  %17 = load i32, i32* %5, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %23
  br i1 %18, label %64, label %25

25:                                               ; preds = %16
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %64, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %29 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %31 = bitcast %union.anon.8* %30 to i8*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %57, %27
  %34 = phi %"struct.WTF::KeyValuePair"* [ %20, %27 ], [ %58, %57 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  store i32 0, i32* %29, align 8, !alias.scope !52
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #15, !alias.scope !52
  %36 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #15
  br label %52

52:                                               ; preds = %51, %48, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  %56 = or i1 %36, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %58, %24
  br i1 %59, label %60, label %33

60:                                               ; preds = %57, %52
  %61 = phi %"struct.WTF::KeyValuePair"* [ %24, %57 ], [ %34, %52 ]
  %62 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %63 = load i32, i32* %21, align 8
  br label %64

64:                                               ; preds = %9, %60, %16, %25
  %65 = phi %"struct.WTF::KeyValuePair"* [ %24, %16 ], [ %24, %25 ], [ %24, %60 ], [ %15, %9 ]
  %66 = phi i32 [ %22, %16 ], [ 0, %25 ], [ %63, %60 ], [ %13, %9 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %20, %16 ], [ %20, %25 ], [ %62, %60 ], [ %11, %9 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %24, %16 ], [ %20, %25 ], [ %61, %60 ], [ %15, %9 ]
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 %69
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %68, %70
  br i1 %71, label %78, label %72

72:                                               ; preds = %64
  %73 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %74 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %76 = bitcast %union.anon.8* %75 to i8*
  %77 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %79

78:                                               ; preds = %112, %64
  ret void

79:                                               ; preds = %72, %112
  %80 = phi %"struct.WTF::KeyValuePair"* [ %68, %72 ], [ %113, %112 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_RKS8_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %0, %"class.blink::PropertyHandle"* dereferenceable(24) %81, %"struct.WTF::KeyValuePair"* dereferenceable(32) %80) #15
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, %65
  br i1 %84, label %112, label %85

85:                                               ; preds = %79, %109
  %86 = phi %"struct.WTF::KeyValuePair"* [ %110, %109 ], [ %83, %79 ]
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #15
  store i32 0, i32* %74, align 8, !alias.scope !57
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #15, !alias.scope !57
  %88 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %87, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #15
  br label %104

104:                                              ; preds = %103, %100, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #15
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 1
  %108 = or i1 %88, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 1
  %111 = icmp eq %"struct.WTF::KeyValuePair"* %110, %65
  br i1 %111, label %112, label %85

112:                                              ; preds = %104, %109, %79
  %113 = phi %"struct.WTF::KeyValuePair"* [ %65, %79 ], [ %86, %104 ], [ %65, %109 ]
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %70
  br i1 %114, label %78, label %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #15
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %32 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"* %0, i32 %18, %"struct.WTF::KeyValuePair"* null, i8* nonnull dereferenceable(1) %3) #15
  %33 = load i8, i8* %3, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #15
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"struct.WTF::KeyValuePair"*
  %39 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %38, i32 %18, %"struct.WTF::KeyValuePair"* null) #15
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i8* [ %12, %11 ], [ %9, %4 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %13, %20
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %31

31:                                               ; preds = %24, %28
  %32 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, null
  br i1 %34, label %150, label %35

35:                                               ; preds = %31
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 5
  %38 = bitcast %"struct.WTF::KeyValuePair"* %33 to i8*
  %39 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %38, i64 %37) #15
  br i1 %39, label %40, label %150

40:                                               ; preds = %35
  store i8 1, i8* %3, align 1
  %41 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %44 = zext i32 %42 to i64
  %45 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #15
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"struct.WTF::KeyValuePair"*
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %52 = bitcast %union.anon.8* %51 to i8*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %65

54:                                               ; preds = %147, %40
  %55 = phi %"struct.WTF::KeyValuePair"* [ null, %40 ], [ %72, %147 ]
  %56 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %45, %"class.blink::HeapHashTableBacking"** %56, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %45, i64 0, i32 0
  %61 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #15
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 %37, i1 false)
  %64 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %1, %"struct.WTF::KeyValuePair"* %55)
  br label %150

65:                                               ; preds = %147, %48
  %66 = phi i64 [ 0, %48 ], [ %148, %147 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %48 ], [ %72, %147 ]
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %66
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %2
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66
  %72 = select i1 %70, %"struct.WTF::KeyValuePair"* %71, %"struct.WTF::KeyValuePair"* %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #15
  store i32 0, i32* %50, align 8, !alias.scope !62
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #15, !alias.scope !62
  %74 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %73, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #15
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #15
  br label %90

90:                                               ; preds = %65, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #15
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  %94 = or i1 %74, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = bitcast %"struct.WTF::KeyValuePair"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false)
  br label %147

97:                                               ; preds = %90
  %98 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #15
  br label %116

116:                                              ; preds = %97, %112, %115
  %117 = bitcast %"struct.WTF::KeyValuePair"* %71 to i8*
  %118 = bitcast %"struct.WTF::KeyValuePair"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #15
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66, i32 0, i32 2
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::AtomicString"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.WTF::AtomicString"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 %66, i32 1
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %98, i64 %66, i32 1
  %127 = bitcast %"class.blink::Member"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %116
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #15
  br label %147

147:                                              ; preds = %146, %143, %116, %95
  %148 = add nuw nsw i64 %66, 1
  %149 = icmp eq i64 %148, %44
  br i1 %149, label %54, label %65

150:                                              ; preds = %35, %31, %62
  %151 = phi %"struct.WTF::KeyValuePair"* [ %64, %62 ], [ null, %31 ], [ null, %35 ]
  ret %"struct.WTF::KeyValuePair"* %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %30

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.8* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %62

26:                                               ; preds = %130
  %27 = bitcast %"class.WTF::HashTable"* %6 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = ptrtoint i8* %28 to i64
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64 [ %17, %16 ], [ %29, %26 ]
  %32 = phi i32 [ 0, %16 ], [ %132, %26 ]
  %33 = phi i8* [ %18, %16 ], [ %28, %26 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %131, %26 ]
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %43

39:                                               ; preds = %30
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %33) #15
  %40 = load i32, i32* %13, align 8
  %41 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i64* [ %38, %37 ], [ %41, %39 ]
  %45 = phi i64 [ %31, %37 ], [ %42, %39 ]
  %46 = phi i32 [ %32, %37 ], [ %40, %39 ]
  %47 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %48 = load i64, i64* %47, align 8
  store atomic i64 %45, i64* %47 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = inttoptr i64 %45 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #15
  br label %54

54:                                               ; preds = %43, %51
  store i32 %2, i32* %13, align 8
  store i64 %48, i64* %44, align 8
  store i32 %46, i32* %9, align 8
  %55 = icmp eq i64 %48, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %48 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j(%"struct.WTF::KeyValuePair"* nonnull %57, i32 %46) #15
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %58

58:                                               ; preds = %54, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret %"struct.WTF::KeyValuePair"* %34

62:                                               ; preds = %19, %130
  %63 = phi %"struct.WTF::KeyValuePair"* [ null, %19 ], [ %131, %130 ]
  %64 = phi i32 [ 0, %19 ], [ %132, %130 ]
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  store i32 0, i32* %22, align 8, !alias.scope !67
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #15, !alias.scope !67
  %69 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %68, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #15
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #15
  br label %85

85:                                               ; preds = %62, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %69, %88
  br i1 %89, label %130, label %90

90:                                               ; preds = %85
  %91 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %92, i64 0, i32 0
  %94 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %93) #15
  %95 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %94, 0
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %112

112:                                              ; preds = %90, %108, %111
  %113 = bitcast %"struct.WTF::KeyValuePair"* %95 to i8*
  %114 = bitcast %"struct.WTF::KeyValuePair"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #15
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0, i32 2
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66, i32 0, i32 2
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::AtomicString"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::AtomicString"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %66, i32 1
  %123 = bitcast %"class.blink::Member"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %66
  %128 = icmp eq %"struct.WTF::KeyValuePair"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair"* %95, %"struct.WTF::KeyValuePair"* %63
  br label %130

130:                                              ; preds = %85, %112
  %131 = phi %"struct.WTF::KeyValuePair"* [ %63, %85 ], [ %129, %112 ]
  %132 = add i32 %64, 1
  %133 = load i32, i32* %13, align 8
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %26, label %62
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.6, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([494 x i8], [494 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #15
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapHashTableBacking"*
  tail call void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.11"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_IS9_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.WTF::internal::ConcurrentBucket", align 8
  %6 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %7 = getelementptr inbounds i8, i8* %1, i64 -2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = lshr i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %20, !prof !3

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %1, i64 -8
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, -131072
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 4144
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 16
  br label %23

20:                                               ; preds = %2
  %21 = zext i16 %10 to i64
  %22 = shl nuw nsw i64 %21, 3
  br label %23

23:                                               ; preds = %12, %20
  %24 = phi i64 [ %19, %12 ], [ %22, %20 ]
  %25 = add i64 %24, -8
  %26 = lshr i64 %25, 5
  %27 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %28 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %28, i64 3
  %30 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Visitor"* %0) #15
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %37 = bitcast %union.anon.8* %36 to i8*
  %38 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 0
  %41 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 8
  %42 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 16
  %43 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 1
  %44 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i64*
  %45 = bitcast i8* %41 to i64*
  %46 = bitcast i8* %42 to i64*
  %47 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to %"class.blink::PropertyHandle"*
  %48 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %49 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %51 = bitcast %union.anon.8* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i32*
  %54 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 24
  %55 = bitcast i8* %54 to i64**
  br label %57

56:                                               ; preds = %134, %23
  ret void

57:                                               ; preds = %134, %33
  %58 = phi i64 [ 0, %33 ], [ %135, %134 ]
  br i1 %31, label %59, label %100

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #15
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 1
  store %"class.blink::Member"* %61, %"class.blink::Member"** %43, align 8
  %62 = bitcast %"struct.WTF::KeyValuePair"* %60 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  store i64 %63, i64* %44, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 0, i32 1
  %65 = bitcast %union.anon.8* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  store i64 %66, i64* %45, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 0, i32 2
  %68 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  store i64 %69, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  store i32 0, i32* %49, align 8, !alias.scope !72
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #15, !alias.scope !72
  %70 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* nonnull %47, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #15
  br label %86

86:                                               ; preds = %59, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  %87 = load i32, i32* %53, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %70, %88
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  %91 = load i64*, i64** %55, align 8
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = inttoptr i64 %92 to i8*
  %96 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %97 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, i64 5
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %97, align 8
  call void %98(%"class.blink::Visitor"* %0, i8* nonnull %95, i8* nonnull %95, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  br label %99

99:                                               ; preds = %94, %90, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #15
  br label %134

100:                                              ; preds = %57
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  store i32 0, i32* %35, align 8, !alias.scope !77
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #15, !alias.scope !77
  %103 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %102, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #15
  br label %119

119:                                              ; preds = %100, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 1
  %123 = or i1 %103, %122
  br i1 %123, label %134, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %58, i32 1
  %126 = bitcast %"class.blink::Member"* %125 to i64*
  %127 = load atomic i64, i64* %126 monotonic, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = inttoptr i64 %127 to i8*
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  call void %133(%"class.blink::Visitor"* %0, i8* nonnull %130, i8* nonnull %130, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  br label %134

134:                                              ; preds = %129, %124, %99, %119
  %135 = add nuw nsw i64 %58, 1
  %136 = icmp eq i64 %135, %26
  br i1 %136, label %56, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %7, %2
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %0, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28ImmutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv) #15
  br label %25

25:                                               ; preds = %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSF_IS8_EEEESG_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %0, i64 -8, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 6
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %16, !prof !3

9:                                                ; preds = %1
  %10 = ptrtoint i8* %3 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4144
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 16
  br label %19

16:                                               ; preds = %1
  %17 = zext i16 %7 to i64
  %18 = shl nuw nsw i64 %17, 3
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi i64 [ %15, %9 ], [ %18, %16 ]
  %21 = add i64 %20, -8
  %22 = lshr i64 %21, 5
  %23 = bitcast %"class.blink::HeapHashTableBacking"* %0 to %"struct.WTF::KeyValuePair"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %29 = bitcast %union.anon.8* %28 to i8*
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %32

31:                                               ; preds = %75, %19
  ret void

32:                                               ; preds = %25, %75
  %33 = phi i64 [ 0, %25 ], [ %77, %75 ]
  %34 = phi i32 [ 0, %25 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  store i32 0, i32* %27, align 8, !alias.scope !82
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #15, !alias.scope !82
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %36, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #15
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %32, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  %57 = or i1 %37, %56
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33, i32 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #15
  br label %75

75:                                               ; preds = %74, %71, %58, %53
  %76 = add i32 %34, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %22, %77
  br i1 %78, label %32, label %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISC_SH_SI_EES2_EENSt3__14pairIPS8_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.8* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %61, %2
  %32 = phi i64 [ 0, %2 ], [ %65, %61 ]
  %33 = phi i64 [ 0, %2 ], [ %67, %61 ]
  %34 = phi i64 [ %12, %2 ], [ %69, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %34
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  store i32 0, i32* %14, align 8, !alias.scope !87
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #15, !alias.scope !87
  %38 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #15
  br label %54

54:                                               ; preds = %31, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  br i1 %38, label %55, label %59

55:                                               ; preds = %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %57 = icmp eq i64 %32, 0
  %58 = select i1 %57, i64 %56, i64 %32
  br label %72

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  %65 = select i1 %64, i64 %36, i64 %32
  %66 = icmp eq i64 %33, 0
  %67 = select i1 %66, i64 %30, i64 %33
  %68 = add i64 %67, %34
  %69 = and i64 %68, %9
  br label %31

70:                                               ; preds = %59
  %71 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  br label %72

72:                                               ; preds = %70, %55
  %73 = phi i64 [ %58, %55 ], [ %71, %70 ]
  %74 = phi i8 [ 0, %55 ], [ 1, %70 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS8_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %9 = bitcast %union.anon.8* %8 to i8*
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = zext i32 %1 to i64
  br label %14

12:                                               ; preds = %61, %2
  %13 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %13) #15
  ret void

14:                                               ; preds = %61, %5
  %15 = phi i64 [ 0, %5 ], [ %62, %61 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  store i32 0, i32* %7, align 8, !alias.scope !92
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #15, !alias.scope !92
  %18 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %17, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #15
  br label %34

34:                                               ; preds = %14, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  %38 = or i1 %18, %37
  br i1 %38, label %61, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %39, %52, %55
  store i32 1, i32* %35, align 8, !alias.scope !97
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 0, i32 1
  %58 = bitcast %union.anon.8* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #15, !alias.scope !97
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %15, i32 1
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %34, %56
  %62 = add nuw nsw i64 %15, 1
  %63 = icmp eq i64 %62, %11
  br i1 %63, label %12, label %14
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorISC_SH_SI_EERKS2_RKS8_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"struct.WTF::KeyValuePair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.8* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  store i32 0, i32* %21, align 8, !alias.scope !100
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #15, !alias.scope !100
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %62, label %187, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %42, %"struct.WTF::KeyValuePair"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  br label %84

76:                                               ; preds = %72
  %77 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 32) #15
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %74, %76
  %85 = phi i8* [ %75, %74 ], [ %77, %76 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ %42, %74 ], [ %41, %76 ]
  %87 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #15
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 2
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #15
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %97
  call void @llvm.trap() #15
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %84
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #15
  br label %128

128:                                              ; preds = %127, %124, %109
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 1
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %131 = bitcast %"class.blink::Member"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.blink::Member"* %129 to i64*
  store atomic i64 %132, i64* %133 monotonic, align 8
  %134 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %128
  %137 = inttoptr i64 %132 to i8*
  %138 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %137) #15
  br label %139

139:                                              ; preds = %128, %136
  %140 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %175, label %142

142:                                              ; preds = %139
  %143 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %144 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %143, i64 0, i32 1
  %145 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %144) #15
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %149, !prof !3

147:                                              ; preds = %142
  %148 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %144, i8* %148) #15
  br label %149

149:                                              ; preds = %147, %142
  %150 = phi i8* [ %148, %147 ], [ %145, %142 ]
  %151 = bitcast i8* %150 to %"class.blink::ThreadState"**
  %152 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %152, i64 0, i32 9
  %154 = load i8, i8* %153, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %175, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %152, i64 0, i32 13
  %158 = load i64, i64* %157, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %157, align 8
  %160 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %152, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %161 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %160, align 8
  %162 = load atomic i64, i64* %133 monotonic, align 8
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %172, label %164

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %161, i64 0, i32 0, i32 0
  %166 = inttoptr i64 %162 to i8*
  %167 = bitcast %"class.blink::MarkingVisitor"* %161 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %168 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, i64 5
  %170 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %169, align 8
  call void %170(%"class.blink::Visitor"* %165, i8* nonnull %166, i8* %166, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  %171 = load i64, i64* %157, align 8
  br label %172

172:                                              ; preds = %164, %156
  %173 = phi i64 [ %159, %156 ], [ %171, %164 ]
  %174 = add i64 %173, -1
  store i64 %174, i64* %157, align 8
  br label %175

175:                                              ; preds = %139, %149, %172
  %176 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %176, align 4
  %179 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %180 = load i32, i32* %179, align 8
  %181 = add i32 %180, %178
  %182 = shl i32 %181, 1
  %183 = load i32, i32* %13, align 8
  %184 = icmp ult i32 %182, %183
  br i1 %184, label %187, label %185

185:                                              ; preds = %175
  %186 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %86)
  br label %187

187:                                              ; preds = %61, %175, %185
  %188 = phi i8 [ 1, %175 ], [ 1, %185 ], [ 0, %61 ]
  %189 = phi %"struct.WTF::KeyValuePair"* [ %86, %175 ], [ %186, %185 ], [ %42, %61 ]
  %190 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %189, 0
  %191 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %190, i8 %188, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %191
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #15
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #15
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #15
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #15
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.34"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #15
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13QualifiedNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #15
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.37"*
  %31 = call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* %30, i32 %17, %"struct.WTF::KeyValuePair.37"* null) #15
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.34"*, %"struct.WTF::KeyValuePair.37"*, i32, %"struct.WTF::KeyValuePair.37"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.34", align 8
  %6 = bitcast %"class.WTF::HashTable.34"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.34"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.37"* %1, %"struct.WTF::KeyValuePair.37"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.37"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.34"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.34"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.37"* %22 to i64
  br label %72

24:                                               ; preds = %117
  %25 = bitcast %"class.WTF::HashTable.34"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.34"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %118, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.37"* [ null, %16 ], [ %121, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %119, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.37"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %63, %39
  %42 = phi i64 [ 0, %39 ], [ %64, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %35, i64 %42, i32 0
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %43, align 8
  %45 = icmp eq %"class.blink::QualifiedName"* %44, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %35, i64 %42, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %62, %59, %46, %41
  %64 = add nuw nsw i64 %42, 1
  %65 = icmp eq i64 %64, %40
  br i1 %65, label %66, label %41

66:                                               ; preds = %63, %37
  %67 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %28, %66
  %69 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, -2147483648
  store i32 %71, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.37"* %33

72:                                               ; preds = %21, %117
  %73 = phi i64 [ %118, %117 ], [ %23, %21 ]
  %74 = phi i32 [ %119, %117 ], [ %13, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.37"* [ %120, %117 ], [ %22, %21 ]
  %76 = phi %"struct.WTF::KeyValuePair.37"* [ %121, %117 ], [ null, %21 ]
  %77 = phi i32 [ %122, %117 ], [ 0, %21 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %75, i64 %78
  %80 = bitcast %"struct.WTF::KeyValuePair.37"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %117
    i64 0, label %117
  ]

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %79, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.34"* nonnull %5, %"class.blink::QualifiedName"** dereferenceable(8) %83) #15
  %85 = extractvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #15
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.37"* %85 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %75, i64 %78, i32 1
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %15, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %111, i64 %78
  %113 = icmp eq %"struct.WTF::KeyValuePair.37"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.37"* %85, %"struct.WTF::KeyValuePair.37"* %76
  %115 = load i32, i32* %12, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.37"* %111 to i64
  br label %117

117:                                              ; preds = %72, %72, %102
  %118 = phi i64 [ %73, %72 ], [ %116, %102 ], [ %73, %72 ]
  %119 = phi i32 [ %74, %72 ], [ %115, %102 ], [ %74, %72 ]
  %120 = phi %"struct.WTF::KeyValuePair.37"* [ %75, %72 ], [ %111, %102 ], [ %75, %72 ]
  %121 = phi %"struct.WTF::KeyValuePair.37"* [ %76, %72 ], [ %114, %102 ], [ %76, %72 ]
  %122 = add i32 %77, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %24, label %72
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.34"*, %"class.blink::QualifiedName"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::QualifiedName"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.37"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %32, i64 0, i32 0
  %35 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %34, align 8
  %36 = icmp eq %"class.blink::QualifiedName"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::QualifiedName"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.37"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.37"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.37"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.37"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.37"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::QualifiedName"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::QualifiedName"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::QualifiedName"* %63, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.37"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %75, i64 0, i32 0
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %77, align 8
  %79 = icmp eq %"class.blink::QualifiedName"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.37"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } undef, %"struct.WTF::KeyValuePair.37"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.37"*, i8 } %85
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorISA_SF_SG_EERKS4_RKS7_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.34"*, %"class.blink::QualifiedName"** dereferenceable(8), %"struct.WTF::KeyValuePair.37"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.37"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* null)
  %9 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.37"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::QualifiedName"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %39, i64 0, i32 0
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::QualifiedName"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::QualifiedName"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.37"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.37"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::QualifiedName"* %59, %43
  br i1 %64, label %143, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::QualifiedName"* %59, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.37"* %60, %"struct.WTF::KeyValuePair.37"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %72, i64 0, i32 0
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.37"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.37"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"struct.WTF::KeyValuePair.37"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"struct.WTF::KeyValuePair.37"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.37"* %87 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %87, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %2, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #15
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %100
  tail call void @llvm.trap() #15
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %86
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast %"class.WTF::String"* %91 to i64*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %112, %127, %130
  %132 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = tail call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* %87)
  br label %143

143:                                              ; preds = %58, %131, %141
  %144 = phi i8 [ 1, %131 ], [ 1, %141 ], [ 0, %58 ]
  %145 = phi %"struct.WTF::KeyValuePair.37"* [ %87, %131 ], [ %142, %141 ], [ %60, %58 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } undef, %"struct.WTF::KeyValuePair.37"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair.37"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.34"*, %"struct.WTF::KeyValuePair.37"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13QualifiedNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.37"*
  %37 = call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE8RehashToEPS7_jSI_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* %36, i32 %32, %"struct.WTF::KeyValuePair.37"* %1) #15
  ret %"struct.WTF::KeyValuePair.37"* %37
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() local_unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexINS_13CSSPropertyIDEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, i32) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIPKN5blink13QualifiedNameENS_6StringENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS8_IS5_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.33"*, %"class.blink::QualifiedName"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.33", %"class.WTF::HashMap.33"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.37"* %4, null
  br i1 %5, label %91, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.33", %"class.WTF::HashMap.33"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::QualifiedName"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %34, i64 0, i32 0
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::QualifiedName"*
  %38 = icmp eq %"class.blink::QualifiedName"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::QualifiedName"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::QualifiedName"* %54, null
  br i1 %57, label %91, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %63, i64 0, i32 0
  %65 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.37"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.37"* %68, null
  br i1 %69, label %91, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #15
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  tail call void @llvm.trap() #15
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %53, %2, %89, %74, %70, %67
  %92 = phi %"class.WTF::StringImpl"* [ null, %67 ], [ null, %70 ], [ %72, %74 ], [ %72, %89 ], [ null, %2 ], [ null, %53 ]
  ret %"class.WTF::StringImpl"* %92
}

declare void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

declare i32 @_ZNK5blink26MutableCSSPropertyValueSet17FindPropertyIndexIN3WTF12AtomicStringEEEiT_(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSetC1ENS_13CSSParserModeE(%"class.blink::MutableCSSPropertyValueSet"*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSPropertyValueSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSPropertyValueSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSPropertyValueSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSPropertyValueSetEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSPropertyValueSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink19CSSPropertyValueSet30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14StringKeyframe16PropertyResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14StringKeyframe16PropertyResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14StringKeyframe16PropertyResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14StringKeyframe16PropertyResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_PS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::StringKeyframe::PropertyResolver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.8* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  store i32 0, i32* %21, align 8, !alias.scope !105
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #15, !alias.scope !105
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %62, label %168, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %42, %"struct.WTF::KeyValuePair"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  br label %84

76:                                               ; preds = %72
  %77 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 32) #15
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %74, %76
  %85 = phi i8* [ %75, %74 ], [ %77, %76 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ %42, %74 ], [ %41, %76 ]
  %87 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #15
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 2
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8
  %93 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %109, %106, %84
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 1
  %112 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %2, align 8
  %113 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %112 to i64
  %114 = bitcast %"class.blink::Member"* %111 to i64*
  store atomic i64 %113, i64* %114 monotonic, align 8
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %110
  %118 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %112 to i8*
  %119 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %118) #15
  br label %120

120:                                              ; preds = %110, %117
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %156, label %123

123:                                              ; preds = %120
  %124 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %125 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %124, i64 0, i32 1
  %126 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %125) #15
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130, !prof !3

128:                                              ; preds = %123
  %129 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %125, i8* %129) #15
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i8* [ %129, %128 ], [ %126, %123 ]
  %132 = bitcast i8* %131 to %"class.blink::ThreadState"**
  %133 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 9
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %156, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 13
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %138, align 8
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %141, align 8
  %143 = load atomic i64, i64* %114 monotonic, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %142, i64 0, i32 0, i32 0
  %147 = inttoptr i64 %143 to i8*
  %148 = bitcast %"class.blink::MarkingVisitor"* %142 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  call void %151(%"class.blink::Visitor"* %146, i8* nonnull %147, i8* %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  %152 = load i64, i64* %138, align 8
  br label %153

153:                                              ; preds = %145, %137
  %154 = phi i64 [ %140, %137 ], [ %152, %145 ]
  %155 = add i64 %154, -1
  store i64 %155, i64* %138, align 8
  br label %156

156:                                              ; preds = %120, %130, %153
  %157 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = add i32 %161, %159
  %163 = shl i32 %162, 1
  %164 = load i32, i32* %13, align 8
  %165 = icmp ult i32 %163, %164
  br i1 %165, label %168, label %166

166:                                              ; preds = %156
  %167 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %86)
  br label %168

168:                                              ; preds = %61, %156, %166
  %169 = phi i8 [ 1, %156 ], [ 1, %166 ], [ 0, %61 ]
  %170 = phi %"struct.WTF::KeyValuePair"* [ %86, %156 ], [ %167, %166 ], [ %42, %61 ]
  %171 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %170, 0
  %172 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %171, i8 %169, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StringKeyframe::PropertyResolver"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe16PropertyResolverEE4CallIJRKNS_11CSSPropertyERPNS_26MutableCSSPropertyValueSetERbEEEPS2_DpOT_(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::MutableCSSPropertyValueSet"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14StringKeyframe16PropertyResolverEEEPhm(i64 32) #15
  %5 = bitcast i8* %4 to %"class.blink::StringKeyframe::PropertyResolver"*
  %6 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %1, align 8
  %7 = load i8, i8* %2, align 1, !range !2
  %8 = bitcast i8* %4 to i32*
  %9 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #15
  store i8 %7, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %6, i64 0, i32 0
  br i1 %16, label %18, label %27

18:                                               ; preds = %3
  %19 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %17, i32 %10) #15
  %20 = ptrtoint %"class.blink::CSSValue"* %19 to i64
  %21 = bitcast i8* %11 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %19, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #15
  br label %37

27:                                               ; preds = %3
  %28 = getelementptr inbounds i8, i8* %4, i64 16
  %29 = tail call %"class.blink::ImmutableCSSPropertyValueSet"* @_ZNK5blink19CSSPropertyValueSet21ImmutableCopyIfNeededEv(%"class.blink::CSSPropertyValueSet"* %17) #15
  %30 = ptrtoint %"class.blink::ImmutableCSSPropertyValueSet"* %29 to i64
  %31 = bitcast i8* %28 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %27
  %35 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %29 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #15
  br label %37

37:                                               ; preds = %18, %24, %27, %34
  %38 = getelementptr inbounds i8, i8* %4, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  ret %"class.blink::StringKeyframe::PropertyResolver"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EES2_RPS6_EENS_18HashTableAddResultISJ_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::StringKeyframe::PropertyResolver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.8* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  store i32 0, i32* %21, align 8, !alias.scope !110
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #15, !alias.scope !110
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %62, label %168, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %42, %"struct.WTF::KeyValuePair"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  br label %84

76:                                               ; preds = %72
  %77 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 32) #15
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %74, %76
  %85 = phi i8* [ %75, %74 ], [ %77, %76 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ %42, %74 ], [ %41, %76 ]
  %87 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #15
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 0, i32 2
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8
  %93 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #15
  br label %110

110:                                              ; preds = %109, %106, %84
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 0, i32 1
  %112 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %2, align 8
  %113 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"* %112 to i64
  %114 = bitcast %"class.blink::Member"* %111 to i64*
  store atomic i64 %113, i64* %114 monotonic, align 8
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %110
  %118 = bitcast %"class.blink::StringKeyframe::PropertyResolver"* %112 to i8*
  %119 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %118) #15
  br label %120

120:                                              ; preds = %110, %117
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %156, label %123

123:                                              ; preds = %120
  %124 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %125 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %124, i64 0, i32 1
  %126 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %125) #15
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130, !prof !3

128:                                              ; preds = %123
  %129 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %125, i8* %129) #15
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i8* [ %129, %128 ], [ %126, %123 ]
  %132 = bitcast i8* %131 to %"class.blink::ThreadState"**
  %133 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 9
  %135 = load i8, i8* %134, align 1, !range !2
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %156, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 13
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %138, align 8
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %133, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %141, align 8
  %143 = load atomic i64, i64* %114 monotonic, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %142, i64 0, i32 0, i32 0
  %147 = inttoptr i64 %143 to i8*
  %148 = bitcast %"class.blink::MarkingVisitor"* %142 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, i64 5
  %151 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %150, align 8
  call void %151(%"class.blink::Visitor"* %146, i8* nonnull %147, i8* %147, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  %152 = load i64, i64* %138, align 8
  br label %153

153:                                              ; preds = %145, %137
  %154 = phi i64 [ %140, %137 ], [ %152, %145 ]
  %155 = add i64 %154, -1
  store i64 %155, i64* %138, align 8
  br label %156

156:                                              ; preds = %120, %130, %153
  %157 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = add i32 %161, %159
  %163 = shl i32 %162, 1
  %164 = load i32, i32* %13, align 8
  %165 = icmp ult i32 %163, %164
  br i1 %165, label %168, label %166

166:                                              ; preds = %156
  %167 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %86)
  br label %168

168:                                              ; preds = %61, %156, %166
  %169 = phi i8 [ 1, %156 ], [ 1, %166 ], [ 0, %61 ]
  %170 = phi %"struct.WTF::KeyValuePair"* [ %86, %156 ], [ %167, %166 ], [ %42, %61 ]
  %171 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %170, 0
  %172 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %171, i8 %169, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  store i32 1, i32* %20, align 8, !alias.scope !115
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 1
  %22 = bitcast %union.anon.8* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15, !alias.scope !115
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %24 = bitcast %"class.blink::Member"* %23 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  %28 = and i32 %27, 2147483647
  %29 = and i32 %26, -2147483648
  %30 = or i32 %28, %29
  store i32 %30, i32* %25, align 8
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, -1
  store i32 %33, i32* %31, align 4
  %34 = mul i32 %33, 6
  %35 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %34, %36
  %38 = icmp ugt i32 %36, 8
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %69

40:                                               ; preds = %19
  %41 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %42 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %41, i64 0, i32 1
  %43 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %42) #15
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %47, !prof !3

45:                                               ; preds = %40
  %46 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %42, i8* %46) #15
  br label %47

47:                                               ; preds = %45, %40
  %48 = phi i8* [ %46, %45 ], [ %43, %40 ]
  %49 = bitcast i8* %48 to %"class.blink::ThreadState"**
  %50 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %50, i64 0, i32 6
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %50, i64 0, i32 16
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %69, label %58

58:                                               ; preds = %47, %54
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %50, i64 0, i32 13
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %58
  %63 = load i32, i32* %35, align 8
  %64 = lshr i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_14StringKeyframe16PropertyResolverEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSG_IS9_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %65) #15
  %67 = bitcast %"class.blink::HeapHashTableBacking"* %66 to %"struct.WTF::KeyValuePair"*
  %68 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS8_jSK_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %67, i32 %64, %"struct.WTF::KeyValuePair"* null) #15
  br label %69

69:                                               ; preds = %54, %19, %62, %58
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_14StringKeyframe16PropertyResolverEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.8* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  store i32 0, i32* %20, align 8, !alias.scope !118
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #15, !alias.scope !118
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #15
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.37"*, i8 } @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EES4_RKS6_EENS_18HashTableAddResultISH_S7_EEOT0_OT1_(%"class.WTF::HashTable.34"*, %"class.blink::QualifiedName"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.37"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* null)
  %9 = load %"struct.WTF::KeyValuePair.37"*, %"struct.WTF::KeyValuePair.37"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.37"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::QualifiedName"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %39, i64 0, i32 0
  %41 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %40, align 8
  %42 = icmp eq %"class.blink::QualifiedName"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::QualifiedName"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::QualifiedName"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.37"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.37"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::QualifiedName"* %59, %43
  br i1 %64, label %143, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::QualifiedName"* %59, inttoptr (i64 -1 to %"class.blink::QualifiedName"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.37"* %60, %"struct.WTF::KeyValuePair.37"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %72, i64 0, i32 0
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.37"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.37"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.37"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.37"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.37", %"struct.WTF::KeyValuePair.37"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #15
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %100
  tail call void @llvm.trap() #15
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %87
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast %"class.WTF::String"* %91 to i64*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %112, %127, %130
  %132 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %132, align 4
  %135 = getelementptr inbounds %"class.WTF::HashTable.34", %"class.WTF::HashTable.34"* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, %134
  %138 = shl i32 %137, 1
  %139 = load i32, i32* %12, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = tail call %"struct.WTF::KeyValuePair.37"* @_ZN3WTF9HashTableIPKN5blink13QualifiedNameENS_12KeyValuePairIS4_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSC_IS6_EEEESD_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.34"* %0, %"struct.WTF::KeyValuePair.37"* %89)
  br label %143

143:                                              ; preds = %58, %131, %141
  %144 = phi i8 [ 1, %131 ], [ 1, %141 ], [ 0, %58 ]
  %145 = phi %"struct.WTF::KeyValuePair.37"* [ %89, %131 ], [ %142, %141 ], [ %60, %58 ]
  %146 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } undef, %"struct.WTF::KeyValuePair.37"* %145, 0
  %147 = insertvalue { %"struct.WTF::KeyValuePair.37"*, i8 } %146, i8 %144, 1
  ret { %"struct.WTF::KeyValuePair.37"*, i8 } %147
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_S2_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.107"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.107"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.8* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  store i32 0, i32* %21, align 8, !alias.scope !123
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #15, !alias.scope !123
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #15
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #15
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %61, label %121, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #15
  %77 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #15
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  %92 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %109

109:                                              ; preds = %83, %105, %108
  %110 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, %112
  %116 = shl i32 %115, 1
  %117 = load i32, i32* %13, align 8
  %118 = icmp ult i32 %116, %117
  br i1 %118, label %121, label %119

119:                                              ; preds = %109
  %120 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.107"* %0, %"class.blink::PropertyHandle"* %85)
  br label %121

121:                                              ; preds = %60, %109, %119
  %122 = phi i8 [ 1, %109 ], [ 1, %119 ], [ 0, %60 ]
  %123 = phi %"class.blink::PropertyHandle"* [ %85, %109 ], [ %120, %119 ], [ %42, %60 ]
  %124 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %123, 0
  %125 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %124, i8 %122, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.107"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.107"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #15
  ret %"class.blink::PropertyHandle"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.107"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.107", align 8
  %7 = bitcast %"class.WTF::HashTable.107"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.107"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.107"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.8* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable.107"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable.107"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #15
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #15
  store i32 0, i32* %22, align 8, !alias.scope !128
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #15, !alias.scope !128
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #15
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #15
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #15
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.107"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #15
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #15
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #15
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.107"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.107", %"class.WTF::HashTable.107"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #15
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.8* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #15
  store i32 0, i32* %14, align 8, !alias.scope !133
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #15, !alias.scope !133
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #15
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #15
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #15
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #15
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

declare void @_ZN5blink15V8ObjectBuilder11AddInternalERKN3WTF10StringViewEN2v85LocalINS5_5ValueEEE(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #15
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #15
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #15
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #15
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #15
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #15
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26MutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8KeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8KeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8KeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8KeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe"*)***
  %4 = load void (%"class.blink::Keyframe"*)**, void (%"class.blink::Keyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe"*)*, void (%"class.blink::Keyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8KeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.724"*, %"class.blink::StringKeyframe::PropertyResolver"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.724"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe::PropertyResolver"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.724"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframe16PropertyResolverEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.724"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.724"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.724"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframe16PropertyResolverEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !30

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.724"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.724"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframe16PropertyResolverEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.16, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.17, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([205 x i8], [205 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframe16PropertyResolverEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframe16PropertyResolverEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframe16PropertyResolverEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8), i64, %"class.blink::Member"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %33 [
    i64 0, label %86
    i64 1, label %86
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %12, align 8
  %14 = tail call zeroext i1 %8(%"class.blink::StringKeyframe::PropertyResolver"* %11, %"class.blink::StringKeyframe::PropertyResolver"* %13) #15
  br i1 %14, label %15, label %86

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::Member"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::Member"* %9 to i64*
  %19 = load i64, i64* %18, align 8
  store atomic i64 %19, i64* %16 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.blink::Member"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #15
  br label %26

26:                                               ; preds = %22, %15
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %86, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::Member"* %9 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #15
  br label %86

33:                                               ; preds = %6
  %34 = icmp slt i64 %3, 1
  br i1 %34, label %35, label %76

35:                                               ; preds = %33
  %36 = icmp eq %"class.blink::Member"* %0, %1
  br i1 %36, label %86, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %39 = icmp eq %"class.blink::Member"* %38, %1
  br i1 %39, label %86, label %40

40:                                               ; preds = %37, %62
  %41 = phi %"class.blink::Member"* [ %63, %62 ], [ %38, %37 ]
  %42 = bitcast %"class.blink::Member"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq %"class.blink::Member"* %41, %0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to %"class.blink::StringKeyframe::PropertyResolver"*
  br label %47

47:                                               ; preds = %74, %45
  %48 = phi %"class.blink::Member"* [ %41, %45 ], [ %50, %74 ]
  %49 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 -1
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %51, align 8
  %53 = tail call zeroext i1 %49(%"class.blink::StringKeyframe::PropertyResolver"* %46, %"class.blink::StringKeyframe::PropertyResolver"* %52) #15
  br i1 %53, label %65, label %54

54:                                               ; preds = %74, %47, %40
  %55 = phi %"class.blink::Member"* [ %0, %40 ], [ %48, %47 ], [ %0, %74 ]
  %56 = bitcast %"class.blink::Member"* %55 to i64*
  store atomic i64 %43, i64* %56 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = inttoptr i64 %43 to i8*
  %61 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #15
  br label %62

62:                                               ; preds = %59, %54
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 1
  %64 = icmp eq %"class.blink::Member"* %63, %1
  br i1 %64, label %86, label %40

65:                                               ; preds = %47
  %66 = bitcast %"class.blink::Member"* %50 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::Member"* %48 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = inttoptr i64 %67 to i8*
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #15
  br label %74

74:                                               ; preds = %71, %65
  %75 = icmp eq %"class.blink::Member"* %50, %0
  br i1 %75, label %54, label %47

76:                                               ; preds = %33
  %77 = lshr i64 %3, 1
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 %77
  %79 = icmp sgt i64 %3, %5
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"class.blink::Member"* %0, %"class.blink::Member"* %78, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %77, %"class.blink::Member"* %4)
  %81 = sub nsw i64 %3, %77
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %77
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"class.blink::Member"* %78, %"class.blink::Member"* %1, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %81, %"class.blink::Member"* %82)
  %83 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EESA_SA_EEvT0_SB_T1_SC_T2_T_(%"class.blink::Member"* %4, %"class.blink::Member"* %82, %"class.blink::Member"* %82, %"class.blink::Member"* %83, %"class.blink::Member"* %0, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2)
  br label %86

84:                                               ; preds = %76
  tail call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %0, %"class.blink::Member"* %78, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %77, %"class.blink::Member"* %4, i64 %5)
  %85 = sub nsw i64 %3, %77
  tail call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %78, %"class.blink::Member"* %1, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %85, %"class.blink::Member"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"class.blink::Member"* %0, %"class.blink::Member"* %78, %"class.blink::Member"* %1, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %77, i64 %85, %"class.blink::Member"* %4, i64 %5)
  ret void

86:                                               ; preds = %62, %37, %35, %29, %26, %80, %7, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeE(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8), i64, %"class.blink::Member"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %34 [
    i64 0, label %478
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.blink::Member"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::Member"* %4 to i64*
  store i64 %8, i64* %9, align 8
  br label %478

10:                                               ; preds = %5
  %11 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %15, align 8
  %17 = tail call zeroext i1 %11(%"class.blink::StringKeyframe::PropertyResolver"* %14, %"class.blink::StringKeyframe::PropertyResolver"* %16) #15
  br i1 %17, label %18, label %26

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::Member"* %12 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.blink::Member"* %4 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 1
  %23 = bitcast %"class.blink::Member"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::Member"* %22 to i64*
  store i64 %24, i64* %25, align 8
  br label %478

26:                                               ; preds = %10
  %27 = bitcast %"class.blink::Member"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.blink::Member"* %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 1
  %31 = bitcast %"class.blink::Member"* %12 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::Member"* %30 to i64*
  store i64 %32, i64* %33, align 8
  br label %478

34:                                               ; preds = %5
  %35 = icmp slt i64 %3, 9
  br i1 %35, label %36, label %96

36:                                               ; preds = %34
  %37 = icmp eq %"class.blink::Member"* %0, %1
  br i1 %37, label %478, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.blink::Member"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::Member"* %4 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %43 = icmp eq %"class.blink::Member"* %42, %1
  br i1 %43, label %478, label %44

44:                                               ; preds = %38, %93
  %45 = phi %"class.blink::Member"* [ %94, %93 ], [ %42, %38 ]
  %46 = phi %"class.blink::Member"* [ %47, %93 ], [ %4, %38 ]
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 1
  %48 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 0, i32 0, i32 0
  %50 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 0, i32 0, i32 0
  %52 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %51, align 8
  %53 = tail call zeroext i1 %48(%"class.blink::StringKeyframe::PropertyResolver"* %50, %"class.blink::StringKeyframe::PropertyResolver"* %52) #15
  br i1 %53, label %54, label %89

54:                                               ; preds = %44
  %55 = bitcast %"class.blink::Member"* %46 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.blink::Member"* %47 to i64*
  store i64 %56, i64* %57, align 8
  %58 = icmp eq %"class.blink::Member"* %46, %4
  br i1 %58, label %80, label %59

59:                                               ; preds = %54, %78
  %60 = phi %"class.blink::Member"* [ %63, %78 ], [ %46, %54 ]
  %61 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %62 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %49, align 8
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %60, i64 -1
  %64 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %64, align 8
  %66 = tail call zeroext i1 %61(%"class.blink::StringKeyframe::PropertyResolver"* %62, %"class.blink::StringKeyframe::PropertyResolver"* %65) #15
  br i1 %66, label %69, label %67

67:                                               ; preds = %59
  %68 = bitcast %"class.blink::Member"* %60 to i64*
  br label %80

69:                                               ; preds = %59
  %70 = bitcast %"class.blink::Member"* %63 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::Member"* %60 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = inttoptr i64 %71 to i8*
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #15
  br label %78

78:                                               ; preds = %75, %69
  %79 = icmp eq %"class.blink::Member"* %63, %4
  br i1 %79, label %80, label %59

80:                                               ; preds = %78, %67, %54
  %81 = phi i64* [ %41, %54 ], [ %68, %67 ], [ %41, %78 ]
  %82 = bitcast %"class.blink::Member"* %45 to i64*
  %83 = load i64, i64* %82, align 8
  store atomic i64 %83, i64* %81 monotonic, align 8
  %84 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %80
  %87 = inttoptr i64 %83 to i8*
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #15
  br label %93

89:                                               ; preds = %44
  %90 = bitcast %"class.blink::Member"* %45 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member"* %47 to i64*
  store i64 %91, i64* %92, align 8
  br label %93

93:                                               ; preds = %89, %86, %80
  %94 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 1
  %95 = icmp eq %"class.blink::Member"* %94, %1
  br i1 %95, label %478, label %44

96:                                               ; preds = %34
  %97 = lshr i64 %3, 1
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 %97
  tail call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %0, %"class.blink::Member"* %98, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %97, %"class.blink::Member"* %4, i64 %97)
  %99 = sub nsw i64 %3, %97
  %100 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %97
  tail call void @_ZNSt3__113__stable_sortIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_T_NS_15iterator_traitsISB_E15difference_typeEPNSE_10value_typeEl(%"class.blink::Member"* %98, %"class.blink::Member"* %1, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %2, i64 %99, %"class.blink::Member"* %100, i64 %99)
  %101 = icmp eq i64 %97, 0
  br i1 %101, label %102, label %276

102:                                              ; preds = %473, %96
  %103 = phi %"class.blink::Member"* [ %98, %96 ], [ %474, %473 ]
  %104 = phi %"class.blink::Member"* [ %4, %96 ], [ %476, %473 ]
  %105 = ptrtoint %"class.blink::Member"* %103 to i64
  %106 = icmp eq %"class.blink::Member"* %103, %1
  br i1 %106, label %478, label %107

107:                                              ; preds = %102
  %108 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %109 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %108 to i64
  %110 = sub i64 %109, %105
  %111 = lshr i64 %110, 3
  %112 = add nuw nsw i64 %111, 1
  %113 = icmp ult i64 %112, 4
  br i1 %113, label %206, label %114

114:                                              ; preds = %107
  %115 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %116 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %115 to i64
  %117 = sub i64 %116, %105
  %118 = lshr i64 %117, 3
  %119 = add nuw nsw i64 %118, 1
  %120 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %119
  %121 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %119
  %122 = icmp ult %"class.blink::Member"* %104, %121
  %123 = icmp ult %"class.blink::Member"* %103, %120
  %124 = and i1 %122, %123
  br i1 %124, label %206, label %125

125:                                              ; preds = %114
  %126 = and i64 %112, 4611686018427387900
  %127 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %126
  %128 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %126
  %129 = add nsw i64 %126, -4
  %130 = lshr exact i64 %129, 2
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 3
  %133 = icmp ult i64 %129, 12
  br i1 %133, label %185, label %134

134:                                              ; preds = %125
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %182, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %183, %136 ]
  %139 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %137
  %140 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %137
  %141 = bitcast %"class.blink::Member"* %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !138
  %143 = getelementptr %"class.blink::Member", %"class.blink::Member"* %140, i64 2
  %144 = bitcast %"class.blink::Member"* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !138
  %146 = bitcast %"class.blink::Member"* %139 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !141, !noalias !138
  %147 = getelementptr %"class.blink::Member", %"class.blink::Member"* %139, i64 2
  %148 = bitcast %"class.blink::Member"* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !141, !noalias !138
  %149 = or i64 %137, 4
  %150 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %149
  %151 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %149
  %152 = bitcast %"class.blink::Member"* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !138
  %154 = getelementptr %"class.blink::Member", %"class.blink::Member"* %151, i64 2
  %155 = bitcast %"class.blink::Member"* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !138
  %157 = bitcast %"class.blink::Member"* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !141, !noalias !138
  %158 = getelementptr %"class.blink::Member", %"class.blink::Member"* %150, i64 2
  %159 = bitcast %"class.blink::Member"* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !141, !noalias !138
  %160 = or i64 %137, 8
  %161 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %160
  %162 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %160
  %163 = bitcast %"class.blink::Member"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !138
  %165 = getelementptr %"class.blink::Member", %"class.blink::Member"* %162, i64 2
  %166 = bitcast %"class.blink::Member"* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !138
  %168 = bitcast %"class.blink::Member"* %161 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 8, !alias.scope !141, !noalias !138
  %169 = getelementptr %"class.blink::Member", %"class.blink::Member"* %161, i64 2
  %170 = bitcast %"class.blink::Member"* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 8, !alias.scope !141, !noalias !138
  %171 = or i64 %137, 12
  %172 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %171
  %173 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %171
  %174 = bitcast %"class.blink::Member"* %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !138
  %176 = getelementptr %"class.blink::Member", %"class.blink::Member"* %173, i64 2
  %177 = bitcast %"class.blink::Member"* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !138
  %179 = bitcast %"class.blink::Member"* %172 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %179, align 8, !alias.scope !141, !noalias !138
  %180 = getelementptr %"class.blink::Member", %"class.blink::Member"* %172, i64 2
  %181 = bitcast %"class.blink::Member"* %180 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %181, align 8, !alias.scope !141, !noalias !138
  %182 = add i64 %137, 16
  %183 = add i64 %138, -4
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %136, !llvm.loop !143

185:                                              ; preds = %136, %125
  %186 = phi i64 [ 0, %125 ], [ %182, %136 ]
  %187 = icmp eq i64 %132, 0
  br i1 %187, label %204, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %201, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %202, %188 ], [ %132, %185 ]
  %191 = getelementptr %"class.blink::Member", %"class.blink::Member"* %104, i64 %189
  %192 = getelementptr %"class.blink::Member", %"class.blink::Member"* %103, i64 %189
  %193 = bitcast %"class.blink::Member"* %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8, !alias.scope !138
  %195 = getelementptr %"class.blink::Member", %"class.blink::Member"* %192, i64 2
  %196 = bitcast %"class.blink::Member"* %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !138
  %198 = bitcast %"class.blink::Member"* %191 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %198, align 8, !alias.scope !141, !noalias !138
  %199 = getelementptr %"class.blink::Member", %"class.blink::Member"* %191, i64 2
  %200 = bitcast %"class.blink::Member"* %199 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %200, align 8, !alias.scope !141, !noalias !138
  %201 = add i64 %189, 4
  %202 = add i64 %190, -1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %188, !llvm.loop !145

204:                                              ; preds = %188, %185
  %205 = icmp eq i64 %112, %126
  br i1 %205, label %478, label %206

206:                                              ; preds = %204, %114, %107
  %207 = phi %"class.blink::Member"* [ %104, %114 ], [ %104, %107 ], [ %127, %204 ]
  %208 = phi %"class.blink::Member"* [ %103, %114 ], [ %103, %107 ], [ %128, %204 ]
  %209 = ptrtoint %"class.blink::Member"* %208 to i64
  %210 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %211 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %210 to i64
  %212 = sub i64 %211, %209
  %213 = lshr i64 %212, 3
  %214 = add nuw nsw i64 %213, 1
  %215 = and i64 %214, 7
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %206, %217
  %218 = phi %"class.blink::Member"* [ %225, %217 ], [ %207, %206 ]
  %219 = phi %"class.blink::Member"* [ %224, %217 ], [ %208, %206 ]
  %220 = phi i64 [ %226, %217 ], [ %215, %206 ]
  %221 = bitcast %"class.blink::Member"* %219 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member"* %218 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %219, i64 1
  %225 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %218, i64 1
  %226 = add i64 %220, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %217, !llvm.loop !147

228:                                              ; preds = %217, %206
  %229 = phi %"class.blink::Member"* [ %207, %206 ], [ %225, %217 ]
  %230 = phi %"class.blink::Member"* [ %208, %206 ], [ %224, %217 ]
  %231 = icmp ult i64 %212, 56
  br i1 %231, label %478, label %232

232:                                              ; preds = %228, %232
  %233 = phi %"class.blink::Member"* [ %274, %232 ], [ %229, %228 ]
  %234 = phi %"class.blink::Member"* [ %273, %232 ], [ %230, %228 ]
  %235 = bitcast %"class.blink::Member"* %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.blink::Member"* %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 1
  %239 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 1
  %240 = bitcast %"class.blink::Member"* %238 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.blink::Member"* %239 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 2
  %244 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 2
  %245 = bitcast %"class.blink::Member"* %243 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.blink::Member"* %244 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 3
  %249 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 3
  %250 = bitcast %"class.blink::Member"* %248 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = bitcast %"class.blink::Member"* %249 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 4
  %254 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 4
  %255 = bitcast %"class.blink::Member"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.blink::Member"* %254 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 5
  %259 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 5
  %260 = bitcast %"class.blink::Member"* %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.blink::Member"* %259 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 6
  %264 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 6
  %265 = bitcast %"class.blink::Member"* %263 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.blink::Member"* %264 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 7
  %269 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 7
  %270 = bitcast %"class.blink::Member"* %268 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.blink::Member"* %269 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %234, i64 8
  %274 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 8
  %275 = icmp eq %"class.blink::Member"* %273, %1
  br i1 %275, label %478, label %232, !llvm.loop !148

276:                                              ; preds = %96, %473
  %277 = phi %"class.blink::Member"* [ %475, %473 ], [ %0, %96 ]
  %278 = phi %"class.blink::Member"* [ %476, %473 ], [ %4, %96 ]
  %279 = phi %"class.blink::Member"* [ %474, %473 ], [ %98, %96 ]
  %280 = icmp eq %"class.blink::Member"* %279, %1
  br i1 %280, label %281, label %456

281:                                              ; preds = %276
  %282 = ptrtoint %"class.blink::Member"* %277 to i64
  %283 = icmp eq %"class.blink::Member"* %277, %98
  br i1 %283, label %478, label %284

284:                                              ; preds = %281
  %285 = add nsw i64 %97, -1
  %286 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %285, i32 0, i32 0
  %287 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %286 to i64
  %288 = sub i64 %287, %282
  %289 = lshr i64 %288, 3
  %290 = add nuw nsw i64 %289, 1
  %291 = icmp ult i64 %290, 4
  br i1 %291, label %385, label %292

292:                                              ; preds = %284
  %293 = add nsw i64 %97, -1
  %294 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %293, i32 0, i32 0
  %295 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %294 to i64
  %296 = sub i64 %295, %282
  %297 = lshr i64 %296, 3
  %298 = add nuw nsw i64 %297, 1
  %299 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %298
  %300 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %298
  %301 = icmp ult %"class.blink::Member"* %278, %300
  %302 = icmp ult %"class.blink::Member"* %277, %299
  %303 = and i1 %301, %302
  br i1 %303, label %385, label %304

304:                                              ; preds = %292
  %305 = and i64 %290, 4611686018427387900
  %306 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %305
  %307 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %305
  %308 = add nsw i64 %305, -4
  %309 = lshr exact i64 %308, 2
  %310 = add nuw nsw i64 %309, 1
  %311 = and i64 %310, 3
  %312 = icmp ult i64 %308, 12
  br i1 %312, label %364, label %313

313:                                              ; preds = %304
  %314 = sub nsw i64 %310, %311
  br label %315

315:                                              ; preds = %315, %313
  %316 = phi i64 [ 0, %313 ], [ %361, %315 ]
  %317 = phi i64 [ %314, %313 ], [ %362, %315 ]
  %318 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %316
  %319 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %316
  %320 = bitcast %"class.blink::Member"* %318 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !149
  %322 = getelementptr %"class.blink::Member", %"class.blink::Member"* %318, i64 2
  %323 = bitcast %"class.blink::Member"* %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !149
  %325 = bitcast %"class.blink::Member"* %319 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !152, !noalias !149
  %326 = getelementptr %"class.blink::Member", %"class.blink::Member"* %319, i64 2
  %327 = bitcast %"class.blink::Member"* %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !152, !noalias !149
  %328 = or i64 %316, 4
  %329 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %328
  %330 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %328
  %331 = bitcast %"class.blink::Member"* %329 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 8, !alias.scope !149
  %333 = getelementptr %"class.blink::Member", %"class.blink::Member"* %329, i64 2
  %334 = bitcast %"class.blink::Member"* %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8, !alias.scope !149
  %336 = bitcast %"class.blink::Member"* %330 to <2 x i64>*
  store <2 x i64> %332, <2 x i64>* %336, align 8, !alias.scope !152, !noalias !149
  %337 = getelementptr %"class.blink::Member", %"class.blink::Member"* %330, i64 2
  %338 = bitcast %"class.blink::Member"* %337 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %338, align 8, !alias.scope !152, !noalias !149
  %339 = or i64 %316, 8
  %340 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %339
  %341 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %339
  %342 = bitcast %"class.blink::Member"* %340 to <2 x i64>*
  %343 = load <2 x i64>, <2 x i64>* %342, align 8, !alias.scope !149
  %344 = getelementptr %"class.blink::Member", %"class.blink::Member"* %340, i64 2
  %345 = bitcast %"class.blink::Member"* %344 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 8, !alias.scope !149
  %347 = bitcast %"class.blink::Member"* %341 to <2 x i64>*
  store <2 x i64> %343, <2 x i64>* %347, align 8, !alias.scope !152, !noalias !149
  %348 = getelementptr %"class.blink::Member", %"class.blink::Member"* %341, i64 2
  %349 = bitcast %"class.blink::Member"* %348 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %349, align 8, !alias.scope !152, !noalias !149
  %350 = or i64 %316, 12
  %351 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %350
  %352 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %350
  %353 = bitcast %"class.blink::Member"* %351 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8, !alias.scope !149
  %355 = getelementptr %"class.blink::Member", %"class.blink::Member"* %351, i64 2
  %356 = bitcast %"class.blink::Member"* %355 to <2 x i64>*
  %357 = load <2 x i64>, <2 x i64>* %356, align 8, !alias.scope !149
  %358 = bitcast %"class.blink::Member"* %352 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %358, align 8, !alias.scope !152, !noalias !149
  %359 = getelementptr %"class.blink::Member", %"class.blink::Member"* %352, i64 2
  %360 = bitcast %"class.blink::Member"* %359 to <2 x i64>*
  store <2 x i64> %357, <2 x i64>* %360, align 8, !alias.scope !152, !noalias !149
  %361 = add i64 %316, 16
  %362 = add i64 %317, -4
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %315, !llvm.loop !154

364:                                              ; preds = %315, %304
  %365 = phi i64 [ 0, %304 ], [ %361, %315 ]
  %366 = icmp eq i64 %311, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %364, %367
  %368 = phi i64 [ %380, %367 ], [ %365, %364 ]
  %369 = phi i64 [ %381, %367 ], [ %311, %364 ]
  %370 = getelementptr %"class.blink::Member", %"class.blink::Member"* %277, i64 %368
  %371 = getelementptr %"class.blink::Member", %"class.blink::Member"* %278, i64 %368
  %372 = bitcast %"class.blink::Member"* %370 to <2 x i64>*
  %373 = load <2 x i64>, <2 x i64>* %372, align 8, !alias.scope !149
  %374 = getelementptr %"class.blink::Member", %"class.blink::Member"* %370, i64 2
  %375 = bitcast %"class.blink::Member"* %374 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 8, !alias.scope !149
  %377 = bitcast %"class.blink::Member"* %371 to <2 x i64>*
  store <2 x i64> %373, <2 x i64>* %377, align 8, !alias.scope !152, !noalias !149
  %378 = getelementptr %"class.blink::Member", %"class.blink::Member"* %371, i64 2
  %379 = bitcast %"class.blink::Member"* %378 to <2 x i64>*
  store <2 x i64> %376, <2 x i64>* %379, align 8, !alias.scope !152, !noalias !149
  %380 = add i64 %368, 4
  %381 = add i64 %369, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !155

383:                                              ; preds = %367, %364
  %384 = icmp eq i64 %290, %305
  br i1 %384, label %478, label %385

385:                                              ; preds = %383, %292, %284
  %386 = phi %"class.blink::Member"* [ %277, %292 ], [ %277, %284 ], [ %306, %383 ]
  %387 = phi %"class.blink::Member"* [ %278, %292 ], [ %278, %284 ], [ %307, %383 ]
  %388 = ptrtoint %"class.blink::Member"* %386 to i64
  %389 = add nsw i64 %97, -1
  %390 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %389, i32 0, i32 0
  %391 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %390 to i64
  %392 = sub i64 %391, %388
  %393 = lshr i64 %392, 3
  %394 = add nuw nsw i64 %393, 1
  %395 = and i64 %394, 7
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %408, label %397

397:                                              ; preds = %385, %397
  %398 = phi %"class.blink::Member"* [ %404, %397 ], [ %386, %385 ]
  %399 = phi %"class.blink::Member"* [ %405, %397 ], [ %387, %385 ]
  %400 = phi i64 [ %406, %397 ], [ %395, %385 ]
  %401 = bitcast %"class.blink::Member"* %398 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast %"class.blink::Member"* %399 to i64*
  store i64 %402, i64* %403, align 8
  %404 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %398, i64 1
  %405 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %399, i64 1
  %406 = add i64 %400, -1
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %408, label %397, !llvm.loop !156

408:                                              ; preds = %397, %385
  %409 = phi %"class.blink::Member"* [ %386, %385 ], [ %404, %397 ]
  %410 = phi %"class.blink::Member"* [ %387, %385 ], [ %405, %397 ]
  %411 = icmp ult i64 %392, 56
  br i1 %411, label %478, label %412

412:                                              ; preds = %408, %412
  %413 = phi %"class.blink::Member"* [ %453, %412 ], [ %409, %408 ]
  %414 = phi %"class.blink::Member"* [ %454, %412 ], [ %410, %408 ]
  %415 = bitcast %"class.blink::Member"* %413 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = bitcast %"class.blink::Member"* %414 to i64*
  store i64 %416, i64* %417, align 8
  %418 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 1
  %419 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 1
  %420 = bitcast %"class.blink::Member"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = bitcast %"class.blink::Member"* %419 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 2
  %424 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 2
  %425 = bitcast %"class.blink::Member"* %423 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = bitcast %"class.blink::Member"* %424 to i64*
  store i64 %426, i64* %427, align 8
  %428 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 3
  %429 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 3
  %430 = bitcast %"class.blink::Member"* %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.blink::Member"* %429 to i64*
  store i64 %431, i64* %432, align 8
  %433 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 4
  %434 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 4
  %435 = bitcast %"class.blink::Member"* %433 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = bitcast %"class.blink::Member"* %434 to i64*
  store i64 %436, i64* %437, align 8
  %438 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 5
  %439 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 5
  %440 = bitcast %"class.blink::Member"* %438 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.blink::Member"* %439 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 6
  %444 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 6
  %445 = bitcast %"class.blink::Member"* %443 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.blink::Member"* %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 7
  %449 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 7
  %450 = bitcast %"class.blink::Member"* %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.blink::Member"* %449 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %413, i64 8
  %454 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %414, i64 8
  %455 = icmp eq %"class.blink::Member"* %453, %98
  br i1 %455, label %478, label %412, !llvm.loop !157

456:                                              ; preds = %276
  %457 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %2, align 8
  %458 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %279, i64 0, i32 0, i32 0
  %459 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %277, i64 0, i32 0, i32 0
  %461 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %460, align 8
  %462 = tail call zeroext i1 %457(%"class.blink::StringKeyframe::PropertyResolver"* %459, %"class.blink::StringKeyframe::PropertyResolver"* %461) #15
  br i1 %462, label %463, label %468

463:                                              ; preds = %456
  %464 = bitcast %"class.blink::Member"* %279 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.blink::Member"* %278 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %279, i64 1
  br label %473

468:                                              ; preds = %456
  %469 = bitcast %"class.blink::Member"* %277 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.blink::Member"* %278 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %277, i64 1
  br label %473

473:                                              ; preds = %468, %463
  %474 = phi %"class.blink::Member"* [ %467, %463 ], [ %279, %468 ]
  %475 = phi %"class.blink::Member"* [ %277, %463 ], [ %472, %468 ]
  %476 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %278, i64 1
  %477 = icmp eq %"class.blink::Member"* %475, %98
  br i1 %477, label %102, label %276

478:                                              ; preds = %408, %412, %228, %232, %93, %383, %204, %281, %102, %38, %36, %18, %26, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EESA_SA_EEvT0_SB_T1_SC_T2_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.blink::Member"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %63, %6
  %9 = phi %"class.blink::Member"* [ %2, %6 ], [ %64, %63 ]
  %10 = phi %"class.blink::Member"* [ %4, %6 ], [ %66, %63 ]
  %11 = icmp eq %"class.blink::Member"* %9, %3
  br i1 %11, label %83, label %68

12:                                               ; preds = %6, %63
  %13 = phi %"class.blink::Member"* [ %65, %63 ], [ %0, %6 ]
  %14 = phi %"class.blink::Member"* [ %66, %63 ], [ %4, %6 ]
  %15 = phi %"class.blink::Member"* [ %64, %63 ], [ %2, %6 ]
  %16 = icmp eq %"class.blink::Member"* %15, %3
  br i1 %16, label %17, label %34

17:                                               ; preds = %12
  %18 = icmp eq %"class.blink::Member"* %13, %1
  br i1 %18, label %83, label %19

19:                                               ; preds = %17, %30
  %20 = phi %"class.blink::Member"* [ %31, %30 ], [ %13, %17 ]
  %21 = phi %"class.blink::Member"* [ %32, %30 ], [ %14, %17 ]
  %22 = bitcast %"class.blink::Member"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::Member"* %21 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = inttoptr i64 %23 to i8*
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #15
  br label %30

30:                                               ; preds = %19, %27
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 1
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 1
  %33 = icmp eq %"class.blink::Member"* %31, %1
  br i1 %33, label %83, label %19

34:                                               ; preds = %12
  %35 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %5, align 8
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %37 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %39 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %38, align 8
  %40 = tail call zeroext i1 %35(%"class.blink::StringKeyframe::PropertyResolver"* %37, %"class.blink::StringKeyframe::PropertyResolver"* %39) #15
  br i1 %40, label %41, label %52

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::Member"* %15 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = inttoptr i64 %43 to i8*
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %41, %47
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 1
  br label %63

52:                                               ; preds = %34
  %53 = bitcast %"class.blink::Member"* %13 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = inttoptr i64 %54 to i8*
  %60 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %59) #15
  br label %61

61:                                               ; preds = %52, %58
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  br label %63

63:                                               ; preds = %50, %61
  %64 = phi %"class.blink::Member"* [ %51, %50 ], [ %15, %61 ]
  %65 = phi %"class.blink::Member"* [ %13, %50 ], [ %62, %61 ]
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %14, i64 1
  %67 = icmp eq %"class.blink::Member"* %65, %1
  br i1 %67, label %8, label %12

68:                                               ; preds = %8, %79
  %69 = phi %"class.blink::Member"* [ %81, %79 ], [ %10, %8 ]
  %70 = phi %"class.blink::Member"* [ %80, %79 ], [ %9, %8 ]
  %71 = bitcast %"class.blink::Member"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.blink::Member"* %69 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %68
  %77 = inttoptr i64 %72 to i8*
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #15
  br label %79

79:                                               ; preds = %68, %76
  %80 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 1
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 1
  %82 = icmp eq %"class.blink::Member"* %80, %3
  br i1 %82, label %83, label %68

83:                                               ; preds = %30, %79, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8), i64, i64, %"class.blink::Member"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %150, label %10

10:                                               ; preds = %8, %143
  %11 = phi %"class.blink::Member"* [ %148, %143 ], [ %0, %8 ]
  %12 = phi %"class.blink::Member"* [ %147, %143 ], [ %1, %8 ]
  %13 = phi i64 [ %146, %143 ], [ %5, %8 ]
  %14 = phi i64 [ %145, %143 ], [ %4, %8 ]
  %15 = phi %"class.blink::Member"* [ %144, %143 ], [ %2, %8 ]
  %16 = icmp sgt i64 %14, %7
  %17 = icmp sgt i64 %13, %7
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %10
  %20 = icmp eq i64 %14, 0
  br i1 %20, label %150, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 0, i32 0, i32 0
  br label %24

23:                                               ; preds = %10
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE(%"class.blink::Member"* %11, %"class.blink::Member"* %12, %"class.blink::Member"* %15, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %3, i64 %14, i64 %13, %"class.blink::Member"* %6)
  br label %150

24:                                               ; preds = %21, %32
  %25 = phi %"class.blink::Member"* [ %11, %21 ], [ %33, %32 ]
  %26 = phi i64 [ %14, %21 ], [ %34, %32 ]
  %27 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %28 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %22, align 8
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 0, i32 0, i32 0
  %30 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %29, align 8
  %31 = tail call zeroext i1 %27(%"class.blink::StringKeyframe::PropertyResolver"* %28, %"class.blink::StringKeyframe::PropertyResolver"* %30) #15
  br i1 %31, label %36, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 1
  %34 = add nsw i64 %26, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %150, label %24

36:                                               ; preds = %24
  %37 = icmp slt i64 %26, %13
  br i1 %37, label %38, label %71

38:                                               ; preds = %36
  %39 = sdiv i64 %13, 2
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %39
  %41 = ptrtoint %"class.blink::Member"* %12 to i64
  %42 = ptrtoint %"class.blink::Member"* %25 to i64
  %43 = sub i64 %41, %42
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %66, label %45

45:                                               ; preds = %38
  %46 = ashr exact i64 %43, 3
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %40, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi i64 [ %46, %45 ], [ %62, %48 ]
  %50 = phi %"class.blink::Member"* [ %25, %45 ], [ %61, %48 ]
  %51 = lshr i64 %49, 1
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %50, i64 %51
  %53 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %54 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %47, align 8
  %55 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %52, i64 0, i32 0, i32 0
  %56 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %55, align 8
  %57 = tail call zeroext i1 %53(%"class.blink::StringKeyframe::PropertyResolver"* %54, %"class.blink::StringKeyframe::PropertyResolver"* %56) #15
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %52, i64 1
  %59 = xor i64 %51, -1
  %60 = add i64 %49, %59
  %61 = select i1 %57, %"class.blink::Member"* %50, %"class.blink::Member"* %58
  %62 = select i1 %57, i64 %51, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %48

64:                                               ; preds = %48
  %65 = ptrtoint %"class.blink::Member"* %61 to i64
  br label %66

66:                                               ; preds = %64, %38
  %67 = phi i64 [ %65, %64 ], [ %42, %38 ]
  %68 = phi %"class.blink::Member"* [ %61, %64 ], [ %25, %38 ]
  %69 = sub i64 %67, %42
  %70 = ashr exact i64 %69, 3
  br label %124

71:                                               ; preds = %36
  %72 = icmp eq i64 %26, 1
  br i1 %72, label %73, label %91

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::Member"* %25 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %12 to i64*
  %77 = load i64, i64* %76, align 8
  store atomic i64 %77, i64* %74 monotonic, align 8
  store atomic i64 %75, i64* %76 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %73
  %81 = bitcast %"class.blink::Member"* %25 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #15
  br label %84

84:                                               ; preds = %80, %73
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %150, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.blink::Member"* %12 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %89) #15
  br label %150

91:                                               ; preds = %71
  %92 = sdiv i64 %26, 2
  %93 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 %92
  %94 = ptrtoint %"class.blink::Member"* %15 to i64
  %95 = ptrtoint %"class.blink::Member"* %12 to i64
  %96 = sub i64 %94, %95
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %119, label %98

98:                                               ; preds = %91
  %99 = ashr exact i64 %96, 3
  %100 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %93, i64 0, i32 0, i32 0
  br label %101

101:                                              ; preds = %101, %98
  %102 = phi i64 [ %99, %98 ], [ %115, %101 ]
  %103 = phi %"class.blink::Member"* [ %12, %98 ], [ %114, %101 ]
  %104 = lshr i64 %102, 1
  %105 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %103, i64 %104
  %106 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %107 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %105, i64 0, i32 0, i32 0
  %108 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %107, align 8
  %109 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %100, align 8
  %110 = tail call zeroext i1 %106(%"class.blink::StringKeyframe::PropertyResolver"* %108, %"class.blink::StringKeyframe::PropertyResolver"* %109) #15
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %105, i64 1
  %112 = xor i64 %104, -1
  %113 = add i64 %102, %112
  %114 = select i1 %110, %"class.blink::Member"* %111, %"class.blink::Member"* %103
  %115 = select i1 %110, i64 %113, i64 %104
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %101

117:                                              ; preds = %101
  %118 = ptrtoint %"class.blink::Member"* %114 to i64
  br label %119

119:                                              ; preds = %117, %91
  %120 = phi i64 [ %118, %117 ], [ %95, %91 ]
  %121 = phi %"class.blink::Member"* [ %114, %117 ], [ %12, %91 ]
  %122 = sub i64 %120, %95
  %123 = ashr exact i64 %122, 3
  br label %124

124:                                              ; preds = %119, %66
  %125 = phi %"class.blink::Member"* [ %68, %66 ], [ %93, %119 ]
  %126 = phi %"class.blink::Member"* [ %40, %66 ], [ %121, %119 ]
  %127 = phi i64 [ %70, %66 ], [ %92, %119 ]
  %128 = phi i64 [ %39, %66 ], [ %123, %119 ]
  %129 = sub nsw i64 %26, %127
  %130 = sub nsw i64 %13, %128
  %131 = icmp eq %"class.blink::Member"* %125, %12
  br i1 %131, label %136, label %132

132:                                              ; preds = %124
  %133 = icmp eq %"class.blink::Member"* %12, %126
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = tail call %"class.blink::Member"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEEEET_S7_S7_S7_(%"class.blink::Member"* %125, %"class.blink::Member"* %12, %"class.blink::Member"* %126) #15
  br label %136

136:                                              ; preds = %124, %132, %134
  %137 = phi %"class.blink::Member"* [ %135, %134 ], [ %126, %124 ], [ %125, %132 ]
  %138 = add nsw i64 %128, %127
  %139 = add nsw i64 %130, %129
  %140 = icmp slt i64 %138, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"class.blink::Member"* %25, %"class.blink::Member"* %125, %"class.blink::Member"* %137, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %3, i64 %127, i64 %128, %"class.blink::Member"* %6, i64 %7)
  br label %143

142:                                              ; preds = %136
  tail call void @_ZNSt3__115__inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeEl(%"class.blink::Member"* %137, %"class.blink::Member"* %126, %"class.blink::Member"* %15, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8) %3, i64 %129, i64 %130, %"class.blink::Member"* %6, i64 %7)
  br label %143

143:                                              ; preds = %141, %142
  %144 = phi %"class.blink::Member"* [ %15, %141 ], [ %137, %142 ]
  %145 = phi i64 [ %129, %141 ], [ %127, %142 ]
  %146 = phi i64 [ %130, %141 ], [ %128, %142 ]
  %147 = phi %"class.blink::Member"* [ %126, %141 ], [ %125, %142 ]
  %148 = phi %"class.blink::Member"* [ %137, %141 ], [ %25, %142 ]
  %149 = icmp eq i64 %146, 0
  br i1 %149, label %150, label %10

150:                                              ; preds = %143, %19, %32, %8, %87, %84, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRPFbPN5blink14StringKeyframe16PropertyResolverES4_EPNS1_6MemberIS3_EEEEvT0_SB_SB_T_NS_15iterator_traitsISB_E15difference_typeESF_PNSE_10value_typeE(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** dereferenceable(8), i64, i64, %"class.blink::Member"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"class.blink::Member"* %1 to i64
  %9 = ptrtoint %"class.blink::Member"* %0 to i64
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %142, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.blink::Member"* %0, %1
  br i1 %12, label %471, label %13

13:                                               ; preds = %11
  %14 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %15 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %14 to i64
  %16 = sub i64 %15, %9
  %17 = lshr i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp ult i64 %18, 4
  br i1 %19, label %20, label %48

20:                                               ; preds = %138, %48, %13
  %21 = phi %"class.blink::Member"* [ %0, %48 ], [ %0, %13 ], [ %61, %138 ]
  %22 = phi %"class.blink::Member"* [ %6, %48 ], [ %6, %13 ], [ %62, %138 ]
  %23 = ptrtoint %"class.blink::Member"* %21 to i64
  %24 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %25 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %24 to i64
  %26 = sub i64 %25, %23
  %27 = lshr i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 7
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %20, %31
  %32 = phi %"class.blink::Member"* [ %38, %31 ], [ %21, %20 ]
  %33 = phi %"class.blink::Member"* [ %39, %31 ], [ %22, %20 ]
  %34 = phi i64 [ %40, %31 ], [ %29, %20 ]
  %35 = bitcast %"class.blink::Member"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Member"* %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 1
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %33, i64 1
  %40 = add i64 %34, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %31, !llvm.loop !158

42:                                               ; preds = %31, %20
  %43 = phi %"class.blink::Member"* [ undef, %20 ], [ %33, %31 ]
  %44 = phi %"class.blink::Member"* [ undef, %20 ], [ %39, %31 ]
  %45 = phi %"class.blink::Member"* [ %21, %20 ], [ %38, %31 ]
  %46 = phi %"class.blink::Member"* [ %22, %20 ], [ %39, %31 ]
  %47 = icmp ult i64 %26, 56
  br i1 %47, label %270, label %328

48:                                               ; preds = %13
  %49 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 -1, i32 0, i32 0
  %50 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %49 to i64
  %51 = sub i64 %50, %9
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %53
  %55 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %53
  %56 = icmp ugt %"class.blink::Member"* %55, %6
  %57 = icmp ugt %"class.blink::Member"* %54, %0
  %58 = and i1 %56, %57
  br i1 %58, label %20, label %59

59:                                               ; preds = %48
  %60 = and i64 %18, 4611686018427387900
  %61 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %60
  %62 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %60
  %63 = add nsw i64 %60, -4
  %64 = lshr exact i64 %63, 2
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 12
  br i1 %67, label %119, label %68

68:                                               ; preds = %59
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %71
  %74 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %71
  %75 = bitcast %"class.blink::Member"* %73 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8, !alias.scope !159
  %77 = getelementptr %"class.blink::Member", %"class.blink::Member"* %73, i64 2
  %78 = bitcast %"class.blink::Member"* %77 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8, !alias.scope !159
  %80 = bitcast %"class.blink::Member"* %74 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %80, align 8, !alias.scope !162, !noalias !159
  %81 = getelementptr %"class.blink::Member", %"class.blink::Member"* %74, i64 2
  %82 = bitcast %"class.blink::Member"* %81 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %82, align 8, !alias.scope !162, !noalias !159
  %83 = or i64 %71, 4
  %84 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %83
  %85 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %83
  %86 = bitcast %"class.blink::Member"* %84 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8, !alias.scope !159
  %88 = getelementptr %"class.blink::Member", %"class.blink::Member"* %84, i64 2
  %89 = bitcast %"class.blink::Member"* %88 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8, !alias.scope !159
  %91 = bitcast %"class.blink::Member"* %85 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %91, align 8, !alias.scope !162, !noalias !159
  %92 = getelementptr %"class.blink::Member", %"class.blink::Member"* %85, i64 2
  %93 = bitcast %"class.blink::Member"* %92 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %93, align 8, !alias.scope !162, !noalias !159
  %94 = or i64 %71, 8
  %95 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %94
  %96 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %94
  %97 = bitcast %"class.blink::Member"* %95 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8, !alias.scope !159
  %99 = getelementptr %"class.blink::Member", %"class.blink::Member"* %95, i64 2
  %100 = bitcast %"class.blink::Member"* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !159
  %102 = bitcast %"class.blink::Member"* %96 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %102, align 8, !alias.scope !162, !noalias !159
  %103 = getelementptr %"class.blink::Member", %"class.blink::Member"* %96, i64 2
  %104 = bitcast %"class.blink::Member"* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 8, !alias.scope !162, !noalias !159
  %105 = or i64 %71, 12
  %106 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %105
  %107 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %105
  %108 = bitcast %"class.blink::Member"* %106 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !159
  %110 = getelementptr %"class.blink::Member", %"class.blink::Member"* %106, i64 2
  %111 = bitcast %"class.blink::Member"* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !159
  %113 = bitcast %"class.blink::Member"* %107 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %113, align 8, !alias.scope !162, !noalias !159
  %114 = getelementptr %"class.blink::Member", %"class.blink::Member"* %107, i64 2
  %115 = bitcast %"class.blink::Member"* %114 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %115, align 8, !alias.scope !162, !noalias !159
  %116 = add i64 %71, 16
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !164

119:                                              ; preds = %70, %59
  %120 = phi i64 [ 0, %59 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr %"class.blink::Member", %"class.blink::Member"* %0, i64 %123
  %126 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %123
  %127 = bitcast %"class.blink::Member"* %125 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8, !alias.scope !159
  %129 = getelementptr %"class.blink::Member", %"class.blink::Member"* %125, i64 2
  %130 = bitcast %"class.blink::Member"* %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !159
  %132 = bitcast %"class.blink::Member"* %126 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %132, align 8, !alias.scope !162, !noalias !159
  %133 = getelementptr %"class.blink::Member", %"class.blink::Member"* %126, i64 2
  %134 = bitcast %"class.blink::Member"* %133 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %134, align 8, !alias.scope !162, !noalias !159
  %135 = add i64 %123, 4
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !165

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %18, %60
  %140 = add nsw i64 %60, -1
  %141 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %140
  br i1 %139, label %270, label %20

142:                                              ; preds = %7
  %143 = icmp eq %"class.blink::Member"* %1, %2
  br i1 %143, label %471, label %144

144:                                              ; preds = %142
  %145 = getelementptr %"class.blink::Member", %"class.blink::Member"* %2, i64 -1, i32 0, i32 0
  %146 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %145 to i64
  %147 = sub i64 %146, %8
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = icmp ult i64 %149, 4
  br i1 %150, label %151, label %178

151:                                              ; preds = %268, %178, %144
  %152 = phi %"class.blink::Member"* [ %1, %178 ], [ %1, %144 ], [ %191, %268 ]
  %153 = phi %"class.blink::Member"* [ %6, %178 ], [ %6, %144 ], [ %192, %268 ]
  %154 = ptrtoint %"class.blink::Member"* %152 to i64
  %155 = getelementptr %"class.blink::Member", %"class.blink::Member"* %2, i64 -1, i32 0, i32 0
  %156 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %155 to i64
  %157 = sub i64 %156, %154
  %158 = lshr i64 %157, 3
  %159 = add nuw nsw i64 %158, 1
  %160 = and i64 %159, 7
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %173, label %162

162:                                              ; preds = %151, %162
  %163 = phi %"class.blink::Member"* [ %169, %162 ], [ %152, %151 ]
  %164 = phi %"class.blink::Member"* [ %170, %162 ], [ %153, %151 ]
  %165 = phi i64 [ %171, %162 ], [ %160, %151 ]
  %166 = bitcast %"class.blink::Member"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.blink::Member"* %164 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %163, i64 1
  %170 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %164, i64 1
  %171 = add i64 %165, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %162, !llvm.loop !166

173:                                              ; preds = %162, %151
  %174 = phi %"class.blink::Member"* [ undef, %151 ], [ %170, %162 ]
  %175 = phi %"class.blink::Member"* [ %152, %151 ], [ %169, %162 ]
  %176 = phi %"class.blink::Member"* [ %153, %151 ], [ %170, %162 ]
  %177 = icmp ult i64 %157, 56
  br i1 %177, label %372, label %427

178:                                              ; preds = %144
  %179 = getelementptr %"class.blink::Member", %"class.blink::Member"* %2, i64 -1, i32 0, i32 0
  %180 = ptrtoint %"class.blink::StringKeyframe::PropertyResolver"** %179 to i64
  %181 = sub i64 %180, %8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %183
  %185 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %183
  %186 = icmp ugt %"class.blink::Member"* %185, %6
  %187 = icmp ugt %"class.blink::Member"* %184, %1
  %188 = and i1 %186, %187
  br i1 %188, label %151, label %189

189:                                              ; preds = %178
  %190 = and i64 %149, 4611686018427387900
  %191 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %190
  %192 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %190
  %193 = add nsw i64 %190, -4
  %194 = lshr exact i64 %193, 2
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 3
  %197 = icmp ult i64 %193, 12
  br i1 %197, label %249, label %198

198:                                              ; preds = %189
  %199 = sub nsw i64 %195, %196
  br label %200

200:                                              ; preds = %200, %198
  %201 = phi i64 [ 0, %198 ], [ %246, %200 ]
  %202 = phi i64 [ %199, %198 ], [ %247, %200 ]
  %203 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %201
  %204 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %201
  %205 = bitcast %"class.blink::Member"* %203 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 8, !alias.scope !167
  %207 = getelementptr %"class.blink::Member", %"class.blink::Member"* %203, i64 2
  %208 = bitcast %"class.blink::Member"* %207 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8, !alias.scope !167
  %210 = bitcast %"class.blink::Member"* %204 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %210, align 8, !alias.scope !170, !noalias !167
  %211 = getelementptr %"class.blink::Member", %"class.blink::Member"* %204, i64 2
  %212 = bitcast %"class.blink::Member"* %211 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %212, align 8, !alias.scope !170, !noalias !167
  %213 = or i64 %201, 4
  %214 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %213
  %215 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %213
  %216 = bitcast %"class.blink::Member"* %214 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8, !alias.scope !167
  %218 = getelementptr %"class.blink::Member", %"class.blink::Member"* %214, i64 2
  %219 = bitcast %"class.blink::Member"* %218 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 8, !alias.scope !167
  %221 = bitcast %"class.blink::Member"* %215 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %221, align 8, !alias.scope !170, !noalias !167
  %222 = getelementptr %"class.blink::Member", %"class.blink::Member"* %215, i64 2
  %223 = bitcast %"class.blink::Member"* %222 to <2 x i64>*
  store <2 x i64> %220, <2 x i64>* %223, align 8, !alias.scope !170, !noalias !167
  %224 = or i64 %201, 8
  %225 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %224
  %226 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %224
  %227 = bitcast %"class.blink::Member"* %225 to <2 x i64>*
  %228 = load <2 x i64>, <2 x i64>* %227, align 8, !alias.scope !167
  %229 = getelementptr %"class.blink::Member", %"class.blink::Member"* %225, i64 2
  %230 = bitcast %"class.blink::Member"* %229 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 8, !alias.scope !167
  %232 = bitcast %"class.blink::Member"* %226 to <2 x i64>*
  store <2 x i64> %228, <2 x i64>* %232, align 8, !alias.scope !170, !noalias !167
  %233 = getelementptr %"class.blink::Member", %"class.blink::Member"* %226, i64 2
  %234 = bitcast %"class.blink::Member"* %233 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %234, align 8, !alias.scope !170, !noalias !167
  %235 = or i64 %201, 12
  %236 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %235
  %237 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %235
  %238 = bitcast %"class.blink::Member"* %236 to <2 x i64>*
  %239 = load <2 x i64>, <2 x i64>* %238, align 8, !alias.scope !167
  %240 = getelementptr %"class.blink::Member", %"class.blink::Member"* %236, i64 2
  %241 = bitcast %"class.blink::Member"* %240 to <2 x i64>*
  %242 = load <2 x i64>, <2 x i64>* %241, align 8, !alias.scope !167
  %243 = bitcast %"class.blink::Member"* %237 to <2 x i64>*
  store <2 x i64> %239, <2 x i64>* %243, align 8, !alias.scope !170, !noalias !167
  %244 = getelementptr %"class.blink::Member", %"class.blink::Member"* %237, i64 2
  %245 = bitcast %"class.blink::Member"* %244 to <2 x i64>*
  store <2 x i64> %242, <2 x i64>* %245, align 8, !alias.scope !170, !noalias !167
  %246 = add i64 %201, 16
  %247 = add i64 %202, -4
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %200, !llvm.loop !172

249:                                              ; preds = %200, %189
  %250 = phi i64 [ 0, %189 ], [ %246, %200 ]
  %251 = icmp eq i64 %196, 0
  br i1 %251, label %268, label %252

252:                                              ; preds = %249, %252
  %253 = phi i64 [ %265, %252 ], [ %250, %249 ]
  %254 = phi i64 [ %266, %252 ], [ %196, %249 ]
  %255 = getelementptr %"class.blink::Member", %"class.blink::Member"* %1, i64 %253
  %256 = getelementptr %"class.blink::Member", %"class.blink::Member"* %6, i64 %253
  %257 = bitcast %"class.blink::Member"* %255 to <2 x i64>*
  %258 = load <2 x i64>, <2 x i64>* %257, align 8, !alias.scope !167
  %259 = getelementptr %"class.blink::Member", %"class.blink::Member"* %255, i64 2
  %260 = bitcast %"class.blink::Member"* %259 to <2 x i64>*
  %261 = load <2 x i64>, <2 x i64>* %260, align 8, !alias.scope !167
  %262 = bitcast %"class.blink::Member"* %256 to <2 x i64>*
  store <2 x i64> %258, <2 x i64>* %262, align 8, !alias.scope !170, !noalias !167
  %263 = getelementptr %"class.blink::Member", %"class.blink::Member"* %256, i64 2
  %264 = bitcast %"class.blink::Member"* %263 to <2 x i64>*
  store <2 x i64> %261, <2 x i64>* %264, align 8, !alias.scope !170, !noalias !167
  %265 = add i64 %253, 4
  %266 = add i64 %254, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %252, !llvm.loop !173

268:                                              ; preds = %252, %249
  %269 = icmp eq i64 %149, %190
  br i1 %269, label %372, label %151

270:                                              ; preds = %42, %328, %138
  %271 = phi %"class.blink::Member"* [ %141, %138 ], [ %43, %42 ], [ %365, %328 ]
  %272 = phi %"class.blink::Member"* [ %62, %138 ], [ %44, %42 ], [ %370, %328 ]
  %273 = icmp eq %"class.blink::Member"* %272, %6
  br i1 %273, label %471, label %274

274:                                              ; preds = %270, %323
  %275 = phi %"class.blink::Member"* [ %325, %323 ], [ %6, %270 ]
  %276 = phi %"class.blink::Member"* [ %326, %323 ], [ %0, %270 ]
  %277 = phi %"class.blink::Member"* [ %324, %323 ], [ %1, %270 ]
  %278 = icmp eq %"class.blink::Member"* %277, %2
  br i1 %278, label %279, label %294

279:                                              ; preds = %274, %290
  %280 = phi %"class.blink::Member"* [ %292, %290 ], [ %276, %274 ]
  %281 = phi %"class.blink::Member"* [ %291, %290 ], [ %275, %274 ]
  %282 = bitcast %"class.blink::Member"* %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.blink::Member"* %280 to i64*
  store atomic i64 %283, i64* %284 monotonic, align 8
  %285 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %279
  %288 = inttoptr i64 %283 to i8*
  %289 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %288) #15
  br label %290

290:                                              ; preds = %287, %279
  %291 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %281, i64 1
  %292 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %280, i64 1
  %293 = icmp eq %"class.blink::Member"* %281, %271
  br i1 %293, label %471, label %279

294:                                              ; preds = %274
  %295 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %296 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %277, i64 0, i32 0, i32 0
  %297 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %275, i64 0, i32 0, i32 0
  %299 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %298, align 8
  %300 = tail call zeroext i1 %295(%"class.blink::StringKeyframe::PropertyResolver"* %297, %"class.blink::StringKeyframe::PropertyResolver"* %299) #15
  br i1 %300, label %301, label %312

301:                                              ; preds = %294
  %302 = bitcast %"class.blink::Member"* %277 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.blink::Member"* %276 to i64*
  store atomic i64 %303, i64* %304 monotonic, align 8
  %305 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %301
  %308 = inttoptr i64 %303 to i8*
  %309 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %308) #15
  br label %310

310:                                              ; preds = %307, %301
  %311 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %277, i64 1
  br label %323

312:                                              ; preds = %294
  %313 = bitcast %"class.blink::Member"* %275 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.blink::Member"* %276 to i64*
  store atomic i64 %314, i64* %315 monotonic, align 8
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %312
  %319 = inttoptr i64 %314 to i8*
  %320 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %319) #15
  br label %321

321:                                              ; preds = %318, %312
  %322 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %275, i64 1
  br label %323

323:                                              ; preds = %321, %310
  %324 = phi %"class.blink::Member"* [ %311, %310 ], [ %277, %321 ]
  %325 = phi %"class.blink::Member"* [ %275, %310 ], [ %322, %321 ]
  %326 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %276, i64 1
  %327 = icmp eq %"class.blink::Member"* %325, %272
  br i1 %327, label %471, label %274

328:                                              ; preds = %42, %328
  %329 = phi %"class.blink::Member"* [ %369, %328 ], [ %45, %42 ]
  %330 = phi %"class.blink::Member"* [ %370, %328 ], [ %46, %42 ]
  %331 = bitcast %"class.blink::Member"* %329 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.blink::Member"* %330 to i64*
  store i64 %332, i64* %333, align 8
  %334 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 1
  %335 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 1
  %336 = bitcast %"class.blink::Member"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.blink::Member"* %335 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 2
  %340 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 2
  %341 = bitcast %"class.blink::Member"* %339 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"class.blink::Member"* %340 to i64*
  store i64 %342, i64* %343, align 8
  %344 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 3
  %345 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 3
  %346 = bitcast %"class.blink::Member"* %344 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.blink::Member"* %345 to i64*
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 4
  %350 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 4
  %351 = bitcast %"class.blink::Member"* %349 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.blink::Member"* %350 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 5
  %355 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 5
  %356 = bitcast %"class.blink::Member"* %354 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.blink::Member"* %355 to i64*
  store i64 %357, i64* %358, align 8
  %359 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 6
  %360 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 6
  %361 = bitcast %"class.blink::Member"* %359 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"class.blink::Member"* %360 to i64*
  store i64 %362, i64* %363, align 8
  %364 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 7
  %365 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 7
  %366 = bitcast %"class.blink::Member"* %364 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = bitcast %"class.blink::Member"* %365 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %329, i64 8
  %370 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %330, i64 8
  %371 = icmp eq %"class.blink::Member"* %369, %1
  br i1 %371, label %270, label %328, !llvm.loop !174

372:                                              ; preds = %173, %427, %268
  %373 = phi %"class.blink::Member"* [ %192, %268 ], [ %174, %173 ], [ %469, %427 ]
  %374 = icmp eq %"class.blink::Member"* %373, %6
  br i1 %374, label %471, label %375

375:                                              ; preds = %372, %423
  %376 = phi %"class.blink::Member"* [ %404, %423 ], [ %2, %372 ]
  %377 = phi %"class.blink::Member"* [ %425, %423 ], [ %373, %372 ]
  %378 = phi %"class.blink::Member"* [ %424, %423 ], [ %1, %372 ]
  %379 = icmp eq %"class.blink::Member"* %378, %0
  br i1 %379, label %380, label %395

380:                                              ; preds = %375, %393
  %381 = phi %"class.blink::Member"* [ %383, %393 ], [ %377, %375 ]
  %382 = phi %"class.blink::Member"* [ %384, %393 ], [ %376, %375 ]
  %383 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %381, i64 -1
  %384 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %382, i64 -1
  %385 = bitcast %"class.blink::Member"* %383 to i64*
  %386 = load i64, i64* %385, align 8
  %387 = bitcast %"class.blink::Member"* %384 to i64*
  store atomic i64 %386, i64* %387 monotonic, align 8
  %388 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %393, label %390

390:                                              ; preds = %380
  %391 = inttoptr i64 %386 to i8*
  %392 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %391) #15
  br label %393

393:                                              ; preds = %390, %380
  %394 = icmp eq %"class.blink::Member"* %383, %6
  br i1 %394, label %471, label %380

395:                                              ; preds = %375
  %396 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %378, i64 -1
  %397 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %377, i64 -1
  %398 = load i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)*, i1 (%"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"*)** %3, align 8
  %399 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %397, i64 0, i32 0, i32 0
  %400 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %399, align 8
  %401 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %396, i64 0, i32 0, i32 0
  %402 = load %"class.blink::StringKeyframe::PropertyResolver"*, %"class.blink::StringKeyframe::PropertyResolver"** %401, align 8
  %403 = tail call zeroext i1 %398(%"class.blink::StringKeyframe::PropertyResolver"* %400, %"class.blink::StringKeyframe::PropertyResolver"* %402) #15
  %404 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %376, i64 -1
  br i1 %403, label %405, label %414

405:                                              ; preds = %395
  %406 = bitcast %"class.blink::Member"* %396 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = bitcast %"class.blink::Member"* %404 to i64*
  store atomic i64 %407, i64* %408 monotonic, align 8
  %409 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %423, label %411

411:                                              ; preds = %405
  %412 = inttoptr i64 %407 to i8*
  %413 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %412) #15
  br label %423

414:                                              ; preds = %395
  %415 = bitcast %"class.blink::Member"* %397 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = bitcast %"class.blink::Member"* %404 to i64*
  store atomic i64 %416, i64* %417 monotonic, align 8
  %418 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %423, label %420

420:                                              ; preds = %414
  %421 = inttoptr i64 %416 to i8*
  %422 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %421) #15
  br label %423

423:                                              ; preds = %420, %414, %411, %405
  %424 = phi %"class.blink::Member"* [ %396, %405 ], [ %396, %411 ], [ %378, %414 ], [ %378, %420 ]
  %425 = phi %"class.blink::Member"* [ %377, %405 ], [ %377, %411 ], [ %397, %414 ], [ %397, %420 ]
  %426 = icmp eq %"class.blink::Member"* %425, %6
  br i1 %426, label %471, label %375

427:                                              ; preds = %173, %427
  %428 = phi %"class.blink::Member"* [ %468, %427 ], [ %175, %173 ]
  %429 = phi %"class.blink::Member"* [ %469, %427 ], [ %176, %173 ]
  %430 = bitcast %"class.blink::Member"* %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.blink::Member"* %429 to i64*
  store i64 %431, i64* %432, align 8
  %433 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 1
  %434 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 1
  %435 = bitcast %"class.blink::Member"* %433 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = bitcast %"class.blink::Member"* %434 to i64*
  store i64 %436, i64* %437, align 8
  %438 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 2
  %439 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 2
  %440 = bitcast %"class.blink::Member"* %438 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.blink::Member"* %439 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 3
  %444 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 3
  %445 = bitcast %"class.blink::Member"* %443 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.blink::Member"* %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 4
  %449 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 4
  %450 = bitcast %"class.blink::Member"* %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.blink::Member"* %449 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 5
  %454 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 5
  %455 = bitcast %"class.blink::Member"* %453 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.blink::Member"* %454 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 6
  %459 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 6
  %460 = bitcast %"class.blink::Member"* %458 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.blink::Member"* %459 to i64*
  store i64 %461, i64* %462, align 8
  %463 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 7
  %464 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 7
  %465 = bitcast %"class.blink::Member"* %463 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.blink::Member"* %464 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %428, i64 8
  %469 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %429, i64 8
  %470 = icmp eq %"class.blink::Member"* %468, %2
  br i1 %470, label %372, label %427, !llvm.loop !175

471:                                              ; preds = %323, %290, %423, %393, %142, %11, %372, %270
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZNSt3__116__rotate_forwardIPN5blink6MemberINS1_14StringKeyframe16PropertyResolverEEEEET_S7_S7_S7_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %30, %3
  %5 = phi %"class.blink::Member"* [ %1, %3 ], [ %31, %30 ]
  %6 = phi %"class.blink::Member"* [ %0, %3 ], [ %26, %30 ]
  %7 = phi %"class.blink::Member"* [ %1, %3 ], [ %27, %30 ]
  %8 = bitcast %"class.blink::Member"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::Member"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  store atomic i64 %11, i64* %8 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::Member"* %6 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #15
  br label %18

18:                                               ; preds = %14, %4
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.blink::Member"* %7 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #15
  br label %25

25:                                               ; preds = %18, %21
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 1
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 1
  %28 = icmp eq %"class.blink::Member"* %27, %2
  %29 = icmp eq %"class.blink::Member"* %26, %5
  br i1 %28, label %32, label %30

30:                                               ; preds = %25
  %31 = select i1 %29, %"class.blink::Member"* %27, %"class.blink::Member"* %5
  br label %4

32:                                               ; preds = %25
  br i1 %29, label %65, label %33

33:                                               ; preds = %32, %63
  %34 = phi %"class.blink::Member"* [ %64, %63 ], [ %5, %32 ]
  %35 = phi %"class.blink::Member"* [ %58, %63 ], [ %26, %32 ]
  %36 = phi %"class.blink::Member"* [ %59, %63 ], [ %5, %32 ]
  br label %37

37:                                               ; preds = %33, %62
  %38 = phi %"class.blink::Member"* [ %58, %62 ], [ %35, %33 ]
  %39 = phi %"class.blink::Member"* [ %34, %62 ], [ %36, %33 ]
  %40 = bitcast %"class.blink::Member"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member"* %39 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.blink::Member"* %38 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %46, %37
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member"* %39 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #15
  br label %57

57:                                               ; preds = %50, %53
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 1
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 1
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = icmp eq %"class.blink::Member"* %58, %34
  br i1 %60, label %62, label %63

62:                                               ; preds = %57
  br i1 %61, label %65, label %37

63:                                               ; preds = %57
  %64 = select i1 %61, %"class.blink::Member"* %59, %"class.blink::Member"* %34
  br label %33

65:                                               ; preds = %62, %32
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8Keyframe24PropertySpecificKeyframeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8Keyframe24PropertySpecificKeyframeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8Keyframe24PropertySpecificKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe::PropertySpecificKeyframe"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8Keyframe24PropertySpecificKeyframeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  %3 = bitcast i8* %0 to void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %4 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %3, align 8
  %5 = load void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, void (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %4, align 8
  tail call void %5(%"class.blink::Keyframe::PropertySpecificKeyframe"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8Keyframe24PropertySpecificKeyframeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"*, double, %"class.blink::TimingFunction"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdPNS_14TimingFunctionEN3WTF6StringERNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* dereferenceable(8), %"class.blink::TimingFunction"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 40) #15
  %7 = bitcast i8* %6 to %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*
  %8 = load double, double* %0, align 8
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %1, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %18

18:                                               ; preds = %4, %11, %15
  %19 = load i32, i32* %3, align 4
  %20 = bitcast i8* %6 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %20, double %8, %"class.blink::TimingFunction"* %9, i32 %19) #15
  %21 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 32
  %25 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %18, %27, %42
  %45 = getelementptr inbounds i8, i8* %6, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23CompositorKeyframeValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CompositorKeyframeValue"*
  %4 = bitcast i8* %1 to void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)**, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)*, void (%"class.blink::CompositorKeyframeValue"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CompositorKeyframeValue"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27CSSPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEEPKNS_8CSSValueERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* dereferenceable(8), %class.scoped_refptr* dereferenceable(8), %"class.blink::CSSValue"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 48) #15
  %7 = bitcast i8* %6 to %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"*
  %8 = load double, double* %0, align 8
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %10 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %9, align 8
  %11 = icmp eq %"class.blink::TimingFunction"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %4, %12, %16
  %20 = bitcast %"class.blink::CSSValue"** %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i32, i32* %3, align 4
  %23 = bitcast i8* %6 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %23, double %8, %"class.blink::TimingFunction"* %10, i32 %22) #15
  %24 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27CSSPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %6, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 %21, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %6, i64 40
  %28 = bitcast i8* %27 to %"class.blink::CompositorKeyframeValue"**
  store %"class.blink::CompositorKeyframeValue"* null, %"class.blink::CompositorKeyframeValue"** %28, align 8
  %29 = getelementptr inbounds i8, i8* %6, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::StringKeyframe::CSSPropertySpecificKeyframe"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* @_ZN5blink25MakeGarbageCollectedTraitINS_14StringKeyframe27SVGPropertySpecificKeyframeEE4CallIJRdRK13scoped_refptrINS_14TimingFunctionEERKN3WTF6StringERKNS_11EffectModel18CompositeOperationEEEEPS2_DpOT_(double* dereferenceable(8), %class.scoped_refptr* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8Keyframe24PropertySpecificKeyframeEEEPhm(i64 40) #15
  %7 = bitcast i8* %6 to %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"*
  %8 = load double, double* %0, align 8
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %10 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %9, align 8
  %11 = icmp eq %"class.blink::TimingFunction"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %4, %12, %16
  %20 = load i32, i32* %3, align 4
  %21 = bitcast i8* %6 to %"class.blink::Keyframe::PropertySpecificKeyframe"*
  call void @_ZN5blink8Keyframe24PropertySpecificKeyframeC2Ed13scoped_refptrINS_14TimingFunctionEENS_11EffectModel18CompositeOperationE(%"class.blink::Keyframe::PropertySpecificKeyframe"* %21, double %8, %"class.blink::TimingFunction"* %10, i32 %20) #15
  %22 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink14StringKeyframe27SVGPropertySpecificKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds i8, i8* %6, i64 32
  %26 = bitcast i8* %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #15
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !3

42:                                               ; preds = %33
  call void @llvm.trap() #15
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %45

45:                                               ; preds = %19, %28, %43
  %46 = getelementptr inbounds i8, i8* %6, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::StringKeyframe::SVGPropertySpecificKeyframe"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_25CSSKeyframeShorthandValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.11"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.11"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink25CSSKeyframeShorthandValueC1ENS_13CSSPropertyIDEPNS_28ImmutableCSSPropertyValueSetE(%"class.blink::CSSKeyframeShorthandValue"*, i32, %"class.blink::ImmutableCSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28ImmutableCSSPropertyValueSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPropertyValueSet"*
  tail call void @_ZNK5blink19CSSPropertyValueSet5TraceEPNS_7VisitorE(%"class.blink::CSSPropertyValueSet"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyEPKNS_8CSSValueE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyEPKNS_8CSSValueE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyEPKNS_8CSSValueE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink12_GLOBAL__N_116ToPropertyHandleERKNS_11CSSPropertyEPKNS_8CSSValueE"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!12 = distinct !{!12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!13 = distinct !{!13, !14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!30 = !{!"branch_weights", i32 2000, i32 1}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!34 = distinct !{!34, !35, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!38 = distinct !{!38, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!39 = distinct !{!39, !40, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!43 = distinct !{!43, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!44 = distinct !{!44, !45, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!48 = distinct !{!48, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!49 = distinct !{!49, !50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!51 = !{!"branch_weights", i32 1, i32 1048575}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!54 = distinct !{!54, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!55 = distinct !{!55, !56, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!59 = distinct !{!59, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!60 = distinct !{!60, !61, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!61 = distinct !{!61, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!64 = distinct !{!64, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!65 = distinct !{!65, !66, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!69 = distinct !{!69, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!70 = distinct !{!70, !71, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!71 = distinct !{!71, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!72 = !{!73, !75}
!73 = distinct !{!73, !74, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!74 = distinct !{!74, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!75 = distinct !{!75, !76, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!76 = distinct !{!76, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!77 = !{!78, !80}
!78 = distinct !{!78, !79, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!79 = distinct !{!79, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!80 = distinct !{!80, !81, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!81 = distinct !{!81, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!82 = !{!83, !85}
!83 = distinct !{!83, !84, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!84 = distinct !{!84, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!85 = distinct !{!85, !86, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!86 = distinct !{!86, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!87 = !{!88, !90}
!88 = distinct !{!88, !89, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!89 = distinct !{!89, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!90 = distinct !{!90, !91, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!91 = distinct !{!91, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!92 = !{!93, !95}
!93 = distinct !{!93, !94, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!94 = distinct !{!94, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!95 = distinct !{!95, !96, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!96 = distinct !{!96, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv: argument 0"}
!99 = distinct !{!99, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv"}
!100 = !{!101, !103}
!101 = distinct !{!101, !102, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!102 = distinct !{!102, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!103 = distinct !{!103, !104, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!104 = distinct !{!104, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!105 = !{!106, !108}
!106 = distinct !{!106, !107, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!107 = distinct !{!107, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!108 = distinct !{!108, !109, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!109 = distinct !{!109, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!110 = !{!111, !113}
!111 = distinct !{!111, !112, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!112 = distinct !{!112, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!113 = distinct !{!113, !114, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!114 = distinct !{!114, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv: argument 0"}
!117 = distinct !{!117, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv"}
!118 = !{!119, !121}
!119 = distinct !{!119, !120, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!120 = distinct !{!120, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!121 = distinct !{!121, !122, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!122 = distinct !{!122, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!123 = !{!124, !126}
!124 = distinct !{!124, !125, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!125 = distinct !{!125, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!126 = distinct !{!126, !127, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!127 = distinct !{!127, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!128 = !{!129, !131}
!129 = distinct !{!129, !130, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!130 = distinct !{!130, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!131 = distinct !{!131, !132, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!132 = distinct !{!132, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!133 = !{!134, !136}
!134 = distinct !{!134, !135, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!135 = distinct !{!135, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!136 = distinct !{!136, !137, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!137 = distinct !{!137, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!138 = !{!139}
!139 = distinct !{!139, !140}
!140 = distinct !{!140, !"LVerDomain"}
!141 = !{!142}
!142 = distinct !{!142, !140}
!143 = distinct !{!143, !144}
!144 = !{!"llvm.loop.isvectorized", i32 1}
!145 = distinct !{!145, !146}
!146 = !{!"llvm.loop.unroll.disable"}
!147 = distinct !{!147, !146}
!148 = distinct !{!148, !144}
!149 = !{!150}
!150 = distinct !{!150, !151}
!151 = distinct !{!151, !"LVerDomain"}
!152 = !{!153}
!153 = distinct !{!153, !151}
!154 = distinct !{!154, !144}
!155 = distinct !{!155, !146}
!156 = distinct !{!156, !146}
!157 = distinct !{!157, !144}
!158 = distinct !{!158, !146}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !144}
!165 = distinct !{!165, !146}
!166 = distinct !{!166, !146}
!167 = !{!168}
!168 = distinct !{!168, !169}
!169 = distinct !{!169, !"LVerDomain"}
!170 = !{!171}
!171 = distinct !{!171, !169}
!172 = distinct !{!172, !144}
!173 = distinct !{!173, !146}
!174 = distinct !{!174, !144}
!175 = distinct !{!175, !144}
