; ModuleID = '../../cc/raster/bitmap_raster_buffer_provider.cc'
source_filename = "../../cc/raster/bitmap_raster_buffer_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::BitmapRasterBufferProvider" = type { %"class.cc::RasterBufferProvider", %"class.cc::LayerTreeFrameSink"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr, %class.scoped_refptr.0, %class.scoped_refptr.1, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.0 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.5", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.cc::RasterBuffer" = type { i32 (...)** }
%"class.cc::ResourcePool::InUsePoolResource" = type { i8, %"class.cc::ResourcePool::PoolResource"* }
%"class.cc::ResourcePool::PoolResource" = type { i64, %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i64, %"class.base::TimeTicks", %"class.gfx::Rect", i8, %"class.util::IdType", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.25" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.cc::ResourcePool::GpuBacking"* }
%"class.cc::ResourcePool::GpuBacking" = type { i32 (...)**, %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, i8, i8, %"struct.gpu::SyncToken" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.20", i64 }
%"class.util::IdType.20" = type { %"class.base::StrongAlias.21" }
%"class.base::StrongAlias.21" = type { i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.cc::ResourcePool::SoftwareBacking"* }
%"class.cc::ResourcePool::SoftwareBacking" = type { i32 (...)**, %"struct.gpu::Mailbox" }
%"struct.base::MappedReadOnlyRegion" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::vector" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.45, i8, [7 x i8] }>
%class.scoped_refptr.45 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.46", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.47" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.cc::(anonymous namespace)::BitmapSoftwareBacking" = type { %"class.cc::ResourcePool::SoftwareBacking", %"class.cc::LayerTreeFrameSink"*, %"class.base::WritableSharedMemoryMapping" }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.57", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.68" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::map.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector.77" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.76 }
%union.anon.76 = type { i64 }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.78" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl" = type <{ %"class.cc::RasterBuffer", %"class.gfx::Size", %"class.gfx::ColorSpace", [4 x i8], i8*, i8, [7 x i8] }>
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86", [4 x i8], i64, %class.scoped_refptr.87, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.87 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.gfx::AxisTransform2d" = type opaque
%"struct.cc::RasterSource::PlaybackSettings" = type { i8, i32, %"class.cc::ImageProvider"* }
%"class.cc::ImageProvider" = type opaque
%class.GURL = type opaque
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }

$_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE = comdat any

$_ZN2cc12ResourcePool15SoftwareBackingD2Ev = comdat any

$_ZN2cc12ResourcePool15SoftwareBackingD0Ev = comdat any

$_ZTVN2cc12ResourcePool15SoftwareBackingE = comdat any

@_ZTVN2cc26BitmapRasterBufferProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::BitmapRasterBufferProvider"*)* @_ZN2cc26BitmapRasterBufferProviderD2Ev to i8*), i8* bitcast (void (%"class.cc::BitmapRasterBufferProvider"*)* @_ZN2cc26BitmapRasterBufferProviderD0Ev to i8*), i8* bitcast (%"class.cc::RasterBuffer"* (%"class.cc::BitmapRasterBufferProvider"*, %"class.cc::ResourcePool::InUsePoolResource"*, i64, i64, i1, i1, i1)* @_ZN2cc26BitmapRasterBufferProvider22AcquireBufferForRasterERKNS_12ResourcePool17InUsePoolResourceEmmbbb to i8*), i8* bitcast (void (%"class.cc::BitmapRasterBufferProvider"*)* @_ZN2cc26BitmapRasterBufferProvider5FlushEv to i8*), i8* bitcast (i32 (%"class.cc::BitmapRasterBufferProvider"*)* @_ZNK2cc26BitmapRasterBufferProvider17GetResourceFormatEv to i8*), i8* bitcast (i1 (%"class.cc::BitmapRasterBufferProvider"*)* @_ZNK2cc26BitmapRasterBufferProvider23IsResourcePremultipliedEv to i8*), i8* bitcast (i1 (%"class.cc::BitmapRasterBufferProvider"*)* @_ZNK2cc26BitmapRasterBufferProvider36CanPartialRasterIntoProvidedResourceEv to i8*), i8* bitcast (i1 (%"class.cc::BitmapRasterBufferProvider"*, %"class.cc::ResourcePool::InUsePoolResource"*)* @_ZNK2cc26BitmapRasterBufferProvider21IsResourceReadyToDrawERKNS_12ResourcePool17InUsePoolResourceE to i8*), i8* bitcast (i64 (%"class.cc::BitmapRasterBufferProvider"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*, i64)* @_ZNK2cc26BitmapRasterBufferProvider22SetReadyToDrawCallbackERKNSt3__16vectorIPKNS_12ResourcePool17InUsePoolResourceENS1_9allocatorIS6_EEEEN4base12OnceCallbackIFvvEEEm to i8*), i8* bitcast (void (%"class.cc::RasterBufferProvider"*, %"class.base::WaitableEvent"*)* @_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE to i8*), i8* bitcast (void (%"class.cc::BitmapRasterBufferProvider"*)* @_ZN2cc26BitmapRasterBufferProvider8ShutdownEv to i8*)] }, align 8
@_ZTVN2cc12_GLOBAL__N_121BitmapSoftwareBackingE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*)* @_ZN2cc12_GLOBAL__N_121BitmapSoftwareBackingD2Ev to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*)* @_ZN2cc12_GLOBAL__N_121BitmapSoftwareBackingD0Ev to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)* @_ZNK2cc12_GLOBAL__N_121BitmapSoftwareBacking12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpERKNS3_23MemoryAllocatorDumpGuidEmi to i8*)] }, align 8
@_ZTVN2cc12ResourcePool15SoftwareBackingE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ResourcePool::SoftwareBacking"*)* @_ZN2cc12ResourcePool15SoftwareBackingD2Ev to i8*), i8* bitcast (void (%"class.cc::ResourcePool::SoftwareBacking"*)* @_ZN2cc12ResourcePool15SoftwareBackingD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2cc12_GLOBAL__N_122BitmapRasterBufferImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::RasterBuffer"*)* @_ZN2cc12RasterBufferD2Ev to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"*)* @_ZN2cc12_GLOBAL__N_122BitmapRasterBufferImplD0Ev to i8*), i8* bitcast (void (%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"*, %"class.cc::RasterSource"*, %"class.gfx::Rect"*, %"class.gfx::Rect"*, i64, %"class.gfx::AxisTransform2d"*, %"struct.cc::RasterSource::PlaybackSettings"*, %class.GURL*)* @_ZN2cc12_GLOBAL__N_122BitmapRasterBufferImpl8PlaybackEPKNS_12RasterSourceERKN3gfx4RectES8_mRKNS5_15AxisTransform2dERKNS2_16PlaybackSettingsERK4GURL to i8*), i8* bitcast (i1 (%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"*)* @_ZNK2cc12_GLOBAL__N_122BitmapRasterBufferImpl32SupportsBackgroundThreadPriorityEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [29 x i8] c"BitmapRasterBuffer::Playback\00", align 1

@_ZN2cc26BitmapRasterBufferProviderC1EPNS_18LayerTreeFrameSinkE = hidden unnamed_addr alias void (%"class.cc::BitmapRasterBufferProvider"*, %"class.cc::LayerTreeFrameSink"*), void (%"class.cc::BitmapRasterBufferProvider"*, %"class.cc::LayerTreeFrameSink"*)* @_ZN2cc26BitmapRasterBufferProviderC2EPNS_18LayerTreeFrameSinkE
@_ZN2cc26BitmapRasterBufferProviderD1Ev = hidden unnamed_addr alias void (%"class.cc::BitmapRasterBufferProvider"*), void (%"class.cc::BitmapRasterBufferProvider"*)* @_ZN2cc26BitmapRasterBufferProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26BitmapRasterBufferProviderC2EPNS_18LayerTreeFrameSinkE(%"class.cc::BitmapRasterBufferProvider"*, %"class.cc::LayerTreeFrameSink"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 0
  tail call void @_ZN2cc20RasterBufferProviderC2Ev(%"class.cc::RasterBufferProvider"* %3) #9
  %4 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2cc26BitmapRasterBufferProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 1
  store %"class.cc::LayerTreeFrameSink"* %1, %"class.cc::LayerTreeFrameSink"** %5, align 8
  ret void
}

declare void @_ZN2cc20RasterBufferProviderC2Ev(%"class.cc::RasterBufferProvider"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc20RasterBufferProviderD2Ev(%"class.cc::RasterBufferProvider"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26BitmapRasterBufferProviderD2Ev(%"class.cc::BitmapRasterBufferProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 0
  tail call void @_ZN2cc20RasterBufferProviderD2Ev(%"class.cc::RasterBufferProvider"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc26BitmapRasterBufferProviderD0Ev(%"class.cc::BitmapRasterBufferProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 0
  tail call void @_ZN2cc20RasterBufferProviderD2Ev(%"class.cc::RasterBufferProvider"* %2) #9
  %3 = bitcast %"class.cc::BitmapRasterBufferProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::RasterBuffer"* @_ZN2cc26BitmapRasterBufferProvider22AcquireBufferForRasterERKNS_12ResourcePool17InUsePoolResourceEmmbbb(%"class.cc::BitmapRasterBufferProvider"* nocapture readonly, %"class.cc::ResourcePool::InUsePoolResource"* nocapture readonly dereferenceable(16), i64, i64, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca %"struct.base::MappedReadOnlyRegion", align 8
  %9 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %10 = getelementptr inbounds %"class.cc::ResourcePool::InUsePoolResource", %"class.cc::ResourcePool::InUsePoolResource"* %1, i64 0, i32 1
  %11 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %11, i64 0, i32 1
  %13 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %11, i64 0, i32 10, i32 0, i32 0, i32 0
  %14 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %13, align 8
  %15 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %14, null
  br i1 %15, label %16, label %59

16:                                               ; preds = %7
  %17 = tail call i8* @_Znwm(i64 80) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 80, i1 false) #9
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12ResourcePool15SoftwareBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to %"struct.gpu::Mailbox"*
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %20) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12_GLOBAL__N_121BitmapSoftwareBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 32
  %22 = bitcast i8* %21 to %"class.base::WritableSharedMemoryMapping"*
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %22) #9
  %23 = ptrtoint i8* %17 to i64
  %24 = getelementptr inbounds %"class.cc::BitmapRasterBufferProvider", %"class.cc::BitmapRasterBufferProvider"* %0, i64 0, i32 1
  %25 = bitcast %"class.cc::LayerTreeFrameSink"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 24
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = tail call { i64, i64 } @_ZN3viz12SharedBitmap10GenerateIdEv() #9
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = bitcast i8* %19 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %17, i64 16
  %34 = bitcast i8* %33 to i64*
  store i64 %31, i64* %34, align 8
  %35 = bitcast %"struct.base::MappedReadOnlyRegion"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %35) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 112, i1 false)
  call void @_ZN3viz17bitmap_allocation20AllocateSharedBitmapERKN3gfx4SizeENS_14ResourceFormatE(%"struct.base::MappedReadOnlyRegion"* nonnull sret %8, %"class.gfx::Size"* dereferenceable(8) %12, i32 0) #9
  %36 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 1
  %37 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %22, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %36) #9
  %38 = load %"class.cc::LayerTreeFrameSink"*, %"class.cc::LayerTreeFrameSink"** %24, align 8
  %39 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 0
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %9, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %39) #9
  %40 = bitcast %"class.cc::LayerTreeFrameSink"* %38 to void (%"class.cc::LayerTreeFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)***
  %41 = load void (%"class.cc::LayerTreeFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)**, void (%"class.cc::LayerTreeFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)*** %40, align 8
  %42 = load void (%"class.cc::LayerTreeFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)*, void (%"class.cc::LayerTreeFrameSink"*, %"class.base::ReadOnlySharedMemoryRegion"*, %"struct.gpu::Mailbox"*)** %41, align 8
  call void %42(%"class.cc::LayerTreeFrameSink"* %38, %"class.base::ReadOnlySharedMemoryRegion"* nonnull %9, %"struct.gpu::Mailbox"* dereferenceable(16) %20) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %9) #9
  %43 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  %44 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %43, i64 0, i32 10
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.25"* %44 to i64*
  store i64 %23, i64* %47, align 8
  %48 = icmp eq %"class.cc::ResourcePool::SoftwareBacking"* %46, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %16
  %50 = bitcast %"class.cc::ResourcePool::SoftwareBacking"* %46 to void (%"class.cc::ResourcePool::SoftwareBacking"*)***
  %51 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)**, void (%"class.cc::ResourcePool::SoftwareBacking"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %51, i64 1
  %53 = load void (%"class.cc::ResourcePool::SoftwareBacking"*)*, void (%"class.cc::ResourcePool::SoftwareBacking"*)** %52, align 8
  call void %53(%"class.cc::ResourcePool::SoftwareBacking"* nonnull %46) #9
  br label %54

54:                                               ; preds = %49, %16
  %55 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %8, i64 0, i32 1, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %55) #9
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %35) #9
  %56 = load %"class.cc::ResourcePool::PoolResource"*, %"class.cc::ResourcePool::PoolResource"** %10, align 8
  %57 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %56, i64 0, i32 10, i32 0, i32 0, i32 0
  %58 = load %"class.cc::ResourcePool::SoftwareBacking"*, %"class.cc::ResourcePool::SoftwareBacking"** %57, align 8
  br label %59

59:                                               ; preds = %54, %7
  %60 = phi %"class.cc::ResourcePool::SoftwareBacking"* [ %58, %54 ], [ %14, %7 ]
  %61 = getelementptr inbounds %"class.cc::ResourcePool::SoftwareBacking", %"class.cc::ResourcePool::SoftwareBacking"* %60, i64 1, i32 1, i32 0, i64 8
  %62 = bitcast i8* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = call i8* @_Znwm(i64 104) #10
  %65 = bitcast i8* %64 to %"class.cc::RasterBuffer"*
  call void @_ZN2cc12RasterBufferC2Ev(%"class.cc::RasterBuffer"* nonnull %65) #9
  %66 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2cc12_GLOBAL__N_122BitmapRasterBufferImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %64, i64 8
  %68 = bitcast %"class.gfx::Size"* %12 to i64*
  %69 = bitcast i8* %67 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds i8, i8* %64, i64 16
  %72 = getelementptr inbounds %"class.cc::ResourcePool::PoolResource", %"class.cc::ResourcePool::PoolResource"* %11, i64 0, i32 3, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 4 %72, i64 68, i1 false) #9
  %73 = getelementptr inbounds i8, i8* %64, i64 88
  %74 = bitcast i8* %73 to i64*
  store i64 %63, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %64, i64 96
  %76 = icmp ne i64 %2, 0
  %77 = icmp eq i64 %2, %3
  %78 = and i1 %76, %77
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %75, align 8
  ret %"class.cc::RasterBuffer"* %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { i64, i64 } @_ZN3viz12SharedBitmap10GenerateIdEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3viz17bitmap_allocation20AllocateSharedBitmapERKN3gfx4SizeENS_14ResourceFormatE(%"struct.base::MappedReadOnlyRegion"* sret, %"class.gfx::Size"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc26BitmapRasterBufferProvider5FlushEv(%"class.cc::BitmapRasterBufferProvider"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2cc26BitmapRasterBufferProvider17GetResourceFormatEv(%"class.cc::BitmapRasterBufferProvider"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc26BitmapRasterBufferProvider23IsResourcePremultipliedEv(%"class.cc::BitmapRasterBufferProvider"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc26BitmapRasterBufferProvider36CanPartialRasterIntoProvidedResourceEv(%"class.cc::BitmapRasterBufferProvider"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2cc26BitmapRasterBufferProvider21IsResourceReadyToDrawERKNS_12ResourcePool17InUsePoolResourceE(%"class.cc::BitmapRasterBufferProvider"* nocapture readnone, %"class.cc::ResourcePool::InUsePoolResource"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2cc26BitmapRasterBufferProvider22SetReadyToDrawCallbackERKNSt3__16vectorIPKNS_12ResourcePool17InUsePoolResourceENS1_9allocatorIS6_EEEEN4base12OnceCallbackIFvvEEEm(%"class.cc::BitmapRasterBufferProvider"* nocapture readnone, %"class.std::__1::vector"* nocapture readnone, %"class.base::OnceCallback"* nocapture readnone, i64) unnamed_addr #5 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc26BitmapRasterBufferProvider8ShutdownEv(%"class.cc::BitmapRasterBufferProvider"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc20RasterBufferProvider16SetShutdownEventEPN4base13WaitableEventE(%"class.cc::RasterBufferProvider"*, %"class.base::WaitableEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_121BitmapSoftwareBackingD2Ev(%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12_GLOBAL__N_121BitmapSoftwareBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 1
  %4 = load %"class.cc::LayerTreeFrameSink"*, %"class.cc::LayerTreeFrameSink"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.cc::LayerTreeFrameSink"* %4 to void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)***
  %7 = load void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)**, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)** %7, i64 1
  %9 = load void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)** %8, align 8
  tail call void %9(%"class.cc::LayerTreeFrameSink"* %4, %"struct.gpu::Mailbox"* dereferenceable(16) %5) #9
  %10 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_121BitmapSoftwareBackingD0Ev(%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc12_GLOBAL__N_121BitmapSoftwareBackingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 1
  %4 = load %"class.cc::LayerTreeFrameSink"*, %"class.cc::LayerTreeFrameSink"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.cc::LayerTreeFrameSink"* %4 to void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)***
  %7 = load void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)**, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)** %7, i64 1
  %9 = load void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)*, void (%"class.cc::LayerTreeFrameSink"*, %"struct.gpu::Mailbox"*)** %8, align 8
  tail call void %9(%"class.cc::LayerTreeFrameSink"* %4, %"struct.gpu::Mailbox"* dereferenceable(16) %5) #9
  %10 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %10) #9
  %11 = bitcast %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK2cc12_GLOBAL__N_121BitmapSoftwareBacking12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpERKNS3_23MemoryAllocatorDumpGuidEmi(%"class.cc::(anonymous namespace)::BitmapSoftwareBacking"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i64, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapSoftwareBacking", %"class.cc::(anonymous namespace)::BitmapSoftwareBacking"* %0, i64 0, i32 2, i32 0, i32 4
  tail call void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %2, %"class.base::UnguessableToken"* dereferenceable(16) %6, i32 %4) #9
  ret void
}

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc12ResourcePool15SoftwareBackingD2Ev(%"class.cc::ResourcePool::SoftwareBacking"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc12ResourcePool15SoftwareBackingD0Ev(%"class.cc::ResourcePool::SoftwareBacking"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedMemoryOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidERKNS_16UnguessableTokenEi(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::UnguessableToken"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN2cc12RasterBufferC2Ev(%"class.cc::RasterBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc12RasterBufferD2Ev(%"class.cc::RasterBuffer"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_122BitmapRasterBufferImplD0Ev(%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl", %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0, i64 0, i32 0
  tail call void @_ZN2cc12RasterBufferD2Ev(%"class.cc::RasterBuffer"* %2) #9
  %3 = bitcast %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_122BitmapRasterBufferImpl8PlaybackEPKNS_12RasterSourceERKN3gfx4RectES8_mRKNS5_15AxisTransform2dERKNS2_16PlaybackSettingsERK4GURL(%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"*, %"class.cc::RasterSource"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), i64, %"class.gfx::AxisTransform2d"*, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16), %class.GURL* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %20, label %14, !prof !2

14:                                               ; preds = %8
  %15 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %16 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %18 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %18, i64* %17, align 8
  %19 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %15, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %20

20:                                               ; preds = %8, %14
  %21 = phi i64 [ -6148914691236517206, %8 ], [ %19, %14 ]
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), %14 ]
  %23 = phi i8* [ null, %8 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %14 ]
  %24 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl", %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0, i64 0, i32 5
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %20
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* dereferenceable(16) %3) #9
  br label %30

30:                                               ; preds = %20, %29
  %31 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl", %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0, i64 0, i32 4
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl", %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl", %"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* %0, i64 0, i32 2
  call void @_ZN2cc20RasterBufferProvider16PlaybackToMemoryEPvN3viz14ResourceFormatERKN3gfx4SizeEmPKNS_12RasterSourceERKNS4_4RectESD_RKNS4_15AxisTransform2dERKNS4_10ColorSpaceEbRKNS8_16PlaybackSettingsE(i8* %32, i32 0, %"class.gfx::Size"* dereferenceable(8) %33, i64 0, %"class.cc::RasterSource"* %1, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.gfx::AxisTransform2d"* %5, %"class.gfx::ColorSpace"* dereferenceable(68) %34, i1 zeroext false, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  %35 = icmp eq i8* %23, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %30
  %37 = load i8, i8* %23, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %21) #9
  br label %40

40:                                               ; preds = %30, %36, %39
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK2cc12_GLOBAL__N_122BitmapRasterBufferImpl32SupportsBackgroundThreadPriorityEv(%"class.cc::(anonymous namespace)::BitmapRasterBufferImpl"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc20RasterBufferProvider16PlaybackToMemoryEPvN3viz14ResourceFormatERKN3gfx4SizeEmPKNS_12RasterSourceERKNS4_4RectESD_RKNS4_15AxisTransform2dERKNS4_10ColorSpaceEbRKNS8_16PlaybackSettingsE(i8*, i32, %"class.gfx::Size"* dereferenceable(8), i64, %"class.cc::RasterSource"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::AxisTransform2d"*, %"class.gfx::ColorSpace"* dereferenceable(68), i1 zeroext, %"struct.cc::RasterSource::PlaybackSettings"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
