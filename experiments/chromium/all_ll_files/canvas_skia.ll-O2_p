; ModuleID = '../../ui/gfx/canvas_skia.cc'
source_filename = "../../ui/gfx/canvas_skia.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.22", %"class.gfx::BreakList.32", %"class.gfx::BreakList.42", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.22", %"class.gfx::BreakList.32", %"class.gfx::BreakList.42", %"struct.std::__1::array", %"class.std::__1::vector.62", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.70", %"class.gfx::BreakList.77", %"class.std::__1::unique_ptr.86", float, i32, %"class.absl::optional.104", i8, [7 x i8] }>
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector.8", i32, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.gfx::Range"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.gfx::BreakList" = type { %"class.std::__1::vector.15", i64 }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.gfx::BreakList.22" = type { %"class.std::__1::vector.23", i64 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.std::__1::pair.25"*, %"struct.std::__1::pair.25"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair.25" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair.25"* }
%"class.gfx::BreakList.32" = type { %"class.std::__1::vector.33", i64 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"*, %"class.std::__1::__compressed_pair.37" }
%"struct.std::__1::pair.35" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::pair.35"* }
%"class.gfx::BreakList.42" = type { %"class.std::__1::vector.43", i64 }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.std::__1::pair.45"*, %"struct.std::__1::pair.45"*, %"class.std::__1::__compressed_pair.47" }
%"struct.std::__1::pair.45" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::pair.45"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.52"] }
%"class.gfx::BreakList.52" = type { %"class.std::__1::vector.53", i64 }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.std::__1::pair.55"*, %"struct.std::__1::pair.55"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair.55" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair.55"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.64" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.69 }
%union.anon.69 = type { i8 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.72" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.77" = type { %"class.std::__1::vector.78", i64 }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"struct.std::__1::pair.80"*, %"struct.std::__1::pair.80"*, %"class.std::__1::__compressed_pair.81" }
%"struct.std::__1::pair.80" = type { i64, i64 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::pair.80"* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.gfx::internal::ShapedText"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.89" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.98" }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.91", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.93" }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.gfx::internal::LineSegment"* }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.gfx::internal::Line"* }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.112", %"class.absl::optional.125", %"class.cc::PaintCanvas"* }
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.124 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.117, i32, i32 }
%class.sk_sp.117 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.119" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.124 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, [7 x i8], %union.anon.129 }
%union.anon.129 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.144", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.130, [384 x i64], %class.sk_sp.131, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.132", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.138" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.130 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.131 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas15SizeStringFloatERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEPfSD_ii(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float* nocapture, float* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.gfx::Rect", align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = and i32 %5, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %133, label %14

14:                                               ; preds = %6
  %15 = load float, float* %2, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br i1 %16, label %17, label %133

17:                                               ; preds = %14
  %18 = and i32 %5, 256
  %19 = icmp eq i32 %18, 0
  %20 = trunc i32 %5 to i8
  %21 = icmp slt i8 %20, 0
  %22 = select i1 %21, i32 1, i32 2
  %23 = select i1 %19, i32 %22, i32 3
  %24 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #8
  %27 = call i32 @_ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.gfx::FontList"* dereferenceable(8) %1, float %15, i32 2147483647, i32 %23, %"class.std::__1::vector"* nonnull %7) #8
  %28 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1, i32 1
  %33 = load float, float* %2, align 4
  %34 = fcmp ult float %33, 0xC1E0000000000000
  %35 = fcmp ugt float %33, 0x41DFFFFFE0000000
  %36 = fcmp ogt float %33, 0xC1E0000000000000
  %37 = select i1 %36, float %33, float 0xC1E0000000000000
  %38 = fptosi float %37 to i32
  %39 = select i1 %34, i32 0, i32 2147483647
  %40 = select i1 %35, i32 %39, i32 %38
  store i32 0, i32* %29, align 4
  store i32 0, i32* %30, align 4
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  store i32 %42, i32* %31, align 4
  store i32 2147483647, i32* %32, align 4
  %43 = call %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() #8
  %44 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #8
  call fastcc void @_ZN3gfx12_GLOBAL__N_116UpdateRenderTextERKNS_4RectERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS_8FontListEijPNS_10RenderTextE(%"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.gfx::FontList"* dereferenceable(8) %1, i32 %5, i32 0, %"class.gfx::RenderText"* %43)
  %45 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %17
  %50 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %17, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  %53 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %7 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %54, %56
  %58 = inttoptr i64 %56 to %"class.std::__1::basic_string"*
  br i1 %57, label %66, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.gfx::RenderText"* %43 to <2 x float> (%"class.gfx::RenderText"*)***
  %61 = icmp sgt i32 %4, 0
  %62 = sitofp i32 %4 to float
  br label %103

63:                                               ; preds = %103
  %64 = inttoptr i64 %128 to %"class.std::__1::basic_string"*
  %65 = bitcast float %118 to i32
  br label %66

66:                                               ; preds = %52, %63
  %67 = phi %"class.std::__1::basic_string"* [ %64, %63 ], [ %58, %52 ]
  %68 = phi i32 [ %65, %63 ], [ 0, %52 ]
  %69 = phi float [ %125, %63 ], [ 0.000000e+00, %52 ]
  %70 = bitcast float* %2 to i32*
  store i32 %68, i32* %70, align 4
  store float %69, float* %3, align 4
  %71 = icmp eq %"class.gfx::RenderText"* %43, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.gfx::RenderText"* %43 to void (%"class.gfx::RenderText"*)***
  %74 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %74, i64 1
  %76 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %75, align 8
  call void %76(%"class.gfx::RenderText"* nonnull %43) #8
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br label %78

78:                                               ; preds = %66, %72
  %79 = phi %"class.std::__1::basic_string"* [ %67, %66 ], [ %77, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  %80 = icmp eq %"class.std::__1::basic_string"* %79, null
  br i1 %80, label %102, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %79
  br i1 %84, label %100, label %85

85:                                               ; preds = %81, %95
  %86 = phi %"class.std::__1::basic_string"* [ %87, %95 ], [ %83, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = bitcast %"class.std::__1::basic_string"* %87 to i8**
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #9
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"class.std::__1::basic_string"* %87, %79
  br i1 %96, label %97, label %85

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector"* %7 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %81
  %101 = phi i8* [ %99, %97 ], [ %82, %81 ]
  store %"class.std::__1::basic_string"* %79, %"class.std::__1::basic_string"** %26, align 8
  call void @_ZdlPv(i8* %101) #9
  br label %102

102:                                              ; preds = %78, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #8
  br label %366

103:                                              ; preds = %59, %103
  %104 = phi %"class.std::__1::basic_string"* [ %58, %59 ], [ %132, %103 ]
  %105 = phi float [ 0.000000e+00, %59 ], [ %118, %103 ]
  %106 = phi float [ 0.000000e+00, %59 ], [ %125, %103 ]
  %107 = phi i64 [ 0, %59 ], [ %126, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 %107
  %109 = call fastcc i64 @_ZN3gfx12_GLOBAL__N_121StripAcceleratorCharsEiPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(i32 %5, %"class.std::__1::basic_string"* %108)
  %110 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 %107
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %43, %"class.std::__1::basic_string"* dereferenceable(24) %111) #8
  %112 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %60, align 8
  %113 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %112, i64 3
  %114 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %113, align 8
  %115 = call <2 x float> %114(%"class.gfx::RenderText"* %43) #8
  %116 = extractelement <2 x float> %115, i32 0
  %117 = fcmp olt float %105, %116
  %118 = select i1 %117, float %116, float %105
  %119 = icmp ne i64 %107, 0
  %120 = and i1 %61, %119
  %121 = extractelement <2 x float> %115, i32 1
  %122 = fcmp ogt float %121, %62
  %123 = select i1 %122, float %121, float %62
  %124 = select i1 %120, float %123, float %121
  %125 = fadd float %106, %124
  %126 = add nuw i64 %107, 1
  %127 = load i64, i64* %53, align 8
  %128 = load i64, i64* %55, align 8
  %129 = sub i64 %127, %128
  %130 = sdiv exact i64 %129, 24
  %131 = icmp ult i64 %126, %130
  %132 = inttoptr i64 %128 to %"class.std::__1::basic_string"*
  br i1 %131, label %103, label %63

133:                                              ; preds = %6, %14
  %134 = tail call %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() #8
  %135 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #8
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 0
  %139 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %140 = load float, float* %2, align 4
  %141 = fcmp ult float %140, 0xC1E0000000000000
  %142 = fcmp ugt float %140, 0x41DFFFFFE0000000
  %143 = fcmp ogt float %140, 0xC1E0000000000000
  %144 = select i1 %143, float %140, float 0xC1E0000000000000
  %145 = fptosi float %144 to i32
  %146 = select i1 %141, i32 0, i32 2147483647
  %147 = select i1 %142, i32 %146, i32 %145
  %148 = load float, float* %3, align 4
  %149 = fcmp ult float %148, 0xC1E0000000000000
  %150 = fcmp ugt float %148, 0x41DFFFFFE0000000
  %151 = fcmp ogt float %148, 0xC1E0000000000000
  %152 = select i1 %151, float %148, float 0xC1E0000000000000
  %153 = fptosi float %152 to i32
  %154 = select i1 %149, i32 0, i32 2147483647
  %155 = select i1 %150, i32 %154, i32 %153
  store i32 0, i32* %136, align 4
  store i32 0, i32* %137, align 4
  %156 = icmp sgt i32 %147, 0
  %157 = select i1 %156, i32 %147, i32 0
  store i32 %157, i32* %138, align 4
  %158 = icmp sgt i32 %155, 0
  %159 = select i1 %158, i32 %155, i32 0
  store i32 %159, i32* %139, align 4
  %160 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %163 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %163, i64 0, i32 1, i32 1
  %165 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 24, i1 false)
  %166 = load i8, i8* %164, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %133
  %169 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %160, i8* align 8 %169, i64 24, i1 false) #8
  br label %343

170:                                              ; preds = %133
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i16*, i16** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = icmp ult i64 %174, 11
  br i1 %175, label %176, label %181

176:                                              ; preds = %170
  %177 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %178 = trunc i64 %174 to i8
  %179 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %179, i64 0, i32 1, i32 1
  store i8 %178, i8* %180, align 1
  br label %196

181:                                              ; preds = %170
  %182 = icmp ugt i64 %174, 9223372036854775791
  br i1 %182, label %183, label %185

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %184) #10
  unreachable

185:                                              ; preds = %181
  %186 = add nuw nsw i64 %174, 8
  %187 = and i64 %186, -8
  %188 = icmp slt i64 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %185
  tail call void @abort() #10
  unreachable

190:                                              ; preds = %185
  %191 = shl i64 %187, 1
  %192 = tail call i8* @_Znwm(i64 %191) #9
  %193 = bitcast i8* %192 to i16*
  %194 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  store i8* %192, i8** %194, align 8
  %195 = or i64 %187, -9223372036854775808
  store i64 %195, i64* %162, align 8
  store i64 %174, i64* %161, align 8
  br label %196

196:                                              ; preds = %190, %176
  %197 = phi i16* [ %177, %176 ], [ %193, %190 ]
  %198 = add nuw nsw i64 %174, 1
  %199 = add i64 %174, 1
  %200 = icmp ult i64 %199, 16
  br i1 %200, label %290, label %201

201:                                              ; preds = %196
  %202 = add i64 %174, 1
  %203 = getelementptr i16, i16* %197, i64 %202
  %204 = getelementptr i16, i16* %172, i64 %202
  %205 = icmp ult i16* %197, %204
  %206 = icmp ult i16* %172, %203
  %207 = and i1 %205, %206
  br i1 %207, label %290, label %208

208:                                              ; preds = %201
  %209 = and i64 %199, -16
  %210 = sub i64 %198, %209
  %211 = getelementptr i16, i16* %172, i64 %209
  %212 = getelementptr i16, i16* %197, i64 %209
  %213 = add i64 %209, -16
  %214 = lshr exact i64 %213, 4
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp ult i64 %213, 48
  br i1 %217, label %269, label %218

218:                                              ; preds = %208
  %219 = sub nsw i64 %215, %216
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi i64 [ 0, %218 ], [ %266, %220 ]
  %222 = phi i64 [ %219, %218 ], [ %267, %220 ]
  %223 = getelementptr i16, i16* %172, i64 %221
  %224 = getelementptr i16, i16* %197, i64 %221
  %225 = bitcast i16* %223 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !2
  %227 = getelementptr i16, i16* %223, i64 8
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !2
  %230 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %230, align 2, !alias.scope !5, !noalias !2
  %231 = getelementptr i16, i16* %224, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %232, align 2, !alias.scope !5, !noalias !2
  %233 = or i64 %221, 16
  %234 = getelementptr i16, i16* %172, i64 %233
  %235 = getelementptr i16, i16* %197, i64 %233
  %236 = bitcast i16* %234 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2, !alias.scope !2
  %238 = getelementptr i16, i16* %234, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !2
  %241 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %241, align 2, !alias.scope !5, !noalias !2
  %242 = getelementptr i16, i16* %235, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %243, align 2, !alias.scope !5, !noalias !2
  %244 = or i64 %221, 32
  %245 = getelementptr i16, i16* %172, i64 %244
  %246 = getelementptr i16, i16* %197, i64 %244
  %247 = bitcast i16* %245 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2, !alias.scope !2
  %249 = getelementptr i16, i16* %245, i64 8
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !2
  %252 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %252, align 2, !alias.scope !5, !noalias !2
  %253 = getelementptr i16, i16* %246, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %254, align 2, !alias.scope !5, !noalias !2
  %255 = or i64 %221, 48
  %256 = getelementptr i16, i16* %172, i64 %255
  %257 = getelementptr i16, i16* %197, i64 %255
  %258 = bitcast i16* %256 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !2
  %260 = getelementptr i16, i16* %256, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !2
  %263 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %263, align 2, !alias.scope !5, !noalias !2
  %264 = getelementptr i16, i16* %257, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %265, align 2, !alias.scope !5, !noalias !2
  %266 = add i64 %221, 64
  %267 = add i64 %222, -4
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %220, !llvm.loop !7

269:                                              ; preds = %220, %208
  %270 = phi i64 [ 0, %208 ], [ %266, %220 ]
  %271 = icmp eq i64 %216, 0
  br i1 %271, label %288, label %272

272:                                              ; preds = %269, %272
  %273 = phi i64 [ %285, %272 ], [ %270, %269 ]
  %274 = phi i64 [ %286, %272 ], [ %216, %269 ]
  %275 = getelementptr i16, i16* %172, i64 %273
  %276 = getelementptr i16, i16* %197, i64 %273
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !2
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !2
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !5, !noalias !2
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !5, !noalias !2
  %285 = add i64 %273, 16
  %286 = add i64 %274, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %272, !llvm.loop !9

288:                                              ; preds = %272, %269
  %289 = icmp eq i64 %199, %209
  br i1 %289, label %343, label %290

290:                                              ; preds = %288, %201, %196
  %291 = phi i64 [ %198, %201 ], [ %198, %196 ], [ %210, %288 ]
  %292 = phi i16* [ %172, %201 ], [ %172, %196 ], [ %211, %288 ]
  %293 = phi i16* [ %197, %201 ], [ %197, %196 ], [ %212, %288 ]
  %294 = add i64 %291, -1
  %295 = and i64 %291, 7
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %308, label %297

297:                                              ; preds = %290, %297
  %298 = phi i64 [ %303, %297 ], [ %291, %290 ]
  %299 = phi i16* [ %305, %297 ], [ %292, %290 ]
  %300 = phi i16* [ %304, %297 ], [ %293, %290 ]
  %301 = phi i64 [ %306, %297 ], [ %295, %290 ]
  %302 = load i16, i16* %299, align 2
  store i16 %302, i16* %300, align 2
  %303 = add i64 %298, -1
  %304 = getelementptr inbounds i16, i16* %300, i64 1
  %305 = getelementptr inbounds i16, i16* %299, i64 1
  %306 = add i64 %301, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %297, !llvm.loop !11

308:                                              ; preds = %297, %290
  %309 = phi i64 [ %291, %290 ], [ %303, %297 ]
  %310 = phi i16* [ %292, %290 ], [ %305, %297 ]
  %311 = phi i16* [ %293, %290 ], [ %304, %297 ]
  %312 = icmp ult i64 %294, 7
  br i1 %312, label %343, label %313

313:                                              ; preds = %308, %313
  %314 = phi i64 [ %339, %313 ], [ %309, %308 ]
  %315 = phi i16* [ %341, %313 ], [ %310, %308 ]
  %316 = phi i16* [ %340, %313 ], [ %311, %308 ]
  %317 = load i16, i16* %315, align 2
  store i16 %317, i16* %316, align 2
  %318 = getelementptr inbounds i16, i16* %316, i64 1
  %319 = getelementptr inbounds i16, i16* %315, i64 1
  %320 = load i16, i16* %319, align 2
  store i16 %320, i16* %318, align 2
  %321 = getelementptr inbounds i16, i16* %316, i64 2
  %322 = getelementptr inbounds i16, i16* %315, i64 2
  %323 = load i16, i16* %322, align 2
  store i16 %323, i16* %321, align 2
  %324 = getelementptr inbounds i16, i16* %316, i64 3
  %325 = getelementptr inbounds i16, i16* %315, i64 3
  %326 = load i16, i16* %325, align 2
  store i16 %326, i16* %324, align 2
  %327 = getelementptr inbounds i16, i16* %316, i64 4
  %328 = getelementptr inbounds i16, i16* %315, i64 4
  %329 = load i16, i16* %328, align 2
  store i16 %329, i16* %327, align 2
  %330 = getelementptr inbounds i16, i16* %316, i64 5
  %331 = getelementptr inbounds i16, i16* %315, i64 5
  %332 = load i16, i16* %331, align 2
  store i16 %332, i16* %330, align 2
  %333 = getelementptr inbounds i16, i16* %316, i64 6
  %334 = getelementptr inbounds i16, i16* %315, i64 6
  %335 = load i16, i16* %334, align 2
  store i16 %335, i16* %333, align 2
  %336 = getelementptr inbounds i16, i16* %316, i64 7
  %337 = getelementptr inbounds i16, i16* %315, i64 7
  %338 = load i16, i16* %337, align 2
  store i16 %338, i16* %336, align 2
  %339 = add i64 %314, -8
  %340 = getelementptr inbounds i16, i16* %316, i64 8
  %341 = getelementptr inbounds i16, i16* %315, i64 8
  %342 = icmp eq i64 %339, 0
  br i1 %342, label %343, label %313, !llvm.loop !12

343:                                              ; preds = %308, %313, %288, %168
  %344 = call fastcc i64 @_ZN3gfx12_GLOBAL__N_121StripAcceleratorCharsEiPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(i32 %5, %"class.std::__1::basic_string"* nonnull %11)
  call fastcc void @_ZN3gfx12_GLOBAL__N_116UpdateRenderTextERKNS_4RectERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS_8FontListEijPNS_10RenderTextE(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.gfx::FontList"* dereferenceable(8) %1, i32 %5, i32 0, %"class.gfx::RenderText"* %134)
  %345 = bitcast %"class.gfx::RenderText"* %134 to <2 x float> (%"class.gfx::RenderText"*)***
  %346 = load <2 x float> (%"class.gfx::RenderText"*)**, <2 x float> (%"class.gfx::RenderText"*)*** %345, align 8
  %347 = getelementptr inbounds <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %346, i64 3
  %348 = load <2 x float> (%"class.gfx::RenderText"*)*, <2 x float> (%"class.gfx::RenderText"*)** %347, align 8
  %349 = call <2 x float> %348(%"class.gfx::RenderText"* %134) #8
  %350 = extractelement <2 x float> %349, i32 0
  store float %350, float* %2, align 4
  %351 = extractelement <2 x float> %349, i32 1
  store float %351, float* %3, align 4
  %352 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %352, i64 0, i32 1, i32 1
  %354 = load i8, i8* %353, align 1
  %355 = icmp slt i8 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %343
  %357 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %358 = load i8*, i8** %357, align 8
  call void @_ZdlPv(i8* %358) #9
  br label %359

359:                                              ; preds = %343, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #8
  %360 = icmp eq %"class.gfx::RenderText"* %134, null
  br i1 %360, label %366, label %361

361:                                              ; preds = %359
  %362 = bitcast %"class.gfx::RenderText"* %134 to void (%"class.gfx::RenderText"*)***
  %363 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %362, align 8
  %364 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %363, i64 1
  %365 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %364, align 8
  call void %365(%"class.gfx::RenderText"* nonnull %134) #8
  br label %366

366:                                              ; preds = %361, %359, %102
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float, i32, i32, %"class.std::__1::vector"*) local_unnamed_addr #2

declare %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gfx12_GLOBAL__N_116UpdateRenderTextERKNS_4RectERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS_8FontListEijPNS_10RenderTextE(%"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), i32, i32, %"class.gfx::RenderText"*) unnamed_addr #3 {
  tail call void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"* %5, %"class.gfx::FontList"* dereferenceable(8) %2) #8
  tail call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  tail call void @_ZN3gfx10RenderText16SetCursorEnabledEb(%"class.gfx::RenderText"* %5, i1 zeroext false) #8
  tail call void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"* %5, %"class.gfx::Rect"* dereferenceable(16) %0) #8
  %7 = and i32 %3, 15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN3gfx6Canvas26DefaultCanvasTextAlignmentEv() #8
  %11 = or i32 %10, %3
  br label %12

12:                                               ; preds = %6, %9
  %13 = phi i32 [ %3, %6 ], [ %11, %9 ]
  %14 = and i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = and i32 %13, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = lshr i32 %13, 1
  %21 = and i32 %20, 1
  br label %22

22:                                               ; preds = %19, %16, %12
  %23 = phi i32 [ 3, %12 ], [ 2, %16 ], [ %21, %19 ]
  tail call void @_ZN3gfx10RenderText22SetHorizontalAlignmentENS_19HorizontalAlignmentE(%"class.gfx::RenderText"* %5, i32 %23) #8
  %24 = lshr i32 %13, 9
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %"class.gfx::RenderText", %"class.gfx::RenderText"* %5, i64 0, i32 48
  store i8 %26, i8* %27, align 4
  tail call void @_ZN3gfx10RenderText8SetColorEj(%"class.gfx::RenderText"* %5, i32 %4) #8
  %28 = tail call i32 @_ZNK3gfx8FontList12GetFontStyleEv(%"class.gfx::FontList"* %2) #8
  %29 = and i32 %28, 1
  %30 = icmp ne i32 %29, 0
  tail call void @_ZN3gfx10RenderText8SetStyleENS_9TextStyleEb(%"class.gfx::RenderText"* %5, i32 0, i1 zeroext %30) #8
  %31 = and i32 %28, 2
  %32 = icmp ne i32 %31, 0
  tail call void @_ZN3gfx10RenderText8SetStyleENS_9TextStyleEb(%"class.gfx::RenderText"* %5, i32 2, i1 zeroext %32) #8
  %33 = tail call i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"* %2) #8
  tail call void @_ZN3gfx10RenderText9SetWeightENS_4Font6WeightE(%"class.gfx::RenderText"* %5, i32 %33) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN3gfx12_GLOBAL__N_121StripAcceleratorCharsEiPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(i32, %"class.std::__1::basic_string"*) unnamed_addr #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = and i32 %0, 32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  store i32 -1, i32* %3, align 4
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  store i32 0, i32* %4, align 4
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  call void @_ZN3gfx30LocateAndRemoveAcceleratorCharERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPiS9_(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32* nonnull %3, i32* nonnull %4) #8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %9
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %17, %9
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %12, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  %22 = load i32, i32* %3, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %22 to i64
  br label %45

30:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  br label %45

31:                                               ; preds = %2
  %32 = and i32 %0, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8
  call void @_ZN3gfx17RemoveAcceleratorERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %40, %34
  %44 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %35, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8
  br label %45

45:                                               ; preds = %43, %31, %30, %24
  %46 = phi i64 [ %28, %24 ], [ -4294967296, %30 ], [ -4294967296, %31 ], [ -4294967296, %43 ]
  %47 = phi i64 [ %29, %24 ], [ 4294967295, %30 ], [ 4294967295, %31 ], [ 4294967295, %43 ]
  %48 = or i64 %47, %46
  ret i64 %48
}

declare void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx6Canvas23DrawStringRectWithFlagsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS_8FontListEjRKNS_4RectEi(%"class.gfx::Canvas"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), i32, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #3 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = alloca %"class.gfx::Rect", align 4
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.gfx::Range"*
  %14 = alloca %"class.gfx::Vector2d", align 4
  %15 = alloca %"class.gfx::Vector2d", align 4
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.gfx::Range"*
  %19 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %4) #8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 0
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %24 = extractvalue { <2 x float>, <2 x float> } %20, 1
  store <2 x float> %24, <2 x float>* %23, align 8
  %25 = call zeroext i1 @_ZN3gfx6Canvas18IntersectsClipRectERK6SkRect(%"class.gfx::Canvas"* %0, %struct.SkRect* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  br i1 %25, label %26, label %430

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %28 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %27, align 8
  %29 = bitcast %"class.cc::PaintCanvas"* %28 to i32 (%"class.cc::PaintCanvas"*)***
  %30 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %30, i64 5
  %32 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %31, align 8
  %33 = call i32 %32(%"class.cc::PaintCanvas"* %28) #8
  call void @_ZN3gfx6Canvas8ClipRectERKNS_4RectE8SkClipOp(%"class.gfx::Canvas"* %0, %"class.gfx::Rect"* dereferenceable(16) %4, i32 1) #8
  %34 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %37 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %37, i64 16, i1 false)
  %38 = call %"class.gfx::RenderText"* @_ZN3gfx10RenderText16CreateRenderTextEv() #8
  %39 = and i32 %5, 16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %145, label %41

41:                                               ; preds = %26
  %42 = and i32 %5, 256
  %43 = icmp eq i32 %42, 0
  %44 = lshr i32 %5, 6
  %45 = and i32 %44, 2
  %46 = xor i32 %45, 2
  %47 = select i1 %43, i32 %46, i32 3
  %48 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #8
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to float
  %54 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @_ZN3gfx18ElideRectangleTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfiNS_16WordWrapBehaviorEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.gfx::FontList"* dereferenceable(8) %2, float %53, i32 %55, i32 %47, %"class.std::__1::vector"* nonnull %11) #8
  %57 = bitcast %"class.std::__1::basic_string"** %50 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector"* %11 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %58, %60
  %62 = inttoptr i64 %60 to %"class.std::__1::basic_string"*
  br i1 %61, label %75, label %63

63:                                               ; preds = %41
  %64 = bitcast i64* %12 to i8*
  %65 = bitcast i64* %12 to i32*
  %66 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %13, i64 0, i32 1
  %67 = bitcast %"class.gfx::Vector2d"* %14 to i8*
  %68 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %14, i64 0, i32 0
  %69 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %14, i64 0, i32 1
  %70 = bitcast %"class.gfx::Vector2d"* %15 to i8*
  %71 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %15, i64 0, i32 0
  %72 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %15, i64 0, i32 1
  br label %100

73:                                               ; preds = %137
  %74 = inttoptr i64 %140 to %"class.std::__1::basic_string"*
  br label %75

75:                                               ; preds = %73, %41
  %76 = phi i64 [ %58, %41 ], [ %139, %73 ]
  %77 = phi %"class.std::__1::basic_string"* [ %62, %41 ], [ %74, %73 ]
  %78 = inttoptr i64 %76 to %"class.std::__1::basic_string"*
  %79 = icmp eq %"class.std::__1::basic_string"* %77, null
  br i1 %79, label %416, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %82 = icmp eq %"class.std::__1::basic_string"* %77, %78
  br i1 %82, label %98, label %83

83:                                               ; preds = %80, %93
  %84 = phi %"class.std::__1::basic_string"* [ %85, %93 ], [ %78, %80 ]
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 -1
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %83
  %91 = bitcast %"class.std::__1::basic_string"* %85 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %90, %83
  %94 = icmp eq %"class.std::__1::basic_string"* %85, %77
  br i1 %94, label %95, label %83

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector"* %11 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %80
  %99 = phi i8* [ %97, %95 ], [ %81, %80 ]
  store %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"** %50, align 8
  call void @_ZdlPv(i8* %99) #9
  br label %416

100:                                              ; preds = %63, %137
  %101 = phi %"class.std::__1::basic_string"* [ %62, %63 ], [ %144, %137 ]
  %102 = phi i64 [ 0, %63 ], [ %138, %137 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8
  store i32 -1431655766, i32* %65, align 8
  store i32 -1431655766, i32* %66, align 4
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 %102
  %104 = call fastcc i64 @_ZN3gfx12_GLOBAL__N_121StripAcceleratorCharsEiPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(i32 %5, %"class.std::__1::basic_string"* %103)
  store i64 %104, i64* %12, align 8
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %49, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %102
  call fastcc void @_ZN3gfx12_GLOBAL__N_116UpdateRenderTextERKNS_4RectERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS_8FontListEijPNS_10RenderTextE(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.std::__1::basic_string"* dereferenceable(24) %106, %"class.gfx::FontList"* dereferenceable(8) %2, i32 %5, i32 %3, %"class.gfx::RenderText"* %38)
  %107 = call i64 @_ZN3gfx10RenderText13GetStringSizeEv(%"class.gfx::RenderText"* %38) #8
  %108 = lshr i64 %107, 32
  %109 = trunc i64 %108 to i32
  %110 = icmp eq i64 %102, 0
  br i1 %110, label %111, label %121

111:                                              ; preds = %100
  %112 = load i64, i64* %57, align 8
  %113 = load i64, i64* %59, align 8
  %114 = sub i64 %112, %113
  %115 = sdiv exact i64 %114, 24
  %116 = trunc i64 %115 to i32
  %117 = mul i32 %116, %109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #8
  %118 = load i32, i32* %54, align 4
  %119 = sub nsw i32 %118, %117
  %120 = sdiv i32 %119, 2
  store i32 0, i32* %68, align 4
  store i32 %120, i32* %69, align 4
  call void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #8
  br label %121

121:                                              ; preds = %111, %100
  %122 = load i32, i32* %35, align 4
  %123 = icmp sgt i32 %122, 0
  %124 = icmp sgt i32 %109, 0
  %125 = and i1 %124, %123
  %126 = sub nuw nsw i32 2147483647, %122
  %127 = icmp ult i32 %126, %109
  %128 = and i1 %127, %125
  %129 = select i1 %128, i32 %126, i32 %109
  %130 = icmp sgt i32 %129, 0
  %131 = select i1 %130, i32 %129, i32 0
  store i32 %131, i32* %36, align 4
  %132 = load i32, i32* %65, align 8
  %133 = load i32, i32* %66, align 4
  %134 = and i32 %133, %132
  %135 = icmp eq i32 %134, -1
  br i1 %135, label %137, label %136

136:                                              ; preds = %121
  call void @_ZN3gfx10RenderText10ApplyStyleENS_9TextStyleEbRKNS_5RangeE(%"class.gfx::RenderText"* %38, i32 2, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %13) #8
  br label %137

137:                                              ; preds = %121, %136
  call void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"* %38, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #8
  call void @_ZN3gfx10RenderText4DrawEPNS_6CanvasEb(%"class.gfx::RenderText"* %38, %"class.gfx::Canvas"* %0, i1 zeroext false) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  store i32 0, i32* %71, align 4
  store i32 %109, i32* %72, align 4
  call void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8
  %138 = add nuw i64 %102, 1
  %139 = load i64, i64* %57, align 8
  %140 = load i64, i64* %59, align 8
  %141 = sub i64 %139, %140
  %142 = sdiv exact i64 %141, 24
  %143 = icmp ult i64 %138, %142
  %144 = inttoptr i64 %140 to %"class.std::__1::basic_string"*
  br i1 %143, label %100, label %73

145:                                              ; preds = %26
  %146 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #8
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %150 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 24, i1 false)
  %153 = load i8, i8* %151, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %145
  %156 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %146, i8* align 8 %156, i64 24, i1 false) #8
  br label %330

157:                                              ; preds = %145
  %158 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i16*, i16** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 11
  br i1 %162, label %163, label %168

163:                                              ; preds = %157
  %164 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %165 = trunc i64 %161 to i8
  %166 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %166, i64 0, i32 1, i32 1
  store i8 %165, i8* %167, align 1
  br label %183

168:                                              ; preds = %157
  %169 = icmp ugt i64 %161, 9223372036854775791
  br i1 %169, label %170, label %172

170:                                              ; preds = %168
  %171 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %171) #10
  unreachable

172:                                              ; preds = %168
  %173 = add nuw nsw i64 %161, 8
  %174 = and i64 %173, -8
  %175 = icmp slt i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  call void @abort() #10
  unreachable

177:                                              ; preds = %172
  %178 = shl i64 %174, 1
  %179 = call i8* @_Znwm(i64 %178) #9
  %180 = bitcast i8* %179 to i16*
  %181 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  store i8* %179, i8** %181, align 8
  %182 = or i64 %174, -9223372036854775808
  store i64 %182, i64* %149, align 8
  store i64 %161, i64* %148, align 8
  br label %183

183:                                              ; preds = %177, %163
  %184 = phi i16* [ %164, %163 ], [ %180, %177 ]
  %185 = add nuw nsw i64 %161, 1
  %186 = add i64 %161, 1
  %187 = icmp ult i64 %186, 16
  br i1 %187, label %277, label %188

188:                                              ; preds = %183
  %189 = add i64 %161, 1
  %190 = getelementptr i16, i16* %184, i64 %189
  %191 = getelementptr i16, i16* %159, i64 %189
  %192 = icmp ult i16* %184, %191
  %193 = icmp ult i16* %159, %190
  %194 = and i1 %192, %193
  br i1 %194, label %277, label %195

195:                                              ; preds = %188
  %196 = and i64 %186, -16
  %197 = sub i64 %185, %196
  %198 = getelementptr i16, i16* %159, i64 %196
  %199 = getelementptr i16, i16* %184, i64 %196
  %200 = add i64 %196, -16
  %201 = lshr exact i64 %200, 4
  %202 = add nuw nsw i64 %201, 1
  %203 = and i64 %202, 3
  %204 = icmp ult i64 %200, 48
  br i1 %204, label %256, label %205

205:                                              ; preds = %195
  %206 = sub nsw i64 %202, %203
  br label %207

207:                                              ; preds = %207, %205
  %208 = phi i64 [ 0, %205 ], [ %253, %207 ]
  %209 = phi i64 [ %206, %205 ], [ %254, %207 ]
  %210 = getelementptr i16, i16* %159, i64 %208
  %211 = getelementptr i16, i16* %184, i64 %208
  %212 = bitcast i16* %210 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !13
  %214 = getelementptr i16, i16* %210, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !13
  %217 = bitcast i16* %211 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %217, align 2, !alias.scope !16, !noalias !13
  %218 = getelementptr i16, i16* %211, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %219, align 2, !alias.scope !16, !noalias !13
  %220 = or i64 %208, 16
  %221 = getelementptr i16, i16* %159, i64 %220
  %222 = getelementptr i16, i16* %184, i64 %220
  %223 = bitcast i16* %221 to <8 x i16>*
  %224 = load <8 x i16>, <8 x i16>* %223, align 2, !alias.scope !13
  %225 = getelementptr i16, i16* %221, i64 8
  %226 = bitcast i16* %225 to <8 x i16>*
  %227 = load <8 x i16>, <8 x i16>* %226, align 2, !alias.scope !13
  %228 = bitcast i16* %222 to <8 x i16>*
  store <8 x i16> %224, <8 x i16>* %228, align 2, !alias.scope !16, !noalias !13
  %229 = getelementptr i16, i16* %222, i64 8
  %230 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %227, <8 x i16>* %230, align 2, !alias.scope !16, !noalias !13
  %231 = or i64 %208, 32
  %232 = getelementptr i16, i16* %159, i64 %231
  %233 = getelementptr i16, i16* %184, i64 %231
  %234 = bitcast i16* %232 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !13
  %236 = getelementptr i16, i16* %232, i64 8
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !13
  %239 = bitcast i16* %233 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %239, align 2, !alias.scope !16, !noalias !13
  %240 = getelementptr i16, i16* %233, i64 8
  %241 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %241, align 2, !alias.scope !16, !noalias !13
  %242 = or i64 %208, 48
  %243 = getelementptr i16, i16* %159, i64 %242
  %244 = getelementptr i16, i16* %184, i64 %242
  %245 = bitcast i16* %243 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !13
  %247 = getelementptr i16, i16* %243, i64 8
  %248 = bitcast i16* %247 to <8 x i16>*
  %249 = load <8 x i16>, <8 x i16>* %248, align 2, !alias.scope !13
  %250 = bitcast i16* %244 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %250, align 2, !alias.scope !16, !noalias !13
  %251 = getelementptr i16, i16* %244, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %249, <8 x i16>* %252, align 2, !alias.scope !16, !noalias !13
  %253 = add i64 %208, 64
  %254 = add i64 %209, -4
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %207, !llvm.loop !18

256:                                              ; preds = %207, %195
  %257 = phi i64 [ 0, %195 ], [ %253, %207 ]
  %258 = icmp eq i64 %203, 0
  br i1 %258, label %275, label %259

259:                                              ; preds = %256, %259
  %260 = phi i64 [ %272, %259 ], [ %257, %256 ]
  %261 = phi i64 [ %273, %259 ], [ %203, %256 ]
  %262 = getelementptr i16, i16* %159, i64 %260
  %263 = getelementptr i16, i16* %184, i64 %260
  %264 = bitcast i16* %262 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !13
  %266 = getelementptr i16, i16* %262, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !13
  %269 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !16, !noalias !13
  %270 = getelementptr i16, i16* %263, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !16, !noalias !13
  %272 = add i64 %260, 16
  %273 = add i64 %261, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %259, !llvm.loop !19

275:                                              ; preds = %259, %256
  %276 = icmp eq i64 %186, %196
  br i1 %276, label %330, label %277

277:                                              ; preds = %275, %188, %183
  %278 = phi i64 [ %185, %188 ], [ %185, %183 ], [ %197, %275 ]
  %279 = phi i16* [ %159, %188 ], [ %159, %183 ], [ %198, %275 ]
  %280 = phi i16* [ %184, %188 ], [ %184, %183 ], [ %199, %275 ]
  %281 = add i64 %278, -1
  %282 = and i64 %278, 7
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %295, label %284

284:                                              ; preds = %277, %284
  %285 = phi i64 [ %290, %284 ], [ %278, %277 ]
  %286 = phi i16* [ %292, %284 ], [ %279, %277 ]
  %287 = phi i16* [ %291, %284 ], [ %280, %277 ]
  %288 = phi i64 [ %293, %284 ], [ %282, %277 ]
  %289 = load i16, i16* %286, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %285, -1
  %291 = getelementptr inbounds i16, i16* %287, i64 1
  %292 = getelementptr inbounds i16, i16* %286, i64 1
  %293 = add i64 %288, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %284, !llvm.loop !20

295:                                              ; preds = %284, %277
  %296 = phi i64 [ %278, %277 ], [ %290, %284 ]
  %297 = phi i16* [ %279, %277 ], [ %292, %284 ]
  %298 = phi i16* [ %280, %277 ], [ %291, %284 ]
  %299 = icmp ult i64 %281, 7
  br i1 %299, label %330, label %300

300:                                              ; preds = %295, %300
  %301 = phi i64 [ %326, %300 ], [ %296, %295 ]
  %302 = phi i16* [ %328, %300 ], [ %297, %295 ]
  %303 = phi i16* [ %327, %300 ], [ %298, %295 ]
  %304 = load i16, i16* %302, align 2
  store i16 %304, i16* %303, align 2
  %305 = getelementptr inbounds i16, i16* %303, i64 1
  %306 = getelementptr inbounds i16, i16* %302, i64 1
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %303, i64 2
  %309 = getelementptr inbounds i16, i16* %302, i64 2
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %303, i64 3
  %312 = getelementptr inbounds i16, i16* %302, i64 3
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %303, i64 4
  %315 = getelementptr inbounds i16, i16* %302, i64 4
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %303, i64 5
  %318 = getelementptr inbounds i16, i16* %302, i64 5
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %303, i64 6
  %321 = getelementptr inbounds i16, i16* %302, i64 6
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %303, i64 7
  %324 = getelementptr inbounds i16, i16* %302, i64 7
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %301, -8
  %327 = getelementptr inbounds i16, i16* %303, i64 8
  %328 = getelementptr inbounds i16, i16* %302, i64 8
  %329 = icmp eq i64 %326, 0
  br i1 %329, label %330, label %300, !llvm.loop !21

330:                                              ; preds = %295, %300, %275, %155
  %331 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #8
  %332 = bitcast i64* %17 to i32*
  %333 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %18, i64 0, i32 1
  %334 = call fastcc i64 @_ZN3gfx12_GLOBAL__N_121StripAcceleratorCharsEiPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(i32 %5, %"class.std::__1::basic_string"* nonnull %16)
  store i64 %334, i64* %17, align 8
  %335 = trunc i32 %5 to i8
  %336 = icmp sgt i8 %335, -1
  br i1 %336, label %337, label %402

337:                                              ; preds = %330
  call void @_ZN3gfx10RenderText7SetTextERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.gfx::RenderText"* %38, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #8
  %338 = call i32 @_ZN3gfx10RenderText23GetDisplayTextDirectionEv(%"class.gfx::RenderText"* %38) #8
  %339 = icmp eq i32 %338, 2
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZN3gfx10RenderText16SetElideBehaviorENS_13ElideBehaviorE(%"class.gfx::RenderText"* %38, i32 6) #8
  br label %402

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = sitofp i32 %343 to float
  %345 = load i32, i32* %332, align 8
  %346 = load i32, i32* %333, align 4
  %347 = and i32 %346, %345
  %348 = icmp eq i32 %347, -1
  br i1 %348, label %349, label %351

349:                                              ; preds = %341
  %350 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %370

351:                                              ; preds = %341
  %352 = zext i32 %345 to i64
  %353 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %354 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %353, i64 0, i32 1, i32 1
  %355 = load i8, i8* %354, align 1
  %356 = icmp slt i8 %355, 0
  %357 = load i64, i64* %148, align 8
  %358 = zext i8 %355 to i64
  %359 = select i1 %356, i64 %357, i64 %358
  %360 = icmp ugt i64 %359, %352
  br i1 %360, label %363, label %361

361:                                              ; preds = %351
  %362 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %362) #10
  unreachable

363:                                              ; preds = %351
  %364 = load i16*, i16** %147, align 8
  %365 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %366 = select i1 %356, i16* %364, i16* %365
  %367 = getelementptr inbounds i16, i16* %366, i64 %352
  %368 = load i16, i16* %367, align 2
  %369 = zext i16 %368 to i32
  br label %370

370:                                              ; preds = %363, %349
  %371 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %350, %349 ], [ %353, %363 ]
  %372 = phi i32 [ 0, %349 ], [ %369, %363 ]
  %373 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %373) #8
  call void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, %"class.gfx::FontList"* dereferenceable(8) %2, float %344, i32 4) #8
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %371, i64 0, i32 1, i32 1
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %377, label %380

377:                                              ; preds = %370
  %378 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %379 = load i8*, i8** %378, align 8
  call void @_ZdlPv(i8* %379) #9
  br label %380

380:                                              ; preds = %377, %370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %146, i8* nonnull align 8 %373, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %373) #8
  %381 = load i32, i32* %332, align 8
  %382 = load i32, i32* %333, align 4
  %383 = and i32 %382, %381
  %384 = icmp eq i32 %383, -1
  br i1 %384, label %402, label %385

385:                                              ; preds = %380
  %386 = zext i32 %381 to i64
  %387 = load i8, i8* %374, align 1
  %388 = icmp slt i8 %387, 0
  %389 = load i64, i64* %148, align 8
  %390 = zext i8 %387 to i64
  %391 = select i1 %388, i64 %389, i64 %390
  %392 = icmp ugt i64 %391, %386
  br i1 %392, label %393, label %401

393:                                              ; preds = %385
  %394 = load i16*, i16** %147, align 8
  %395 = bitcast %"class.std::__1::basic_string"* %16 to i16*
  %396 = select i1 %388, i16* %394, i16* %395
  %397 = getelementptr inbounds i16, i16* %396, i64 %386
  %398 = load i16, i16* %397, align 2
  %399 = zext i16 %398 to i32
  %400 = icmp eq i32 %372, %399
  br i1 %400, label %402, label %401

401:                                              ; preds = %393, %385
  store i64 -1, i64* %17, align 8
  br label %402

402:                                              ; preds = %330, %380, %401, %393, %340
  call fastcc void @_ZN3gfx12_GLOBAL__N_116UpdateRenderTextERKNS_4RectERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEERKNS_8FontListEijPNS_10RenderTextE(%"class.gfx::Rect"* nonnull dereferenceable(16) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, %"class.gfx::FontList"* dereferenceable(8) %2, i32 %5, i32 %3, %"class.gfx::RenderText"* %38)
  %403 = load i32, i32* %332, align 8
  %404 = load i32, i32* %333, align 4
  %405 = and i32 %404, %403
  %406 = icmp eq i32 %405, -1
  br i1 %406, label %408, label %407

407:                                              ; preds = %402
  call void @_ZN3gfx10RenderText10ApplyStyleENS_9TextStyleEbRKNS_5RangeE(%"class.gfx::RenderText"* %38, i32 2, i1 zeroext true, %"class.gfx::Range"* nonnull dereferenceable(8) %18) #8
  br label %408

408:                                              ; preds = %402, %407
  call void @_ZN3gfx10RenderText4DrawEPNS_6CanvasEb(%"class.gfx::RenderText"* %38, %"class.gfx::Canvas"* %0, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #8
  %409 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %410 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %409, i64 0, i32 1, i32 1
  %411 = load i8, i8* %410, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %408
  %414 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %415 = load i8*, i8** %414, align 8
  call void @_ZdlPv(i8* %415) #9
  br label %416

416:                                              ; preds = %413, %408, %98, %75
  %417 = phi i8* [ %48, %75 ], [ %48, %98 ], [ %146, %408 ], [ %146, %413 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #8
  %418 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %27, align 8
  %419 = bitcast %"class.cc::PaintCanvas"* %418 to void (%"class.cc::PaintCanvas"*)***
  %420 = load void (%"class.cc::PaintCanvas"*)**, void (%"class.cc::PaintCanvas"*)*** %419, align 8
  %421 = getelementptr inbounds void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %420, i64 8
  %422 = load void (%"class.cc::PaintCanvas"*)*, void (%"class.cc::PaintCanvas"*)** %421, align 8
  call void %422(%"class.cc::PaintCanvas"* %418) #8
  %423 = icmp eq %"class.gfx::RenderText"* %38, null
  br i1 %423, label %429, label %424

424:                                              ; preds = %416
  %425 = bitcast %"class.gfx::RenderText"* %38 to void (%"class.gfx::RenderText"*)***
  %426 = load void (%"class.gfx::RenderText"*)**, void (%"class.gfx::RenderText"*)*** %425, align 8
  %427 = getelementptr inbounds void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %426, i64 1
  %428 = load void (%"class.gfx::RenderText"*)*, void (%"class.gfx::RenderText"*)** %427, align 8
  call void %428(%"class.gfx::RenderText"* nonnull %38) #8
  br label %429

429:                                              ; preds = %416, %424
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  br label %430

430:                                              ; preds = %6, %429
  ret void
}

declare zeroext i1 @_ZN3gfx6Canvas18IntersectsClipRectERK6SkRect(%"class.gfx::Canvas"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx6Canvas8ClipRectERKNS_4RectE8SkClipOp(%"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN3gfx10RenderText13GetStringSizeEv(%"class.gfx::RenderText"*) local_unnamed_addr #2

declare void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText10ApplyStyleENS_9TextStyleEbRKNS_5RangeE(%"class.gfx::RenderText"*, i32, i1 zeroext, %"class.gfx::Range"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText14SetDisplayRectERKNS_4RectE(%"class.gfx::RenderText"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText4DrawEPNS_6CanvasEb(%"class.gfx::RenderText"*, %"class.gfx::Canvas"*, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN3gfx10RenderText23GetDisplayTextDirectionEv(%"class.gfx::RenderText"*) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText16SetElideBehaviorENS_13ElideBehaviorE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText11SetFontListERKNS_8FontListE(%"class.gfx::RenderText"*, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText16SetCursorEnabledEb(%"class.gfx::RenderText"*, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN3gfx6Canvas26DefaultCanvasTextAlignmentEv() local_unnamed_addr #2

declare void @_ZN3gfx10RenderText22SetHorizontalAlignmentENS_19HorizontalAlignmentE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText8SetColorEj(%"class.gfx::RenderText"*, i32) local_unnamed_addr #2

declare i32 @_ZNK3gfx8FontList12GetFontStyleEv(%"class.gfx::FontList"*) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText8SetStyleENS_9TextStyleEb(%"class.gfx::RenderText"*, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3gfx10RenderText9SetWeightENS_4Font6WeightE(%"class.gfx::RenderText"*, i32) local_unnamed_addr #2

declare i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"*) local_unnamed_addr #2

declare void @_ZN3gfx30LocateAndRemoveAcceleratorCharERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPiS9_(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), i32*, i32*) local_unnamed_addr #2

declare void @_ZN3gfx17RemoveAcceleratorERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN3gfx9ElideTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS_8FontListEfNS_13ElideBehaviorE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.gfx::FontList"* dereferenceable(8), float, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
