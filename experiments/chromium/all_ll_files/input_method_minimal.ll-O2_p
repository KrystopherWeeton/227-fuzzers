; ModuleID = '../../ui/base/ime/input_method_minimal.cc'
source_filename = "../../ui/base/ime/input_method_minimal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::InputMethodMinimal" = type { %"class.ui::InputMethodBase" }
%"class.ui::InputMethodBase" = type { %"class.ui::InputMethod", %"class.base::SupportsWeakPtr", %"class.ui::internal::InputMethodDelegate"*, %"class.ui::TextInputClient"*, %"class.base::ObserverList", %"class.gfx::Rect", %"class.std::__1::unique_ptr" }
%"class.ui::InputMethod" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::TextInputClient" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::VirtualKeyboardController"* }
%"class.ui::VirtualKeyboardController" = type opaque
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.17" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.10" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.12" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.base::flat_map.20"* }
%"class.base::flat_map.20" = type opaque
%"class.ui::DomKey" = type { i32 }
%"class.ui::InputMethodObserver" = type opaque

$_ZN2ui15InputMethodBase25OnWillChangeFocusedClientEPNS_15TextInputClientES2_ = comdat any

$_ZN2ui15InputMethodBase24OnDidChangeFocusedClientEPNS_15TextInputClientES2_ = comdat any

@_ZTVN2ui18InputMethodMinimalE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InputMethodMinimal"*)* @_ZN2ui18InputMethodMinimalD2Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodMinimal"*)* @_ZN2ui18InputMethodMinimalD0Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui15InputMethodBase11SetDelegateEPNS_8internal19InputMethodDelegateE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase7OnFocusEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase6OnBlurEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase25SetFocusedTextInputClientEPNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase21DetachTextInputClientEPNS_15TextInputClientE to i8*), i8* bitcast (%"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase18GetTextInputClientEv to i8*), i8* bitcast (i24 (%"class.ui::InputMethodMinimal"*, %"class.ui::KeyEvent"*)* @_ZN2ui18InputMethodMinimal16DispatchKeyEventEPNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase22OnTextInputTypeChangedEPKNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodMinimal"*, %"class.ui::TextInputClient"*)* @_ZN2ui18InputMethodMinimal20OnCaretBoundsChangedEPKNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodMinimal"*, %"class.ui::TextInputClient"*)* @_ZN2ui18InputMethodMinimal17CancelCompositionEPKNS_15TextInputClientE to i8*), i8* bitcast (i32 (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase16GetTextInputTypeEv to i8*), i8* bitcast (i32 (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase16GetTextInputModeEv to i8*), i8* bitcast (i1 (%"class.ui::InputMethodMinimal"*)* @_ZNK2ui18InputMethodMinimal20IsCandidatePopupOpenEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase28ShowVirtualKeyboardIfEnabledEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*)* @_ZN2ui15InputMethodBase11AddObserverEPNS_19InputMethodObserverE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*)* @_ZN2ui15InputMethodBase14RemoveObserverEPNS_19InputMethodObserverE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.gfx::Rect"*)* @_ZN2ui15InputMethodBase25SetOnScreenKeyboardBoundsERKN3gfx4RectE to i8*), i8* bitcast (%"class.ui::VirtualKeyboardController"* (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase28GetVirtualKeyboardControllerEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase25OnWillChangeFocusedClientEPNS_15TextInputClientES2_ to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase24OnDidChangeFocusedClientEPNS_15TextInputClientES2_ to i8*), i8* bitcast (i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)* @_ZNK2ui15InputMethodBase23DispatchKeyEventPostIMEEPNS_8KeyEventE to i8*)] }, align 8

@_ZN2ui18InputMethodMinimalC1EPNS_8internal19InputMethodDelegateE = hidden unnamed_addr alias void (%"class.ui::InputMethodMinimal"*, %"class.ui::internal::InputMethodDelegate"*), void (%"class.ui::InputMethodMinimal"*, %"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui18InputMethodMinimalC2EPNS_8internal19InputMethodDelegateE
@_ZN2ui18InputMethodMinimalD1Ev = hidden unnamed_addr alias void (%"class.ui::InputMethodMinimal"*), void (%"class.ui::InputMethodMinimal"*)* @_ZN2ui18InputMethodMinimalD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18InputMethodMinimalC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodMinimal"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodMinimal", %"class.ui::InputMethodMinimal"* %0, i64 0, i32 0
  tail call void @_ZN2ui15InputMethodBaseC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"* %3, %"class.ui::internal::InputMethodDelegate"* %1) #5
  %4 = getelementptr inbounds %"class.ui::InputMethodMinimal", %"class.ui::InputMethodMinimal"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2ui18InputMethodMinimalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @_ZN2ui15InputMethodBaseC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui15InputMethodBaseD2Ev(%"class.ui::InputMethodBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18InputMethodMinimalD2Ev(%"class.ui::InputMethodMinimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodMinimal", %"class.ui::InputMethodMinimal"* %0, i64 0, i32 0
  tail call void @_ZN2ui15InputMethodBaseD2Ev(%"class.ui::InputMethodBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18InputMethodMinimalD0Ev(%"class.ui::InputMethodMinimal"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodMinimal", %"class.ui::InputMethodMinimal"* %0, i64 0, i32 0
  tail call void @_ZN2ui15InputMethodBaseD2Ev(%"class.ui::InputMethodBase"* %2) #5
  %3 = bitcast %"class.ui::InputMethodMinimal"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN2ui18InputMethodMinimal16DispatchKeyEventEPNS_8KeyEventE(%"class.ui::InputMethodMinimal"*, %"class.ui::KeyEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodMinimal", %"class.ui::InputMethodMinimal"* %0, i64 0, i32 0
  %4 = bitcast %"class.ui::InputMethodMinimal"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %5 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %5, i64 7
  %7 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %6, align 8
  %8 = tail call %"class.ui::TextInputClient"* %7(%"class.ui::InputMethodBase"* %3) #5
  %9 = icmp eq %"class.ui::TextInputClient"* %8, null
  %10 = bitcast %"class.ui::InputMethodMinimal"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %11 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %10, align 8
  %12 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %11, i64 22
  %13 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %12, align 8
  %14 = tail call i24 %13(%"class.ui::InputMethodBase"* %3, %"class.ui::KeyEvent"* %1) #5
  br i1 %9, label %46, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = and i24 %14, 1
  %22 = icmp eq i24 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %24, label %46

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %28, label %46

28:                                               ; preds = %24
  %29 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %4, align 8
  %30 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %29, i64 7
  %31 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %30, align 8
  %32 = tail call %"class.ui::TextInputClient"* %31(%"class.ui::InputMethodBase"* %3) #5
  %33 = icmp eq %"class.ui::TextInputClient"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %28
  %35 = tail call zeroext i16 @_ZNK2ui8KeyEvent12GetCharacterEv(%"class.ui::KeyEvent"* %1) #5
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %34
  %38 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %4, align 8
  %39 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %38, i64 7
  %40 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %39, align 8
  %41 = tail call %"class.ui::TextInputClient"* %40(%"class.ui::InputMethodBase"* %3) #5
  %42 = bitcast %"class.ui::TextInputClient"* %41 to void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)***
  %43 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)**, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %43, i64 6
  %45 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %44, align 8
  tail call void %45(%"class.ui::TextInputClient"* %41, %"class.ui::KeyEvent"* dereferenceable(168) %1) #5
  tail call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %16) #5
  br label %46

46:                                               ; preds = %24, %28, %15, %34, %37, %2
  ret i24 %14
}

declare zeroext i16 @_ZNK2ui8KeyEvent12GetCharacterEv(%"class.ui::KeyEvent"*) local_unnamed_addr #1

declare void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui18InputMethodMinimal20OnCaretBoundsChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodMinimal"* nocapture, %"class.ui::TextInputClient"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui18InputMethodMinimal17CancelCompositionEPKNS_15TextInputClientE(%"class.ui::InputMethodMinimal"* nocapture, %"class.ui::TextInputClient"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui18InputMethodMinimal20IsCandidatePopupOpenEv(%"class.ui::InputMethodMinimal"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

declare void @_ZN2ui15InputMethodBase11SetDelegateEPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase7OnFocusEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase6OnBlurEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase25SetFocusedTextInputClientEPNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase21DetachTextInputClientEPNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

declare %"class.ui::TextInputClient"* @_ZNK2ui15InputMethodBase18GetTextInputClientEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase22OnTextInputTypeChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

declare i32 @_ZNK2ui15InputMethodBase16GetTextInputTypeEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare i32 @_ZNK2ui15InputMethodBase16GetTextInputModeEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase28ShowVirtualKeyboardIfEnabledEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase11AddObserverEPNS_19InputMethodObserverE(%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase14RemoveObserverEPNS_19InputMethodObserverE(%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase25SetOnScreenKeyboardBoundsERKN3gfx4RectE(%"class.ui::InputMethodBase"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare %"class.ui::VirtualKeyboardController"* @_ZN2ui15InputMethodBase28GetVirtualKeyboardControllerEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui15InputMethodBase25OnWillChangeFocusedClientEPNS_15TextInputClientES2_(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui15InputMethodBase24OnDidChangeFocusedClientEPNS_15TextInputClientES2_(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i24 @_ZNK2ui15InputMethodBase23DispatchKeyEventPostIMEEPNS_8KeyEventE(%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
