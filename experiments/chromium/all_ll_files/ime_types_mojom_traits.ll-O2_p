; ModuleID = '../../ui/base/ime/mojom/ime_types_mojom_traits.cc'
source_filename = "../../ui/base/ime/mojom/ime_types_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::mojom::internal::ImeTextSpan_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE = comdat any

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom15TextInputActionENS1_15TextInputActionEE7ToMojomES4_(i32) local_unnamed_addr #0 align 2 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom15TextInputActionENS1_15TextInputActionEE9FromMojomES3_PS4_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 8
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom13TextInputModeENS1_13TextInputModeEE7ToMojomES4_(i32) local_unnamed_addr #0 align 2 {
  ret i32 %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom13TextInputModeENS1_13TextInputModeEE9FromMojomES3_PS4_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  store i32 %0, i32* %1, align 4
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom13TextInputTypeENS1_13TextInputTypeEE7ToMojomES4_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 17
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom13TextInputTypeENS1_13TextInputTypeEE9FromMojomES3_PS4_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 18
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ui5mojom19ImeTextSpanDataViewENS1_11ImeTextSpanEE4ReadES3_PS4_(%"class.ui::mojom::internal::ImeTextSpan_Data"*, %"class.mojo::Message"*, %"struct.ui::ImeTextSpan"*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, null
  br i1 %4, label %77, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 1
  %8 = icmp ult i32 %7, 5
  br i1 %8, label %9, label %77

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 0
  store i32 %7, i32* %10, align 4
  %11 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 1
  %13 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 1
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 1
  %16 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 2
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 1
  %19 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 3
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 1
  %22 = icmp ult i32 %21, 3
  br i1 %22, label %23, label %77

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 4
  store i32 %21, i32* %24, align 4
  %25 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 6
  %26 = load i32, i32* %25, align 1
  %27 = icmp ult i32 %26, 5
  br i1 %27, label %28, label %77

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 5
  store i32 %26, i32* %29, align 4
  %30 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 7
  %31 = load i32, i32* %30, align 1
  %32 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 6
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 8
  %34 = load i32, i32* %33, align 1
  %35 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 7
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 9
  %37 = load i32, i32* %36, align 1
  %38 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 8
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 10
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 1
  %42 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 9
  store i8 %41, i8* %42, align 4
  %43 = load i8, i8* %39, align 1
  %44 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 10
  %45 = lshr i8 %43, 1
  %46 = and i8 %45, 1
  store i8 %46, i8* %44, align 1
  %47 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 11
  %48 = getelementptr inbounds %"class.ui::mojom::internal::ImeTextSpan_Data", %"class.ui::mojom::internal::ImeTextSpan_Data"* %0, i64 0, i32 12
  %49 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %48, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %71

52:                                               ; preds = %28
  %53 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %47, i64 0, i32 0, i32 0
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %2, i64 0, i32 11, i32 0, i32 1
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = icmp eq %"class.std::__1::basic_string"* %56, %54
  br i1 %57, label %70, label %58

58:                                               ; preds = %52, %68
  %59 = phi %"class.std::__1::basic_string"* [ %60, %68 ], [ %56, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #8
  br label %68

68:                                               ; preds = %65, %58
  %69 = icmp eq %"class.std::__1::basic_string"* %60, %54
  br i1 %69, label %70, label %58

70:                                               ; preds = %68, %52
  store %"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"** %55, align 8
  br label %76

71:                                               ; preds = %28
  %72 = bitcast %"struct.mojo::internal::Pointer"* %48 to i8*
  %73 = getelementptr inbounds i8, i8* %72, i64 %50
  %74 = bitcast i8* %73 to %"class.mojo::internal::Array_Data"*
  %75 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %74, %"class.std::__1::vector.20"* %47, %"class.mojo::Message"* %1) #9
  br i1 %75, label %76, label %77

76:                                               ; preds = %70, %71
  br label %77

77:                                               ; preds = %23, %9, %5, %76, %71, %3
  %78 = phi i1 [ false, %3 ], [ false, %5 ], [ false, %9 ], [ false, %23 ], [ true, %76 ], [ false, %71 ]
  ret i1 %78
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom15ImeTextSpanTypeENS1_11ImeTextSpan4TypeEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 4
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom15ImeTextSpanTypeENS1_11ImeTextSpan4TypeEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 5
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom20ImeTextSpanThicknessENS1_11ImeTextSpan9ThicknessEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 3
  %3 = select i1 %2, i32 %0, i32 1
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom20ImeTextSpanThicknessENS1_11ImeTextSpan9ThicknessEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 3
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN2ui5mojom25ImeTextSpanUnderlineStyleENS1_11ImeTextSpan14UnderlineStyleEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 5
  %3 = select i1 %2, i32 %0, i32 1
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN2ui5mojom25ImeTextSpanUnderlineStyleENS1_11ImeTextSpan14UnderlineStyleEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 5
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS_14StringDataViewEEENSt3__16vectorINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENSA_ISC_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSK_IcEEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector.20"*, %"class.mojo::Message"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.20"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %55, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 24
  %19 = tail call i8* @_Znwm(i64 %18) #8
  %20 = bitcast i8* %19 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  %23 = add nsw i64 %6, -1
  %24 = getelementptr %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = ptrtoint i8** %24 to i64
  %26 = sub i64 %25, %22
  %27 = urem i64 %26, 24
  %28 = add i64 %26, 24
  %29 = sub i64 %28, %27
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 %29, i1 false) #9
  %30 = ptrtoint %"class.std::__1::basic_string"* %21 to i64
  br label %31

31:                                               ; preds = %15, %17
  %32 = phi i64 [ %30, %17 ], [ 0, %15 ]
  %33 = phi i64 [ %22, %17 ], [ 0, %15 ]
  store i64 %33, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = inttoptr i64 %11 to %"class.std::__1::basic_string"*
  %37 = icmp eq i64 %11, 0
  %38 = inttoptr i64 %9 to %"class.std::__1::basic_string"*
  br i1 %37, label %55, label %39

39:                                               ; preds = %31
  %40 = icmp eq %"class.std::__1::basic_string"* %38, %36
  br i1 %40, label %53, label %41

41:                                               ; preds = %39, %51
  %42 = phi %"class.std::__1::basic_string"* [ %43, %51 ], [ %38, %39 ]
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 -1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #8
  br label %51

51:                                               ; preds = %48, %41
  %52 = icmp eq %"class.std::__1::basic_string"* %43, %36
  br i1 %52, label %53, label %41

53:                                               ; preds = %51, %39
  %54 = inttoptr i64 %11 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %3, %53, %31
  %56 = load i32, i32* %4, align 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %123, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %60 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %58, %119
  %62 = phi i64 [ 0, %58 ], [ %69, %119 ]
  %63 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %59, i64 %62
  %64 = bitcast %"class.mojo::internal::Array_Data"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %"class.mojo::internal::Array_Data"* %63 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %65
  %69 = add nuw nsw i64 %62, 1
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %60, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62
  %72 = icmp eq i8* %68, null
  %73 = or i1 %66, %72
  br i1 %73, label %119, label %74

74:                                               ; preds = %61
  %75 = getelementptr inbounds i8, i8* %68, i64 8
  %76 = getelementptr inbounds i8, i8* %68, i64 4
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  %79 = zext i32 %78 to i64
  %80 = tail call i1 @llvm.is.constant.i64(i64 %79) #9
  %81 = icmp ult i32 %78, 23
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %101

83:                                               ; preds = %74
  %84 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %79, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  br label %95

92:                                               ; preds = %83
  %93 = trunc i32 %78 to i8
  store i8 %93, i8* %85, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i8* [ %91, %88 ], [ %94, %92 ]
  %97 = icmp eq i32 %78, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %75, i64 %79, i1 false) #9
  br label %99

99:                                               ; preds = %98, %95
  %100 = getelementptr inbounds i8, i8* %96, i64 %79
  store i8 0, i8* %100, align 1
  br label %104

101:                                              ; preds = %74
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %71, i8* %75, i64 %79) #9
  %103 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %104

104:                                              ; preds = %101, %99
  %105 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %103, %101 ], [ %84, %99 ]
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %112 = select i1 %108, i8* %110, i8* %111
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %107 to i64
  %116 = select i1 %108, i64 %114, i64 %115
  %117 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %112, i64 %116) #9
  br i1 %117, label %119, label %118

118:                                              ; preds = %104
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #9
  br label %119

119:                                              ; preds = %118, %104, %61
  %120 = load i32, i32* %4, align 1
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %69, %121
  br i1 %122, label %61, label %123

123:                                              ; preds = %119, %55
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { argmemonly nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
