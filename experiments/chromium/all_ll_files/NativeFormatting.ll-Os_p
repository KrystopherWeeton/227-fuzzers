; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/NativeFormatting.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/NativeFormatting.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"class.llvm::Optional" = type { %"struct.llvm::AlignedCharArrayUnion", i8, [7 x i8] }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"class.llvm::SmallString" = type { %"class.llvm::SmallVector" }
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.0" }>
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion.0" = type { %"struct.llvm::AlignedCharArray.1" }
%"struct.llvm::AlignedCharArray.1" = type { [1 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [7 x %"struct.llvm::AlignedCharArrayUnion.0"] }
%"class.llvm::raw_svector_ostream" = type { %"class.llvm::raw_pwrite_stream.base", %"class.llvm::SmallVectorImpl"* }
%"class.llvm::raw_pwrite_stream.base" = type { %"class.llvm::raw_ostream.base" }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase.base", [7 x i8] }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon.base", [7 x i8] }

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZN4llvm11raw_ostream13SetUnbufferedEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc = comdat any

@.str = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%.\00", align 1
@_ZTVN4llvm19raw_svector_ostreamE = external unnamed_addr constant { [14 x i8*] }, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamEjmNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i32, i64, i32) local_unnamed_addr #0 {
  tail call fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i32 %1, i64 %2, i32 %3, i1 zeroext false) #8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamEimNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i32, i64, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %1, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i32 %1, i64 %2, i32 %3, i1 zeroext false) #8
  br label %9

7:                                                ; preds = %4
  %8 = sub i32 0, %1
  tail call fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i32 %8, i64 %2, i32 %3, i1 zeroext true) #8
  br label %9

9:                                                ; preds = %6, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamEmmNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32) local_unnamed_addr #0 {
  tail call fastcc void @_ZL14write_unsignedImEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %1, i64 %2, i32 %3, i1 zeroext false) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL14write_unsignedImEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32, i1 zeroext) unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = icmp ult i64 %1, 4294967296
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = trunc i64 %1 to i32
  tail call fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i32 %9, i64 %2, i32 %3, i1 zeroext %4) #9
  br label %65

10:                                               ; preds = %5
  %11 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 48, i64 128, i1 false) #10
  %12 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 128
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi i64 [ %1, %10 ], [ %20, %13 ]
  %15 = phi i8* [ %12, %10 ], [ %19, %13 ]
  %16 = urem i64 %14, 10
  %17 = trunc i64 %16 to i8
  %18 = or i8 %17, 48
  %19 = getelementptr inbounds i8, i8* %15, i64 -1
  store i8 %18, i8* %19, align 1
  %20 = udiv i64 %14, 10
  %21 = icmp ugt i64 %14, 9
  br i1 %21, label %13, label %22

22:                                               ; preds = %13
  %23 = ptrtoint i8* %12 to i64
  %24 = ptrtoint i8* %19 to i64
  %25 = sub i64 %23, %24
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  br i1 %4, label %28, label %38

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 45) #8
  br label %38

36:                                               ; preds = %28
  %37 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %37, i8** %29, align 8
  store i8 45, i8* %30, align 1
  br label %38

38:                                               ; preds = %36, %34, %22
  %39 = icmp ult i64 %27, %2
  %40 = icmp ne i32 %3, 1
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %57

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %54, %42
  %46 = phi i64 [ %27, %42 ], [ %55, %54 ]
  %47 = load i8*, i8** %43, align 8
  %48 = load i8*, i8** %44, align 8
  %49 = icmp ult i8* %47, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 48) #8
  br label %54

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %47, i64 1
  store i8* %53, i8** %43, align 8
  store i8 48, i8* %47, align 1
  br label %54

54:                                               ; preds = %52, %50
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %2
  br i1 %56, label %57, label %45

57:                                               ; preds = %54, %38
  %58 = icmp eq i32 %3, 1
  %59 = sub nsw i64 0, %27
  %60 = getelementptr inbounds i8, i8* %12, i64 %59
  br i1 %58, label %61, label %62

61:                                               ; preds = %57
  call fastcc void @_ZL15writeWithCommasRN4llvm11raw_ostreamENS_8ArrayRefIcEE(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i8* %60, i64 %27) #8
  br label %64

62:                                               ; preds = %57
  %63 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %60, i64 %27) #8
  br label %64

64:                                               ; preds = %61, %62
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #10
  br label %65

65:                                               ; preds = %64, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamElmNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i64 %1, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call fastcc void @_ZL14write_unsignedImEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %1, i64 %2, i32 %3, i1 zeroext false) #8
  br label %9

7:                                                ; preds = %4
  %8 = sub i64 0, %1
  tail call fastcc void @_ZL14write_unsignedImEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %8, i64 %2, i32 %3, i1 zeroext true) #8
  br label %9

9:                                                ; preds = %6, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamEymNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32) local_unnamed_addr #0 {
  tail call fastcc void @_ZL14write_unsignedIyEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %1, i64 %2, i32 %3, i1 zeroext false) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL14write_unsignedIyEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32, i1 zeroext) unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = icmp ult i64 %1, 4294967296
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = trunc i64 %1 to i32
  tail call fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i32 %9, i64 %2, i32 %3, i1 zeroext %4) #9
  br label %65

10:                                               ; preds = %5
  %11 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 48, i64 128, i1 false) #10
  %12 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 128
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi i64 [ %1, %10 ], [ %20, %13 ]
  %15 = phi i8* [ %12, %10 ], [ %19, %13 ]
  %16 = urem i64 %14, 10
  %17 = trunc i64 %16 to i8
  %18 = or i8 %17, 48
  %19 = getelementptr inbounds i8, i8* %15, i64 -1
  store i8 %18, i8* %19, align 1
  %20 = udiv i64 %14, 10
  %21 = icmp ugt i64 %14, 9
  br i1 %21, label %13, label %22

22:                                               ; preds = %13
  %23 = ptrtoint i8* %12 to i64
  %24 = ptrtoint i8* %19 to i64
  %25 = sub i64 %23, %24
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  br i1 %4, label %28, label %38

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ult i8* %30, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 45) #8
  br label %38

36:                                               ; preds = %28
  %37 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %37, i8** %29, align 8
  store i8 45, i8* %30, align 1
  br label %38

38:                                               ; preds = %36, %34, %22
  %39 = icmp ult i64 %27, %2
  %40 = icmp ne i32 %3, 1
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %57

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %54, %42
  %46 = phi i64 [ %27, %42 ], [ %55, %54 ]
  %47 = load i8*, i8** %43, align 8
  %48 = load i8*, i8** %44, align 8
  %49 = icmp ult i8* %47, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 48) #8
  br label %54

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %47, i64 1
  store i8* %53, i8** %43, align 8
  store i8 48, i8* %47, align 1
  br label %54

54:                                               ; preds = %52, %50
  %55 = add i64 %46, 1
  %56 = icmp eq i64 %55, %2
  br i1 %56, label %57, label %45

57:                                               ; preds = %54, %38
  %58 = icmp eq i32 %3, 1
  %59 = sub nsw i64 0, %27
  %60 = getelementptr inbounds i8, i8* %12, i64 %59
  br i1 %58, label %61, label %62

61:                                               ; preds = %57
  call fastcc void @_ZL15writeWithCommasRN4llvm11raw_ostreamENS_8ArrayRefIcEE(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i8* %60, i64 %27) #8
  br label %64

62:                                               ; preds = %57
  %63 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %60, i64 %27) #8
  br label %64

64:                                               ; preds = %61, %62
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #10
  br label %65

65:                                               ; preds = %64, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm13write_integerERNS_11raw_ostreamExmNS_12IntegerStyleE(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i64, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i64 %1, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call fastcc void @_ZL14write_unsignedIyEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %1, i64 %2, i32 %3, i1 zeroext false) #8
  br label %9

7:                                                ; preds = %4
  %8 = sub i64 0, %1
  tail call fastcc void @_ZL14write_unsignedIyEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i64 %8, i64 %2, i32 %3, i1 zeroext true) #8
  br label %9

9:                                                ; preds = %6, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm9write_hexERNS_11raw_ostreamEmNS_13HexPrintStyleENS_8OptionalImEE(%"class.llvm::raw_ostream"* dereferenceable(40), i64, i32, %"class.llvm::Optional"* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca [128 x i8], align 16
  %6 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %3, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.llvm::Optional"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 128
  br i1 %12, label %13, label %15

13:                                               ; preds = %4, %9
  %14 = phi i64 [ %11, %9 ], [ 0, %4 ]
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i64 [ %14, %13 ], [ 128, %9 ]
  %17 = tail call i64 @llvm.ctlz.i64(i64 %1, i1 false) #10, !range !3
  %18 = sub nuw nsw i64 67, %17
  %19 = lshr i64 %18, 2
  %20 = trunc i64 %19 to i32
  %21 = or i32 %2, 1
  %22 = icmp eq i32 %21, 3
  %23 = and i32 %2, -3
  %24 = icmp eq i32 %23, 0
  %25 = select i1 %22, i32 2, i32 0
  %26 = trunc i64 %16 to i32
  %27 = icmp ugt i32 %20, 1
  %28 = select i1 %27, i32 %20, i32 1
  %29 = add i32 %28, %25
  %30 = icmp ugt i32 %29, %26
  %31 = select i1 %30, i32 %29, i32 %26
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %32) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 48, i64 128, i1 false)
  br i1 %22, label %33, label %35

33:                                               ; preds = %15
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 1
  store i8 120, i8* %34, align 1
  br label %35

35:                                               ; preds = %33, %15
  %36 = zext i32 %31 to i64
  %37 = icmp eq i64 %1, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 %36
  %40 = select i1 %24, i32 55, i32 87
  br label %41

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %1, %38 ], [ %52, %41 ]
  %43 = phi i8* [ %39, %38 ], [ %51, %41 ]
  %44 = trunc i64 %42 to i32
  %45 = and i32 %44, 15
  %46 = icmp ult i32 %45, 10
  %47 = or i32 %45, 48
  %48 = add nuw nsw i32 %40, %45
  %49 = select i1 %46, i32 %47, i32 %48
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds i8, i8* %43, i64 -1
  store i8 %50, i8* %51, align 1
  %52 = lshr i64 %42, 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %41

54:                                               ; preds = %41, %35
  %55 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* nonnull %32, i64 %36) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %32) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN4llvm12write_doubleERNS_11raw_ostreamEdNS_10FloatStyleENS_8OptionalImEE(%"class.llvm::raw_ostream"* dereferenceable(40), double, i32, %"class.llvm::Optional"* nocapture readonly) local_unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.llvm::SmallString", align 8
  %8 = alloca %"class.llvm::raw_svector_ostream", align 8
  %9 = alloca [32 x i8], align 16
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i32 %2, 2
  %12 = select i1 %11, i64 6, i64 2
  store i64 %12, i64* %6, align 8
  %13 = getelementptr inbounds %"class.llvm::Optional", %"class.llvm::Optional"* %3, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = bitcast %"class.llvm::Optional"* %3 to i64*
  %17 = select i1 %15, i64* %6, i64* %16
  %18 = load i64, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %19 = fcmp uno double %1, 0.000000e+00
  br i1 %19, label %20, label %22

20:                                               ; preds = %4
  %21 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #8
  br label %87

22:                                               ; preds = %4
  %23 = tail call double @llvm.fabs.f64(double %1) #11
  %24 = fcmp oeq double %23, 0x7FF0000000000000
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #8
  br label %87

27:                                               ; preds = %22
  %28 = icmp eq i32 %2, 1
  %29 = select i1 %28, i8 69, i8 102
  %30 = icmp eq i32 %2, 0
  %31 = select i1 %30, i8 101, i8 %29
  %32 = bitcast %"class.llvm::SmallString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %37 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %38 = bitcast i8* %37 to i64*
  store i64 -6148914691236517206, i64* %38, align 8
  store i8* %36, i8** %33, align 8
  store i8* %36, i8** %34, align 8
  %39 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %7, i64 1, i32 0
  %40 = bitcast i8** %35 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %39, %"class.llvm::SmallVector"** %40, align 8
  %41 = bitcast %"class.llvm::raw_svector_ostream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %41) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  %42 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %8, i64 0, i32 0, i32 0, i32 4
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %8, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast i8** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4llvm19raw_svector_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %8, i64 0, i32 1
  %47 = bitcast %"class.llvm::SmallVectorImpl"** %46 to %"class.llvm::SmallString"**
  store %"class.llvm::SmallString"* %7, %"class.llvm::SmallString"** %47, align 8
  %48 = bitcast %"class.llvm::raw_svector_ostream"* %8 to %"class.llvm::raw_ostream"*
  call void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"* nonnull %48) #8
  %49 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #8
  %50 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %49, i64 %18) #8
  %51 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %50, i64 0, i32 3
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %50, i64 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ult i8* %52, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %27
  %57 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %50, i8 zeroext %31) #8
  br label %60

58:                                               ; preds = %27
  %59 = getelementptr inbounds i8, i8* %52, i64 1
  store i8* %59, i8** %51, align 8
  store i8 %31, i8* %52, align 1
  br label %60

60:                                               ; preds = %56, %58
  %61 = icmp eq i32 %2, 3
  %62 = fmul double %1, 1.000000e+02
  %63 = select i1 %61, double %62, double %1
  %64 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #10
  %65 = bitcast %"class.llvm::SmallString"* %7 to %"class.llvm::SmallVectorTemplateBase"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %64, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* nonnull %65, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %66 = load i8*, i8** %34, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 -1
  store i8* %67, i8** %34, align 8
  %68 = load i8*, i8** %33, align 8
  %69 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %64, i64 32, i8* %68, double %63) #8
  %70 = call i64 @strlen(i8* nonnull %64) #12
  %71 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* nonnull %64, i64 %70) #8
  br i1 %61, label %72, label %82

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ult i8* %74, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 37) #8
  br label %82

80:                                               ; preds = %72
  %81 = getelementptr inbounds i8, i8* %74, i64 1
  store i8* %81, i8** %73, align 8
  store i8 37, i8* %74, align 1
  br label %82

82:                                               ; preds = %80, %78, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #10
  call void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %41) #10
  %83 = load i8*, i8** %33, align 8
  %84 = icmp eq i8* %83, %36
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  call void @free(i8* %83) #8
  br label %86

86:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #10
  br label %87

87:                                               ; preds = %86, %25, %20
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i64 @_ZN4llvm19getDefaultPrecisionENS_10FloatStyleE(i32) local_unnamed_addr #3 {
  %2 = icmp ult i32 %0, 2
  %3 = select i1 %2, i64 6, i64 2
  ret i64 %3
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i1 @_ZN4llvm18isPrefixedHexStyleENS_13HexPrintStyleE(i32) local_unnamed_addr #3 {
  %2 = or i32 %0, 1
  %3 = icmp eq i32 %2, 3
  ret i1 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #8
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* %0) #8
  br label %8

8:                                                ; preds = %1, %7
  tail call void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"* %0, i8* null, i64 0, i32 0) #8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"*) unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL19write_unsigned_implIjEvRN4llvm11raw_ostreamET_mNS0_12IntegerStyleEb(%"class.llvm::raw_ostream"* dereferenceable(40), i32, i64, i32, i1 zeroext) unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 48, i64 128, i1 false)
  %8 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 128
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i32 [ %1, %5 ], [ %16, %9 ]
  %11 = phi i8* [ %8, %5 ], [ %15, %9 ]
  %12 = urem i32 %10, 10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %13, 48
  %15 = getelementptr inbounds i8, i8* %11, i64 -1
  store i8 %14, i8* %15, align 1
  %16 = udiv i32 %10, 10
  %17 = icmp ugt i32 %10, 9
  br i1 %17, label %9, label %18

18:                                               ; preds = %9
  %19 = ptrtoint i8* %8 to i64
  %20 = ptrtoint i8* %15 to i64
  %21 = sub i64 %19, %20
  %22 = shl i64 %21, 32
  %23 = ashr exact i64 %22, 32
  br i1 %4, label %24, label %34

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ult i8* %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 45) #8
  br label %34

32:                                               ; preds = %24
  %33 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %33, i8** %25, align 8
  store i8 45, i8* %26, align 1
  br label %34

34:                                               ; preds = %32, %30, %18
  %35 = icmp ult i64 %23, %2
  %36 = icmp ne i32 %3, 1
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %53

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  br label %41

41:                                               ; preds = %50, %38
  %42 = phi i64 [ %23, %38 ], [ %51, %50 ]
  %43 = load i8*, i8** %39, align 8
  %44 = load i8*, i8** %40, align 8
  %45 = icmp ult i8* %43, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 48) #8
  br label %50

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %49, i8** %39, align 8
  store i8 48, i8* %43, align 1
  br label %50

50:                                               ; preds = %46, %48
  %51 = add i64 %42, 1
  %52 = icmp eq i64 %51, %2
  br i1 %52, label %53, label %41

53:                                               ; preds = %50, %34
  %54 = icmp eq i32 %3, 1
  %55 = sub nsw i64 0, %23
  %56 = getelementptr inbounds i8, i8* %8, i64 %55
  br i1 %54, label %57, label %58

57:                                               ; preds = %53
  call fastcc void @_ZL15writeWithCommasRN4llvm11raw_ostreamENS_8ArrayRefIcEE(%"class.llvm::raw_ostream"* dereferenceable(40) %0, i8* %56, i64 %23) #9
  br label %60

58:                                               ; preds = %53
  %59 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %56, i64 %23) #8
  br label %60

60:                                               ; preds = %58, %57
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZL15writeWithCommasRN4llvm11raw_ostreamENS_8ArrayRefIcEE(%"class.llvm::raw_ostream"* dereferenceable(40), i8*, i64) unnamed_addr #0 {
  %4 = add i64 %2, -1
  %5 = urem i64 %4, 3
  %6 = add nuw nsw i64 %5, 1
  %7 = icmp ult i64 %6, %2
  %8 = select i1 %7, i64 %6, i64 %2
  %9 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %8) #8
  %10 = sub i64 %2, %6
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %1, i64 %6
  %14 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  br label %16

16:                                               ; preds = %12, %26
  %17 = phi i64 [ %10, %12 ], [ %28, %26 ]
  %18 = phi i8* [ %13, %12 ], [ %29, %26 ]
  %19 = load i8*, i8** %14, align 8
  %20 = load i8*, i8** %15, align 8
  %21 = icmp ult i8* %19, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %0, i8 zeroext 44) #8
  br label %26

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %25, i8** %14, align 8
  store i8 44, i8* %19, align 1
  br label %26

26:                                               ; preds = %22, %24
  %27 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %18, i64 3) #8
  %28 = add i64 %17, -3
  %29 = getelementptr inbounds i8, i8* %18, i64 3
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %16

31:                                               ; preds = %26, %3
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !4

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 1) #8
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = load i8, i8* %1, align 1
  store i8 %14, i8* %13, align 1
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %16, i8** %3, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #7

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize }
attributes #9 = { optsize }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind optsize readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!"branch_weights", i32 2000, i32 1}
