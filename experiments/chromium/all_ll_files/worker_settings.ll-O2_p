; ModuleID = '../../third_party/blink/renderer/core/workers/worker_settings.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worker_settings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.std::__1::unique_ptr" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i32, %"class.WTF::String" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::Settings"* }
%"class.blink::IntSize" = type { i32, i32 }

@_ZN5blink14WorkerSettingsC1EPNS_8SettingsE = hidden unnamed_addr alias void (%"class.blink::WorkerSettings"*, %"class.blink::Settings"*), void (%"class.blink::WorkerSettings"*, %"class.blink::Settings"*)* @_ZN5blink14WorkerSettingsC2EPNS_8SettingsE
@_ZN5blink14WorkerSettingsC1EbbbbRKNS_25GenericFontFamilySettingsE = hidden unnamed_addr alias void (%"class.blink::WorkerSettings"*, i1, i1, i1, i1, %"class.blink::GenericFontFamilySettings"*), void (%"class.blink::WorkerSettings"*, i1, i1, i1, i1, %"class.blink::GenericFontFamilySettings"*)* @_ZN5blink14WorkerSettingsC2EbbbbRKNS_25GenericFontFamilySettingsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WorkerSettingsC2EPNS_8SettingsE(%"class.blink::WorkerSettings"*, %"class.blink::Settings"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::GenericFontFamilySettings"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #4
  %5 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 1
  %6 = bitcast %"class.WTF::HashMap"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #4
  %7 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 2
  %8 = bitcast %"class.WTF::HashMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #4
  %9 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 3
  %10 = bitcast %"class.WTF::HashMap"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #4
  %11 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 4
  %12 = bitcast %"class.WTF::HashMap"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #4
  %13 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 5
  %14 = bitcast %"class.WTF::HashMap"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #4
  %15 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 6
  %16 = bitcast %"class.WTF::HashMap"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #4
  %17 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 7
  %18 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = icmp eq %"class.blink::Settings"* %1, null
  %20 = bitcast %"class.blink::WorkerSettings"* %0 to i32*
  store i32 0, i32* %20, align 8
  br i1 %19, label %45, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %1, i64 0, i32 71
  %27 = bitcast [14 x i8]* %26 to i112*
  %28 = load i112, i112* %27, align 8
  %29 = lshr i112 %28, 24
  %30 = trunc i112 %29 to i8
  %31 = and i8 %30, 1
  store i8 %31, i8* %22, align 8
  %32 = load i112, i112* %27, align 8
  %33 = lshr i112 %32, 85
  %34 = trunc i112 %33 to i8
  %35 = and i8 %34, 1
  store i8 %35, i8* %25, align 1
  %36 = load i112, i112* %27, align 8
  %37 = lshr i112 %36, 12
  %38 = trunc i112 %37 to i8
  %39 = and i8 %38, 1
  store i8 %39, i8* %24, align 2
  %40 = load i112, i112* %27, align 8
  %41 = lshr i112 %40, 88
  %42 = trunc i112 %41 to i8
  %43 = and i8 %42, 1
  store i8 %43, i8* %23, align 1
  %44 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %1, i64 0, i32 1
  tail call void @_ZNK5blink25GenericFontFamilySettings14IsolatedCopyToERS0_(%"class.blink::GenericFontFamilySettings"* %44, %"class.blink::GenericFontFamilySettings"* dereferenceable(176) %3) #4
  br label %45

45:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WorkerSettings26CopyFlagValuesFromSettingsEPNS_8SettingsE(%"class.blink::WorkerSettings"*, %"class.blink::Settings"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %1, i64 0, i32 71
  %4 = bitcast [14 x i8]* %3 to i112*
  %5 = load i112, i112* %4, align 8
  %6 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 0
  %7 = lshr i112 %5, 24
  %8 = trunc i112 %7 to i8
  %9 = and i8 %8, 1
  store i8 %9, i8* %6, align 8
  %10 = load i112, i112* %4, align 8
  %11 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 1
  %12 = lshr i112 %10, 85
  %13 = trunc i112 %12 to i8
  %14 = and i8 %13, 1
  store i8 %14, i8* %11, align 1
  %15 = load i112, i112* %4, align 8
  %16 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 2
  %17 = lshr i112 %15, 12
  %18 = trunc i112 %17 to i8
  %19 = and i8 %18, 1
  store i8 %19, i8* %16, align 2
  %20 = load i112, i112* %4, align 8
  %21 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 3
  %22 = lshr i112 %20, 88
  %23 = trunc i112 %22 to i8
  %24 = and i8 %23, 1
  store i8 %24, i8* %21, align 1
  %25 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4
  tail call void @_ZNK5blink25GenericFontFamilySettings14IsolatedCopyToERS0_(%"class.blink::GenericFontFamilySettings"* %25, %"class.blink::GenericFontFamilySettings"* dereferenceable(176) %26) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WorkerSettingsC2EbbbbRKNS_25GenericFontFamilySettingsE(%"class.blink::WorkerSettings"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %"class.blink::GenericFontFamilySettings"* dereferenceable(176)) unnamed_addr #0 align 2 {
  %7 = zext i1 %1 to i8
  %8 = zext i1 %2 to i8
  %9 = zext i1 %3 to i8
  %10 = zext i1 %4 to i8
  %11 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 0
  store i8 %7, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 1
  store i8 %8, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 2
  store i8 %9, i8* %13, align 2
  %14 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 3
  store i8 %10, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4
  %16 = bitcast %"class.blink::GenericFontFamilySettings"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #4
  %17 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 1
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #4
  %19 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 2
  %20 = bitcast %"class.WTF::HashMap"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #4
  %21 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 3
  %22 = bitcast %"class.WTF::HashMap"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #4
  %23 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 4
  %24 = bitcast %"class.WTF::HashMap"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #4
  %25 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 5
  %26 = bitcast %"class.WTF::HashMap"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #4
  %27 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 6
  %28 = bitcast %"class.WTF::HashMap"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #4
  %29 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4, i32 7
  %30 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 0, i64* %30, align 8
  tail call void @_ZNK5blink25GenericFontFamilySettings14IsolatedCopyToERS0_(%"class.blink::GenericFontFamilySettings"* %5, %"class.blink::GenericFontFamilySettings"* dereferenceable(176) %15) #4
  ret void
}

declare void @_ZNK5blink25GenericFontFamilySettings14IsolatedCopyToERS0_(%"class.blink::GenericFontFamilySettings"*, %"class.blink::GenericFontFamilySettings"* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WorkerSettings"* @_ZN5blink14WorkerSettings4CopyEPS0_(%"class.blink::WorkerSettings"*) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 184) #4
  %3 = bitcast i8* %2 to %"class.blink::WorkerSettings"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #4
  %5 = getelementptr inbounds i8, i8* %2, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #4
  %6 = getelementptr inbounds i8, i8* %2, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #4
  %7 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #4
  %8 = getelementptr inbounds i8, i8* %2, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #4
  %9 = getelementptr inbounds i8, i8* %2, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #4
  %10 = getelementptr inbounds i8, i8* %2, i64 152
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #4
  %11 = getelementptr inbounds i8, i8* %2, i64 176
  %12 = bitcast i8* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  store i8 %14, i8* %2, align 8
  %15 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %16, i8* %17, align 1
  %18 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 2
  %19 = load i8, i8* %18, align 2, !range !2
  %20 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %19, i8* %20, align 2
  %21 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %22, i8* %23, align 1
  %24 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %0, i64 0, i32 4
  %25 = bitcast i8* %4 to %"class.blink::GenericFontFamilySettings"*
  tail call void @_ZNK5blink25GenericFontFamilySettings14IsolatedCopyToERS0_(%"class.blink::GenericFontFamilySettings"* %24, %"class.blink::GenericFontFamilySettings"* dereferenceable(176) %25) #4
  ret %"class.blink::WorkerSettings"* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
