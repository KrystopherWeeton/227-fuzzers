; ModuleID = '../../third_party/libxml/src/xmlIO.c'
source_filename = "../../third_party/libxml/src/xmlIO.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._xmlInputCallback = type { i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)* }
%struct._xmlOutputCallback = type { i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._xmlParserInputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32, i64 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._xmlBuf = type opaque
%struct._xmlOutputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32 }
%struct._xmlParserInput = type { %struct._xmlParserInputBuffer*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i64, void (i8*)*, i8*, i8*, i32, i32 }
%struct._xmlParserCtxt = type { %struct._xmlSAXHandler*, i8*, %struct._xmlDoc*, i32, i32, i8*, i8*, i32, i32, %struct._xmlParserInput*, i32, i32, %struct._xmlParserInput**, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlParserNodeInfoSeq, i32, i32, i32, i32, i32, i32, %struct._xmlValidCtxt, i32, i32, i8*, i8*, i32, i32, i8**, i64, i64, i32, i32, i32, i8*, i8*, i8*, i32*, i32, i32, i32*, i32, %struct._xmlParserInput*, i32, i32, i32, i32, i8*, i32, i32, i8*, i32, i32, %struct._xmlDict*, i8**, i32, i32, i8*, i8*, i8*, i32, i32, i32, i8**, i32*, %struct._xmlStartTag*, %struct._xmlHashTable*, %struct._xmlHashTable*, i32, i32, i32, i32, %struct._xmlNode*, i32, %struct._xmlAttr*, %struct._xmlError, i32, i64, i64, %struct._xmlParserNodeInfo*, i32, i32, %struct._xmlParserNodeInfo*, i32, i64 }
%struct._xmlSAXHandler = type { void (i8*, i8*, i8*, i8*)*, i32 (i8*)*, i32 (i8*)*, i32 (i8*)*, %struct._xmlParserInput* (i8*, i8*, i8*)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i8*)*, void (i8*, i8*, i8*, i32, i32, i8*, %struct._xmlEnumeration*)*, void (i8*, i8*, i32, %struct._xmlElementContent*)*, void (i8*, i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlSAXLocator*)*, void (i8*)*, void (i8*)*, void (i8*, i8*, i8**)*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlEntity* (i8*, i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*)*, i32, i8*, void (i8*, i8*, i8*, i8*, i32, i8**, i32, i32, i8**)*, void (i8*, i8*, i8*, i8*)*, void (i8*, %struct._xmlError*)* }
%struct._xmlEnumeration = type { %struct._xmlEnumeration*, i8* }
%struct._xmlElementContent = type { i32, i32, i8*, %struct._xmlElementContent*, %struct._xmlElementContent*, %struct._xmlElementContent*, i8* }
%struct._xmlSAXLocator = type { i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*)* }
%struct._xmlEntity = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDtd*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i32, i32, i8*, i8*, %struct._xmlEntity*, i8*, i32, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlParserNodeInfoSeq = type { i64, i64, %struct._xmlParserNodeInfo* }
%struct._xmlValidCtxt = type { i8*, void (i8*, i8*, ...)*, void (i8*, i8*, ...)*, %struct._xmlNode*, i32, i32, %struct._xmlNode**, i32, %struct._xmlDoc*, i32, %struct._xmlValidState*, i32, i32, %struct._xmlValidState*, i8*, i8* }
%struct._xmlValidState = type opaque
%struct._xmlDict = type opaque
%struct._xmlStartTag = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlParserNodeInfo = type { %struct._xmlNode*, i64, i64, i64, i64 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct._xmlURI = type { i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i8*, i32, i8* }
%struct._xmlBuffer = type { i8*, i32, i32, i32, i8* }

@IOerr = internal unnamed_addr constant [57 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i32 0, i32 0)], align 16
@xmlInputCallbackInitialized = internal unnamed_addr global i1 false, align 4
@xmlInputCallbackNr = internal unnamed_addr global i32 0, align 4
@xmlInputCallbackTable = internal unnamed_addr global [15 x %struct._xmlInputCallback] zeroinitializer, align 16
@xmlOutputCallbackInitialized = internal unnamed_addr global i1 false, align 4
@xmlOutputCallbackNr = internal unnamed_addr global i32 0, align 4
@xmlOutputCallbackTable = internal unnamed_addr global [15 x %struct._xmlOutputCallback] zeroinitializer, align 16
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str = private unnamed_addr constant [8 x i8] c"fread()\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"fflush()\00", align 1
@stdin = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"fclose()\00", align 1
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"creating input buffer\00", align 1
@xmlDefaultBufferSize = external local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"creating output buffer\00", align 1
@xmlParserInputBufferCreateFilenameValue = external local_unnamed_addr global %struct._xmlParserInputBuffer* (i8*, i32)*, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@xmlOutputBufferCreateFilenameValue = external local_unnamed_addr global %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*, align 8
@.str.6 = private unnamed_addr constant [21 x i8] c"growing input buffer\00", align 1
@xmlMemStrdup = external local_unnamed_addr global i8* (i8*)*, align 8
@xmlCurrentExternalEntityLoader = internal unnamed_addr global %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)* @xmlDefaultExternalEntityLoader, align 8
@.str.7 = private unnamed_addr constant [25 x i8] c"building canonical path\0A\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"ftp://\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"http://\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"Unknown IO error\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"Permission denied\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Resource temporarily unavailable\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"Bad file descriptor\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"Bad message\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"Resource busy\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Operation canceled\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"No child processes\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Resource deadlock avoided\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Domain error\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"File exists\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"Bad address\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"File too large\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"Operation in progress\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"Interrupted function call\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"Invalid argument\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"Input/output error\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"Is a directory\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"Too many open files\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"Too many links\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"Inappropriate message buffer length\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Filename too long\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"Too many open files in system\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"No such device\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"No such file or directory\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"Exec format error\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"No locks available\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"Not enough space\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"No space left on device\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"Function not implemented\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"Not a directory\00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"Directory not empty\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"Not supported\00", align 1
@.str.43 = private unnamed_addr constant [36 x i8] c"Inappropriate I/O control operation\00", align 1
@.str.44 = private unnamed_addr constant [26 x i8] c"No such device or address\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"Operation not permitted\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"Broken pipe\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"Result too large\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"Read-only file system\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"Invalid seek\00", align 1
@.str.50 = private unnamed_addr constant [16 x i8] c"No such process\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"Operation timed out\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"Improper link\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"Attempt to load network entity %s\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"encoder error\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"flush error\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"no input\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"buffer full\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"loading error\00", align 1
@.str.60 = private unnamed_addr constant [13 x i8] c"not a socket\00", align 1
@.str.61 = private unnamed_addr constant [18 x i8] c"already connected\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"connection refused\00", align 1
@.str.63 = private unnamed_addr constant [20 x i8] c"unreachable network\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"address in use\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"already in use\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"unknown address family\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"file://localhost/\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"file:///\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"file:/\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"fwrite()\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"read()\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"close()\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"write()\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.78 = private unnamed_addr constant [37 x i8] c"failed to load external entity \22%s\22\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @__xmlIOErr(i32, i32, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %60

5:                                                ; preds = %3
  %6 = tail call i32* @__errno_location() #13
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %56 [
    i32 0, label %66
    i32 13, label %57
    i32 11, label %8
    i32 9, label %9
    i32 74, label %10
    i32 16, label %11
    i32 125, label %12
    i32 10, label %13
    i32 35, label %14
    i32 33, label %15
    i32 17, label %16
    i32 14, label %17
    i32 27, label %18
    i32 115, label %19
    i32 4, label %20
    i32 22, label %21
    i32 5, label %22
    i32 21, label %23
    i32 24, label %24
    i32 31, label %25
    i32 90, label %26
    i32 36, label %27
    i32 23, label %28
    i32 19, label %29
    i32 2, label %30
    i32 8, label %31
    i32 37, label %32
    i32 12, label %33
    i32 28, label %34
    i32 38, label %35
    i32 20, label %36
    i32 39, label %37
    i32 95, label %38
    i32 25, label %39
    i32 6, label %40
    i32 1, label %41
    i32 32, label %42
    i32 34, label %43
    i32 30, label %44
    i32 29, label %45
    i32 3, label %46
    i32 110, label %47
    i32 18, label %48
    i32 88, label %49
    i32 106, label %50
    i32 111, label %51
    i32 101, label %52
    i32 98, label %53
    i32 114, label %54
    i32 97, label %55
  ]

8:                                                ; preds = %5
  br label %57

9:                                                ; preds = %5
  br label %57

10:                                               ; preds = %5
  br label %57

11:                                               ; preds = %5
  br label %57

12:                                               ; preds = %5
  br label %57

13:                                               ; preds = %5
  br label %57

14:                                               ; preds = %5
  br label %57

15:                                               ; preds = %5
  br label %57

16:                                               ; preds = %5
  br label %57

17:                                               ; preds = %5
  br label %57

18:                                               ; preds = %5
  br label %57

19:                                               ; preds = %5
  br label %57

20:                                               ; preds = %5
  br label %57

21:                                               ; preds = %5
  br label %57

22:                                               ; preds = %5
  br label %57

23:                                               ; preds = %5
  br label %57

24:                                               ; preds = %5
  br label %57

25:                                               ; preds = %5
  br label %57

26:                                               ; preds = %5
  br label %57

27:                                               ; preds = %5
  br label %57

28:                                               ; preds = %5
  br label %57

29:                                               ; preds = %5
  br label %57

30:                                               ; preds = %5
  br label %57

31:                                               ; preds = %5
  br label %57

32:                                               ; preds = %5
  br label %57

33:                                               ; preds = %5
  br label %57

34:                                               ; preds = %5
  br label %57

35:                                               ; preds = %5
  br label %57

36:                                               ; preds = %5
  br label %57

37:                                               ; preds = %5
  br label %57

38:                                               ; preds = %5
  br label %57

39:                                               ; preds = %5
  br label %57

40:                                               ; preds = %5
  br label %57

41:                                               ; preds = %5
  br label %57

42:                                               ; preds = %5
  br label %57

43:                                               ; preds = %5
  br label %57

44:                                               ; preds = %5
  br label %57

45:                                               ; preds = %5
  br label %57

46:                                               ; preds = %5
  br label %57

47:                                               ; preds = %5
  br label %57

48:                                               ; preds = %5
  br label %57

49:                                               ; preds = %5
  br label %57

50:                                               ; preds = %5
  br label %57

51:                                               ; preds = %5
  br label %57

52:                                               ; preds = %5
  br label %57

53:                                               ; preds = %5
  br label %57

54:                                               ; preds = %5
  br label %57

55:                                               ; preds = %5
  br label %57

56:                                               ; preds = %5
  br label %57

57:                                               ; preds = %5, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8
  %58 = phi i32 [ 1500, %56 ], [ 1556, %55 ], [ 1555, %54 ], [ 1554, %53 ], [ 1553, %52 ], [ 1552, %51 ], [ 1551, %50 ], [ 1550, %49 ], [ 1542, %48 ], [ 1541, %47 ], [ 1540, %46 ], [ 1539, %45 ], [ 1538, %44 ], [ 1537, %43 ], [ 1536, %42 ], [ 1535, %41 ], [ 1534, %40 ], [ 1533, %39 ], [ 1532, %38 ], [ 1531, %37 ], [ 1530, %36 ], [ 1529, %35 ], [ 1528, %34 ], [ 1527, %33 ], [ 1526, %32 ], [ 1525, %31 ], [ 1524, %30 ], [ 1523, %29 ], [ 1522, %28 ], [ 1521, %27 ], [ 1520, %26 ], [ 1519, %25 ], [ 1518, %24 ], [ 1517, %23 ], [ 1516, %22 ], [ 1515, %21 ], [ 1514, %20 ], [ 1513, %19 ], [ 1512, %18 ], [ 1511, %17 ], [ 1510, %16 ], [ 1509, %15 ], [ 1508, %14 ], [ 1507, %13 ], [ 1506, %12 ], [ 1505, %11 ], [ 1504, %10 ], [ 1503, %9 ], [ 1502, %8 ], [ 1501, %5 ]
  %59 = add nsw i32 %58, -1500
  br label %66

60:                                               ; preds = %3
  %61 = icmp sgt i32 %1, 1499
  %62 = add nsw i32 %1, -1500
  br i1 %61, label %63, label %66

63:                                               ; preds = %60
  %64 = icmp ugt i32 %62, 56
  %65 = select i1 %64, i32 0, i32 %62
  br label %66

66:                                               ; preds = %63, %5, %60, %57
  %67 = phi i32 [ %58, %57 ], [ %1, %60 ], [ %7, %5 ], [ %1, %63 ]
  %68 = phi i32 [ %59, %57 ], [ 0, %60 ], [ %7, %5 ], [ %65, %63 ]
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds [57 x i8*], [57 x i8*]* @IOerr, i64 0, i64 %69
  %71 = load i8*, i8** %70, align 8
  tail call void @__xmlSimpleError(i32 %0, i32 %67, %struct._xmlNode* null, i8* %71, i8* %2) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #2

declare void @__xmlSimpleError(i32, i32, %struct._xmlNode*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @__xmlLoaderErr(i8*, i8*, i8*) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %0, i64 332
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %0, i64 272
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %45, label %15

15:                                               ; preds = %10, %5
  %16 = bitcast i8* %0 to %struct._xmlSAXHandler**
  %17 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %16, align 8
  %18 = icmp eq %struct._xmlSAXHandler* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %0, i64 156
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %17, i64 0, i32 22
  %25 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %17, i64 0, i32 21
  %26 = select i1 %23, void (i8*, i8*, ...)** %25, void (i8*, i8*, ...)** %24
  %27 = select i1 %23, i32 1, i32 2
  %28 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** %26, align 8
  %29 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %17, i64 0, i32 27
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -554844497
  br i1 %31, label %32, label %35

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %17, i64 0, i32 31
  %34 = load void (i8*, %struct._xmlError*)*, void (i8*, %struct._xmlError*)** %33, align 8
  br label %35

35:                                               ; preds = %32, %19
  %36 = phi void (i8*, %struct._xmlError*)* [ %34, %32 ], [ null, %19 ]
  %37 = getelementptr inbounds i8, i8* %0, i64 8
  %38 = bitcast i8* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %3, %15, %35
  %41 = phi void (i8*, %struct._xmlError*)* [ %36, %35 ], [ null, %15 ], [ null, %3 ]
  %42 = phi void (i8*, i8*, ...)* [ %28, %35 ], [ null, %15 ], [ null, %3 ]
  %43 = phi i8* [ %39, %35 ], [ null, %15 ], [ null, %3 ]
  %44 = phi i32 [ %27, %35 ], [ 2, %15 ], [ 2, %3 ]
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* %41, void (i8*, i8*, ...)* %42, i8* %43, i8* %0, i8* null, i32 8, i32 1549, i32 %44, i8* null, i32 0, i8* %2, i8* null, i8* null, i32 0, i32 0, i8* %1, i8* %2) #14
  br label %45

45:                                               ; preds = %10, %40
  ret void
}

declare void @__xmlRaiseError(void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlNormalizeWindowsPath(i8*) local_unnamed_addr #0 {
  %2 = tail call i8* @xmlCanonicPath(i8* %0) #14
  ret i8* %2
}

declare i8* @xmlCanonicPath(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @xmlCleanupInputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %1, label %2, label %16

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlInputCallbackNr, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = add nsw i32 %3, -1
  %8 = zext i32 %7 to i64
  %9 = xor i64 %8, -1
  %10 = add nsw i64 %9, %6
  %11 = getelementptr [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %10
  %12 = bitcast %struct._xmlInputCallback* %11 to i8*
  %13 = zext i32 %3 to i64
  %14 = shl nuw nsw i64 %13, 5
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 %14, i1 false)
  br label %15

15:                                               ; preds = %5, %2
  store i32 0, i32* @xmlInputCallbackNr, align 4
  store i1 false, i1* @xmlInputCallbackInitialized, align 4
  br label %16

16:                                               ; preds = %0, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlPopInputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %1, label %2, label %10

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlInputCallbackNr, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = add nsw i32 %3, -1
  store i32 %6, i32* @xmlInputCallbackNr, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %7, i32 0
  %9 = bitcast i32 (i8*)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 32, i1 false)
  br label %10

10:                                               ; preds = %2, %0, %5
  %11 = phi i32 [ %6, %5 ], [ -1, %0 ], [ -1, %2 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @xmlCleanupOutputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlOutputCallbackInitialized, align 4
  br i1 %1, label %2, label %16

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlOutputCallbackNr, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = add nsw i32 %3, -1
  %8 = zext i32 %7 to i64
  %9 = xor i64 %8, -1
  %10 = add nsw i64 %9, %6
  %11 = getelementptr [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %10
  %12 = bitcast %struct._xmlOutputCallback* %11 to i8*
  %13 = zext i32 %3 to i64
  %14 = shl nuw nsw i64 %13, 5
  call void @llvm.memset.p0i8.i64(i8* align 16 %12, i8 0, i64 %14, i1 false)
  br label %15

15:                                               ; preds = %5, %2
  store i32 0, i32* @xmlOutputCallbackNr, align 4
  store i1 false, i1* @xmlOutputCallbackInitialized, align 4
  br label %16

16:                                               ; preds = %0, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlPopOutputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlOutputCallbackInitialized, align 4
  br i1 %1, label %2, label %10

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlOutputCallbackNr, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = add nsw i32 %3, -1
  store i32 %6, i32* @xmlOutputCallbackNr, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %7, i32 0
  %9 = bitcast i32 (i8*)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 32, i1 false)
  br label %10

10:                                               ; preds = %2, %0, %5
  %11 = phi i32 [ %6, %5 ], [ -1, %0 ], [ -1, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlCheckFilename(i8*) local_unnamed_addr #0 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 144, i1 false)
  %4 = icmp eq i8* %0, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.stat* %2 to %struct.stat64*
  %7 = call i32 @__xstat64(i32 1, i8* nonnull %0, %struct.stat64* nonnull %6) #14
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 61440
  %13 = icmp eq i32 %12, 16384
  %14 = select i1 %13, i32 2, i32 1
  br label %15

15:                                               ; preds = %9, %5, %1
  %16 = phi i32 [ 0, %1 ], [ 0, %5 ], [ %14, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3) #14
  ret i32 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @xmlInputReadCallbackNop(i8* nocapture readnone, i8* nocapture readnone, i32) #5 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @xmlFileMatch(i8* nocapture readnone) #5 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlFileOpen(i8*) #0 {
  %2 = tail call fastcc i8* @xmlFileOpen_real(i8* %0)
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call i8* @xmlURIUnescapeString(i8* %0, i32 0, i8* null) #14
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call fastcc i8* @xmlFileOpen_real(i8* nonnull %5)
  %9 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %9(i8* nonnull %5) #14
  br label %10

10:                                               ; preds = %4, %7, %1
  %11 = phi i8* [ %8, %7 ], [ null, %4 ], [ %2, %1 ]
  ret i8* %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @xmlFileOpen_real(i8*) unnamed_addr #0 {
  %2 = alloca %struct.stat, align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0)) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = load i8*, i8** bitcast (%struct._IO_FILE** @stdin to i8**), align 8
  br label %43

9:                                                ; preds = %4
  %10 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i32 17) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %0, i64 16
  br label %25

14:                                               ; preds = %9
  %15 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i32 8) #14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = getelementptr inbounds i8, i8* %0, i64 7
  br label %25

19:                                               ; preds = %14
  %20 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0), i32 6) #14
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds i8, i8* %0, i64 5
  br i1 %21, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 144, i1 false) #14
  br label %29

25:                                               ; preds = %19, %17, %12
  %26 = phi i8* [ %18, %17 ], [ %13, %12 ], [ %22, %19 ]
  %27 = bitcast %struct.stat* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 144, i1 false) #14
  %28 = icmp eq i8* %26, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %23, %25
  %30 = phi i8* [ %24, %23 ], [ %27, %25 ]
  %31 = phi i8* [ %0, %23 ], [ %26, %25 ]
  %32 = bitcast %struct.stat* %2 to %struct.stat64*
  %33 = call i32 @__xstat64(i32 1, i8* nonnull %31, %struct.stat64* nonnull %32) #14
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %37

35:                                               ; preds = %25, %29
  %36 = phi i8* [ %30, %29 ], [ %27, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %36) #14
  br label %43

37:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %30) #14
  %38 = call %struct._IO_FILE* @fopen64(i8* nonnull %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0))
  %39 = icmp eq %struct._IO_FILE* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @__xmlIOErr(i32 8, i32 0, i8* nonnull %31) #14
  br label %41

41:                                               ; preds = %40, %37
  %42 = bitcast %struct._IO_FILE* %38 to i8*
  br label %43

43:                                               ; preds = %35, %1, %41, %7
  %44 = phi i8* [ %42, %41 ], [ %8, %7 ], [ null, %1 ], [ null, %35 ]
  ret i8* %44
}

declare i8* @xmlURIUnescapeString(i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlFileRead(i8*, i8*, i32) #0 {
  %4 = icmp eq i8* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = sext i32 %2 to i64
  %9 = bitcast i8* %0 to %struct._IO_FILE*
  %10 = tail call i64 @fread(i8* nonnull %1, i64 1, i64 %8, %struct._IO_FILE* %9)
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #14
  br label %14

14:                                               ; preds = %7, %13, %3
  %15 = phi i32 [ -1, %3 ], [ %11, %13 ], [ %11, %7 ]
  ret i32 %15
}

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlFileClose(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct._IO_FILE*
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %6 = icmp eq %struct._IO_FILE* %5, %4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = icmp eq %struct._IO_FILE* %7, %4
  %9 = or i1 %6, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = tail call i32 @fflush(%struct._IO_FILE* nonnull %4)
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %10
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #14
  br label %21

14:                                               ; preds = %3
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %16 = icmp eq %struct._IO_FILE* %15, %4
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4)
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #14
  br label %21

21:                                               ; preds = %17, %20, %14, %10, %13, %1
  %22 = phi i32 [ -1, %1 ], [ 0, %13 ], [ 0, %10 ], [ 0, %14 ], [ -1, %20 ], [ 0, %17 ]
  ret i32 %22
}

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlRegisterInputCallbacks(i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)*) local_unnamed_addr #4 {
  %5 = load i32, i32* @xmlInputCallbackNr, align 4
  %6 = icmp sgt i32 %5, 14
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 0
  store i32 (i8*)* %0, i32 (i8*)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 1
  store i8* (i8*)* %1, i8* (i8*)** %10, align 8
  %11 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 2
  store i32 (i8*, i8*, i32)* %2, i32 (i8*, i8*, i32)** %11, align 16
  %12 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 3
  store i32 (i8*)* %3, i32 (i8*)** %12, align 8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* @xmlInputCallbackNr, align 4
  br label %14

14:                                               ; preds = %4, %7
  %15 = phi i32 [ %5, %7 ], [ -1, %4 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlRegisterOutputCallbacks(i32 (i8*)*, i8* (i8*)*, i32 (i8*, i8*, i32)*, i32 (i8*)*) local_unnamed_addr #4 {
  %5 = load i32, i32* @xmlOutputCallbackNr, align 4
  %6 = icmp sgt i32 %5, 14
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 0
  store i32 (i8*)* %0, i32 (i8*)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 1
  store i8* (i8*)* %1, i8* (i8*)** %10, align 8
  %11 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 2
  store i32 (i8*, i8*, i32)* %2, i32 (i8*, i8*, i32)** %11, align 16
  %12 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 3
  store i32 (i8*)* %3, i32 (i8*)** %12, align 8
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* @xmlOutputCallbackNr, align 4
  br label %14

14:                                               ; preds = %4, %7
  %15 = phi i32 [ %5, %7 ], [ -1, %4 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @xmlRegisterDefaultInputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %1, label %13, label %2

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlInputCallbackNr, align 4
  %4 = icmp sgt i32 %3, 14
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %6, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %7, align 16
  %8 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %6, i32 1
  store i8* (i8*)* @xmlFileOpen, i8* (i8*)** %8, align 8
  %9 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %6, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileRead, i32 (i8*, i8*, i32)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %6, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %10, align 8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  %11 = add nsw i32 %3, 1
  store i32 %11, i32* @xmlInputCallbackNr, align 4
  br label %12

12:                                               ; preds = %2, %5
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  br label %13

13:                                               ; preds = %0, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @xmlRegisterDefaultOutputCallbacks() local_unnamed_addr #4 {
  %1 = load i1, i1* @xmlOutputCallbackInitialized, align 4
  br i1 %1, label %13, label %2

2:                                                ; preds = %0
  %3 = load i32, i32* @xmlOutputCallbackNr, align 4
  %4 = icmp sgt i32 %3, 14
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %6, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %7, align 16
  %8 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %6, i32 1
  store i8* (i8*)* @xmlFileOpenW, i8* (i8*)** %8, align 8
  %9 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %6, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileWrite, i32 (i8*, i8*, i32)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %6, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %10, align 8
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  %11 = add nsw i32 %3, 1
  store i32 %11, i32* @xmlOutputCallbackNr, align 4
  br label %12

12:                                               ; preds = %2, %5
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  br label %13

13:                                               ; preds = %0, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @xmlFileOpenW(i8*) #0 {
  %2 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0)) #15
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = load i8*, i8** bitcast (%struct._IO_FILE** @stdout to i8**), align 8
  br label %25

6:                                                ; preds = %1
  %7 = tail call i32 @xmlStrncasecmp(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i32 17) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %0, i64 16
  br label %16

11:                                               ; preds = %6
  %12 = tail call i32 @xmlStrncasecmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i32 8) #14
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds i8, i8* %0, i64 7
  %15 = select i1 %13, i8* %14, i8* %0
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi i8* [ %10, %9 ], [ %15, %11 ]
  %18 = icmp eq i8* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0))
  %21 = icmp eq %struct._IO_FILE* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @__xmlIOErr(i32 8, i32 0, i8* nonnull %17) #14
  br label %23

23:                                               ; preds = %22, %19
  %24 = bitcast %struct._IO_FILE* %20 to i8*
  br label %25

25:                                               ; preds = %16, %23, %4
  %26 = phi i8* [ %24, %23 ], [ %5, %4 ], [ null, %16 ]
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlFileWrite(i8*, i8*, i32) #0 {
  %4 = icmp eq i8* %0, null
  %5 = icmp eq i8* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = sext i32 %2 to i64
  %9 = bitcast i8* %0 to %struct._IO_FILE*
  %10 = tail call i64 @fwrite(i8* nonnull %1, i64 %8, i64 1, %struct._IO_FILE* %9)
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = tail call i32 @ferror(%struct._IO_FILE* %9) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i64 0, i64 0)) #14
  br label %19

17:                                               ; preds = %13, %7
  %18 = mul nsw i32 %11, %2
  br label %19

19:                                               ; preds = %3, %17, %16
  %20 = phi i32 [ -1, %16 ], [ %18, %17 ], [ -1, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32) local_unnamed_addr #0 {
  %2 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %3 = tail call i8* %2(i64 64) #14
  %4 = bitcast i8* %3 to %struct._xmlParserInputBuffer*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %36

7:                                                ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 64, i1 false)
  %8 = load i32, i32* @xmlDefaultBufferSize, align 4
  %9 = shl nsw i32 %8, 1
  %10 = sext i32 %9 to i64
  %11 = tail call %struct._xmlBuf* @xmlBufCreateSize(i64 %10) #14
  %12 = getelementptr inbounds i8, i8* %3, i64 32
  %13 = bitcast i8* %12 to %struct._xmlBuf**
  store %struct._xmlBuf* %11, %struct._xmlBuf** %13, align 8
  %14 = icmp eq %struct._xmlBuf* %11, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %7
  %16 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %16(i8* nonnull %3) #14
  br label %36

17:                                               ; preds = %7
  %18 = tail call i32 @xmlBufSetAllocationScheme(%struct._xmlBuf* nonnull %11, i32 0) #14
  %19 = tail call %struct._xmlCharEncodingHandler* @xmlGetCharEncodingHandler(i32 %0) #14
  %20 = getelementptr inbounds i8, i8* %3, i64 24
  %21 = bitcast i8* %20 to %struct._xmlCharEncodingHandler**
  store %struct._xmlCharEncodingHandler* %19, %struct._xmlCharEncodingHandler** %21, align 8
  %22 = icmp eq %struct._xmlCharEncodingHandler* %19, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = load i32, i32* @xmlDefaultBufferSize, align 4
  %25 = shl nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = tail call %struct._xmlBuf* @xmlBufCreateSize(i64 %26) #14
  br label %28

28:                                               ; preds = %17, %23
  %29 = phi %struct._xmlBuf* [ %27, %23 ], [ null, %17 ]
  %30 = getelementptr inbounds i8, i8* %3, i64 40
  %31 = bitcast i8* %30 to %struct._xmlBuf**
  store %struct._xmlBuf* %29, %struct._xmlBuf** %31, align 8
  %32 = getelementptr inbounds i8, i8* %3, i64 48
  %33 = bitcast i8* %32 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false)
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %3, i64 56
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %36

36:                                               ; preds = %28, %15, %6
  %37 = phi %struct._xmlParserInputBuffer* [ null, %6 ], [ null, %15 ], [ %4, %28 ]
  ret %struct._xmlParserInputBuffer* %37
}

declare %struct._xmlBuf* @xmlBufCreateSize(i64) local_unnamed_addr #3

declare i32 @xmlBufSetAllocationScheme(%struct._xmlBuf*, i32) local_unnamed_addr #3

declare %struct._xmlCharEncodingHandler* @xmlGetCharEncodingHandler(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlAllocOutputBuffer(%struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %2 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %3 = tail call i8* %2(i64 56) #14
  %4 = bitcast i8* %3 to %struct._xmlOutputBuffer*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %40

7:                                                ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 56, i1 false)
  %8 = tail call %struct._xmlBuf* @xmlBufCreate() #14
  %9 = getelementptr inbounds i8, i8* %3, i64 32
  %10 = bitcast i8* %9 to %struct._xmlBuf**
  store %struct._xmlBuf* %8, %struct._xmlBuf** %10, align 8
  %11 = icmp eq %struct._xmlBuf* %8, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %13(i8* nonnull %3) #14
  br label %40

14:                                               ; preds = %7
  %15 = tail call i32 @xmlBufGetAllocationScheme(%struct._xmlBuf* nonnull %8) #14
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load %struct._xmlBuf*, %struct._xmlBuf** %10, align 8
  %19 = tail call i32 @xmlBufSetAllocationScheme(%struct._xmlBuf* %18, i32 0) #14
  br label %20

20:                                               ; preds = %17, %14
  %21 = getelementptr inbounds i8, i8* %3, i64 24
  %22 = bitcast i8* %21 to %struct._xmlCharEncodingHandler**
  store %struct._xmlCharEncodingHandler* %0, %struct._xmlCharEncodingHandler** %22, align 8
  %23 = icmp eq %struct._xmlCharEncodingHandler* %0, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = tail call %struct._xmlBuf* @xmlBufCreateSize(i64 4000) #14
  %26 = getelementptr inbounds i8, i8* %3, i64 40
  %27 = bitcast i8* %26 to %struct._xmlBuf**
  store %struct._xmlBuf* %25, %struct._xmlBuf** %27, align 8
  %28 = icmp eq %struct._xmlBuf* %25, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = load %struct._xmlBuf*, %struct._xmlBuf** %10, align 8
  tail call void @xmlBufFree(%struct._xmlBuf* %30) #14
  %31 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %31(i8* nonnull %3) #14
  br label %40

32:                                               ; preds = %24
  %33 = tail call i32 @xmlCharEncOutput(%struct._xmlOutputBuffer* nonnull %4, i32 1) #14
  br label %37

34:                                               ; preds = %20
  %35 = getelementptr inbounds i8, i8* %3, i64 40
  %36 = bitcast i8* %35 to %struct._xmlBuf**
  store %struct._xmlBuf* null, %struct._xmlBuf** %36, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = getelementptr inbounds i8, i8* %3, i64 48
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false)
  br label %40

40:                                               ; preds = %37, %29, %12, %6
  %41 = phi %struct._xmlOutputBuffer* [ null, %6 ], [ null, %12 ], [ null, %29 ], [ %4, %37 ]
  ret %struct._xmlOutputBuffer* %41
}

declare %struct._xmlBuf* @xmlBufCreate() local_unnamed_addr #3

declare i32 @xmlBufGetAllocationScheme(%struct._xmlBuf*) local_unnamed_addr #3

declare void @xmlBufFree(%struct._xmlBuf*) local_unnamed_addr #3

declare i32 @xmlCharEncOutput(%struct._xmlOutputBuffer*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %2 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %3 = tail call i8* %2(i64 56) #14
  %4 = bitcast i8* %3 to %struct._xmlOutputBuffer*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %35

7:                                                ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 56, i1 false)
  %8 = tail call %struct._xmlBuf* @xmlBufCreate() #14
  %9 = getelementptr inbounds i8, i8* %3, i64 32
  %10 = bitcast i8* %9 to %struct._xmlBuf**
  store %struct._xmlBuf* %8, %struct._xmlBuf** %10, align 8
  %11 = icmp eq %struct._xmlBuf* %8, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %13(i8* nonnull %3) #14
  br label %35

14:                                               ; preds = %7
  %15 = tail call i32 @xmlBufSetAllocationScheme(%struct._xmlBuf* nonnull %8, i32 3) #14
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to %struct._xmlCharEncodingHandler**
  store %struct._xmlCharEncodingHandler* %0, %struct._xmlCharEncodingHandler** %17, align 8
  %18 = icmp eq %struct._xmlCharEncodingHandler* %0, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %14
  %20 = tail call %struct._xmlBuf* @xmlBufCreateSize(i64 4000) #14
  %21 = getelementptr inbounds i8, i8* %3, i64 40
  %22 = bitcast i8* %21 to %struct._xmlBuf**
  store %struct._xmlBuf* %20, %struct._xmlBuf** %22, align 8
  %23 = icmp eq %struct._xmlBuf* %20, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %struct._xmlBuf*, %struct._xmlBuf** %10, align 8
  tail call void @xmlBufFree(%struct._xmlBuf* %25) #14
  %26 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %26(i8* nonnull %3) #14
  br label %35

27:                                               ; preds = %19
  %28 = tail call i32 @xmlCharEncOutput(%struct._xmlOutputBuffer* nonnull %4, i32 1) #14
  br label %32

29:                                               ; preds = %14
  %30 = getelementptr inbounds i8, i8* %3, i64 40
  %31 = bitcast i8* %30 to %struct._xmlBuf**
  store %struct._xmlBuf* null, %struct._xmlBuf** %31, align 8
  br label %32

32:                                               ; preds = %29, %27
  %33 = getelementptr inbounds i8, i8* %3, i64 48
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false)
  br label %35

35:                                               ; preds = %32, %24, %12, %6
  %36 = phi %struct._xmlOutputBuffer* [ null, %6 ], [ null, %12 ], [ null, %24 ], [ %4, %32 ]
  ret %struct._xmlOutputBuffer* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlFreeParserInputBuffer(%struct._xmlParserInputBuffer*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlParserInputBuffer* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 5
  %5 = load %struct._xmlBuf*, %struct._xmlBuf** %4, align 8
  %6 = icmp eq %struct._xmlBuf* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @xmlBufFree(%struct._xmlBuf* nonnull %5) #14
  store %struct._xmlBuf* null, %struct._xmlBuf** %4, align 8
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 3
  %10 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %9, align 8
  %11 = icmp eq %struct._xmlCharEncodingHandler* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @xmlCharEncCloseFunc(%struct._xmlCharEncodingHandler* nonnull %10) #14
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 2
  %16 = load i32 (i8*)*, i32 (i8*)** %15, align 8
  %17 = icmp eq i32 (i8*)* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 %16(i8* %20) #14
  br label %22

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 4
  %24 = load %struct._xmlBuf*, %struct._xmlBuf** %23, align 8
  %25 = icmp eq %struct._xmlBuf* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @xmlBufFree(%struct._xmlBuf* nonnull %24) #14
  store %struct._xmlBuf* null, %struct._xmlBuf** %23, align 8
  br label %27

27:                                               ; preds = %22, %26
  %28 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %29 = bitcast %struct._xmlParserInputBuffer* %0 to i8*
  tail call void %28(i8* nonnull %29) #14
  br label %30

30:                                               ; preds = %1, %27
  ret void
}

declare i32 @xmlCharEncCloseFunc(%struct._xmlCharEncodingHandler*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %2, label %45, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 1
  %5 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %4, align 8
  %6 = icmp eq i32 (i8*, i8*, i32)* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @xmlOutputBufferFlush(%struct._xmlOutputBuffer* nonnull %0)
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 2
  %11 = load i32 (i8*)*, i32 (i8*)** %10, align 8
  %12 = icmp eq i32 (i8*)* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = tail call i32 %11(i8* %15) #14
  br label %17

17:                                               ; preds = %9, %13
  %18 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %19 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 5
  %22 = load %struct._xmlBuf*, %struct._xmlBuf** %21, align 8
  %23 = icmp eq %struct._xmlBuf* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  tail call void @xmlBufFree(%struct._xmlBuf* nonnull %22) #14
  store %struct._xmlBuf* null, %struct._xmlBuf** %21, align 8
  br label %25

25:                                               ; preds = %17, %24
  %26 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 3
  %27 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %26, align 8
  %28 = icmp eq %struct._xmlCharEncodingHandler* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @xmlCharEncCloseFunc(%struct._xmlCharEncodingHandler* nonnull %27) #14
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %33 = load %struct._xmlBuf*, %struct._xmlBuf** %32, align 8
  %34 = icmp eq %struct._xmlBuf* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @xmlBufFree(%struct._xmlBuf* nonnull %33) #14
  store %struct._xmlBuf* null, %struct._xmlBuf** %32, align 8
  br label %36

36:                                               ; preds = %31, %35
  %37 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 7
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = select i1 %39, i32 %18, i32 -1
  %41 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %42 = bitcast %struct._xmlOutputBuffer* %0 to i8*
  tail call void %41(i8* nonnull %42) #14
  %43 = icmp eq i32 %40, 0
  %44 = select i1 %43, i32 %20, i32 %40
  br label %45

45:                                               ; preds = %1, %36
  %46 = phi i32 [ %44, %36 ], [ -1, %1 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlOutputBufferFlush(%struct._xmlOutputBuffer*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %2, label %71, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %71

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 5
  %9 = load %struct._xmlBuf*, %struct._xmlBuf** %8, align 8
  %10 = icmp eq %struct._xmlBuf* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 3
  %13 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %12, align 8
  %14 = icmp eq %struct._xmlCharEncodingHandler* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11, %19
  %16 = tail call i32 @xmlCharEncOutput(%struct._xmlOutputBuffer* nonnull %0, i32 0) #14
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @__xmlSimpleError(i32 8, i32 1544, %struct._xmlNode* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* null) #14
  store i32 1544, i32* %4, align 4
  br label %71

19:                                               ; preds = %15
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %21, label %15

21:                                               ; preds = %19
  %22 = load %struct._xmlBuf*, %struct._xmlBuf** %8, align 8
  %23 = icmp eq %struct._xmlBuf* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %21
  %25 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %12, align 8
  %26 = icmp eq %struct._xmlCharEncodingHandler* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 1
  %29 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %28, align 8
  %30 = icmp eq i32 (i8*, i8*, i32)* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i8* @xmlBufContent(%struct._xmlBuf* nonnull %22) #14
  %35 = load %struct._xmlBuf*, %struct._xmlBuf** %8, align 8
  %36 = tail call i64 @xmlBufUse(%struct._xmlBuf* %35) #14
  %37 = trunc i64 %36 to i32
  %38 = tail call i32 %29(i8* %33, i8* %34, i32 %37) #14
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %57, label %55

40:                                               ; preds = %11, %7, %27, %24, %21
  %41 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 1
  %42 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %41, align 8
  %43 = icmp eq i32 (i8*, i8*, i32)* %42, null
  br i1 %43, label %63, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %48 = load %struct._xmlBuf*, %struct._xmlBuf** %47, align 8
  %49 = tail call i8* @xmlBufContent(%struct._xmlBuf* %48) #14
  %50 = load %struct._xmlBuf*, %struct._xmlBuf** %47, align 8
  %51 = tail call i64 @xmlBufUse(%struct._xmlBuf* %50) #14
  %52 = trunc i64 %51 to i32
  %53 = tail call i32 %42(i8* %46, i8* %49, i32 %52) #14
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %57, label %55

55:                                               ; preds = %31, %44
  %56 = phi i32 [ %38, %31 ], [ %53, %44 ]
  tail call void @__xmlSimpleError(i32 8, i32 1545, %struct._xmlNode* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i64 0, i64 0), i8* null) #14
  store i32 1545, i32* %4, align 4
  br label %71

57:                                               ; preds = %44, %31
  %58 = phi %struct._xmlBuf** [ %8, %31 ], [ %47, %44 ]
  %59 = phi i32 [ %38, %31 ], [ %53, %44 ]
  %60 = load %struct._xmlBuf*, %struct._xmlBuf** %58, align 8
  %61 = sext i32 %59 to i64
  %62 = tail call i64 @xmlBufShrink(%struct._xmlBuf* %60, i64 %61) #14
  br label %63

63:                                               ; preds = %57, %40
  %64 = phi i32 [ 0, %40 ], [ %59, %57 ]
  %65 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = sub nuw nsw i32 2147483647, %64
  %68 = icmp sgt i32 %66, %67
  %69 = add nsw i32 %66, %64
  %70 = select i1 %68, i32 2147483647, i32 %69
  store i32 %70, i32* %65, align 8
  br label %71

71:                                               ; preds = %1, %3, %63, %55, %18
  %72 = phi i32 [ -1, %18 ], [ %56, %55 ], [ %64, %63 ], [ -1, %3 ], [ -1, %1 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @__xmlParserInputBufferCreateFilename(i8*, i32) #0 {
  %3 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* @xmlInputCallbackNr, align 4
  %6 = icmp sgt i32 %5, 14
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 1
  store i8* (i8*)* @xmlFileOpen, i8* (i8*)** %10, align 8
  %11 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileRead, i32 (i8*, i8*, i32)** %11, align 16
  %12 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %12, align 8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* @xmlInputCallbackNr, align 4
  br label %14

14:                                               ; preds = %4, %7
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  br label %15

15:                                               ; preds = %2, %14
  %16 = icmp eq i8* %0, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %15
  %18 = load i32, i32* @xmlInputCallbackNr, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %61

20:                                               ; preds = %17
  %21 = sext i32 %18 to i64
  br label %22

22:                                               ; preds = %20, %36
  %23 = phi i64 [ %21, %20 ], [ %24, %36 ]
  %24 = add nsw i64 %23, -1
  %25 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %24, i32 0
  %26 = load i32 (i8*)*, i32 (i8*)** %25, align 16
  %27 = icmp eq i32 (i8*)* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = tail call i32 %26(i8* nonnull %0) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %24, i32 1
  %33 = load i8* (i8*)*, i8* (i8*)** %32, align 8
  %34 = tail call i8* %33(i8* nonnull %0) #14
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %31, %28, %22
  %37 = icmp sgt i64 %24, 0
  br i1 %37, label %22, label %61

38:                                               ; preds = %31
  %39 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %1)
  %40 = icmp eq %struct._xmlParserInputBuffer* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %39, i64 0, i32 0
  store i8* %34, i8** %42, align 8
  %43 = shl i64 %24, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %44, i32 2
  %46 = bitcast i32 (i8*, i8*, i32)** %45 to i64*
  %47 = load i64, i64* %46, align 16
  %48 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %39, i64 0, i32 1
  %49 = bitcast i32 (i8*, i8*, i32)** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %44, i32 3
  %51 = bitcast i32 (i8*)** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %39, i64 0, i32 2
  %54 = bitcast i32 (i8*)** %53 to i64*
  store i64 %52, i64* %54, align 8
  br label %61

55:                                               ; preds = %38
  %56 = shl i64 %24, 32
  %57 = ashr exact i64 %56, 32
  %58 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %57, i32 3
  %59 = load i32 (i8*)*, i32 (i8*)** %58, align 8
  %60 = tail call i32 %59(i8* nonnull %34) #14
  br label %61

61:                                               ; preds = %36, %17, %41, %55, %15
  %62 = phi %struct._xmlParserInputBuffer* [ null, %15 ], [ null, %55 ], [ %39, %41 ], [ null, %17 ], [ null, %36 ]
  ret %struct._xmlParserInputBuffer* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFilename(i8*, i32) local_unnamed_addr #0 {
  %3 = load %struct._xmlParserInputBuffer* (i8*, i32)*, %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValue, align 8
  %4 = icmp eq %struct._xmlParserInputBuffer* (i8*, i32)* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call %struct._xmlParserInputBuffer* %3(i8* %0, i32 %1) #14
  br label %9

7:                                                ; preds = %2
  %8 = tail call %struct._xmlParserInputBuffer* @__xmlParserInputBufferCreateFilename(i8* %0, i32 %1)
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi %struct._xmlParserInputBuffer* [ %6, %5 ], [ %8, %7 ]
  ret %struct._xmlParserInputBuffer* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @__xmlOutputBufferCreateFilename(i8*, %struct._xmlCharEncodingHandler*, i32) #0 {
  %4 = load i1, i1* @xmlOutputCallbackInitialized, align 4
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* @xmlOutputCallbackNr, align 4
  %7 = icmp sgt i32 %6, 14
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %9, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %10, align 16
  %11 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %9, i32 1
  store i8* (i8*)* @xmlFileOpenW, i8* (i8*)** %11, align 8
  %12 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %9, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileWrite, i32 (i8*, i8*, i32)** %12, align 16
  %13 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %9, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %13, align 8
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  %14 = add nsw i32 %6, 1
  store i32 %14, i32* @xmlOutputCallbackNr, align 4
  br label %15

15:                                               ; preds = %5, %8
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  br label %16

16:                                               ; preds = %3, %15
  %17 = icmp eq i8* %0, null
  br i1 %17, label %97, label %18

18:                                               ; preds = %16
  %19 = tail call %struct._xmlURI* @xmlParseURI(i8* nonnull %0) #14
  %20 = icmp eq %struct._xmlURI* %19, null
  br i1 %20, label %57, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct._xmlURI, %struct._xmlURI* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @xmlStrEqual(i8* nonnull %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #14
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @xmlFreeURI(%struct._xmlURI* nonnull %19) #14
  br label %57

29:                                               ; preds = %21, %25
  %30 = tail call i8* @xmlURIUnescapeString(i8* nonnull %0, i32 0, i8* null) #14
  tail call void @xmlFreeURI(%struct._xmlURI* nonnull %19) #14
  %31 = icmp eq i8* %30, null
  br i1 %31, label %57, label %32

32:                                               ; preds = %29
  %33 = load i32, i32* @xmlOutputCallbackNr, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = sext i32 %33 to i64
  br label %39

37:                                               ; preds = %53, %32
  %38 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %38(i8* nonnull %30) #14
  br label %57

39:                                               ; preds = %35, %53
  %40 = phi i64 [ %36, %35 ], [ %41, %53 ]
  %41 = add nsw i64 %40, -1
  %42 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %41, i32 0
  %43 = load i32 (i8*)*, i32 (i8*)** %42, align 16
  %44 = icmp eq i32 (i8*)* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %39
  %46 = tail call i32 %43(i8* nonnull %30) #14
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %41, i32 1
  %50 = load i8* (i8*)*, i8* (i8*)** %49, align 8
  %51 = tail call i8* %50(i8* nonnull %30) #14
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48, %45, %39
  %54 = icmp sgt i64 %41, 0
  br i1 %54, label %39, label %37

55:                                               ; preds = %48
  %56 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %56(i8* nonnull %30) #14
  br label %78

57:                                               ; preds = %18, %28, %29, %37
  %58 = load i32, i32* @xmlOutputCallbackNr, align 4
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %97

60:                                               ; preds = %57
  %61 = sext i32 %58 to i64
  br label %62

62:                                               ; preds = %60, %76
  %63 = phi i64 [ %61, %60 ], [ %64, %76 ]
  %64 = add nsw i64 %63, -1
  %65 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %64, i32 0
  %66 = load i32 (i8*)*, i32 (i8*)** %65, align 16
  %67 = icmp eq i32 (i8*)* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %62
  %69 = tail call i32 %66(i8* nonnull %0) #14
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %64, i32 1
  %73 = load i8* (i8*)*, i8* (i8*)** %72, align 8
  %74 = tail call i8* %73(i8* nonnull %0) #14
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %71, %68, %62
  %77 = icmp sgt i64 %64, 0
  br i1 %77, label %62, label %97

78:                                               ; preds = %71, %55
  %79 = phi i64 [ %41, %55 ], [ %64, %71 ]
  %80 = phi i8* [ %51, %55 ], [ %74, %71 ]
  %81 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %1)
  %82 = icmp eq %struct._xmlOutputBuffer* %81, null
  br i1 %82, label %97, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %81, i64 0, i32 0
  store i8* %80, i8** %84, align 8
  %85 = shl i64 %79, 32
  %86 = ashr exact i64 %85, 32
  %87 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %86, i32 2
  %88 = bitcast i32 (i8*, i8*, i32)** %87 to i64*
  %89 = load i64, i64* %88, align 16
  %90 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %81, i64 0, i32 1
  %91 = bitcast i32 (i8*, i8*, i32)** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %86, i32 3
  %93 = bitcast i32 (i8*)** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %81, i64 0, i32 2
  %96 = bitcast i32 (i8*)** %95 to i64*
  store i64 %94, i64* %96, align 8
  br label %97

97:                                               ; preds = %76, %57, %83, %78, %16
  %98 = phi %struct._xmlOutputBuffer* [ null, %16 ], [ null, %78 ], [ %81, %83 ], [ null, %57 ], [ null, %76 ]
  ret %struct._xmlOutputBuffer* %98
}

declare %struct._xmlURI* @xmlParseURI(i8*) local_unnamed_addr #3

declare i32 @xmlStrEqual(i8*, i8*) local_unnamed_addr #3

declare void @xmlFreeURI(%struct._xmlURI*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlOutputBufferCreateFilename(i8*, %struct._xmlCharEncodingHandler*, i32) local_unnamed_addr #0 {
  %4 = load %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValue, align 8
  %5 = icmp eq %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call %struct._xmlOutputBuffer* %4(i8* %0, %struct._xmlCharEncodingHandler* %1, i32 %2) #14
  br label %10

8:                                                ; preds = %3
  %9 = tail call %struct._xmlOutputBuffer* @__xmlOutputBufferCreateFilename(i8* %0, %struct._xmlCharEncodingHandler* %1, i32 undef)
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi %struct._xmlOutputBuffer* [ %7, %6 ], [ %9, %8 ]
  ret %struct._xmlOutputBuffer* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFile(%struct._IO_FILE*, i32) local_unnamed_addr #0 {
  %3 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* @xmlInputCallbackNr, align 4
  %6 = icmp sgt i32 %5, 14
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 1
  store i8* (i8*)* @xmlFileOpen, i8* (i8*)** %10, align 8
  %11 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileRead, i32 (i8*, i8*, i32)** %11, align 16
  %12 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %8, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %12, align 8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* @xmlInputCallbackNr, align 4
  br label %14

14:                                               ; preds = %4, %7
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  br label %15

15:                                               ; preds = %2, %14
  %16 = icmp eq %struct._IO_FILE* %0, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %1)
  %19 = icmp eq %struct._xmlParserInputBuffer* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = bitcast %struct._xmlParserInputBuffer* %18 to %struct._IO_FILE**
  store %struct._IO_FILE* %0, %struct._IO_FILE** %21, align 8
  %22 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %18, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlFileRead, i32 (i8*, i8*, i32)** %22, align 8
  %23 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %18, i64 0, i32 2
  store i32 (i8*)* @xmlFileFlush, i32 (i8*)** %23, align 8
  br label %24

24:                                               ; preds = %20, %17, %15
  %25 = phi %struct._xmlParserInputBuffer* [ null, %15 ], [ null, %17 ], [ %18, %20 ]
  ret %struct._xmlParserInputBuffer* %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlFileFlush(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %struct._IO_FILE*
  %5 = tail call i32 @fflush(%struct._IO_FILE* nonnull %4)
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #14
  br label %8

8:                                                ; preds = %3, %7, %1
  %9 = phi i32 [ -1, %1 ], [ -1, %7 ], [ 0, %3 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlOutputBufferCreateFile(%struct._IO_FILE*, %struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %3 = load i1, i1* @xmlOutputCallbackInitialized, align 4
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* @xmlOutputCallbackNr, align 4
  %6 = icmp sgt i32 %5, 14
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %9, align 16
  %10 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 1
  store i8* (i8*)* @xmlFileOpenW, i8* (i8*)** %10, align 8
  %11 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileWrite, i32 (i8*, i8*, i32)** %11, align 16
  %12 = getelementptr inbounds [15 x %struct._xmlOutputCallback], [15 x %struct._xmlOutputCallback]* @xmlOutputCallbackTable, i64 0, i64 %8, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %12, align 8
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  %13 = add nsw i32 %5, 1
  store i32 %13, i32* @xmlOutputCallbackNr, align 4
  br label %14

14:                                               ; preds = %4, %7
  store i1 true, i1* @xmlOutputCallbackInitialized, align 4
  br label %15

15:                                               ; preds = %2, %14
  %16 = icmp eq %struct._IO_FILE* %0, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %15
  %18 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %1)
  %19 = icmp eq %struct._xmlOutputBuffer* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = bitcast %struct._xmlOutputBuffer* %18 to %struct._IO_FILE**
  store %struct._IO_FILE* %0, %struct._IO_FILE** %21, align 8
  %22 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %18, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlFileWrite, i32 (i8*, i8*, i32)** %22, align 8
  %23 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %18, i64 0, i32 2
  store i32 (i8*)* @xmlFileFlush, i32 (i8*)** %23, align 8
  br label %24

24:                                               ; preds = %20, %17, %15
  %25 = phi %struct._xmlOutputBuffer* [ null, %15 ], [ null, %17 ], [ %18, %20 ]
  ret %struct._xmlOutputBuffer* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlOutputBufferCreateBuffer(%struct._xmlBuffer*, %struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xmlBuffer* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %1) #14
  %6 = icmp eq %struct._xmlOutputBuffer* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = bitcast %struct._xmlOutputBuffer* %5 to %struct._xmlBuffer**
  store %struct._xmlBuffer* %0, %struct._xmlBuffer** %8, align 8
  %9 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %5, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlBufferWrite, i32 (i8*, i8*, i32)** %9, align 8
  %10 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %5, i64 0, i32 2
  store i32 (i8*)* null, i32 (i8*)** %10, align 8
  br label %11

11:                                               ; preds = %7, %4, %2
  %12 = phi %struct._xmlOutputBuffer* [ null, %2 ], [ null, %4 ], [ %5, %7 ]
  ret %struct._xmlOutputBuffer* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlOutputBufferCreateIO(i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, %struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %5 = icmp eq i32 (i8*, i8*, i32)* %0, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %3)
  %8 = icmp eq %struct._xmlOutputBuffer* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %7, i64 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %7, i64 0, i32 1
  store i32 (i8*, i8*, i32)* %0, i32 (i8*, i8*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %7, i64 0, i32 2
  store i32 (i8*)* %1, i32 (i8*)** %12, align 8
  br label %13

13:                                               ; preds = %9, %6, %4
  %14 = phi %struct._xmlOutputBuffer* [ null, %4 ], [ null, %6 ], [ %7, %9 ]
  ret %struct._xmlOutputBuffer* %14
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlBufferWrite(i8*, i8*, i32) #0 {
  %4 = bitcast i8* %0 to %struct._xmlBuffer*
  %5 = tail call i32 @xmlBufferAdd(%struct._xmlBuffer* %4, i8* %1, i32 %2) #14
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 %2, i32 -1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlOutputBufferGetContent(%struct._xmlOutputBuffer* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %5 = load %struct._xmlBuf*, %struct._xmlBuf** %4, align 8
  %6 = icmp eq %struct._xmlBuf* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @xmlBufContent(%struct._xmlBuf* nonnull %5) #14
  br label %9

9:                                                ; preds = %1, %3, %7
  %10 = phi i8* [ %8, %7 ], [ null, %3 ], [ null, %1 ]
  ret i8* %10
}

declare i8* @xmlBufContent(%struct._xmlBuf*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @xmlOutputBufferGetSize(%struct._xmlOutputBuffer* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %5 = load %struct._xmlBuf*, %struct._xmlBuf** %4, align 8
  %6 = icmp eq %struct._xmlBuf* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @xmlBufUse(%struct._xmlBuf* nonnull %5) #14
  br label %9

9:                                                ; preds = %1, %3, %7
  %10 = phi i64 [ %8, %7 ], [ 0, %3 ], [ 0, %1 ]
  ret i64 %10
}

declare i64 @xmlBufUse(%struct._xmlBuf*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateFd(i32, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %0, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %1)
  %6 = icmp eq %struct._xmlParserInputBuffer* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = sext i32 %0 to i64
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %5, i64 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %5, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlFdRead, i32 (i8*, i8*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %5, i64 0, i32 2
  store i32 (i8*)* @xmlFdClose, i32 (i8*)** %12, align 8
  br label %13

13:                                               ; preds = %7, %4, %2
  %14 = phi %struct._xmlParserInputBuffer* [ null, %2 ], [ null, %4 ], [ %5, %7 ]
  ret %struct._xmlParserInputBuffer* %14
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlFdRead(i8*, i8* nocapture, i32) #0 {
  %4 = ptrtoint i8* %0 to i64
  %5 = trunc i64 %4 to i32
  %6 = sext i32 %2 to i64
  %7 = tail call i64 @read(i32 %5, i8* %1, i64 %6) #14
  %8 = trunc i64 %7 to i32
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0)) #14
  br label %11

11:                                               ; preds = %10, %3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlFdClose(i8*) #0 {
  %2 = ptrtoint i8* %0 to i64
  %3 = trunc i64 %2 to i32
  %4 = tail call i32 @close(i32 %3) #14
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0)) #14
  br label %7

7:                                                ; preds = %6, %1
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateMem(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp slt i32 %1, 0
  %5 = icmp eq i8* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %2)
  %9 = icmp eq %struct._xmlParserInputBuffer* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %8, i64 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %8, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlInputReadCallbackNop, i32 (i8*, i8*, i32)** %12, align 8
  %13 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %8, i64 0, i32 2
  store i32 (i8*)* null, i32 (i8*)** %13, align 8
  %14 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %8, i64 0, i32 4
  %15 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %16 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %15, i8* nonnull %0, i32 %1) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %10
  %19 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  %20 = bitcast %struct._xmlParserInputBuffer* %8 to i8*
  tail call void %19(i8* nonnull %20) #14
  br label %21

21:                                               ; preds = %7, %10, %3, %18
  %22 = phi %struct._xmlParserInputBuffer* [ null, %18 ], [ null, %3 ], [ %8, %10 ], [ null, %7 ]
  ret %struct._xmlParserInputBuffer* %22
}

declare i32 @xmlBufAdd(%struct._xmlBuf*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateStatic(i8*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp slt i32 %1, 0
  %5 = icmp eq i8* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %9 = tail call i8* %8(i64 64) #14
  %10 = bitcast i8* %9 to %struct._xmlParserInputBuffer*
  %11 = icmp eq i8* %9, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %39

13:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 64, i1 false)
  %14 = sext i32 %1 to i64
  %15 = tail call %struct._xmlBuf* @xmlBufCreateStatic(i8* nonnull %0, i64 %14) #14
  %16 = getelementptr inbounds i8, i8* %9, i64 32
  %17 = bitcast i8* %16 to %struct._xmlBuf**
  store %struct._xmlBuf* %15, %struct._xmlBuf** %17, align 8
  %18 = icmp eq %struct._xmlBuf* %15, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %20(i8* nonnull %9) #14
  br label %39

21:                                               ; preds = %13
  %22 = tail call %struct._xmlCharEncodingHandler* @xmlGetCharEncodingHandler(i32 %2) #14
  %23 = getelementptr inbounds i8, i8* %9, i64 24
  %24 = bitcast i8* %23 to %struct._xmlCharEncodingHandler**
  store %struct._xmlCharEncodingHandler* %22, %struct._xmlCharEncodingHandler** %24, align 8
  %25 = icmp eq %struct._xmlCharEncodingHandler* %22, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = load i32, i32* @xmlDefaultBufferSize, align 4
  %28 = shl nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = tail call %struct._xmlBuf* @xmlBufCreateSize(i64 %29) #14
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi %struct._xmlBuf* [ %30, %26 ], [ null, %21 ]
  %33 = getelementptr inbounds i8, i8* %9, i64 40
  %34 = bitcast i8* %33 to %struct._xmlBuf**
  store %struct._xmlBuf* %32, %struct._xmlBuf** %34, align 8
  %35 = getelementptr inbounds i8, i8* %9, i64 48
  %36 = bitcast i8* %35 to i32*
  store i32 -1, i32* %36, align 8
  %37 = bitcast i8* %9 to i8**
  store i8* %0, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %9, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false)
  br label %39

39:                                               ; preds = %3, %31, %19, %12
  %40 = phi %struct._xmlParserInputBuffer* [ null, %12 ], [ null, %19 ], [ %10, %31 ], [ null, %3 ]
  ret %struct._xmlParserInputBuffer* %40
}

declare %struct._xmlBuf* @xmlBufCreateStatic(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* @xmlOutputBufferCreateFd(i32, %struct._xmlCharEncodingHandler*) local_unnamed_addr #0 {
  %3 = icmp slt i32 %0, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %1)
  %6 = icmp eq %struct._xmlOutputBuffer* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = sext i32 %0 to i64
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %5, i64 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %5, i64 0, i32 1
  store i32 (i8*, i8*, i32)* @xmlFdWrite, i32 (i8*, i8*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %5, i64 0, i32 2
  store i32 (i8*)* null, i32 (i8*)** %12, align 8
  br label %13

13:                                               ; preds = %7, %4, %2
  %14 = phi %struct._xmlOutputBuffer* [ null, %2 ], [ null, %4 ], [ %5, %7 ]
  ret %struct._xmlOutputBuffer* %14
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @xmlFdWrite(i8*, i8* nocapture readonly, i32) #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %3
  %6 = ptrtoint i8* %0 to i64
  %7 = trunc i64 %6 to i32
  %8 = sext i32 %2 to i64
  %9 = tail call i64 @write(i32 %7, i8* %1, i64 %8) #14
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @__xmlIOErr(i32 8, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0)) #14
  br label %13

13:                                               ; preds = %5, %12, %3
  %14 = phi i32 [ %10, %12 ], [ %10, %5 ], [ 0, %3 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* @xmlParserInputBufferCreateIO(i32 (i8*, i8*, i32)*, i32 (i8*)*, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 (i8*, i8*, i32)* %0, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = tail call %struct._xmlParserInputBuffer* @xmlAllocParserInputBuffer(i32 %3)
  %8 = icmp eq %struct._xmlParserInputBuffer* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %7, i64 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %7, i64 0, i32 1
  store i32 (i8*, i8*, i32)* %0, i32 (i8*, i8*, i32)** %11, align 8
  %12 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %7, i64 0, i32 2
  store i32 (i8*)* %1, i32 (i8*)** %12, align 8
  br label %13

13:                                               ; preds = %9, %6, %4
  %14 = phi %struct._xmlParserInputBuffer* [ null, %4 ], [ null, %6 ], [ %7, %9 ]
  ret %struct._xmlParserInputBuffer* %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct._xmlParserInputBuffer* (i8*, i32)* @xmlParserInputBufferCreateFilenameDefault(%struct._xmlParserInputBuffer* (i8*, i32)*) local_unnamed_addr #4 {
  %2 = load %struct._xmlParserInputBuffer* (i8*, i32)*, %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValue, align 8
  %3 = icmp eq %struct._xmlParserInputBuffer* (i8*, i32)* %2, null
  %4 = select i1 %3, %struct._xmlParserInputBuffer* (i8*, i32)* @__xmlParserInputBufferCreateFilename, %struct._xmlParserInputBuffer* (i8*, i32)* %2
  store %struct._xmlParserInputBuffer* (i8*, i32)* %0, %struct._xmlParserInputBuffer* (i8*, i32)** @xmlParserInputBufferCreateFilenameValue, align 8
  ret %struct._xmlParserInputBuffer* (i8*, i32)* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* @xmlOutputBufferCreateFilenameDefault(%struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*) local_unnamed_addr #4 {
  %2 = load %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)*, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValue, align 8
  %3 = icmp eq %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %2, null
  %4 = select i1 %3, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* @__xmlOutputBufferCreateFilename, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %2
  store %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %0, %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)** @xmlOutputBufferCreateFilenameValue, align 8
  ret %struct._xmlOutputBuffer* (i8*, %struct._xmlCharEncodingHandler*, i32)* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlParserInputBufferPush(%struct._xmlParserInputBuffer*, i32, i8*) local_unnamed_addr #0 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct._xmlParserInputBuffer* %0, null
  br i1 %6, label %46, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %46

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 3
  %13 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %12, align 8
  %14 = icmp eq %struct._xmlCharEncodingHandler* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 5
  %17 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %18 = icmp eq %struct._xmlBuf* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = tail call %struct._xmlBuf* @xmlBufCreate() #14
  store %struct._xmlBuf* %20, %struct._xmlBuf** %16, align 8
  br label %21

21:                                               ; preds = %19, %15
  %22 = phi %struct._xmlBuf* [ %20, %19 ], [ %17, %15 ]
  %23 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %22, i8* %2, i32 %1) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %21
  %26 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %27 = tail call i64 @xmlBufUse(%struct._xmlBuf* %26) #14
  %28 = tail call i32 @xmlCharEncInput(%struct._xmlParserInputBuffer* nonnull %0, i32 1) #14
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  tail call void @__xmlSimpleError(i32 8, i32 1544, %struct._xmlNode* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* null) #14
  store i32 1544, i32* %8, align 4
  br label %46

31:                                               ; preds = %25
  %32 = and i64 %27, 4294967295
  %33 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %34 = tail call i64 @xmlBufUse(%struct._xmlBuf* %33) #14
  %35 = sub i64 %32, %34
  %36 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 8
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %35, %37
  store i64 %38, i64* %36, align 8
  br label %44

39:                                               ; preds = %11
  %40 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 4
  %41 = load %struct._xmlBuf*, %struct._xmlBuf** %40, align 8
  %42 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %41, i8* %2, i32 %1) #14
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %31, %39
  %45 = phi i32 [ %28, %31 ], [ %1, %39 ]
  br label %46

46:                                               ; preds = %21, %30, %39, %5, %7, %3, %44
  %47 = phi i32 [ %45, %44 ], [ 0, %3 ], [ -1, %7 ], [ -1, %5 ], [ -1, %39 ], [ -1, %30 ], [ -1, %21 ]
  ret i32 %47
}

declare i32 @xmlCharEncInput(%struct._xmlParserInputBuffer*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlParserInputBufferGrow(%struct._xmlParserInputBuffer*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xmlParserInputBuffer* %0, null
  br i1 %3, label %70, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %70

8:                                                ; preds = %4
  %9 = icmp slt i32 %1, 4001
  %10 = icmp ne i32 %1, 4
  %11 = and i1 %9, %10
  %12 = select i1 %11, i32 4000, i32 %1
  %13 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 4
  %14 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %15 = tail call i64 @xmlBufAvail(%struct._xmlBuf* %14) #14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  tail call void @__xmlSimpleError(i32 8, i32 1548, %struct._xmlNode* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), i8* null) #14
  store i32 1548, i32* %5, align 4
  br label %70

18:                                               ; preds = %8
  %19 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %20 = add nsw i32 %12, 1
  %21 = tail call i32 @xmlBufGrow(%struct._xmlBuf* %19, i32 %20) #14
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #14
  store i32 2, i32* %5, align 4
  br label %70

24:                                               ; preds = %18
  %25 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %26 = tail call i8* @xmlBufEnd(%struct._xmlBuf* %25) #14
  %27 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 1
  %28 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %27, align 8
  %29 = icmp eq i32 (i8*, i8*, i32)* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i32 %28(i8* %32, i8* %26, i32 %12) #14
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %36, label %38

35:                                               ; preds = %24
  tail call void @__xmlSimpleError(i32 8, i32 1547, %struct._xmlNode* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i64 0, i64 0), i8* null) #14
  store i32 1547, i32* %5, align 4
  br label %70

36:                                               ; preds = %30
  store i32 (i8*, i8*, i32)* @endOfInput, i32 (i8*, i8*, i32)** %27, align 8
  %37 = icmp slt i32 %33, 0
  br i1 %37, label %70, label %38

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 3
  %40 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %39, align 8
  %41 = icmp eq %struct._xmlCharEncodingHandler* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 5
  %44 = load %struct._xmlBuf*, %struct._xmlBuf** %43, align 8
  %45 = icmp eq %struct._xmlBuf* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = tail call %struct._xmlBuf* @xmlBufCreate() #14
  store %struct._xmlBuf* %47, %struct._xmlBuf** %43, align 8
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi %struct._xmlBuf* [ %47, %46 ], [ %44, %42 ]
  %50 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %49, i8* %26, i32 %33) #14
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %70

52:                                               ; preds = %48
  %53 = load %struct._xmlBuf*, %struct._xmlBuf** %43, align 8
  %54 = tail call i64 @xmlBufUse(%struct._xmlBuf* %53) #14
  %55 = tail call i32 @xmlCharEncInput(%struct._xmlParserInputBuffer* nonnull %0, i32 1) #14
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  tail call void @__xmlSimpleError(i32 8, i32 1544, %struct._xmlNode* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* null) #14
  store i32 1544, i32* %5, align 4
  br label %70

58:                                               ; preds = %52
  %59 = and i64 %54, 4294967295
  %60 = load %struct._xmlBuf*, %struct._xmlBuf** %43, align 8
  %61 = tail call i64 @xmlBufUse(%struct._xmlBuf* %60) #14
  %62 = sub i64 %59, %61
  %63 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 8
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %62, %64
  store i64 %65, i64* %63, align 8
  br label %70

66:                                               ; preds = %38
  %67 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %68 = sext i32 %33 to i64
  %69 = tail call i32 @xmlBufAddLen(%struct._xmlBuf* %67, i64 %68) #14
  br label %70

70:                                               ; preds = %48, %57, %66, %58, %36, %2, %4, %35, %23, %17
  %71 = phi i32 [ -1, %17 ], [ -1, %23 ], [ -1, %35 ], [ -1, %4 ], [ -1, %2 ], [ -1, %36 ], [ %55, %58 ], [ %33, %66 ], [ -1, %57 ], [ -1, %48 ]
  ret i32 %71
}

declare i64 @xmlBufAvail(%struct._xmlBuf*) local_unnamed_addr #3

declare i32 @xmlBufGrow(%struct._xmlBuf*, i32) local_unnamed_addr #3

declare i8* @xmlBufEnd(%struct._xmlBuf*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @endOfInput(i8* nocapture readnone, i8* nocapture readnone, i32) #5 {
  ret i32 0
}

declare i32 @xmlBufAddLen(%struct._xmlBuf*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlParserInputBufferRead(%struct._xmlParserInputBuffer*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xmlParserInputBuffer* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 1
  %10 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %9, align 8
  %11 = icmp eq i32 (i8*, i8*, i32)* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @xmlParserInputBufferGrow(%struct._xmlParserInputBuffer* nonnull %0, i32 %1)
  br label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct._xmlParserInputBuffer, %struct._xmlParserInputBuffer* %0, i64 0, i32 4
  %16 = load %struct._xmlBuf*, %struct._xmlBuf** %15, align 8
  %17 = tail call i32 @xmlBufGetAllocationScheme(%struct._xmlBuf* %16) #14
  %18 = icmp ne i32 %17, 2
  %19 = sext i1 %18 to i32
  br label %20

20:                                               ; preds = %14, %2, %4, %12
  %21 = phi i32 [ %13, %12 ], [ -1, %4 ], [ -1, %2 ], [ %19, %14 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlOutputBufferWrite(%struct._xmlOutputBuffer*, i32, i8*) local_unnamed_addr #0 {
  %4 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %4, label %95, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %95

9:                                                ; preds = %5
  %10 = icmp slt i32 %1, 0
  br i1 %10, label %95, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 3
  %13 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 5
  %14 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %15 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 1
  %16 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 0
  %17 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 6
  br label %18

18:                                               ; preds = %11, %92
  %19 = phi i32 [ %58, %92 ], [ %1, %11 ]
  %20 = phi i8* [ %57, %92 ], [ %2, %11 ]
  %21 = phi i32 [ %93, %92 ], [ 0, %11 ]
  %22 = icmp slt i32 %19, 16000
  %23 = select i1 %22, i32 %19, i32 16000
  %24 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %12, align 8
  %25 = icmp eq %struct._xmlCharEncodingHandler* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %18
  %27 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %28 = icmp eq %struct._xmlBuf* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = tail call %struct._xmlBuf* @xmlBufCreate() #14
  store %struct._xmlBuf* %30, %struct._xmlBuf** %13, align 8
  br label %31

31:                                               ; preds = %29, %26
  %32 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %33 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %32, i8* %20, i32 %23) #14
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %95

35:                                               ; preds = %31
  %36 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %37 = tail call i64 @xmlBufUse(%struct._xmlBuf* %36) #14
  %38 = icmp ult i64 %37, 4000
  %39 = icmp slt i32 %19, 16001
  %40 = and i1 %39, %38
  br i1 %40, label %95, label %41

41:                                               ; preds = %35
  %42 = tail call i32 @xmlCharEncOutput(%struct._xmlOutputBuffer* nonnull %0, i32 0) #14
  %43 = icmp slt i32 %42, 0
  %44 = icmp ne i32 %42, -3
  %45 = and i1 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  tail call void @__xmlSimpleError(i32 8, i32 1544, %struct._xmlNode* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* null) #14
  store i32 1544, i32* %6, align 4
  br label %95

47:                                               ; preds = %41
  %48 = icmp sgt i32 %42, 0
  %49 = select i1 %48, i32 %42, i32 0
  br label %54

50:                                               ; preds = %18
  %51 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %52 = tail call i32 @xmlBufAdd(%struct._xmlBuf* %51, i8* %20, i32 %23) #14
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %95

54:                                               ; preds = %50, %47
  %55 = phi i32 [ %49, %47 ], [ %23, %50 ]
  %56 = sext i32 %23 to i64
  %57 = getelementptr inbounds i8, i8* %20, i64 %56
  %58 = sub nsw i32 %19, %23
  %59 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %15, align 8
  %60 = icmp eq i32 (i8*, i8*, i32)* %59, null
  br i1 %60, label %92, label %61

61:                                               ; preds = %54
  %62 = icmp slt i32 %55, 4000
  %63 = icmp slt i32 %58, 1
  %64 = and i1 %63, %62
  br i1 %64, label %95, label %65

65:                                               ; preds = %61
  %66 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %12, align 8
  %67 = icmp eq %struct._xmlCharEncodingHandler* %66, null
  %68 = load i8*, i8** %16, align 8
  br i1 %67, label %74, label %69

69:                                               ; preds = %65
  %70 = load %struct._xmlBuf*, %struct._xmlBuf** %13, align 8
  %71 = tail call i8* @xmlBufContent(%struct._xmlBuf* %70) #14
  %72 = tail call i32 %59(i8* %68, i8* %71, i32 %55) #14
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %81, label %79

74:                                               ; preds = %65
  %75 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %76 = tail call i8* @xmlBufContent(%struct._xmlBuf* %75) #14
  %77 = tail call i32 %59(i8* %68, i8* %76, i32 %55) #14
  %78 = icmp sgt i32 %77, -1
  br i1 %78, label %81, label %79

79:                                               ; preds = %69, %74
  %80 = phi i32 [ %77, %74 ], [ %72, %69 ]
  tail call void @__xmlSimpleError(i32 8, i32 1546, %struct._xmlNode* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* null) #14
  store i32 1546, i32* %6, align 4
  br label %95

81:                                               ; preds = %74, %69
  %82 = phi %struct._xmlBuf** [ %13, %69 ], [ %14, %74 ]
  %83 = phi i32 [ %72, %69 ], [ %77, %74 ]
  %84 = load %struct._xmlBuf*, %struct._xmlBuf** %82, align 8
  %85 = sext i32 %83 to i64
  %86 = tail call i64 @xmlBufShrink(%struct._xmlBuf* %84, i64 %85) #14
  %87 = load i32, i32* %17, align 8
  %88 = sub nuw nsw i32 2147483647, %83
  %89 = icmp sgt i32 %87, %88
  %90 = add nsw i32 %87, %83
  %91 = select i1 %89, i32 2147483647, i32 %90
  store i32 %91, i32* %17, align 8
  br label %92

92:                                               ; preds = %81, %54
  %93 = add nsw i32 %55, %21
  %94 = icmp sgt i32 %58, 0
  br i1 %94, label %18, label %95

95:                                               ; preds = %61, %92, %35, %50, %31, %9, %3, %5, %79, %46
  %96 = phi i32 [ -1, %46 ], [ %80, %79 ], [ -1, %5 ], [ -1, %3 ], [ 0, %9 ], [ %21, %35 ], [ %93, %92 ], [ %21, %61 ], [ -1, %50 ], [ -1, %31 ]
  ret i32 %96
}

declare i64 @xmlBufShrink(%struct._xmlBuf*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlOutputBufferWriteEscape(%struct._xmlOutputBuffer*, i8*, i32 (i8*, i32*, i8*, i32*)*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14
  store i32 -1431655766, i32* %5, align 4
  %8 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %8, label %155, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 7
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq i8* %1, null
  %14 = or i1 %13, %12
  br i1 %14, label %155, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %17 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %18 = icmp eq %struct._xmlBuf* %17, null
  br i1 %18, label %155, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @xmlBufGetAllocationScheme(%struct._xmlBuf* nonnull %17) #14
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %155, label %22

22:                                               ; preds = %19
  %23 = tail call i64 @strlen(i8* nonnull %1) #15
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %155, label %26

26:                                               ; preds = %22
  %27 = load i32, i32* %10, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %155

29:                                               ; preds = %26
  %30 = icmp eq i32 (i8*, i32*, i8*, i32*)* %2, null
  %31 = select i1 %30, i32 (i8*, i32*, i8*, i32*)* @xmlEscapeContent, i32 (i8*, i32*, i8*, i32*)* %2
  %32 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 3
  %33 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 5
  %34 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 1
  %35 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 0
  %36 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 6
  br label %37

37:                                               ; preds = %147, %29
  %38 = phi i8* [ %1, %29 ], [ %148, %147 ]
  %39 = phi i32 [ 0, %29 ], [ %149, %147 ]
  %40 = phi i32 [ %24, %29 ], [ %151, %147 ]
  store i32 %40, i32* %5, align 4
  %41 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %42 = call i64 @xmlBufAvail(%struct._xmlBuf* %41) #14
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, -1
  store i32 %44, i32* %4, align 4
  %45 = icmp slt i32 %44, 40
  br i1 %45, label %46, label %50

46:                                               ; preds = %37
  %47 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %48 = call i32 @xmlBufGrow(%struct._xmlBuf* %47, i32 100) #14
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %155, label %147

50:                                               ; preds = %37
  %51 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %32, align 8
  %52 = icmp eq %struct._xmlCharEncodingHandler* %51, null
  br i1 %52, label %85, label %53

53:                                               ; preds = %50
  %54 = load %struct._xmlBuf*, %struct._xmlBuf** %33, align 8
  %55 = icmp eq %struct._xmlBuf* %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = call %struct._xmlBuf* @xmlBufCreate() #14
  store %struct._xmlBuf* %57, %struct._xmlBuf** %33, align 8
  br label %58

58:                                               ; preds = %56, %53
  %59 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %60 = call i8* @xmlBufEnd(%struct._xmlBuf* %59) #14
  %61 = call i32 %31(i8* %60, i32* nonnull %4, i8* %38, i32* nonnull %5) #14
  %62 = icmp slt i32 %61, 0
  %63 = load i32, i32* %4, align 4
  %64 = icmp eq i32 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %155, label %66

66:                                               ; preds = %58
  %67 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %68 = sext i32 %63 to i64
  %69 = call i32 @xmlBufAddLen(%struct._xmlBuf* %67, i64 %68) #14
  %70 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %71 = call i64 @xmlBufUse(%struct._xmlBuf* %70) #14
  %72 = icmp ult i64 %71, 4000
  %73 = load i32, i32* %5, align 4
  %74 = icmp eq i32 %73, %40
  %75 = and i1 %72, %74
  br i1 %75, label %155, label %76

76:                                               ; preds = %66
  %77 = call i32 @xmlCharEncOutput(%struct._xmlOutputBuffer* nonnull %0, i32 0) #14
  %78 = icmp slt i32 %77, 0
  %79 = icmp ne i32 %77, -3
  %80 = and i1 %78, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  call void @__xmlSimpleError(i32 8, i32 1544, %struct._xmlNode* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0), i8* null) #14
  store i32 1544, i32* %10, align 4
  br label %155

82:                                               ; preds = %76
  %83 = icmp sgt i32 %77, 0
  %84 = select i1 %83, i32 %77, i32 0
  br label %98

85:                                               ; preds = %50
  %86 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %87 = call i8* @xmlBufEnd(%struct._xmlBuf* %86) #14
  %88 = call i32 %31(i8* %87, i32* nonnull %4, i8* %38, i32* nonnull %5) #14
  %89 = icmp slt i32 %88, 0
  %90 = load i32, i32* %4, align 4
  %91 = icmp eq i32 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %155, label %93

93:                                               ; preds = %85
  %94 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %95 = sext i32 %90 to i64
  %96 = call i32 @xmlBufAddLen(%struct._xmlBuf* %94, i64 %95) #14
  %97 = load i32, i32* %4, align 4
  br label %98

98:                                               ; preds = %93, %82
  %99 = phi i32 [ %84, %82 ], [ %97, %93 ]
  %100 = load i32, i32* %5, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %38, i64 %101
  %103 = sub nsw i32 %40, %100
  %104 = load i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)** %34, align 8
  %105 = icmp eq i32 (i8*, i8*, i32)* %104, null
  br i1 %105, label %138, label %106

106:                                              ; preds = %98
  %107 = icmp slt i32 %99, 4000
  %108 = icmp slt i32 %103, 1
  %109 = and i1 %107, %108
  br i1 %109, label %155, label %110

110:                                              ; preds = %106
  %111 = load %struct._xmlCharEncodingHandler*, %struct._xmlCharEncodingHandler** %32, align 8
  %112 = icmp eq %struct._xmlCharEncodingHandler* %111, null
  %113 = load i8*, i8** %35, align 8
  br i1 %112, label %119, label %114

114:                                              ; preds = %110
  %115 = load %struct._xmlBuf*, %struct._xmlBuf** %33, align 8
  %116 = call i8* @xmlBufContent(%struct._xmlBuf* %115) #14
  %117 = call i32 %104(i8* %113, i8* %116, i32 %99) #14
  %118 = icmp sgt i32 %117, -1
  br i1 %118, label %126, label %124

119:                                              ; preds = %110
  %120 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %121 = call i8* @xmlBufContent(%struct._xmlBuf* %120) #14
  %122 = call i32 %104(i8* %113, i8* %121, i32 %99) #14
  %123 = icmp sgt i32 %122, -1
  br i1 %123, label %126, label %124

124:                                              ; preds = %114, %119
  %125 = phi i32 [ %122, %119 ], [ %117, %114 ]
  call void @__xmlSimpleError(i32 8, i32 1546, %struct._xmlNode* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* null) #14
  store i32 1546, i32* %10, align 4
  br label %155

126:                                              ; preds = %119, %114
  %127 = phi %struct._xmlBuf** [ %33, %114 ], [ %16, %119 ]
  %128 = phi i32 [ %117, %114 ], [ %122, %119 ]
  %129 = load %struct._xmlBuf*, %struct._xmlBuf** %127, align 8
  %130 = sext i32 %128 to i64
  %131 = call i64 @xmlBufShrink(%struct._xmlBuf* %129, i64 %130) #14
  %132 = load i32, i32* %36, align 8
  %133 = sub nuw nsw i32 2147483647, %128
  %134 = icmp sgt i32 %132, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %126
  store i32 2147483647, i32* %36, align 8
  br label %145

136:                                              ; preds = %126
  %137 = add nsw i32 %132, %128
  store i32 %137, i32* %36, align 8
  br label %145

138:                                              ; preds = %98
  %139 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %140 = call i64 @xmlBufAvail(%struct._xmlBuf* %139) #14
  %141 = icmp ult i64 %140, 4000
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = load %struct._xmlBuf*, %struct._xmlBuf** %16, align 8
  %144 = call i32 @xmlBufGrow(%struct._xmlBuf* %143, i32 4000) #14
  br label %145

145:                                              ; preds = %138, %142, %135, %136
  %146 = add nsw i32 %99, %39
  br label %147

147:                                              ; preds = %46, %145
  %148 = phi i8* [ %102, %145 ], [ %38, %46 ]
  %149 = phi i32 [ %146, %145 ], [ %39, %46 ]
  %150 = phi i32 [ %39, %145 ], [ -1, %46 ]
  %151 = phi i32 [ %103, %145 ], [ %40, %46 ]
  %152 = icmp slt i32 %151, 1
  %153 = icmp eq i32 %150, %149
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %37

155:                                              ; preds = %106, %66, %147, %85, %58, %46, %26, %22, %3, %9, %15, %19, %124, %81
  %156 = phi i32 [ -1, %81 ], [ %125, %124 ], [ -1, %19 ], [ -1, %15 ], [ -1, %9 ], [ -1, %3 ], [ 0, %22 ], [ -1, %26 ], [ %39, %66 ], [ %39, %106 ], [ %149, %147 ], [ -1, %85 ], [ -1, %58 ], [ -1, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret i32 %156
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @xmlEscapeContent(i8*, i32* nocapture, i8*, i32* nocapture) unnamed_addr #4 {
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  %8 = load i32, i32* %3, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %2, i64 %9
  %11 = ptrtoint i8* %7 to i64
  %12 = icmp sgt i32 %8, 0
  %13 = icmp sgt i32 %5, 0
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %65

15:                                               ; preds = %4, %59
  %16 = phi i8* [ %60, %59 ], [ %0, %4 ]
  %17 = phi i8* [ %61, %59 ], [ %2, %4 ]
  %18 = load i8, i8* %17, align 1
  switch i8 %18, label %57 [
    i8 60, label %19
    i8 62, label %28
    i8 38, label %37
    i8 13, label %47
  ]

19:                                               ; preds = %15
  %20 = ptrtoint i8* %16 to i64
  %21 = sub i64 %11, %20
  %22 = icmp slt i64 %21, 4
  br i1 %22, label %65, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 38, i8* %16, align 1
  %25 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 108, i8* %24, align 1
  %26 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 116, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 59, i8* %26, align 1
  br label %59

28:                                               ; preds = %15
  %29 = ptrtoint i8* %16 to i64
  %30 = sub i64 %11, %29
  %31 = icmp slt i64 %30, 4
  br i1 %31, label %65, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 38, i8* %16, align 1
  %34 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 103, i8* %33, align 1
  %35 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 116, i8* %34, align 1
  %36 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 59, i8* %35, align 1
  br label %59

37:                                               ; preds = %15
  %38 = ptrtoint i8* %16 to i64
  %39 = sub i64 %11, %38
  %40 = icmp slt i64 %39, 5
  br i1 %40, label %65, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 38, i8* %16, align 1
  %43 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 97, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 109, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 112, i8* %44, align 1
  %46 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 59, i8* %45, align 1
  br label %59

47:                                               ; preds = %15
  %48 = ptrtoint i8* %16 to i64
  %49 = sub i64 %11, %48
  %50 = icmp slt i64 %49, 5
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 38, i8* %16, align 1
  %53 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 35, i8* %52, align 1
  %54 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 49, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 51, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %16, i64 5
  store i8 59, i8* %55, align 1
  br label %59

57:                                               ; preds = %15
  %58 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %18, i8* %16, align 1
  br label %59

59:                                               ; preds = %32, %51, %57, %41, %23
  %60 = phi i8* [ %27, %23 ], [ %36, %32 ], [ %46, %41 ], [ %56, %51 ], [ %58, %57 ]
  %61 = getelementptr inbounds i8, i8* %17, i64 1
  %62 = icmp ult i8* %61, %10
  %63 = icmp ult i8* %60, %7
  %64 = and i1 %62, %63
  br i1 %64, label %15, label %65

65:                                               ; preds = %19, %28, %37, %47, %59, %4
  %66 = phi i8* [ %2, %4 ], [ %61, %59 ], [ %17, %47 ], [ %17, %37 ], [ %17, %28 ], [ %17, %19 ]
  %67 = phi i8* [ %0, %4 ], [ %60, %59 ], [ %16, %47 ], [ %16, %37 ], [ %16, %28 ], [ %16, %19 ]
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %0 to i64
  %70 = sub i64 %68, %69
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %1, align 4
  %72 = ptrtoint i8* %66 to i64
  %73 = ptrtoint i8* %2 to i64
  %74 = sub i64 %72, %73
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %3, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xmlOutputBuffer* %0, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @strlen(i8* nonnull %1) #15
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call i32 @xmlOutputBufferWrite(%struct._xmlOutputBuffer* nonnull %0, i32 %12, i8* nonnull %1)
  br label %16

16:                                               ; preds = %4, %10, %2, %14
  %17 = phi i32 [ %15, %14 ], [ -1, %4 ], [ -1, %2 ], [ %12, %10 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlParserGetDirectory(i8* readonly) local_unnamed_addr #0 {
  %2 = alloca [1024 x i8], align 16
  %3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 1024, i1 false)
  %4 = load i1, i1* @xmlInputCallbackInitialized, align 4
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* @xmlInputCallbackNr, align 4
  %7 = icmp sgt i32 %6, 14
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %9, i32 0
  store i32 (i8*)* @xmlFileMatch, i32 (i8*)** %10, align 16
  %11 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %9, i32 1
  store i8* (i8*)* @xmlFileOpen, i8* (i8*)** %11, align 8
  %12 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %9, i32 2
  store i32 (i8*, i8*, i32)* @xmlFileRead, i32 (i8*, i8*, i32)** %12, align 16
  %13 = getelementptr inbounds [15 x %struct._xmlInputCallback], [15 x %struct._xmlInputCallback]* @xmlInputCallbackTable, i64 0, i64 %9, i32 3
  store i32 (i8*)* @xmlFileClose, i32 (i8*)** %13, align 8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  %14 = add nsw i32 %6, 1
  store i32 %14, i32* @xmlInputCallbackNr, align 4
  br label %15

15:                                               ; preds = %5, %8
  store i1 true, i1* @xmlInputCallbackInitialized, align 4
  br label %16

16:                                               ; preds = %1, %15
  %17 = icmp eq i8* %0, null
  br i1 %17, label %50, label %18

18:                                               ; preds = %16
  %19 = call i8* @strncpy(i8* nonnull %3, i8* nonnull %0, i64 1023) #14
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 1023
  store i8 0, i8* %20, align 1
  %21 = call i64 @strlen(i8* nonnull %3) #15
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 %21
  %23 = icmp sgt i64 %21, 0
  %24 = load i8, i8* %22, align 1
  %25 = icmp eq i8 %24, 47
  br i1 %23, label %26, label %34

26:                                               ; preds = %18, %29
  %27 = phi i1 [ %33, %29 ], [ %25, %18 ]
  %28 = phi i8* [ %30, %29 ], [ %22, %18 ]
  br i1 %27, label %37, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %28, i64 -1
  %31 = icmp ugt i8* %30, %3
  %32 = load i8, i8* %30, align 1
  %33 = icmp eq i8 %32, 47
  br i1 %31, label %26, label %34

34:                                               ; preds = %29, %18
  %35 = phi i8* [ %22, %18 ], [ %30, %29 ]
  %36 = phi i1 [ %25, %18 ], [ %33, %29 ]
  br i1 %36, label %37, label %44

37:                                               ; preds = %26, %34
  %38 = phi i8* [ %35, %34 ], [ %28, %26 ]
  %39 = icmp eq i8* %38, %3
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 1
  %41 = select i1 %39, i8* %40, i8* %38
  store i8 0, i8* %41, align 1
  %42 = load i8* (i8*)*, i8* (i8*)** @xmlMemStrdup, align 8
  %43 = call i8* %42(i8* nonnull %3) #14
  br label %50

44:                                               ; preds = %34
  %45 = call i8* @getcwd(i8* nonnull %3, i64 1024) #14
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  store i8 0, i8* %20, align 1
  %48 = load i8* (i8*)*, i8* (i8*)** @xmlMemStrdup, align 8
  %49 = call i8* %48(i8* nonnull %3) #14
  br label %50

50:                                               ; preds = %37, %47, %44, %16
  %51 = phi i8* [ null, %16 ], [ %43, %37 ], [ %49, %47 ], [ null, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #14
  ret i8* %51
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct._xmlParserInput* @xmlCheckHTTPInput(%struct._xmlParserCtxt* nocapture readnone, %struct._xmlParserInput* readnone returned) local_unnamed_addr #5 {
  ret %struct._xmlParserInput* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @xmlSetExternalEntityLoader(%struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)*) local_unnamed_addr #9 {
  store %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)* %0, %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)** @xmlCurrentExternalEntityLoader, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)* @xmlGetExternalEntityLoader() local_unnamed_addr #10 {
  %1 = load %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)*, %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)** @xmlCurrentExternalEntityLoader, align 8
  ret %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInput* @xmlLoadExternalEntity(i8*, i8*, %struct._xmlParserCtxt*) local_unnamed_addr #0 {
  %4 = alloca %struct.stat, align 8
  %5 = icmp eq i8* %0, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i32 17) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %0, i64 16
  br label %17

11:                                               ; preds = %6
  %12 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i64 0, i64 0), i32 8) #14
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds i8, i8* %0, i64 7
  br i1 %13, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 144, i1 false) #14
  br label %21

17:                                               ; preds = %11, %9
  %18 = phi i8* [ %10, %9 ], [ %14, %11 ]
  %19 = bitcast %struct.stat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 144, i1 false) #14
  %20 = icmp eq i8* %18, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %15
  %22 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %23 = phi i8* [ %0, %15 ], [ %18, %17 ]
  %24 = bitcast %struct.stat* %4 to %struct.stat64*
  %25 = call i32 @__xstat64(i32 1, i8* nonnull %23, %struct.stat64* nonnull %24) #14
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %31

27:                                               ; preds = %17, %21
  %28 = phi i8* [ %22, %21 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %28) #14
  %29 = call i8* @xmlCanonicPath(i8* nonnull %0) #14
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %33

31:                                               ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %22) #14
  br label %37

32:                                               ; preds = %27
  call void @__xmlSimpleError(i32 8, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #14
  br label %40

33:                                               ; preds = %27
  %34 = load %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)*, %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)** @xmlCurrentExternalEntityLoader, align 8
  %35 = call %struct._xmlParserInput* %34(i8* nonnull %29, i8* %1, %struct._xmlParserCtxt* %2) #14
  %36 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  call void %36(i8* nonnull %29) #14
  br label %40

37:                                               ; preds = %31, %3
  %38 = load %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)*, %struct._xmlParserInput* (i8*, i8*, %struct._xmlParserCtxt*)** @xmlCurrentExternalEntityLoader, align 8
  %39 = call %struct._xmlParserInput* %38(i8* %0, i8* %1, %struct._xmlParserCtxt* %2) #14
  br label %40

40:                                               ; preds = %32, %33, %37
  %41 = phi %struct._xmlParserInput* [ %39, %37 ], [ null, %32 ], [ %35, %33 ]
  ret %struct._xmlParserInput* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlParserInput* @xmlNoNetExternalEntityLoader(i8*, i8*, %struct._xmlParserCtxt*) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32 6) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @xmlStrncasecmp(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 7) #14
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8, %5
  tail call void @__xmlSimpleError(i32 8, i32 1543, %struct._xmlNode* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %0) #14
  br label %65

12:                                               ; preds = %8, %3
  %13 = icmp eq %struct._xmlParserCtxt* %2, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 73
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 2048
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = add nsw i32 %16, -2048
  store i32 %20, i32* %15, align 4
  %21 = tail call %struct._xmlParserInput* @xmlNoNetExternalEntityLoader(i8* %0, i8* %1, %struct._xmlParserCtxt* nonnull %2) #14
  store i32 %16, i32* %15, align 4
  ret %struct._xmlParserInput* %21

22:                                               ; preds = %14, %12
  br i1 %4, label %23, label %63

23:                                               ; preds = %22
  %24 = icmp eq i8* %1, null
  %25 = select i1 %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i8* %1
  %26 = bitcast %struct._xmlParserCtxt* %2 to i8*
  br i1 %13, label %58, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 36
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 26
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %65, label %35

35:                                               ; preds = %31, %27
  %36 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 0
  %37 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %36, align 8
  %38 = icmp eq %struct._xmlSAXHandler* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 24
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %37, i64 0, i32 22
  %44 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %37, i64 0, i32 21
  %45 = select i1 %42, void (i8*, i8*, ...)** %44, void (i8*, i8*, ...)** %43
  %46 = select i1 %42, i32 1, i32 2
  %47 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** %45, align 8
  %48 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %37, i64 0, i32 27
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, -554844497
  br i1 %50, label %51, label %54

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %37, i64 0, i32 31
  %53 = load void (i8*, %struct._xmlError*)*, void (i8*, %struct._xmlError*)** %52, align 8
  br label %54

54:                                               ; preds = %51, %39
  %55 = phi void (i8*, %struct._xmlError*)* [ %53, %51 ], [ null, %39 ]
  %56 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 1
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %54, %35, %23
  %59 = phi void (i8*, %struct._xmlError*)* [ %55, %54 ], [ null, %35 ], [ null, %23 ]
  %60 = phi void (i8*, i8*, ...)* [ %47, %54 ], [ null, %35 ], [ null, %23 ]
  %61 = phi i8* [ %57, %54 ], [ null, %35 ], [ null, %23 ]
  %62 = phi i32 [ %46, %54 ], [ 2, %35 ], [ 2, %23 ]
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* %59, void (i8*, i8*, ...)* %60, i8* %61, i8* %26, i8* null, i32 8, i32 1549, i32 %62, i8* null, i32 0, i8* %25, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.78, i64 0, i64 0), i8* %25) #14
  br label %65

63:                                               ; preds = %22
  %64 = tail call %struct._xmlParserInput* @xmlNewInputFromFile(%struct._xmlParserCtxt* %2, i8* nonnull %0) #14
  br label %65

65:                                               ; preds = %63, %31, %58, %11
  %66 = phi %struct._xmlParserInput* [ null, %11 ], [ %64, %63 ], [ null, %31 ], [ null, %58 ]
  ret %struct._xmlParserInput* %66
}

declare i32 @xmlStrncasecmp(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal %struct._xmlParserInput* @xmlDefaultExternalEntityLoader(i8*, i8*, %struct._xmlParserCtxt*) #0 {
  %4 = icmp eq %struct._xmlParserCtxt* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 73
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2048
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = add nsw i32 %7, -2048
  store i32 %11, i32* %6, align 4
  %12 = tail call %struct._xmlParserInput* @xmlNoNetExternalEntityLoader(i8* %0, i8* %1, %struct._xmlParserCtxt* nonnull %2)
  store i32 %7, i32* %6, align 4
  br label %57

13:                                               ; preds = %5, %3
  %14 = icmp eq i8* %0, null
  br i1 %14, label %15, label %55

15:                                               ; preds = %13
  %16 = icmp eq i8* %1, null
  %17 = select i1 %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i8* %1
  %18 = bitcast %struct._xmlParserCtxt* %2 to i8*
  br i1 %4, label %50, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 36
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 26
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %57, label %27

27:                                               ; preds = %23, %19
  %28 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 0
  %29 = load %struct._xmlSAXHandler*, %struct._xmlSAXHandler** %28, align 8
  %30 = icmp eq %struct._xmlSAXHandler* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 24
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %29, i64 0, i32 22
  %36 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %29, i64 0, i32 21
  %37 = select i1 %34, void (i8*, i8*, ...)** %36, void (i8*, i8*, ...)** %35
  %38 = select i1 %34, i32 1, i32 2
  %39 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** %37, align 8
  %40 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %29, i64 0, i32 27
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, -554844497
  br i1 %42, label %43, label %46

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct._xmlSAXHandler, %struct._xmlSAXHandler* %29, i64 0, i32 31
  %45 = load void (i8*, %struct._xmlError*)*, void (i8*, %struct._xmlError*)** %44, align 8
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi void (i8*, %struct._xmlError*)* [ %45, %43 ], [ null, %31 ]
  %48 = getelementptr inbounds %struct._xmlParserCtxt, %struct._xmlParserCtxt* %2, i64 0, i32 1
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %46, %27, %15
  %51 = phi void (i8*, %struct._xmlError*)* [ %47, %46 ], [ null, %27 ], [ null, %15 ]
  %52 = phi void (i8*, i8*, ...)* [ %39, %46 ], [ null, %27 ], [ null, %15 ]
  %53 = phi i8* [ %49, %46 ], [ null, %27 ], [ null, %15 ]
  %54 = phi i32 [ %38, %46 ], [ 2, %27 ], [ 2, %15 ]
  tail call void (void (i8*, %struct._xmlError*)*, void (i8*, i8*, ...)*, i8*, i8*, i8*, i32, i32, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, ...) @__xmlRaiseError(void (i8*, %struct._xmlError*)* %51, void (i8*, i8*, ...)* %52, i8* %53, i8* %18, i8* null, i32 8, i32 1549, i32 %54, i8* null, i32 0, i8* %17, i8* null, i8* null, i32 0, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.78, i64 0, i64 0), i8* %17) #14
  br label %57

55:                                               ; preds = %13
  %56 = tail call %struct._xmlParserInput* @xmlNewInputFromFile(%struct._xmlParserCtxt* %2, i8* nonnull %0) #14
  br label %57

57:                                               ; preds = %50, %23, %55, %10
  %58 = phi %struct._xmlParserInput* [ %12, %10 ], [ %56, %55 ], [ null, %23 ], [ null, %50 ]
  ret %struct._xmlParserInput* %58
}

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #11

declare i32 @xmlBufferAdd(%struct._xmlBuffer*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #12

declare i32 @close(i32) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #12

declare %struct._xmlParserInput* @xmlNewInputFromFile(%struct._xmlParserCtxt*, i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
