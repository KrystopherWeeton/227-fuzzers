; ModuleID = '../../third_party/skia/src/core/SkPaintPriv.cpp'
source_filename = "../../third_party/skia/src/core/SkPaintPriv.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.0, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.0 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%class.SkColorFilterShader = type <{ %class.SkShaderBase.base, [4 x i8], %class.sk_sp.0, %class.sk_sp.11, float, [4 x i8] }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.sk_sp.11 = type { %class.SkColorFilterBase* }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkPaintPriv10OverwritesEPK7SkPaintNS_21ShaderOverrideOpacityE(%class.SkPaint* readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkPaint* %0, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = icmp ne i32 %1, 2
  br label %54

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %8 = load %class.SkColorFilter*, %class.SkColorFilter** %7, align 8
  %9 = icmp eq %class.SkColorFilter* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK13SkColorFilter16isAlphaUnchangedEv(%class.SkColorFilter* nonnull %8) #5
  br i1 %11, label %12, label %47

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, 2.550000e+02
  %16 = fadd float %15, 5.000000e-01
  %17 = tail call float @llvm.floor.f32(float %16) #5
  %18 = fcmp olt float %17, 0x41DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0x41DFFFFFE0000000
  %20 = fcmp ogt float %19, 0xC1DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0xC1DFFFFFE0000000
  %22 = fptosi float %21 to i32
  %23 = trunc i32 %22 to i8
  %24 = icmp eq i8 %23, -1
  %25 = icmp ne i32 %1, 2
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %38

27:                                               ; preds = %12
  %28 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %29 = load %class.SkShader*, %class.SkShader** %28, align 8
  %30 = icmp eq %class.SkShader* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %27
  %32 = bitcast %class.SkShader* %29 to i1 (%class.SkShader*)***
  %33 = load i1 (%class.SkShader*)**, i1 (%class.SkShader*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %33, i64 7
  %35 = load i1 (%class.SkShader*)*, i1 (%class.SkShader*)** %34, align 8
  %36 = tail call zeroext i1 %35(%class.SkShader* nonnull %29) #5
  %37 = select i1 %36, i32 0, i32 3
  br label %47

38:                                               ; preds = %12
  %39 = icmp eq i8 %23, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %38
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %44 = load %class.SkShader*, %class.SkShader** %43, align 8
  %45 = icmp eq %class.SkShader* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42, %40
  br label %47

47:                                               ; preds = %10, %31, %46, %38, %27, %42
  %48 = phi i32 [ 3, %10 ], [ 2, %46 ], [ 3, %38 ], [ 0, %27 ], [ 1, %42 ], [ %37, %31 ]
  %49 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = lshr i32 %50, 10
  %52 = and i32 %51, 255
  %53 = tail call zeroext i1 @_ZN10SkXfermode8IsOpaqueE11SkBlendModeNS_15SrcColorOpacityE(i32 %52, i32 %48) #5
  br label %54

54:                                               ; preds = %47, %4
  %55 = phi i1 [ %53, %47 ], [ %5, %4 ]
  ret i1 %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN10SkXfermode8IsOpaqueE11SkBlendModeNS_15SrcColorOpacityE(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11SkPaintPriv12ShouldDitherERK7SkPaint11SkColorType(%class.SkPaint* nocapture readonly dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = or i32 %1, 1
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %30, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 4, i32 0
  %12 = load %class.SkImageFilter*, %class.SkImageFilter** %11, align 8
  %13 = icmp eq %class.SkImageFilter* %12, null
  br i1 %13, label %14, label %30

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %16 = load %class.SkMaskFilter*, %class.SkMaskFilter** %15, align 8
  %17 = icmp eq %class.SkMaskFilter* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %20 = load %class.SkShader*, %class.SkShader** %19, align 8
  %21 = icmp eq %class.SkShader* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.SkShader* %20 to %class.SkShaderBase*
  %24 = bitcast %class.SkShader* %20 to i1 (%class.SkShaderBase*)***
  %25 = load i1 (%class.SkShaderBase*)**, i1 (%class.SkShaderBase*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.SkShaderBase*)*, i1 (%class.SkShaderBase*)** %25, i64 9
  %27 = load i1 (%class.SkShaderBase*)*, i1 (%class.SkShaderBase*)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.SkShaderBase* nonnull %23) #5
  %29 = xor i1 %28, true
  br label %30

30:                                               ; preds = %2, %22, %10, %14, %18, %7
  %31 = phi i1 [ false, %2 ], [ true, %7 ], [ true, %18 ], [ true, %14 ], [ true, %10 ], [ %29, %22 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11SkPaintPriv21ComputeLuminanceColorERK7SkPaint(%class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5
  %4 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %5 = tail call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* %4) #5
  store i32 %5, i32* %2, align 4
  %6 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %7 = bitcast %class.SkShader** %6 to %class.SkShaderBase**
  %8 = load %class.SkShaderBase*, %class.SkShaderBase** %7, align 8
  %9 = icmp eq %class.SkShaderBase* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZNK12SkShaderBase16asLuminanceColorEPj(%class.SkShaderBase* nonnull %8, i32* nonnull %2) #5
  br i1 %11, label %12, label %19

12:                                               ; preds = %10, %1
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %14 = load %class.SkColorFilter*, %class.SkColorFilter** %13, align 8
  %15 = icmp eq %class.SkColorFilter* %14, null
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %19, label %17

17:                                               ; preds = %12
  %18 = call i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter* nonnull %14, i32 %16) #5
  store i32 %18, i32* %2, align 4
  br label %19

19:                                               ; preds = %10, %17, %12
  %20 = phi i32 [ %18, %17 ], [ %16, %12 ], [ -8421249, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint*, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.0, align 8
  %4 = alloca %class.sk_sp.3, align 8
  %5 = alloca %class.sk_sp.0, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %struct.SkRGBA4f*
  %10 = alloca %class.sk_sp.3, align 8
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %12 = load %class.SkColorFilter*, %class.SkColorFilter** %11, align 8
  %13 = icmp eq %class.SkColorFilter* %12, null
  br i1 %13, label %103, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %16 = load %class.SkShader*, %class.SkShader** %15, align 8
  %17 = icmp eq %class.SkShader* %16, null
  br i1 %17, label %77, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkShader, %class.SkShader* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !2
  %21 = ptrtoint %class.SkShader* %16 to i64
  %22 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !5
  %26 = ptrtoint %class.SkColorFilter* %12 to i64
  %27 = bitcast %class.sk_sp.0* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %class.sk_sp.3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = tail call i8* @_Znwm(i64 80) #6, !noalias !8
  %30 = bitcast i8* %29 to %class.SkColorFilterShader*
  %31 = bitcast %class.sk_sp.0* %3 to i64*
  store i64 %21, i64* %31, align 8, !noalias !8
  %32 = bitcast %class.sk_sp.3* %4 to i64*
  store i64 %26, i64* %32, align 8, !noalias !8
  call void @_ZN19SkColorFilterShaderC1E5sk_spI8SkShaderEfS0_I13SkColorFilterE(%class.SkColorFilterShader* nonnull %30, %class.sk_sp.0* nonnull %3, float %23, %class.sk_sp.3* nonnull %4) #5, !noalias !8
  %33 = ptrtoint i8* %29 to i64
  %34 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %4, i64 0, i32 0
  %35 = load %class.SkColorFilter*, %class.SkColorFilter** %34, align 8, !noalias !8
  %36 = icmp eq %class.SkColorFilter* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %18
  %38 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel, !noalias !8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorFilter* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkColorFilter* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8, !noalias !8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8, !noalias !8
  call void %46(%class.SkRefCntBase* nonnull %42) #5, !noalias !8
  br label %47

47:                                               ; preds = %41, %37, %18
  %48 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %3, i64 0, i32 0
  %49 = load %class.SkShader*, %class.SkShader** %48, align 8, !noalias !8
  %50 = icmp eq %class.SkShader* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkShader, %class.SkShader* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel, !noalias !8
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkShader* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkShader* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8, !noalias !8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8, !noalias !8
  call void %60(%class.SkRefCntBase* nonnull %56) #5, !noalias !8
  br label %61

61:                                               ; preds = %47, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %62 = bitcast %class.sk_sp.0* %5 to i64*
  store i64 %33, i64* %62, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %0, %class.sk_sp.0* nonnull %5) #5
  %63 = getelementptr inbounds %class.sk_sp.0, %class.sk_sp.0* %5, i64 0, i32 0
  %64 = load %class.SkShader*, %class.SkShader** %63, align 8
  %65 = icmp eq %class.SkShader* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %class.SkShader, %class.SkShader* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkShader* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkShader* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #5
  br label %76

76:                                               ; preds = %70, %66, %61
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %0, float 1.000000e+00) #5
  br label %89

77:                                               ; preds = %14
  %78 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #5
  %79 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #5
  %80 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5
  %81 = bitcast %struct.SkRGBA4f* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  store <2 x i64> %82, <2 x i64>* %8, align 16
  %83 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #5
  %84 = call { <2 x float>, <2 x float> } @_ZNK13SkColorFilter13filterColor4fERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpaceS6_(%class.SkColorFilter* nonnull %12, %struct.SkRGBA4f* nonnull dereferenceable(16) %9, %class.SkColorSpace* %83, %class.SkColorSpace* %1) #5
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %86 = extractvalue { <2 x float>, <2 x float> } %84, 0
  store <2 x float> %86, <2 x float>* %85, align 8
  %87 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %88 = extractvalue { <2 x float>, <2 x float> } %84, 1
  store <2 x float> %88, <2 x float>* %87, align 8
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* %0, %struct.SkRGBA4f* nonnull dereferenceable(16) %7, %class.SkColorSpace* %1) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #5
  br label %89

89:                                               ; preds = %77, %76
  %90 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %10, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %90, align 8
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %0, %class.sk_sp.3* nonnull %10) #5
  %91 = load %class.SkColorFilter*, %class.SkColorFilter** %90, align 8
  %92 = icmp eq %class.SkColorFilter* %91, null
  br i1 %92, label %103, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %91, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorFilter* %91 to %class.SkRefCntBase*
  %99 = bitcast %class.SkColorFilter* %91 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #5
  br label %103

103:                                              ; preds = %97, %93, %89, %2
  ret void
}

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.0*) local_unnamed_addr #2

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #2

declare void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK13SkColorFilter13filterColor4fERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpaceS6_(%class.SkColorFilter*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.3*) local_unnamed_addr #2

declare zeroext i1 @_ZNK13SkColorFilter16isAlphaUnchangedEv(%class.SkColorFilter*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare zeroext i1 @_ZNK12SkShaderBase16asLuminanceColorEPj(%class.SkShaderBase*, i32*) local_unnamed_addr #2

declare i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter*, i32) local_unnamed_addr #2

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN19SkColorFilterShaderC1E5sk_spI8SkShaderEfS0_I13SkColorFilterE(%class.SkColorFilterShader*, %class.sk_sp.0*, float, %class.sk_sp.3*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI8SkShaderE5sk_spIT_EPS2_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_: argument 0"}
!7 = distinct !{!7, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_Z10sk_make_spI19SkColorFilterShaderJ5sk_spI8SkShaderEfS1_I13SkColorFilterEEES1_IT_EDpOT0_: argument 0"}
!10 = distinct !{!10, !"_Z10sk_make_spI19SkColorFilterShaderJ5sk_spI8SkShaderEfS1_I13SkColorFilterEEES1_IT_EDpOT0_"}
