; ModuleID = '../../services/device/generic_sensor/platform_sensor_fusion_algorithm.cc'
source_filename = "../../services/device/generic_sensor/platform_sensor_fusion_algorithm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::PlatformSensorFusionAlgorithm" = type { i32 (...)**, %"class.device::PlatformSensorFusion"*, double, i32, %"class.std::__1::vector" }
%"class.device::PlatformSensorFusion" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField"] }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }

@_ZTVN6device29PlatformSensorFusionAlgorithmE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::PlatformSensorFusionAlgorithm"*)* @_ZN6device29PlatformSensorFusionAlgorithmD2Ev to i8*), i8* bitcast (void (%"class.device::PlatformSensorFusionAlgorithm"*)* @_ZN6device29PlatformSensorFusionAlgorithmD0Ev to i8*), i8* bitcast (void (%"class.device::PlatformSensorFusionAlgorithm"*, double)* @_ZN6device29PlatformSensorFusionAlgorithm12SetFrequencyEd to i8*), i8* bitcast (void (%"class.device::PlatformSensorFusionAlgorithm"*)* @_ZN6device29PlatformSensorFusionAlgorithm5ResetEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN6device29PlatformSensorFusionAlgorithmD1Ev = hidden unnamed_addr alias void (%"class.device::PlatformSensorFusionAlgorithm"*), void (%"class.device::PlatformSensorFusionAlgorithm"*)* @_ZN6device29PlatformSensorFusionAlgorithmD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PlatformSensorFusionAlgorithmC2ENS_5mojom10SensorTypeERKNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6device29PlatformSensorFusionAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 1
  store %"class.device::PlatformSensorFusion"* null, %"class.device::PlatformSensorFusion"** %5, align 8
  %6 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 2
  store double 1.000000e-01, double* %6, align 8
  %7 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 3
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 4611686018427387903
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #11
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #12
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 4, i32 0, i32 1
  %26 = bitcast i32** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds i32, i32* %24, i64 %16
  %29 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i32* %28, i32** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast i32** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #10
  %41 = getelementptr inbounds i32, i32* %24, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %3, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PlatformSensorFusionAlgorithmD2Ev(%"class.device::PlatformSensorFusionAlgorithm"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6device29PlatformSensorFusionAlgorithmE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6device29PlatformSensorFusionAlgorithmD0Ev(%"class.device::PlatformSensorFusionAlgorithm"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6device29PlatformSensorFusionAlgorithm31IsReadingSignificantlyDifferentERKNS_13SensorReadingES3_(%"class.device::PlatformSensorFusionAlgorithm"* nocapture readonly, %"union.device::SensorReading"* nocapture readonly dereferenceable(40), %"union.device::SensorReading"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.device::PlatformSensorFusionAlgorithm", %"class.device::PlatformSensorFusionAlgorithm"* %0, i64 0, i32 2
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %1, i64 0, i32 0, i32 1, i64 0
  %7 = bitcast %"class.device::SensorReadingField"* %6 to double*
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 0
  %10 = bitcast %"class.device::SensorReadingField"* %9 to double*
  %11 = load double, double* %10, align 8
  %12 = fsub double %8, %11
  %13 = tail call double @llvm.fabs.f64(double %12)
  %14 = fcmp ult double %13, %5
  br i1 %14, label %15, label %25

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %1, i64 0, i32 0, i32 1, i64 1
  %17 = bitcast %"class.device::SensorReadingField"* %16 to double*
  %18 = load double, double* %17, align 8
  %19 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 1
  %20 = bitcast %"class.device::SensorReadingField"* %19 to double*
  %21 = load double, double* %20, align 8
  %22 = fsub double %18, %21
  %23 = tail call double @llvm.fabs.f64(double %22)
  %24 = fcmp ult double %23, %5
  br i1 %24, label %27, label %25

25:                                               ; preds = %47, %37, %27, %15, %3
  %26 = phi i1 [ true, %3 ], [ true, %15 ], [ true, %27 ], [ true, %37 ], [ false, %47 ]
  ret i1 %26

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %1, i64 0, i32 0, i32 1, i64 2
  %29 = bitcast %"class.device::SensorReadingField"* %28 to double*
  %30 = load double, double* %29, align 8
  %31 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 2
  %32 = bitcast %"class.device::SensorReadingField"* %31 to double*
  %33 = load double, double* %32, align 8
  %34 = fsub double %30, %33
  %35 = tail call double @llvm.fabs.f64(double %34)
  %36 = fcmp ult double %35, %5
  br i1 %36, label %37, label %25

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %1, i64 0, i32 0, i32 1, i64 3
  %39 = bitcast %"class.device::SensorReadingField"* %38 to double*
  %40 = load double, double* %39, align 8
  %41 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %2, i64 0, i32 0, i32 1, i64 3
  %42 = bitcast %"class.device::SensorReadingField"* %41 to double*
  %43 = load double, double* %42, align 8
  %44 = fsub double %40, %43
  %45 = tail call double @llvm.fabs.f64(double %44)
  %46 = fcmp ult double %45, %5
  br i1 %46, label %47, label %25

47:                                               ; preds = %37
  br label %25
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device29PlatformSensorFusionAlgorithm12GetFusedDataENS_5mojom10SensorTypeEPNS_13SensorReadingE(%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.device::PlatformSensorFusionAlgorithm"* %0 to i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)***
  %5 = load i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)**, i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)*, i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)** %5, i64 4
  %7 = load i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)*, i1 (%"class.device::PlatformSensorFusionAlgorithm"*, i32, %"union.device::SensorReading"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.device::PlatformSensorFusionAlgorithm"* %0, i32 %1, %"union.device::SensorReading"* %2) #10
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device29PlatformSensorFusionAlgorithm5ResetEv(%"class.device::PlatformSensorFusionAlgorithm"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6device29PlatformSensorFusionAlgorithm12SetFrequencyEd(%"class.device::PlatformSensorFusionAlgorithm"* nocapture, double) unnamed_addr #5 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
