; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/space_to_depth.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/space_to_depth.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteSpaceToDepthParams = type { i32 }
%"struct.tflite::SpaceToDepthParams" = type { i32 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }

$_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [71 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/space_to_depth.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"NumDimensions(input)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.10 = private unnamed_addr constant [143 x i8] c"data_type == kTfLiteFloat32 || data_type == kTfLiteUInt8 || data_type == kTfLiteInt8 || data_type == kTfLiteInt32 || data_type == kTfLiteInt64\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"input_height\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"output_height * block_size\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"input_width\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"output_width * block_size\00", align 1
@_ZZN6tflite3ops7builtin27Register_SPACE_TO_DEPTH_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14space_to_depth7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin35Register_SPACE_TO_DEPTH_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14space_to_depth7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.19 = private unnamed_addr constant [35 x i8] c"Type '%s' not currently supported.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14space_to_depth7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %4 = bitcast i8** %3 to %struct.TfLiteSpaceToDepthParams**
  %5 = load %struct.TfLiteSpaceToDepthParams*, %struct.TfLiteSpaceToDepthParams** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %13 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %12, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %13(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %9, i32 1) #8
  br label %105

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %22 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %21, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %22(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %18, i32 1) #8
  br label %105

23:                                               ; preds = %14
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %29 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 %30
  br label %32

32:                                               ; preds = %23, %27
  %33 = phi %struct.TfLiteTensor* [ %31, %27 ], [ null, %23 ]
  %34 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %39 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %38, align 8
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 %40
  br label %42

42:                                               ; preds = %32, %37
  %43 = phi %struct.TfLiteTensor* [ %41, %37 ], [ null, %32 ]
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 2
  %45 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %44, align 8
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 4
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %47, i32 4) #8
  br label %105

52:                                               ; preds = %42
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  switch i32 %54, label %55 [
    i32 9, label %58
    i32 4, label %58
    i32 3, label %58
    i32 2, label %58
    i32 1, label %58
  ]

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %57 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %56, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %57(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %105

58:                                               ; preds = %52, %52, %52, %52, %52
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, %54
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  %65 = tail call i8* @TfLiteTypeGetName(i32 %60) #8
  %66 = load i32, i32* %53, align 8
  %67 = tail call i8* @TfLiteTypeGetName(i32 %66) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %65, i8* %67) #8
  br label %105

68:                                               ; preds = %58
  %69 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %5, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %45, i64 0, i32 1, i64 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %45, i64 0, i32 1, i64 2
  %74 = load i32, i32* %73, align 4
  %75 = sdiv i32 %72, %70
  %76 = sdiv i32 %74, %70
  %77 = mul nsw i32 %75, %70
  %78 = icmp eq i32 %72, %77
  br i1 %78, label %82, label %79

79:                                               ; preds = %68
  %80 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %81 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %80, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %81(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i32 %72, i32 %77) #8
  br label %105

82:                                               ; preds = %68
  %83 = mul nsw i32 %76, %70
  %84 = icmp eq i32 %74, %83
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %87 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %86, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %87(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i32 %74, i32 %83) #8
  br label %105

88:                                               ; preds = %82
  %89 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #8
  %90 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %44, align 8
  %91 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %90, i64 0, i32 1, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 1
  store i32 %75, i32* %94, align 4
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 2
  store i32 %76, i32* %95, align 4
  %96 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %44, align 8
  %97 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 3
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 %70, %70
  %100 = mul i32 %99, %98
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %89, i64 0, i32 1, i64 3
  store i32 %100, i32* %101, align 4
  %102 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %103 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %102, align 8
  %104 = tail call i32 %103(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %43, %struct.TfLiteIntArray* %89) #8
  br label %105

105:                                              ; preds = %49, %79, %85, %88, %62, %55, %20, %11
  %106 = phi i32 [ 1, %11 ], [ 1, %20 ], [ 1, %49 ], [ 1, %62 ], [ 1, %55 ], [ 1, %79 ], [ 1, %85 ], [ %104, %88 ]
  ret i32 %106
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin27Register_SPACE_TO_DEPTH_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin27Register_SPACE_TO_DEPTH_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %19 = bitcast i8** %18 to %struct.TfLiteSpaceToDepthParams**
  %20 = load %struct.TfLiteSpaceToDepthParams*, %struct.TfLiteSpaceToDepthParams** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %22 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %21, align 8
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %28 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 %29
  br label %31

31:                                               ; preds = %2, %26
  %32 = phi %struct.TfLiteTensor* [ %30, %26 ], [ null, %2 ]
  %33 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %31, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %31 ]
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %510 [
    i32 1, label %47
    i32 3, label %140
    i32 9, label %233
    i32 2, label %326
    i32 4, label %417
  ]

47:                                               ; preds = %43
  %48 = bitcast %"struct.tflite::SpaceToDepthParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %49, align 4
  %50 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #8
  %53 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %55, align 8, !alias.scope !2
  br label %84

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8, !noalias !2
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4, !noalias !2
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %60, i32* %62, align 8, !alias.scope !2
  %63 = icmp sgt i32 %60, 5
  br i1 %63, label %64, label %71

64:                                               ; preds = %56
  %65 = sext i32 %60 to i64
  %66 = shl nsw i64 %65, 2
  %67 = tail call i8* @_Znam(i64 %66) #9, !noalias !2
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %69 = bitcast i32** %68 to i8**
  store i8* %67, i8** %69, align 8, !alias.scope !2
  %70 = bitcast i8* %67 to i32*
  br label %76

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %73 = bitcast %union.anon* %72 to i32*
  %74 = sext i32 %60 to i64
  %75 = shl nsw i64 %74, 2
  br label %76

76:                                               ; preds = %71, %64
  %77 = phi i64 [ %66, %64 ], [ %75, %71 ]
  %78 = phi i32* [ %70, %64 ], [ %73, %71 ]
  %79 = bitcast i32* %78 to i8*
  %80 = bitcast i32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 %77, i1 false) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %82 = bitcast %union.TfLitePtrUnion* %81 to float**
  %83 = load float*, float** %82, align 8
  br label %84

84:                                               ; preds = %54, %76
  %85 = phi float* [ %83, %76 ], [ null, %54 ]
  %86 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !5
  br label %118

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !5
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !5
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !5
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !5
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %88, %110
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  call void @_ZN6tflite13reference_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %3, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %85, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %119)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = bitcast i32* %125 to i8*
  call void @_ZdaPv(i8* %128) #9
  br label %129

129:                                              ; preds = %118, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #8
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = icmp sgt i32 %131, 5
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast i32* %135 to i8*
  call void @_ZdaPv(i8* %138) #9
  br label %139

139:                                              ; preds = %129, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  br label %514

140:                                              ; preds = %43
  %141 = bitcast %"struct.tflite::SpaceToDepthParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #8
  %142 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %142, align 4
  %143 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %142, align 4
  %145 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #8
  %146 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %148, align 8, !alias.scope !8
  br label %177

149:                                              ; preds = %140
  %150 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %151 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %150, align 8, !noalias !8
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 4, !noalias !8
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %151, i64 0, i32 1, i64 0
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %153, i32* %155, align 8, !alias.scope !8
  %156 = icmp sgt i32 %153, 5
  br i1 %156, label %157, label %164

157:                                              ; preds = %149
  %158 = sext i32 %153 to i64
  %159 = shl nsw i64 %158, 2
  %160 = tail call i8* @_Znam(i64 %159) #9, !noalias !8
  %161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %162 = bitcast i32** %161 to i8**
  store i8* %160, i8** %162, align 8, !alias.scope !8
  %163 = bitcast i8* %160 to i32*
  br label %169

164:                                              ; preds = %149
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %166 = bitcast %union.anon* %165 to i32*
  %167 = sext i32 %153 to i64
  %168 = shl nsw i64 %167, 2
  br label %169

169:                                              ; preds = %164, %157
  %170 = phi i64 [ %159, %157 ], [ %168, %164 ]
  %171 = phi i32* [ %163, %157 ], [ %166, %164 ]
  %172 = bitcast i32* %171 to i8*
  %173 = bitcast i32* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 %170, i1 false) #8
  %174 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %175 = bitcast %union.TfLitePtrUnion* %174 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %147, %169
  %178 = phi i8* [ %176, %169 ], [ null, %147 ]
  %179 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #8
  %180 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %180, label %181, label %183

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %182, align 8, !alias.scope !11
  br label %211

183:                                              ; preds = %177
  %184 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %185 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %184, align 8, !noalias !11
  %186 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 4, !noalias !11
  %188 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %185, i64 0, i32 1, i64 0
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %187, i32* %189, align 8, !alias.scope !11
  %190 = icmp sgt i32 %187, 5
  br i1 %190, label %191, label %198

191:                                              ; preds = %183
  %192 = sext i32 %187 to i64
  %193 = shl nsw i64 %192, 2
  %194 = tail call i8* @_Znam(i64 %193) #9, !noalias !11
  %195 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %196 = bitcast i32** %195 to i8**
  store i8* %194, i8** %196, align 8, !alias.scope !11
  %197 = bitcast i8* %194 to i32*
  br label %203

198:                                              ; preds = %183
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %200 = bitcast %union.anon* %199 to i32*
  %201 = sext i32 %187 to i64
  %202 = shl nsw i64 %201, 2
  br label %203

203:                                              ; preds = %198, %191
  %204 = phi i64 [ %193, %191 ], [ %202, %198 ]
  %205 = phi i32* [ %197, %191 ], [ %200, %198 ]
  %206 = bitcast i32* %205 to i8*
  %207 = bitcast i32* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 %204, i1 false) #8
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %209 = bitcast %union.TfLitePtrUnion* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  br label %211

211:                                              ; preds = %181, %203
  %212 = phi i8* [ %210, %203 ], [ null, %181 ]
  call void @_ZN6tflite13reference_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %178, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %212)
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, 5
  br i1 %215, label %216, label %222

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %218 = load i32*, i32** %217, align 8
  %219 = icmp eq i32* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %216
  %221 = bitcast i32* %218 to i8*
  call void @_ZdaPv(i8* %221) #9
  br label %222

222:                                              ; preds = %211, %216, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #8
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = icmp sgt i32 %224, 5
  br i1 %225, label %226, label %232

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %228 = load i32*, i32** %227, align 8
  %229 = icmp eq i32* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = bitcast i32* %228 to i8*
  call void @_ZdaPv(i8* %231) #9
  br label %232

232:                                              ; preds = %222, %226, %230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #8
  br label %514

233:                                              ; preds = %43
  %234 = bitcast %"struct.tflite::SpaceToDepthParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #8
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %235, align 4
  %236 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %235, align 4
  %238 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %238) #8
  %239 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %239, label %240, label %242

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %241, align 8, !alias.scope !14
  br label %270

242:                                              ; preds = %233
  %243 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %244 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %243, align 8, !noalias !14
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %244, i64 0, i32 0
  %246 = load i32, i32* %245, align 4, !noalias !14
  %247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %244, i64 0, i32 1, i64 0
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %246, i32* %248, align 8, !alias.scope !14
  %249 = icmp sgt i32 %246, 5
  br i1 %249, label %250, label %257

250:                                              ; preds = %242
  %251 = sext i32 %246 to i64
  %252 = shl nsw i64 %251, 2
  %253 = tail call i8* @_Znam(i64 %252) #9, !noalias !14
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %255 = bitcast i32** %254 to i8**
  store i8* %253, i8** %255, align 8, !alias.scope !14
  %256 = bitcast i8* %253 to i32*
  br label %262

257:                                              ; preds = %242
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %259 = bitcast %union.anon* %258 to i32*
  %260 = sext i32 %246 to i64
  %261 = shl nsw i64 %260, 2
  br label %262

262:                                              ; preds = %257, %250
  %263 = phi i64 [ %252, %250 ], [ %261, %257 ]
  %264 = phi i32* [ %256, %250 ], [ %259, %257 ]
  %265 = bitcast i32* %264 to i8*
  %266 = bitcast i32* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %266, i64 %263, i1 false) #8
  %267 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %268 = bitcast %union.TfLitePtrUnion* %267 to i8**
  %269 = load i8*, i8** %268, align 8
  br label %270

270:                                              ; preds = %240, %262
  %271 = phi i8* [ %269, %262 ], [ null, %240 ]
  %272 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #8
  %273 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %275, align 8, !alias.scope !17
  br label %304

276:                                              ; preds = %270
  %277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %278 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %277, align 8, !noalias !17
  %279 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 4, !noalias !17
  %281 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 1, i64 0
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %280, i32* %282, align 8, !alias.scope !17
  %283 = icmp sgt i32 %280, 5
  br i1 %283, label %284, label %291

284:                                              ; preds = %276
  %285 = sext i32 %280 to i64
  %286 = shl nsw i64 %285, 2
  %287 = tail call i8* @_Znam(i64 %286) #9, !noalias !17
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %289 = bitcast i32** %288 to i8**
  store i8* %287, i8** %289, align 8, !alias.scope !17
  %290 = bitcast i8* %287 to i32*
  br label %296

291:                                              ; preds = %276
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %293 = bitcast %union.anon* %292 to i32*
  %294 = sext i32 %280 to i64
  %295 = shl nsw i64 %294, 2
  br label %296

296:                                              ; preds = %291, %284
  %297 = phi i64 [ %286, %284 ], [ %295, %291 ]
  %298 = phi i32* [ %290, %284 ], [ %293, %291 ]
  %299 = bitcast i32* %298 to i8*
  %300 = bitcast i32* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 %297, i1 false) #8
  %301 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %302 = bitcast %union.TfLitePtrUnion* %301 to i8**
  %303 = load i8*, i8** %302, align 8
  br label %304

304:                                              ; preds = %274, %296
  %305 = phi i8* [ %303, %296 ], [ null, %274 ]
  call void @_ZN6tflite13reference_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %271, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %305)
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp sgt i32 %307, 5
  br i1 %308, label %309, label %315

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = bitcast i32* %311 to i8*
  call void @_ZdaPv(i8* %314) #9
  br label %315

315:                                              ; preds = %304, %309, %313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #8
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp sgt i32 %317, 5
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %321 = load i32*, i32** %320, align 8
  %322 = icmp eq i32* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = bitcast i32* %321 to i8*
  call void @_ZdaPv(i8* %324) #9
  br label %325

325:                                              ; preds = %315, %319, %323
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %238) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #8
  br label %514

326:                                              ; preds = %43
  %327 = bitcast %"struct.tflite::SpaceToDepthParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327) #8
  %328 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %12, i64 0, i32 0
  store i32 -1431655766, i32* %328, align 4
  %329 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %331) #8
  %332 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %334, align 8, !alias.scope !20
  br label %362

335:                                              ; preds = %326
  %336 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %337 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %336, align 8, !noalias !20
  %338 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %337, i64 0, i32 0
  %339 = load i32, i32* %338, align 4, !noalias !20
  %340 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %337, i64 0, i32 1, i64 0
  %341 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %339, i32* %341, align 8, !alias.scope !20
  %342 = icmp sgt i32 %339, 5
  br i1 %342, label %343, label %350

343:                                              ; preds = %335
  %344 = sext i32 %339 to i64
  %345 = shl nsw i64 %344, 2
  %346 = tail call i8* @_Znam(i64 %345) #9, !noalias !20
  %347 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %348 = bitcast i32** %347 to i8**
  store i8* %346, i8** %348, align 8, !alias.scope !20
  %349 = bitcast i8* %346 to i32*
  br label %355

350:                                              ; preds = %335
  %351 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %352 = bitcast %union.anon* %351 to i32*
  %353 = sext i32 %339 to i64
  %354 = shl nsw i64 %353, 2
  br label %355

355:                                              ; preds = %350, %343
  %356 = phi i64 [ %345, %343 ], [ %354, %350 ]
  %357 = phi i32* [ %349, %343 ], [ %352, %350 ]
  %358 = bitcast i32* %357 to i8*
  %359 = bitcast i32* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 %356, i1 false) #8
  %360 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1, i32 0
  %361 = load i32*, i32** %360, align 8
  br label %362

362:                                              ; preds = %333, %355
  %363 = phi i32* [ %361, %355 ], [ null, %333 ]
  %364 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %364) #8
  %365 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %367, align 8, !alias.scope !23
  br label %395

368:                                              ; preds = %362
  %369 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %370 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %369, align 8, !noalias !23
  %371 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 0
  %372 = load i32, i32* %371, align 4, !noalias !23
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 1, i64 0
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %372, i32* %374, align 8, !alias.scope !23
  %375 = icmp sgt i32 %372, 5
  br i1 %375, label %376, label %383

376:                                              ; preds = %368
  %377 = sext i32 %372 to i64
  %378 = shl nsw i64 %377, 2
  %379 = tail call i8* @_Znam(i64 %378) #9, !noalias !23
  %380 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %381 = bitcast i32** %380 to i8**
  store i8* %379, i8** %381, align 8, !alias.scope !23
  %382 = bitcast i8* %379 to i32*
  br label %388

383:                                              ; preds = %368
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %385 = bitcast %union.anon* %384 to i32*
  %386 = sext i32 %372 to i64
  %387 = shl nsw i64 %386, 2
  br label %388

388:                                              ; preds = %383, %376
  %389 = phi i64 [ %378, %376 ], [ %387, %383 ]
  %390 = phi i32* [ %382, %376 ], [ %385, %383 ]
  %391 = bitcast i32* %390 to i8*
  %392 = bitcast i32* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* align 4 %392, i64 %389, i1 false) #8
  %393 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %394 = load i32*, i32** %393, align 8
  br label %395

395:                                              ; preds = %366, %388
  %396 = phi i32* [ %394, %388 ], [ null, %366 ]
  call void @_ZN6tflite13reference_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %363, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %396)
  %397 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = icmp sgt i32 %398, 5
  br i1 %399, label %400, label %406

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = icmp eq i32* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %400
  %405 = bitcast i32* %402 to i8*
  call void @_ZdaPv(i8* %405) #9
  br label %406

406:                                              ; preds = %395, %400, %404
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %364) #8
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = icmp sgt i32 %408, 5
  br i1 %409, label %410, label %416

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %412 = load i32*, i32** %411, align 8
  %413 = icmp eq i32* %412, null
  br i1 %413, label %416, label %414

414:                                              ; preds = %410
  %415 = bitcast i32* %412 to i8*
  call void @_ZdaPv(i8* %415) #9
  br label %416

416:                                              ; preds = %406, %410, %414
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %331) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327) #8
  br label %514

417:                                              ; preds = %43
  %418 = bitcast %"struct.tflite::SpaceToDepthParams"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %418) #8
  %419 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %15, i64 0, i32 0
  store i32 -1431655766, i32* %419, align 4
  %420 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  store i32 %421, i32* %419, align 4
  %422 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %422) #8
  %423 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %423, label %424, label %426

424:                                              ; preds = %417
  %425 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %425, align 8, !alias.scope !26
  br label %454

426:                                              ; preds = %417
  %427 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %428 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %427, align 8, !noalias !26
  %429 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %428, i64 0, i32 0
  %430 = load i32, i32* %429, align 4, !noalias !26
  %431 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %428, i64 0, i32 1, i64 0
  %432 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %430, i32* %432, align 8, !alias.scope !26
  %433 = icmp sgt i32 %430, 5
  br i1 %433, label %434, label %441

434:                                              ; preds = %426
  %435 = sext i32 %430 to i64
  %436 = shl nsw i64 %435, 2
  %437 = tail call i8* @_Znam(i64 %436) #9, !noalias !26
  %438 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %439 = bitcast i32** %438 to i8**
  store i8* %437, i8** %439, align 8, !alias.scope !26
  %440 = bitcast i8* %437 to i32*
  br label %446

441:                                              ; preds = %426
  %442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %443 = bitcast %union.anon* %442 to i32*
  %444 = sext i32 %430 to i64
  %445 = shl nsw i64 %444, 2
  br label %446

446:                                              ; preds = %441, %434
  %447 = phi i64 [ %436, %434 ], [ %445, %441 ]
  %448 = phi i32* [ %440, %434 ], [ %443, %441 ]
  %449 = bitcast i32* %448 to i8*
  %450 = bitcast i32* %431 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %449, i8* align 4 %450, i64 %447, i1 false) #8
  %451 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %452 = bitcast %union.TfLitePtrUnion* %451 to i64**
  %453 = load i64*, i64** %452, align 8
  br label %454

454:                                              ; preds = %424, %446
  %455 = phi i64* [ %453, %446 ], [ null, %424 ]
  %456 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %456) #8
  %457 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %459, align 8, !alias.scope !29
  br label %488

460:                                              ; preds = %454
  %461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %462 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %461, align 8, !noalias !29
  %463 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %462, i64 0, i32 0
  %464 = load i32, i32* %463, align 4, !noalias !29
  %465 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %462, i64 0, i32 1, i64 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %464, i32* %466, align 8, !alias.scope !29
  %467 = icmp sgt i32 %464, 5
  br i1 %467, label %468, label %475

468:                                              ; preds = %460
  %469 = sext i32 %464 to i64
  %470 = shl nsw i64 %469, 2
  %471 = tail call i8* @_Znam(i64 %470) #9, !noalias !29
  %472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %473 = bitcast i32** %472 to i8**
  store i8* %471, i8** %473, align 8, !alias.scope !29
  %474 = bitcast i8* %471 to i32*
  br label %480

475:                                              ; preds = %460
  %476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %477 = bitcast %union.anon* %476 to i32*
  %478 = sext i32 %464 to i64
  %479 = shl nsw i64 %478, 2
  br label %480

480:                                              ; preds = %475, %468
  %481 = phi i64 [ %470, %468 ], [ %479, %475 ]
  %482 = phi i32* [ %474, %468 ], [ %477, %475 ]
  %483 = bitcast i32* %482 to i8*
  %484 = bitcast i32* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %483, i8* align 4 %484, i64 %481, i1 false) #8
  %485 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %486 = bitcast %union.TfLitePtrUnion* %485 to i64**
  %487 = load i64*, i64** %486, align 8
  br label %488

488:                                              ; preds = %458, %480
  %489 = phi i64* [ %487, %480 ], [ null, %458 ]
  call void @_ZN6tflite13reference_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %455, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i64* %489)
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp sgt i32 %491, 5
  br i1 %492, label %493, label %499

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = icmp eq i32* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %493
  %498 = bitcast i32* %495 to i8*
  call void @_ZdaPv(i8* %498) #9
  br label %499

499:                                              ; preds = %488, %493, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %456) #8
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp sgt i32 %501, 5
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  %506 = icmp eq i32* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast i32* %505 to i8*
  call void @_ZdaPv(i8* %508) #9
  br label %509

509:                                              ; preds = %499, %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %422) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %418) #8
  br label %514

510:                                              ; preds = %43
  %511 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %512 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %511, align 8
  %513 = tail call i8* @TfLiteTypeGetName(i32 %46) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %512(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* %513) #8
  br label %514

514:                                              ; preds = %139, %232, %325, %416, %509, %510
  %515 = phi i32 [ 1, %510 ], [ 0, %509 ], [ 0, %416 ], [ 0, %325 ], [ 0, %232 ], [ 0, %139 ]
  ret i32 %515
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin35Register_SPACE_TO_DEPTH_GENERIC_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin35Register_SPACE_TO_DEPTH_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14space_to_depth4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"struct.tflite::SpaceToDepthParams", align 4
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %19 = bitcast i8** %18 to %struct.TfLiteSpaceToDepthParams**
  %20 = load %struct.TfLiteSpaceToDepthParams*, %struct.TfLiteSpaceToDepthParams** %19, align 8
  %21 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %22 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %21, align 8
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %22, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %28 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 %29
  br label %31

31:                                               ; preds = %2, %26
  %32 = phi %struct.TfLiteTensor* [ %30, %26 ], [ null, %2 ]
  %33 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %31, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %31 ]
  %45 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %510 [
    i32 1, label %47
    i32 3, label %140
    i32 9, label %233
    i32 2, label %326
    i32 4, label %417
  ]

47:                                               ; preds = %43
  %48 = bitcast %"struct.tflite::SpaceToDepthParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %49, align 4
  %50 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #8
  %53 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %55, align 8, !alias.scope !32
  br label %84

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8, !noalias !32
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4, !noalias !32
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %60, i32* %62, align 8, !alias.scope !32
  %63 = icmp sgt i32 %60, 5
  br i1 %63, label %64, label %71

64:                                               ; preds = %56
  %65 = sext i32 %60 to i64
  %66 = shl nsw i64 %65, 2
  %67 = tail call i8* @_Znam(i64 %66) #9, !noalias !32
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %69 = bitcast i32** %68 to i8**
  store i8* %67, i8** %69, align 8, !alias.scope !32
  %70 = bitcast i8* %67 to i32*
  br label %76

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %73 = bitcast %union.anon* %72 to i32*
  %74 = sext i32 %60 to i64
  %75 = shl nsw i64 %74, 2
  br label %76

76:                                               ; preds = %71, %64
  %77 = phi i64 [ %66, %64 ], [ %75, %71 ]
  %78 = phi i32* [ %70, %64 ], [ %73, %71 ]
  %79 = bitcast i32* %78 to i8*
  %80 = bitcast i32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 %77, i1 false) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %82 = bitcast %union.TfLitePtrUnion* %81 to float**
  %83 = load float*, float** %82, align 8
  br label %84

84:                                               ; preds = %54, %76
  %85 = phi float* [ %83, %76 ], [ null, %54 ]
  %86 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !35
  br label %118

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !35
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !35
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !35
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !35
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !35
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %88, %110
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  call void @_ZN6tflite13optimized_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %3, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %85, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, float* %119)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = bitcast i32* %125 to i8*
  call void @_ZdaPv(i8* %128) #9
  br label %129

129:                                              ; preds = %118, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #8
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = icmp sgt i32 %131, 5
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast i32* %135 to i8*
  call void @_ZdaPv(i8* %138) #9
  br label %139

139:                                              ; preds = %129, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  br label %514

140:                                              ; preds = %43
  %141 = bitcast %"struct.tflite::SpaceToDepthParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %141) #8
  %142 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %142, align 4
  %143 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %142, align 4
  %145 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #8
  %146 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %146, label %147, label %149

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %148, align 8, !alias.scope !38
  br label %177

149:                                              ; preds = %140
  %150 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %151 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %150, align 8, !noalias !38
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %151, i64 0, i32 0
  %153 = load i32, i32* %152, align 4, !noalias !38
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %151, i64 0, i32 1, i64 0
  %155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %153, i32* %155, align 8, !alias.scope !38
  %156 = icmp sgt i32 %153, 5
  br i1 %156, label %157, label %164

157:                                              ; preds = %149
  %158 = sext i32 %153 to i64
  %159 = shl nsw i64 %158, 2
  %160 = tail call i8* @_Znam(i64 %159) #9, !noalias !38
  %161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %162 = bitcast i32** %161 to i8**
  store i8* %160, i8** %162, align 8, !alias.scope !38
  %163 = bitcast i8* %160 to i32*
  br label %169

164:                                              ; preds = %149
  %165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %166 = bitcast %union.anon* %165 to i32*
  %167 = sext i32 %153 to i64
  %168 = shl nsw i64 %167, 2
  br label %169

169:                                              ; preds = %164, %157
  %170 = phi i64 [ %159, %157 ], [ %168, %164 ]
  %171 = phi i32* [ %163, %157 ], [ %166, %164 ]
  %172 = bitcast i32* %171 to i8*
  %173 = bitcast i32* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 %170, i1 false) #8
  %174 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %175 = bitcast %union.TfLitePtrUnion* %174 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %147, %169
  %178 = phi i8* [ %176, %169 ], [ null, %147 ]
  %179 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %179) #8
  %180 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %180, label %181, label %183

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %182, align 8, !alias.scope !41
  br label %211

183:                                              ; preds = %177
  %184 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %185 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %184, align 8, !noalias !41
  %186 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 4, !noalias !41
  %188 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %185, i64 0, i32 1, i64 0
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %187, i32* %189, align 8, !alias.scope !41
  %190 = icmp sgt i32 %187, 5
  br i1 %190, label %191, label %198

191:                                              ; preds = %183
  %192 = sext i32 %187 to i64
  %193 = shl nsw i64 %192, 2
  %194 = tail call i8* @_Znam(i64 %193) #9, !noalias !41
  %195 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %196 = bitcast i32** %195 to i8**
  store i8* %194, i8** %196, align 8, !alias.scope !41
  %197 = bitcast i8* %194 to i32*
  br label %203

198:                                              ; preds = %183
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %200 = bitcast %union.anon* %199 to i32*
  %201 = sext i32 %187 to i64
  %202 = shl nsw i64 %201, 2
  br label %203

203:                                              ; preds = %198, %191
  %204 = phi i64 [ %193, %191 ], [ %202, %198 ]
  %205 = phi i32* [ %197, %191 ], [ %200, %198 ]
  %206 = bitcast i32* %205 to i8*
  %207 = bitcast i32* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %207, i64 %204, i1 false) #8
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %209 = bitcast %union.TfLitePtrUnion* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  br label %211

211:                                              ; preds = %181, %203
  %212 = phi i8* [ %210, %203 ], [ null, %181 ]
  call void @_ZN6tflite13optimized_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %178, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %212)
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, 5
  br i1 %215, label %216, label %222

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %218 = load i32*, i32** %217, align 8
  %219 = icmp eq i32* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %216
  %221 = bitcast i32* %218 to i8*
  call void @_ZdaPv(i8* %221) #9
  br label %222

222:                                              ; preds = %211, %216, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %179) #8
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = icmp sgt i32 %224, 5
  br i1 %225, label %226, label %232

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %228 = load i32*, i32** %227, align 8
  %229 = icmp eq i32* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = bitcast i32* %228 to i8*
  call void @_ZdaPv(i8* %231) #9
  br label %232

232:                                              ; preds = %222, %226, %230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %141) #8
  br label %514

233:                                              ; preds = %43
  %234 = bitcast %"struct.tflite::SpaceToDepthParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #8
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %235, align 4
  %236 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  store i32 %237, i32* %235, align 4
  %238 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %238) #8
  %239 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %239, label %240, label %242

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %241, align 8, !alias.scope !44
  br label %270

242:                                              ; preds = %233
  %243 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %244 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %243, align 8, !noalias !44
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %244, i64 0, i32 0
  %246 = load i32, i32* %245, align 4, !noalias !44
  %247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %244, i64 0, i32 1, i64 0
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %246, i32* %248, align 8, !alias.scope !44
  %249 = icmp sgt i32 %246, 5
  br i1 %249, label %250, label %257

250:                                              ; preds = %242
  %251 = sext i32 %246 to i64
  %252 = shl nsw i64 %251, 2
  %253 = tail call i8* @_Znam(i64 %252) #9, !noalias !44
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %255 = bitcast i32** %254 to i8**
  store i8* %253, i8** %255, align 8, !alias.scope !44
  %256 = bitcast i8* %253 to i32*
  br label %262

257:                                              ; preds = %242
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %259 = bitcast %union.anon* %258 to i32*
  %260 = sext i32 %246 to i64
  %261 = shl nsw i64 %260, 2
  br label %262

262:                                              ; preds = %257, %250
  %263 = phi i64 [ %252, %250 ], [ %261, %257 ]
  %264 = phi i32* [ %256, %250 ], [ %259, %257 ]
  %265 = bitcast i32* %264 to i8*
  %266 = bitcast i32* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %266, i64 %263, i1 false) #8
  %267 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %268 = bitcast %union.TfLitePtrUnion* %267 to i8**
  %269 = load i8*, i8** %268, align 8
  br label %270

270:                                              ; preds = %240, %262
  %271 = phi i8* [ %269, %262 ], [ null, %240 ]
  %272 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #8
  %273 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %275, align 8, !alias.scope !47
  br label %304

276:                                              ; preds = %270
  %277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %278 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %277, align 8, !noalias !47
  %279 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 4, !noalias !47
  %281 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %278, i64 0, i32 1, i64 0
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %280, i32* %282, align 8, !alias.scope !47
  %283 = icmp sgt i32 %280, 5
  br i1 %283, label %284, label %291

284:                                              ; preds = %276
  %285 = sext i32 %280 to i64
  %286 = shl nsw i64 %285, 2
  %287 = tail call i8* @_Znam(i64 %286) #9, !noalias !47
  %288 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %289 = bitcast i32** %288 to i8**
  store i8* %287, i8** %289, align 8, !alias.scope !47
  %290 = bitcast i8* %287 to i32*
  br label %296

291:                                              ; preds = %276
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %293 = bitcast %union.anon* %292 to i32*
  %294 = sext i32 %280 to i64
  %295 = shl nsw i64 %294, 2
  br label %296

296:                                              ; preds = %291, %284
  %297 = phi i64 [ %286, %284 ], [ %295, %291 ]
  %298 = phi i32* [ %290, %284 ], [ %293, %291 ]
  %299 = bitcast i32* %298 to i8*
  %300 = bitcast i32* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 %297, i1 false) #8
  %301 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %302 = bitcast %union.TfLitePtrUnion* %301 to i8**
  %303 = load i8*, i8** %302, align 8
  br label %304

304:                                              ; preds = %274, %296
  %305 = phi i8* [ %303, %296 ], [ null, %274 ]
  call void @_ZN6tflite13optimized_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %271, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i8* %305)
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp sgt i32 %307, 5
  br i1 %308, label %309, label %315

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = bitcast i32* %311 to i8*
  call void @_ZdaPv(i8* %314) #9
  br label %315

315:                                              ; preds = %304, %309, %313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #8
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp sgt i32 %317, 5
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %321 = load i32*, i32** %320, align 8
  %322 = icmp eq i32* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = bitcast i32* %321 to i8*
  call void @_ZdaPv(i8* %324) #9
  br label %325

325:                                              ; preds = %315, %319, %323
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %238) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #8
  br label %514

326:                                              ; preds = %43
  %327 = bitcast %"struct.tflite::SpaceToDepthParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %327) #8
  %328 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %12, i64 0, i32 0
  store i32 -1431655766, i32* %328, align 4
  %329 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %331) #8
  %332 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %334, align 8, !alias.scope !50
  br label %362

335:                                              ; preds = %326
  %336 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %337 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %336, align 8, !noalias !50
  %338 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %337, i64 0, i32 0
  %339 = load i32, i32* %338, align 4, !noalias !50
  %340 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %337, i64 0, i32 1, i64 0
  %341 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %339, i32* %341, align 8, !alias.scope !50
  %342 = icmp sgt i32 %339, 5
  br i1 %342, label %343, label %350

343:                                              ; preds = %335
  %344 = sext i32 %339 to i64
  %345 = shl nsw i64 %344, 2
  %346 = tail call i8* @_Znam(i64 %345) #9, !noalias !50
  %347 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %348 = bitcast i32** %347 to i8**
  store i8* %346, i8** %348, align 8, !alias.scope !50
  %349 = bitcast i8* %346 to i32*
  br label %355

350:                                              ; preds = %335
  %351 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %352 = bitcast %union.anon* %351 to i32*
  %353 = sext i32 %339 to i64
  %354 = shl nsw i64 %353, 2
  br label %355

355:                                              ; preds = %350, %343
  %356 = phi i64 [ %345, %343 ], [ %354, %350 ]
  %357 = phi i32* [ %349, %343 ], [ %352, %350 ]
  %358 = bitcast i32* %357 to i8*
  %359 = bitcast i32* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %358, i8* align 4 %359, i64 %356, i1 false) #8
  %360 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1, i32 0
  %361 = load i32*, i32** %360, align 8
  br label %362

362:                                              ; preds = %333, %355
  %363 = phi i32* [ %361, %355 ], [ null, %333 ]
  %364 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %364) #8
  %365 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %367, align 8, !alias.scope !53
  br label %395

368:                                              ; preds = %362
  %369 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %370 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %369, align 8, !noalias !53
  %371 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 0
  %372 = load i32, i32* %371, align 4, !noalias !53
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %370, i64 0, i32 1, i64 0
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %372, i32* %374, align 8, !alias.scope !53
  %375 = icmp sgt i32 %372, 5
  br i1 %375, label %376, label %383

376:                                              ; preds = %368
  %377 = sext i32 %372 to i64
  %378 = shl nsw i64 %377, 2
  %379 = tail call i8* @_Znam(i64 %378) #9, !noalias !53
  %380 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %381 = bitcast i32** %380 to i8**
  store i8* %379, i8** %381, align 8, !alias.scope !53
  %382 = bitcast i8* %379 to i32*
  br label %388

383:                                              ; preds = %368
  %384 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %385 = bitcast %union.anon* %384 to i32*
  %386 = sext i32 %372 to i64
  %387 = shl nsw i64 %386, 2
  br label %388

388:                                              ; preds = %383, %376
  %389 = phi i64 [ %378, %376 ], [ %387, %383 ]
  %390 = phi i32* [ %382, %376 ], [ %385, %383 ]
  %391 = bitcast i32* %390 to i8*
  %392 = bitcast i32* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* align 4 %392, i64 %389, i1 false) #8
  %393 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1, i32 0
  %394 = load i32*, i32** %393, align 8
  br label %395

395:                                              ; preds = %366, %388
  %396 = phi i32* [ %394, %388 ], [ null, %366 ]
  call void @_ZN6tflite13optimized_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %363, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %396)
  %397 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = icmp sgt i32 %398, 5
  br i1 %399, label %400, label %406

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = icmp eq i32* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %400
  %405 = bitcast i32* %402 to i8*
  call void @_ZdaPv(i8* %405) #9
  br label %406

406:                                              ; preds = %395, %400, %404
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %364) #8
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %408 = load i32, i32* %407, align 8
  %409 = icmp sgt i32 %408, 5
  br i1 %409, label %410, label %416

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %412 = load i32*, i32** %411, align 8
  %413 = icmp eq i32* %412, null
  br i1 %413, label %416, label %414

414:                                              ; preds = %410
  %415 = bitcast i32* %412 to i8*
  call void @_ZdaPv(i8* %415) #9
  br label %416

416:                                              ; preds = %406, %410, %414
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %331) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %327) #8
  br label %514

417:                                              ; preds = %43
  %418 = bitcast %"struct.tflite::SpaceToDepthParams"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %418) #8
  %419 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %15, i64 0, i32 0
  store i32 -1431655766, i32* %419, align 4
  %420 = getelementptr inbounds %struct.TfLiteSpaceToDepthParams, %struct.TfLiteSpaceToDepthParams* %20, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  store i32 %421, i32* %419, align 4
  %422 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %422) #8
  %423 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %423, label %424, label %426

424:                                              ; preds = %417
  %425 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %425, align 8, !alias.scope !56
  br label %454

426:                                              ; preds = %417
  %427 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %428 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %427, align 8, !noalias !56
  %429 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %428, i64 0, i32 0
  %430 = load i32, i32* %429, align 4, !noalias !56
  %431 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %428, i64 0, i32 1, i64 0
  %432 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %430, i32* %432, align 8, !alias.scope !56
  %433 = icmp sgt i32 %430, 5
  br i1 %433, label %434, label %441

434:                                              ; preds = %426
  %435 = sext i32 %430 to i64
  %436 = shl nsw i64 %435, 2
  %437 = tail call i8* @_Znam(i64 %436) #9, !noalias !56
  %438 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %439 = bitcast i32** %438 to i8**
  store i8* %437, i8** %439, align 8, !alias.scope !56
  %440 = bitcast i8* %437 to i32*
  br label %446

441:                                              ; preds = %426
  %442 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %443 = bitcast %union.anon* %442 to i32*
  %444 = sext i32 %430 to i64
  %445 = shl nsw i64 %444, 2
  br label %446

446:                                              ; preds = %441, %434
  %447 = phi i64 [ %436, %434 ], [ %445, %441 ]
  %448 = phi i32* [ %440, %434 ], [ %443, %441 ]
  %449 = bitcast i32* %448 to i8*
  %450 = bitcast i32* %431 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %449, i8* align 4 %450, i64 %447, i1 false) #8
  %451 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 1
  %452 = bitcast %union.TfLitePtrUnion* %451 to i64**
  %453 = load i64*, i64** %452, align 8
  br label %454

454:                                              ; preds = %424, %446
  %455 = phi i64* [ %453, %446 ], [ null, %424 ]
  %456 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %456) #8
  %457 = icmp eq %struct.TfLiteTensor* %44, null
  br i1 %457, label %458, label %460

458:                                              ; preds = %454
  %459 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %459, align 8, !alias.scope !59
  br label %488

460:                                              ; preds = %454
  %461 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 2
  %462 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %461, align 8, !noalias !59
  %463 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %462, i64 0, i32 0
  %464 = load i32, i32* %463, align 4, !noalias !59
  %465 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %462, i64 0, i32 1, i64 0
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %464, i32* %466, align 8, !alias.scope !59
  %467 = icmp sgt i32 %464, 5
  br i1 %467, label %468, label %475

468:                                              ; preds = %460
  %469 = sext i32 %464 to i64
  %470 = shl nsw i64 %469, 2
  %471 = tail call i8* @_Znam(i64 %470) #9, !noalias !59
  %472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %473 = bitcast i32** %472 to i8**
  store i8* %471, i8** %473, align 8, !alias.scope !59
  %474 = bitcast i8* %471 to i32*
  br label %480

475:                                              ; preds = %460
  %476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %477 = bitcast %union.anon* %476 to i32*
  %478 = sext i32 %464 to i64
  %479 = shl nsw i64 %478, 2
  br label %480

480:                                              ; preds = %475, %468
  %481 = phi i64 [ %470, %468 ], [ %479, %475 ]
  %482 = phi i32* [ %474, %468 ], [ %477, %475 ]
  %483 = bitcast i32* %482 to i8*
  %484 = bitcast i32* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %483, i8* align 4 %484, i64 %481, i1 false) #8
  %485 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 1
  %486 = bitcast %union.TfLitePtrUnion* %485 to i64**
  %487 = load i64*, i64** %486, align 8
  br label %488

488:                                              ; preds = %458, %480
  %489 = phi i64* [ %487, %480 ], [ null, %458 ]
  call void @_ZN6tflite13optimized_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* nonnull dereferenceable(4) %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %455, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i64* %489)
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp sgt i32 %491, 5
  br i1 %492, label %493, label %499

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = icmp eq i32* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %493
  %498 = bitcast i32* %495 to i8*
  call void @_ZdaPv(i8* %498) #9
  br label %499

499:                                              ; preds = %488, %493, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %456) #8
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp sgt i32 %501, 5
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  %506 = icmp eq i32* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast i32* %505 to i8*
  call void @_ZdaPv(i8* %508) #9
  br label %509

509:                                              ; preds = %499, %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %422) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %418) #8
  br label %514

510:                                              ; preds = %43
  %511 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %512 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %511, align 8
  %513 = tail call i8* @TfLiteTypeGetName(i32 %46) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %512(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i8* %513) #8
  br label %514

514:                                              ; preds = %139, %232, %325, %416, %509, %510
  %515 = phi i32 [ 1, %510 ], [ 0, %509 ], [ 0, %416 ], [ 0, %325 ], [ 0, %232 ], [ 0, %139 ]
  ret i32 %515
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_SPACE_TO_DEPTHEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin35Register_SPACE_TO_DEPTH_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !62
  %12 = load i32, i32* %8, align 8, !noalias !62
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !62
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !62
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !62
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !62
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !62
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !62
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !62
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !62
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !62
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !62
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !62
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !62
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !62
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !62
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !62
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !62
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !62
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !62
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !65

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !62
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !62
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !67

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !62
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !69

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !62
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !71
  %116 = load i32, i32* %9, align 8, !noalias !71
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !71
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !71
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %121, label %123, label %203

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %122 to [5 x i32]*
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %123
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !71
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !71
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !71
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !71
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !71
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !71
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !71
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !71
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !71
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !71
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !71
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !71
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !71
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !71
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !71
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !71
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !74

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !71
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !71
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !75

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %123
  %197 = phi i64 [ 0, %123 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !71
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !76

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !71
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %11, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = load i32*, i32** %100, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds i32, i32* %220, i64 2
  %223 = getelementptr inbounds i32, i32* %220, i64 1
  br label %231

224:                                              ; preds = %203
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = bitcast %union.anon* %18 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  br label %231

231:                                              ; preds = %219, %224
  %232 = phi i32* [ %223, %219 ], [ %230, %224 ]
  %233 = phi i32* [ %221, %219 ], [ %226, %224 ]
  %234 = phi i32* [ %222, %219 ], [ %228, %224 ]
  %235 = phi i32* [ %220, %219 ], [ %101, %224 ]
  %236 = load i32, i32* %234, align 4
  %237 = load i32, i32* %233, align 4
  %238 = load i32, i32* %232, align 4
  %239 = load i32, i32* %235, align 4
  %240 = load i32, i32* %115, align 8
  %241 = icmp sgt i32 %240, 5
  %242 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %239, 0
  br i1 %244, label %245, label %297

245:                                              ; preds = %231
  %246 = icmp sgt i32 %238, 0
  %247 = icmp sgt i32 %236, 0
  %248 = icmp sgt i32 %237, 0
  %249 = getelementptr inbounds i32, i32* %101, i64 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %252 = bitcast [16 x i8]* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %204, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %260 = bitcast [16 x i8]* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %263 = bitcast i8* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %256 to i64
  %266 = sext i32 %253 to i64
  %267 = sext i32 %250 to i64
  %268 = zext i32 %239 to i64
  %269 = zext i32 %238 to i64
  %270 = zext i32 %236 to i64
  %271 = zext i32 %237 to i64
  %272 = getelementptr float, float* %4, i64 %271
  %273 = mul nsw i64 %267, %266
  %274 = mul i64 %273, %265
  %275 = mul nsw i64 %266, %265
  %276 = and i64 %271, 4294967288
  %277 = add nsw i64 %276, -8
  %278 = lshr exact i64 %277, 3
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i32 %237, 8
  %281 = and i64 %271, 4294967288
  %282 = and i64 %279, 1
  %283 = icmp eq i64 %277, 0
  %284 = sub nuw nsw i64 %279, %282
  %285 = icmp eq i64 %282, 0
  %286 = icmp eq i64 %281, %271
  %287 = and i64 %271, 3
  %288 = icmp eq i64 %287, 0
  br label %289

289:                                              ; preds = %321, %245
  %290 = phi i64 [ 0, %245 ], [ %322, %321 ]
  %291 = mul i64 %274, %290
  %292 = add i64 %291, %271
  br i1 %246, label %293, label %321

293:                                              ; preds = %289
  %294 = mul nsw i64 %290, %267
  %295 = trunc i64 %290 to i32
  %296 = mul i32 %258, %295
  br label %312

297:                                              ; preds = %321, %231
  br i1 %241, label %298, label %304

298:                                              ; preds = %297
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %300 = load i32*, i32** %299, align 8
  %301 = icmp eq i32* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %298
  %303 = bitcast i32* %300 to i8*
  tail call void @_ZdaPv(i8* %303) #9
  br label %304

304:                                              ; preds = %297, %298, %302
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %218, label %305, label %311

305:                                              ; preds = %304
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %307 = load i32*, i32** %306, align 8
  %308 = icmp eq i32* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  %310 = bitcast i32* %307 to i8*
  tail call void @_ZdaPv(i8* %310) #9
  br label %311

311:                                              ; preds = %304, %305, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

312:                                              ; preds = %427, %293
  %313 = phi i64 [ 0, %293 ], [ %428, %427 ]
  %314 = mul i64 %275, %313
  %315 = add i64 %291, %314
  %316 = add i64 %292, %314
  br i1 %247, label %317, label %427

317:                                              ; preds = %312
  %318 = add nsw i64 %294, %313
  %319 = mul nsw i64 %318, %266
  %320 = trunc i64 %313 to i32
  br label %324

321:                                              ; preds = %427, %289
  %322 = add nuw nsw i64 %290, 1
  %323 = icmp eq i64 %322, %268
  br i1 %323, label %297, label %289

324:                                              ; preds = %430, %317
  %325 = phi i64 [ 0, %317 ], [ %431, %430 ]
  %326 = mul i64 %325, %265
  %327 = add i64 %315, %326
  %328 = getelementptr float, float* %2, i64 %327
  %329 = add i64 %316, %326
  %330 = getelementptr float, float* %2, i64 %329
  br i1 %248, label %331, label %430

331:                                              ; preds = %324
  %332 = srem i32 %320, %243
  %333 = mul nsw i32 %332, %243
  %334 = trunc i64 %325 to i32
  %335 = srem i32 %334, %243
  %336 = add nsw i32 %333, %335
  %337 = mul nsw i32 %336, %237
  %338 = sdiv i32 %334, %243
  %339 = sdiv i32 %320, %243
  %340 = add nsw i64 %319, %325
  %341 = mul nsw i64 %340, %265
  %342 = add nsw i32 %296, %339
  %343 = mul nsw i32 %342, %261
  %344 = add nsw i32 %343, %338
  %345 = mul nsw i32 %344, %264
  %346 = sext i32 %337 to i64
  %347 = sext i32 %345 to i64
  br i1 %280, label %348, label %369

348:                                              ; preds = %426, %369, %331
  %349 = phi i64 [ 0, %369 ], [ 0, %331 ], [ %281, %426 ]
  %350 = xor i64 %349, -1
  %351 = add nsw i64 %350, %271
  br i1 %288, label %366, label %352

352:                                              ; preds = %348, %352
  %353 = phi i64 [ %363, %352 ], [ %349, %348 ]
  %354 = phi i64 [ %364, %352 ], [ %287, %348 ]
  %355 = add nsw i64 %353, %346
  %356 = add nsw i64 %341, %353
  %357 = add nsw i64 %355, %347
  %358 = getelementptr inbounds float, float* %2, i64 %356
  %359 = bitcast float* %358 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds float, float* %4, i64 %357
  %362 = bitcast float* %361 to i32*
  store i32 %360, i32* %362, align 4
  %363 = add nuw nsw i64 %353, 1
  %364 = add i64 %354, -1
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %352, !llvm.loop !77

366:                                              ; preds = %352, %348
  %367 = phi i64 [ %349, %348 ], [ %363, %352 ]
  %368 = icmp ult i64 %351, 3
  br i1 %368, label %430, label %433

369:                                              ; preds = %331
  %370 = add nsw i64 %346, %347
  %371 = getelementptr float, float* %4, i64 %370
  %372 = getelementptr float, float* %272, i64 %370
  %373 = icmp ult float* %371, %330
  %374 = icmp ult float* %328, %372
  %375 = and i1 %373, %374
  br i1 %375, label %348, label %376

376:                                              ; preds = %369
  br i1 %283, label %410, label %377

377:                                              ; preds = %376, %377
  %378 = phi i64 [ %407, %377 ], [ 0, %376 ]
  %379 = phi i64 [ %408, %377 ], [ %284, %376 ]
  %380 = add nsw i64 %378, %346
  %381 = add nsw i64 %341, %378
  %382 = add nsw i64 %380, %347
  %383 = getelementptr inbounds float, float* %2, i64 %381
  %384 = bitcast float* %383 to <4 x i32>*
  %385 = load <4 x i32>, <4 x i32>* %384, align 4, !alias.scope !78
  %386 = getelementptr inbounds float, float* %383, i64 4
  %387 = bitcast float* %386 to <4 x i32>*
  %388 = load <4 x i32>, <4 x i32>* %387, align 4, !alias.scope !78
  %389 = getelementptr inbounds float, float* %4, i64 %382
  %390 = bitcast float* %389 to <4 x i32>*
  store <4 x i32> %385, <4 x i32>* %390, align 4, !alias.scope !81, !noalias !78
  %391 = getelementptr inbounds float, float* %389, i64 4
  %392 = bitcast float* %391 to <4 x i32>*
  store <4 x i32> %388, <4 x i32>* %392, align 4, !alias.scope !81, !noalias !78
  %393 = or i64 %378, 8
  %394 = add nsw i64 %393, %346
  %395 = add nsw i64 %341, %393
  %396 = add nsw i64 %394, %347
  %397 = getelementptr inbounds float, float* %2, i64 %395
  %398 = bitcast float* %397 to <4 x i32>*
  %399 = load <4 x i32>, <4 x i32>* %398, align 4, !alias.scope !78
  %400 = getelementptr inbounds float, float* %397, i64 4
  %401 = bitcast float* %400 to <4 x i32>*
  %402 = load <4 x i32>, <4 x i32>* %401, align 4, !alias.scope !78
  %403 = getelementptr inbounds float, float* %4, i64 %396
  %404 = bitcast float* %403 to <4 x i32>*
  store <4 x i32> %399, <4 x i32>* %404, align 4, !alias.scope !81, !noalias !78
  %405 = getelementptr inbounds float, float* %403, i64 4
  %406 = bitcast float* %405 to <4 x i32>*
  store <4 x i32> %402, <4 x i32>* %406, align 4, !alias.scope !81, !noalias !78
  %407 = add i64 %378, 16
  %408 = add i64 %379, -2
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %377, !llvm.loop !83

410:                                              ; preds = %377, %376
  %411 = phi i64 [ 0, %376 ], [ %407, %377 ]
  br i1 %285, label %426, label %412

412:                                              ; preds = %410
  %413 = add nsw i64 %411, %346
  %414 = add nsw i64 %341, %411
  %415 = add nsw i64 %413, %347
  %416 = getelementptr inbounds float, float* %2, i64 %414
  %417 = bitcast float* %416 to <4 x i32>*
  %418 = load <4 x i32>, <4 x i32>* %417, align 4, !alias.scope !78
  %419 = getelementptr inbounds float, float* %416, i64 4
  %420 = bitcast float* %419 to <4 x i32>*
  %421 = load <4 x i32>, <4 x i32>* %420, align 4, !alias.scope !78
  %422 = getelementptr inbounds float, float* %4, i64 %415
  %423 = bitcast float* %422 to <4 x i32>*
  store <4 x i32> %418, <4 x i32>* %423, align 4, !alias.scope !81, !noalias !78
  %424 = getelementptr inbounds float, float* %422, i64 4
  %425 = bitcast float* %424 to <4 x i32>*
  store <4 x i32> %421, <4 x i32>* %425, align 4, !alias.scope !81, !noalias !78
  br label %426

426:                                              ; preds = %410, %412
  br i1 %286, label %430, label %348

427:                                              ; preds = %430, %312
  %428 = add nuw nsw i64 %313, 1
  %429 = icmp eq i64 %428, %269
  br i1 %429, label %321, label %312

430:                                              ; preds = %366, %433, %426, %324
  %431 = add nuw nsw i64 %325, 1
  %432 = icmp eq i64 %431, %270
  br i1 %432, label %427, label %324

433:                                              ; preds = %366, %433
  %434 = phi i64 [ %470, %433 ], [ %367, %366 ]
  %435 = add nsw i64 %434, %346
  %436 = add nsw i64 %341, %434
  %437 = add nsw i64 %435, %347
  %438 = getelementptr inbounds float, float* %2, i64 %436
  %439 = bitcast float* %438 to i32*
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds float, float* %4, i64 %437
  %442 = bitcast float* %441 to i32*
  store i32 %440, i32* %442, align 4
  %443 = add nuw nsw i64 %434, 1
  %444 = add nsw i64 %443, %346
  %445 = add nsw i64 %341, %443
  %446 = add nsw i64 %444, %347
  %447 = getelementptr inbounds float, float* %2, i64 %445
  %448 = bitcast float* %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds float, float* %4, i64 %446
  %451 = bitcast float* %450 to i32*
  store i32 %449, i32* %451, align 4
  %452 = add nuw nsw i64 %434, 2
  %453 = add nsw i64 %452, %346
  %454 = add nsw i64 %341, %452
  %455 = add nsw i64 %453, %347
  %456 = getelementptr inbounds float, float* %2, i64 %454
  %457 = bitcast float* %456 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = getelementptr inbounds float, float* %4, i64 %455
  %460 = bitcast float* %459 to i32*
  store i32 %458, i32* %460, align 4
  %461 = add nuw nsw i64 %434, 3
  %462 = add nsw i64 %461, %346
  %463 = add nsw i64 %341, %461
  %464 = add nsw i64 %462, %347
  %465 = getelementptr inbounds float, float* %2, i64 %463
  %466 = bitcast float* %465 to i32*
  %467 = load i32, i32* %466, align 4
  %468 = getelementptr inbounds float, float* %4, i64 %464
  %469 = bitcast float* %468 to i32*
  store i32 %467, i32* %469, align 4
  %470 = add nuw nsw i64 %434, 4
  %471 = icmp eq i64 %470, %271
  br i1 %471, label %430, label %433, !llvm.loop !84
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !85
  %12 = load i32, i32* %8, align 8, !noalias !85
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !85
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !85
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !85
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !85
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !85
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !85
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !85
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !85
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !85
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !85
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !85
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !85
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !85
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !85
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !85
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !85
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !85
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !85
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !88

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !85
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !85
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !89

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !85
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !90

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !85
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !91
  %116 = load i32, i32* %9, align 8, !noalias !91
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !91
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !91
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %121, label %123, label %203

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %122 to [5 x i32]*
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %123
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !91
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !91
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !91
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !91
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !91
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !91
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !91
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !91
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !91
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !91
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !91
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !91
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !91
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !91
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !91
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !91
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !94

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !91
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !91
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !95

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %123
  %197 = phi i64 [ 0, %123 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !91
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !96

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !91
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %11, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = load i32*, i32** %100, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds i32, i32* %220, i64 2
  %223 = getelementptr inbounds i32, i32* %220, i64 1
  br label %231

224:                                              ; preds = %203
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = bitcast %union.anon* %18 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  br label %231

231:                                              ; preds = %219, %224
  %232 = phi i32* [ %223, %219 ], [ %230, %224 ]
  %233 = phi i32* [ %221, %219 ], [ %226, %224 ]
  %234 = phi i32* [ %222, %219 ], [ %228, %224 ]
  %235 = phi i32* [ %220, %219 ], [ %101, %224 ]
  %236 = load i32, i32* %234, align 4
  %237 = load i32, i32* %233, align 4
  %238 = load i32, i32* %232, align 4
  %239 = load i32, i32* %235, align 4
  %240 = load i32, i32* %115, align 8
  %241 = icmp sgt i32 %240, 5
  %242 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %239, 0
  br i1 %244, label %245, label %298

245:                                              ; preds = %231
  %246 = icmp sgt i32 %238, 0
  %247 = icmp sgt i32 %236, 0
  %248 = icmp sgt i32 %237, 0
  %249 = getelementptr inbounds i32, i32* %101, i64 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %252 = bitcast [16 x i8]* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %204, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %260 = bitcast [16 x i8]* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %263 = bitcast i8* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %256 to i64
  %266 = sext i32 %253 to i64
  %267 = sext i32 %250 to i64
  %268 = zext i32 %239 to i64
  %269 = zext i32 %238 to i64
  %270 = zext i32 %236 to i64
  %271 = zext i32 %237 to i64
  %272 = getelementptr i8, i8* %4, i64 %271
  %273 = mul nsw i64 %267, %266
  %274 = mul i64 %273, %265
  %275 = mul nsw i64 %266, %265
  %276 = and i64 %271, 4294967264
  %277 = add nsw i64 %276, -32
  %278 = lshr exact i64 %277, 5
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i32 %237, 32
  %281 = and i64 %271, 4294967264
  %282 = and i64 %279, 1
  %283 = icmp eq i64 %277, 0
  %284 = sub nuw nsw i64 %279, %282
  %285 = icmp eq i64 %282, 0
  %286 = icmp eq i64 %281, %271
  %287 = and i64 %271, 1
  %288 = icmp eq i64 %287, 0
  %289 = sub nsw i64 0, %271
  br label %290

290:                                              ; preds = %322, %245
  %291 = phi i64 [ 0, %245 ], [ %323, %322 ]
  %292 = mul i64 %274, %291
  %293 = add i64 %292, %271
  br i1 %246, label %294, label %322

294:                                              ; preds = %290
  %295 = mul nsw i64 %291, %267
  %296 = trunc i64 %291 to i32
  %297 = mul i32 %258, %296
  br label %313

298:                                              ; preds = %322, %231
  br i1 %241, label %299, label %305

299:                                              ; preds = %298
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  tail call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %298, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %218, label %306, label %312

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  tail call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %305, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

313:                                              ; preds = %421, %294
  %314 = phi i64 [ 0, %294 ], [ %422, %421 ]
  %315 = mul i64 %275, %314
  %316 = add i64 %292, %315
  %317 = add i64 %293, %315
  br i1 %247, label %318, label %421

318:                                              ; preds = %313
  %319 = add nsw i64 %295, %314
  %320 = mul nsw i64 %319, %266
  %321 = trunc i64 %314 to i32
  br label %325

322:                                              ; preds = %421, %290
  %323 = add nuw nsw i64 %291, 1
  %324 = icmp eq i64 %323, %268
  br i1 %324, label %298, label %290

325:                                              ; preds = %424, %318
  %326 = phi i64 [ 0, %318 ], [ %425, %424 ]
  %327 = mul i64 %326, %265
  %328 = add i64 %316, %327
  %329 = getelementptr i8, i8* %2, i64 %328
  %330 = add i64 %317, %327
  %331 = getelementptr i8, i8* %2, i64 %330
  br i1 %248, label %332, label %424

332:                                              ; preds = %325
  %333 = srem i32 %321, %243
  %334 = mul nsw i32 %333, %243
  %335 = trunc i64 %326 to i32
  %336 = srem i32 %335, %243
  %337 = add nsw i32 %334, %336
  %338 = mul nsw i32 %337, %237
  %339 = sdiv i32 %335, %243
  %340 = sdiv i32 %321, %243
  %341 = add nsw i64 %320, %326
  %342 = mul nsw i64 %341, %265
  %343 = add nsw i32 %297, %340
  %344 = mul nsw i32 %343, %261
  %345 = add nsw i32 %344, %339
  %346 = mul nsw i32 %345, %264
  %347 = sext i32 %338 to i64
  %348 = sext i32 %346 to i64
  br i1 %280, label %349, label %363

349:                                              ; preds = %420, %363, %332
  %350 = phi i64 [ 0, %363 ], [ 0, %332 ], [ %281, %420 ]
  %351 = xor i64 %350, -1
  br i1 %288, label %360, label %352

352:                                              ; preds = %349
  %353 = add nsw i64 %350, %347
  %354 = add nsw i64 %342, %350
  %355 = add nsw i64 %353, %348
  %356 = getelementptr inbounds i8, i8* %2, i64 %354
  %357 = load i8, i8* %356, align 1
  %358 = getelementptr inbounds i8, i8* %4, i64 %355
  store i8 %357, i8* %358, align 1
  %359 = or i64 %350, 1
  br label %360

360:                                              ; preds = %352, %349
  %361 = phi i64 [ %359, %352 ], [ %350, %349 ]
  %362 = icmp eq i64 %351, %289
  br i1 %362, label %424, label %427

363:                                              ; preds = %332
  %364 = add nsw i64 %347, %348
  %365 = getelementptr i8, i8* %4, i64 %364
  %366 = getelementptr i8, i8* %272, i64 %364
  %367 = icmp ult i8* %365, %331
  %368 = icmp ult i8* %329, %366
  %369 = and i1 %367, %368
  br i1 %369, label %349, label %370

370:                                              ; preds = %363
  br i1 %283, label %404, label %371

371:                                              ; preds = %370, %371
  %372 = phi i64 [ %401, %371 ], [ 0, %370 ]
  %373 = phi i64 [ %402, %371 ], [ %284, %370 ]
  %374 = add nsw i64 %372, %347
  %375 = add nsw i64 %342, %372
  %376 = add nsw i64 %374, %348
  %377 = getelementptr inbounds i8, i8* %2, i64 %375
  %378 = bitcast i8* %377 to <16 x i8>*
  %379 = load <16 x i8>, <16 x i8>* %378, align 1, !alias.scope !97
  %380 = getelementptr inbounds i8, i8* %377, i64 16
  %381 = bitcast i8* %380 to <16 x i8>*
  %382 = load <16 x i8>, <16 x i8>* %381, align 1, !alias.scope !97
  %383 = getelementptr inbounds i8, i8* %4, i64 %376
  %384 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %379, <16 x i8>* %384, align 1, !alias.scope !100, !noalias !97
  %385 = getelementptr inbounds i8, i8* %383, i64 16
  %386 = bitcast i8* %385 to <16 x i8>*
  store <16 x i8> %382, <16 x i8>* %386, align 1, !alias.scope !100, !noalias !97
  %387 = or i64 %372, 32
  %388 = add nsw i64 %387, %347
  %389 = add nsw i64 %342, %387
  %390 = add nsw i64 %388, %348
  %391 = getelementptr inbounds i8, i8* %2, i64 %389
  %392 = bitcast i8* %391 to <16 x i8>*
  %393 = load <16 x i8>, <16 x i8>* %392, align 1, !alias.scope !97
  %394 = getelementptr inbounds i8, i8* %391, i64 16
  %395 = bitcast i8* %394 to <16 x i8>*
  %396 = load <16 x i8>, <16 x i8>* %395, align 1, !alias.scope !97
  %397 = getelementptr inbounds i8, i8* %4, i64 %390
  %398 = bitcast i8* %397 to <16 x i8>*
  store <16 x i8> %393, <16 x i8>* %398, align 1, !alias.scope !100, !noalias !97
  %399 = getelementptr inbounds i8, i8* %397, i64 16
  %400 = bitcast i8* %399 to <16 x i8>*
  store <16 x i8> %396, <16 x i8>* %400, align 1, !alias.scope !100, !noalias !97
  %401 = add i64 %372, 64
  %402 = add i64 %373, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %371, !llvm.loop !102

404:                                              ; preds = %371, %370
  %405 = phi i64 [ 0, %370 ], [ %401, %371 ]
  br i1 %285, label %420, label %406

406:                                              ; preds = %404
  %407 = add nsw i64 %405, %347
  %408 = add nsw i64 %342, %405
  %409 = add nsw i64 %407, %348
  %410 = getelementptr inbounds i8, i8* %2, i64 %408
  %411 = bitcast i8* %410 to <16 x i8>*
  %412 = load <16 x i8>, <16 x i8>* %411, align 1, !alias.scope !97
  %413 = getelementptr inbounds i8, i8* %410, i64 16
  %414 = bitcast i8* %413 to <16 x i8>*
  %415 = load <16 x i8>, <16 x i8>* %414, align 1, !alias.scope !97
  %416 = getelementptr inbounds i8, i8* %4, i64 %409
  %417 = bitcast i8* %416 to <16 x i8>*
  store <16 x i8> %412, <16 x i8>* %417, align 1, !alias.scope !100, !noalias !97
  %418 = getelementptr inbounds i8, i8* %416, i64 16
  %419 = bitcast i8* %418 to <16 x i8>*
  store <16 x i8> %415, <16 x i8>* %419, align 1, !alias.scope !100, !noalias !97
  br label %420

420:                                              ; preds = %404, %406
  br i1 %286, label %424, label %349

421:                                              ; preds = %424, %313
  %422 = add nuw nsw i64 %314, 1
  %423 = icmp eq i64 %422, %269
  br i1 %423, label %322, label %313

424:                                              ; preds = %360, %427, %420, %325
  %425 = add nuw nsw i64 %326, 1
  %426 = icmp eq i64 %425, %270
  br i1 %426, label %421, label %325

427:                                              ; preds = %360, %427
  %428 = phi i64 [ %442, %427 ], [ %361, %360 ]
  %429 = add nsw i64 %428, %347
  %430 = add nsw i64 %342, %428
  %431 = add nsw i64 %429, %348
  %432 = getelementptr inbounds i8, i8* %2, i64 %430
  %433 = load i8, i8* %432, align 1
  %434 = getelementptr inbounds i8, i8* %4, i64 %431
  store i8 %433, i8* %434, align 1
  %435 = add nuw nsw i64 %428, 1
  %436 = add nsw i64 %435, %347
  %437 = add nsw i64 %342, %435
  %438 = add nsw i64 %436, %348
  %439 = getelementptr inbounds i8, i8* %2, i64 %437
  %440 = load i8, i8* %439, align 1
  %441 = getelementptr inbounds i8, i8* %4, i64 %438
  store i8 %440, i8* %441, align 1
  %442 = add nuw nsw i64 %428, 2
  %443 = icmp eq i64 %442, %271
  br i1 %443, label %424, label %427, !llvm.loop !103
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !104
  %12 = load i32, i32* %8, align 8, !noalias !104
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !104
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !104
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !104
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !104
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !104
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !104
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !104
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !104
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !104
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !104
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !104
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !104
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !104
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !104
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !104
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !104
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !104
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !104
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !107

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !104
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !104
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !108

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !104
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !109

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !104
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !110
  %116 = load i32, i32* %9, align 8, !noalias !110
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !110
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !110
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %121, label %123, label %203

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %122 to [5 x i32]*
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %123
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !110
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !110
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !110
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !110
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !110
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !110
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !110
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !110
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !110
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !110
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !110
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !110
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !110
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !110
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !110
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !110
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !113

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !110
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !110
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !114

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %123
  %197 = phi i64 [ 0, %123 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !110
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !115

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !110
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %11, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = load i32*, i32** %100, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds i32, i32* %220, i64 2
  %223 = getelementptr inbounds i32, i32* %220, i64 1
  br label %231

224:                                              ; preds = %203
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = bitcast %union.anon* %18 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  br label %231

231:                                              ; preds = %219, %224
  %232 = phi i32* [ %223, %219 ], [ %230, %224 ]
  %233 = phi i32* [ %221, %219 ], [ %226, %224 ]
  %234 = phi i32* [ %222, %219 ], [ %228, %224 ]
  %235 = phi i32* [ %220, %219 ], [ %101, %224 ]
  %236 = load i32, i32* %234, align 4
  %237 = load i32, i32* %233, align 4
  %238 = load i32, i32* %232, align 4
  %239 = load i32, i32* %235, align 4
  %240 = load i32, i32* %115, align 8
  %241 = icmp sgt i32 %240, 5
  %242 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %239, 0
  br i1 %244, label %245, label %298

245:                                              ; preds = %231
  %246 = icmp sgt i32 %238, 0
  %247 = icmp sgt i32 %236, 0
  %248 = icmp sgt i32 %237, 0
  %249 = getelementptr inbounds i32, i32* %101, i64 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %252 = bitcast [16 x i8]* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %204, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %260 = bitcast [16 x i8]* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %263 = bitcast i8* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %256 to i64
  %266 = sext i32 %253 to i64
  %267 = sext i32 %250 to i64
  %268 = zext i32 %239 to i64
  %269 = zext i32 %238 to i64
  %270 = zext i32 %236 to i64
  %271 = zext i32 %237 to i64
  %272 = getelementptr i8, i8* %4, i64 %271
  %273 = mul nsw i64 %267, %266
  %274 = mul i64 %273, %265
  %275 = mul nsw i64 %266, %265
  %276 = and i64 %271, 4294967264
  %277 = add nsw i64 %276, -32
  %278 = lshr exact i64 %277, 5
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i32 %237, 32
  %281 = and i64 %271, 4294967264
  %282 = and i64 %279, 1
  %283 = icmp eq i64 %277, 0
  %284 = sub nuw nsw i64 %279, %282
  %285 = icmp eq i64 %282, 0
  %286 = icmp eq i64 %281, %271
  %287 = and i64 %271, 1
  %288 = icmp eq i64 %287, 0
  %289 = sub nsw i64 0, %271
  br label %290

290:                                              ; preds = %322, %245
  %291 = phi i64 [ 0, %245 ], [ %323, %322 ]
  %292 = mul i64 %274, %291
  %293 = add i64 %292, %271
  br i1 %246, label %294, label %322

294:                                              ; preds = %290
  %295 = mul nsw i64 %291, %267
  %296 = trunc i64 %291 to i32
  %297 = mul i32 %258, %296
  br label %313

298:                                              ; preds = %322, %231
  br i1 %241, label %299, label %305

299:                                              ; preds = %298
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  tail call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %298, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %218, label %306, label %312

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  tail call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %305, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

313:                                              ; preds = %421, %294
  %314 = phi i64 [ 0, %294 ], [ %422, %421 ]
  %315 = mul i64 %275, %314
  %316 = add i64 %292, %315
  %317 = add i64 %293, %315
  br i1 %247, label %318, label %421

318:                                              ; preds = %313
  %319 = add nsw i64 %295, %314
  %320 = mul nsw i64 %319, %266
  %321 = trunc i64 %314 to i32
  br label %325

322:                                              ; preds = %421, %290
  %323 = add nuw nsw i64 %291, 1
  %324 = icmp eq i64 %323, %268
  br i1 %324, label %298, label %290

325:                                              ; preds = %424, %318
  %326 = phi i64 [ 0, %318 ], [ %425, %424 ]
  %327 = mul i64 %326, %265
  %328 = add i64 %316, %327
  %329 = getelementptr i8, i8* %2, i64 %328
  %330 = add i64 %317, %327
  %331 = getelementptr i8, i8* %2, i64 %330
  br i1 %248, label %332, label %424

332:                                              ; preds = %325
  %333 = srem i32 %321, %243
  %334 = mul nsw i32 %333, %243
  %335 = trunc i64 %326 to i32
  %336 = srem i32 %335, %243
  %337 = add nsw i32 %334, %336
  %338 = mul nsw i32 %337, %237
  %339 = sdiv i32 %335, %243
  %340 = sdiv i32 %321, %243
  %341 = add nsw i64 %320, %326
  %342 = mul nsw i64 %341, %265
  %343 = add nsw i32 %297, %340
  %344 = mul nsw i32 %343, %261
  %345 = add nsw i32 %344, %339
  %346 = mul nsw i32 %345, %264
  %347 = sext i32 %338 to i64
  %348 = sext i32 %346 to i64
  br i1 %280, label %349, label %363

349:                                              ; preds = %420, %363, %332
  %350 = phi i64 [ 0, %363 ], [ 0, %332 ], [ %281, %420 ]
  %351 = xor i64 %350, -1
  br i1 %288, label %360, label %352

352:                                              ; preds = %349
  %353 = add nsw i64 %350, %347
  %354 = add nsw i64 %342, %350
  %355 = add nsw i64 %353, %348
  %356 = getelementptr inbounds i8, i8* %2, i64 %354
  %357 = load i8, i8* %356, align 1
  %358 = getelementptr inbounds i8, i8* %4, i64 %355
  store i8 %357, i8* %358, align 1
  %359 = or i64 %350, 1
  br label %360

360:                                              ; preds = %352, %349
  %361 = phi i64 [ %359, %352 ], [ %350, %349 ]
  %362 = icmp eq i64 %351, %289
  br i1 %362, label %424, label %427

363:                                              ; preds = %332
  %364 = add nsw i64 %347, %348
  %365 = getelementptr i8, i8* %4, i64 %364
  %366 = getelementptr i8, i8* %272, i64 %364
  %367 = icmp ult i8* %365, %331
  %368 = icmp ult i8* %329, %366
  %369 = and i1 %367, %368
  br i1 %369, label %349, label %370

370:                                              ; preds = %363
  br i1 %283, label %404, label %371

371:                                              ; preds = %370, %371
  %372 = phi i64 [ %401, %371 ], [ 0, %370 ]
  %373 = phi i64 [ %402, %371 ], [ %284, %370 ]
  %374 = add nsw i64 %372, %347
  %375 = add nsw i64 %342, %372
  %376 = add nsw i64 %374, %348
  %377 = getelementptr inbounds i8, i8* %2, i64 %375
  %378 = bitcast i8* %377 to <16 x i8>*
  %379 = load <16 x i8>, <16 x i8>* %378, align 1, !alias.scope !116
  %380 = getelementptr inbounds i8, i8* %377, i64 16
  %381 = bitcast i8* %380 to <16 x i8>*
  %382 = load <16 x i8>, <16 x i8>* %381, align 1, !alias.scope !116
  %383 = getelementptr inbounds i8, i8* %4, i64 %376
  %384 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %379, <16 x i8>* %384, align 1, !alias.scope !119, !noalias !116
  %385 = getelementptr inbounds i8, i8* %383, i64 16
  %386 = bitcast i8* %385 to <16 x i8>*
  store <16 x i8> %382, <16 x i8>* %386, align 1, !alias.scope !119, !noalias !116
  %387 = or i64 %372, 32
  %388 = add nsw i64 %387, %347
  %389 = add nsw i64 %342, %387
  %390 = add nsw i64 %388, %348
  %391 = getelementptr inbounds i8, i8* %2, i64 %389
  %392 = bitcast i8* %391 to <16 x i8>*
  %393 = load <16 x i8>, <16 x i8>* %392, align 1, !alias.scope !116
  %394 = getelementptr inbounds i8, i8* %391, i64 16
  %395 = bitcast i8* %394 to <16 x i8>*
  %396 = load <16 x i8>, <16 x i8>* %395, align 1, !alias.scope !116
  %397 = getelementptr inbounds i8, i8* %4, i64 %390
  %398 = bitcast i8* %397 to <16 x i8>*
  store <16 x i8> %393, <16 x i8>* %398, align 1, !alias.scope !119, !noalias !116
  %399 = getelementptr inbounds i8, i8* %397, i64 16
  %400 = bitcast i8* %399 to <16 x i8>*
  store <16 x i8> %396, <16 x i8>* %400, align 1, !alias.scope !119, !noalias !116
  %401 = add i64 %372, 64
  %402 = add i64 %373, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %371, !llvm.loop !121

404:                                              ; preds = %371, %370
  %405 = phi i64 [ 0, %370 ], [ %401, %371 ]
  br i1 %285, label %420, label %406

406:                                              ; preds = %404
  %407 = add nsw i64 %405, %347
  %408 = add nsw i64 %342, %405
  %409 = add nsw i64 %407, %348
  %410 = getelementptr inbounds i8, i8* %2, i64 %408
  %411 = bitcast i8* %410 to <16 x i8>*
  %412 = load <16 x i8>, <16 x i8>* %411, align 1, !alias.scope !116
  %413 = getelementptr inbounds i8, i8* %410, i64 16
  %414 = bitcast i8* %413 to <16 x i8>*
  %415 = load <16 x i8>, <16 x i8>* %414, align 1, !alias.scope !116
  %416 = getelementptr inbounds i8, i8* %4, i64 %409
  %417 = bitcast i8* %416 to <16 x i8>*
  store <16 x i8> %412, <16 x i8>* %417, align 1, !alias.scope !119, !noalias !116
  %418 = getelementptr inbounds i8, i8* %416, i64 16
  %419 = bitcast i8* %418 to <16 x i8>*
  store <16 x i8> %415, <16 x i8>* %419, align 1, !alias.scope !119, !noalias !116
  br label %420

420:                                              ; preds = %404, %406
  br i1 %286, label %424, label %349

421:                                              ; preds = %424, %313
  %422 = add nuw nsw i64 %314, 1
  %423 = icmp eq i64 %422, %269
  br i1 %423, label %322, label %313

424:                                              ; preds = %360, %427, %420, %325
  %425 = add nuw nsw i64 %326, 1
  %426 = icmp eq i64 %425, %270
  br i1 %426, label %421, label %325

427:                                              ; preds = %360, %427
  %428 = phi i64 [ %442, %427 ], [ %361, %360 ]
  %429 = add nsw i64 %428, %347
  %430 = add nsw i64 %342, %428
  %431 = add nsw i64 %429, %348
  %432 = getelementptr inbounds i8, i8* %2, i64 %430
  %433 = load i8, i8* %432, align 1
  %434 = getelementptr inbounds i8, i8* %4, i64 %431
  store i8 %433, i8* %434, align 1
  %435 = add nuw nsw i64 %428, 1
  %436 = add nsw i64 %435, %347
  %437 = add nsw i64 %342, %435
  %438 = add nsw i64 %436, %348
  %439 = getelementptr inbounds i8, i8* %2, i64 %437
  %440 = load i8, i8* %439, align 1
  %441 = getelementptr inbounds i8, i8* %4, i64 %438
  store i8 %440, i8* %441, align 1
  %442 = add nuw nsw i64 %428, 2
  %443 = icmp eq i64 %442, %271
  br i1 %443, label %424, label %427, !llvm.loop !122
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !123
  %12 = load i32, i32* %8, align 8, !noalias !123
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !123
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !123
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !123
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !123
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !123
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !123
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !123
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !123
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !123
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !123
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !123
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !123
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !123
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !123
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !123
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !123
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !123
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !123
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !126

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !123
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !123
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !127

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !123
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !128

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !123
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !129
  %116 = load i32, i32* %9, align 8, !noalias !129
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !129
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !129
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %121, label %123, label %203

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %122 to [5 x i32]*
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %123
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !129
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !129
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !129
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !129
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !129
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !129
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !129
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !129
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !129
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !129
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !129
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !129
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !129
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !129
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !129
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !129
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !132

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !129
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !129
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !133

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %123
  %197 = phi i64 [ 0, %123 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !129
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !134

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !129
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %11, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = load i32*, i32** %100, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds i32, i32* %220, i64 2
  %223 = getelementptr inbounds i32, i32* %220, i64 1
  br label %231

224:                                              ; preds = %203
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = bitcast %union.anon* %18 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  br label %231

231:                                              ; preds = %219, %224
  %232 = phi i32* [ %223, %219 ], [ %230, %224 ]
  %233 = phi i32* [ %221, %219 ], [ %226, %224 ]
  %234 = phi i32* [ %222, %219 ], [ %228, %224 ]
  %235 = phi i32* [ %220, %219 ], [ %101, %224 ]
  %236 = load i32, i32* %234, align 4
  %237 = load i32, i32* %233, align 4
  %238 = load i32, i32* %232, align 4
  %239 = load i32, i32* %235, align 4
  %240 = load i32, i32* %115, align 8
  %241 = icmp sgt i32 %240, 5
  %242 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %239, 0
  br i1 %244, label %245, label %298

245:                                              ; preds = %231
  %246 = icmp sgt i32 %238, 0
  %247 = icmp sgt i32 %236, 0
  %248 = icmp sgt i32 %237, 0
  %249 = getelementptr inbounds i32, i32* %101, i64 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %252 = bitcast [16 x i8]* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %204, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %260 = bitcast [16 x i8]* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %263 = bitcast i8* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %256 to i64
  %266 = sext i32 %253 to i64
  %267 = sext i32 %250 to i64
  %268 = zext i32 %239 to i64
  %269 = zext i32 %238 to i64
  %270 = zext i32 %236 to i64
  %271 = zext i32 %237 to i64
  %272 = getelementptr i32, i32* %4, i64 %271
  %273 = mul nsw i64 %267, %266
  %274 = mul i64 %273, %265
  %275 = mul nsw i64 %266, %265
  %276 = and i64 %271, 4294967288
  %277 = add nsw i64 %276, -8
  %278 = lshr exact i64 %277, 3
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i32 %237, 8
  %281 = and i64 %271, 4294967288
  %282 = and i64 %279, 1
  %283 = icmp eq i64 %277, 0
  %284 = sub nuw nsw i64 %279, %282
  %285 = icmp eq i64 %282, 0
  %286 = icmp eq i64 %281, %271
  %287 = and i64 %271, 1
  %288 = icmp eq i64 %287, 0
  %289 = sub nsw i64 0, %271
  br label %290

290:                                              ; preds = %322, %245
  %291 = phi i64 [ 0, %245 ], [ %323, %322 ]
  %292 = mul i64 %274, %291
  %293 = add i64 %292, %271
  br i1 %246, label %294, label %322

294:                                              ; preds = %290
  %295 = mul nsw i64 %291, %267
  %296 = trunc i64 %291 to i32
  %297 = mul i32 %258, %296
  br label %313

298:                                              ; preds = %322, %231
  br i1 %241, label %299, label %305

299:                                              ; preds = %298
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  tail call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %298, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %218, label %306, label %312

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  tail call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %305, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

313:                                              ; preds = %421, %294
  %314 = phi i64 [ 0, %294 ], [ %422, %421 ]
  %315 = mul i64 %275, %314
  %316 = add i64 %292, %315
  %317 = add i64 %293, %315
  br i1 %247, label %318, label %421

318:                                              ; preds = %313
  %319 = add nsw i64 %295, %314
  %320 = mul nsw i64 %319, %266
  %321 = trunc i64 %314 to i32
  br label %325

322:                                              ; preds = %421, %290
  %323 = add nuw nsw i64 %291, 1
  %324 = icmp eq i64 %323, %268
  br i1 %324, label %298, label %290

325:                                              ; preds = %424, %318
  %326 = phi i64 [ 0, %318 ], [ %425, %424 ]
  %327 = mul i64 %326, %265
  %328 = add i64 %316, %327
  %329 = getelementptr i32, i32* %2, i64 %328
  %330 = add i64 %317, %327
  %331 = getelementptr i32, i32* %2, i64 %330
  br i1 %248, label %332, label %424

332:                                              ; preds = %325
  %333 = srem i32 %321, %243
  %334 = mul nsw i32 %333, %243
  %335 = trunc i64 %326 to i32
  %336 = srem i32 %335, %243
  %337 = add nsw i32 %334, %336
  %338 = mul nsw i32 %337, %237
  %339 = sdiv i32 %335, %243
  %340 = sdiv i32 %321, %243
  %341 = add nsw i64 %320, %326
  %342 = mul nsw i64 %341, %265
  %343 = add nsw i32 %297, %340
  %344 = mul nsw i32 %343, %261
  %345 = add nsw i32 %344, %339
  %346 = mul nsw i32 %345, %264
  %347 = sext i32 %338 to i64
  %348 = sext i32 %346 to i64
  br i1 %280, label %349, label %363

349:                                              ; preds = %420, %363, %332
  %350 = phi i64 [ 0, %363 ], [ 0, %332 ], [ %281, %420 ]
  %351 = xor i64 %350, -1
  br i1 %288, label %360, label %352

352:                                              ; preds = %349
  %353 = add nsw i64 %350, %347
  %354 = add nsw i64 %342, %350
  %355 = add nsw i64 %353, %348
  %356 = getelementptr inbounds i32, i32* %2, i64 %354
  %357 = load i32, i32* %356, align 4
  %358 = getelementptr inbounds i32, i32* %4, i64 %355
  store i32 %357, i32* %358, align 4
  %359 = or i64 %350, 1
  br label %360

360:                                              ; preds = %352, %349
  %361 = phi i64 [ %359, %352 ], [ %350, %349 ]
  %362 = icmp eq i64 %351, %289
  br i1 %362, label %424, label %427

363:                                              ; preds = %332
  %364 = add nsw i64 %347, %348
  %365 = getelementptr i32, i32* %4, i64 %364
  %366 = getelementptr i32, i32* %272, i64 %364
  %367 = icmp ult i32* %365, %331
  %368 = icmp ult i32* %329, %366
  %369 = and i1 %367, %368
  br i1 %369, label %349, label %370

370:                                              ; preds = %363
  br i1 %283, label %404, label %371

371:                                              ; preds = %370, %371
  %372 = phi i64 [ %401, %371 ], [ 0, %370 ]
  %373 = phi i64 [ %402, %371 ], [ %284, %370 ]
  %374 = add nsw i64 %372, %347
  %375 = add nsw i64 %342, %372
  %376 = add nsw i64 %374, %348
  %377 = getelementptr inbounds i32, i32* %2, i64 %375
  %378 = bitcast i32* %377 to <4 x i32>*
  %379 = load <4 x i32>, <4 x i32>* %378, align 4, !alias.scope !135
  %380 = getelementptr inbounds i32, i32* %377, i64 4
  %381 = bitcast i32* %380 to <4 x i32>*
  %382 = load <4 x i32>, <4 x i32>* %381, align 4, !alias.scope !135
  %383 = getelementptr inbounds i32, i32* %4, i64 %376
  %384 = bitcast i32* %383 to <4 x i32>*
  store <4 x i32> %379, <4 x i32>* %384, align 4, !alias.scope !138, !noalias !135
  %385 = getelementptr inbounds i32, i32* %383, i64 4
  %386 = bitcast i32* %385 to <4 x i32>*
  store <4 x i32> %382, <4 x i32>* %386, align 4, !alias.scope !138, !noalias !135
  %387 = or i64 %372, 8
  %388 = add nsw i64 %387, %347
  %389 = add nsw i64 %342, %387
  %390 = add nsw i64 %388, %348
  %391 = getelementptr inbounds i32, i32* %2, i64 %389
  %392 = bitcast i32* %391 to <4 x i32>*
  %393 = load <4 x i32>, <4 x i32>* %392, align 4, !alias.scope !135
  %394 = getelementptr inbounds i32, i32* %391, i64 4
  %395 = bitcast i32* %394 to <4 x i32>*
  %396 = load <4 x i32>, <4 x i32>* %395, align 4, !alias.scope !135
  %397 = getelementptr inbounds i32, i32* %4, i64 %390
  %398 = bitcast i32* %397 to <4 x i32>*
  store <4 x i32> %393, <4 x i32>* %398, align 4, !alias.scope !138, !noalias !135
  %399 = getelementptr inbounds i32, i32* %397, i64 4
  %400 = bitcast i32* %399 to <4 x i32>*
  store <4 x i32> %396, <4 x i32>* %400, align 4, !alias.scope !138, !noalias !135
  %401 = add i64 %372, 16
  %402 = add i64 %373, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %371, !llvm.loop !140

404:                                              ; preds = %371, %370
  %405 = phi i64 [ 0, %370 ], [ %401, %371 ]
  br i1 %285, label %420, label %406

406:                                              ; preds = %404
  %407 = add nsw i64 %405, %347
  %408 = add nsw i64 %342, %405
  %409 = add nsw i64 %407, %348
  %410 = getelementptr inbounds i32, i32* %2, i64 %408
  %411 = bitcast i32* %410 to <4 x i32>*
  %412 = load <4 x i32>, <4 x i32>* %411, align 4, !alias.scope !135
  %413 = getelementptr inbounds i32, i32* %410, i64 4
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !alias.scope !135
  %416 = getelementptr inbounds i32, i32* %4, i64 %409
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %412, <4 x i32>* %417, align 4, !alias.scope !138, !noalias !135
  %418 = getelementptr inbounds i32, i32* %416, i64 4
  %419 = bitcast i32* %418 to <4 x i32>*
  store <4 x i32> %415, <4 x i32>* %419, align 4, !alias.scope !138, !noalias !135
  br label %420

420:                                              ; preds = %404, %406
  br i1 %286, label %424, label %349

421:                                              ; preds = %424, %313
  %422 = add nuw nsw i64 %314, 1
  %423 = icmp eq i64 %422, %269
  br i1 %423, label %322, label %313

424:                                              ; preds = %360, %427, %420, %325
  %425 = add nuw nsw i64 %326, 1
  %426 = icmp eq i64 %425, %270
  br i1 %426, label %421, label %325

427:                                              ; preds = %360, %427
  %428 = phi i64 [ %442, %427 ], [ %361, %360 ]
  %429 = add nsw i64 %428, %347
  %430 = add nsw i64 %342, %428
  %431 = add nsw i64 %429, %348
  %432 = getelementptr inbounds i32, i32* %2, i64 %430
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds i32, i32* %4, i64 %431
  store i32 %433, i32* %434, align 4
  %435 = add nuw nsw i64 %428, 1
  %436 = add nsw i64 %435, %347
  %437 = add nsw i64 %342, %435
  %438 = add nsw i64 %436, %348
  %439 = getelementptr inbounds i32, i32* %2, i64 %437
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds i32, i32* %4, i64 %438
  store i32 %440, i32* %441, align 4
  %442 = add nuw nsw i64 %428, 2
  %443 = icmp eq i64 %442, %271
  br i1 %443, label %424, label %427, !llvm.loop !141
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !142
  %12 = load i32, i32* %8, align 8, !noalias !142
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !142
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !142
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !142
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !142
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !142
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !142
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !142
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !142
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !142
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !142
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !142
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !142
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !142
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !142
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !142
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !142
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !142
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !142
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !145

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !142
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !142
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !146

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !142
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !147

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !142
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !148
  %116 = load i32, i32* %9, align 8, !noalias !148
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !148
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !148
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %121, label %123, label %203

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %122 to [5 x i32]*
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %123
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !148
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !148
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !148
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !148
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !148
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !148
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !148
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !148
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !148
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !148
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !148
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !148
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !148
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !148
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !148
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !148
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !151

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !148
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !148
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !152

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %123
  %197 = phi i64 [ 0, %123 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %124, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !148
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !153

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !148
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %11, align 8
  %218 = icmp sgt i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = load i32*, i32** %100, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds i32, i32* %220, i64 2
  %223 = getelementptr inbounds i32, i32* %220, i64 1
  br label %231

224:                                              ; preds = %203
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %228 = bitcast [16 x i8]* %227 to i32*
  %229 = bitcast %union.anon* %18 to [5 x i32]*
  %230 = getelementptr inbounds [5 x i32], [5 x i32]* %229, i64 0, i64 1
  br label %231

231:                                              ; preds = %219, %224
  %232 = phi i32* [ %223, %219 ], [ %230, %224 ]
  %233 = phi i32* [ %221, %219 ], [ %226, %224 ]
  %234 = phi i32* [ %222, %219 ], [ %228, %224 ]
  %235 = phi i32* [ %220, %219 ], [ %101, %224 ]
  %236 = load i32, i32* %234, align 4
  %237 = load i32, i32* %233, align 4
  %238 = load i32, i32* %232, align 4
  %239 = load i32, i32* %235, align 4
  %240 = load i32, i32* %115, align 8
  %241 = icmp sgt i32 %240, 5
  %242 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %239, 0
  br i1 %244, label %245, label %298

245:                                              ; preds = %231
  %246 = icmp sgt i32 %238, 0
  %247 = icmp sgt i32 %236, 0
  %248 = icmp sgt i32 %237, 0
  %249 = getelementptr inbounds i32, i32* %101, i64 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %252 = bitcast [16 x i8]* %251 to i32*
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds i32, i32* %204, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %260 = bitcast [16 x i8]* %259 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %263 = bitcast i8* %262 to i32*
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %256 to i64
  %266 = sext i32 %253 to i64
  %267 = sext i32 %250 to i64
  %268 = zext i32 %239 to i64
  %269 = zext i32 %238 to i64
  %270 = zext i32 %236 to i64
  %271 = zext i32 %237 to i64
  %272 = getelementptr i64, i64* %4, i64 %271
  %273 = mul nsw i64 %267, %266
  %274 = mul i64 %273, %265
  %275 = mul nsw i64 %266, %265
  %276 = and i64 %271, 4294967292
  %277 = add nsw i64 %276, -4
  %278 = lshr exact i64 %277, 2
  %279 = add nuw nsw i64 %278, 1
  %280 = icmp ult i32 %237, 4
  %281 = and i64 %271, 4294967292
  %282 = and i64 %279, 1
  %283 = icmp eq i64 %277, 0
  %284 = sub nuw nsw i64 %279, %282
  %285 = icmp eq i64 %282, 0
  %286 = icmp eq i64 %281, %271
  %287 = and i64 %271, 1
  %288 = icmp eq i64 %287, 0
  %289 = sub nsw i64 0, %271
  br label %290

290:                                              ; preds = %322, %245
  %291 = phi i64 [ 0, %245 ], [ %323, %322 ]
  %292 = mul i64 %274, %291
  %293 = add i64 %292, %271
  br i1 %246, label %294, label %322

294:                                              ; preds = %290
  %295 = mul nsw i64 %291, %267
  %296 = trunc i64 %291 to i32
  %297 = mul i32 %258, %296
  br label %313

298:                                              ; preds = %322, %231
  br i1 %241, label %299, label %305

299:                                              ; preds = %298
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  tail call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %298, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %218, label %306, label %312

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  tail call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %305, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

313:                                              ; preds = %421, %294
  %314 = phi i64 [ 0, %294 ], [ %422, %421 ]
  %315 = mul i64 %275, %314
  %316 = add i64 %292, %315
  %317 = add i64 %293, %315
  br i1 %247, label %318, label %421

318:                                              ; preds = %313
  %319 = add nsw i64 %295, %314
  %320 = mul nsw i64 %319, %266
  %321 = trunc i64 %314 to i32
  br label %325

322:                                              ; preds = %421, %290
  %323 = add nuw nsw i64 %291, 1
  %324 = icmp eq i64 %323, %268
  br i1 %324, label %298, label %290

325:                                              ; preds = %424, %318
  %326 = phi i64 [ 0, %318 ], [ %425, %424 ]
  %327 = mul i64 %326, %265
  %328 = add i64 %316, %327
  %329 = getelementptr i64, i64* %2, i64 %328
  %330 = add i64 %317, %327
  %331 = getelementptr i64, i64* %2, i64 %330
  br i1 %248, label %332, label %424

332:                                              ; preds = %325
  %333 = srem i32 %321, %243
  %334 = mul nsw i32 %333, %243
  %335 = trunc i64 %326 to i32
  %336 = srem i32 %335, %243
  %337 = add nsw i32 %334, %336
  %338 = mul nsw i32 %337, %237
  %339 = sdiv i32 %335, %243
  %340 = sdiv i32 %321, %243
  %341 = add nsw i64 %320, %326
  %342 = mul nsw i64 %341, %265
  %343 = add nsw i32 %297, %340
  %344 = mul nsw i32 %343, %261
  %345 = add nsw i32 %344, %339
  %346 = mul nsw i32 %345, %264
  %347 = sext i32 %338 to i64
  %348 = sext i32 %346 to i64
  br i1 %280, label %349, label %363

349:                                              ; preds = %420, %363, %332
  %350 = phi i64 [ 0, %363 ], [ 0, %332 ], [ %281, %420 ]
  %351 = xor i64 %350, -1
  br i1 %288, label %360, label %352

352:                                              ; preds = %349
  %353 = add nsw i64 %350, %347
  %354 = add nsw i64 %342, %350
  %355 = add nsw i64 %353, %348
  %356 = getelementptr inbounds i64, i64* %2, i64 %354
  %357 = load i64, i64* %356, align 8
  %358 = getelementptr inbounds i64, i64* %4, i64 %355
  store i64 %357, i64* %358, align 8
  %359 = or i64 %350, 1
  br label %360

360:                                              ; preds = %352, %349
  %361 = phi i64 [ %359, %352 ], [ %350, %349 ]
  %362 = icmp eq i64 %351, %289
  br i1 %362, label %424, label %427

363:                                              ; preds = %332
  %364 = add nsw i64 %347, %348
  %365 = getelementptr i64, i64* %4, i64 %364
  %366 = getelementptr i64, i64* %272, i64 %364
  %367 = icmp ult i64* %365, %331
  %368 = icmp ult i64* %329, %366
  %369 = and i1 %367, %368
  br i1 %369, label %349, label %370

370:                                              ; preds = %363
  br i1 %283, label %404, label %371

371:                                              ; preds = %370, %371
  %372 = phi i64 [ %401, %371 ], [ 0, %370 ]
  %373 = phi i64 [ %402, %371 ], [ %284, %370 ]
  %374 = add nsw i64 %372, %347
  %375 = add nsw i64 %342, %372
  %376 = add nsw i64 %374, %348
  %377 = getelementptr inbounds i64, i64* %2, i64 %375
  %378 = bitcast i64* %377 to <2 x i64>*
  %379 = load <2 x i64>, <2 x i64>* %378, align 8, !alias.scope !154
  %380 = getelementptr inbounds i64, i64* %377, i64 2
  %381 = bitcast i64* %380 to <2 x i64>*
  %382 = load <2 x i64>, <2 x i64>* %381, align 8, !alias.scope !154
  %383 = getelementptr inbounds i64, i64* %4, i64 %376
  %384 = bitcast i64* %383 to <2 x i64>*
  store <2 x i64> %379, <2 x i64>* %384, align 8, !alias.scope !157, !noalias !154
  %385 = getelementptr inbounds i64, i64* %383, i64 2
  %386 = bitcast i64* %385 to <2 x i64>*
  store <2 x i64> %382, <2 x i64>* %386, align 8, !alias.scope !157, !noalias !154
  %387 = or i64 %372, 4
  %388 = add nsw i64 %387, %347
  %389 = add nsw i64 %342, %387
  %390 = add nsw i64 %388, %348
  %391 = getelementptr inbounds i64, i64* %2, i64 %389
  %392 = bitcast i64* %391 to <2 x i64>*
  %393 = load <2 x i64>, <2 x i64>* %392, align 8, !alias.scope !154
  %394 = getelementptr inbounds i64, i64* %391, i64 2
  %395 = bitcast i64* %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !154
  %397 = getelementptr inbounds i64, i64* %4, i64 %390
  %398 = bitcast i64* %397 to <2 x i64>*
  store <2 x i64> %393, <2 x i64>* %398, align 8, !alias.scope !157, !noalias !154
  %399 = getelementptr inbounds i64, i64* %397, i64 2
  %400 = bitcast i64* %399 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %400, align 8, !alias.scope !157, !noalias !154
  %401 = add i64 %372, 8
  %402 = add i64 %373, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %371, !llvm.loop !159

404:                                              ; preds = %371, %370
  %405 = phi i64 [ 0, %370 ], [ %401, %371 ]
  br i1 %285, label %420, label %406

406:                                              ; preds = %404
  %407 = add nsw i64 %405, %347
  %408 = add nsw i64 %342, %405
  %409 = add nsw i64 %407, %348
  %410 = getelementptr inbounds i64, i64* %2, i64 %408
  %411 = bitcast i64* %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8, !alias.scope !154
  %413 = getelementptr inbounds i64, i64* %410, i64 2
  %414 = bitcast i64* %413 to <2 x i64>*
  %415 = load <2 x i64>, <2 x i64>* %414, align 8, !alias.scope !154
  %416 = getelementptr inbounds i64, i64* %4, i64 %409
  %417 = bitcast i64* %416 to <2 x i64>*
  store <2 x i64> %412, <2 x i64>* %417, align 8, !alias.scope !157, !noalias !154
  %418 = getelementptr inbounds i64, i64* %416, i64 2
  %419 = bitcast i64* %418 to <2 x i64>*
  store <2 x i64> %415, <2 x i64>* %419, align 8, !alias.scope !157, !noalias !154
  br label %420

420:                                              ; preds = %404, %406
  br i1 %286, label %424, label %349

421:                                              ; preds = %424, %313
  %422 = add nuw nsw i64 %314, 1
  %423 = icmp eq i64 %422, %269
  br i1 %423, label %322, label %313

424:                                              ; preds = %360, %427, %420, %325
  %425 = add nuw nsw i64 %326, 1
  %426 = icmp eq i64 %425, %270
  br i1 %426, label %421, label %325

427:                                              ; preds = %360, %427
  %428 = phi i64 [ %442, %427 ], [ %361, %360 ]
  %429 = add nsw i64 %428, %347
  %430 = add nsw i64 %342, %428
  %431 = add nsw i64 %429, %348
  %432 = getelementptr inbounds i64, i64* %2, i64 %430
  %433 = load i64, i64* %432, align 8
  %434 = getelementptr inbounds i64, i64* %4, i64 %431
  store i64 %433, i64* %434, align 8
  %435 = add nuw nsw i64 %428, 1
  %436 = add nsw i64 %435, %347
  %437 = add nsw i64 %342, %435
  %438 = add nsw i64 %436, %348
  %439 = getelementptr inbounds i64, i64* %2, i64 %437
  %440 = load i64, i64* %439, align 8
  %441 = getelementptr inbounds i64, i64* %4, i64 %438
  store i64 %440, i64* %441, align 8
  %442 = add nuw nsw i64 %428, 2
  %443 = icmp eq i64 %442, %271
  br i1 %443, label %424, label %427, !llvm.loop !160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops12SpaceToDepthIfEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !161
  %12 = load i32, i32* %8, align 8, !noalias !161
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !161
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !161
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !161
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !161
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !161
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !161
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !161
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !161
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !161
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !161
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !161
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !161
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !161
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !161
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !161
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !161
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !161
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !161
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !164

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !161
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !161
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !165

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !161
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !166

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !161
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !167
  %116 = load i32, i32* %9, align 8, !noalias !167
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !167
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !167
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !167
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !167
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !167
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !167
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !167
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !167
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !167
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !167
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !167
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !167
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !167
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !167
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !167
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !167
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !167
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !167
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !170

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !167
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !167
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !171

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !167
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !172

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !167
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %115, align 8
  %218 = icmp sgt i32 %217, 5
  %219 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 2
  %222 = getelementptr inbounds i32, i32* %220, i64 1
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %224 = bitcast [16 x i8]* %223 to i32*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %226 = select i1 %218, i32* %221, i32* %224
  %227 = select i1 %218, i32* %222, i32* %225
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  %230 = load i32, i32* %11, align 8
  %231 = icmp sgt i32 %230, 5
  %232 = load i32*, i32** %100, align 8
  %233 = select i1 %231, i32* %232, i32* %101
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %234, 0
  br i1 %237, label %238, label %271

238:                                              ; preds = %203
  %239 = getelementptr inbounds i32, i32* %232, i64 3
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = select i1 %231, i32* %239, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %236, %243
  %245 = getelementptr inbounds i32, i32* %220, i64 3
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %247 = bitcast i8* %246 to i32*
  %248 = select i1 %218, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %229, 0
  %251 = getelementptr inbounds i32, i32* %204, i64 1
  %252 = icmp sgt i32 %228, 0
  %253 = sext i32 %244 to i64
  %254 = shl nsw i64 %253, 2
  %255 = sext i32 %249 to i64
  %256 = add i32 %228, -1
  %257 = and i32 %228, 3
  %258 = icmp ult i32 %256, 3
  %259 = sub i32 %228, %257
  %260 = icmp eq i32 %257, 0
  br label %261

261:                                              ; preds = %284, %238
  %262 = phi i32 [ %236, %238 ], [ %285, %284 ]
  %263 = phi i32 [ %236, %238 ], [ %286, %284 ]
  %264 = phi i32 [ 0, %238 ], [ %288, %284 ]
  %265 = phi float* [ %2, %238 ], [ %287, %284 ]
  br i1 %250, label %266, label %284

266:                                              ; preds = %261
  %267 = load i32, i32* %251, align 4
  %268 = load i32, i32* %224, align 8
  %269 = load i32, i32* %247, align 4
  %270 = mul nsw i32 %267, %264
  br label %290

271:                                              ; preds = %284, %203
  %272 = xor i1 %218, true
  %273 = icmp eq i32* %220, null
  %274 = or i1 %273, %272
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  %276 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %276) #9
  br label %277

277:                                              ; preds = %271, %275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %278 = xor i1 %231, true
  %279 = icmp eq i32* %232, null
  %280 = or i1 %279, %278
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %232 to i8*
  tail call void @_ZdaPv(i8* %282) #9
  br label %283

283:                                              ; preds = %277, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

284:                                              ; preds = %308, %261
  %285 = phi i32 [ %262, %261 ], [ %309, %308 ]
  %286 = phi i32 [ %263, %261 ], [ %310, %308 ]
  %287 = phi float* [ %265, %261 ], [ %311, %308 ]
  %288 = add nuw nsw i32 %264, 1
  %289 = icmp eq i32 %288, %234
  br i1 %289, label %271, label %261

290:                                              ; preds = %308, %266
  %291 = phi i32 [ %309, %308 ], [ %262, %266 ]
  %292 = phi i32 [ %310, %308 ], [ %263, %266 ]
  %293 = phi i32 [ %312, %308 ], [ 0, %266 ]
  %294 = phi float* [ %311, %308 ], [ %265, %266 ]
  %295 = icmp sgt i32 %292, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %290
  %297 = add nsw i32 %270, %293
  %298 = mul nsw i32 %297, %268
  %299 = mul nsw i32 %298, %269
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds float, float* %4, i64 %300
  br label %302

302:                                              ; preds = %296, %331
  %303 = phi i32 [ %332, %331 ], [ %291, %296 ]
  %304 = phi i32 [ %335, %331 ], [ 0, %296 ]
  %305 = phi float* [ %334, %331 ], [ %301, %296 ]
  %306 = phi float* [ %333, %331 ], [ %294, %296 ]
  br i1 %252, label %307, label %331

307:                                              ; preds = %302
  br i1 %258, label %314, label %337

308:                                              ; preds = %331, %290
  %309 = phi i32 [ %291, %290 ], [ %332, %331 ]
  %310 = phi i32 [ %292, %290 ], [ %332, %331 ]
  %311 = phi float* [ %294, %290 ], [ %333, %331 ]
  %312 = add nuw nsw i32 %293, 1
  %313 = icmp eq i32 %312, %229
  br i1 %313, label %284, label %290

314:                                              ; preds = %337, %307
  %315 = phi float* [ undef, %307 ], [ %355, %337 ]
  %316 = phi float* [ %305, %307 ], [ %356, %337 ]
  %317 = phi float* [ %306, %307 ], [ %355, %337 ]
  br i1 %260, label %328, label %318

318:                                              ; preds = %314, %318
  %319 = phi float* [ %325, %318 ], [ %316, %314 ]
  %320 = phi float* [ %324, %318 ], [ %317, %314 ]
  %321 = phi i32 [ %326, %318 ], [ %257, %314 ]
  %322 = bitcast float* %319 to i8*
  %323 = bitcast float* %320 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %323, i64 %254, i1 false)
  %324 = getelementptr inbounds float, float* %320, i64 %253
  %325 = getelementptr inbounds float, float* %319, i64 %255
  %326 = add i32 %321, -1
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %318, !llvm.loop !173

328:                                              ; preds = %318, %314
  %329 = phi float* [ %315, %314 ], [ %324, %318 ]
  %330 = load i32, i32* %235, align 4
  br label %331

331:                                              ; preds = %328, %302
  %332 = phi i32 [ %303, %302 ], [ %330, %328 ]
  %333 = phi float* [ %306, %302 ], [ %329, %328 ]
  %334 = getelementptr inbounds float, float* %305, i64 %253
  %335 = add nuw nsw i32 %304, 1
  %336 = icmp slt i32 %335, %332
  br i1 %336, label %302, label %308

337:                                              ; preds = %307, %337
  %338 = phi float* [ %356, %337 ], [ %305, %307 ]
  %339 = phi float* [ %355, %337 ], [ %306, %307 ]
  %340 = phi i32 [ %357, %337 ], [ %259, %307 ]
  %341 = bitcast float* %338 to i8*
  %342 = bitcast float* %339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 %254, i1 false)
  %343 = getelementptr inbounds float, float* %339, i64 %253
  %344 = getelementptr inbounds float, float* %338, i64 %255
  %345 = bitcast float* %344 to i8*
  %346 = bitcast float* %343 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 %254, i1 false)
  %347 = getelementptr inbounds float, float* %343, i64 %253
  %348 = getelementptr inbounds float, float* %344, i64 %255
  %349 = bitcast float* %348 to i8*
  %350 = bitcast float* %347 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %350, i64 %254, i1 false)
  %351 = getelementptr inbounds float, float* %347, i64 %253
  %352 = getelementptr inbounds float, float* %348, i64 %255
  %353 = bitcast float* %352 to i8*
  %354 = bitcast float* %351 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %353, i8* align 4 %354, i64 %254, i1 false)
  %355 = getelementptr inbounds float, float* %351, i64 %253
  %356 = getelementptr inbounds float, float* %352, i64 %255
  %357 = add i32 %340, -4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %314, label %337
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops12SpaceToDepthIhEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !174
  %12 = load i32, i32* %8, align 8, !noalias !174
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !174
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !174
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !174
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !174
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !174
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !174
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !174
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !174
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !174
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !174
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !174
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !174
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !174
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !174
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !174
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !174
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !174
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !174
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !177

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !174
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !174
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !178

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !174
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !179

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !174
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !180
  %116 = load i32, i32* %9, align 8, !noalias !180
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !180
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !180
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !180
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !180
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !180
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !180
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !180
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !180
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !180
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !180
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !180
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !180
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !180
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !180
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !180
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !180
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !180
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !180
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !183

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !180
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !180
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !184

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !180
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !185

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !180
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %115, align 8
  %218 = icmp sgt i32 %217, 5
  %219 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 2
  %222 = getelementptr inbounds i32, i32* %220, i64 1
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %224 = bitcast [16 x i8]* %223 to i32*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %226 = select i1 %218, i32* %221, i32* %224
  %227 = select i1 %218, i32* %222, i32* %225
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  %230 = load i32, i32* %11, align 8
  %231 = icmp sgt i32 %230, 5
  %232 = load i32*, i32** %100, align 8
  %233 = select i1 %231, i32* %232, i32* %101
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %236 = icmp sgt i32 %234, 0
  br i1 %236, label %237, label %270

237:                                              ; preds = %203
  %238 = load i32, i32* %235, align 4
  %239 = getelementptr inbounds i32, i32* %232, i64 3
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = select i1 %231, i32* %239, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %238, %243
  %245 = getelementptr inbounds i32, i32* %220, i64 3
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %247 = bitcast i8* %246 to i32*
  %248 = select i1 %218, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %229, 0
  %251 = getelementptr inbounds i32, i32* %204, i64 1
  %252 = icmp sgt i32 %228, 0
  %253 = sext i32 %244 to i64
  %254 = sext i32 %249 to i64
  %255 = add i32 %228, -1
  %256 = and i32 %228, 3
  %257 = icmp ult i32 %255, 3
  %258 = sub i32 %228, %256
  %259 = icmp eq i32 %256, 0
  br label %260

260:                                              ; preds = %283, %237
  %261 = phi i32 [ %238, %237 ], [ %284, %283 ]
  %262 = phi i32 [ %238, %237 ], [ %285, %283 ]
  %263 = phi i32 [ 0, %237 ], [ %287, %283 ]
  %264 = phi i8* [ %2, %237 ], [ %286, %283 ]
  br i1 %250, label %265, label %283

265:                                              ; preds = %260
  %266 = load i32, i32* %251, align 4
  %267 = load i32, i32* %224, align 8
  %268 = load i32, i32* %247, align 4
  %269 = mul nsw i32 %266, %263
  br label %289

270:                                              ; preds = %283, %203
  %271 = xor i1 %218, true
  %272 = icmp eq i32* %220, null
  %273 = or i1 %272, %271
  br i1 %273, label %276, label %274

274:                                              ; preds = %270
  %275 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %275) #9
  br label %276

276:                                              ; preds = %270, %274
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %277 = xor i1 %231, true
  %278 = icmp eq i32* %232, null
  %279 = or i1 %278, %277
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = bitcast i32* %232 to i8*
  tail call void @_ZdaPv(i8* %281) #9
  br label %282

282:                                              ; preds = %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

283:                                              ; preds = %307, %260
  %284 = phi i32 [ %261, %260 ], [ %308, %307 ]
  %285 = phi i32 [ %262, %260 ], [ %309, %307 ]
  %286 = phi i8* [ %264, %260 ], [ %310, %307 ]
  %287 = add nuw nsw i32 %263, 1
  %288 = icmp eq i32 %287, %234
  br i1 %288, label %270, label %260

289:                                              ; preds = %307, %265
  %290 = phi i32 [ %308, %307 ], [ %261, %265 ]
  %291 = phi i32 [ %309, %307 ], [ %262, %265 ]
  %292 = phi i32 [ %311, %307 ], [ 0, %265 ]
  %293 = phi i8* [ %310, %307 ], [ %264, %265 ]
  %294 = icmp sgt i32 %291, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %289
  %296 = add nsw i32 %269, %292
  %297 = mul nsw i32 %296, %267
  %298 = mul nsw i32 %297, %268
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8, i8* %4, i64 %299
  br label %301

301:                                              ; preds = %295, %328
  %302 = phi i32 [ %329, %328 ], [ %290, %295 ]
  %303 = phi i32 [ %332, %328 ], [ 0, %295 ]
  %304 = phi i8* [ %331, %328 ], [ %300, %295 ]
  %305 = phi i8* [ %330, %328 ], [ %293, %295 ]
  br i1 %252, label %306, label %328

306:                                              ; preds = %301
  br i1 %257, label %313, label %334

307:                                              ; preds = %328, %289
  %308 = phi i32 [ %290, %289 ], [ %329, %328 ]
  %309 = phi i32 [ %291, %289 ], [ %329, %328 ]
  %310 = phi i8* [ %293, %289 ], [ %330, %328 ]
  %311 = add nuw nsw i32 %292, 1
  %312 = icmp eq i32 %311, %229
  br i1 %312, label %283, label %289

313:                                              ; preds = %334, %306
  %314 = phi i8* [ undef, %306 ], [ %344, %334 ]
  %315 = phi i8* [ %304, %306 ], [ %345, %334 ]
  %316 = phi i8* [ %305, %306 ], [ %344, %334 ]
  br i1 %259, label %325, label %317

317:                                              ; preds = %313, %317
  %318 = phi i8* [ %322, %317 ], [ %315, %313 ]
  %319 = phi i8* [ %321, %317 ], [ %316, %313 ]
  %320 = phi i32 [ %323, %317 ], [ %256, %313 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %318, i8* align 1 %319, i64 %253, i1 false)
  %321 = getelementptr inbounds i8, i8* %319, i64 %253
  %322 = getelementptr inbounds i8, i8* %318, i64 %254
  %323 = add i32 %320, -1
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %317, !llvm.loop !186

325:                                              ; preds = %317, %313
  %326 = phi i8* [ %314, %313 ], [ %321, %317 ]
  %327 = load i32, i32* %235, align 4
  br label %328

328:                                              ; preds = %325, %301
  %329 = phi i32 [ %302, %301 ], [ %327, %325 ]
  %330 = phi i8* [ %305, %301 ], [ %326, %325 ]
  %331 = getelementptr inbounds i8, i8* %304, i64 %253
  %332 = add nuw nsw i32 %303, 1
  %333 = icmp slt i32 %332, %329
  br i1 %333, label %301, label %307

334:                                              ; preds = %306, %334
  %335 = phi i8* [ %345, %334 ], [ %304, %306 ]
  %336 = phi i8* [ %344, %334 ], [ %305, %306 ]
  %337 = phi i32 [ %346, %334 ], [ %258, %306 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %335, i8* align 1 %336, i64 %253, i1 false)
  %338 = getelementptr inbounds i8, i8* %336, i64 %253
  %339 = getelementptr inbounds i8, i8* %335, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %339, i8* align 1 %338, i64 %253, i1 false)
  %340 = getelementptr inbounds i8, i8* %338, i64 %253
  %341 = getelementptr inbounds i8, i8* %339, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %341, i8* align 1 %340, i64 %253, i1 false)
  %342 = getelementptr inbounds i8, i8* %340, i64 %253
  %343 = getelementptr inbounds i8, i8* %341, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %343, i8* align 1 %342, i64 %253, i1 false)
  %344 = getelementptr inbounds i8, i8* %342, i64 %253
  %345 = getelementptr inbounds i8, i8* %343, i64 %254
  %346 = add i32 %337, -4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %313, label %334
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops12SpaceToDepthIaEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !187
  %12 = load i32, i32* %8, align 8, !noalias !187
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !187
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !187
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !187
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !187
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !187
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !187
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !187
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !187
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !187
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !187
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !187
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !187
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !187
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !187
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !187
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !187
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !187
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !187
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !190

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !187
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !187
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !191

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !187
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !192

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !187
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !193
  %116 = load i32, i32* %9, align 8, !noalias !193
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !193
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !193
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !193
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !193
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !193
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !193
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !193
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !193
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !193
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !193
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !193
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !193
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !193
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !193
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !193
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !193
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !193
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !193
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !196

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !193
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !193
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !197

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !193
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !198

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !193
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %115, align 8
  %218 = icmp sgt i32 %217, 5
  %219 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 2
  %222 = getelementptr inbounds i32, i32* %220, i64 1
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %224 = bitcast [16 x i8]* %223 to i32*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %226 = select i1 %218, i32* %221, i32* %224
  %227 = select i1 %218, i32* %222, i32* %225
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  %230 = load i32, i32* %11, align 8
  %231 = icmp sgt i32 %230, 5
  %232 = load i32*, i32** %100, align 8
  %233 = select i1 %231, i32* %232, i32* %101
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %236 = icmp sgt i32 %234, 0
  br i1 %236, label %237, label %270

237:                                              ; preds = %203
  %238 = load i32, i32* %235, align 4
  %239 = getelementptr inbounds i32, i32* %232, i64 3
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = select i1 %231, i32* %239, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %238, %243
  %245 = getelementptr inbounds i32, i32* %220, i64 3
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %247 = bitcast i8* %246 to i32*
  %248 = select i1 %218, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %229, 0
  %251 = getelementptr inbounds i32, i32* %204, i64 1
  %252 = icmp sgt i32 %228, 0
  %253 = sext i32 %244 to i64
  %254 = sext i32 %249 to i64
  %255 = add i32 %228, -1
  %256 = and i32 %228, 3
  %257 = icmp ult i32 %255, 3
  %258 = sub i32 %228, %256
  %259 = icmp eq i32 %256, 0
  br label %260

260:                                              ; preds = %283, %237
  %261 = phi i32 [ %238, %237 ], [ %284, %283 ]
  %262 = phi i32 [ %238, %237 ], [ %285, %283 ]
  %263 = phi i32 [ 0, %237 ], [ %287, %283 ]
  %264 = phi i8* [ %2, %237 ], [ %286, %283 ]
  br i1 %250, label %265, label %283

265:                                              ; preds = %260
  %266 = load i32, i32* %251, align 4
  %267 = load i32, i32* %224, align 8
  %268 = load i32, i32* %247, align 4
  %269 = mul nsw i32 %266, %263
  br label %289

270:                                              ; preds = %283, %203
  %271 = xor i1 %218, true
  %272 = icmp eq i32* %220, null
  %273 = or i1 %272, %271
  br i1 %273, label %276, label %274

274:                                              ; preds = %270
  %275 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %275) #9
  br label %276

276:                                              ; preds = %270, %274
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %277 = xor i1 %231, true
  %278 = icmp eq i32* %232, null
  %279 = or i1 %278, %277
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = bitcast i32* %232 to i8*
  tail call void @_ZdaPv(i8* %281) #9
  br label %282

282:                                              ; preds = %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

283:                                              ; preds = %307, %260
  %284 = phi i32 [ %261, %260 ], [ %308, %307 ]
  %285 = phi i32 [ %262, %260 ], [ %309, %307 ]
  %286 = phi i8* [ %264, %260 ], [ %310, %307 ]
  %287 = add nuw nsw i32 %263, 1
  %288 = icmp eq i32 %287, %234
  br i1 %288, label %270, label %260

289:                                              ; preds = %307, %265
  %290 = phi i32 [ %308, %307 ], [ %261, %265 ]
  %291 = phi i32 [ %309, %307 ], [ %262, %265 ]
  %292 = phi i32 [ %311, %307 ], [ 0, %265 ]
  %293 = phi i8* [ %310, %307 ], [ %264, %265 ]
  %294 = icmp sgt i32 %291, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %289
  %296 = add nsw i32 %269, %292
  %297 = mul nsw i32 %296, %267
  %298 = mul nsw i32 %297, %268
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8, i8* %4, i64 %299
  br label %301

301:                                              ; preds = %295, %328
  %302 = phi i32 [ %329, %328 ], [ %290, %295 ]
  %303 = phi i32 [ %332, %328 ], [ 0, %295 ]
  %304 = phi i8* [ %331, %328 ], [ %300, %295 ]
  %305 = phi i8* [ %330, %328 ], [ %293, %295 ]
  br i1 %252, label %306, label %328

306:                                              ; preds = %301
  br i1 %257, label %313, label %334

307:                                              ; preds = %328, %289
  %308 = phi i32 [ %290, %289 ], [ %329, %328 ]
  %309 = phi i32 [ %291, %289 ], [ %329, %328 ]
  %310 = phi i8* [ %293, %289 ], [ %330, %328 ]
  %311 = add nuw nsw i32 %292, 1
  %312 = icmp eq i32 %311, %229
  br i1 %312, label %283, label %289

313:                                              ; preds = %334, %306
  %314 = phi i8* [ undef, %306 ], [ %344, %334 ]
  %315 = phi i8* [ %304, %306 ], [ %345, %334 ]
  %316 = phi i8* [ %305, %306 ], [ %344, %334 ]
  br i1 %259, label %325, label %317

317:                                              ; preds = %313, %317
  %318 = phi i8* [ %322, %317 ], [ %315, %313 ]
  %319 = phi i8* [ %321, %317 ], [ %316, %313 ]
  %320 = phi i32 [ %323, %317 ], [ %256, %313 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %318, i8* align 1 %319, i64 %253, i1 false)
  %321 = getelementptr inbounds i8, i8* %319, i64 %253
  %322 = getelementptr inbounds i8, i8* %318, i64 %254
  %323 = add i32 %320, -1
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %317, !llvm.loop !199

325:                                              ; preds = %317, %313
  %326 = phi i8* [ %314, %313 ], [ %321, %317 ]
  %327 = load i32, i32* %235, align 4
  br label %328

328:                                              ; preds = %325, %301
  %329 = phi i32 [ %302, %301 ], [ %327, %325 ]
  %330 = phi i8* [ %305, %301 ], [ %326, %325 ]
  %331 = getelementptr inbounds i8, i8* %304, i64 %253
  %332 = add nuw nsw i32 %303, 1
  %333 = icmp slt i32 %332, %329
  br i1 %333, label %301, label %307

334:                                              ; preds = %306, %334
  %335 = phi i8* [ %345, %334 ], [ %304, %306 ]
  %336 = phi i8* [ %344, %334 ], [ %305, %306 ]
  %337 = phi i32 [ %346, %334 ], [ %258, %306 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %335, i8* align 1 %336, i64 %253, i1 false)
  %338 = getelementptr inbounds i8, i8* %336, i64 %253
  %339 = getelementptr inbounds i8, i8* %335, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %339, i8* align 1 %338, i64 %253, i1 false)
  %340 = getelementptr inbounds i8, i8* %338, i64 %253
  %341 = getelementptr inbounds i8, i8* %339, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %341, i8* align 1 %340, i64 %253, i1 false)
  %342 = getelementptr inbounds i8, i8* %340, i64 %253
  %343 = getelementptr inbounds i8, i8* %341, i64 %254
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %343, i8* align 1 %342, i64 %253, i1 false)
  %344 = getelementptr inbounds i8, i8* %342, i64 %253
  %345 = getelementptr inbounds i8, i8* %343, i64 %254
  %346 = add i32 %337, -4
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %313, label %334
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops12SpaceToDepthIiEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !200
  %12 = load i32, i32* %8, align 8, !noalias !200
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !200
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !200
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !200
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !200
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !200
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !200
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !200
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !200
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !200
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !200
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !200
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !200
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !200
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !200
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !200
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !200
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !200
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !200
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !203

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !200
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !200
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !204

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !200
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !205

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !200
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !206
  %116 = load i32, i32* %9, align 8, !noalias !206
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !206
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !206
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !206
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !206
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !206
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !206
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !206
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !206
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !206
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !206
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !206
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !206
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !206
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !206
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !206
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !206
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !206
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !206
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !209

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !206
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !206
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !210

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !206
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !211

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !206
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %115, align 8
  %218 = icmp sgt i32 %217, 5
  %219 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 2
  %222 = getelementptr inbounds i32, i32* %220, i64 1
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %224 = bitcast [16 x i8]* %223 to i32*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %226 = select i1 %218, i32* %221, i32* %224
  %227 = select i1 %218, i32* %222, i32* %225
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  %230 = load i32, i32* %11, align 8
  %231 = icmp sgt i32 %230, 5
  %232 = load i32*, i32** %100, align 8
  %233 = select i1 %231, i32* %232, i32* %101
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %234, 0
  br i1 %237, label %238, label %271

238:                                              ; preds = %203
  %239 = getelementptr inbounds i32, i32* %232, i64 3
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = select i1 %231, i32* %239, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %236, %243
  %245 = getelementptr inbounds i32, i32* %220, i64 3
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %247 = bitcast i8* %246 to i32*
  %248 = select i1 %218, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %229, 0
  %251 = getelementptr inbounds i32, i32* %204, i64 1
  %252 = icmp sgt i32 %228, 0
  %253 = sext i32 %244 to i64
  %254 = shl nsw i64 %253, 2
  %255 = sext i32 %249 to i64
  %256 = add i32 %228, -1
  %257 = and i32 %228, 3
  %258 = icmp ult i32 %256, 3
  %259 = sub i32 %228, %257
  %260 = icmp eq i32 %257, 0
  br label %261

261:                                              ; preds = %284, %238
  %262 = phi i32 [ %236, %238 ], [ %285, %284 ]
  %263 = phi i32 [ %236, %238 ], [ %286, %284 ]
  %264 = phi i32 [ 0, %238 ], [ %288, %284 ]
  %265 = phi i32* [ %2, %238 ], [ %287, %284 ]
  br i1 %250, label %266, label %284

266:                                              ; preds = %261
  %267 = load i32, i32* %251, align 4
  %268 = load i32, i32* %224, align 8
  %269 = load i32, i32* %247, align 4
  %270 = mul nsw i32 %267, %264
  br label %290

271:                                              ; preds = %284, %203
  %272 = xor i1 %218, true
  %273 = icmp eq i32* %220, null
  %274 = or i1 %273, %272
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  %276 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %276) #9
  br label %277

277:                                              ; preds = %271, %275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %278 = xor i1 %231, true
  %279 = icmp eq i32* %232, null
  %280 = or i1 %279, %278
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %232 to i8*
  tail call void @_ZdaPv(i8* %282) #9
  br label %283

283:                                              ; preds = %277, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

284:                                              ; preds = %308, %261
  %285 = phi i32 [ %262, %261 ], [ %309, %308 ]
  %286 = phi i32 [ %263, %261 ], [ %310, %308 ]
  %287 = phi i32* [ %265, %261 ], [ %311, %308 ]
  %288 = add nuw nsw i32 %264, 1
  %289 = icmp eq i32 %288, %234
  br i1 %289, label %271, label %261

290:                                              ; preds = %308, %266
  %291 = phi i32 [ %309, %308 ], [ %262, %266 ]
  %292 = phi i32 [ %310, %308 ], [ %263, %266 ]
  %293 = phi i32 [ %312, %308 ], [ 0, %266 ]
  %294 = phi i32* [ %311, %308 ], [ %265, %266 ]
  %295 = icmp sgt i32 %292, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %290
  %297 = add nsw i32 %270, %293
  %298 = mul nsw i32 %297, %268
  %299 = mul nsw i32 %298, %269
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i32, i32* %4, i64 %300
  br label %302

302:                                              ; preds = %296, %331
  %303 = phi i32 [ %332, %331 ], [ %291, %296 ]
  %304 = phi i32 [ %335, %331 ], [ 0, %296 ]
  %305 = phi i32* [ %334, %331 ], [ %301, %296 ]
  %306 = phi i32* [ %333, %331 ], [ %294, %296 ]
  br i1 %252, label %307, label %331

307:                                              ; preds = %302
  br i1 %258, label %314, label %337

308:                                              ; preds = %331, %290
  %309 = phi i32 [ %291, %290 ], [ %332, %331 ]
  %310 = phi i32 [ %292, %290 ], [ %332, %331 ]
  %311 = phi i32* [ %294, %290 ], [ %333, %331 ]
  %312 = add nuw nsw i32 %293, 1
  %313 = icmp eq i32 %312, %229
  br i1 %313, label %284, label %290

314:                                              ; preds = %337, %307
  %315 = phi i32* [ undef, %307 ], [ %355, %337 ]
  %316 = phi i32* [ %305, %307 ], [ %356, %337 ]
  %317 = phi i32* [ %306, %307 ], [ %355, %337 ]
  br i1 %260, label %328, label %318

318:                                              ; preds = %314, %318
  %319 = phi i32* [ %325, %318 ], [ %316, %314 ]
  %320 = phi i32* [ %324, %318 ], [ %317, %314 ]
  %321 = phi i32 [ %326, %318 ], [ %257, %314 ]
  %322 = bitcast i32* %319 to i8*
  %323 = bitcast i32* %320 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %323, i64 %254, i1 false)
  %324 = getelementptr inbounds i32, i32* %320, i64 %253
  %325 = getelementptr inbounds i32, i32* %319, i64 %255
  %326 = add i32 %321, -1
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %318, !llvm.loop !212

328:                                              ; preds = %318, %314
  %329 = phi i32* [ %315, %314 ], [ %324, %318 ]
  %330 = load i32, i32* %235, align 4
  br label %331

331:                                              ; preds = %328, %302
  %332 = phi i32 [ %303, %302 ], [ %330, %328 ]
  %333 = phi i32* [ %306, %302 ], [ %329, %328 ]
  %334 = getelementptr inbounds i32, i32* %305, i64 %253
  %335 = add nuw nsw i32 %304, 1
  %336 = icmp slt i32 %335, %332
  br i1 %336, label %302, label %308

337:                                              ; preds = %307, %337
  %338 = phi i32* [ %356, %337 ], [ %305, %307 ]
  %339 = phi i32* [ %355, %337 ], [ %306, %307 ]
  %340 = phi i32 [ %357, %337 ], [ %259, %307 ]
  %341 = bitcast i32* %338 to i8*
  %342 = bitcast i32* %339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %341, i8* align 4 %342, i64 %254, i1 false)
  %343 = getelementptr inbounds i32, i32* %339, i64 %253
  %344 = getelementptr inbounds i32, i32* %338, i64 %255
  %345 = bitcast i32* %344 to i8*
  %346 = bitcast i32* %343 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 %254, i1 false)
  %347 = getelementptr inbounds i32, i32* %343, i64 %253
  %348 = getelementptr inbounds i32, i32* %344, i64 %255
  %349 = bitcast i32* %348 to i8*
  %350 = bitcast i32* %347 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %349, i8* align 4 %350, i64 %254, i1 false)
  %351 = getelementptr inbounds i32, i32* %347, i64 %253
  %352 = getelementptr inbounds i32, i32* %348, i64 %255
  %353 = bitcast i32* %352 to i8*
  %354 = bitcast i32* %351 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %353, i8* align 4 %354, i64 %254, i1 false)
  %355 = getelementptr inbounds i32, i32* %351, i64 %253
  %356 = getelementptr inbounds i32, i32* %352, i64 %255
  %357 = add i32 %340, -4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %314, label %337
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops12SpaceToDepthIlEEvRKNS_18SpaceToDepthParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::SpaceToDepthParams"* dereferenceable(4), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !213
  %12 = load i32, i32* %8, align 8, !noalias !213
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @abort() #10, !noalias !213
  unreachable

15:                                               ; preds = %5
  store i32 4, i32* %11, align 8, !alias.scope !213
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !213
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !213
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !213
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !213
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !213
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !213
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !213
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !213
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !213
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !213
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !213
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !213
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !213
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !213
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !213
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !213
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !216

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !213
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !213
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !217

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !213
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !218

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !213
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !219
  %116 = load i32, i32* %9, align 8, !noalias !219
  %117 = icmp sgt i32 %116, 4
  br i1 %117, label %118, label %119

118:                                              ; preds = %99
  tail call void @abort() #10, !noalias !219
  unreachable

119:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !219
  %120 = sub i32 4, %116
  %121 = icmp sgt i32 %120, 0
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %123 = bitcast %union.anon* %122 to [5 x i32]*
  br i1 %121, label %124, label %203

124:                                              ; preds = %119
  %125 = zext i32 %120 to i64
  %126 = icmp ult i32 %120, 8
  br i1 %126, label %196, label %127

127:                                              ; preds = %124
  %128 = and i64 %125, 4294967288
  %129 = add nsw i64 %128, -8
  %130 = lshr exact i64 %129, 3
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 7
  %133 = icmp ult i64 %129, 56
  br i1 %133, label %181, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %131, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %178, %136 ]
  %138 = phi i64 [ %135, %134 ], [ %179, %136 ]
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %140, align 8, !alias.scope !219
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %142, align 8, !alias.scope !219
  %143 = or i64 %137, 8
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %143
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !219
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !219
  %148 = or i64 %137, 16
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !219
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !219
  %153 = or i64 %137, 24
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !219
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !219
  %158 = or i64 %137, 32
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !219
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !219
  %163 = or i64 %137, 40
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !219
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !219
  %168 = or i64 %137, 48
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !219
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !219
  %173 = or i64 %137, 56
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !219
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !219
  %178 = add i64 %137, 64
  %179 = add i64 %138, -8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %136, !llvm.loop !222

181:                                              ; preds = %136, %127
  %182 = phi i64 [ 0, %127 ], [ %178, %136 ]
  %183 = icmp eq i64 %132, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %191, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %192, %184 ], [ %132, %181 ]
  %187 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %185
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %188, align 8, !alias.scope !219
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %190, align 8, !alias.scope !219
  %191 = add i64 %185, 8
  %192 = add i64 %186, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %184, !llvm.loop !223

194:                                              ; preds = %184, %181
  %195 = icmp eq i64 %128, %125
  br i1 %195, label %203, label %196

196:                                              ; preds = %194, %124
  %197 = phi i64 [ 0, %124 ], [ %128, %194 ]
  br label %198

198:                                              ; preds = %196, %198
  %199 = phi i64 [ %201, %198 ], [ %197, %196 ]
  %200 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 %199
  store i32 1, i32* %200, align 4, !alias.scope !219
  %201 = add nuw nsw i64 %199, 1
  %202 = icmp eq i64 %201, %125
  br i1 %202, label %203, label %198, !llvm.loop !224

203:                                              ; preds = %198, %194, %119
  %204 = bitcast %union.anon* %122 to i32*
  %205 = sext i32 %120 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %116, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !219
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %116 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = load i32, i32* %115, align 8
  %218 = icmp sgt i32 %217, 5
  %219 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 2
  %222 = getelementptr inbounds i32, i32* %220, i64 1
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %224 = bitcast [16 x i8]* %223 to i32*
  %225 = getelementptr inbounds [5 x i32], [5 x i32]* %123, i64 0, i64 1
  %226 = select i1 %218, i32* %221, i32* %224
  %227 = select i1 %218, i32* %222, i32* %225
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  %230 = load i32, i32* %11, align 8
  %231 = icmp sgt i32 %230, 5
  %232 = load i32*, i32** %100, align 8
  %233 = select i1 %231, i32* %232, i32* %101
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"struct.tflite::SpaceToDepthParams", %"struct.tflite::SpaceToDepthParams"* %0, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %234, 0
  br i1 %237, label %238, label %271

238:                                              ; preds = %203
  %239 = getelementptr inbounds i32, i32* %232, i64 3
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %241 = bitcast i8* %240 to i32*
  %242 = select i1 %231, i32* %239, i32* %241
  %243 = load i32, i32* %242, align 4
  %244 = mul nsw i32 %236, %243
  %245 = getelementptr inbounds i32, i32* %220, i64 3
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %247 = bitcast i8* %246 to i32*
  %248 = select i1 %218, i32* %245, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %229, 0
  %251 = getelementptr inbounds i32, i32* %204, i64 1
  %252 = icmp sgt i32 %228, 0
  %253 = sext i32 %244 to i64
  %254 = shl nsw i64 %253, 3
  %255 = sext i32 %249 to i64
  %256 = add i32 %228, -1
  %257 = and i32 %228, 3
  %258 = icmp ult i32 %256, 3
  %259 = sub i32 %228, %257
  %260 = icmp eq i32 %257, 0
  br label %261

261:                                              ; preds = %284, %238
  %262 = phi i32 [ %236, %238 ], [ %285, %284 ]
  %263 = phi i32 [ %236, %238 ], [ %286, %284 ]
  %264 = phi i32 [ 0, %238 ], [ %288, %284 ]
  %265 = phi i64* [ %2, %238 ], [ %287, %284 ]
  br i1 %250, label %266, label %284

266:                                              ; preds = %261
  %267 = load i32, i32* %251, align 4
  %268 = load i32, i32* %224, align 8
  %269 = load i32, i32* %247, align 4
  %270 = mul nsw i32 %267, %264
  br label %290

271:                                              ; preds = %284, %203
  %272 = xor i1 %218, true
  %273 = icmp eq i32* %220, null
  %274 = or i1 %273, %272
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  %276 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %276) #9
  br label %277

277:                                              ; preds = %271, %275
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %278 = xor i1 %231, true
  %279 = icmp eq i32* %232, null
  %280 = or i1 %279, %278
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %232 to i8*
  tail call void @_ZdaPv(i8* %282) #9
  br label %283

283:                                              ; preds = %277, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void

284:                                              ; preds = %308, %261
  %285 = phi i32 [ %262, %261 ], [ %309, %308 ]
  %286 = phi i32 [ %263, %261 ], [ %310, %308 ]
  %287 = phi i64* [ %265, %261 ], [ %311, %308 ]
  %288 = add nuw nsw i32 %264, 1
  %289 = icmp eq i32 %288, %234
  br i1 %289, label %271, label %261

290:                                              ; preds = %308, %266
  %291 = phi i32 [ %309, %308 ], [ %262, %266 ]
  %292 = phi i32 [ %310, %308 ], [ %263, %266 ]
  %293 = phi i32 [ %312, %308 ], [ 0, %266 ]
  %294 = phi i64* [ %311, %308 ], [ %265, %266 ]
  %295 = icmp sgt i32 %292, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %290
  %297 = add nsw i32 %270, %293
  %298 = mul nsw i32 %297, %268
  %299 = mul nsw i32 %298, %269
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i64, i64* %4, i64 %300
  br label %302

302:                                              ; preds = %296, %331
  %303 = phi i32 [ %332, %331 ], [ %291, %296 ]
  %304 = phi i32 [ %335, %331 ], [ 0, %296 ]
  %305 = phi i64* [ %334, %331 ], [ %301, %296 ]
  %306 = phi i64* [ %333, %331 ], [ %294, %296 ]
  br i1 %252, label %307, label %331

307:                                              ; preds = %302
  br i1 %258, label %314, label %337

308:                                              ; preds = %331, %290
  %309 = phi i32 [ %291, %290 ], [ %332, %331 ]
  %310 = phi i32 [ %292, %290 ], [ %332, %331 ]
  %311 = phi i64* [ %294, %290 ], [ %333, %331 ]
  %312 = add nuw nsw i32 %293, 1
  %313 = icmp eq i32 %312, %229
  br i1 %313, label %284, label %290

314:                                              ; preds = %337, %307
  %315 = phi i64* [ undef, %307 ], [ %355, %337 ]
  %316 = phi i64* [ %305, %307 ], [ %356, %337 ]
  %317 = phi i64* [ %306, %307 ], [ %355, %337 ]
  br i1 %260, label %328, label %318

318:                                              ; preds = %314, %318
  %319 = phi i64* [ %325, %318 ], [ %316, %314 ]
  %320 = phi i64* [ %324, %318 ], [ %317, %314 ]
  %321 = phi i32 [ %326, %318 ], [ %257, %314 ]
  %322 = bitcast i64* %319 to i8*
  %323 = bitcast i64* %320 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %322, i8* align 8 %323, i64 %254, i1 false)
  %324 = getelementptr inbounds i64, i64* %320, i64 %253
  %325 = getelementptr inbounds i64, i64* %319, i64 %255
  %326 = add i32 %321, -1
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %318, !llvm.loop !225

328:                                              ; preds = %318, %314
  %329 = phi i64* [ %315, %314 ], [ %324, %318 ]
  %330 = load i32, i32* %235, align 4
  br label %331

331:                                              ; preds = %328, %302
  %332 = phi i32 [ %303, %302 ], [ %330, %328 ]
  %333 = phi i64* [ %306, %302 ], [ %329, %328 ]
  %334 = getelementptr inbounds i64, i64* %305, i64 %253
  %335 = add nuw nsw i32 %304, 1
  %336 = icmp slt i32 %335, %332
  br i1 %336, label %302, label %308

337:                                              ; preds = %307, %337
  %338 = phi i64* [ %356, %337 ], [ %305, %307 ]
  %339 = phi i64* [ %355, %337 ], [ %306, %307 ]
  %340 = phi i32 [ %357, %337 ], [ %259, %307 ]
  %341 = bitcast i64* %338 to i8*
  %342 = bitcast i64* %339 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* align 8 %342, i64 %254, i1 false)
  %343 = getelementptr inbounds i64, i64* %339, i64 %253
  %344 = getelementptr inbounds i64, i64* %338, i64 %255
  %345 = bitcast i64* %344 to i8*
  %346 = bitcast i64* %343 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %346, i64 %254, i1 false)
  %347 = getelementptr inbounds i64, i64* %343, i64 %253
  %348 = getelementptr inbounds i64, i64* %344, i64 %255
  %349 = bitcast i64* %348 to i8*
  %350 = bitcast i64* %347 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* align 8 %350, i64 %254, i1 false)
  %351 = getelementptr inbounds i64, i64* %347, i64 %253
  %352 = getelementptr inbounds i64, i64* %348, i64 %255
  %353 = bitcast i64* %352 to i8*
  %354 = bitcast i64* %351 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* align 8 %354, i64 %254, i1 false)
  %355 = getelementptr inbounds i64, i64* %351, i64 %253
  %356 = getelementptr inbounds i64, i64* %352, i64 %255
  %357 = add i32 %340, -4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %314, label %337
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!65 = distinct !{!65, !66}
!66 = !{!"llvm.loop.isvectorized", i32 1}
!67 = distinct !{!67, !68}
!68 = !{!"llvm.loop.unroll.disable"}
!69 = distinct !{!69, !70, !66}
!70 = !{!"llvm.loop.unroll.runtime.disable"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!74 = distinct !{!74, !66}
!75 = distinct !{!75, !68}
!76 = distinct !{!76, !70, !66}
!77 = distinct !{!77, !68}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !66}
!84 = distinct !{!84, !66}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!87 = distinct !{!87, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!88 = distinct !{!88, !66}
!89 = distinct !{!89, !68}
!90 = distinct !{!90, !70, !66}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!93 = distinct !{!93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!94 = distinct !{!94, !66}
!95 = distinct !{!95, !68}
!96 = distinct !{!96, !70, !66}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !66}
!103 = distinct !{!103, !66}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!106 = distinct !{!106, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!107 = distinct !{!107, !66}
!108 = distinct !{!108, !68}
!109 = distinct !{!109, !70, !66}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!112 = distinct !{!112, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!113 = distinct !{!113, !66}
!114 = distinct !{!114, !68}
!115 = distinct !{!115, !70, !66}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !66}
!122 = distinct !{!122, !66}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!125 = distinct !{!125, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!126 = distinct !{!126, !66}
!127 = distinct !{!127, !68}
!128 = distinct !{!128, !70, !66}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!131 = distinct !{!131, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!132 = distinct !{!132, !66}
!133 = distinct !{!133, !68}
!134 = distinct !{!134, !70, !66}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !66}
!141 = distinct !{!141, !66}
!142 = !{!143}
!143 = distinct !{!143, !144, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!144 = distinct !{!144, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!145 = distinct !{!145, !66}
!146 = distinct !{!146, !68}
!147 = distinct !{!147, !70, !66}
!148 = !{!149}
!149 = distinct !{!149, !150, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!150 = distinct !{!150, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!151 = distinct !{!151, !66}
!152 = distinct !{!152, !68}
!153 = distinct !{!153, !70, !66}
!154 = !{!155}
!155 = distinct !{!155, !156}
!156 = distinct !{!156, !"LVerDomain"}
!157 = !{!158}
!158 = distinct !{!158, !156}
!159 = distinct !{!159, !66}
!160 = distinct !{!160, !66}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!163 = distinct !{!163, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!164 = distinct !{!164, !66}
!165 = distinct !{!165, !68}
!166 = distinct !{!166, !70, !66}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!169 = distinct !{!169, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!170 = distinct !{!170, !66}
!171 = distinct !{!171, !68}
!172 = distinct !{!172, !70, !66}
!173 = distinct !{!173, !68}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!176 = distinct !{!176, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!177 = distinct !{!177, !66}
!178 = distinct !{!178, !68}
!179 = distinct !{!179, !70, !66}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!182 = distinct !{!182, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!183 = distinct !{!183, !66}
!184 = distinct !{!184, !68}
!185 = distinct !{!185, !70, !66}
!186 = distinct !{!186, !68}
!187 = !{!188}
!188 = distinct !{!188, !189, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!189 = distinct !{!189, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!190 = distinct !{!190, !66}
!191 = distinct !{!191, !68}
!192 = distinct !{!192, !70, !66}
!193 = !{!194}
!194 = distinct !{!194, !195, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!195 = distinct !{!195, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!196 = distinct !{!196, !66}
!197 = distinct !{!197, !68}
!198 = distinct !{!198, !70, !66}
!199 = distinct !{!199, !68}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!202 = distinct !{!202, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!203 = distinct !{!203, !66}
!204 = distinct !{!204, !68}
!205 = distinct !{!205, !70, !66}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!208 = distinct !{!208, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!209 = distinct !{!209, !66}
!210 = distinct !{!210, !68}
!211 = distinct !{!211, !70, !66}
!212 = distinct !{!212, !68}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!215 = distinct !{!215, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!216 = distinct !{!216, !66}
!217 = distinct !{!217, !68}
!218 = distinct !{!218, !70, !66}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!221 = distinct !{!221, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!222 = distinct !{!222, !66}
!223 = distinct !{!223, !68}
!224 = distinct !{!224, !70, !66}
!225 = distinct !{!225, !68}
