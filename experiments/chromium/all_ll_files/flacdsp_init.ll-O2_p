; ModuleID = '../../third_party/ffmpeg/libavcodec/x86/flacdsp_init.c'
source_filename = "../../third_party/ffmpeg/libavcodec/x86/flacdsp_init.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FLACDSPContext = type { [4 x void (i8**, i32**, i32, i32, i32)*], void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32)*, void (i32*, i32*, i32, i32, i32*, i32)*, void (i32*, i32*, i32, i32, i32*, i32)* }

@switch.table.ff_flacdsp_init_x86 = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep4_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep6_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep8_16_sse2], align 8
@switch.table.ff_flacdsp_init_x86.1 = private unnamed_addr constant [7 x void (i8**, i32**, i32, i32, i32)*] [void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep4_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep6_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep2_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep8_32_sse2], align 8

; Function Attrs: cold nounwind optsize ssp uwtable
define hidden void @ff_flacdsp_init_x86(%struct.FLACDSPContext* nocapture, i32, i32, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @av_get_cpu_flags() #2
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  switch i32 %1, label %45 [
    i32 1, label %9
    i32 2, label %27
  ]

9:                                                ; preds = %8
  %10 = add i32 %2, -2
  %11 = icmp ult i32 %10, 7
  br i1 %11, label %12, label %23

12:                                               ; preds = %9
  %13 = trunc i32 %10 to i8
  %14 = lshr i8 85, %13
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = sext i32 %10 to i64
  %19 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init_x86, i64 0, i64 %18
  %20 = bitcast void (i8**, i32**, i32, i32, i32)** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %struct.FLACDSPContext* %0 to i64*
  store i64 %21, i64* %22, align 8
  br label %23

23:                                               ; preds = %12, %9, %17
  %24 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 1
  %25 = bitcast void (i8**, i32**, i32, i32, i32)** %24 to <2 x void (i8**, i32**, i32, i32, i32)*>*
  store <2 x void (i8**, i32**, i32, i32, i32)*> <void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_ls_16_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_rs_16_sse2>, <2 x void (i8**, i32**, i32, i32, i32)*>* %25, align 8
  %26 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 3
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_ms_16_sse2, void (i8**, i32**, i32, i32, i32)** %26, align 8
  br label %45

27:                                               ; preds = %8
  %28 = add i32 %2, -2
  %29 = icmp ult i32 %28, 7
  br i1 %29, label %30, label %41

30:                                               ; preds = %27
  %31 = trunc i32 %28 to i8
  %32 = lshr i8 85, %31
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = sext i32 %28 to i64
  %37 = getelementptr inbounds [7 x void (i8**, i32**, i32, i32, i32)*], [7 x void (i8**, i32**, i32, i32, i32)*]* @switch.table.ff_flacdsp_init_x86.1, i64 0, i64 %36
  %38 = bitcast void (i8**, i32**, i32, i32, i32)** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %struct.FLACDSPContext* %0 to i64*
  store i64 %39, i64* %40, align 8
  br label %41

41:                                               ; preds = %30, %27, %35
  %42 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 1
  %43 = bitcast void (i8**, i32**, i32, i32, i32)** %42 to <2 x void (i8**, i32**, i32, i32, i32)*>*
  store <2 x void (i8**, i32**, i32, i32, i32)*> <void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_ls_32_sse2, void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_rs_32_sse2>, <2 x void (i8**, i32**, i32, i32, i32)*>* %43, align 8
  %44 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 3
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_ms_32_sse2, void (i8**, i32**, i32, i32, i32)** %44, align 8
  br label %45

45:                                               ; preds = %8, %4, %23, %41
  %46 = and i32 %5, 256
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 2
  store void (i32*, i32*, i32, i32, i32)* @ff_flac_lpc_32_sse4, void (i32*, i32*, i32, i32, i32)** %49, align 8
  br label %50

50:                                               ; preds = %45, %48
  %51 = and i32 %5, 16384
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  switch i32 %1, label %65 [
    i32 1, label %54
    i32 2, label %58
  ]

54:                                               ; preds = %53
  %55 = icmp eq i32 %2, 8
  br i1 %55, label %56, label %65

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 0
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep8_16_avx, void (i8**, i32**, i32, i32, i32)** %57, align 8
  br label %65

58:                                               ; preds = %53
  switch i32 %2, label %65 [
    i32 4, label %59
    i32 6, label %61
    i32 8, label %63
  ]

59:                                               ; preds = %58
  %60 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 0
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep4_32_avx, void (i8**, i32**, i32, i32, i32)** %60, align 8
  br label %65

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 0
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep6_32_avx, void (i8**, i32**, i32, i32, i32)** %62, align 8
  br label %65

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 0, i64 0
  store void (i8**, i32**, i32, i32, i32)* @ff_flac_decorrelate_indep8_32_avx, void (i8**, i32**, i32, i32, i32)** %64, align 8
  br label %65

65:                                               ; preds = %58, %53, %50, %56, %54, %59, %63, %61
  %66 = and i32 %5, 1024
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.FLACDSPContext, %struct.FLACDSPContext* %0, i64 0, i32 2
  store void (i32*, i32*, i32, i32, i32)* @ff_flac_lpc_32_xop, void (i32*, i32*, i32, i32, i32)** %69, align 8
  br label %70

70:                                               ; preds = %65, %68
  ret void
}

declare i32 @av_get_cpu_flags() local_unnamed_addr #1

declare void @ff_flac_decorrelate_indep2_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep4_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep6_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep8_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_ls_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_rs_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_ms_16_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep2_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep4_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep6_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep8_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_ls_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_rs_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_ms_32_sse2(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_lpc_32_sse4(i32*, i32*, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep8_16_avx(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep4_32_avx(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep6_32_avx(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_decorrelate_indep8_32_avx(i8**, i32**, i32, i32, i32) #1

declare void @ff_flac_lpc_32_xop(i32*, i32*, i32, i32, i32) #1

attributes #0 = { cold nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
