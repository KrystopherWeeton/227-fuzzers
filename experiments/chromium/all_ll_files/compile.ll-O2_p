; ModuleID = '../../third_party/re2/src/re2/compile.cc'
source_filename = "../../third_party/re2/src/re2/compile.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__split_buffer" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair" }
%"struct.re2::WalkState" = type { %"class.re2::Regexp"*, i32, %"struct.re2::Frag", %"struct.re2::Frag", %"struct.re2::Frag", %"struct.re2::Frag"* }
%"class.re2::Regexp" = type { i8, i8, i16, i16, i16, %union.anon.46, %"class.re2::Regexp"*, %union.anon.47 }
%union.anon.46 = type { %"class.re2::Regexp"** }
%union.anon.47 = type { %struct.anon.49 }
%struct.anon.49 = type { i32, %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.re2::WalkState"** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.re2::Prog" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i64, i32, i32, i32, [8 x i32], [4 x i8], %"class.re2::PODArray", %"class.re2::PODArray.9", %"class.re2::PODArray.15", i64, %"class.re2::DFA"*, %"class.re2::DFA"*, [256 x i8], %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::PODArray" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type <{ %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.7" = type { i16* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.re2::PODArray<unsigned short>::Deleter" }
%"struct.re2::PODArray<unsigned short>::Deleter" = type { i32 }
%"class.re2::PODArray.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type <{ %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.re2::PODArray<unsigned char>::Deleter" }
%"struct.re2::PODArray<unsigned char>::Deleter" = type { i32 }
%"class.re2::DFA" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::PODArray.9" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type <{ %"struct.std::__1::__compressed_pair_elem.12", %"struct.std::__1::__compressed_pair_elem.13", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.re2::Prog::Inst"* }
%"class.re2::Prog::Inst" = type { i32, %union.anon }
%union.anon = type { i32 }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.re2::PODArray<re2::Prog::Inst>::Deleter" }
%"struct.re2::PODArray<re2::Prog::Inst>::Deleter" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.21", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.36", [4 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23", %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { float }
%"struct.re2::Frag" = type <{ i32, %"struct.re2::PatchList", i8, [3 x i8] }>
%"struct.re2::PatchList" = type { i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.re2::Compiler" = type <{ %"class.re2::Regexp::Walker", %"class.re2::Prog"*, i8, [3 x i8], i32, i8, [7 x i8], %"class.re2::PODArray.9", i32, i32, i64, %"class.std::__1::unordered_map", %"struct.re2::Frag", i32, [4 x i8] }>
%"class.re2::Regexp::Walker" = type { i32 (...)**, %"class.std::__1::stack", i8, i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i64* }
%"class.std::__1::tuple.72" = type { i8 }
%struct.anon = type { i8, i8, i16 }
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.42 }
%struct.anon.42 = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.re2::CharClass" = type <{ i8, [3 x i8], i32, %"struct.re2::RuneRange"*, i32, [4 x i8] }>
%"struct.re2::RuneRange" = type { i32, i32 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::SparseSetT" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.79" = type { %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"struct.re2::WalkState"**, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZN10LogMessageD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEED2Ev = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEED0Ev = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEE8PreVisitEPS0_S2_Pb = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEE9PostVisitEPS0_S2_S2_PS2_i = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEE4CopyES2_ = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEE5ResetEv = comdat any

$_ZNSt3__112__deque_baseIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE5clearEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN3re26Regexp6WalkerINS_4FragEE12WalkInternalEPS0_S2_b = comdat any

$_ZNSt3__15dequeIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZTVN3re26Regexp6WalkerINS_4FragEEE = comdat any

@_ZTVN3re28CompilerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Compiler"*)* @_ZN3re28CompilerD2Ev to i8*), i8* bitcast (void (%"class.re2::Compiler"*)* @_ZN3re28CompilerD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Compiler"*, %"class.re2::Regexp"*, i64, i64, i8*)* @_ZN3re28Compiler8PreVisitEPNS_6RegexpENS_4FragEPb to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Compiler"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)* @_ZN3re28Compiler9PostVisitEPNS_6RegexpENS_4FragES3_PS3_i to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Compiler"*, i64, i64)* @_ZN3re28Compiler4CopyENS_4FragE to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Compiler"*, %"class.re2::Regexp"*, i64, i64)* @_ZN3re28Compiler10ShortVisitEPNS_6RegexpENS_4FragE to i8*)] }, align 8
@.str = private unnamed_addr constant [41 x i8] c"../../third_party/re2/src/re2/compile.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"should never happen\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Compiler::Copy called!\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"No ranges in char class\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Missing case in Compiler: \00", align 1
@__const._ZN3re28Compiler10CompileSetEPNS_6RegexpENS_3RE26AnchorEl.c = private unnamed_addr constant <{ { i32 (...)**, %"class.std::__1::stack", i8, [3 x i8], i32 }, %"class.re2::Prog"*, i8, [3 x i8], i32, i8, [7 x i8], %"class.re2::PODArray.9", i32, i32, i64, %"class.std::__1::unordered_map", %"struct.re2::Frag", i32, [4 x i8] }> <{ { i32 (...)**, %"class.std::__1::stack", i8, [3 x i8], i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::stack" { %"class.std::__1::deque" { %"class.std::__1::__deque_base" { %"struct.std::__1::__split_buffer" { %"struct.re2::WalkState"** inttoptr (i64 -6148914691236517206 to %"struct.re2::WalkState"**), %"struct.re2::WalkState"** inttoptr (i64 -6148914691236517206 to %"struct.re2::WalkState"**), %"struct.re2::WalkState"** inttoptr (i64 -6148914691236517206 to %"struct.re2::WalkState"**), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.re2::WalkState"** inttoptr (i64 -6148914691236517206 to %"struct.re2::WalkState"**) } } }, i64 -6148914691236517206, %"class.std::__1::__compressed_pair.1" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, %"class.re2::Prog"* inttoptr (i64 -6148914691236517206 to %"class.re2::Prog"*), i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.re2::PODArray.9" { %"class.std::__1::unique_ptr.10" { %"class.std::__1::__compressed_pair.11" <{ %"struct.std::__1::__compressed_pair_elem.12" { %"class.re2::Prog::Inst"* inttoptr (i64 -6148914691236517206 to %"class.re2::Prog::Inst"*) }, %"struct.std::__1::__compressed_pair_elem.13" { %"struct.re2::PODArray<re2::Prog::Inst>::Deleter" { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.21" { %"class.std::__1::__compressed_pair.22" { %"struct.std::__1::__compressed_pair_elem.23" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.24" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.25" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.29" { %"struct.std::__1::__compressed_pair_elem.30" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.34" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.36" { %"struct.std::__1::__compressed_pair_elem.37" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"struct.re2::Frag" <{ i32 -1431655766, %"struct.re2::PatchList" { i32 -1431655766, i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA" }>, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.5 = private unnamed_addr constant [13 x i8] c"hello, world\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3re26Regexp6WalkerINS_4FragEEE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerINS_4FragEED2Ev to i8*), i8* bitcast (void (%"class.re2::Regexp::Walker"*)* @_ZN3re26Regexp6WalkerINS_4FragEED0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)* @_ZN3re26Regexp6WalkerINS_4FragEE8PreVisitEPS0_S2_Pb to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)* @_ZN3re26Regexp6WalkerINS_4FragEE9PostVisitEPS0_S2_S2_PS2_i to i8*), i8* bitcast ({ i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)* @_ZN3re26Regexp6WalkerINS_4FragEE4CopyES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [43 x i8] c"../../third_party/re2/src/re2/walker-inl.h\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Stack not empty.\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"Walk NULL\00", align 1

@_ZN3re28CompilerC1Ev = hidden unnamed_addr alias void (%"class.re2::Compiler"*), void (%"class.re2::Compiler"*)* @_ZN3re28CompilerC2Ev
@_ZN3re28CompilerD1Ev = hidden unnamed_addr alias void (%"class.re2::Compiler"*), void (%"class.re2::Compiler"*)* @_ZN3re28CompilerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28CompilerC2Ev(%"class.re2::Compiler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::stack"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 49, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re28CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7
  %6 = bitcast %"class.re2::PODArray.9"* %5 to i64*
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.36"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1
  %14 = bitcast %"struct.re2::PatchList"* %13 to i64*
  store i64 0, i64* %14, align 4
  %15 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 2
  store i8 0, i8* %15, align 4
  %16 = tail call i8* @_Znwm(i64 424) #17
  %17 = bitcast i8* %16 to %"class.re2::Prog"*
  tail call void @_ZN3re24ProgC1Ev(%"class.re2::Prog"* nonnull %17) #16
  %18 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 1
  %19 = bitcast %"class.re2::Prog"** %18 to i8**
  store i8* %16, i8** %19, align 8
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 8
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 9
  store i32 1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 10
  store i64 0, i64* %25, align 8
  %26 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %28, align 8
  %30 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %29, i64 %27
  tail call void @_ZN3re24Prog4Inst8InitFailEv(%"class.re2::Prog::Inst"* %30) #16
  store i32 0, i32* %24, align 4
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN3re24ProgC1Ev(%"class.re2::Prog"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, %1
  %10 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %2, %6
  store i8 1, i8* %3, align 8
  br label %62

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %9, %17
  br i1 %18, label %19, label %59

19:                                               ; preds = %14
  %20 = icmp eq i32 %17, 0
  %21 = select i1 %20, i32 8, i32 %17
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi i32 [ %21, %19 ], [ %25, %22 ]
  %24 = icmp sgt i32 %9, %23
  %25 = shl nsw i32 %23, 1
  br i1 %24, label %22, label %26

26:                                               ; preds = %22
  %27 = icmp slt i32 %23, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  %31 = shl nsw i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = ptrtoint i8* %32 to i64
  %34 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %34, align 8
  %36 = icmp eq %"class.re2::Prog::Inst"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = sext i32 %8 to i64
  br label %43

39:                                               ; preds = %29
  %40 = bitcast %"class.re2::Prog::Inst"* %35 to i8*
  %41 = sext i32 %8 to i64
  %42 = shl nsw i64 %41, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %40, i64 %42, i1 false)
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i64 [ %38, %37 ], [ %41, %39 ]
  %45 = bitcast i8* %32 to %"class.re2::Prog::Inst"*
  %46 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %45, i64 %44
  %47 = bitcast %"class.re2::Prog::Inst"* %46 to i8*
  %48 = sub nsw i32 %23, %8
  %49 = sext i32 %48 to i64
  %50 = shl nsw i64 %49, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 %50, i1 false)
  %51 = bitcast %"class.re2::PODArray.9"* %15 to i64*
  store i64 %33, i64* %51, align 8
  br i1 %36, label %56, label %52

52:                                               ; preds = %43
  %53 = bitcast %"class.re2::Prog::Inst"* %35 to i8*
  tail call void @_ZdlPv(i8* %53) #17
  %54 = load i32, i32* %7, align 8
  %55 = add nsw i32 %54, %1
  br label %56

56:                                               ; preds = %52, %43
  %57 = phi i32 [ %55, %52 ], [ %9, %43 ]
  %58 = phi i32 [ %54, %52 ], [ %8, %43 ]
  store i32 %23, i32* %16, align 4
  br label %59

59:                                               ; preds = %56, %14
  %60 = phi i32 [ %57, %56 ], [ %9, %14 ]
  %61 = phi i32 [ %58, %56 ], [ %8, %14 ]
  store i32 %60, i32* %7, align 8
  br label %62

62:                                               ; preds = %59, %13
  %63 = phi i32 [ -1, %13 ], [ %61, %59 ]
  ret i32 %63
}

declare void @_ZN3re24Prog4Inst8InitFailEv(%"class.re2::Prog::Inst"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28CompilerD2Ev(%"class.re2::Compiler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re28CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 1
  %4 = load %"class.re2::Prog"*, %"class.re2::Prog"** %3, align 8
  %5 = icmp eq %"class.re2::Prog"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3re24ProgD1Ev(%"class.re2::Prog"* nonnull %4) #16
  %7 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #17
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.std::__1::__hash_node_base"* [ %15, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  %17 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %17, label %18, label %12

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base"** %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = bitcast %"struct.std::__1::__hash_node_base"** %20 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %25, align 8
  store %"class.re2::Prog::Inst"* null, %"class.re2::Prog::Inst"** %25, align 8
  %27 = icmp eq %"class.re2::Prog::Inst"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.re2::Prog::Inst"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #17
  br label %30

30:                                               ; preds = %24, %28
  %31 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerINS_4FragEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerINS_4FragEE5ResetEv(%"class.re2::Regexp::Walker"* %31) #16
  %32 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %32, align 8
  %34 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = udiv i64 %35, 56
  %37 = urem i64 %35, 56
  %38 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  %39 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %40 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %39, align 8
  %41 = icmp eq %"struct.re2::WalkState"** %40, %33
  %42 = ptrtoint %"struct.re2::WalkState"** %40 to i64
  %43 = ptrtoint %"struct.re2::WalkState"** %33 to i64
  br i1 %41, label %44, label %46

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %58

46:                                               ; preds = %30
  %47 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %38, align 8
  %48 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %47, i64 %37
  %49 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %35
  %52 = udiv i64 %51, 56
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %52
  %54 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, align 8
  %55 = urem i64 %51, 56
  %56 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %54, i64 %55
  %57 = icmp eq %"struct.re2::WalkState"* %56, %48
  br i1 %57, label %58, label %64

58:                                               ; preds = %77, %46, %44
  %59 = phi i64* [ %45, %44 ], [ %49, %46 ], [ %49, %77 ]
  store i64 0, i64* %59, align 8
  %60 = bitcast %"struct.re2::WalkState"*** %39 to i64*
  %61 = sub i64 %42, %43
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %82, label %95

64:                                               ; preds = %46, %77
  %65 = phi %"struct.re2::WalkState"* [ %80, %77 ], [ %48, %46 ]
  %66 = phi %"struct.re2::WalkState"** [ %79, %77 ], [ %38, %46 ]
  %67 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %65, i64 1
  %68 = ptrtoint %"struct.re2::WalkState"* %67 to i64
  %69 = bitcast %"struct.re2::WalkState"** %66 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 4032
  br i1 %72, label %73, label %77

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %66, i64 1
  %75 = bitcast %"struct.re2::WalkState"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %73, %64
  %78 = phi i64 [ %76, %73 ], [ %68, %64 ]
  %79 = phi %"struct.re2::WalkState"** [ %74, %73 ], [ %66, %64 ]
  %80 = inttoptr i64 %78 to %"struct.re2::WalkState"*
  %81 = icmp eq %"struct.re2::WalkState"* %56, %80
  br i1 %81, label %58, label %64

82:                                               ; preds = %58, %82
  %83 = phi %"struct.re2::WalkState"** [ %87, %82 ], [ %33, %58 ]
  %84 = bitcast %"struct.re2::WalkState"** %83 to i8**
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #17
  %86 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %32, align 8
  %87 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %86, i64 1
  store %"struct.re2::WalkState"** %87, %"struct.re2::WalkState"*** %32, align 8
  %88 = load i64, i64* %60, align 8
  %89 = ptrtoint %"struct.re2::WalkState"** %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp ugt i64 %91, 2
  br i1 %92, label %82, label %93

93:                                               ; preds = %82
  %94 = inttoptr i64 %88 to %"struct.re2::WalkState"**
  br label %95

95:                                               ; preds = %93, %58
  %96 = phi %"struct.re2::WalkState"** [ %40, %58 ], [ %94, %93 ]
  %97 = phi %"struct.re2::WalkState"** [ %33, %58 ], [ %87, %93 ]
  %98 = phi i64 [ %62, %58 ], [ %91, %93 ]
  switch i64 %98, label %102 [
    i64 1, label %100
    i64 2, label %99
  ]

99:                                               ; preds = %95
  br label %100

100:                                              ; preds = %95, %99
  %101 = phi i64 [ 56, %99 ], [ 28, %95 ]
  store i64 %101, i64* %34, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq %"struct.re2::WalkState"** %97, %96
  br i1 %103, label %122, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.re2::WalkState"** [ %108, %104 ], [ %97, %102 ]
  %106 = bitcast %"struct.re2::WalkState"** %105 to i8**
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #17
  %108 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %105, i64 1
  %109 = icmp eq %"struct.re2::WalkState"** %108, %96
  br i1 %109, label %110, label %104

110:                                              ; preds = %104
  %111 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %32, align 8
  %112 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %39, align 8
  %113 = icmp eq %"struct.re2::WalkState"** %112, %111
  br i1 %113, label %122, label %114

114:                                              ; preds = %110
  %115 = ptrtoint %"struct.re2::WalkState"** %111 to i64
  %116 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %112, i64 -1
  %117 = ptrtoint %"struct.re2::WalkState"** %116 to i64
  %118 = sub i64 %117, %115
  %119 = lshr i64 %118, 3
  %120 = xor i64 %119, -1
  %121 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %112, i64 %120
  store %"struct.re2::WalkState"** %121, %"struct.re2::WalkState"*** %39, align 8
  br label %122

122:                                              ; preds = %114, %110, %102
  %123 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %123, align 8
  %125 = icmp eq %"struct.re2::WalkState"** %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = bitcast %"struct.re2::WalkState"** %124 to i8*
  tail call void @_ZdlPv(i8* %127) #17
  br label %128

128:                                              ; preds = %122, %126
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3re24ProgD1Ev(%"class.re2::Prog"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28CompilerD0Ev(%"class.re2::Compiler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3re28CompilerD2Ev(%"class.re2::Compiler"* %0) #16
  %2 = bitcast %"class.re2::Compiler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler7NoMatchEv(%"class.re2::Compiler"* nocapture readnone) local_unnamed_addr #6 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to i32*
  store i32 0, i32* %3, align 8
  %4 = bitcast { i64, i64 }* %2 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = bitcast i8* %5 to i64*
  store i64 0, i64* %6, align 4
  %7 = getelementptr inbounds i8, i8* %4, i64 12
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = insertvalue { i64, i64 } undef, i64 %9, 0
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = insertvalue { i64, i64 } %10, i64 %12, 1
  ret { i64, i64 } %13
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* nocapture readonly, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca %"struct.re2::Frag", align 8
  %10 = alloca %"struct.re2::Frag", align 8
  %11 = bitcast %"struct.re2::Frag"* %9 to i64*
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1, i32 1
  %13 = bitcast i32* %12 to i64*
  store i64 %2, i64* %13, align 8
  %14 = bitcast %"struct.re2::Frag"* %10 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %10, i64 0, i32 1, i32 1
  %16 = bitcast i32* %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = trunc i64 %1 to i32
  %18 = icmp eq i32 %17, 0
  %19 = trunc i64 %3 to i32
  %20 = icmp eq i32 %19, 0
  %21 = or i1 %18, %20
  %22 = lshr i64 %1, 32
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %4, 32
  %25 = trunc i64 %24 to i8
  %26 = lshr i64 %2, 32
  %27 = trunc i64 %26 to i8
  br i1 %21, label %28, label %35

28:                                               ; preds = %5
  %29 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  %30 = bitcast <2 x i64>* %6 to i32*
  store i32 0, i32* %30, align 16
  %31 = getelementptr inbounds i8, i8* %29, i64 4
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 4
  %33 = getelementptr inbounds i8, i8* %29, i64 12
  store i8 0, i8* %33, align 4
  %34 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  store <2 x i64> %34, <2 x i64>* %7, align 16
  br label %162

35:                                               ; preds = %5
  %36 = shl i64 %1, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %38, align 8
  %40 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %37, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 7
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %80

44:                                               ; preds = %35
  %45 = shl i32 %17, 1
  %46 = icmp eq i32 %45, %23
  %47 = icmp ult i32 %41, 16
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %80

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1
  %51 = bitcast %"struct.re2::PatchList"* %50 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %77, label %55

55:                                               ; preds = %49
  %56 = shl i32 %19, 4
  br label %57

57:                                               ; preds = %74, %55
  %58 = phi i32 [ %53, %55 ], [ %75, %74 ]
  %59 = lshr i32 %58, 1
  %60 = zext i32 %59 to i64
  %61 = and i32 %58, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %60, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  store i32 %19, i32* %64, align 4
  br label %74

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %60, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = lshr i32 %68, 4
  %70 = and i32 %68, 8
  %71 = or i32 %70, %56
  %72 = and i32 %68, 7
  %73 = or i32 %71, %72
  store i32 %73, i32* %67, align 4
  br label %74

74:                                               ; preds = %66, %63
  %75 = phi i32 [ %65, %63 ], [ %69, %66 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %57

77:                                               ; preds = %74, %49
  %78 = bitcast <2 x i64>* %7 to i8*
  %79 = bitcast %"struct.re2::Frag"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %78, i8* nonnull align 8 %79, i64 16, i1 false)
  br label %162

80:                                               ; preds = %44, %35
  %81 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %123, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %10, i64 0, i32 1
  %86 = bitcast %"struct.re2::PatchList"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %112, label %90

90:                                               ; preds = %84
  %91 = shl i32 %17, 4
  br label %92

92:                                               ; preds = %109, %90
  %93 = phi i32 [ %88, %90 ], [ %110, %109 ]
  %94 = lshr i32 %93, 1
  %95 = zext i32 %94 to i64
  %96 = and i32 %93, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %95, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  store i32 %17, i32* %99, align 4
  br label %109

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %95, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = lshr i32 %103, 4
  %105 = and i32 %103, 8
  %106 = or i32 %105, %91
  %107 = and i32 %103, 7
  %108 = or i32 %106, %107
  store i32 %108, i32* %102, align 4
  br label %109

109:                                              ; preds = %101, %98
  %110 = phi i32 [ %100, %98 ], [ %104, %101 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %92

112:                                              ; preds = %109, %84
  %113 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1
  %114 = bitcast %"struct.re2::PatchList"* %113 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = and i8 %25, 1
  %117 = and i8 %116, %27
  %118 = bitcast <2 x i64>* %7 to i32*
  store i32 %19, i32* %118, align 16
  %119 = bitcast <2 x i64>* %7 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 4
  %121 = bitcast i8* %120 to i64*
  store i64 %115, i64* %121, align 4
  %122 = getelementptr inbounds i8, i8* %119, i64 12
  store i8 %117, i8* %122, align 4
  br label %162

123:                                              ; preds = %80
  %124 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1
  %125 = bitcast %"struct.re2::PatchList"* %124 to i64*
  %126 = load i64, i64* %125, align 4
  %127 = trunc i64 %126 to i32
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %151, label %129

129:                                              ; preds = %123
  %130 = shl i32 %19, 4
  br label %131

131:                                              ; preds = %148, %129
  %132 = phi i32 [ %127, %129 ], [ %149, %148 ]
  %133 = lshr i32 %132, 1
  %134 = zext i32 %133 to i64
  %135 = and i32 %132, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %134, i32 1, i32 0
  %139 = load i32, i32* %138, align 4
  store i32 %19, i32* %138, align 4
  br label %148

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %39, i64 %134, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = lshr i32 %142, 4
  %144 = and i32 %142, 8
  %145 = or i32 %144, %130
  %146 = and i32 %142, 7
  %147 = or i32 %145, %146
  store i32 %147, i32* %141, align 4
  br label %148

148:                                              ; preds = %140, %137
  %149 = phi i32 [ %139, %137 ], [ %143, %140 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %131

151:                                              ; preds = %148, %123
  %152 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %10, i64 0, i32 1
  %153 = bitcast %"struct.re2::PatchList"* %152 to i64*
  %154 = load i64, i64* %153, align 4
  %155 = and i8 %27, 1
  %156 = and i8 %155, %25
  %157 = bitcast <2 x i64>* %7 to i32*
  store i32 %17, i32* %157, align 16
  %158 = bitcast <2 x i64>* %7 to i8*
  %159 = getelementptr inbounds i8, i8* %158, i64 4
  %160 = bitcast i8* %159 to i64*
  store i64 %154, i64* %160, align 4
  %161 = getelementptr inbounds i8, i8* %158, i64 12
  store i8 %156, i8* %161, align 4
  br label %162

162:                                              ; preds = %77, %112, %151, %28
  %163 = getelementptr inbounds <2 x i64>, <2 x i64>* %7, i64 0, i64 0
  %164 = load i64, i64* %163, align 16
  %165 = insertvalue { i64, i64 } undef, i64 %164, 0
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = insertvalue { i64, i64 } %165, i64 %167, 1
  ret { i64, i64 } %168
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler3AltENS_4FragES1_(%"class.re2::Compiler"* nocapture, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca %"struct.re2::Frag", align 8
  %10 = alloca %"struct.re2::Frag", align 8
  %11 = bitcast %"struct.re2::Frag"* %9 to i64*
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1, i32 1
  %13 = bitcast i32* %12 to i64*
  store i64 %2, i64* %13, align 8
  %14 = bitcast %"struct.re2::Frag"* %10 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %10, i64 0, i32 1, i32 1
  %16 = bitcast i32* %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = trunc i64 %1 to i32
  %18 = icmp eq i32 %17, 0
  %19 = trunc i64 %3 to i32
  br i1 %18, label %20, label %23

20:                                               ; preds = %5
  %21 = bitcast <2 x i64>* %7 to i8*
  %22 = bitcast %"struct.re2::Frag"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %21, i8* nonnull align 8 %22, i64 16, i1 false)
  br label %86

23:                                               ; preds = %5
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = bitcast <2 x i64>* %7 to i8*
  %27 = bitcast %"struct.re2::Frag"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %26, i8* nonnull align 8 %27, i64 16, i1 false)
  br label %86

28:                                               ; preds = %23
  %29 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32)
  %33 = bitcast <2 x i64>* %6 to i32*
  store i32 0, i32* %33, align 16
  %34 = getelementptr inbounds i8, i8* %32, i64 4
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 4
  %36 = getelementptr inbounds i8, i8* %32, i64 12
  store i8 0, i8* %36, align 4
  %37 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32)
  store <2 x i64> %37, <2 x i64>* %7, align 16
  br label %86

38:                                               ; preds = %28
  %39 = sext i32 %29 to i64
  %40 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %42 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %41, i64 %39
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %42, i32 %17, i32 %19) #16
  %43 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %44 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1
  %45 = bitcast %"struct.re2::PatchList"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %10, i64 0, i32 1
  %48 = bitcast %"struct.re2::PatchList"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = trunc i64 %46 to i32
  %51 = trunc i64 %49 to i32
  %52 = lshr i64 %49, 32
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %71, label %54

54:                                               ; preds = %38
  %55 = lshr i64 %46, 32
  %56 = icmp eq i32 %51, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %54
  %58 = lshr i64 %46, 33
  %59 = and i64 %46, 4294967296
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %43, i64 %58, i32 1, i32 0
  store i32 %51, i32* %62, align 4
  br label %71

63:                                               ; preds = %57
  %64 = shl i32 %51, 4
  %65 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %43, i64 %58, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 8
  %68 = or i32 %67, %64
  %69 = and i32 %66, 7
  %70 = or i32 %68, %69
  store i32 %70, i32* %65, align 4
  br label %71

71:                                               ; preds = %38, %54, %61, %63
  %72 = phi i64 [ %49, %38 ], [ %46, %54 ], [ %46, %63 ], [ %46, %61 ]
  %73 = phi i64 [ %52, %38 ], [ %55, %54 ], [ %52, %63 ], [ %52, %61 ]
  %74 = shl nuw i64 %73, 32
  %75 = and i64 %72, 4294967295
  %76 = or i64 %74, %75
  %77 = or i64 %4, %2
  %78 = lshr i64 %77, 32
  %79 = trunc i64 %78 to i8
  %80 = and i8 %79, 1
  %81 = bitcast <2 x i64>* %7 to i32*
  store i32 %29, i32* %81, align 16
  %82 = bitcast <2 x i64>* %7 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 4
  %84 = bitcast i8* %83 to i64*
  store i64 %76, i64* %84, align 4
  %85 = getelementptr inbounds i8, i8* %82, i64 12
  store i8 %80, i8* %85, align 4
  br label %86

86:                                               ; preds = %31, %71, %25, %20
  %87 = getelementptr inbounds <2 x i64>, <2 x i64>* %7, i64 0, i64 0
  %88 = load i64, i64* %87, align 16
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = insertvalue { i64, i64 } %89, i64 %91, 1
  ret { i64, i64 } %92
}

declare void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler4PlusENS_4FragEb(%"class.re2::Compiler"* nocapture, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"struct.re2::Frag", align 8
  %8 = bitcast %"struct.re2::Frag"* %7 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %7, i64 0, i32 1, i32 1
  %10 = bitcast i32* %9 to i64*
  store i64 %2, i64* %10, align 8
  %11 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %12 = icmp slt i32 %11, 0
  %13 = trunc i64 %1 to i32
  %14 = lshr i64 %2, 32
  %15 = trunc i64 %14 to i8
  br i1 %12, label %16, label %28

16:                                               ; preds = %4
  %17 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 12
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  br label %82

28:                                               ; preds = %4
  %29 = sext i32 %11 to i64
  %30 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %30, align 8
  %32 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %31, i64 %29
  br i1 %3, label %33, label %35

33:                                               ; preds = %28
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %32, i32 0, i32 %13) #16
  %34 = shl i32 %11, 1
  br label %38

35:                                               ; preds = %28
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %32, i32 %13, i32 0) #16
  %36 = shl i32 %11, 1
  %37 = or i32 %36, 1
  br label %38

38:                                               ; preds = %35, %33
  %39 = phi i32 [ %37, %35 ], [ %34, %33 ]
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = or i64 %41, %40
  %43 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %30, align 8
  %44 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %7, i64 0, i32 1
  %45 = bitcast %"struct.re2::PatchList"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %71, label %49

49:                                               ; preds = %38
  %50 = shl i32 %11, 4
  br label %51

51:                                               ; preds = %68, %49
  %52 = phi i32 [ %47, %49 ], [ %69, %68 ]
  %53 = lshr i32 %52, 1
  %54 = zext i32 %53 to i64
  %55 = and i32 %52, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %43, i64 %54, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  store i32 %11, i32* %58, align 4
  br label %68

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %43, i64 %54, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = lshr i32 %62, 4
  %64 = and i32 %62, 8
  %65 = or i32 %64, %50
  %66 = and i32 %62, 7
  %67 = or i32 %65, %66
  store i32 %67, i32* %61, align 4
  br label %68

68:                                               ; preds = %60, %57
  %69 = phi i32 [ %59, %57 ], [ %63, %60 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %51

71:                                               ; preds = %68, %38
  %72 = and i8 %15, 1
  %73 = bitcast { i64, i64 }* %6 to i32*
  store i32 %13, i32* %73, align 8
  %74 = bitcast { i64, i64 }* %6 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 4
  %76 = bitcast i8* %75 to i64*
  store i64 %42, i64* %76, align 4
  %77 = getelementptr inbounds i8, i8* %74, i64 12
  store i8 %72, i8* %77, align 4
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %71, %16
  %83 = phi i64 [ %81, %71 ], [ %25, %16 ]
  %84 = phi i64 [ %79, %71 ], [ %23, %16 ]
  %85 = insertvalue { i64, i64 } undef, i64 %84, 0
  %86 = insertvalue { i64, i64 } %85, i64 %83, 1
  ret { i64, i64 } %86
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler4StarENS_4FragEb(%"class.re2::Compiler"* nocapture, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"struct.re2::Frag", align 8
  %8 = bitcast %"struct.re2::Frag"* %7 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %7, i64 0, i32 1, i32 1
  %10 = bitcast i32* %9 to i64*
  store i64 %2, i64* %10, align 8
  %11 = and i64 %2, 4294967296
  %12 = icmp eq i64 %11, 0
  %13 = trunc i64 %1 to i32
  br i1 %12, label %23, label %14

14:                                               ; preds = %4
  %15 = tail call { i64, i64 } @_ZN3re28Compiler4PlusENS_4FragEb(%"class.re2::Compiler"* %0, i64 %1, i64 %2, i1 zeroext %3)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = tail call { i64, i64 } @_ZN3re28Compiler5QuestENS_4FragEb(%"class.re2::Compiler"* %0, i64 %16, i64 %17, i1 zeroext %3)
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = extractvalue { i64, i64 } %18, 1
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %21, i64* %22, align 8
  br label %91

23:                                               ; preds = %4
  %24 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %23
  %27 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27)
  %28 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 4
  %31 = getelementptr inbounds i8, i8* %27, i64 12
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27)
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  br label %91

38:                                               ; preds = %23
  %39 = sext i32 %24 to i64
  %40 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %42 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %41, i64 %39
  br i1 %3, label %43, label %45

43:                                               ; preds = %38
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %42, i32 0, i32 %13) #16
  %44 = shl i32 %24, 1
  br label %48

45:                                               ; preds = %38
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %42, i32 %13, i32 0) #16
  %46 = shl i32 %24, 1
  %47 = or i32 %46, 1
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i32 [ %47, %45 ], [ %44, %43 ]
  %50 = zext i32 %49 to i64
  %51 = shl nuw i64 %50, 32
  %52 = or i64 %51, %50
  %53 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %54 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %7, i64 0, i32 1
  %55 = bitcast %"struct.re2::PatchList"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %81, label %59

59:                                               ; preds = %48
  %60 = shl i32 %24, 4
  br label %61

61:                                               ; preds = %78, %59
  %62 = phi i32 [ %57, %59 ], [ %79, %78 ]
  %63 = lshr i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = and i32 %62, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %53, i64 %64, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  store i32 %24, i32* %68, align 4
  br label %78

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %53, i64 %64, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = lshr i32 %72, 4
  %74 = and i32 %72, 8
  %75 = or i32 %74, %60
  %76 = and i32 %72, 7
  %77 = or i32 %75, %76
  store i32 %77, i32* %71, align 4
  br label %78

78:                                               ; preds = %70, %67
  %79 = phi i32 [ %69, %67 ], [ %73, %70 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %61

81:                                               ; preds = %78, %48
  %82 = bitcast { i64, i64 }* %6 to i32*
  store i32 %24, i32* %82, align 8
  %83 = bitcast { i64, i64 }* %6 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  %85 = bitcast i8* %84 to i64*
  store i64 %52, i64* %85, align 4
  %86 = getelementptr inbounds i8, i8* %83, i64 12
  store i8 1, i8* %86, align 4
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  br label %91

91:                                               ; preds = %26, %81, %14
  %92 = phi i64 [ %35, %26 ], [ %90, %81 ], [ %21, %14 ]
  %93 = phi i64 [ %33, %26 ], [ %88, %81 ], [ %19, %14 ]
  %94 = insertvalue { i64, i64 } undef, i64 %93, 0
  %95 = insertvalue { i64, i64 } %94, i64 %92, 1
  ret { i64, i64 } %95
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler5QuestENS_4FragEb(%"class.re2::Compiler"* nocapture, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %"struct.re2::Frag", align 8
  %10 = bitcast %"struct.re2::Frag"* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1, i32 1
  %12 = bitcast i32* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = trunc i64 %1 to i32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %53

15:                                               ; preds = %4
  %16 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 4
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 12
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %28, i64* %30, align 8
  br label %48

31:                                               ; preds = %15
  %32 = sext i32 %17 to i64
  %33 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %33, align 8
  %35 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %34, i64 %32
  tail call void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"* %35, i32 0) #16
  %36 = shl i32 %17, 1
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = or i64 %38, %37
  %40 = bitcast { i64, i64 }* %6 to i32*
  store i32 %17, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %16, i64 4
  %42 = bitcast i8* %41 to i64*
  store i64 %39, i64* %42, align 4
  %43 = getelementptr inbounds i8, i8* %16, i64 12
  store i8 1, i8* %43, align 4
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %19, %31
  %49 = phi i64 [ %47, %31 ], [ %28, %19 ]
  %50 = phi i64 [ %45, %31 ], [ %26, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %49, i64* %52, align 8
  br label %121

53:                                               ; preds = %4
  %54 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %53
  %57 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57)
  %58 = bitcast { i64, i64 }* %7 to i32*
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 4
  %61 = getelementptr inbounds i8, i8* %57, i64 12
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57)
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %65, i64* %67, align 8
  br label %121

68:                                               ; preds = %53
  %69 = sext i32 %54 to i64
  %70 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %70, align 8
  %72 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %71, i64 %69
  br i1 %3, label %73, label %75

73:                                               ; preds = %68
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %72, i32 0, i32 %13) #16
  %74 = shl i32 %54, 1
  br label %78

75:                                               ; preds = %68
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %72, i32 %13, i32 0) #16
  %76 = shl i32 %54, 1
  %77 = or i32 %76, 1
  br label %78

78:                                               ; preds = %75, %73
  %79 = phi i32 [ %77, %75 ], [ %74, %73 ]
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  %82 = or i64 %81, %80
  %83 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %70, align 8
  %84 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %9, i64 0, i32 1
  %85 = bitcast %"struct.re2::PatchList"* %84 to i64*
  %86 = load i64, i64* %85, align 4
  %87 = trunc i64 %86 to i32
  %88 = lshr i64 %86, 32
  %89 = icmp eq i32 %79, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %78
  %91 = icmp eq i32 %87, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %90
  %93 = lshr i64 %80, 1
  %94 = and i64 %80, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %83, i64 %93, i32 1, i32 0
  store i32 %87, i32* %97, align 4
  br label %106

98:                                               ; preds = %92
  %99 = shl i32 %87, 4
  %100 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %83, i64 %93, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 8
  %103 = or i32 %102, %99
  %104 = and i32 %101, 7
  %105 = or i32 %103, %104
  store i32 %105, i32* %100, align 4
  br label %106

106:                                              ; preds = %78, %90, %96, %98
  %107 = phi i64 [ %86, %78 ], [ %82, %90 ], [ %82, %98 ], [ %82, %96 ]
  %108 = phi i64 [ %88, %78 ], [ %80, %90 ], [ %88, %98 ], [ %88, %96 ]
  %109 = shl nuw i64 %108, 32
  %110 = and i64 %107, 4294967295
  %111 = or i64 %109, %110
  %112 = bitcast { i64, i64 }* %8 to i32*
  store i32 %54, i32* %112, align 8
  %113 = bitcast { i64, i64 }* %8 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 4
  %115 = bitcast i8* %114 to i64*
  store i64 %111, i64* %115, align 4
  %116 = getelementptr inbounds i8, i8* %113, i64 12
  store i8 1, i8* %116, align 4
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %120 = load i64, i64* %119, align 8
  br label %121

121:                                              ; preds = %56, %106, %48
  %122 = phi i64 [ %65, %56 ], [ %120, %106 ], [ %49, %48 ]
  %123 = phi i64 [ %63, %56 ], [ %118, %106 ], [ %50, %48 ]
  %124 = insertvalue { i64, i64 } undef, i64 %123, 0
  %125 = insertvalue { i64, i64 } %124, i64 %122, 1
  ret { i64, i64 } %125
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler3NopEv(%"class.re2::Compiler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %1
  %7 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast { i64, i64 }* %2 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 4
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %15, i64* %17, align 8
  br label %36

18:                                               ; preds = %1
  %19 = sext i32 %4 to i64
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %20, align 8
  %22 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %21, i64 %19
  tail call void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"* %22, i32 0) #16
  %23 = shl i32 %4, 1
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, %24
  %27 = bitcast { i64, i64 }* %3 to i32*
  store i32 %4, i32* %27, align 8
  %28 = bitcast { i64, i64 }* %3 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  %30 = bitcast i8* %29 to i64*
  store i64 %26, i64* %30, align 4
  %31 = getelementptr inbounds i8, i8* %28, i64 12
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %18, %6
  %37 = phi i64 [ %35, %18 ], [ %15, %6 ]
  %38 = phi i64 [ %33, %18 ], [ %13, %6 ]
  %39 = insertvalue { i64, i64 } undef, i64 %38, 0
  %40 = insertvalue { i64, i64 } %39, i64 %37, 1
  ret { i64, i64 } %40
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler9ByteRangeEiib(%"class.re2::Compiler"* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  %13 = bitcast i8* %12 to i64*
  store i64 0, i64* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 12
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %18, i64* %20, align 8
  br label %40

21:                                               ; preds = %4
  %22 = sext i32 %7 to i64
  %23 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %23, align 8
  %25 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %24, i64 %22
  %26 = zext i1 %3 to i32
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %25, i32 %1, i32 %2, i32 %26, i32 0) #16
  %27 = shl i32 %7, 1
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  %30 = or i64 %29, %28
  %31 = bitcast { i64, i64 }* %6 to i32*
  store i32 %7, i32* %31, align 8
  %32 = bitcast { i64, i64 }* %6 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4
  %34 = bitcast i8* %33 to i64*
  store i64 %30, i64* %34, align 4
  %35 = getelementptr inbounds i8, i8* %32, i64 12
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %21, %9
  %41 = phi i64 [ %39, %21 ], [ %18, %9 ]
  %42 = phi i64 [ %37, %21 ], [ %16, %9 ]
  %43 = insertvalue { i64, i64 } undef, i64 %42, 0
  %44 = insertvalue { i64, i64 } %43, i64 %41, 1
  ret { i64, i64 } %44
}

declare void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler5MatchEi(%"class.re2::Compiler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast { i64, i64 }* %3 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %16, i64* %18, align 8
  br label %33

19:                                               ; preds = %2
  %20 = sext i32 %5 to i64
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %21, align 8
  %23 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %22, i64 %20
  tail call void @_ZN3re24Prog4Inst9InitMatchEi(%"class.re2::Prog::Inst"* %23, i32 %1) #16
  %24 = bitcast { i64, i64 }* %4 to i32*
  store i32 %5, i32* %24, align 8
  %25 = bitcast { i64, i64 }* %4 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 4
  %28 = getelementptr inbounds i8, i8* %25, i64 12
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %19, %7
  %34 = phi i64 [ %32, %19 ], [ %16, %7 ]
  %35 = phi i64 [ %30, %19 ], [ %14, %7 ]
  %36 = insertvalue { i64, i64 } undef, i64 %35, 0
  %37 = insertvalue { i64, i64 } %36, i64 %34, 1
  ret { i64, i64 } %37
}

declare void @_ZN3re24Prog4Inst9InitMatchEi(%"class.re2::Prog::Inst"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler10EmptyWidthENS_7EmptyOpE(%"class.re2::Compiler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %2
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast { i64, i64 }* %3 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %16, i64* %18, align 8
  br label %37

19:                                               ; preds = %2
  %20 = sext i32 %5 to i64
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %21, align 8
  %23 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %22, i64 %20
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %23, i32 %1, i32 0) #16
  %24 = shl i32 %5, 1
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = or i64 %26, %25
  %28 = bitcast { i64, i64 }* %4 to i32*
  store i32 %5, i32* %28, align 8
  %29 = bitcast { i64, i64 }* %4 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 4
  %32 = getelementptr inbounds i8, i8* %29, i64 12
  store i8 1, i8* %32, align 4
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  br label %37

37:                                               ; preds = %19, %7
  %38 = phi i64 [ %36, %19 ], [ %16, %7 ]
  %39 = phi i64 [ %34, %19 ], [ %14, %7 ]
  %40 = insertvalue { i64, i64 } undef, i64 %39, 0
  %41 = insertvalue { i64, i64 } %40, i64 %38, 1
  ret { i64, i64 } %41
}

declare void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler7CaptureENS_4FragEi(%"class.re2::Compiler"* nocapture, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"struct.re2::Frag", align 8
  %9 = bitcast %"struct.re2::Frag"* %8 to i64*
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %8, i64 0, i32 1, i32 1
  %11 = bitcast i32* %10 to i64*
  store i64 %2, i64* %11, align 8
  %12 = trunc i64 %1 to i32
  %13 = icmp eq i32 %12, 0
  %14 = lshr i64 %2, 32
  %15 = trunc i64 %14 to i8
  br i1 %13, label %16, label %28

16:                                               ; preds = %4
  %17 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 12
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  br label %97

28:                                               ; preds = %4
  %29 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 2)
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %28
  %32 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32)
  %33 = bitcast { i64, i64 }* %6 to i32*
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 4
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 4
  %36 = getelementptr inbounds i8, i8* %32, i64 12
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32)
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %38, i64* %41, align 8
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %40, i64* %42, align 8
  br label %97

43:                                               ; preds = %28
  %44 = sext i32 %29 to i64
  %45 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %47 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %46, i64 %44
  %48 = shl nsw i32 %3, 1
  tail call void @_ZN3re24Prog4Inst11InitCaptureEij(%"class.re2::Prog::Inst"* %47, i32 %48, i32 %12) #16
  %49 = add nuw nsw i32 %29, 1
  %50 = sext i32 %49 to i64
  %51 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %52 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %51, i64 %50
  %53 = or i32 %48, 1
  tail call void @_ZN3re24Prog4Inst11InitCaptureEij(%"class.re2::Prog::Inst"* %52, i32 %53, i32 0) #16
  %54 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %45, align 8
  %55 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %8, i64 0, i32 1
  %56 = bitcast %"struct.re2::PatchList"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %82, label %60

60:                                               ; preds = %43
  %61 = shl i32 %49, 4
  br label %62

62:                                               ; preds = %79, %60
  %63 = phi i32 [ %58, %60 ], [ %80, %79 ]
  %64 = lshr i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = and i32 %63, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %65, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  store i32 %49, i32* %69, align 4
  br label %79

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %65, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 4
  %75 = and i32 %73, 8
  %76 = or i32 %75, %61
  %77 = and i32 %73, 7
  %78 = or i32 %76, %77
  store i32 %78, i32* %72, align 4
  br label %79

79:                                               ; preds = %71, %68
  %80 = phi i32 [ %70, %68 ], [ %74, %71 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %62

82:                                               ; preds = %79, %43
  %83 = shl i32 %49, 1
  %84 = zext i32 %83 to i64
  %85 = shl nuw i64 %84, 32
  %86 = or i64 %85, %84
  %87 = and i8 %15, 1
  %88 = bitcast { i64, i64 }* %7 to i32*
  store i32 %29, i32* %88, align 8
  %89 = bitcast { i64, i64 }* %7 to i8*
  %90 = getelementptr inbounds i8, i8* %89, i64 4
  %91 = bitcast i8* %90 to i64*
  store i64 %86, i64* %91, align 4
  %92 = getelementptr inbounds i8, i8* %89, i64 12
  store i8 %87, i8* %92, align 4
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  br label %97

97:                                               ; preds = %31, %82, %16
  %98 = phi i64 [ %40, %31 ], [ %96, %82 ], [ %25, %16 ]
  %99 = phi i64 [ %38, %31 ], [ %94, %82 ], [ %23, %16 ]
  %100 = insertvalue { i64, i64 } undef, i64 %99, 0
  %101 = insertvalue { i64, i64 } %100, i64 %98, 1
  ret { i64, i64 } %101
}

declare void @_ZN3re24Prog4Inst11InitCaptureEij(%"class.re2::Prog::Inst"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler10BeginRangeEv(%"class.re2::Compiler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node_base"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %9
  %10 = phi %"struct.std::__1::__hash_node_base"* [ %12, %9 ], [ %7, %5 ]
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %10, i64 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  %13 = bitcast %"struct.std::__1::__hash_node_base"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %14, label %15, label %9

15:                                               ; preds = %9, %5
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %6, align 8
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = add i64 %17, -1
  %22 = and i64 %17, 3
  %23 = icmp ult i64 %21, 3
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = sub i64 %17, %22
  br label %38

26:                                               ; preds = %38, %19
  %27 = phi i64 [ 0, %19 ], [ %52, %38 ]
  %28 = icmp eq i64 %22, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %26, %29
  %30 = phi i64 [ %34, %29 ], [ %27, %26 ]
  %31 = phi i64 [ %35, %29 ], [ %22, %26 ]
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, i64 %30
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %33, align 8
  %34 = add nuw i64 %30, 1
  %35 = add i64 %31, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !3

37:                                               ; preds = %26, %29, %15
  store i64 0, i64* %2, align 8
  br label %55

38:                                               ; preds = %38, %24
  %39 = phi i64 [ 0, %24 ], [ %52, %38 ]
  %40 = phi i64 [ %25, %24 ], [ %53, %38 ]
  %41 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, i64 %39
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %42, align 8
  %43 = or i64 %39, 1
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %43
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %45, align 8
  %46 = or i64 %39, 2
  %47 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, i64 %46
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %48, align 8
  %49 = or i64 %39, 3
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %51, align 8
  %52 = add nuw i64 %39, 4
  %53 = add i64 %40, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %26, label %38

55:                                               ; preds = %1, %37
  %56 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1
  %58 = bitcast %"struct.re2::PatchList"* %57 to i64*
  store i64 0, i64* %58, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* nocapture, i8 zeroext, i8 zeroext, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"struct.re2::Frag", align 8
  %9 = bitcast %"struct.re2::Frag"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  %10 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %8, i64 0, i32 1, i32 1
  %11 = bitcast { i64, i64 }* %7 to i8*
  %12 = bitcast %"struct.re2::Frag"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %13 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %5
  %16 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  %17 = bitcast { i64, i64 }* %6 to i32*
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 4
  %19 = bitcast i8* %18 to i64*
  store i64 0, i64* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 12
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %24, i64* %26, align 8
  br label %47

27:                                               ; preds = %5
  %28 = zext i8 %2 to i32
  %29 = zext i8 %1 to i32
  %30 = sext i32 %13 to i64
  %31 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %31, align 8
  %33 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %32, i64 %30
  %34 = zext i1 %3 to i32
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %33, i32 %29, i32 %28, i32 %34, i32 0) #16
  %35 = shl i32 %13, 1
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = or i64 %37, %36
  %39 = bitcast { i64, i64 }* %7 to i32*
  store i32 %13, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %11, i64 4
  %41 = bitcast i8* %40 to i64*
  store i64 %38, i64* %41, align 4
  %42 = getelementptr inbounds i8, i8* %11, i64 12
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %15, %27
  %48 = phi i64 [ %46, %27 ], [ %24, %15 ]
  %49 = phi i64 [ %44, %27 ], [ %22, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  %50 = bitcast %"struct.re2::Frag"* %8 to i64*
  store i64 %49, i64* %50, align 8
  %51 = bitcast i32* %10 to i64*
  store i64 %48, i64* %51, align 8
  %52 = icmp eq i32 %4, 0
  %53 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %53, align 8
  %55 = trunc i64 %49 to i32
  br i1 %52, label %84, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %8, i64 0, i32 1
  %58 = bitcast %"struct.re2::PatchList"* %57 to i64*
  %59 = load i64, i64* %58, align 4
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %118, label %62

62:                                               ; preds = %56
  %63 = shl i32 %4, 4
  br label %64

64:                                               ; preds = %81, %62
  %65 = phi i32 [ %60, %62 ], [ %82, %81 ]
  %66 = lshr i32 %65, 1
  %67 = zext i32 %66 to i64
  %68 = and i32 %65, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %67, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %4, i32* %71, align 4
  br label %81

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %67, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = lshr i32 %75, 4
  %77 = and i32 %75, 8
  %78 = or i32 %77, %63
  %79 = and i32 %75, 7
  %80 = or i32 %78, %79
  store i32 %80, i32* %74, align 4
  br label %81

81:                                               ; preds = %73, %70
  %82 = phi i32 [ %72, %70 ], [ %76, %73 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %118, label %64

84:                                               ; preds = %47
  %85 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1
  %86 = bitcast %"struct.re2::PatchList"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %8, i64 0, i32 1
  %89 = bitcast %"struct.re2::PatchList"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = trunc i64 %87 to i32
  %92 = trunc i64 %90 to i32
  %93 = lshr i64 %90, 32
  %94 = icmp eq i32 %91, 0
  br i1 %94, label %112, label %95

95:                                               ; preds = %84
  %96 = lshr i64 %87, 32
  %97 = icmp eq i32 %92, 0
  br i1 %97, label %112, label %98

98:                                               ; preds = %95
  %99 = lshr i64 %87, 33
  %100 = and i64 %87, 4294967296
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %99, i32 1, i32 0
  store i32 %92, i32* %103, align 4
  br label %112

104:                                              ; preds = %98
  %105 = shl i32 %92, 4
  %106 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %99, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 8
  %109 = or i32 %108, %105
  %110 = and i32 %107, 7
  %111 = or i32 %109, %110
  store i32 %111, i32* %106, align 4
  br label %112

112:                                              ; preds = %84, %95, %102, %104
  %113 = phi i64 [ %90, %84 ], [ %87, %95 ], [ %87, %104 ], [ %87, %102 ]
  %114 = phi i64 [ %93, %84 ], [ %96, %95 ], [ %93, %104 ], [ %93, %102 ]
  %115 = shl nuw i64 %114, 32
  %116 = and i64 %113, 4294967295
  %117 = or i64 %115, %116
  store i64 %117, i64* %86, align 4
  br label %118

118:                                              ; preds = %81, %56, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re28Compiler20CachedRuneByteSuffixEhhbi(%"class.re2::Compiler"*, i8 zeroext, i8 zeroext, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.72", align 1
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = sext i32 %4 to i64
  %11 = shl nsw i64 %10, 17
  %12 = zext i8 %1 to i64
  %13 = shl nuw nsw i64 %12, 9
  %14 = zext i8 %2 to i64
  %15 = shl nuw nsw i64 %14, 1
  %16 = zext i1 %3 to i64
  %17 = or i64 %15, %13
  %18 = or i64 %17, %16
  %19 = or i64 %18, %11
  store i64 %19, i64* %8, align 8
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %76, label %24

24:                                               ; preds = %5
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #16, !range !5
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %19
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %76, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %76, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %76

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %19
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %70, null
  br i1 %71, label %76, label %47

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %48, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %73 to i32*
  %75 = load i32, i32* %74, align 8
  br label %86

76:                                               ; preds = %60, %68, %34, %5, %41
  %77 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %1, i8 zeroext %2, i1 zeroext %3, i32 %4)
  %78 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %20, i64 0, i32 0
  %79 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #16
  %80 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store i64* %8, i64** %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::tuple.72", %"class.std::__1::tuple.72"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #16
  %82 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %78, i64* nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.72"* nonnull dereferenceable(1) %7) #16
  %83 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %82, 0
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %83, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %84 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #16
  store i32 %77, i32* %85, align 4
  br label %86

86:                                               ; preds = %76, %72
  %87 = phi i32 [ %75, %72 ], [ %77, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  ret i32 %87
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3re28Compiler22IsCachedRuneByteSuffixEi(%"class.re2::Compiler"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %4, align 8
  %6 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %5, i64 %3, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  %8 = load i8, i8* %7, align 4
  %9 = bitcast %union.anon* %6 to %struct.anon*
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds %struct.anon, %struct.anon* %9, i64 0, i32 2
  %13 = load i16, i16* %12, align 2
  %14 = and i16 %13, 1
  %15 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %5, i64 %3, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = lshr i32 %16, 4
  %18 = zext i32 %17 to i64
  %19 = shl nuw nsw i64 %18, 17
  %20 = zext i8 %8 to i64
  %21 = shl nuw nsw i64 %20, 9
  %22 = zext i8 %11 to i64
  %23 = shl nuw nsw i64 %22, 1
  %24 = zext i16 %14 to i64
  %25 = or i64 %23, %21
  %26 = or i64 %25, %24
  %27 = or i64 %26, %19
  %28 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %79, label %31

31:                                               ; preds = %2
  %32 = tail call i64 @llvm.ctpop.i64(i64 %29) #16, !range !5
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = add i64 %29, 35184372088831
  %36 = and i64 %27, %35
  br label %41

37:                                               ; preds = %31
  %38 = icmp ult i64 %27, %29
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %27, %29
  br label %41

41:                                               ; preds = %39, %37, %34
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ], [ %27, %37 ]
  %43 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, i64 %42
  %46 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %48
  %53 = add i64 %29, -1
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %50, %52 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %27
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %33, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %53
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %29
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %29
  br label %67

67:                                               ; preds = %65, %63, %61
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %42
  br i1 %69, label %75, label %79

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %27
  br i1 %74, label %79, label %75

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base"* %77, null
  br i1 %78, label %79, label %54

79:                                               ; preds = %67, %70, %75, %2, %41, %48
  %80 = phi %"struct.std::__1::__hash_node_base"* [ null, %41 ], [ null, %2 ], [ null, %48 ], [ %55, %70 ], [ null, %75 ], [ null, %67 ]
  %81 = icmp ne %"struct.std::__1::__hash_node_base"* %80, null
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler9AddSuffixEi(%"class.re2::Compiler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %8, i32 %1)
  br label %25

16:                                               ; preds = %10
  %17 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %21, align 8
  %23 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %22, i64 %20
  %24 = load i32, i32* %7, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %23, i32 %24, i32 %1) #16
  br label %25

25:                                               ; preds = %19, %16, %6, %14
  %26 = phi i32 [ %15, %14 ], [ %1, %6 ], [ %17, %19 ], [ 0, %16 ]
  store i32 %26, i32* %7, align 8
  br label %27

27:                                               ; preds = %25, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call { i64, i64 } @_ZN3re28Compiler13FindByteRangeEii(%"class.re2::Compiler"* %0, i32 %1, i32 %2)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %254, label %13

13:                                               ; preds = %10
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %15, align 8
  %17 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %16, i64 %14
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %17, i32 %1, i32 %2) #16
  br label %254

18:                                               ; preds = %3
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %21, align 8
  br label %37

23:                                               ; preds = %18
  %24 = and i32 %8, 1
  %25 = icmp eq i32 %24, 0
  %26 = shl i64 %5, 32
  %27 = ashr exact i64 %26, 32
  %28 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %28, align 8
  br i1 %25, label %33, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %29, i64 %27, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  br label %37

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %29, i64 %27, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 4
  br label %37

37:                                               ; preds = %20, %30, %33
  %38 = phi %"class.re2::Prog::Inst"* [ %29, %30 ], [ %29, %33 ], [ %22, %20 ]
  %39 = phi i32 [ %32, %30 ], [ %36, %33 ], [ %1, %20 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %38, i64 %40, i32 1
  %43 = bitcast %union.anon* %42 to i8*
  %44 = load i8, i8* %43, align 4
  %45 = bitcast %union.anon* %42 to %struct.anon*
  %46 = getelementptr inbounds %struct.anon, %struct.anon* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds %struct.anon, %struct.anon* %45, i64 0, i32 2
  %49 = load i16, i16* %48, align 2
  %50 = and i16 %49, 1
  %51 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %38, i64 %40, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = lshr i32 %52, 4
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %54, 17
  %56 = zext i8 %44 to i64
  %57 = shl nuw nsw i64 %56, 9
  %58 = zext i8 %47 to i64
  %59 = shl nuw nsw i64 %58, 1
  %60 = zext i16 %50 to i64
  %61 = or i64 %59, %57
  %62 = or i64 %61, %60
  %63 = or i64 %62, %55
  %64 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %153, label %67

67:                                               ; preds = %37
  %68 = tail call i64 @llvm.ctpop.i64(i64 %65) #16, !range !5
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = add i64 %65, 35184372088831
  %72 = and i64 %63, %71
  br label %77

73:                                               ; preds = %67
  %74 = icmp ult i64 %63, %65
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %63, %65
  br label %77

77:                                               ; preds = %75, %73, %70
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %63, %73 ]
  %79 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %80, i64 %78
  %82 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base"* %82, null
  br i1 %83, label %153, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %82, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base"* %86, null
  br i1 %87, label %153, label %88

88:                                               ; preds = %84
  %89 = add i64 %65, -1
  br label %90

90:                                               ; preds = %111, %88
  %91 = phi %"struct.std::__1::__hash_node_base"* [ %86, %88 ], [ %113, %111 ]
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 1
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, %63
  br i1 %95, label %106, label %96

96:                                               ; preds = %90
  br i1 %69, label %99, label %97

97:                                               ; preds = %96
  %98 = and i64 %94, %89
  br label %103

99:                                               ; preds = %96
  %100 = icmp ult i64 %94, %65
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = urem i64 %94, %65
  br label %103

103:                                              ; preds = %101, %99, %97
  %104 = phi i64 [ %98, %97 ], [ %102, %101 ], [ %94, %99 ]
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %111, label %153

106:                                              ; preds = %90
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, %63
  br i1 %110, label %115, label %111

111:                                              ; preds = %106, %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %153, label %90

115:                                              ; preds = %106
  %116 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1)
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %254, label %118

118:                                              ; preds = %115
  %119 = sext i32 %116 to i64
  %120 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  %121 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %120, i64 %119
  %122 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %120, i64 %40, i32 1
  %123 = bitcast %union.anon* %122 to i8*
  %124 = load i8, i8* %123, align 4
  %125 = zext i8 %124 to i32
  %126 = bitcast %union.anon* %122 to %struct.anon*
  %127 = getelementptr inbounds %struct.anon, %struct.anon* %126, i64 0, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds %struct.anon, %struct.anon* %126, i64 0, i32 2
  %131 = load i16, i16* %130, align 2
  %132 = and i16 %131, 1
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %120, i64 %40, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = lshr i32 %135, 4
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %121, i32 %125, i32 %129, i32 %133, i32 %136) #16
  br i1 %19, label %153, label %137

137:                                              ; preds = %118
  %138 = and i32 %8, 1
  %139 = icmp eq i32 %138, 0
  %140 = shl i64 %5, 32
  %141 = ashr exact i64 %140, 32
  %142 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  br i1 %139, label %145, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %142, i64 %141, i32 1, i32 0
  store i32 %116, i32* %144, align 4
  br label %153

145:                                              ; preds = %137
  %146 = shl i32 %116, 4
  %147 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %142, i64 %141, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 8
  %150 = or i32 %149, %146
  %151 = and i32 %148, 7
  %152 = or i32 %150, %151
  store i32 %152, i32* %147, align 4
  br label %153

153:                                              ; preds = %103, %111, %145, %143, %118, %84, %37, %77
  %154 = phi i32 [ %1, %77 ], [ %1, %37 ], [ %1, %84 ], [ %116, %118 ], [ %1, %145 ], [ %1, %143 ], [ %1, %111 ], [ %1, %103 ]
  %155 = phi i32 [ %39, %77 ], [ %39, %37 ], [ %39, %84 ], [ %116, %118 ], [ %116, %145 ], [ %116, %143 ], [ %39, %111 ], [ %39, %103 ]
  %156 = sext i32 %2 to i64
  %157 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  %158 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %157, i64 %156, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = lshr i32 %159, 4
  %161 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %157, i64 %156, i32 1
  %162 = bitcast %union.anon* %161 to i8*
  %163 = load i8, i8* %162, align 4
  %164 = bitcast %union.anon* %161 to %struct.anon*
  %165 = getelementptr inbounds %struct.anon, %struct.anon* %164, i64 0, i32 1
  %166 = load i8, i8* %165, align 1
  %167 = getelementptr inbounds %struct.anon, %struct.anon* %164, i64 0, i32 2
  %168 = load i16, i16* %167, align 2
  %169 = and i16 %168, 1
  %170 = zext i32 %160 to i64
  %171 = shl nuw nsw i64 %170, 17
  %172 = zext i8 %163 to i64
  %173 = shl nuw nsw i64 %172, 9
  %174 = zext i8 %166 to i64
  %175 = shl nuw nsw i64 %174, 1
  %176 = zext i16 %169 to i64
  %177 = or i64 %175, %173
  %178 = or i64 %177, %176
  %179 = or i64 %178, %171
  %180 = load i64, i64* %64, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %230, label %182

182:                                              ; preds = %153
  %183 = tail call i64 @llvm.ctpop.i64(i64 %180) #16, !range !5
  %184 = icmp ugt i64 %183, 1
  br i1 %184, label %188, label %185

185:                                              ; preds = %182
  %186 = add i64 %180, 35184372088831
  %187 = and i64 %179, %186
  br label %192

188:                                              ; preds = %182
  %189 = icmp ult i64 %179, %180
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = urem i64 %179, %180
  br label %192

192:                                              ; preds = %190, %188, %185
  %193 = phi i64 [ %187, %185 ], [ %191, %190 ], [ %179, %188 ]
  %194 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %194, align 8
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %195, i64 %193
  %197 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base"* %197, null
  br i1 %198, label %230, label %199

199:                                              ; preds = %192
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base"* %201, null
  br i1 %202, label %230, label %203

203:                                              ; preds = %199
  %204 = add i64 %180, -1
  br label %205

205:                                              ; preds = %226, %203
  %206 = phi %"struct.std::__1::__hash_node_base"* [ %201, %203 ], [ %228, %226 ]
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 1
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, %179
  br i1 %210, label %221, label %211

211:                                              ; preds = %205
  br i1 %184, label %214, label %212

212:                                              ; preds = %211
  %213 = and i64 %209, %204
  br label %218

214:                                              ; preds = %211
  %215 = icmp ult i64 %209, %180
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = urem i64 %209, %180
  br label %218

218:                                              ; preds = %216, %214, %212
  %219 = phi i64 [ %213, %212 ], [ %217, %216 ], [ %209, %214 ]
  %220 = icmp eq i64 %219, %193
  br i1 %220, label %226, label %230

221:                                              ; preds = %205
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 2
  %223 = bitcast %"struct.std::__1::__hash_node_base"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = icmp eq i64 %224, %179
  br i1 %225, label %237, label %226

226:                                              ; preds = %221, %218
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %206, i64 0, i32 0
  %228 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %227, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base"* %228, null
  br i1 %229, label %230, label %205

230:                                              ; preds = %226, %218, %192, %153, %199
  store i32 0, i32* %158, align 4
  %231 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  %232 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %231, i64 %156, i32 1, i32 0
  store i32 0, i32* %232, align 4
  %233 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 8
  %234 = load i32, i32* %233, align 8
  %235 = add nsw i32 %234, -1
  store i32 %235, i32* %233, align 8
  %236 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  br label %237

237:                                              ; preds = %221, %230
  %238 = phi %"class.re2::Prog::Inst"* [ %236, %230 ], [ %157, %221 ]
  %239 = sext i32 %155 to i64
  %240 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %238, i64 %239, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = lshr i32 %241, 4
  %243 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %242, i32 %160)
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %254, label %245

245:                                              ; preds = %237
  %246 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %41, align 8
  %247 = shl i32 %243, 4
  %248 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %246, i64 %239, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = and i32 %249, 8
  %251 = or i32 %250, %247
  %252 = and i32 %249, 7
  %253 = or i32 %251, %252
  store i32 %253, i32* %248, align 4
  br label %254

254:                                              ; preds = %115, %237, %245, %13, %10
  %255 = phi i32 [ %11, %13 ], [ 0, %10 ], [ %154, %245 ], [ 0, %237 ], [ 0, %115 ]
  ret i32 %255
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler13FindByteRangeEii(%"class.re2::Compiler"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to { i64, i64 }*
  %10 = alloca %class.LogMessage, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %12, align 8
  %14 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %11, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 7
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %30, label %18

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %21 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %19, i32 1
  %22 = bitcast %union.anon* %21 to i8*
  %23 = bitcast %union.anon* %21 to %struct.anon*
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %23, i64 0, i32 1
  %25 = getelementptr inbounds %struct.anon, %struct.anon* %23, i64 0, i32 2
  %26 = and i32 %15, 7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %165

28:                                               ; preds = %18
  %29 = load i8, i8* %22, align 4
  br label %68

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %11, i32 1
  %32 = bitcast %union.anon* %31 to i8*
  %33 = load i8, i8* %32, align 4
  %34 = sext i32 %2 to i64
  %35 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %34, i32 1
  %36 = bitcast %union.anon* %35 to i8*
  %37 = load i8, i8* %36, align 4
  %38 = icmp eq i8 %33, %37
  br i1 %38, label %39, label %61

39:                                               ; preds = %30
  %40 = bitcast %union.anon* %31 to %struct.anon*
  %41 = getelementptr inbounds %struct.anon, %struct.anon* %40, i64 0, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = bitcast %union.anon* %35 to %struct.anon*
  %44 = getelementptr inbounds %struct.anon, %struct.anon* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %42, %45
  br i1 %46, label %47, label %61

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.anon, %struct.anon* %40, i64 0, i32 2
  %49 = load i16, i16* %48, align 2
  %50 = getelementptr inbounds %struct.anon, %struct.anon* %43, i64 0, i32 2
  %51 = load i16, i16* %50, align 2
  %52 = xor i16 %51, %49
  %53 = and i16 %52, 1
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %47
  %56 = bitcast <2 x i64>* %8 to i32*
  store i32 %1, i32* %56, align 16
  %57 = bitcast <2 x i64>* %8 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 4
  %59 = bitcast i8* %58 to i64*
  store i64 0, i64* %59, align 4
  %60 = getelementptr inbounds i8, i8* %57, i64 12
  store i8 0, i8* %60, align 4
  br label %210

61:                                               ; preds = %30, %39, %47
  %62 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast <2 x i64>* %6 to i32*
  store i32 0, i32* %63, align 16
  %64 = getelementptr inbounds i8, i8* %62, i64 4
  %65 = bitcast i8* %64 to i64*
  store i64 0, i64* %65, align 4
  %66 = getelementptr inbounds i8, i8* %62, i64 12
  store i8 0, i8* %66, align 4
  %67 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  store <2 x i64> %67, <2 x i64>* %8, align 16
  br label %210

68:                                               ; preds = %28, %121
  %69 = phi i32 [ %114, %121 ], [ %1, %28 ]
  %70 = phi i32 [ %123, %121 ], [ %15, %28 ]
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %71, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %74, i32 1
  %76 = bitcast %union.anon* %75 to i8*
  %77 = load i8, i8* %76, align 4
  %78 = icmp eq i8 %77, %29
  br i1 %78, label %79, label %103

79:                                               ; preds = %68
  %80 = bitcast %union.anon* %75 to %struct.anon*
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = load i8, i8* %24, align 1
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %85, label %103

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.anon, %struct.anon* %80, i64 0, i32 2
  %87 = load i16, i16* %86, align 2
  %88 = load i16, i16* %25, align 2
  %89 = xor i16 %88, %87
  %90 = and i16 %89, 1
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %85
  %93 = shl i32 %69, 1
  %94 = or i32 %93, 1
  %95 = zext i32 %94 to i64
  %96 = shl nuw i64 %95, 32
  %97 = or i64 %96, %95
  %98 = bitcast <2 x i64>* %8 to i32*
  store i32 %69, i32* %98, align 16
  %99 = bitcast <2 x i64>* %8 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 4
  %101 = bitcast i8* %100 to i64*
  store i64 %97, i64* %101, align 4
  %102 = getelementptr inbounds i8, i8* %99, i64 12
  store i8 0, i8* %102, align 4
  br label %210

103:                                              ; preds = %68, %79, %85
  %104 = load i8, i8* %20, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %103
  %107 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107)
  %108 = bitcast <2 x i64>* %4 to i32*
  store i32 0, i32* %108, align 16
  %109 = getelementptr inbounds i8, i8* %107, i64 4
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 4
  %111 = getelementptr inbounds i8, i8* %107, i64 12
  store i8 0, i8* %111, align 4
  %112 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107)
  store <2 x i64> %112, <2 x i64>* %8, align 16
  br label %210

113:                                              ; preds = %103
  %114 = lshr i32 %70, 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %115, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, 7
  %119 = icmp eq i32 %118, 0
  %120 = zext i32 %114 to i64
  br i1 %119, label %121, label %126

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %120, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 7
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %68, label %165

126:                                              ; preds = %113
  %127 = zext i32 %114 to i64
  %128 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %13, i64 %127, i32 1
  %129 = bitcast %union.anon* %128 to i8*
  %130 = load i8, i8* %129, align 4
  %131 = icmp eq i8 %130, %29
  br i1 %131, label %132, label %158

132:                                              ; preds = %126
  %133 = bitcast %union.anon* %128 to %struct.anon*
  %134 = getelementptr inbounds %struct.anon, %struct.anon* %133, i64 0, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = bitcast %union.anon* %21 to %struct.anon*
  %137 = getelementptr inbounds %struct.anon, %struct.anon* %136, i64 0, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %135, %138
  br i1 %139, label %140, label %158

140:                                              ; preds = %132
  %141 = getelementptr inbounds %struct.anon, %struct.anon* %133, i64 0, i32 2
  %142 = load i16, i16* %141, align 2
  %143 = getelementptr inbounds %struct.anon, %struct.anon* %136, i64 0, i32 2
  %144 = load i16, i16* %143, align 2
  %145 = xor i16 %144, %142
  %146 = and i16 %145, 1
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %158

148:                                              ; preds = %140
  %149 = shl i32 %69, 1
  %150 = zext i32 %149 to i64
  %151 = shl nuw i64 %150, 32
  %152 = or i64 %151, %150
  %153 = bitcast <2 x i64>* %8 to i32*
  store i32 %69, i32* %153, align 16
  %154 = bitcast <2 x i64>* %8 to i8*
  %155 = getelementptr inbounds i8, i8* %154, i64 4
  %156 = bitcast i8* %155 to i64*
  store i64 %152, i64* %156, align 4
  %157 = getelementptr inbounds i8, i8* %154, i64 12
  store i8 0, i8* %157, align 4
  br label %210

158:                                              ; preds = %126, %132, %140
  %159 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159)
  %160 = bitcast <2 x i64>* %5 to i32*
  store i32 0, i32* %160, align 16
  %161 = getelementptr inbounds i8, i8* %159, i64 4
  %162 = bitcast i8* %161 to i64*
  store i64 0, i64* %162, align 4
  %163 = getelementptr inbounds i8, i8* %159, i64 12
  store i8 0, i8* %163, align 4
  %164 = load <2 x i64>, <2 x i64>* %5, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159)
  store <2 x i64> %164, <2 x i64>* %8, align 16
  br label %210

165:                                              ; preds = %121, %18
  %166 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %166) #16
  store i8 0, i8* %166, align 8
  %167 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 1
  %168 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 1, i32 2, i32 0, i32 0
  %169 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %167, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %168, align 8
  %170 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 1, i32 1
  %171 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %170, i64 0, i32 0
  %172 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %173 = bitcast %"class.std::__1::basic_ostringstream"* %167 to i64*
  store i64 %172, i64* %173, align 8
  %174 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %175 = bitcast %"class.std::__1::basic_ostringstream"* %167 to i8**
  %176 = inttoptr i64 %172 to i8*
  %177 = getelementptr i8, i8* %176, i64 -24
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::basic_ostringstream"* %167 to i8*
  %181 = getelementptr inbounds i8, i8* %180, i64 %179
  %182 = bitcast i8* %181 to i64*
  store i64 %174, i64* %182, align 8
  %183 = load i8*, i8** %175, align 8
  %184 = getelementptr i8, i8* %183, i64 -24
  %185 = bitcast i8* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds i8, i8* %180, i64 %186
  %188 = bitcast i8* %187 to %"class.std::__1::ios_base"*
  %189 = bitcast %"class.std::__1::basic_stringbuf"* %170 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %188, i8* %189) #16
  %190 = getelementptr inbounds i8, i8* %187, i64 136
  %191 = bitcast i8* %190 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %191, align 8
  %192 = getelementptr inbounds i8, i8* %187, i64 144
  %193 = bitcast i8* %192 to i32*
  store i32 -1, i32* %193, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %169, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %168, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %171) #16
  %194 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %170, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 1, i32 1, i32 1
  %196 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %10, i64 0, i32 1, i32 1, i32 3
  %197 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %196, align 8
  %198 = bitcast %"class.std::__1::basic_ostringstream"* %167 to %"class.std::__1::basic_ostream"*
  %199 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %198, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #16
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %200, i32 615) #16
  %202 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %203 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %198, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %166) #16
  %204 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204)
  %205 = bitcast <2 x i64>* %7 to i32*
  store i32 0, i32* %205, align 16
  %206 = getelementptr inbounds i8, i8* %204, i64 4
  %207 = bitcast i8* %206 to i64*
  store i64 0, i64* %207, align 4
  %208 = getelementptr inbounds i8, i8* %204, i64 12
  store i8 0, i8* %208, align 4
  %209 = load <2 x i64>, <2 x i64>* %7, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204)
  store <2 x i64> %209, <2 x i64>* %8, align 16
  br label %210

210:                                              ; preds = %158, %148, %106, %92, %165, %61, %55
  %211 = getelementptr inbounds <2 x i64>, <2 x i64>* %8, i64 0, i64 0
  %212 = load i64, i64* %211, align 16
  %213 = insertvalue { i64, i64 } undef, i64 %212, 0
  %214 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = insertvalue { i64, i64 } %213, i64 %215, 1
  ret { i64, i64 } %216
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3re28Compiler14ByteRangeEqualEii(%"class.re2::Compiler"* nocapture readonly, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %5, align 8
  %7 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %6, i64 %4, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  %9 = load i8, i8* %8, align 4
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %6, i64 %10, i32 1
  %12 = bitcast %union.anon* %11 to i8*
  %13 = load i8, i8* %12, align 4
  %14 = icmp eq i8 %9, %13
  br i1 %14, label %15, label %31

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %7 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = bitcast %union.anon* %11 to %struct.anon*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i64 0, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %18, %21
  br i1 %22, label %23, label %31

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 2
  %25 = load i16, i16* %24, align 2
  %26 = getelementptr inbounds %struct.anon, %struct.anon* %19, i64 0, i32 2
  %27 = load i16, i16* %26, align 2
  %28 = xor i16 %27, %25
  %29 = and i16 %28, 1
  %30 = icmp eq i16 %29, 0
  br label %31

31:                                               ; preds = %23, %15, %3
  %32 = phi i1 [ false, %15 ], [ false, %3 ], [ %30, %23 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #16
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #16
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #16
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #19
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #17
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #16
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #16
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler8EndRangeEv(%"class.re2::Compiler"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12
  %3 = bitcast %"struct.re2::Frag"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1, i32 1
  %6 = bitcast i32* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = insertvalue { i64, i64 } undef, i64 %4, 0
  %9 = insertvalue { i64, i64 } %8, i64 %7, 1
  ret { i64, i64 } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler12AddRuneRangeEiib(%"class.re2::Compiler"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %1, i32 %2, i1 zeroext %3)
  br label %10

9:                                                ; preds = %4
  tail call void @_ZN3re28Compiler18AddRuneRangeLatin1Eiib(%"class.re2::Compiler"* %0, i32 %1, i32 %2, i1 zeroext %3)
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"*, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to [4 x i8]*
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to [4 x i8]*
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = icmp sgt i32 %1, %2
  br i1 %11, label %163, label %12

12:                                               ; preds = %4
  %13 = icmp eq i32 %1, 128
  %14 = icmp eq i32 %2, 1114111
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_ZN3re28Compiler13Add_80_10ffffEv(%"class.re2::Compiler"* %0)
  br label %163

17:                                               ; preds = %12
  %18 = icmp slt i32 %1, 128
  %19 = icmp sgt i32 %2, 127
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %189

21:                                               ; preds = %193, %189, %17
  %22 = phi i32 [ 128, %17 ], [ 2048, %189 ], [ 65536, %193 ]
  %23 = phi i32 [ 127, %17 ], [ 2047, %189 ], [ 65535, %193 ]
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %1, i32 %23, i1 zeroext %3)
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %22, i32 %2, i1 zeroext %3)
  br label %163

24:                                               ; preds = %197
  %25 = and i32 %1, -64
  %26 = and i32 %2, -64
  %27 = icmp eq i32 %25, %26
  br i1 %27, label %70, label %57

28:                                               ; preds = %197
  %29 = trunc i32 %1 to i8
  %30 = trunc i32 %2 to i8
  %31 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %29, i8 zeroext %30, i1 zeroext %3, i32 0)
  %32 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %163

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 %31, i32* %36, align 8
  br label %163

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %37, i32 %31) #16
  store i32 %45, i32* %36, align 8
  br label %163

46:                                               ; preds = %40
  %47 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %51, align 8
  %53 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %52, i64 %50
  %54 = load i32, i32* %36, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %53, i32 %54, i32 %31) #16
  br label %55

55:                                               ; preds = %49, %46
  %56 = phi i32 [ %47, %49 ], [ 0, %46 ]
  store i32 %56, i32* %36, align 8
  br label %163

57:                                               ; preds = %24
  %58 = and i32 %1, 63
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %174, %164, %57
  %61 = phi i32 [ 63, %57 ], [ 4095, %164 ], [ 262143, %174 ]
  %62 = or i32 %61, %1
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %1, i32 %62, i1 zeroext %3)
  %63 = add i32 %62, 1
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %63, i32 %2, i1 zeroext %3)
  br label %163

64:                                               ; preds = %57
  %65 = and i32 %2, 63
  %66 = icmp eq i32 %65, 63
  br i1 %66, label %70, label %67

67:                                               ; preds = %177, %167, %64
  %68 = phi i32 [ %172, %177 ], [ %72, %167 ], [ %26, %64 ]
  %69 = add nsw i32 %68, -1
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %1, i32 %69, i1 zeroext %3)
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %68, i32 %2, i1 zeroext %3)
  br label %163

70:                                               ; preds = %64, %24
  %71 = and i32 %1, -4096
  %72 = and i32 %2, -4096
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %170, label %164

74:                                               ; preds = %180
  br i1 %188, label %75, label %136

75:                                               ; preds = %74
  %76 = add nsw i32 %183, -1
  %77 = zext i32 %76 to i64
  %78 = zext i32 %183 to i64
  br label %79

79:                                               ; preds = %100, %75
  %80 = phi i64 [ 0, %75 ], [ %102, %100 ]
  %81 = phi i32 [ 0, %75 ], [ %101, %100 ]
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load i8, i8* %181, align 4
  %85 = load i8, i8* %182, align 4
  br label %94

86:                                               ; preds = %79
  %87 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %80
  %88 = load i8, i8* %87, align 1
  %89 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %80
  %90 = load i8, i8* %89, align 1
  %91 = icmp ne i8 %88, %90
  %92 = icmp eq i64 %80, %77
  %93 = or i1 %92, %91
  br i1 %93, label %98, label %94

94:                                               ; preds = %83, %86
  %95 = phi i8 [ %85, %83 ], [ %88, %86 ]
  %96 = phi i8 [ %84, %83 ], [ %88, %86 ]
  %97 = call i32 @_ZN3re28Compiler20CachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %96, i8 zeroext %95, i1 zeroext false, i32 %81)
  br label %100

98:                                               ; preds = %86
  %99 = call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %88, i8 zeroext %90, i1 zeroext false, i32 %81)
  br label %100

100:                                              ; preds = %94, %98
  %101 = phi i32 [ %97, %94 ], [ %99, %98 ]
  %102 = add nuw nsw i64 %80, 1
  %103 = icmp eq i64 %102, %78
  br i1 %103, label %136, label %79

104:                                              ; preds = %180
  br i1 %188, label %105, label %136

105:                                              ; preds = %104
  %106 = add nsw i32 %183, -1
  %107 = sext i32 %183 to i64
  %108 = zext i32 %106 to i64
  %109 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %108
  %110 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %108
  br label %111

111:                                              ; preds = %105, %133
  %112 = phi i64 [ %107, %105 ], [ %114, %133 ]
  %113 = phi i32 [ 0, %105 ], [ %134, %133 ]
  %114 = add nsw i64 %112, -1
  %115 = icmp eq i64 %114, %108
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = load i8, i8* %109, align 1
  %118 = load i8, i8* %110, align 1
  br label %127

119:                                              ; preds = %111
  %120 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %114
  %121 = load i8, i8* %120, align 1
  %122 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %114
  %123 = load i8, i8* %122, align 1
  %124 = icmp ult i8 %121, %123
  %125 = icmp ne i64 %114, 0
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %131

127:                                              ; preds = %116, %119
  %128 = phi i8 [ %118, %116 ], [ %123, %119 ]
  %129 = phi i8 [ %117, %116 ], [ %121, %119 ]
  %130 = call i32 @_ZN3re28Compiler20CachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %129, i8 zeroext %128, i1 zeroext false, i32 %113)
  br label %133

131:                                              ; preds = %119
  %132 = call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %121, i8 zeroext %123, i1 zeroext false, i32 %113)
  br label %133

133:                                              ; preds = %127, %131
  %134 = phi i32 [ %130, %127 ], [ %132, %131 ]
  %135 = icmp sgt i64 %114, 0
  br i1 %135, label %111, label %136

136:                                              ; preds = %100, %133, %74, %104
  %137 = phi i32 [ 0, %104 ], [ 0, %74 ], [ %134, %133 ], [ %101, %100 ]
  %138 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %139 = load i8, i8* %138, align 8, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %162

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %160, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %151

149:                                              ; preds = %145
  %150 = call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %143, i32 %137) #16
  br label %160

151:                                              ; preds = %145
  %152 = call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %153 = icmp slt i32 %152, 0
  br i1 %153, label %160, label %154

154:                                              ; preds = %151
  %155 = sext i32 %152 to i64
  %156 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %157 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %156, align 8
  %158 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %157, i64 %155
  %159 = load i32, i32* %142, align 8
  call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %158, i32 %159, i32 %137) #16
  br label %160

160:                                              ; preds = %151, %154, %141, %149
  %161 = phi i32 [ %150, %149 ], [ %137, %141 ], [ %152, %154 ], [ 0, %151 ]
  store i32 %161, i32* %142, align 8
  br label %162

162:                                              ; preds = %160, %136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %182) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #16
  br label %163

163:                                              ; preds = %67, %60, %55, %44, %39, %28, %21, %4, %162, %16
  ret void

164:                                              ; preds = %70
  %165 = and i32 %1, 4095
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %60

167:                                              ; preds = %164
  %168 = and i32 %2, 4095
  %169 = icmp eq i32 %168, 4095
  br i1 %169, label %170, label %67

170:                                              ; preds = %167, %70
  %171 = and i32 %1, -262144
  %172 = and i32 %2, -262144
  %173 = icmp eq i32 %171, %172
  br i1 %173, label %180, label %174

174:                                              ; preds = %170
  %175 = and i32 %1, 262143
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %60

177:                                              ; preds = %174
  %178 = and i32 %2, 262143
  %179 = icmp eq i32 %178, 262143
  br i1 %179, label %180, label %67

180:                                              ; preds = %177, %170
  %181 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #16
  %182 = bitcast i32* %9 to i8*
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %182) #16
  store i32 -1431655766, i32* %9, align 4
  %183 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %181, i32* nonnull %5) #16
  %184 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %182, i32* nonnull %6) #16
  %185 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  %188 = icmp sgt i32 %183, 0
  br i1 %187, label %104, label %74

189:                                              ; preds = %17
  %190 = icmp slt i32 %1, 2048
  %191 = icmp sgt i32 %2, 2047
  %192 = and i1 %190, %191
  br i1 %192, label %21, label %193

193:                                              ; preds = %189
  %194 = icmp slt i32 %1, 65536
  %195 = icmp sgt i32 %2, 65535
  %196 = and i1 %194, %195
  br i1 %196, label %21, label %197

197:                                              ; preds = %193
  %198 = icmp slt i32 %2, 128
  br i1 %198, label %28, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler18AddRuneRangeLatin1Eiib(%"class.re2::Compiler"* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %1, %2
  %6 = icmp sgt i32 %1, 255
  %7 = or i1 %6, %5
  br i1 %7, label %39, label %8

8:                                                ; preds = %4
  %9 = icmp slt i32 %2, 255
  %10 = select i1 %9, i32 %2, i32 255
  %11 = trunc i32 %1 to i8
  %12 = trunc i32 %10 to i8
  %13 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext %11, i8 zeroext %12, i1 zeroext %3, i32 0)
  %14 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %39

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i32 %13, i32* %18, align 8
  br label %39

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %19, i32 %13) #16
  store i32 %27, i32* %18, align 8
  br label %39

28:                                               ; preds = %22
  %29 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %33, align 8
  %35 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %34, i64 %32
  %36 = load i32, i32* %18, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %35, i32 %36, i32 %13) #16
  br label %37

37:                                               ; preds = %31, %28
  %38 = phi i32 [ %29, %31 ], [ 0, %28 ]
  store i32 %38, i32* %18, align 8
  br label %39

39:                                               ; preds = %37, %26, %21, %8, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3re28Compiler13Add_80_10ffffEv(%"class.re2::Compiler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %88, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -62, i8 zeroext -33, i1 zeroext false, i32 0)
  %7 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %6)
  %8 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %13, i32 %7) #16
  br label %30

21:                                               ; preds = %15
  %22 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %26, align 8
  %28 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %27, i64 %25
  %29 = load i32, i32* %12, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %28, i32 %29, i32 %7) #16
  br label %30

30:                                               ; preds = %21, %24, %11, %19
  %31 = phi i32 [ %20, %19 ], [ %7, %11 ], [ %22, %24 ], [ 0, %21 ]
  store i32 %31, i32* %12, align 8
  br label %32

32:                                               ; preds = %30, %5
  %33 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -32, i8 zeroext -17, i1 zeroext false, i32 0)
  %34 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %33)
  %35 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %34)
  %36 = load i8, i8* %8, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %59

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %40, i32 %35) #16
  br label %57

48:                                               ; preds = %42
  %49 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %48
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %53, align 8
  %55 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %54, i64 %52
  %56 = load i32, i32* %39, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %55, i32 %56, i32 %35) #16
  br label %57

57:                                               ; preds = %48, %51, %38, %46
  %58 = phi i32 [ %47, %46 ], [ %35, %38 ], [ %49, %51 ], [ 0, %48 ]
  store i32 %58, i32* %39, align 8
  br label %59

59:                                               ; preds = %57, %32
  %60 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -16, i8 zeroext -12, i1 zeroext false, i32 0)
  %61 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %60)
  %62 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %61)
  %63 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %62)
  %64 = load i8, i8* %8, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %168

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  store i32 %63, i32* %67, align 8
  br label %168

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %68, i32 %63) #16
  store i32 %76, i32* %67, align 8
  br label %168

77:                                               ; preds = %71
  %78 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %77
  %81 = sext i32 %78 to i64
  %82 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %82, align 8
  %84 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %83, i64 %81
  %85 = load i32, i32* %67, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %84, i32 %85, i32 %63) #16
  br label %86

86:                                               ; preds = %80, %77
  %87 = phi i32 [ %78, %80 ], [ 0, %77 ]
  store i32 %87, i32* %67, align 8
  br label %168

88:                                               ; preds = %1
  %89 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 0)
  %90 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -62, i8 zeroext -33, i1 zeroext false, i32 %89)
  %91 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %115

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %96, i32 %90) #16
  br label %113

104:                                              ; preds = %98
  %105 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %104
  %108 = sext i32 %105 to i64
  %109 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %109, align 8
  %111 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %110, i64 %108
  %112 = load i32, i32* %95, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %111, i32 %112, i32 %90) #16
  br label %113

113:                                              ; preds = %104, %107, %94, %102
  %114 = phi i32 [ %103, %102 ], [ %90, %94 ], [ %105, %107 ], [ 0, %104 ]
  store i32 %114, i32* %95, align 8
  br label %115

115:                                              ; preds = %113, %88
  %116 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %89)
  %117 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -32, i8 zeroext -17, i1 zeroext false, i32 %116)
  %118 = load i8, i8* %91, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %141

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %139, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %130

128:                                              ; preds = %124
  %129 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %122, i32 %117) #16
  br label %139

130:                                              ; preds = %124
  %131 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %130
  %134 = sext i32 %131 to i64
  %135 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %136 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %135, align 8
  %137 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %136, i64 %134
  %138 = load i32, i32* %121, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %137, i32 %138, i32 %117) #16
  br label %139

139:                                              ; preds = %130, %133, %120, %128
  %140 = phi i32 [ %129, %128 ], [ %117, %120 ], [ %131, %133 ], [ 0, %130 ]
  store i32 %140, i32* %121, align 8
  br label %141

141:                                              ; preds = %139, %115
  %142 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -128, i8 zeroext -65, i1 zeroext false, i32 %116)
  %143 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext -16, i8 zeroext -12, i1 zeroext false, i32 %142)
  %144 = load i8, i8* %91, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %168

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  store i32 %143, i32* %147, align 8
  br label %168

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %148, i32 %143) #16
  store i32 %156, i32* %147, align 8
  br label %168

157:                                              ; preds = %151
  %158 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %166, label %160

160:                                              ; preds = %157
  %161 = sext i32 %158 to i64
  %162 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %162, align 8
  %164 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %163, i64 %161
  %165 = load i32, i32* %147, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %164, i32 %165, i32 %143) #16
  br label %166

166:                                              ; preds = %160, %157
  %167 = phi i32 [ %158, %160 ], [ 0, %157 ]
  store i32 %167, i32* %147, align 8
  br label %168

168:                                              ; preds = %166, %155, %150, %141, %86, %75, %70, %59
  ret void
}

declare i32 @_ZN3re210runetocharEPcPKi(i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler4CopyENS_4FragE(%"class.re2::Compiler"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %class.LogMessage, align 8
  %6 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %6) #16
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %7 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %7 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = bitcast i8* %21 to i64*
  store i64 %14, i64* %22, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #16
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #16
  %34 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 1
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %5, i64 0, i32 1, i32 1, i32 3
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %36, align 8
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #16
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %40, i32 792) #16
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %6) #16
  %44 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  store i8 1, i8* %44, align 8
  %45 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %46 = bitcast { i64, i64 }* %4 to i32*
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 4
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 4
  %49 = getelementptr inbounds i8, i8* %45, i64 12
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = insertvalue { i64, i64 } undef, i64 %51, 0
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = insertvalue { i64, i64 } %52, i64 %54, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  ret { i64, i64 } %55
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden { i64, i64 } @_ZN3re28Compiler10ShortVisitEPNS_6RegexpENS_4FragE(%"class.re2::Compiler"* nocapture, %"class.re2::Regexp"* nocapture readnone, i64, i64) unnamed_addr #9 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  store i8 1, i8* %6, align 8
  %7 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast { i64, i64 }* %5 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 4
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = insertvalue { i64, i64 } undef, i64 %13, 0
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = insertvalue { i64, i64 } %14, i64 %16, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  ret { i64, i64 } %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler8PreVisitEPNS_6RegexpENS_4FragEPb(%"class.re2::Compiler"* nocapture readonly, %"class.re2::Regexp"* nocapture readnone, i64, i64, i8* nocapture) unnamed_addr #10 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 1, i8* %4, align 1
  br label %11

11:                                               ; preds = %5, %10
  %12 = bitcast { i64, i64 }* %6 to i32*
  store i32 0, i32* %12, align 8
  %13 = bitcast { i64, i64 }* %6 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 4
  %16 = getelementptr inbounds i8, i8* %13, i64 12
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %18, 0
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = insertvalue { i64, i64 } %19, i64 %21, 1
  ret { i64, i64 } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler7LiteralEib(%"class.re2::Compiler"* nocapture, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = bitcast i32* %14 to [4 x i8]*
  store i32 %1, i32* %13, align 4
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %18 [
    i32 2, label %28
    i32 1, label %67
  ]

18:                                               ; preds = %3
  %19 = bitcast { i64, i64 }* %12 to i32*
  store i32 0, i32* %19, align 8
  %20 = bitcast { i64, i64 }* %12 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 4
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 4
  %23 = getelementptr inbounds i8, i8* %20, i64 12
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %204

28:                                               ; preds = %3
  %29 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  %30 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  %34 = bitcast { i64, i64 }* %10 to i32*
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 4
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 4
  %37 = getelementptr inbounds i8, i8* %33, i64 12
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %39, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  store i64 %41, i64* %43, align 8
  br label %62

44:                                               ; preds = %28
  %45 = sext i32 %30 to i64
  %46 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %46, align 8
  %48 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %47, i64 %45
  %49 = zext i1 %2 to i32
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %48, i32 %1, i32 %1, i32 %49, i32 0) #16
  %50 = shl i32 %30, 1
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, %51
  %54 = bitcast { i64, i64 }* %11 to i32*
  store i32 %30, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %29, i64 4
  %56 = bitcast i8* %55 to i64*
  store i64 %53, i64* %56, align 4
  %57 = getelementptr inbounds i8, i8* %29, i64 12
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  br label %62

62:                                               ; preds = %32, %44
  %63 = phi i64 [ %61, %44 ], [ %41, %32 ]
  %64 = phi i64 [ %59, %44 ], [ %39, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %63, i64* %66, align 8
  br label %204

67:                                               ; preds = %3
  %68 = icmp slt i32 %1, 128
  br i1 %68, label %69, label %108

69:                                               ; preds = %67
  %70 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70)
  %71 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74)
  %75 = bitcast { i64, i64 }* %8 to i32*
  store i32 0, i32* %75, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 4
  %77 = bitcast i8* %76 to i64*
  store i64 0, i64* %77, align 4
  %78 = getelementptr inbounds i8, i8* %74, i64 12
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74)
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %80, i64* %83, align 8
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  store i64 %82, i64* %84, align 8
  br label %103

85:                                               ; preds = %69
  %86 = sext i32 %71 to i64
  %87 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %87, align 8
  %89 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %88, i64 %86
  %90 = zext i1 %2 to i32
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %89, i32 %1, i32 %1, i32 %90, i32 0) #16
  %91 = shl i32 %71, 1
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = or i64 %93, %92
  %95 = bitcast { i64, i64 }* %9 to i32*
  store i32 %71, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %70, i64 4
  %97 = bitcast i8* %96 to i64*
  store i64 %94, i64* %97, align 4
  %98 = getelementptr inbounds i8, i8* %70, i64 12
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %73, %85
  %104 = phi i64 [ %102, %85 ], [ %82, %73 ]
  %105 = phi i64 [ %100, %85 ], [ %80, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70)
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %104, i64* %107, align 8
  br label %204

108:                                              ; preds = %67
  %109 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #16
  store i32 -1431655766, i32* %14, align 4
  %110 = call i32 @_ZN3re210runetocharEPcPKi(i8* nonnull %109, i32* nonnull %13) #16
  %111 = load i8, i8* %109, align 4
  %112 = zext i8 %111 to i32
  %113 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113)
  %114 = call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %108
  %117 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117)
  %118 = bitcast { i64, i64 }* %6 to i32*
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds i8, i8* %117, i64 4
  %120 = bitcast i8* %119 to i64*
  store i64 0, i64* %120, align 4
  %121 = getelementptr inbounds i8, i8* %117, i64 12
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117)
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %123, i64* %126, align 8
  %127 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %125, i64* %127, align 8
  br label %145

128:                                              ; preds = %108
  %129 = sext i32 %114 to i64
  %130 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %131 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %130, align 8
  %132 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %131, i64 %129
  call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %132, i32 %112, i32 %112, i32 0, i32 0) #16
  %133 = shl i32 %114, 1
  %134 = zext i32 %133 to i64
  %135 = shl nuw i64 %134, 32
  %136 = or i64 %135, %134
  %137 = bitcast { i64, i64 }* %7 to i32*
  store i32 %114, i32* %137, align 8
  %138 = getelementptr inbounds i8, i8* %113, i64 4
  %139 = bitcast i8* %138 to i64*
  store i64 %136, i64* %139, align 4
  %140 = getelementptr inbounds i8, i8* %113, i64 12
  store i8 0, i8* %140, align 4
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %144 = load i64, i64* %143, align 8
  br label %145

145:                                              ; preds = %116, %128
  %146 = phi i64 [ %144, %128 ], [ %125, %116 ]
  %147 = phi i64 [ %142, %128 ], [ %123, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113)
  %148 = icmp sgt i32 %110, 1
  br i1 %148, label %149, label %166

149:                                              ; preds = %145
  %150 = bitcast { i64, i64 }* %5 to i8*
  %151 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %152 = bitcast { i64, i64 }* %5 to i32*
  %153 = getelementptr inbounds i8, i8* %150, i64 4
  %154 = bitcast i8* %153 to i64*
  %155 = getelementptr inbounds i8, i8* %150, i64 12
  %156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %158 = bitcast { i64, i64 }* %4 to i8*
  %159 = bitcast { i64, i64 }* %4 to i32*
  %160 = getelementptr inbounds i8, i8* %158, i64 4
  %161 = bitcast i8* %160 to i64*
  %162 = getelementptr inbounds i8, i8* %158, i64 12
  %163 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %164 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %165 = zext i32 %110 to i64
  br label %171

166:                                              ; preds = %193, %145
  %167 = phi i64 [ %146, %145 ], [ %201, %193 ]
  %168 = phi i64 [ %147, %145 ], [ %197, %193 ]
  %169 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %167, i64* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #16
  br label %204

171:                                              ; preds = %193, %149
  %172 = phi i64 [ 1, %149 ], [ %202, %193 ]
  %173 = phi i64 [ %147, %149 ], [ %197, %193 ]
  %174 = phi i64 [ %146, %149 ], [ %201, %193 ]
  %175 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 %172
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150)
  %178 = call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %179 = icmp slt i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %171
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158)
  store i32 0, i32* %159, align 8
  store i64 0, i64* %161, align 4
  store i8 0, i8* %162, align 4
  %181 = load i64, i64* %163, align 8
  %182 = load i64, i64* %164, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158)
  store i64 %181, i64* %156, align 8
  store i64 %182, i64* %157, align 8
  br label %193

183:                                              ; preds = %171
  %184 = sext i32 %178 to i64
  %185 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %151, align 8
  %186 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %185, i64 %184
  call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %186, i32 %177, i32 %177, i32 0, i32 0) #16
  %187 = shl i32 %178, 1
  %188 = zext i32 %187 to i64
  %189 = shl nuw i64 %188, 32
  %190 = or i64 %189, %188
  store i32 %178, i32* %152, align 8
  store i64 %190, i64* %154, align 4
  store i8 0, i8* %155, align 4
  %191 = load i64, i64* %156, align 8
  %192 = load i64, i64* %157, align 8
  br label %193

193:                                              ; preds = %180, %183
  %194 = phi i64 [ %192, %183 ], [ %182, %180 ]
  %195 = phi i64 [ %191, %183 ], [ %181, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150)
  %196 = call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* %0, i64 %173, i64 %174, i64 %195, i64 %194)
  %197 = extractvalue { i64, i64 } %196, 0
  %198 = extractvalue { i64, i64 } %196, 1
  %199 = and i64 %198, 1099511627775
  %200 = and i64 %174, -1099511627776
  %201 = or i64 %199, %200
  %202 = add nuw nsw i64 %172, 1
  %203 = icmp eq i64 %202, %165
  br i1 %203, label %166, label %171

204:                                              ; preds = %166, %103, %62, %18
  %205 = phi i64 [ %167, %166 ], [ %104, %103 ], [ %63, %62 ], [ %27, %18 ]
  %206 = phi i64 [ %168, %166 ], [ %105, %103 ], [ %64, %62 ], [ %25, %18 ]
  %207 = insertvalue { i64, i64 } undef, i64 %206, 0
  %208 = insertvalue { i64, i64 } %207, i64 %205, 1
  ret { i64, i64 } %208
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler9PostVisitEPNS_6RegexpENS_4FragES3_PS3_i(%"class.re2::Compiler"*, %"class.re2::Regexp"* nocapture readonly, i64, i64, i64, i64, %"struct.re2::Frag"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = alloca { i64, i64 }, align 8
  %15 = alloca { i64, i64 }, align 8
  %16 = alloca { i64, i64 }, align 8
  %17 = alloca { i64, i64 }, align 8
  %18 = alloca { i64, i64 }, align 8
  %19 = alloca { i64, i64 }, align 8
  %20 = alloca { i64, i64 }, align 8
  %21 = alloca { i64, i64 }, align 8
  %22 = alloca { i64, i64 }, align 8
  %23 = alloca { i64, i64 }, align 8
  %24 = alloca { i64, i64 }, align 8
  %25 = alloca { i64, i64 }, align 8
  %26 = alloca { i64, i64 }, align 8
  %27 = alloca { i64, i64 }, align 8
  %28 = alloca { i64, i64 }, align 8
  %29 = alloca { i64, i64 }, align 8
  %30 = alloca { i64, i64 }, align 8
  %31 = alloca { i64, i64 }, align 8
  %32 = alloca { i64, i64 }, align 8
  %33 = alloca { i64, i64 }, align 8
  %34 = alloca { i64, i64 }, align 8
  %35 = alloca %"struct.re2::Frag", align 8
  %36 = alloca %class.LogMessage, align 8
  %37 = alloca %class.LogMessage, align 8
  %38 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %8
  %42 = bitcast { i64, i64 }* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  %43 = bitcast { i64, i64 }* %34 to i32*
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 4
  %45 = bitcast i8* %44 to i64*
  store i64 0, i64* %45, align 4
  %46 = getelementptr inbounds i8, i8* %42, i64 12
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %34, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  br label %973

51:                                               ; preds = %8
  %52 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 0
  %53 = load i8, i8* %52, align 8
  switch i8 %53, label %922 [
    i8 17, label %886
    i8 1, label %54
    i8 2, label %64
    i8 21, label %100
    i8 5, label %179
    i8 6, label %206
    i8 7, label %233
    i8 8, label %246
    i8 9, label %259
    i8 3, label %272
    i8 4, label %282
    i8 12, label %374
    i8 13, label %467
    i8 20, label %503
    i8 11, label %677
    i8 14, label %690
    i8 15, label %730
    i8 18, label %770
    i8 19, label %810
    i8 16, label %850
  ]

54:                                               ; preds = %51
  %55 = bitcast { i64, i64 }* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55)
  %56 = bitcast { i64, i64 }* %32 to i32*
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 4
  %59 = getelementptr inbounds i8, i8* %55, i64 12
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55)
  br label %973

64:                                               ; preds = %51
  %65 = bitcast { i64, i64 }* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  %66 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %64
  %69 = bitcast { i64, i64 }* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69)
  %70 = bitcast { i64, i64 }* %30 to i32*
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 4
  %72 = bitcast i8* %71 to i64*
  store i64 0, i64* %72, align 4
  %73 = getelementptr inbounds i8, i8* %69, i64 12
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69)
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 0
  store i64 %75, i64* %78, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 1
  store i64 %77, i64* %79, align 8
  br label %97

80:                                               ; preds = %64
  %81 = sext i32 %66 to i64
  %82 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %82, align 8
  %84 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %83, i64 %81
  tail call void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"* %84, i32 0) #16
  %85 = shl i32 %66, 1
  %86 = zext i32 %85 to i64
  %87 = shl nuw i64 %86, 32
  %88 = or i64 %87, %86
  %89 = bitcast { i64, i64 }* %31 to i32*
  store i32 %66, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %65, i64 4
  %91 = bitcast i8* %90 to i64*
  store i64 %88, i64* %91, align 4
  %92 = getelementptr inbounds i8, i8* %65, i64 12
  store i8 1, i8* %92, align 4
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %31, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  br label %97

97:                                               ; preds = %68, %80
  %98 = phi i64 [ %96, %80 ], [ %77, %68 ]
  %99 = phi i64 [ %94, %80 ], [ %75, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  br label %973

100:                                              ; preds = %51
  %101 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = bitcast { i64, i64 }* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103)
  %104 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %100
  %107 = bitcast { i64, i64 }* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107)
  %108 = bitcast { i64, i64 }* %28 to i32*
  store i32 0, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %107, i64 4
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 4
  %111 = getelementptr inbounds i8, i8* %107, i64 12
  store i8 0, i8* %111, align 4
  %112 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107)
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  store i64 %113, i64* %116, align 8
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  store i64 %115, i64* %117, align 8
  br label %131

118:                                              ; preds = %100
  %119 = sext i32 %104 to i64
  %120 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %121 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %120, align 8
  %122 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %121, i64 %119
  tail call void @_ZN3re24Prog4Inst9InitMatchEi(%"class.re2::Prog::Inst"* %122, i32 %102) #16
  %123 = bitcast { i64, i64 }* %29 to i32*
  store i32 %104, i32* %123, align 8
  %124 = getelementptr inbounds i8, i8* %103, i64 4
  %125 = bitcast i8* %124 to i64*
  store i64 0, i64* %125, align 4
  %126 = getelementptr inbounds i8, i8* %103, i64 12
  store i8 0, i8* %126, align 4
  %127 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  %130 = load i64, i64* %129, align 8
  br label %131

131:                                              ; preds = %106, %118
  %132 = phi i64 [ %130, %118 ], [ %115, %106 ]
  %133 = phi i64 [ %128, %118 ], [ %113, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103)
  %134 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 13
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 2
  br i1 %136, label %137, label %973

137:                                              ; preds = %131
  %138 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138)
  %139 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %140 = icmp slt i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %137
  %142 = bitcast { i64, i64 }* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142)
  %143 = bitcast { i64, i64 }* %26 to i32*
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 4
  %145 = bitcast i8* %144 to i64*
  store i64 0, i64* %145, align 4
  %146 = getelementptr inbounds i8, i8* %142, i64 12
  store i8 0, i8* %146, align 4
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i64 0, i32 1
  %150 = load i64, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142)
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  store i64 %148, i64* %151, align 8
  %152 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  store i64 %150, i64* %152, align 8
  br label %170

153:                                              ; preds = %137
  %154 = sext i32 %139 to i64
  %155 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %156 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %155, align 8
  %157 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %156, i64 %154
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %157, i32 8, i32 0) #16
  %158 = shl i32 %139, 1
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = or i64 %160, %159
  %162 = bitcast { i64, i64 }* %27 to i32*
  store i32 %139, i32* %162, align 8
  %163 = getelementptr inbounds i8, i8* %138, i64 4
  %164 = bitcast i8* %163 to i64*
  store i64 %161, i64* %164, align 4
  %165 = getelementptr inbounds i8, i8* %138, i64 12
  store i8 1, i8* %165, align 4
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %169 = load i64, i64* %168, align 8
  br label %170

170:                                              ; preds = %141, %153
  %171 = phi i64 [ %169, %153 ], [ %150, %141 ]
  %172 = phi i64 [ %167, %153 ], [ %148, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138)
  %173 = tail call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* %0, i64 %172, i64 %171, i64 %133, i64 %132)
  %174 = extractvalue { i64, i64 } %173, 0
  %175 = extractvalue { i64, i64 } %173, 1
  %176 = and i64 %175, 1099511627775
  %177 = and i64 %132, -1099511627776
  %178 = or i64 %176, %177
  br label %973

179:                                              ; preds = %51
  %180 = bitcast %"struct.re2::Frag"* %6 to i64*
  %181 = load i64, i64* %180, align 4
  %182 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %183 = bitcast i32* %182 to i64*
  %184 = load i64, i64* %183, align 4
  %185 = icmp sgt i32 %7, 1
  br i1 %185, label %186, label %973

186:                                              ; preds = %179
  %187 = zext i32 %7 to i64
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi i64 [ 1, %186 ], [ %204, %188 ]
  %190 = phi i64 [ %181, %186 ], [ %199, %188 ]
  %191 = phi i64 [ %184, %186 ], [ %203, %188 ]
  %192 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 %189
  %193 = bitcast %"struct.re2::Frag"* %192 to i64*
  %194 = load i64, i64* %193, align 4
  %195 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 %189, i32 1, i32 1
  %196 = bitcast i32* %195 to i64*
  %197 = load i64, i64* %196, align 4
  %198 = tail call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* %0, i64 %190, i64 %191, i64 %194, i64 %197)
  %199 = extractvalue { i64, i64 } %198, 0
  %200 = extractvalue { i64, i64 } %198, 1
  %201 = and i64 %200, 1099511627775
  %202 = and i64 %191, -1099511627776
  %203 = or i64 %201, %202
  %204 = add nuw nsw i64 %189, 1
  %205 = icmp eq i64 %204, %187
  br i1 %205, label %973, label %188

206:                                              ; preds = %51
  %207 = bitcast %"struct.re2::Frag"* %6 to i64*
  %208 = load i64, i64* %207, align 4
  %209 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %210 = bitcast i32* %209 to i64*
  %211 = load i64, i64* %210, align 4
  %212 = icmp sgt i32 %7, 1
  br i1 %212, label %213, label %973

213:                                              ; preds = %206
  %214 = zext i32 %7 to i64
  br label %215

215:                                              ; preds = %215, %213
  %216 = phi i64 [ 1, %213 ], [ %231, %215 ]
  %217 = phi i64 [ %208, %213 ], [ %226, %215 ]
  %218 = phi i64 [ %211, %213 ], [ %230, %215 ]
  %219 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 %216
  %220 = bitcast %"struct.re2::Frag"* %219 to i64*
  %221 = load i64, i64* %220, align 4
  %222 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 %216, i32 1, i32 1
  %223 = bitcast i32* %222 to i64*
  %224 = load i64, i64* %223, align 4
  %225 = tail call { i64, i64 } @_ZN3re28Compiler3AltENS_4FragES1_(%"class.re2::Compiler"* %0, i64 %217, i64 %218, i64 %221, i64 %224)
  %226 = extractvalue { i64, i64 } %225, 0
  %227 = extractvalue { i64, i64 } %225, 1
  %228 = and i64 %227, 1099511627775
  %229 = and i64 %218, -1099511627776
  %230 = or i64 %228, %229
  %231 = add nuw nsw i64 %216, 1
  %232 = icmp eq i64 %231, %214
  br i1 %232, label %973, label %215

233:                                              ; preds = %51
  %234 = bitcast %"struct.re2::Frag"* %6 to i64*
  %235 = load i64, i64* %234, align 4
  %236 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %237 = bitcast i32* %236 to i64*
  %238 = load i64, i64* %237, align 4
  %239 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %240 = load i16, i16* %239, align 2
  %241 = and i16 %240, 64
  %242 = icmp ne i16 %241, 0
  %243 = tail call { i64, i64 } @_ZN3re28Compiler4StarENS_4FragEb(%"class.re2::Compiler"* %0, i64 %235, i64 %238, i1 zeroext %242)
  %244 = extractvalue { i64, i64 } %243, 0
  %245 = extractvalue { i64, i64 } %243, 1
  br label %973

246:                                              ; preds = %51
  %247 = bitcast %"struct.re2::Frag"* %6 to i64*
  %248 = load i64, i64* %247, align 4
  %249 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %250 = bitcast i32* %249 to i64*
  %251 = load i64, i64* %250, align 4
  %252 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %253 = load i16, i16* %252, align 2
  %254 = and i16 %253, 64
  %255 = icmp ne i16 %254, 0
  %256 = tail call { i64, i64 } @_ZN3re28Compiler4PlusENS_4FragEb(%"class.re2::Compiler"* %0, i64 %248, i64 %251, i1 zeroext %255)
  %257 = extractvalue { i64, i64 } %256, 0
  %258 = extractvalue { i64, i64 } %256, 1
  br label %973

259:                                              ; preds = %51
  %260 = bitcast %"struct.re2::Frag"* %6 to i64*
  %261 = load i64, i64* %260, align 4
  %262 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %263 = bitcast i32* %262 to i64*
  %264 = load i64, i64* %263, align 4
  %265 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %266 = load i16, i16* %265, align 2
  %267 = and i16 %266, 64
  %268 = icmp ne i16 %267, 0
  %269 = tail call { i64, i64 } @_ZN3re28Compiler5QuestENS_4FragEb(%"class.re2::Compiler"* %0, i64 %261, i64 %264, i1 zeroext %268)
  %270 = extractvalue { i64, i64 } %269, 0
  %271 = extractvalue { i64, i64 } %269, 1
  br label %973

272:                                              ; preds = %51
  %273 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %276 = load i16, i16* %275, align 2
  %277 = and i16 %276, 1
  %278 = icmp ne i16 %277, 0
  %279 = tail call { i64, i64 } @_ZN3re28Compiler7LiteralEib(%"class.re2::Compiler"* %0, i32 %274, i1 zeroext %278)
  %280 = extractvalue { i64, i64 } %279, 0
  %281 = extractvalue { i64, i64 } %279, 1
  br label %973

282:                                              ; preds = %51
  %283 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %322

286:                                              ; preds = %282
  %287 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287)
  %288 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %289 = icmp slt i32 %288, 0
  br i1 %289, label %290, label %302

290:                                              ; preds = %286
  %291 = bitcast { i64, i64 }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %291)
  %292 = bitcast { i64, i64 }* %22 to i32*
  store i32 0, i32* %292, align 8
  %293 = getelementptr inbounds i8, i8* %291, i64 4
  %294 = bitcast i8* %293 to i64*
  store i64 0, i64* %294, align 4
  %295 = getelementptr inbounds i8, i8* %291, i64 12
  store i8 0, i8* %295, align 4
  %296 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 0
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i64 0, i32 1
  %299 = load i64, i64* %298, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %291)
  %300 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  store i64 %297, i64* %300, align 8
  %301 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  store i64 %299, i64* %301, align 8
  br label %319

302:                                              ; preds = %286
  %303 = sext i32 %288 to i64
  %304 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %305 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %304, align 8
  %306 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %305, i64 %303
  tail call void @_ZN3re24Prog4Inst7InitNopEj(%"class.re2::Prog::Inst"* %306, i32 0) #16
  %307 = shl i32 %288, 1
  %308 = zext i32 %307 to i64
  %309 = shl nuw i64 %308, 32
  %310 = or i64 %309, %308
  %311 = bitcast { i64, i64 }* %23 to i32*
  store i32 %288, i32* %311, align 8
  %312 = getelementptr inbounds i8, i8* %287, i64 4
  %313 = bitcast i8* %312 to i64*
  store i64 %310, i64* %313, align 4
  %314 = getelementptr inbounds i8, i8* %287, i64 12
  store i8 1, i8* %314, align 4
  %315 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  %318 = load i64, i64* %317, align 8
  br label %319

319:                                              ; preds = %290, %302
  %320 = phi i64 [ %318, %302 ], [ %299, %290 ]
  %321 = phi i64 [ %316, %302 ], [ %297, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287)
  br label %973

322:                                              ; preds = %282
  %323 = bitcast %"struct.re2::Frag"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %323)
  %324 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %35, i64 0, i32 0
  %325 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %35, i64 0, i32 1, i32 1
  %326 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %35, i64 0, i32 2
  %327 = bitcast %"struct.re2::Frag"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %327, i8 -86, i64 16, i1 false)
  store i32 0, i32* %324, align 8
  %328 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %35, i64 0, i32 1
  %329 = bitcast %"struct.re2::PatchList"* %328 to i64*
  store i64 0, i64* %329, align 4
  store i8 0, i8* %326, align 4
  %330 = icmp sgt i32 %284, 0
  br i1 %330, label %335, label %331

331:                                              ; preds = %322
  %332 = bitcast %"struct.re2::Frag"* %35 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast i32* %325 to i64*
  br label %344

335:                                              ; preds = %322
  %336 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 1
  %337 = bitcast %"class.std::__1::basic_string"** %336 to i32**
  %338 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 2
  %339 = bitcast %"struct.re2::Frag"* %35 to i64*
  %340 = bitcast i32* %325 to i64*
  %341 = bitcast i32* %325 to i40*
  %342 = load i64, i64* %339, align 8
  br label %348

343:                                              ; preds = %366
  store i64 %368, i64* %339, align 8
  br label %344

344:                                              ; preds = %331, %343
  %345 = phi i64* [ %334, %331 ], [ %340, %343 ]
  %346 = phi i64 [ %333, %331 ], [ %368, %343 ]
  %347 = load i64, i64* %345, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %323)
  br label %973

348:                                              ; preds = %335, %366
  %349 = phi i64 [ 0, %335 ], [ %370, %366 ]
  %350 = phi i64 [ %342, %335 ], [ %368, %366 ]
  %351 = load i32*, i32** %337, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 %349
  %353 = load i32, i32* %352, align 4
  %354 = load i16, i16* %338, align 2
  %355 = and i16 %354, 1
  %356 = icmp ne i16 %355, 0
  %357 = tail call { i64, i64 } @_ZN3re28Compiler7LiteralEib(%"class.re2::Compiler"* %0, i32 %353, i1 zeroext %356)
  %358 = extractvalue { i64, i64 } %357, 0
  %359 = extractvalue { i64, i64 } %357, 1
  %360 = icmp eq i64 %349, 0
  br i1 %360, label %366, label %361

361:                                              ; preds = %348
  %362 = load i64, i64* %340, align 8
  %363 = tail call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* %0, i64 %350, i64 %362, i64 %358, i64 %359)
  %364 = extractvalue { i64, i64 } %363, 0
  %365 = extractvalue { i64, i64 } %363, 1
  br label %366

366:                                              ; preds = %348, %361
  %367 = phi i64 [ %365, %361 ], [ %359, %348 ]
  %368 = phi i64 [ %364, %361 ], [ %358, %348 ]
  %369 = trunc i64 %367 to i40
  store i40 %369, i40* %341, align 8
  %370 = add nuw nsw i64 %349, 1
  %371 = load i32, i32* %283, align 8
  %372 = sext i32 %371 to i64
  %373 = icmp slt i64 %370, %372
  br i1 %373, label %348, label %343

374:                                              ; preds = %51
  %375 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %376 = load i64, i64* %375, align 8
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %428, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %380 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %379, align 8
  %381 = icmp eq %"struct.std::__1::__hash_node_base"* %380, null
  br i1 %381, label %388, label %382

382:                                              ; preds = %378, %382
  %383 = phi %"struct.std::__1::__hash_node_base"* [ %385, %382 ], [ %380, %378 ]
  %384 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %383, i64 0, i32 0
  %385 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %384, align 8
  %386 = bitcast %"struct.std::__1::__hash_node_base"* %383 to i8*
  tail call void @_ZdlPv(i8* %386) #17
  %387 = icmp eq %"struct.std::__1::__hash_node_base"* %385, null
  br i1 %387, label %388, label %382

388:                                              ; preds = %382, %378
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %379, align 8
  %389 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %390 = load i64, i64* %389, align 8
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %410, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = add i64 %390, -1
  %395 = and i64 %390, 3
  %396 = icmp ult i64 %394, 3
  br i1 %396, label %399, label %397

397:                                              ; preds = %392
  %398 = sub i64 %390, %395
  br label %411

399:                                              ; preds = %411, %392
  %400 = phi i64 [ 0, %392 ], [ %425, %411 ]
  %401 = icmp eq i64 %395, 0
  br i1 %401, label %410, label %402

402:                                              ; preds = %399, %402
  %403 = phi i64 [ %407, %402 ], [ %400, %399 ]
  %404 = phi i64 [ %408, %402 ], [ %395, %399 ]
  %405 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %393, align 8
  %406 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %405, i64 %403
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %406, align 8
  %407 = add nuw i64 %403, 1
  %408 = add i64 %404, -1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %402, !llvm.loop !6

410:                                              ; preds = %399, %402, %388
  store i64 0, i64* %375, align 8
  br label %428

411:                                              ; preds = %411, %397
  %412 = phi i64 [ 0, %397 ], [ %425, %411 ]
  %413 = phi i64 [ %398, %397 ], [ %426, %411 ]
  %414 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %393, align 8
  %415 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %414, i64 %412
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %415, align 8
  %416 = or i64 %412, 1
  %417 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %393, align 8
  %418 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %417, i64 %416
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %418, align 8
  %419 = or i64 %412, 2
  %420 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %393, align 8
  %421 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %420, i64 %419
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %421, align 8
  %422 = or i64 %412, 3
  %423 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %393, align 8
  %424 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %423, i64 %422
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %424, align 8
  %425 = add nuw i64 %412, 4
  %426 = add i64 %413, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %399, label %411

428:                                              ; preds = %374, %410
  %429 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %429, align 8
  %430 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1
  %431 = bitcast %"struct.re2::PatchList"* %430 to i64*
  store i64 0, i64* %431, align 4
  %432 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  %433 = load i32, i32* %432, align 4
  %434 = icmp eq i32 %433, 2
  br i1 %434, label %436, label %435

435:                                              ; preds = %428
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 0, i32 1114111, i1 zeroext false) #16
  br label %460

436:                                              ; preds = %428
  %437 = tail call i32 @_ZN3re28Compiler22UncachedRuneByteSuffixEhhbi(%"class.re2::Compiler"* %0, i8 zeroext 0, i8 zeroext -1, i1 zeroext false, i32 0) #16
  %438 = load i8, i8* %38, align 8, !range !2
  %439 = icmp eq i8 %438, 0
  br i1 %439, label %440, label %460

440:                                              ; preds = %436
  %441 = load i32, i32* %429, align 8
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  store i32 %437, i32* %429, align 8
  br label %460

444:                                              ; preds = %440
  %445 = load i32, i32* %432, align 4
  %446 = icmp eq i32 %445, 1
  br i1 %446, label %447, label %449

447:                                              ; preds = %444
  %448 = tail call i32 @_ZN3re28Compiler18AddSuffixRecursiveEii(%"class.re2::Compiler"* %0, i32 %441, i32 %437) #16
  store i32 %448, i32* %429, align 8
  br label %460

449:                                              ; preds = %444
  %450 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %451 = icmp slt i32 %450, 0
  br i1 %451, label %458, label %452

452:                                              ; preds = %449
  %453 = sext i32 %450 to i64
  %454 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %454, align 8
  %456 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %455, i64 %453
  %457 = load i32, i32* %429, align 8
  tail call void @_ZN3re24Prog4Inst7InitAltEjj(%"class.re2::Prog::Inst"* %456, i32 %457, i32 %437) #16
  br label %458

458:                                              ; preds = %452, %449
  %459 = phi i32 [ %450, %452 ], [ 0, %449 ]
  store i32 %459, i32* %429, align 8
  br label %460

460:                                              ; preds = %458, %447, %443, %436, %435
  %461 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12
  %462 = bitcast %"struct.re2::Frag"* %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1, i32 1
  %465 = bitcast i32* %464 to i64*
  %466 = load i64, i64* %465, align 8
  br label %973

467:                                              ; preds = %51
  %468 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %468)
  %469 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %470 = icmp slt i32 %469, 0
  br i1 %470, label %471, label %483

471:                                              ; preds = %467
  %472 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %472)
  %473 = bitcast { i64, i64 }* %16 to i32*
  store i32 0, i32* %473, align 8
  %474 = getelementptr inbounds i8, i8* %472, i64 4
  %475 = bitcast i8* %474 to i64*
  store i64 0, i64* %475, align 4
  %476 = getelementptr inbounds i8, i8* %472, i64 12
  store i8 0, i8* %476, align 4
  %477 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %478 = load i64, i64* %477, align 8
  %479 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %480 = load i64, i64* %479, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %472)
  %481 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 %478, i64* %481, align 8
  %482 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  store i64 %480, i64* %482, align 8
  br label %500

483:                                              ; preds = %467
  %484 = sext i32 %469 to i64
  %485 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %486 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %485, align 8
  %487 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %486, i64 %484
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %487, i32 0, i32 255, i32 0, i32 0) #16
  %488 = shl i32 %469, 1
  %489 = zext i32 %488 to i64
  %490 = shl nuw i64 %489, 32
  %491 = or i64 %490, %489
  %492 = bitcast { i64, i64 }* %17 to i32*
  store i32 %469, i32* %492, align 8
  %493 = getelementptr inbounds i8, i8* %468, i64 4
  %494 = bitcast i8* %493 to i64*
  store i64 %491, i64* %494, align 4
  %495 = getelementptr inbounds i8, i8* %468, i64 12
  store i8 0, i8* %495, align 4
  %496 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %499 = load i64, i64* %498, align 8
  br label %500

500:                                              ; preds = %471, %483
  %501 = phi i64 [ %499, %483 ], [ %480, %471 ]
  %502 = phi i64 [ %497, %483 ], [ %478, %471 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %468)
  br label %973

503:                                              ; preds = %51
  %504 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7
  %505 = bitcast %union.anon.47* %504 to %"class.re2::CharClass"**
  %506 = load %"class.re2::CharClass"*, %"class.re2::CharClass"** %505, align 8
  %507 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %506, i64 0, i32 2
  %508 = load i32, i32* %507, align 4
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %558

510:                                              ; preds = %503
  %511 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %511) #16
  store i8 0, i8* %511, align 8
  %512 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 1
  %513 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 1, i32 2, i32 0, i32 0
  %514 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %512, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %513, align 8
  %515 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 1, i32 1
  %516 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %515, i64 0, i32 0
  %517 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %518 = bitcast %"class.std::__1::basic_ostringstream"* %512 to i64*
  store i64 %517, i64* %518, align 8
  %519 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %520 = bitcast %"class.std::__1::basic_ostringstream"* %512 to i8**
  %521 = inttoptr i64 %517 to i8*
  %522 = getelementptr i8, i8* %521, i64 -24
  %523 = bitcast i8* %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.std::__1::basic_ostringstream"* %512 to i8*
  %526 = getelementptr inbounds i8, i8* %525, i64 %524
  %527 = bitcast i8* %526 to i64*
  store i64 %519, i64* %527, align 8
  %528 = load i8*, i8** %520, align 8
  %529 = getelementptr i8, i8* %528, i64 -24
  %530 = bitcast i8* %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = getelementptr inbounds i8, i8* %525, i64 %531
  %533 = bitcast i8* %532 to %"class.std::__1::ios_base"*
  %534 = bitcast %"class.std::__1::basic_stringbuf"* %515 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %533, i8* %534) #16
  %535 = getelementptr inbounds i8, i8* %532, i64 136
  %536 = bitcast i8* %535 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %536, align 8
  %537 = getelementptr inbounds i8, i8* %532, i64 144
  %538 = bitcast i8* %537 to i32*
  store i32 -1, i32* %538, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %514, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %513, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %516) #16
  %539 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %515, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %539, align 8
  %540 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 1, i32 1, i32 1
  %541 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %36, i64 0, i32 1, i32 1, i32 3
  %542 = bitcast %"class.std::__1::basic_string"* %540 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %542, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %541, align 8
  %543 = bitcast %"class.std::__1::basic_ostringstream"* %512 to %"class.std::__1::basic_ostream"*
  %544 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %543, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #16
  %545 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %544, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %546 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %545, i32 919) #16
  %547 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %546, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %548 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %543, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i64 23) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %36) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %511) #16
  store i8 1, i8* %38, align 8
  %549 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %549)
  %550 = bitcast { i64, i64 }* %15 to i32*
  store i32 0, i32* %550, align 8
  %551 = getelementptr inbounds i8, i8* %549, i64 4
  %552 = bitcast i8* %551 to i64*
  store i64 0, i64* %552, align 4
  %553 = getelementptr inbounds i8, i8* %549, i64 12
  store i8 0, i8* %553, align 4
  %554 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %557 = load i64, i64* %556, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %549)
  br label %973

558:                                              ; preds = %503
  %559 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %506, i64 0, i32 0
  %560 = load i8, i8* %559, align 8, !range !2
  %561 = icmp ne i8 %560, 0
  %562 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %563 = load i64, i64* %562, align 8
  %564 = icmp eq i64 %563, 0
  br i1 %564, label %615, label %565

565:                                              ; preds = %558
  %566 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %567 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %566, align 8
  %568 = icmp eq %"struct.std::__1::__hash_node_base"* %567, null
  br i1 %568, label %575, label %569

569:                                              ; preds = %565, %569
  %570 = phi %"struct.std::__1::__hash_node_base"* [ %572, %569 ], [ %567, %565 ]
  %571 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %570, i64 0, i32 0
  %572 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %571, align 8
  %573 = bitcast %"struct.std::__1::__hash_node_base"* %570 to i8*
  tail call void @_ZdlPv(i8* %573) #17
  %574 = icmp eq %"struct.std::__1::__hash_node_base"* %572, null
  br i1 %574, label %575, label %569

575:                                              ; preds = %569, %565
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %566, align 8
  %576 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %577 = load i64, i64* %576, align 8
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %597, label %579

579:                                              ; preds = %575
  %580 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = add i64 %577, -1
  %582 = and i64 %577, 3
  %583 = icmp ult i64 %581, 3
  br i1 %583, label %586, label %584

584:                                              ; preds = %579
  %585 = sub i64 %577, %582
  br label %598

586:                                              ; preds = %598, %579
  %587 = phi i64 [ 0, %579 ], [ %612, %598 ]
  %588 = icmp eq i64 %582, 0
  br i1 %588, label %597, label %589

589:                                              ; preds = %586, %589
  %590 = phi i64 [ %594, %589 ], [ %587, %586 ]
  %591 = phi i64 [ %595, %589 ], [ %582, %586 ]
  %592 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %580, align 8
  %593 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %592, i64 %590
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %593, align 8
  %594 = add nuw i64 %590, 1
  %595 = add i64 %591, -1
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %589, !llvm.loop !7

597:                                              ; preds = %586, %589, %575
  store i64 0, i64* %562, align 8
  br label %615

598:                                              ; preds = %598, %584
  %599 = phi i64 [ 0, %584 ], [ %612, %598 ]
  %600 = phi i64 [ %585, %584 ], [ %613, %598 ]
  %601 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %580, align 8
  %602 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %601, i64 %599
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %602, align 8
  %603 = or i64 %599, 1
  %604 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %580, align 8
  %605 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %604, i64 %603
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %605, align 8
  %606 = or i64 %599, 2
  %607 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %580, align 8
  %608 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %607, i64 %606
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %608, align 8
  %609 = or i64 %599, 3
  %610 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %580, align 8
  %611 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %610, i64 %609
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %611, align 8
  %612 = add nuw i64 %599, 4
  %613 = add i64 %600, -4
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %586, label %598

615:                                              ; preds = %558, %597
  %616 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %616, align 8
  %617 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1
  %618 = bitcast %"struct.re2::PatchList"* %617 to i64*
  store i64 0, i64* %618, align 4
  %619 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %506, i64 0, i32 3
  %620 = getelementptr inbounds %"class.re2::CharClass", %"class.re2::CharClass"* %506, i64 0, i32 4
  %621 = load i32, i32* %620, align 8
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %626, label %623

623:                                              ; preds = %615
  %624 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %619, align 8
  %625 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  br label %633

626:                                              ; preds = %670, %615
  %627 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12
  %628 = bitcast %"struct.re2::Frag"* %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 12, i32 1, i32 1
  %631 = bitcast i32* %630 to i64*
  %632 = load i64, i64* %631, align 8
  br label %973

633:                                              ; preds = %623, %670
  %634 = phi %"struct.re2::RuneRange"* [ %624, %623 ], [ %671, %670 ]
  %635 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %634, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  br i1 %561, label %637, label %643

637:                                              ; preds = %633
  %638 = icmp sgt i32 %636, 64
  br i1 %638, label %639, label %648

639:                                              ; preds = %637
  %640 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %634, i64 0, i32 1
  %641 = load i32, i32* %640, align 4
  %642 = icmp slt i32 %641, 91
  br i1 %642, label %670, label %643

643:                                              ; preds = %633, %639
  %644 = icmp slt i32 %636, 66
  br i1 %644, label %648, label %645

645:                                              ; preds = %643
  %646 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %634, i64 0, i32 1
  %647 = load i32, i32* %646, align 4
  br label %652

648:                                              ; preds = %637, %643
  %649 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %634, i64 0, i32 1
  %650 = load i32, i32* %649, align 4
  %651 = icmp sgt i32 %650, 121
  br i1 %651, label %661, label %652

652:                                              ; preds = %645, %648
  %653 = phi i32 [ %647, %645 ], [ %650, %648 ]
  %654 = icmp slt i32 %653, 65
  %655 = icmp sgt i32 %636, 122
  %656 = or i1 %655, %654
  br i1 %656, label %661, label %657

657:                                              ; preds = %652
  %658 = icmp sgt i32 %636, 90
  %659 = icmp slt i32 %653, 97
  %660 = and i1 %658, %659
  br i1 %660, label %661, label %663

661:                                              ; preds = %657, %652, %648
  %662 = phi i32 [ %653, %657 ], [ %653, %652 ], [ %650, %648 ]
  br label %663

663:                                              ; preds = %661, %657
  %664 = phi i32 [ %662, %661 ], [ %653, %657 ]
  %665 = phi i1 [ false, %661 ], [ %561, %657 ]
  %666 = load i32, i32* %625, align 4
  %667 = icmp eq i32 %666, 2
  br i1 %667, label %669, label %668

668:                                              ; preds = %663
  tail call void @_ZN3re28Compiler16AddRuneRangeUTF8Eiib(%"class.re2::Compiler"* %0, i32 %636, i32 %664, i1 zeroext %665) #16
  br label %670

669:                                              ; preds = %663
  tail call void @_ZN3re28Compiler18AddRuneRangeLatin1Eiib(%"class.re2::Compiler"* %0, i32 %636, i32 %664, i1 zeroext %665) #16
  br label %670

670:                                              ; preds = %669, %668, %639
  %671 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %634, i64 1
  %672 = load %"struct.re2::RuneRange"*, %"struct.re2::RuneRange"** %619, align 8
  %673 = load i32, i32* %620, align 8
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds %"struct.re2::RuneRange", %"struct.re2::RuneRange"* %672, i64 %674
  %676 = icmp eq %"struct.re2::RuneRange"* %671, %675
  br i1 %676, label %626, label %633

677:                                              ; preds = %51
  %678 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %1, i64 0, i32 7, i32 0, i32 0
  %679 = load i32, i32* %678, align 8
  %680 = icmp slt i32 %679, 0
  %681 = bitcast %"struct.re2::Frag"* %6 to i64*
  %682 = load i64, i64* %681, align 4
  %683 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %6, i64 0, i32 1, i32 1
  %684 = bitcast i32* %683 to i64*
  %685 = load i64, i64* %684, align 4
  br i1 %680, label %973, label %686

686:                                              ; preds = %677
  %687 = tail call { i64, i64 } @_ZN3re28Compiler7CaptureENS_4FragEi(%"class.re2::Compiler"* %0, i64 %682, i64 %685, i32 %679)
  %688 = extractvalue { i64, i64 } %687, 0
  %689 = extractvalue { i64, i64 } %687, 1
  br label %973

690:                                              ; preds = %51
  %691 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %692 = load i8, i8* %691, align 8, !range !2
  %693 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %693)
  %694 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %695 = icmp slt i32 %694, 0
  br i1 %695, label %696, label %708

696:                                              ; preds = %690
  %697 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %697)
  %698 = bitcast { i64, i64 }* %13 to i32*
  store i32 0, i32* %698, align 8
  %699 = getelementptr inbounds i8, i8* %697, i64 4
  %700 = bitcast i8* %699 to i64*
  store i64 0, i64* %700, align 4
  %701 = getelementptr inbounds i8, i8* %697, i64 12
  store i8 0, i8* %701, align 4
  %702 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %703 = load i64, i64* %702, align 8
  %704 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %705 = load i64, i64* %704, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %697)
  %706 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %703, i64* %706, align 8
  %707 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  store i64 %705, i64* %707, align 8
  br label %727

708:                                              ; preds = %690
  %709 = icmp eq i8 %692, 0
  %710 = select i1 %709, i32 1, i32 2
  %711 = sext i32 %694 to i64
  %712 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %713 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %712, align 8
  %714 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %713, i64 %711
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %714, i32 %710, i32 0) #16
  %715 = shl i32 %694, 1
  %716 = zext i32 %715 to i64
  %717 = shl nuw i64 %716, 32
  %718 = or i64 %717, %716
  %719 = bitcast { i64, i64 }* %14 to i32*
  store i32 %694, i32* %719, align 8
  %720 = getelementptr inbounds i8, i8* %693, i64 4
  %721 = bitcast i8* %720 to i64*
  store i64 %718, i64* %721, align 4
  %722 = getelementptr inbounds i8, i8* %693, i64 12
  store i8 1, i8* %722, align 4
  %723 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %724 = load i64, i64* %723, align 8
  %725 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %726 = load i64, i64* %725, align 8
  br label %727

727:                                              ; preds = %696, %708
  %728 = phi i64 [ %726, %708 ], [ %705, %696 ]
  %729 = phi i64 [ %724, %708 ], [ %703, %696 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %693)
  br label %973

730:                                              ; preds = %51
  %731 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %732 = load i8, i8* %731, align 8, !range !2
  %733 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %733)
  %734 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %735 = icmp slt i32 %734, 0
  br i1 %735, label %736, label %748

736:                                              ; preds = %730
  %737 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %737)
  %738 = bitcast { i64, i64 }* %11 to i32*
  store i32 0, i32* %738, align 8
  %739 = getelementptr inbounds i8, i8* %737, i64 4
  %740 = bitcast i8* %739 to i64*
  store i64 0, i64* %740, align 4
  %741 = getelementptr inbounds i8, i8* %737, i64 12
  store i8 0, i8* %741, align 4
  %742 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %743 = load i64, i64* %742, align 8
  %744 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %745 = load i64, i64* %744, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %737)
  %746 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %743, i64* %746, align 8
  %747 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %745, i64* %747, align 8
  br label %767

748:                                              ; preds = %730
  %749 = icmp eq i8 %732, 0
  %750 = select i1 %749, i32 2, i32 1
  %751 = sext i32 %734 to i64
  %752 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %753 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %752, align 8
  %754 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %753, i64 %751
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %754, i32 %750, i32 0) #16
  %755 = shl i32 %734, 1
  %756 = zext i32 %755 to i64
  %757 = shl nuw i64 %756, 32
  %758 = or i64 %757, %756
  %759 = bitcast { i64, i64 }* %12 to i32*
  store i32 %734, i32* %759, align 8
  %760 = getelementptr inbounds i8, i8* %733, i64 4
  %761 = bitcast i8* %760 to i64*
  store i64 %758, i64* %761, align 4
  %762 = getelementptr inbounds i8, i8* %733, i64 12
  store i8 1, i8* %762, align 4
  %763 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %764 = load i64, i64* %763, align 8
  %765 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %766 = load i64, i64* %765, align 8
  br label %767

767:                                              ; preds = %736, %748
  %768 = phi i64 [ %766, %748 ], [ %745, %736 ]
  %769 = phi i64 [ %764, %748 ], [ %743, %736 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %733)
  br label %973

770:                                              ; preds = %51
  %771 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %772 = load i8, i8* %771, align 8, !range !2
  %773 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %773)
  %774 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %775 = icmp slt i32 %774, 0
  br i1 %775, label %776, label %788

776:                                              ; preds = %770
  %777 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %777)
  %778 = bitcast { i64, i64 }* %9 to i32*
  store i32 0, i32* %778, align 8
  %779 = getelementptr inbounds i8, i8* %777, i64 4
  %780 = bitcast i8* %779 to i64*
  store i64 0, i64* %780, align 4
  %781 = getelementptr inbounds i8, i8* %777, i64 12
  store i8 0, i8* %781, align 4
  %782 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %783 = load i64, i64* %782, align 8
  %784 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %785 = load i64, i64* %784, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %777)
  %786 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %783, i64* %786, align 8
  %787 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %785, i64* %787, align 8
  br label %807

788:                                              ; preds = %770
  %789 = icmp eq i8 %772, 0
  %790 = select i1 %789, i32 4, i32 8
  %791 = sext i32 %774 to i64
  %792 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %793 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %792, align 8
  %794 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %793, i64 %791
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %794, i32 %790, i32 0) #16
  %795 = shl i32 %774, 1
  %796 = zext i32 %795 to i64
  %797 = shl nuw i64 %796, 32
  %798 = or i64 %797, %796
  %799 = bitcast { i64, i64 }* %10 to i32*
  store i32 %774, i32* %799, align 8
  %800 = getelementptr inbounds i8, i8* %773, i64 4
  %801 = bitcast i8* %800 to i64*
  store i64 %798, i64* %801, align 4
  %802 = getelementptr inbounds i8, i8* %773, i64 12
  store i8 1, i8* %802, align 4
  %803 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %804 = load i64, i64* %803, align 8
  %805 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %806 = load i64, i64* %805, align 8
  br label %807

807:                                              ; preds = %776, %788
  %808 = phi i64 [ %806, %788 ], [ %785, %776 ]
  %809 = phi i64 [ %804, %788 ], [ %783, %776 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %773)
  br label %973

810:                                              ; preds = %51
  %811 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 5
  %812 = load i8, i8* %811, align 8, !range !2
  %813 = bitcast { i64, i64 }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %813)
  %814 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %815 = icmp slt i32 %814, 0
  br i1 %815, label %816, label %828

816:                                              ; preds = %810
  %817 = bitcast { i64, i64 }* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %817)
  %818 = bitcast { i64, i64 }* %18 to i32*
  store i32 0, i32* %818, align 8
  %819 = getelementptr inbounds i8, i8* %817, i64 4
  %820 = bitcast i8* %819 to i64*
  store i64 0, i64* %820, align 4
  %821 = getelementptr inbounds i8, i8* %817, i64 12
  store i8 0, i8* %821, align 4
  %822 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 0
  %823 = load i64, i64* %822, align 8
  %824 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i64 0, i32 1
  %825 = load i64, i64* %824, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %817)
  %826 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  store i64 %823, i64* %826, align 8
  %827 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  store i64 %825, i64* %827, align 8
  br label %847

828:                                              ; preds = %810
  %829 = icmp eq i8 %812, 0
  %830 = select i1 %829, i32 8, i32 4
  %831 = sext i32 %814 to i64
  %832 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %833 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %832, align 8
  %834 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %833, i64 %831
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %834, i32 %830, i32 0) #16
  %835 = shl i32 %814, 1
  %836 = zext i32 %835 to i64
  %837 = shl nuw i64 %836, 32
  %838 = or i64 %837, %836
  %839 = bitcast { i64, i64 }* %19 to i32*
  store i32 %814, i32* %839, align 8
  %840 = getelementptr inbounds i8, i8* %813, i64 4
  %841 = bitcast i8* %840 to i64*
  store i64 %838, i64* %841, align 4
  %842 = getelementptr inbounds i8, i8* %813, i64 12
  store i8 1, i8* %842, align 4
  %843 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 0
  %844 = load i64, i64* %843, align 8
  %845 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  %846 = load i64, i64* %845, align 8
  br label %847

847:                                              ; preds = %816, %828
  %848 = phi i64 [ %846, %828 ], [ %825, %816 ]
  %849 = phi i64 [ %844, %828 ], [ %823, %816 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %813)
  br label %973

850:                                              ; preds = %51
  %851 = bitcast { i64, i64 }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %851)
  %852 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %853 = icmp slt i32 %852, 0
  br i1 %853, label %854, label %866

854:                                              ; preds = %850
  %855 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %855)
  %856 = bitcast { i64, i64 }* %20 to i32*
  store i32 0, i32* %856, align 8
  %857 = getelementptr inbounds i8, i8* %855, i64 4
  %858 = bitcast i8* %857 to i64*
  store i64 0, i64* %858, align 4
  %859 = getelementptr inbounds i8, i8* %855, i64 12
  store i8 0, i8* %859, align 4
  %860 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  %861 = load i64, i64* %860, align 8
  %862 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %863 = load i64, i64* %862, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %855)
  %864 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  store i64 %861, i64* %864, align 8
  %865 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  store i64 %863, i64* %865, align 8
  br label %883

866:                                              ; preds = %850
  %867 = sext i32 %852 to i64
  %868 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %869 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %868, align 8
  %870 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %869, i64 %867
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %870, i32 16, i32 0) #16
  %871 = shl i32 %852, 1
  %872 = zext i32 %871 to i64
  %873 = shl nuw i64 %872, 32
  %874 = or i64 %873, %872
  %875 = bitcast { i64, i64 }* %21 to i32*
  store i32 %852, i32* %875, align 8
  %876 = getelementptr inbounds i8, i8* %851, i64 4
  %877 = bitcast i8* %876 to i64*
  store i64 %874, i64* %877, align 4
  %878 = getelementptr inbounds i8, i8* %851, i64 12
  store i8 1, i8* %878, align 4
  %879 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 0
  %880 = load i64, i64* %879, align 8
  %881 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %21, i64 0, i32 1
  %882 = load i64, i64* %881, align 8
  br label %883

883:                                              ; preds = %854, %866
  %884 = phi i64 [ %882, %866 ], [ %863, %854 ]
  %885 = phi i64 [ %880, %866 ], [ %861, %854 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %851)
  br label %973

886:                                              ; preds = %51
  %887 = bitcast { i64, i64 }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %887)
  %888 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %889 = icmp slt i32 %888, 0
  br i1 %889, label %890, label %902

890:                                              ; preds = %886
  %891 = bitcast { i64, i64 }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %891)
  %892 = bitcast { i64, i64 }* %24 to i32*
  store i32 0, i32* %892, align 8
  %893 = getelementptr inbounds i8, i8* %891, i64 4
  %894 = bitcast i8* %893 to i64*
  store i64 0, i64* %894, align 4
  %895 = getelementptr inbounds i8, i8* %891, i64 12
  store i8 0, i8* %895, align 4
  %896 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 0
  %897 = load i64, i64* %896, align 8
  %898 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %24, i64 0, i32 1
  %899 = load i64, i64* %898, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %891)
  %900 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 0
  store i64 %897, i64* %900, align 8
  %901 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 1
  store i64 %899, i64* %901, align 8
  br label %919

902:                                              ; preds = %886
  %903 = sext i32 %888 to i64
  %904 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %905 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %904, align 8
  %906 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %905, i64 %903
  tail call void @_ZN3re24Prog4Inst14InitEmptyWidthENS_7EmptyOpEj(%"class.re2::Prog::Inst"* %906, i32 32, i32 0) #16
  %907 = shl i32 %888, 1
  %908 = zext i32 %907 to i64
  %909 = shl nuw i64 %908, 32
  %910 = or i64 %909, %908
  %911 = bitcast { i64, i64 }* %25 to i32*
  store i32 %888, i32* %911, align 8
  %912 = getelementptr inbounds i8, i8* %887, i64 4
  %913 = bitcast i8* %912 to i64*
  store i64 %910, i64* %913, align 4
  %914 = getelementptr inbounds i8, i8* %887, i64 12
  store i8 1, i8* %914, align 4
  %915 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 0
  %916 = load i64, i64* %915, align 8
  %917 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i64 0, i32 1
  %918 = load i64, i64* %917, align 8
  br label %919

919:                                              ; preds = %890, %902
  %920 = phi i64 [ %918, %902 ], [ %899, %890 ]
  %921 = phi i64 [ %916, %902 ], [ %897, %890 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %887)
  br label %973

922:                                              ; preds = %51
  %923 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %923) #16
  store i8 0, i8* %923, align 8
  %924 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 1
  %925 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 1, i32 2, i32 0, i32 0
  %926 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %924, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %925, align 8
  %927 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 1, i32 1
  %928 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %927, i64 0, i32 0
  %929 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %930 = bitcast %"class.std::__1::basic_ostringstream"* %924 to i64*
  store i64 %929, i64* %930, align 8
  %931 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %932 = bitcast %"class.std::__1::basic_ostringstream"* %924 to i8**
  %933 = inttoptr i64 %929 to i8*
  %934 = getelementptr i8, i8* %933, i64 -24
  %935 = bitcast i8* %934 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = bitcast %"class.std::__1::basic_ostringstream"* %924 to i8*
  %938 = getelementptr inbounds i8, i8* %937, i64 %936
  %939 = bitcast i8* %938 to i64*
  store i64 %931, i64* %939, align 8
  %940 = load i8*, i8** %932, align 8
  %941 = getelementptr i8, i8* %940, i64 -24
  %942 = bitcast i8* %941 to i64*
  %943 = load i64, i64* %942, align 8
  %944 = getelementptr inbounds i8, i8* %937, i64 %943
  %945 = bitcast i8* %944 to %"class.std::__1::ios_base"*
  %946 = bitcast %"class.std::__1::basic_stringbuf"* %927 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %945, i8* %946) #16
  %947 = getelementptr inbounds i8, i8* %944, i64 136
  %948 = bitcast i8* %947 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %948, align 8
  %949 = getelementptr inbounds i8, i8* %944, i64 144
  %950 = bitcast i8* %949 to i32*
  store i32 -1, i32* %950, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %926, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %925, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %928) #16
  %951 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %927, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %951, align 8
  %952 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 1, i32 1, i32 1
  %953 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %37, i64 0, i32 1, i32 1, i32 3
  %954 = bitcast %"class.std::__1::basic_string"* %952 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %954, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %953, align 8
  %955 = bitcast %"class.std::__1::basic_ostringstream"* %924 to %"class.std::__1::basic_ostream"*
  %956 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %955, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #16
  %957 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %956, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %958 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %957, i32 977) #16
  %959 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %958, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %960 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %955, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i64 26) #16
  %961 = load i8, i8* %52, align 8
  %962 = zext i8 %961 to i32
  %963 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %960, i32 %962) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %923) #16
  store i8 1, i8* %38, align 8
  %964 = bitcast { i64, i64 }* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %964)
  %965 = bitcast { i64, i64 }* %33 to i32*
  store i32 0, i32* %965, align 8
  %966 = getelementptr inbounds i8, i8* %964, i64 4
  %967 = bitcast i8* %966 to i64*
  store i64 0, i64* %967, align 4
  %968 = getelementptr inbounds i8, i8* %964, i64 12
  store i8 0, i8* %968, align 4
  %969 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 0
  %970 = load i64, i64* %969, align 8
  %971 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i64 0, i32 1
  %972 = load i64, i64* %971, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %964)
  br label %973

973:                                              ; preds = %215, %188, %206, %179, %677, %510, %626, %131, %170, %922, %919, %883, %847, %807, %767, %727, %686, %500, %460, %344, %319, %272, %259, %246, %233, %97, %54, %41
  %974 = phi i64 [ %50, %41 ], [ %972, %922 ], [ %884, %883 ], [ %848, %847 ], [ %808, %807 ], [ %768, %767 ], [ %728, %727 ], [ %689, %686 ], [ %501, %500 ], [ %466, %460 ], [ %320, %319 ], [ %347, %344 ], [ %281, %272 ], [ %271, %259 ], [ %258, %246 ], [ %245, %233 ], [ %178, %170 ], [ %132, %131 ], [ %98, %97 ], [ %63, %54 ], [ %920, %919 ], [ %557, %510 ], [ %632, %626 ], [ %685, %677 ], [ %184, %179 ], [ %211, %206 ], [ %203, %188 ], [ %230, %215 ]
  %975 = phi i64 [ %48, %41 ], [ %970, %922 ], [ %885, %883 ], [ %849, %847 ], [ %809, %807 ], [ %769, %767 ], [ %729, %727 ], [ %688, %686 ], [ %502, %500 ], [ %463, %460 ], [ %321, %319 ], [ %346, %344 ], [ %280, %272 ], [ %270, %259 ], [ %257, %246 ], [ %244, %233 ], [ %174, %170 ], [ %133, %131 ], [ %99, %97 ], [ %61, %54 ], [ %921, %919 ], [ %555, %510 ], [ %629, %626 ], [ %682, %677 ], [ %181, %179 ], [ %208, %206 ], [ %199, %188 ], [ %226, %215 ]
  %976 = insertvalue { i64, i64 } undef, i64 %975, 0
  %977 = insertvalue { i64, i64 } %976, i64 %974, 1
  ret { i64, i64 } %977
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3re28Compiler5SetupENS_6Regexp10ParseFlagsElNS_3RE26AnchorE(%"class.re2::Compiler"* nocapture, i32, i64, i32) local_unnamed_addr #11 align 2 {
  %5 = and i32 %1, 32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 4
  store i32 2, i32* %8, align 4
  br label %9

9:                                                ; preds = %4, %7
  %10 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 10
  store i64 %2, i64* %10, align 8
  %11 = icmp slt i64 %2, 1
  br i1 %11, label %20, label %12

12:                                               ; preds = %9
  %13 = icmp ult i64 %2, 425
  br i1 %13, label %20, label %14

14:                                               ; preds = %12
  %15 = add nsw i64 %2, -424
  %16 = lshr i64 %15, 3
  %17 = icmp ugt i64 %15, 134217727
  %18 = select i1 %17, i64 16777216, i64 %16
  %19 = trunc i64 %18 to i32
  br label %20

20:                                               ; preds = %12, %9, %14
  %21 = phi i32 [ %19, %14 ], [ 100000, %9 ], [ 0, %12 ]
  %22 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 9
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 13
  store i32 %3, i32* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re28Compiler7CompileEPNS_6RegexpEbl(%"class.re2::Regexp"*, i1 zeroext, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %"class.re2::Compiler", align 8
  %9 = alloca %"class.re2::Regexp"*, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = zext i1 %1 to i8
  %12 = bitcast %"class.re2::Compiler"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %12) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (<{ { i32 (...)**, %"class.std::__1::stack", i8, [3 x i8], i32 }, %"class.re2::Prog"*, i8, [3 x i8], i32, i8, [7 x i8], %"class.re2::PODArray.9", i32, i32, i64, %"class.std::__1::unordered_map", %"struct.re2::Frag", i32, [4 x i8] }>* @__const._ZN3re28Compiler10CompileSetEPNS_6RegexpENS_3RE26AnchorEl.c to i8*), i64 184, i1 false)
  %13 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::stack"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 49, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re28CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 7
  %17 = bitcast %"class.re2::PODArray.9"* %16 to i64*
  %18 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 11
  %20 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 11, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.36"* %20 to i32*
  %22 = bitcast %"class.std::__1::unordered_map"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %21, align 8
  %23 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 12, i32 0
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 12, i32 1
  %25 = bitcast %"struct.re2::PatchList"* %24 to i64*
  store i64 0, i64* %25, align 4
  %26 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 12, i32 2
  store i8 0, i8* %26, align 4
  %27 = tail call i8* @_Znwm(i64 424) #17
  %28 = bitcast i8* %27 to %"class.re2::Prog"*
  tail call void @_ZN3re24ProgC1Ev(%"class.re2::Prog"* nonnull %28) #16
  %29 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 1
  %30 = bitcast %"class.re2::Prog"** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 2
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 4
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 5
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 8
  %35 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 9
  %36 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 10
  store i64 0, i64* %36, align 8
  %37 = tail call i8* @_Znwm(i64 64) #17
  %38 = ptrtoint i8* %37 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 64, i1 false) #16
  store i64 %38, i64* %17, align 8
  %39 = bitcast i8* %37 to %"class.re2::Prog::Inst"*
  store i32 8, i32* %18, align 8
  store i32 1, i32* %34, align 8
  %40 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3re24Prog4Inst8InitFailEv(%"class.re2::Prog::Inst"* nonnull %39) #16
  store i32 0, i32* %35, align 4
  %41 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %42 = load i16, i16* %41, align 2
  %43 = and i16 %42, 32
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %3
  store i32 2, i32* %32, align 4
  br label %46

46:                                               ; preds = %45, %3
  store i64 %2, i64* %36, align 8
  %47 = icmp slt i64 %2, 1
  br i1 %47, label %56, label %48

48:                                               ; preds = %46
  %49 = icmp ult i64 %2, 425
  br i1 %49, label %56, label %50

50:                                               ; preds = %48
  %51 = add nsw i64 %2, -424
  %52 = lshr i64 %51, 3
  %53 = icmp ugt i64 %51, 134217727
  %54 = select i1 %53, i64 16777216, i64 %52
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %48, %46, %50
  %57 = phi i32 [ %55, %50 ], [ 100000, %46 ], [ 0, %48 ]
  store i32 %57, i32* %35, align 4
  %58 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 13
  store i32 0, i32* %58, align 8
  store i8 %11, i8* %33, align 8
  %59 = bitcast %"class.re2::Regexp"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #16
  %60 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"* %0) #16
  store %"class.re2::Regexp"* %60, %"class.re2::Regexp"** %9, align 8
  %61 = icmp eq %"class.re2::Regexp"* %60, null
  br i1 %61, label %289, label %62

62:                                               ; preds = %56
  %63 = call fastcc zeroext i1 @_ZN3re2L13IsAnchorStartEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %9, i32 0)
  %64 = call fastcc zeroext i1 @_ZN3re2L11IsAnchorEndEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %9, i32 0)
  %65 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 0
  %66 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %9, align 8
  %67 = bitcast { i64, i64 }* %10 to i32*
  store i32 0, i32* %67, align 8
  %68 = bitcast { i64, i64 }* %10 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 4
  %70 = bitcast i8* %69 to i64*
  store i64 0, i64* %70, align 4
  %71 = getelementptr inbounds i8, i8* %68, i64 12
  store i8 0, i8* %71, align 4
  %72 = load i32, i32* %35, align 4
  %73 = shl nsw i32 %72, 1
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 0, i32 3
  store i32 %73, i32* %78, align 4
  %79 = call { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE12WalkInternalEPS0_S2_b(%"class.re2::Regexp::Walker"* nonnull %65, %"class.re2::Regexp"* %66, i64 %75, i64 %77, i1 zeroext false) #16
  %80 = extractvalue { i64, i64 } %79, 1
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %66) #16
  %81 = load i8, i8* %31, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %289

83:                                               ; preds = %62
  %84 = extractvalue { i64, i64 } %79, 0
  store i8 0, i8* %33, align 8
  %85 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85)
  %86 = load i32, i32* %34, align 8
  %87 = add nsw i32 %86, 1
  %88 = load i32, i32* %35, align 4
  %89 = icmp slt i32 %86, %88
  br i1 %89, label %91, label %90

90:                                               ; preds = %83
  store i8 1, i8* %31, align 8
  br label %136

91:                                               ; preds = %83
  %92 = load i32, i32* %18, align 8
  %93 = icmp slt i32 %86, %92
  br i1 %93, label %132, label %94

94:                                               ; preds = %91
  %95 = icmp eq i32 %92, 0
  %96 = select i1 %95, i32 8, i32 %92
  br label %97

97:                                               ; preds = %97, %94
  %98 = phi i32 [ %96, %94 ], [ %100, %97 ]
  %99 = icmp sgt i32 %98, %86
  %100 = shl nsw i32 %98, 1
  br i1 %99, label %101, label %97

101:                                              ; preds = %97
  %102 = icmp slt i32 %98, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  call void @abort() #18
  unreachable

104:                                              ; preds = %101
  %105 = sext i32 %98 to i64
  %106 = shl nsw i64 %105, 3
  %107 = call i8* @_Znwm(i64 %106) #17
  %108 = ptrtoint i8* %107 to i64
  %109 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %110 = icmp eq %"class.re2::Prog::Inst"* %109, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %104
  %112 = sext i32 %86 to i64
  br label %117

113:                                              ; preds = %104
  %114 = bitcast %"class.re2::Prog::Inst"* %109 to i8*
  %115 = sext i32 %86 to i64
  %116 = shl nsw i64 %115, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %107, i8* nonnull align 4 %114, i64 %116, i1 false) #16
  br label %117

117:                                              ; preds = %113, %111
  %118 = phi i64 [ %112, %111 ], [ %115, %113 ]
  %119 = bitcast i8* %107 to %"class.re2::Prog::Inst"*
  %120 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %119, i64 %118
  %121 = bitcast %"class.re2::Prog::Inst"* %120 to i8*
  %122 = sub nsw i32 %98, %86
  %123 = sext i32 %122 to i64
  %124 = shl nsw i64 %123, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 %124, i1 false) #16
  store i64 %108, i64* %17, align 8
  br i1 %110, label %129, label %125

125:                                              ; preds = %117
  %126 = bitcast %"class.re2::Prog::Inst"* %109 to i8*
  call void @_ZdlPv(i8* %126) #17
  %127 = load i32, i32* %34, align 8
  %128 = add nsw i32 %127, 1
  br label %129

129:                                              ; preds = %125, %117
  %130 = phi i32 [ %128, %125 ], [ %87, %117 ]
  %131 = phi i32 [ %127, %125 ], [ %86, %117 ]
  store i32 %98, i32* %18, align 8
  br label %132

132:                                              ; preds = %91, %129
  %133 = phi i32 [ %130, %129 ], [ %87, %91 ]
  %134 = phi i32 [ %131, %129 ], [ %86, %91 ]
  store i32 %133, i32* %34, align 8
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %90, %132
  %137 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137)
  %138 = bitcast { i64, i64 }* %6 to i32*
  store i32 0, i32* %138, align 8
  %139 = getelementptr inbounds i8, i8* %137, i64 4
  %140 = bitcast i8* %139 to i64*
  store i64 0, i64* %140, align 4
  %141 = getelementptr inbounds i8, i8* %137, i64 12
  store i8 0, i8* %141, align 4
  %142 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137)
  %146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %143, i64* %146, align 8
  %147 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %145, i64* %147, align 8
  br label %161

148:                                              ; preds = %132
  %149 = sext i32 %134 to i64
  %150 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %150, align 8
  %152 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %151, i64 %149
  call void @_ZN3re24Prog4Inst9InitMatchEi(%"class.re2::Prog::Inst"* %152, i32 0) #16
  %153 = bitcast { i64, i64 }* %7 to i32*
  store i32 %134, i32* %153, align 8
  %154 = getelementptr inbounds i8, i8* %85, i64 4
  %155 = bitcast i8* %154 to i64*
  store i64 0, i64* %155, align 4
  %156 = getelementptr inbounds i8, i8* %85, i64 12
  store i8 0, i8* %156, align 4
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %160 = load i64, i64* %159, align 8
  br label %161

161:                                              ; preds = %136, %148
  %162 = phi i64 [ %160, %148 ], [ %145, %136 ]
  %163 = phi i64 [ %158, %148 ], [ %143, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85)
  %164 = call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* nonnull %8, i64 %84, i64 %80, i64 %163, i64 %162)
  %165 = extractvalue { i64, i64 } %164, 0
  %166 = extractvalue { i64, i64 } %164, 1
  %167 = trunc i64 %165 to i32
  %168 = and i64 %166, 1099511627775
  %169 = and i64 %80, -1099511627776
  %170 = or i64 %168, %169
  %171 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  %172 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %171, i64 0, i32 2
  store i8 %11, i8* %172, align 2
  %173 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  %174 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %173, i64 0, i32 2
  %175 = load i8, i8* %174, align 2, !range !2
  %176 = icmp eq i8 %175, 0
  %177 = select i1 %176, i1 %63, i1 %64
  %178 = select i1 %176, i1 %64, i1 %63
  %179 = zext i1 %177 to i8
  %180 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %173, i64 0, i32 0
  store i8 %179, i8* %180, align 8
  %181 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  %182 = zext i1 %178 to i8
  %183 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %181, i64 0, i32 1
  store i8 %182, i8* %183, align 1
  %184 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  %185 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %184, i64 0, i32 5
  store i32 %167, i32* %185, align 8
  %186 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  %187 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %186, i64 0, i32 0
  %188 = load i8, i8* %187, align 8, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %284

190:                                              ; preds = %161
  %191 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191)
  %192 = load i8, i8* %31, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %199

194:                                              ; preds = %190
  %195 = load i32, i32* %34, align 8
  %196 = add nsw i32 %195, 1
  %197 = load i32, i32* %35, align 4
  %198 = icmp slt i32 %195, %197
  br i1 %198, label %200, label %199

199:                                              ; preds = %194, %190
  store i8 1, i8* %31, align 8
  br label %245

200:                                              ; preds = %194
  %201 = load i32, i32* %18, align 8
  %202 = icmp slt i32 %195, %201
  br i1 %202, label %241, label %203

203:                                              ; preds = %200
  %204 = icmp eq i32 %201, 0
  %205 = select i1 %204, i32 8, i32 %201
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi i32 [ %205, %203 ], [ %209, %206 ]
  %208 = icmp sgt i32 %207, %195
  %209 = shl nsw i32 %207, 1
  br i1 %208, label %210, label %206

210:                                              ; preds = %206
  %211 = icmp slt i32 %207, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  call void @abort() #18
  unreachable

213:                                              ; preds = %210
  %214 = sext i32 %207 to i64
  %215 = shl nsw i64 %214, 3
  %216 = call i8* @_Znwm(i64 %215) #17
  %217 = ptrtoint i8* %216 to i64
  %218 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %40, align 8
  %219 = icmp eq %"class.re2::Prog::Inst"* %218, null
  br i1 %219, label %220, label %222

220:                                              ; preds = %213
  %221 = sext i32 %195 to i64
  br label %226

222:                                              ; preds = %213
  %223 = bitcast %"class.re2::Prog::Inst"* %218 to i8*
  %224 = sext i32 %195 to i64
  %225 = shl nsw i64 %224, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %216, i8* nonnull align 4 %223, i64 %225, i1 false) #16
  br label %226

226:                                              ; preds = %222, %220
  %227 = phi i64 [ %221, %220 ], [ %224, %222 ]
  %228 = bitcast i8* %216 to %"class.re2::Prog::Inst"*
  %229 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %228, i64 %227
  %230 = bitcast %"class.re2::Prog::Inst"* %229 to i8*
  %231 = sub nsw i32 %207, %195
  %232 = sext i32 %231 to i64
  %233 = shl nsw i64 %232, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %230, i8 0, i64 %233, i1 false) #16
  store i64 %217, i64* %17, align 8
  br i1 %219, label %238, label %234

234:                                              ; preds = %226
  %235 = bitcast %"class.re2::Prog::Inst"* %218 to i8*
  call void @_ZdlPv(i8* %235) #17
  %236 = load i32, i32* %34, align 8
  %237 = add nsw i32 %236, 1
  br label %238

238:                                              ; preds = %234, %226
  %239 = phi i32 [ %237, %234 ], [ %196, %226 ]
  %240 = phi i32 [ %236, %234 ], [ %195, %226 ]
  store i32 %207, i32* %18, align 8
  br label %241

241:                                              ; preds = %200, %238
  %242 = phi i32 [ %239, %238 ], [ %196, %200 ]
  %243 = phi i32 [ %240, %238 ], [ %195, %200 ]
  store i32 %242, i32* %34, align 8
  %244 = icmp slt i32 %243, 0
  br i1 %244, label %245, label %257

245:                                              ; preds = %199, %241
  %246 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246)
  %247 = bitcast { i64, i64 }* %4 to i32*
  store i32 0, i32* %247, align 8
  %248 = getelementptr inbounds i8, i8* %246, i64 4
  %249 = bitcast i8* %248 to i64*
  store i64 0, i64* %249, align 4
  %250 = getelementptr inbounds i8, i8* %246, i64 12
  store i8 0, i8* %250, align 4
  %251 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %254 = load i64, i64* %253, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246)
  %255 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %252, i64* %255, align 8
  %256 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %254, i64* %256, align 8
  br label %274

257:                                              ; preds = %241
  %258 = sext i32 %243 to i64
  %259 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %260 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %259, align 8
  %261 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %260, i64 %258
  call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %261, i32 0, i32 255, i32 0, i32 0) #16
  %262 = shl i32 %243, 1
  %263 = zext i32 %262 to i64
  %264 = shl nuw i64 %263, 32
  %265 = or i64 %264, %263
  %266 = bitcast { i64, i64 }* %5 to i32*
  store i32 %243, i32* %266, align 8
  %267 = getelementptr inbounds i8, i8* %191, i64 4
  %268 = bitcast i8* %267 to i64*
  store i64 %265, i64* %268, align 4
  %269 = getelementptr inbounds i8, i8* %191, i64 12
  store i8 0, i8* %269, align 4
  %270 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %273 = load i64, i64* %272, align 8
  br label %274

274:                                              ; preds = %245, %257
  %275 = phi i64 [ %273, %257 ], [ %254, %245 ]
  %276 = phi i64 [ %271, %257 ], [ %252, %245 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191)
  %277 = call { i64, i64 } @_ZN3re28Compiler4StarENS_4FragEb(%"class.re2::Compiler"* nonnull %8, i64 %276, i64 %275, i1 zeroext true) #16
  %278 = extractvalue { i64, i64 } %277, 0
  %279 = extractvalue { i64, i64 } %277, 1
  %280 = call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* nonnull %8, i64 %278, i64 %279, i64 %165, i64 %170)
  %281 = extractvalue { i64, i64 } %280, 0
  %282 = trunc i64 %281 to i32
  %283 = load %"class.re2::Prog"*, %"class.re2::Prog"** %29, align 8
  br label %284

284:                                              ; preds = %161, %274
  %285 = phi %"class.re2::Prog"* [ %186, %161 ], [ %283, %274 ]
  %286 = phi i32 [ %167, %161 ], [ %282, %274 ]
  %287 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %285, i64 0, i32 6
  store i32 %286, i32* %287, align 4
  %288 = call %"class.re2::Prog"* @_ZN3re28Compiler6FinishEPNS_6RegexpE(%"class.re2::Compiler"* nonnull %8, %"class.re2::Regexp"* %0)
  br label %289

289:                                              ; preds = %284, %62, %56
  %290 = phi %"class.re2::Prog"* [ null, %56 ], [ %288, %284 ], [ null, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #16
  call void @_ZN3re28CompilerD2Ev(%"class.re2::Compiler"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %12) #16
  ret %"class.re2::Prog"* %290
}

declare %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3re2L13IsAnchorStartEPPNS_6RegexpEi(%"class.re2::Regexp"** nocapture, i32) unnamed_addr #0 {
  %3 = alloca %"class.re2::Regexp"*, align 8
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, align 8
  %5 = bitcast %"class.re2::Regexp"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store %"class.re2::Regexp"* inttoptr (i64 -6148914691236517206 to %"class.re2::Regexp"*), %"class.re2::Regexp"** %3, align 8
  %6 = icmp eq %"class.re2::Regexp"* %4, null
  %7 = icmp sgt i32 %1, 3
  %8 = or i1 %7, %6
  br i1 %8, label %99, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  switch i8 %11, label %99 [
    i8 5, label %12
    i8 11, label %69
    i8 18, label %94
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 4
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %99, label %16

16:                                               ; preds = %12
  %17 = icmp eq i16 %14, 1
  %18 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 5
  br i1 %17, label %19, label %21

19:                                               ; preds = %16
  %20 = bitcast %union.anon.46* %18 to %"class.re2::Regexp"**
  br label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %union.anon.46, %union.anon.46* %18, i64 0, i32 0
  %23 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %22, align 8
  br label %24

24:                                               ; preds = %19, %21
  %25 = phi %"class.re2::Regexp"** [ %20, %19 ], [ %23, %21 ]
  %26 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %25, align 8
  %27 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %26) #16
  store %"class.re2::Regexp"* %27, %"class.re2::Regexp"** %3, align 8
  %28 = add nsw i32 %1, 1
  %29 = call fastcc zeroext i1 @_ZN3re2L13IsAnchorStartEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %3, i32 %28)
  br i1 %29, label %30, label %67

30:                                               ; preds = %24
  %31 = load i16, i16* %13, align 2
  %32 = zext i16 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  %34 = tail call i8* @_Znwm(i64 %33) #17
  %35 = bitcast %"class.re2::Regexp"** %3 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8* %34 to %"class.re2::Regexp"**
  %38 = bitcast i8* %34 to i64*
  store i64 %36, i64* %38, align 8
  %39 = load i16, i16* %13, align 2
  %40 = icmp ugt i16 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %30
  %42 = getelementptr inbounds %union.anon.46, %union.anon.46* %18, i64 0, i32 0
  %43 = bitcast %union.anon.46* %18 to %"class.re2::Regexp"**
  br label %51

44:                                               ; preds = %57, %30
  %45 = phi i16 [ %39, %30 ], [ %64, %57 ]
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %37, i32 %46, i32 %49) #16
  store %"class.re2::Regexp"* %50, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %4) #16
  tail call void @_ZdlPv(i8* nonnull %34) #17
  br label %99

51:                                               ; preds = %41, %57
  %52 = phi i64 [ 1, %41 ], [ %63, %57 ]
  %53 = phi i16 [ %39, %41 ], [ %64, %57 ]
  %54 = icmp ult i16 %53, 2
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %42, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi %"class.re2::Regexp"** [ %56, %55 ], [ %43, %51 ]
  %59 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %58, i64 %52
  %60 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %59, align 8
  %61 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %60) #16
  %62 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %37, i64 %52
  store %"class.re2::Regexp"* %61, %"class.re2::Regexp"** %62, align 8
  %63 = add nuw nsw i64 %52, 1
  %64 = load i16, i16* %13, align 2
  %65 = zext i16 %64 to i64
  %66 = icmp ult i64 %63, %65
  br i1 %66, label %51, label %44

67:                                               ; preds = %24
  %68 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %68) #16
  br label %99

69:                                               ; preds = %9
  %70 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 4
  %71 = load i16, i16* %70, align 2
  %72 = icmp ult i16 %71, 2
  %73 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 5
  br i1 %72, label %74, label %76

74:                                               ; preds = %69
  %75 = bitcast %union.anon.46* %73 to %"class.re2::Regexp"**
  br label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %union.anon.46, %union.anon.46* %73, i64 0, i32 0
  %78 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %77, align 8
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi %"class.re2::Regexp"** [ %75, %74 ], [ %78, %76 ]
  %81 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %80, align 8
  %82 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %81) #16
  store %"class.re2::Regexp"* %82, %"class.re2::Regexp"** %3, align 8
  %83 = add nsw i32 %1, 1
  %84 = call fastcc zeroext i1 @_ZN3re2L13IsAnchorStartEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %3, i32 %83)
  %85 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  br i1 %84, label %86, label %93

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 7, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp7CaptureEPS0_NS0_10ParseFlagsEi(%"class.re2::Regexp"* %85, i32 %89, i32 %91) #16
  store %"class.re2::Regexp"* %92, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %4) #16
  br label %99

93:                                               ; preds = %79
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %85) #16
  br label %99

94:                                               ; preds = %9
  %95 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32* null, i32 0, i32 %97) #16
  store %"class.re2::Regexp"* %98, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %4) #16
  br label %99

99:                                               ; preds = %12, %93, %9, %67, %2, %94, %86, %44
  %100 = phi i1 [ true, %94 ], [ true, %86 ], [ true, %44 ], [ false, %2 ], [ false, %12 ], [ false, %67 ], [ false, %9 ], [ false, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3re2L11IsAnchorEndEPPNS_6RegexpEi(%"class.re2::Regexp"** nocapture, i32) unnamed_addr #0 {
  %3 = alloca %"class.re2::Regexp"*, align 8
  %4 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %0, align 8
  %5 = bitcast %"class.re2::Regexp"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store %"class.re2::Regexp"* inttoptr (i64 -6148914691236517206 to %"class.re2::Regexp"*), %"class.re2::Regexp"** %3, align 8
  %6 = icmp eq %"class.re2::Regexp"* %4, null
  %7 = icmp sgt i32 %1, 3
  %8 = or i1 %7, %6
  br i1 %8, label %107, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  switch i8 %11, label %107 [
    i8 5, label %12
    i8 11, label %77
    i8 19, label %102
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 4
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i64
  %16 = icmp eq i16 %14, 0
  br i1 %16, label %107, label %17

17:                                               ; preds = %12
  %18 = icmp eq i16 %14, 1
  %19 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 5
  br i1 %18, label %20, label %22

20:                                               ; preds = %17
  %21 = bitcast %union.anon.46* %19 to %"class.re2::Regexp"**
  br label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %union.anon.46, %union.anon.46* %19, i64 0, i32 0
  %24 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %23, align 8
  br label %25

25:                                               ; preds = %20, %22
  %26 = phi %"class.re2::Regexp"** [ %21, %20 ], [ %24, %22 ]
  %27 = add nsw i64 %15, -1
  %28 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %26, i64 %27
  %29 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %28, align 8
  %30 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %29) #16
  store %"class.re2::Regexp"* %30, %"class.re2::Regexp"** %3, align 8
  %31 = add nsw i32 %1, 1
  %32 = call fastcc zeroext i1 @_ZN3re2L11IsAnchorEndEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %3, i32 %31)
  br i1 %32, label %33, label %75

33:                                               ; preds = %25
  %34 = load i16, i16* %13, align 2
  %35 = zext i16 %34 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = tail call i8* @_Znwm(i64 %36) #17
  %38 = bitcast %"class.re2::Regexp"** %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = load i16, i16* %13, align 2
  %41 = zext i16 %40 to i64
  %42 = add nsw i64 %41, -1
  %43 = bitcast i8* %37 to %"class.re2::Regexp"**
  %44 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %43, i64 %42
  %45 = bitcast %"class.re2::Regexp"** %44 to i64*
  store i64 %39, i64* %45, align 8
  %46 = load i16, i16* %13, align 2
  %47 = icmp ugt i16 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %33
  %49 = getelementptr inbounds %union.anon.46, %union.anon.46* %19, i64 0, i32 0
  %50 = bitcast %union.anon.46* %19 to %"class.re2::Regexp"**
  br label %58

51:                                               ; preds = %64, %33
  %52 = phi i16 [ %46, %33 ], [ %71, %64 ]
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"** nonnull %43, i32 %53, i32 %56) #16
  store %"class.re2::Regexp"* %57, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %4) #16
  tail call void @_ZdlPv(i8* nonnull %37) #17
  br label %107

58:                                               ; preds = %48, %64
  %59 = phi i64 [ 0, %48 ], [ %70, %64 ]
  %60 = phi i16 [ %46, %48 ], [ %71, %64 ]
  %61 = icmp ult i16 %60, 2
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %49, align 8
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi %"class.re2::Regexp"** [ %63, %62 ], [ %50, %58 ]
  %66 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %65, i64 %59
  %67 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %66, align 8
  %68 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %67) #16
  %69 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %43, i64 %59
  store %"class.re2::Regexp"* %68, %"class.re2::Regexp"** %69, align 8
  %70 = add nuw nsw i64 %59, 1
  %71 = load i16, i16* %13, align 2
  %72 = zext i16 %71 to i64
  %73 = add nsw i64 %72, -1
  %74 = icmp slt i64 %70, %73
  br i1 %74, label %58, label %51

75:                                               ; preds = %25
  %76 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %76) #16
  br label %107

77:                                               ; preds = %9
  %78 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 4
  %79 = load i16, i16* %78, align 2
  %80 = icmp ult i16 %79, 2
  %81 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 5
  br i1 %80, label %82, label %84

82:                                               ; preds = %77
  %83 = bitcast %union.anon.46* %81 to %"class.re2::Regexp"**
  br label %87

84:                                               ; preds = %77
  %85 = getelementptr inbounds %union.anon.46, %union.anon.46* %81, i64 0, i32 0
  %86 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %85, align 8
  br label %87

87:                                               ; preds = %82, %84
  %88 = phi %"class.re2::Regexp"** [ %83, %82 ], [ %86, %84 ]
  %89 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %88, align 8
  %90 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"* %89) #16
  store %"class.re2::Regexp"* %90, %"class.re2::Regexp"** %3, align 8
  %91 = add nsw i32 %1, 1
  %92 = call fastcc zeroext i1 @_ZN3re2L11IsAnchorEndEPPNS_6RegexpEi(%"class.re2::Regexp"** nonnull %3, i32 %91)
  %93 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %3, align 8
  br i1 %92, label %94, label %101

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 7, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp7CaptureEPS0_NS0_10ParseFlagsEi(%"class.re2::Regexp"* %93, i32 %97, i32 %99) #16
  store %"class.re2::Regexp"* %100, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %4) #16
  br label %107

101:                                              ; preds = %87
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* %93) #16
  br label %107

102:                                              ; preds = %9
  %103 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %4, i64 0, i32 2
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32* null, i32 0, i32 %105) #16
  store %"class.re2::Regexp"* %106, %"class.re2::Regexp"** %0, align 8
  tail call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %4) #16
  br label %107

107:                                              ; preds = %12, %101, %9, %75, %2, %102, %94, %51
  %108 = phi i1 [ true, %102 ], [ true, %94 ], [ true, %51 ], [ false, %2 ], [ false, %12 ], [ false, %75 ], [ false, %9 ], [ false, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i1 %108
}

declare void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3re28Compiler7DotStarEv(%"class.re2::Compiler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4)
  %5 = tail call i32 @_ZN3re28Compiler9AllocInstEi(%"class.re2::Compiler"* %0, i32 1) #16
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = bitcast { i64, i64 }* %2 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %16, i64* %18, align 8
  br label %36

19:                                               ; preds = %1
  %20 = sext i32 %5 to i64
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %21, align 8
  %23 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %22, i64 %20
  tail call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %23, i32 0, i32 255, i32 0, i32 0) #16
  %24 = shl i32 %5, 1
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = or i64 %26, %25
  %28 = bitcast { i64, i64 }* %3 to i32*
  store i32 %5, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %4, i64 4
  %30 = bitcast i8* %29 to i64*
  store i64 %27, i64* %30, align 4
  %31 = getelementptr inbounds i8, i8* %4, i64 12
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %7, %19
  %37 = phi i64 [ %35, %19 ], [ %16, %7 ]
  %38 = phi i64 [ %33, %19 ], [ %14, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4)
  %39 = tail call { i64, i64 } @_ZN3re28Compiler4StarENS_4FragEb(%"class.re2::Compiler"* %0, i64 %38, i64 %37, i1 zeroext true)
  ret { i64, i64 } %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re28Compiler6FinishEPNS_6RegexpE(%"class.re2::Compiler"* nocapture, %"class.re2::Regexp"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %115

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 1
  %10 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %11 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %10, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %10, i64 0, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 8
  store i32 1, i32* %19, align 8
  br label %20

20:                                               ; preds = %18, %14, %8
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %10, i64 0, i32 16
  %23 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.re2::PODArray.9"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.re2::Prog::Inst"* null, %"class.re2::Prog::Inst"** %23, align 8
  %26 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %26, align 8
  %28 = bitcast %"class.re2::PODArray.9"* %22 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.re2::Prog::Inst"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.re2::Prog::Inst"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #17
  br label %32

32:                                               ; preds = %20, %30
  %33 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %10, i64 0, i32 16, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %34, align 4
  %36 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 8
  %37 = load i32, i32* %36, align 8
  %38 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %39 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %38, i64 0, i32 7
  store i32 %37, i32* %39, align 8
  %40 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  tail call void @_ZN3re24Prog8OptimizeEv(%"class.re2::Prog"* %40) #16
  %41 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  tail call void @_ZN3re24Prog7FlattenEv(%"class.re2::Prog"* %41) #16
  %42 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  tail call void @_ZN3re24Prog14ComputeByteMapEv(%"class.re2::Prog"* %42) #16
  %43 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %44 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 2, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %87

47:                                               ; preds = %32
  %48 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %51 = call zeroext i1 @_ZN3re26Regexp22RequiredPrefixForAccelEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.re2::Regexp"* %1, %"class.std::__1::basic_string"* nonnull %3, i8* nonnull %4) #16
  %52 = load i8, i8* %4, align 1
  %53 = icmp eq i8 %52, 0
  %54 = and i1 %51, %53
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  br i1 %54, label %58, label %82

58:                                               ; preds = %47
  %59 = icmp slt i8 %57, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %58
  %61 = load i64, i64* %50, align 8
  %62 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %63 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %62, i64 0, i32 9
  store i64 %61, i64* %63, align 8
  %64 = load i8*, i8** %49, align 8
  br label %69

65:                                               ; preds = %58
  %66 = zext i8 %57 to i64
  %67 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %68 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %67, i64 0, i32 9
  store i64 %66, i64* %68, align 8
  br label %69

69:                                               ; preds = %60, %65
  %70 = phi i8* [ %64, %60 ], [ %48, %65 ]
  %71 = phi i64 [ %61, %60 ], [ %66, %65 ]
  %72 = load i8, i8* %70, align 1
  %73 = sext i8 %72 to i32
  %74 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %75 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %74, i64 0, i32 10
  store i32 %73, i32* %75, align 8
  %76 = getelementptr inbounds i8, i8* %70, i64 %71
  %77 = getelementptr inbounds i8, i8* %76, i64 -1
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %81 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %80, i64 0, i32 11
  store i32 %79, i32* %81, align 4
  br label %82

82:                                               ; preds = %47, %69
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  %83 = icmp slt i8 %57, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %82, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #16
  br label %87

87:                                               ; preds = %32, %86
  %88 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %0, i64 0, i32 10
  %89 = load i64, i64* %88, align 8
  %90 = icmp slt i64 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  br label %110

93:                                               ; preds = %87
  %94 = add nsw i64 %89, -424
  %95 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  %96 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %95, i64 0, i32 7
  %97 = load i32, i32* %96, align 8
  %98 = sext i32 %97 to i64
  %99 = shl nsw i64 %98, 3
  %100 = sub i64 %94, %99
  %101 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %95, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %102 = load i16*, i16** %101, align 8
  %103 = icmp eq i16* %102, null
  %104 = shl nsw i64 %98, 1
  %105 = sub nsw i64 0, %104
  %106 = select i1 %103, i64 0, i64 %105
  %107 = add i64 %100, %106
  %108 = icmp sgt i64 %107, 0
  %109 = select i1 %108, i64 %107, i64 0
  br label %110

110:                                              ; preds = %93, %91
  %111 = phi %"class.re2::Prog"* [ %95, %93 ], [ %92, %91 ]
  %112 = phi i64 [ %109, %93 ], [ 1048576, %91 ]
  %113 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %111, i64 0, i32 18
  store i64 %112, i64* %113, align 8
  %114 = load %"class.re2::Prog"*, %"class.re2::Prog"** %9, align 8
  store %"class.re2::Prog"* null, %"class.re2::Prog"** %9, align 8
  br label %115

115:                                              ; preds = %2, %110
  %116 = phi %"class.re2::Prog"* [ %114, %110 ], [ null, %2 ]
  ret %"class.re2::Prog"* %116
}

declare void @_ZN3re24Prog8OptimizeEv(%"class.re2::Prog"*) local_unnamed_addr #2

declare void @_ZN3re24Prog7FlattenEv(%"class.re2::Prog"*) local_unnamed_addr #2

declare void @_ZN3re24Prog14ComputeByteMapEv(%"class.re2::Prog"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3re26Regexp22RequiredPrefixForAccelEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re26Regexp13CompileToProgEl(%"class.re2::Regexp"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Prog"* @_ZN3re28Compiler7CompileEPNS_6RegexpEbl(%"class.re2::Regexp"* %0, i1 zeroext false, i64 %1)
  ret %"class.re2::Prog"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re26Regexp20CompileToReverseProgEl(%"class.re2::Regexp"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.re2::Prog"* @_ZN3re28Compiler7CompileEPNS_6RegexpEbl(%"class.re2::Regexp"* %0, i1 zeroext true, i64 %1)
  ret %"class.re2::Prog"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re28Compiler10CompileSetEPNS_6RegexpENS_3RE26AnchorEl(%"class.re2::Regexp"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.re2::Compiler", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.re2::StringPiece", align 8
  %10 = bitcast %"class.re2::Compiler"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %10) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (<{ { i32 (...)**, %"class.std::__1::stack", i8, [3 x i8], i32 }, %"class.re2::Prog"*, i8, [3 x i8], i32, i8, [7 x i8], %"class.re2::PODArray.9", i32, i32, i64, %"class.std::__1::unordered_map", %"struct.re2::Frag", i32, [4 x i8] }>* @__const._ZN3re28Compiler10CompileSetEPNS_6RegexpENS_3RE26AnchorEl.c to i8*), i64 184, i1 false)
  %11 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::stack"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 49, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re28CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 7
  %15 = bitcast %"class.re2::PODArray.9"* %14 to i64*
  %16 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 11
  %18 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 11, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.36"* %18 to i32*
  %20 = bitcast %"class.std::__1::unordered_map"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %19, align 8
  %21 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 12, i32 0
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 12, i32 1
  %23 = bitcast %"struct.re2::PatchList"* %22 to i64*
  store i64 0, i64* %23, align 4
  %24 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 12, i32 2
  store i8 0, i8* %24, align 4
  %25 = tail call i8* @_Znwm(i64 424) #17
  %26 = bitcast i8* %25 to %"class.re2::Prog"*
  tail call void @_ZN3re24ProgC1Ev(%"class.re2::Prog"* nonnull %26) #16
  %27 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 1
  %28 = bitcast %"class.re2::Prog"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 2
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 4
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 5
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 8
  %33 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 9
  %34 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 10
  store i64 0, i64* %34, align 8
  %35 = tail call i8* @_Znwm(i64 64) #17
  %36 = ptrtoint i8* %35 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 64, i1 false) #16
  store i64 %36, i64* %15, align 8
  %37 = bitcast i8* %35 to %"class.re2::Prog::Inst"*
  store i32 8, i32* %16, align 8
  store i32 1, i32* %32, align 8
  %38 = getelementptr inbounds %"class.re2::PODArray.9", %"class.re2::PODArray.9"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN3re24Prog4Inst8InitFailEv(%"class.re2::Prog::Inst"* nonnull %37) #16
  store i32 0, i32* %33, align 4
  %39 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %0, i64 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 32
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %3
  store i32 2, i32* %30, align 4
  br label %44

44:                                               ; preds = %43, %3
  store i64 %2, i64* %34, align 8
  %45 = icmp slt i64 %2, 1
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  store i32 100000, i32* %33, align 4
  br label %57

47:                                               ; preds = %44
  %48 = icmp ult i64 %2, 425
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  store i32 0, i32* %33, align 4
  br label %57

50:                                               ; preds = %47
  %51 = add nsw i64 %2, -424
  %52 = lshr i64 %51, 3
  %53 = icmp ugt i64 %51, 134217727
  %54 = select i1 %53, i64 16777216, i64 %52
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %33, align 4
  %56 = shl i32 %55, 1
  br label %57

57:                                               ; preds = %46, %49, %50
  %58 = phi i32 [ 200000, %46 ], [ 0, %49 ], [ %56, %50 ]
  %59 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 13
  store i32 %1, i32* %59, align 8
  %60 = tail call %"class.re2::Regexp"* @_ZN3re26Regexp8SimplifyEv(%"class.re2::Regexp"* %0) #16
  %61 = icmp eq %"class.re2::Regexp"* %60, null
  br i1 %61, label %197, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 0
  %64 = bitcast { i64, i64 }* %7 to i32*
  store i32 0, i32* %64, align 8
  %65 = bitcast { i64, i64 }* %7 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 4
  %67 = bitcast i8* %66 to i64*
  store i64 0, i64* %67, align 4
  %68 = getelementptr inbounds i8, i8* %65, i64 12
  store i8 0, i8* %68, align 4
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 0, i32 3
  store i32 %58, i32* %73, align 4
  %74 = call { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE12WalkInternalEPS0_S2_b(%"class.re2::Regexp::Walker"* nonnull %63, %"class.re2::Regexp"* nonnull %60, i64 %70, i64 %72, i1 zeroext false) #16
  %75 = extractvalue { i64, i64 } %74, 0
  %76 = extractvalue { i64, i64 } %74, 1
  call void @_ZN3re26Regexp6DecrefEv(%"class.re2::Regexp"* nonnull %60) #16
  %77 = load i8, i8* %29, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %197

79:                                               ; preds = %62
  %80 = load %"class.re2::Prog"*, %"class.re2::Prog"** %27, align 8
  %81 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %80, i64 0, i32 0
  store i8 1, i8* %81, align 8
  %82 = load %"class.re2::Prog"*, %"class.re2::Prog"** %27, align 8
  %83 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %82, i64 0, i32 1
  store i8 1, i8* %83, align 1
  %84 = icmp eq i32 %1, 0
  br i1 %84, label %85, label %177

85:                                               ; preds = %79
  %86 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86)
  %87 = load i8, i8* %29, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %85
  %90 = load i32, i32* %32, align 8
  %91 = add nsw i32 %90, 1
  %92 = load i32, i32* %33, align 4
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %95, label %94

94:                                               ; preds = %89, %85
  store i8 1, i8* %29, align 8
  br label %140

95:                                               ; preds = %89
  %96 = load i32, i32* %16, align 8
  %97 = icmp slt i32 %90, %96
  br i1 %97, label %136, label %98

98:                                               ; preds = %95
  %99 = icmp eq i32 %96, 0
  %100 = select i1 %99, i32 8, i32 %96
  br label %101

101:                                              ; preds = %101, %98
  %102 = phi i32 [ %100, %98 ], [ %104, %101 ]
  %103 = icmp sgt i32 %102, %90
  %104 = shl nsw i32 %102, 1
  br i1 %103, label %105, label %101

105:                                              ; preds = %101
  %106 = icmp slt i32 %102, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  call void @abort() #18
  unreachable

108:                                              ; preds = %105
  %109 = sext i32 %102 to i64
  %110 = shl nsw i64 %109, 3
  %111 = call i8* @_Znwm(i64 %110) #17
  %112 = ptrtoint i8* %111 to i64
  %113 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %38, align 8
  %114 = icmp eq %"class.re2::Prog::Inst"* %113, null
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = sext i32 %90 to i64
  br label %121

117:                                              ; preds = %108
  %118 = bitcast %"class.re2::Prog::Inst"* %113 to i8*
  %119 = sext i32 %90 to i64
  %120 = shl nsw i64 %119, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %111, i8* nonnull align 4 %118, i64 %120, i1 false) #16
  br label %121

121:                                              ; preds = %117, %115
  %122 = phi i64 [ %116, %115 ], [ %119, %117 ]
  %123 = bitcast i8* %111 to %"class.re2::Prog::Inst"*
  %124 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %123, i64 %122
  %125 = bitcast %"class.re2::Prog::Inst"* %124 to i8*
  %126 = sub nsw i32 %102, %90
  %127 = sext i32 %126 to i64
  %128 = shl nsw i64 %127, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %125, i8 0, i64 %128, i1 false) #16
  store i64 %112, i64* %15, align 8
  br i1 %114, label %133, label %129

129:                                              ; preds = %121
  %130 = bitcast %"class.re2::Prog::Inst"* %113 to i8*
  call void @_ZdlPv(i8* %130) #17
  %131 = load i32, i32* %32, align 8
  %132 = add nsw i32 %131, 1
  br label %133

133:                                              ; preds = %129, %121
  %134 = phi i32 [ %132, %129 ], [ %91, %121 ]
  %135 = phi i32 [ %131, %129 ], [ %90, %121 ]
  store i32 %102, i32* %16, align 8
  br label %136

136:                                              ; preds = %95, %133
  %137 = phi i32 [ %134, %133 ], [ %91, %95 ]
  %138 = phi i32 [ %135, %133 ], [ %90, %95 ]
  store i32 %137, i32* %32, align 8
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %94, %136
  %141 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141)
  %142 = bitcast { i64, i64 }* %4 to i32*
  store i32 0, i32* %142, align 8
  %143 = getelementptr inbounds i8, i8* %141, i64 4
  %144 = bitcast i8* %143 to i64*
  store i64 0, i64* %144, align 4
  %145 = getelementptr inbounds i8, i8* %141, i64 12
  store i8 0, i8* %145, align 4
  %146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %149 = load i64, i64* %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141)
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %147, i64* %150, align 8
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %149, i64* %151, align 8
  br label %169

152:                                              ; preds = %136
  %153 = sext i32 %138 to i64
  %154 = getelementptr inbounds %"class.re2::Compiler", %"class.re2::Compiler"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %155 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %154, align 8
  %156 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %155, i64 %153
  call void @_ZN3re24Prog4Inst13InitByteRangeEiiij(%"class.re2::Prog::Inst"* %156, i32 0, i32 255, i32 0, i32 0) #16
  %157 = shl i32 %138, 1
  %158 = zext i32 %157 to i64
  %159 = shl nuw i64 %158, 32
  %160 = or i64 %159, %158
  %161 = bitcast { i64, i64 }* %5 to i32*
  store i32 %138, i32* %161, align 8
  %162 = getelementptr inbounds i8, i8* %86, i64 4
  %163 = bitcast i8* %162 to i64*
  store i64 %160, i64* %163, align 4
  %164 = getelementptr inbounds i8, i8* %86, i64 12
  store i8 0, i8* %164, align 4
  %165 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %168 = load i64, i64* %167, align 8
  br label %169

169:                                              ; preds = %140, %152
  %170 = phi i64 [ %168, %152 ], [ %149, %140 ]
  %171 = phi i64 [ %166, %152 ], [ %147, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86)
  %172 = call { i64, i64 } @_ZN3re28Compiler4StarENS_4FragEb(%"class.re2::Compiler"* nonnull %6, i64 %171, i64 %170, i1 zeroext true) #16
  %173 = extractvalue { i64, i64 } %172, 0
  %174 = extractvalue { i64, i64 } %172, 1
  %175 = call { i64, i64 } @_ZN3re28Compiler3CatENS_4FragES1_(%"class.re2::Compiler"* nonnull %6, i64 %173, i64 %174, i64 %75, i64 %76)
  %176 = extractvalue { i64, i64 } %175, 0
  br label %177

177:                                              ; preds = %169, %79
  %178 = phi i64 [ %176, %169 ], [ %75, %79 ]
  %179 = trunc i64 %178 to i32
  %180 = load %"class.re2::Prog"*, %"class.re2::Prog"** %27, align 8
  %181 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %180, i64 0, i32 5
  store i32 %179, i32* %181, align 8
  %182 = load %"class.re2::Prog"*, %"class.re2::Prog"** %27, align 8
  %183 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %182, i64 0, i32 6
  store i32 %179, i32* %183, align 4
  %184 = call %"class.re2::Prog"* @_ZN3re28Compiler6FinishEPNS_6RegexpE(%"class.re2::Compiler"* nonnull %6, %"class.re2::Regexp"* %0)
  %185 = icmp eq %"class.re2::Prog"* %184, null
  br i1 %185, label %197, label %186

186:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #16
  store i8 0, i8* %8, align 1
  %187 = bitcast %"class.re2::StringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #16
  %188 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %9, i64 0, i32 0
  %189 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8** %188, align 8
  store i64 12, i64* %189, align 8
  %190 = call zeroext i1 @_ZN3re24Prog9SearchDFAERKNS_11StringPieceES3_NS0_6AnchorENS0_9MatchKindEPS1_PbPNS_10SparseSetTIvEE(%"class.re2::Prog"* nonnull %184, %"class.re2::StringPiece"* nonnull dereferenceable(16) %9, %"class.re2::StringPiece"* nonnull dereferenceable(16) %9, i32 1, i32 3, %"class.re2::StringPiece"* null, i8* nonnull %8, %"class.re2::SparseSetT"* null) #16
  %191 = load i8, i8* %8, align 1, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %186
  call void @_ZN3re24ProgD1Ev(%"class.re2::Prog"* nonnull %184) #16
  %194 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %184, i64 0, i32 0
  call void @_ZdlPv(i8* %194) #17
  br label %195

195:                                              ; preds = %186, %193
  %196 = phi %"class.re2::Prog"* [ null, %193 ], [ %184, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #16
  br label %197

197:                                              ; preds = %62, %177, %195, %57
  %198 = phi %"class.re2::Prog"* [ null, %57 ], [ null, %62 ], [ %196, %195 ], [ null, %177 ]
  call void @_ZN3re28CompilerD2Ev(%"class.re2::Compiler"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %10) #16
  ret %"class.re2::Prog"* %198
}

declare zeroext i1 @_ZN3re24Prog9SearchDFAERKNS_11StringPieceES3_NS0_6AnchorENS0_9MatchKindEPS1_PbPNS_10SparseSetTIvEE(%"class.re2::Prog"*, %"class.re2::StringPiece"* dereferenceable(16), %"class.re2::StringPiece"* dereferenceable(16), i32, i32, %"class.re2::StringPiece"*, i8*, %"class.re2::SparseSetT"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.re2::Prog"* @_ZN3re24Prog10CompileSetEPNS_6RegexpENS_3RE26AnchorEl(%"class.re2::Regexp"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.re2::Prog"* @_ZN3re28Compiler10CompileSetEPNS_6RegexpENS_3RE26AnchorEl(%"class.re2::Regexp"* %0, i32 %1, i64 %2)
  ret %"class.re2::Prog"* %4
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #12

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare %"class.re2::Regexp"* @_ZN3re26Regexp6IncrefEv(%"class.re2::Regexp"*) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp6ConcatEPPS0_iNS0_10ParseFlagsE(%"class.re2::Regexp"**, i32, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp7CaptureEPS0_NS0_10ParseFlagsEi(%"class.re2::Regexp"*, i32, i32) local_unnamed_addr #2

declare %"class.re2::Regexp"* @_ZN3re26Regexp13LiteralStringEPiiNS0_10ParseFlagsE(i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerINS_4FragEED2Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3re26Regexp6WalkerINS_4FragEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3re26Regexp6WalkerINS_4FragEE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__112__deque_baseIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__deque_base"* %4) #16
  %5 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %7, align 8
  %9 = icmp eq %"struct.re2::WalkState"** %6, %8
  br i1 %9, label %28, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"struct.re2::WalkState"** [ %14, %10 ], [ %6, %1 ]
  %12 = bitcast %"struct.re2::WalkState"** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #17
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  %15 = icmp eq %"struct.re2::WalkState"** %14, %8
  br i1 %15, label %16, label %10

16:                                               ; preds = %10
  %17 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %7, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %18, %17
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.re2::WalkState"** %17 to i64
  %22 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %18, i64 -1
  %23 = ptrtoint %"struct.re2::WalkState"** %22 to i64
  %24 = sub i64 %23, %21
  %25 = lshr i64 %24, 3
  %26 = xor i64 %25, -1
  %27 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %18, i64 %26
  store %"struct.re2::WalkState"** %27, %"struct.re2::WalkState"*** %7, align 8
  br label %28

28:                                               ; preds = %20, %16, %1
  %29 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %29, align 8
  %31 = icmp eq %"struct.re2::WalkState"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.re2::WalkState"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #17
  br label %34

34:                                               ; preds = %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerINS_4FragEED0Ev(%"class.re2::Regexp::Walker"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE8PreVisitEPS0_S2_Pb(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*) unnamed_addr #0 comdat align 2 {
  %6 = insertvalue { i64, i64 } undef, i64 %2, 0
  %7 = insertvalue { i64, i64 } %6, i64 %3, 1
  ret { i64, i64 } %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE9PostVisitEPS0_S2_S2_PS2_i(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32) unnamed_addr #0 comdat align 2 {
  %9 = insertvalue { i64, i64 } undef, i64 %4, 0
  %10 = insertvalue { i64, i64 } %9, i64 %5, 1
  ret { i64, i64 } %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE4CopyES2_(%"class.re2::Regexp::Walker"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = insertvalue { i64, i64 } undef, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %2, 1
  ret { i64, i64 } %5
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3re26Regexp6WalkerINS_4FragEE5ResetEv(%"class.re2::Regexp::Walker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.LogMessage, align 8
  %3 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %100, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #16
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1
  %9 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::basic_ostringstream"* %8 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to i64*
  store i64 %15, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #16
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #16
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 1
  %37 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %2, i64 0, i32 1, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %8 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #16
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %41, i32 149) #16
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #16
  %45 = load i64, i64* %3, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %100, label %47

47:                                               ; preds = %6
  %48 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %"struct.re2::WalkState"*** %50 to i64*
  %52 = bitcast %"struct.re2::WalkState"*** %49 to i64*
  br label %53

53:                                               ; preds = %47, %97
  %54 = phi i64 [ %45, %47 ], [ %98, %97 ]
  %55 = load i64, i64* %48, align 8
  %56 = add i64 %54, -1
  %57 = add i64 %56, %55
  %58 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %49, align 8
  %59 = udiv i64 %57, 56
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %58, i64 %59
  %61 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, align 8
  %62 = urem i64 %57, 56
  %63 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %61, i64 %62, i32 5
  %64 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %63, align 8
  %65 = icmp eq %"struct.re2::Frag"* %64, null
  %66 = ptrtoint %"struct.re2::WalkState"** %58 to i64
  br i1 %65, label %73, label %67

67:                                               ; preds = %53
  %68 = bitcast %"struct.re2::Frag"* %64 to i8*
  call void @_ZdaPv(i8* %68) #17
  %69 = load i64, i64* %3, align 8
  %70 = load i64, i64* %48, align 8
  %71 = load i64, i64* %52, align 8
  %72 = add i64 %69, -1
  br label %73

73:                                               ; preds = %67, %53
  %74 = phi i64 [ %72, %67 ], [ %56, %53 ]
  %75 = phi i64 [ %71, %67 ], [ %66, %53 ]
  %76 = phi i64 [ %70, %67 ], [ %55, %53 ]
  %77 = phi i64 [ %69, %67 ], [ %54, %53 ]
  store i64 %74, i64* %3, align 8
  %78 = load i64, i64* %51, align 8
  %79 = sub i64 %78, %75
  %80 = ashr exact i64 %79, 3
  %81 = icmp eq i64 %79, 0
  %82 = mul i64 %80, 56
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = sub i64 1, %77
  %86 = sub i64 %85, %76
  %87 = add i64 %86, %84
  %88 = icmp ult i64 %87, 112
  br i1 %88, label %97, label %89

89:                                               ; preds = %73
  %90 = inttoptr i64 %78 to %"struct.re2::WalkState"**
  %91 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 -1
  %92 = bitcast %"struct.re2::WalkState"** %91 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #17
  %94 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %50, align 8
  %95 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %94, i64 -1
  store %"struct.re2::WalkState"** %95, %"struct.re2::WalkState"*** %50, align 8
  %96 = load i64, i64* %3, align 8
  br label %97

97:                                               ; preds = %73, %89
  %98 = phi i64 [ %74, %73 ], [ %96, %89 ]
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %53

100:                                              ; preds = %97, %6, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %5, 56
  %7 = urem i64 %5, 56
  %8 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %3, i64 %6
  %9 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %10 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %9, align 8
  %11 = icmp eq %"struct.re2::WalkState"** %10, %3
  %12 = ptrtoint %"struct.re2::WalkState"** %10 to i64
  %13 = ptrtoint %"struct.re2::WalkState"** %3 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

16:                                               ; preds = %1
  %17 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %8, align 8
  %18 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %17, i64 %7
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = udiv i64 %21, 56
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %3, i64 %22
  %24 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, align 8
  %25 = urem i64 %21, 56
  %26 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %24, i64 %25
  %27 = icmp eq %"struct.re2::WalkState"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %14, %16
  %29 = phi i64* [ %15, %14 ], [ %19, %16 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.re2::WalkState"*** %9 to i64*
  %31 = sub i64 %12, %13
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %63

34:                                               ; preds = %16, %47
  %35 = phi %"struct.re2::WalkState"* [ %50, %47 ], [ %18, %16 ]
  %36 = phi %"struct.re2::WalkState"** [ %49, %47 ], [ %8, %16 ]
  %37 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %35, i64 1
  %38 = ptrtoint %"struct.re2::WalkState"* %37 to i64
  %39 = bitcast %"struct.re2::WalkState"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4032
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %36, i64 1
  %45 = bitcast %"struct.re2::WalkState"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %34, %43
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi %"struct.re2::WalkState"** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to %"struct.re2::WalkState"*
  %51 = icmp eq %"struct.re2::WalkState"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.re2::WalkState"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.re2::WalkState"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #17
  %56 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %2, align 8
  %57 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %56, i64 1
  store %"struct.re2::WalkState"** %57, %"struct.re2::WalkState"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.re2::WalkState"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52, %28
  %64 = phi i64 [ %32, %28 ], [ %61, %52 ]
  switch i64 %64, label %68 [
    i64 1, label %66
    i64 2, label %65
  ]

65:                                               ; preds = %63
  br label %66

66:                                               ; preds = %63, %65
  %67 = phi i64 [ 56, %65 ], [ 28, %63 ]
  store i64 %67, i64* %4, align 8
  br label %68

68:                                               ; preds = %66, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsImJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i64* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.72"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %5
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #16, !range !5
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %6
  br i1 %53, label %145, label %29

54:                                               ; preds = %29, %46, %20, %5
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %5 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 32) #17, !noalias !8
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8, !noalias !8
  %60 = bitcast i8* %57 to i64*
  %61 = load i64, i64* %59, align 8, !noalias !8
  store i64 %61, i64* %60, align 8, !noalias !8
  %62 = getelementptr inbounds i8, i8* %56, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8, !noalias !8
  %64 = getelementptr inbounds i8, i8* %56, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %6, i64* %65, align 8, !noalias !8
  %66 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !8
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %8 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %9, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %54
  %78 = shl i64 %8, 1
  %79 = icmp ult i64 %8, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %8) #16, !range !5
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #16
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %7, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #16, !range !5
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %6
  br label %100

96:                                               ; preds = %77
  %97 = icmp ult i64 %6, %90
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %6, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %54
  %101 = phi i64 [ %8, %54 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %55, %54 ], [ %95, %93 ], [ %6, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %56 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %56, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #16, !range !5
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %56 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %56, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %49, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %49 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %32, %49 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %102, align 8
  %113 = load i64, i64* %111, align 8
  %114 = icmp eq i64 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #15

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN3re26Regexp6WalkerINS_4FragEE12WalkInternalEPS0_S2_b(%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.LogMessage, align 8
  %8 = alloca [3 x i8], align 1
  %9 = alloca [7 x i8], align 1
  %10 = alloca i8, align 1
  %11 = alloca [3 x i8], align 1
  %12 = alloca [7 x i8], align 1
  tail call void @_ZN3re26Regexp6WalkerINS_4FragEE5ResetEv(%"class.re2::Regexp::Walker"* %0)
  %13 = icmp eq %"class.re2::Regexp"* %1, null
  br i1 %13, label %14, label %55

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %15) #16
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1
  %17 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %17, align 8
  %19 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0
  %21 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i64*
  store i64 %21, i64* %22, align 8
  %23 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8**
  %25 = inttoptr i64 %21 to i8*
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %16 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = bitcast i8* %30 to i64*
  store i64 %23, i64* %31, align 8
  %32 = load i8*, i8** %24, align 8
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 %35
  %37 = bitcast i8* %36 to %"class.std::__1::ios_base"*
  %38 = bitcast %"class.std::__1::basic_stringbuf"* %19 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %37, i8* %38) #16
  %39 = getelementptr inbounds i8, i8* %36, i64 136
  %40 = bitcast i8* %39 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 144
  %42 = bitcast i8* %41 to i32*
  store i32 -1, i32* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %17, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %20) #16
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 1
  %45 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %7, i64 0, i32 1, i32 1, i32 3
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #16
  store i32 16, i32* %45, align 8
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i64 42) #16
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #16
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %49, i32 162) #16
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #16
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i64 9) #16
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %15) #16
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %2, i64* %53, align 8
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %3, i64* %54, align 8
  br label %476

55:                                               ; preds = %5
  %56 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1
  %57 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %57)
  %58 = getelementptr inbounds [7 x i8], [7 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %58)
  %59 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %"struct.re2::WalkState"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"struct.re2::WalkState"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp eq i64 %65, 0
  %68 = mul i64 %66, 56
  %69 = add i64 %68, -1
  %70 = select i1 %67, i64 0, i64 %69
  %71 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %72
  %76 = icmp eq i64 %70, %75
  %77 = inttoptr i64 %64 to %"struct.re2::WalkState"**
  %78 = inttoptr i64 %61 to %"struct.re2::WalkState"**
  br i1 %76, label %79, label %86

79:                                               ; preds = %55
  %80 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %56, i64 0, i32 0
  tail call void @_ZNSt3__15dequeIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %80) #16
  %81 = load i64, i64* %73, align 8
  %82 = load i64, i64* %71, align 8
  %83 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %62, align 8
  %84 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %59, align 8
  %85 = add i64 %82, %81
  br label %86

86:                                               ; preds = %79, %55
  %87 = phi i64 [ %85, %79 ], [ %75, %55 ]
  %88 = phi %"struct.re2::WalkState"** [ %84, %79 ], [ %78, %55 ]
  %89 = phi %"struct.re2::WalkState"** [ %83, %79 ], [ %77, %55 ]
  %90 = icmp eq %"struct.re2::WalkState"** %88, %89
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = udiv i64 %87, 56
  %93 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 %92
  %94 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %93, align 8
  %95 = urem i64 %87, 56
  %96 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %94, i64 %95
  %97 = bitcast %"struct.re2::WalkState"* %96 to i8*
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i8* [ %97, %91 ], [ null, %86 ]
  %100 = bitcast i8* %99 to %"class.re2::Regexp"**
  store %"class.re2::Regexp"* %1, %"class.re2::Regexp"** %100, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 8
  %102 = bitcast i8* %101 to i32*
  store i32 -1, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 12
  %104 = bitcast i8* %103 to i64*
  store i64 %2, i64* %104, align 4
  %105 = getelementptr inbounds i8, i8* %99, i64 20
  %106 = bitcast i8* %105 to i64*
  store i64 %3, i64* %106, align 4
  %107 = getelementptr inbounds i8, i8* %99, i64 28
  %108 = bitcast i8* %107 to i32*
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %99, i64 32
  %110 = bitcast i8* %109 to i64*
  store i64 0, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %99, i64 40
  store i8 0, i8* %111, align 8
  %112 = getelementptr inbounds i8, i8* %99, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* nonnull align 1 %57, i64 3, i1 false)
  %113 = getelementptr inbounds i8, i8* %99, i64 44
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %99, i64 48
  %116 = bitcast i8* %115 to i64*
  store i64 0, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %99, i64 56
  store i8 0, i8* %117, align 8
  %118 = getelementptr inbounds i8, i8* %99, i64 57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* nonnull align 1 %58, i64 7, i1 false)
  %119 = getelementptr inbounds i8, i8* %99, i64 64
  %120 = bitcast i8* %119 to %"struct.re2::Frag"**
  store %"struct.re2::Frag"* null, %"struct.re2::Frag"** %120, align 8
  %121 = load i64, i64* %73, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %58)
  %123 = bitcast { i64, i64 }* %6 to i32*
  %124 = bitcast { i64, i64 }* %6 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 4
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %127 = getelementptr inbounds i8, i8* %124, i64 12
  %128 = bitcast i8* %125 to i64*
  %129 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 3
  %130 = bitcast %"class.re2::Regexp::Walker"* %0 to { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)***
  %131 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  %132 = getelementptr inbounds [7 x i8], [7 x i8]* %12, i64 0, i64 0
  %133 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %56, i64 0, i32 0
  %134 = bitcast %"class.re2::Regexp::Walker"* %0 to { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)***
  %135 = bitcast %"class.re2::Regexp::Walker"* %0 to { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)***
  %136 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %137 = bitcast i64* %126 to i40*
  %138 = getelementptr inbounds %"class.re2::Regexp::Walker", %"class.re2::Regexp::Walker"* %0, i64 0, i32 2
  %139 = bitcast %"class.re2::Regexp::Walker"* %0 to { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)***
  %140 = bitcast { i64, i64 }* %6 to i8*
  br label %141

141:                                              ; preds = %471, %98
  %142 = phi i64 [ %472, %471 ], [ %122, %98 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 16, i1 false)
  store i32 0, i32* %123, align 8
  store i64 0, i64* %128, align 4
  store i8 0, i8* %127, align 4
  %143 = load i64, i64* %71, align 8
  %144 = add i64 %142, -1
  %145 = add i64 %144, %143
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %62, align 8
  %147 = udiv i64 %145, 56
  %148 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %146, i64 %147
  %149 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, align 8
  %150 = urem i64 %145, 56
  %151 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 0
  %152 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %151, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %154, -1
  br i1 %155, label %156, label %266

156:                                              ; preds = %141
  %157 = load i32, i32* %129, align 4
  %158 = add nsw i32 %157, -1
  store i32 %158, i32* %129, align 4
  %159 = icmp slt i32 %157, 1
  br i1 %159, label %160, label %174

160:                                              ; preds = %156
  store i8 1, i8* %138, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2
  %162 = bitcast %"struct.re2::Frag"* %161 to i64*
  %163 = load i64, i64* %162, align 4
  %164 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2, i32 1, i32 1
  %165 = bitcast i32* %164 to i64*
  %166 = load i64, i64* %165, align 4
  %167 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)**, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)*** %139, align 8
  %168 = getelementptr inbounds { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)** %167, i64 5
  %169 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64)** %168, align 8
  %170 = call { i64, i64 } %169(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %152, i64 %163, i64 %166) #16
  %171 = extractvalue { i64, i64 } %170, 0
  %172 = extractvalue { i64, i64 } %170, 1
  store i64 %171, i64* %136, align 8
  %173 = trunc i64 %172 to i40
  store i40 %173, i40* %137, align 8
  br label %419

174:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #16
  store i8 0, i8* %10, align 1
  %175 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2
  %176 = bitcast %"struct.re2::Frag"* %175 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2, i32 1, i32 1
  %179 = bitcast i32* %178 to i64*
  %180 = load i64, i64* %179, align 4
  %181 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)**, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)*** %130, align 8
  %182 = getelementptr inbounds { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)** %181, i64 2
  %183 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i8*)** %182, align 8
  %184 = call { i64, i64 } %183(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %152, i64 %177, i64 %180, i8* nonnull %10) #16
  %185 = extractvalue { i64, i64 } %184, 0
  %186 = extractvalue { i64, i64 } %184, 1
  %187 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 3
  %188 = bitcast %"struct.re2::Frag"* %187 to i64*
  store i64 %185, i64* %188, align 4
  %189 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 3, i32 1, i32 1
  %190 = bitcast i32* %189 to i40*
  %191 = trunc i64 %186 to i40
  store i40 %191, i40* %190, align 4
  %192 = load i8, i8* %10, align 1, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %174
  %195 = bitcast %"struct.re2::Frag"* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 4 %195, i64 13, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #16
  br label %419

196:                                              ; preds = %174
  store i32 0, i32* %153, align 8
  %197 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 5
  store %"struct.re2::Frag"* null, %"struct.re2::Frag"** %197, align 8
  %198 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %152, i64 0, i32 4
  %199 = load i16, i16* %198, align 2
  switch i16 %199, label %202 [
    i16 1, label %200
    i16 0, label %265
  ]

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 4
  store %"struct.re2::Frag"* %201, %"struct.re2::Frag"** %197, align 8
  br label %265

202:                                              ; preds = %196
  %203 = zext i16 %199 to i64
  %204 = shl nuw nsw i64 %203, 4
  %205 = call i8* @_Znam(i64 %204) #17
  %206 = bitcast i8* %205 to %"struct.re2::Frag"*
  %207 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %206, i64 %203
  %208 = shl nuw nsw i64 %203, 4
  %209 = add nsw i64 %208, -16
  %210 = lshr exact i64 %209, 4
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %202, %214
  %215 = phi %"struct.re2::Frag"* [ %221, %214 ], [ %206, %202 ]
  %216 = phi i64 [ %222, %214 ], [ %212, %202 ]
  %217 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %215, i64 0, i32 0
  store i32 0, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %215, i64 0, i32 1
  %219 = bitcast %"struct.re2::PatchList"* %218 to i64*
  store i64 0, i64* %219, align 4
  %220 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %215, i64 0, i32 2
  store i8 0, i8* %220, align 4
  %221 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %215, i64 1
  %222 = add i64 %216, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %214, !llvm.loop !12

224:                                              ; preds = %214, %202
  %225 = phi %"struct.re2::Frag"* [ %206, %202 ], [ %221, %214 ]
  %226 = icmp ult i64 %209, 112
  br i1 %226, label %263, label %227

227:                                              ; preds = %224, %227
  %228 = phi %"struct.re2::Frag"* [ %261, %227 ], [ %225, %224 ]
  %229 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 0, i32 0
  store i32 0, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 0, i32 1
  %231 = bitcast %"struct.re2::PatchList"* %230 to i64*
  store i64 0, i64* %231, align 4
  %232 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 0, i32 2
  store i8 0, i8* %232, align 4
  %233 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 1, i32 0
  store i32 0, i32* %233, align 4
  %234 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 1, i32 1
  %235 = bitcast %"struct.re2::PatchList"* %234 to i64*
  store i64 0, i64* %235, align 4
  %236 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 1, i32 2
  store i8 0, i8* %236, align 4
  %237 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 2, i32 0
  store i32 0, i32* %237, align 4
  %238 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 2, i32 1
  %239 = bitcast %"struct.re2::PatchList"* %238 to i64*
  store i64 0, i64* %239, align 4
  %240 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 2, i32 2
  store i8 0, i8* %240, align 4
  %241 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 3, i32 0
  store i32 0, i32* %241, align 4
  %242 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 3, i32 1
  %243 = bitcast %"struct.re2::PatchList"* %242 to i64*
  store i64 0, i64* %243, align 4
  %244 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 3, i32 2
  store i8 0, i8* %244, align 4
  %245 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 4, i32 0
  store i32 0, i32* %245, align 4
  %246 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 4, i32 1
  %247 = bitcast %"struct.re2::PatchList"* %246 to i64*
  store i64 0, i64* %247, align 4
  %248 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 4, i32 2
  store i8 0, i8* %248, align 4
  %249 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 5, i32 0
  store i32 0, i32* %249, align 4
  %250 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 5, i32 1
  %251 = bitcast %"struct.re2::PatchList"* %250 to i64*
  store i64 0, i64* %251, align 4
  %252 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 5, i32 2
  store i8 0, i8* %252, align 4
  %253 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 6, i32 0
  store i32 0, i32* %253, align 4
  %254 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 6, i32 1
  %255 = bitcast %"struct.re2::PatchList"* %254 to i64*
  store i64 0, i64* %255, align 4
  %256 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 6, i32 2
  store i8 0, i8* %256, align 4
  %257 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 7, i32 0
  store i32 0, i32* %257, align 4
  %258 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 7, i32 1
  %259 = bitcast %"struct.re2::PatchList"* %258 to i64*
  store i64 0, i64* %259, align 4
  %260 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 7, i32 2
  store i8 0, i8* %260, align 4
  %261 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %228, i64 8
  %262 = icmp eq %"struct.re2::Frag"* %261, %207
  br i1 %262, label %263, label %227

263:                                              ; preds = %227, %224
  %264 = bitcast %"struct.re2::Frag"** %197 to i8**
  store i8* %205, i8** %264, align 8
  br label %265

265:                                              ; preds = %200, %263, %196
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #16
  br label %266

266:                                              ; preds = %265, %141
  %267 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %152, i64 0, i32 4
  %268 = load i16, i16* %267, align 2
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %266
  %271 = load i32, i32* %153, align 8
  br label %389

272:                                              ; preds = %266
  %273 = icmp eq i16 %268, 1
  %274 = getelementptr inbounds %"class.re2::Regexp", %"class.re2::Regexp"* %152, i64 0, i32 5
  br i1 %273, label %275, label %277

275:                                              ; preds = %272
  %276 = bitcast %union.anon.46* %274 to %"class.re2::Regexp"**
  br label %280

277:                                              ; preds = %272
  %278 = getelementptr inbounds %union.anon.46, %union.anon.46* %274, i64 0, i32 0
  %279 = load %"class.re2::Regexp"**, %"class.re2::Regexp"*** %278, align 8
  br label %280

280:                                              ; preds = %275, %277
  %281 = phi %"class.re2::Regexp"** [ %276, %275 ], [ %279, %277 ]
  %282 = load i32, i32* %153, align 8
  %283 = zext i16 %268 to i32
  %284 = icmp slt i32 %282, %283
  br i1 %284, label %285, label %389

285:                                              ; preds = %280
  %286 = icmp sgt i32 %282, 0
  %287 = and i1 %286, %4
  br i1 %287, label %293, label %288

288:                                              ; preds = %285
  %289 = sext i32 %282 to i64
  %290 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %281, i64 %289
  %291 = bitcast %"class.re2::Regexp"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  br label %329

293:                                              ; preds = %285
  %294 = add nsw i32 %282, -1
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %281, i64 %295
  %297 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %296, align 8
  %298 = sext i32 %282 to i64
  %299 = getelementptr inbounds %"class.re2::Regexp"*, %"class.re2::Regexp"** %281, i64 %298
  %300 = load %"class.re2::Regexp"*, %"class.re2::Regexp"** %299, align 8
  %301 = icmp eq %"class.re2::Regexp"* %297, %300
  br i1 %301, label %304, label %302

302:                                              ; preds = %293
  %303 = ptrtoint %"class.re2::Regexp"* %300 to i64
  br label %329

304:                                              ; preds = %293
  %305 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 5
  %306 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %305, align 8
  %307 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %306, i64 %295
  %308 = bitcast %"struct.re2::Frag"* %307 to i64*
  %309 = load i64, i64* %308, align 4
  %310 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %306, i64 %295, i32 1, i32 1
  %311 = bitcast i32* %310 to i64*
  %312 = load i64, i64* %311, align 4
  %313 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)**, { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)*** %134, align 8
  %314 = getelementptr inbounds { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)** %313, i64 4
  %315 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, i64, i64)** %314, align 8
  %316 = call { i64, i64 } %315(%"class.re2::Regexp::Walker"* %0, i64 %309, i64 %312) #16
  %317 = extractvalue { i64, i64 } %316, 0
  %318 = extractvalue { i64, i64 } %316, 1
  %319 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %305, align 8
  %320 = load i32, i32* %153, align 8
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %319, i64 %321
  %323 = bitcast %"struct.re2::Frag"* %322 to i64*
  store i64 %317, i64* %323, align 4
  %324 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %319, i64 %321, i32 1, i32 1
  %325 = bitcast i32* %324 to i40*
  %326 = trunc i64 %318 to i40
  store i40 %326, i40* %325, align 4
  %327 = load i32, i32* %153, align 8
  %328 = add nsw i32 %327, 1
  store i32 %328, i32* %153, align 8
  br label %471

329:                                              ; preds = %302, %288
  %330 = phi i64 [ %292, %288 ], [ %303, %302 ]
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %131)
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %132)
  %331 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 3
  %332 = bitcast %"struct.re2::Frag"* %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 4
  %334 = load i64, i64* %60, align 8
  %335 = load i64, i64* %63, align 8
  %336 = sub i64 %334, %335
  %337 = ashr exact i64 %336, 3
  %338 = icmp eq i64 %336, 0
  %339 = mul i64 %337, 56
  %340 = add i64 %339, -1
  %341 = select i1 %338, i64 0, i64 %340
  %342 = load i64, i64* %71, align 8
  %343 = load i64, i64* %73, align 8
  %344 = add i64 %343, %342
  %345 = icmp eq i64 %341, %344
  %346 = inttoptr i64 %335 to %"struct.re2::WalkState"**
  %347 = inttoptr i64 %334 to %"struct.re2::WalkState"**
  br i1 %345, label %348, label %354

348:                                              ; preds = %329
  call void @_ZNSt3__15dequeIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %133) #16
  %349 = load i64, i64* %73, align 8
  %350 = load i64, i64* %71, align 8
  %351 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %62, align 8
  %352 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %59, align 8
  %353 = add i64 %350, %349
  br label %354

354:                                              ; preds = %348, %329
  %355 = phi i64 [ %353, %348 ], [ %344, %329 ]
  %356 = phi %"struct.re2::WalkState"** [ %352, %348 ], [ %347, %329 ]
  %357 = phi %"struct.re2::WalkState"** [ %351, %348 ], [ %346, %329 ]
  %358 = icmp eq %"struct.re2::WalkState"** %356, %357
  br i1 %358, label %366, label %359

359:                                              ; preds = %354
  %360 = udiv i64 %355, 56
  %361 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %357, i64 %360
  %362 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %361, align 8
  %363 = urem i64 %355, 56
  %364 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %362, i64 %363
  %365 = bitcast %"struct.re2::WalkState"* %364 to i8*
  br label %366

366:                                              ; preds = %354, %359
  %367 = phi i8* [ %365, %359 ], [ null, %354 ]
  %368 = bitcast i8* %367 to i64*
  store i64 %330, i64* %368, align 8
  %369 = getelementptr inbounds i8, i8* %367, i64 8
  %370 = bitcast i8* %369 to i32*
  store i32 -1, i32* %370, align 8
  %371 = getelementptr inbounds i8, i8* %367, i64 12
  %372 = bitcast i8* %371 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %372, align 4
  %373 = getelementptr inbounds i8, i8* %367, i64 28
  %374 = bitcast i8* %373 to i32*
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds i8, i8* %367, i64 32
  %376 = bitcast i8* %375 to i64*
  store i64 0, i64* %376, align 8
  %377 = getelementptr inbounds i8, i8* %367, i64 40
  store i8 0, i8* %377, align 8
  %378 = getelementptr inbounds i8, i8* %367, i64 41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %378, i8* nonnull align 1 %131, i64 3, i1 false)
  %379 = getelementptr inbounds i8, i8* %367, i64 44
  %380 = bitcast i8* %379 to i32*
  store i32 0, i32* %380, align 4
  %381 = getelementptr inbounds i8, i8* %367, i64 48
  %382 = bitcast i8* %381 to i64*
  store i64 0, i64* %382, align 8
  %383 = getelementptr inbounds i8, i8* %367, i64 56
  store i8 0, i8* %383, align 8
  %384 = getelementptr inbounds i8, i8* %367, i64 57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %384, i8* nonnull align 1 %132, i64 7, i1 false)
  %385 = getelementptr inbounds i8, i8* %367, i64 64
  %386 = bitcast i8* %385 to %"struct.re2::Frag"**
  store %"struct.re2::Frag"* null, %"struct.re2::Frag"** %386, align 8
  %387 = load i64, i64* %73, align 8
  %388 = add i64 %387, 1
  store i64 %388, i64* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %131)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %132)
  br label %471

389:                                              ; preds = %270, %280
  %390 = phi i32 [ %271, %270 ], [ %282, %280 ]
  %391 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2
  %392 = bitcast %"struct.re2::Frag"* %391 to i64*
  %393 = load i64, i64* %392, align 4
  %394 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 2, i32 1, i32 1
  %395 = bitcast i32* %394 to i64*
  %396 = load i64, i64* %395, align 4
  %397 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 3
  %398 = bitcast %"struct.re2::Frag"* %397 to i64*
  %399 = load i64, i64* %398, align 4
  %400 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 3, i32 1, i32 1
  %401 = bitcast i32* %400 to i64*
  %402 = load i64, i64* %401, align 4
  %403 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %149, i64 %150, i32 5
  %404 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %403, align 8
  %405 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)**, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)*** %135, align 8
  %406 = getelementptr inbounds { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)** %405, i64 3
  %407 = load { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)*, { i64, i64 } (%"class.re2::Regexp::Walker"*, %"class.re2::Regexp"*, i64, i64, i64, i64, %"struct.re2::Frag"*, i32)** %406, align 8
  %408 = call { i64, i64 } %407(%"class.re2::Regexp::Walker"* %0, %"class.re2::Regexp"* %152, i64 %393, i64 %396, i64 %399, i64 %402, %"struct.re2::Frag"* %404, i32 %390) #16
  %409 = extractvalue { i64, i64 } %408, 0
  %410 = extractvalue { i64, i64 } %408, 1
  store i64 %409, i64* %136, align 8
  %411 = trunc i64 %410 to i40
  store i40 %411, i40* %137, align 8
  %412 = load i16, i16* %267, align 2
  %413 = icmp ugt i16 %412, 1
  br i1 %413, label %414, label %419

414:                                              ; preds = %389
  %415 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %403, align 8
  %416 = icmp eq %"struct.re2::Frag"* %415, null
  br i1 %416, label %419, label %417

417:                                              ; preds = %414
  %418 = bitcast %"struct.re2::Frag"* %415 to i8*
  call void @_ZdaPv(i8* %418) #17
  br label %419

419:                                              ; preds = %194, %389, %417, %414, %160
  %420 = load i64, i64* %73, align 8
  %421 = load i64, i64* %71, align 8
  %422 = add i64 %420, -1
  store i64 %422, i64* %73, align 8
  %423 = load i64, i64* %60, align 8
  %424 = load i64, i64* %63, align 8
  %425 = sub i64 %423, %424
  %426 = ashr exact i64 %425, 3
  %427 = icmp eq i64 %425, 0
  %428 = mul i64 %426, 56
  %429 = add i64 %428, -1
  %430 = select i1 %427, i64 0, i64 %429
  %431 = sub i64 1, %420
  %432 = sub i64 %431, %421
  %433 = add i64 %432, %430
  %434 = icmp ult i64 %433, 112
  br i1 %434, label %443, label %435

435:                                              ; preds = %419
  %436 = inttoptr i64 %423 to %"struct.re2::WalkState"**
  %437 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %436, i64 -1
  %438 = bitcast %"struct.re2::WalkState"** %437 to i8**
  %439 = load i8*, i8** %438, align 8
  call void @_ZdlPv(i8* %439) #17
  %440 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %59, align 8
  %441 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %440, i64 -1
  store %"struct.re2::WalkState"** %441, %"struct.re2::WalkState"*** %59, align 8
  %442 = load i64, i64* %73, align 8
  br label %443

443:                                              ; preds = %419, %435
  %444 = phi i64 [ %422, %419 ], [ %442, %435 ]
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %473, label %446

446:                                              ; preds = %443
  %447 = load i64, i64* %71, align 8
  %448 = add i64 %444, -1
  %449 = add i64 %448, %447
  %450 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %62, align 8
  %451 = udiv i64 %449, 56
  %452 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %450, i64 %451
  %453 = load %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %452, align 8
  %454 = urem i64 %449, 56
  %455 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %453, i64 %454, i32 5
  %456 = load %"struct.re2::Frag"*, %"struct.re2::Frag"** %455, align 8
  %457 = icmp eq %"struct.re2::Frag"* %456, null
  br i1 %457, label %463, label %458

458:                                              ; preds = %446
  %459 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %453, i64 %454, i32 1
  %460 = load i32, i32* %459, align 8
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds %"struct.re2::Frag", %"struct.re2::Frag"* %456, i64 %461
  br label %465

463:                                              ; preds = %446
  %464 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %453, i64 %454, i32 4
  br label %465

465:                                              ; preds = %463, %458
  %466 = phi %"struct.re2::Frag"* [ %464, %463 ], [ %462, %458 ]
  %467 = bitcast %"struct.re2::Frag"* %466 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %467, i8* nonnull align 8 %124, i64 13, i1 false)
  %468 = getelementptr inbounds %"struct.re2::WalkState", %"struct.re2::WalkState"* %453, i64 %454, i32 1
  %469 = load i32, i32* %468, align 8
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %468, align 8
  br label %471

471:                                              ; preds = %304, %366, %465
  %472 = load i64, i64* %73, align 8
  br label %141

473:                                              ; preds = %443
  %474 = load i64, i64* %136, align 8
  %475 = load i64, i64* %126, align 8
  br label %476

476:                                              ; preds = %473, %14
  %477 = phi i64 [ %475, %473 ], [ %3, %14 ]
  %478 = phi i64 [ %474, %473 ], [ %2, %14 ]
  %479 = insertvalue { i64, i64 } undef, i64 %478, 0
  %480 = insertvalue { i64, i64 } %479, i64 %477, 1
  ret { i64, i64 } %480
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3re29WalkStateINS1_4FragEEENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.re2::WalkState"*, align 8
  %3 = alloca %"struct.re2::WalkState"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.79", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 55
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -56
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = bitcast %"struct.re2::WalkState"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 1
  store %"struct.re2::WalkState"** %14, %"struct.re2::WalkState"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %17, align 8
  %19 = icmp eq %"struct.re2::WalkState"** %16, %18
  %20 = ptrtoint %"struct.re2::WalkState"** %18 to i64
  %21 = bitcast %"struct.re2::WalkState"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  %25 = icmp ugt %"struct.re2::WalkState"** %14, %24
  %26 = ptrtoint %"struct.re2::WalkState"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %14, i64 %32
  %34 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.re2::WalkState"** %33 to i8*
  %40 = bitcast %"struct.re2::WalkState"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #16
  %41 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.re2::WalkState"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %36
  store %"struct.re2::WalkState"** %44, %"struct.re2::WalkState"*** %15, align 8
  %45 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %43, i64 %32
  store %"struct.re2::WalkState"** %45, %"struct.re2::WalkState"*** %10, align 8
  %46 = bitcast %"struct.re2::WalkState"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.re2::WalkState"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #17
  %60 = bitcast i8* %59 to %"struct.re2::WalkState"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %57
  %63 = ptrtoint %"struct.re2::WalkState"** %62 to i64
  %64 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %60, i64 %53
  %65 = ptrtoint %"struct.re2::WalkState"** %64 to i64
  %66 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  %67 = ptrtoint %"struct.re2::WalkState"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.re2::WalkState"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.re2::WalkState"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.re2::WalkState"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %79, i64 1
  %87 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  %88 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !13

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.re2::WalkState"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.re2::WalkState"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.re2::WalkState"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.re2::WalkState"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.re2::WalkState"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 1
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 1
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 2
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 2
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 3
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 3
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 4
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 4
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 5
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 5
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 6
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 6
  %132 = bitcast %"struct.re2::WalkState"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.re2::WalkState"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 7
  %136 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 7
  %137 = bitcast %"struct.re2::WalkState"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.re2::WalkState"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %99, i64 8
  %141 = ptrtoint %"struct.re2::WalkState"** %140 to i64
  %142 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %101, i64 8
  %143 = icmp eq %"struct.re2::WalkState"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.re2::WalkState"** %70 to i64
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.re2::WalkState"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.re2::WalkState"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.re2::WalkState"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #17
  %156 = bitcast %"struct.re2::WalkState"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %15, align 8
  %161 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %160, i64 1
  store %"struct.re2::WalkState"** %161, %"struct.re2::WalkState"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.re2::WalkState"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.re2::WalkState"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.re2::WalkState"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.re2::WalkState"**
  %181 = inttoptr i64 %169 to %"struct.re2::WalkState"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.re2::WalkState"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #16
  %186 = tail call i8* @_Znwm(i64 4032) #17
  %187 = bitcast %"struct.re2::WalkState"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #16
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.re2::WalkState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #16
  %190 = tail call i8* @_Znwm(i64 4032) #17
  %191 = bitcast %"struct.re2::WalkState"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"struct.re2::WalkState"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #16
  %192 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %193 = bitcast %"struct.re2::WalkState"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %192, i64 1
  store %"struct.re2::WalkState"** %195, %"struct.re2::WalkState"*** %167, align 8
  %196 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %197 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %172, align 8
  %198 = icmp eq %"struct.re2::WalkState"** %196, %197
  %199 = ptrtoint %"struct.re2::WalkState"** %197 to i64
  %200 = bitcast %"struct.re2::WalkState"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  %204 = icmp ugt %"struct.re2::WalkState"** %195, %203
  %205 = ptrtoint %"struct.re2::WalkState"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %195, i64 %211
  %213 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.re2::WalkState"** %212 to i8*
  %219 = bitcast %"struct.re2::WalkState"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #16
  %220 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.re2::WalkState"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %212, i64 %215
  store %"struct.re2::WalkState"** %223, %"struct.re2::WalkState"*** %164, align 8
  %224 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %222, i64 %211
  store %"struct.re2::WalkState"** %224, %"struct.re2::WalkState"*** %167, align 8
  %225 = bitcast %"struct.re2::WalkState"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #18
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #17
  %237 = bitcast i8* %236 to %"struct.re2::WalkState"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %234
  %240 = ptrtoint %"struct.re2::WalkState"** %239 to i64
  %241 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %237, i64 %230
  %242 = ptrtoint %"struct.re2::WalkState"** %241 to i64
  %243 = ptrtoint %"struct.re2::WalkState"** %195 to i64
  %244 = ptrtoint %"struct.re2::WalkState"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.re2::WalkState"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.re2::WalkState"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.re2::WalkState"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %256, i64 1
  %264 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  %265 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !14

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.re2::WalkState"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.re2::WalkState"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.re2::WalkState"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.re2::WalkState"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.re2::WalkState"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.re2::WalkState"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 1
  %283 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 1
  %284 = bitcast %"struct.re2::WalkState"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.re2::WalkState"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 2
  %288 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 2
  %289 = bitcast %"struct.re2::WalkState"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.re2::WalkState"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 3
  %293 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 3
  %294 = bitcast %"struct.re2::WalkState"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.re2::WalkState"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 4
  %298 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 4
  %299 = bitcast %"struct.re2::WalkState"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.re2::WalkState"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 5
  %303 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 5
  %304 = bitcast %"struct.re2::WalkState"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.re2::WalkState"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 6
  %308 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 6
  %309 = bitcast %"struct.re2::WalkState"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.re2::WalkState"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 7
  %313 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 7
  %314 = bitcast %"struct.re2::WalkState"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.re2::WalkState"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %276, i64 8
  %318 = ptrtoint %"struct.re2::WalkState"** %317 to i64
  %319 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %278, i64 8
  %320 = icmp eq %"struct.re2::WalkState"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.re2::WalkState"** %247 to i64
  %323 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.re2::WalkState"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.re2::WalkState"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.re2::WalkState"** %325 to i8*
  call void @_ZdlPv(i8* %330) #17
  %331 = bitcast %"struct.re2::WalkState"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %336 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %335, i64 1
  store %"struct.re2::WalkState"** %336, %"struct.re2::WalkState"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #16
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.re2::WalkState"** null, %"struct.re2::WalkState"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %346, %"class.std::__1::__compressed_pair"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #18
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #17
  %354 = bitcast i8* %353 to %"struct.re2::WalkState"**
  %355 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %171
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %356, %"struct.re2::WalkState"*** %339, align 8
  %357 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %354, i64 %345
  store %"struct.re2::WalkState"** %357, %"struct.re2::WalkState"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4032) #17
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.re2::WalkState"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.re2::WalkState"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.re2::WalkState"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %356, i64 %370
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %340, align 8
  store %"struct.re2::WalkState"** %371, %"struct.re2::WalkState"*** %339, align 8
  %372 = ptrtoint %"struct.re2::WalkState"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #18
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i64*
  %382 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #17
  %386 = bitcast i8* %385 to %"struct.re2::WalkState"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %383
  %389 = ptrtoint %"struct.re2::WalkState"** %388 to i64
  %390 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %386, i64 %377
  %391 = ptrtoint %"struct.re2::WalkState"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #17
  %394 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %164, align 8
  %395 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %396 = ptrtoint %"struct.re2::WalkState"** %395 to i64
  %397 = ptrtoint %"struct.re2::WalkState"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.re2::WalkState"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.re2::WalkState"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.re2::WalkState"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.re2::WalkState"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %406, i64 1
  store %"struct.re2::WalkState"** %408, %"struct.re2::WalkState"*** %340, align 8
  %409 = icmp eq %"struct.re2::WalkState"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.re2::WalkState"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i64*
  %413 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %414 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %415 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.re2::WalkState"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.79"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.re2::WalkState"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.re2::WalkState"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.re2::WalkState"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.re2::WalkState"**
  %441 = inttoptr i64 %434 to %"struct.re2::WalkState"**
  %442 = icmp eq %"struct.re2::WalkState"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 -1
  %445 = ptrtoint %"struct.re2::WalkState"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %441, i64 %448
  store %"struct.re2::WalkState"** %449, %"struct.re2::WalkState"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #17
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #16
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.re2::WalkState"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.79"* nonnull %4, %"struct.re2::WalkState"** dereferenceable(8) %457)
  %458 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %167, align 8
  %459 = icmp eq %"struct.re2::WalkState"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  %9 = bitcast %"struct.re2::WalkState"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  %15 = icmp ugt %"struct.re2::WalkState"** %12, %14
  %16 = ptrtoint %"struct.re2::WalkState"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %12, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.re2::WalkState"** %23 to i8*
  %30 = bitcast %"struct.re2::WalkState"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #16
  %31 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.re2::WalkState"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %26
  store %"struct.re2::WalkState"** %34, %"struct.re2::WalkState"*** %3, align 8
  %35 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %33, i64 %22
  store %"struct.re2::WalkState"** %35, %"struct.re2::WalkState"*** %11, align 8
  %36 = bitcast %"struct.re2::WalkState"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.re2::WalkState"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #18
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #17
  %50 = bitcast i8* %49 to %"struct.re2::WalkState"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %47
  %53 = ptrtoint %"struct.re2::WalkState"** %52 to i64
  %54 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %50, i64 %43
  %55 = ptrtoint %"struct.re2::WalkState"** %54 to i64
  %56 = ptrtoint %"struct.re2::WalkState"** %12 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.re2::WalkState"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.re2::WalkState"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.re2::WalkState"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %69, i64 1
  %77 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  %78 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !15

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.re2::WalkState"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.re2::WalkState"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.re2::WalkState"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.re2::WalkState"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.re2::WalkState"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.re2::WalkState"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 1
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 1
  %97 = bitcast %"struct.re2::WalkState"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.re2::WalkState"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 2
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 2
  %102 = bitcast %"struct.re2::WalkState"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.re2::WalkState"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 3
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 3
  %107 = bitcast %"struct.re2::WalkState"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.re2::WalkState"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 4
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 4
  %112 = bitcast %"struct.re2::WalkState"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.re2::WalkState"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 5
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 5
  %117 = bitcast %"struct.re2::WalkState"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.re2::WalkState"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 6
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 6
  %122 = bitcast %"struct.re2::WalkState"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.re2::WalkState"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 7
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 7
  %127 = bitcast %"struct.re2::WalkState"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.re2::WalkState"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %89, i64 8
  %131 = ptrtoint %"struct.re2::WalkState"** %130 to i64
  %132 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %91, i64 8
  %133 = icmp eq %"struct.re2::WalkState"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.re2::WalkState"** %60 to i64
  %136 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.re2::WalkState"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.re2::WalkState"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.re2::WalkState"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.re2::WalkState"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = bitcast %"struct.re2::WalkState"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %153 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %152, i64 1
  store %"struct.re2::WalkState"** %153, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #18
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #17
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !16

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3re29WalkStateINS1_4FragEEERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.79"*, %"struct.re2::WalkState"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %0, i64 0, i32 1
  %4 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %0, i64 0, i32 0
  %6 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  %7 = icmp eq %"struct.re2::WalkState"** %4, %6
  %8 = ptrtoint %"struct.re2::WalkState"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %0, i64 0, i32 2
  %11 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.79", %"struct.std::__1::__split_buffer.79"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %12, align 8
  %14 = icmp ult %"struct.re2::WalkState"** %11, %13
  %15 = bitcast %"struct.re2::WalkState"*** %12 to i64*
  %16 = ptrtoint %"struct.re2::WalkState"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %11, i64 %22
  %24 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %23, i64 %29
  %31 = bitcast %"struct.re2::WalkState"** %30 to i8*
  %32 = bitcast %"struct.re2::WalkState"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.re2::WalkState"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.re2::WalkState"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.re2::WalkState"** %36, %"struct.re2::WalkState"*** %3, align 8
  %37 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %35, i64 %22
  store %"struct.re2::WalkState"** %37, %"struct.re2::WalkState"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.79"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #18
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #17
  %51 = bitcast i8* %50 to %"struct.re2::WalkState"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %48
  %54 = ptrtoint %"struct.re2::WalkState"** %53 to i64
  %55 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %51, i64 %43
  %56 = ptrtoint %"struct.re2::WalkState"** %55 to i64
  %57 = ptrtoint %"struct.re2::WalkState"** %4 to i64
  %58 = ptrtoint %"struct.re2::WalkState"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.re2::WalkState"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.re2::WalkState"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.re2::WalkState"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %70, i64 1
  %78 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  %79 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !17

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.re2::WalkState"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.re2::WalkState"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.re2::WalkState"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.re2::WalkState"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.re2::WalkState"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.re2::WalkState"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 1
  %97 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 1
  %98 = bitcast %"struct.re2::WalkState"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.re2::WalkState"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 2
  %102 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 2
  %103 = bitcast %"struct.re2::WalkState"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.re2::WalkState"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 3
  %107 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 3
  %108 = bitcast %"struct.re2::WalkState"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.re2::WalkState"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 4
  %112 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 4
  %113 = bitcast %"struct.re2::WalkState"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.re2::WalkState"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 5
  %117 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 5
  %118 = bitcast %"struct.re2::WalkState"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.re2::WalkState"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 6
  %122 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 6
  %123 = bitcast %"struct.re2::WalkState"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.re2::WalkState"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 7
  %127 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 7
  %128 = bitcast %"struct.re2::WalkState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.re2::WalkState"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %90, i64 8
  %132 = ptrtoint %"struct.re2::WalkState"** %131 to i64
  %133 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %92, i64 8
  %134 = icmp eq %"struct.re2::WalkState"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.re2::WalkState"** %61 to i64
  %137 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.re2::WalkState"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.re2::WalkState"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.re2::WalkState"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.re2::WalkState"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.re2::WalkState"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  %146 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.re2::WalkState"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %148, i64 -1
  %150 = bitcast %"struct.re2::WalkState"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.re2::WalkState"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.re2::WalkState"**, %"struct.re2::WalkState"*** %3, align 8
  %154 = getelementptr inbounds %"struct.re2::WalkState"*, %"struct.re2::WalkState"** %153, i64 -1
  store %"struct.re2::WalkState"** %154, %"struct.re2::WalkState"*** %3, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { cold nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeImiEENS_22__unordered_map_hasherImS2_NS_4hashImEENS_8equal_toImEELb1EEENS_21__unordered_map_equalImS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKmEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !4}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !4}
!14 = distinct !{!14, !4}
!15 = distinct !{!15, !4}
!16 = distinct !{!16, !4}
!17 = distinct !{!17, !4}
