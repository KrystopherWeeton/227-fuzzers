; ModuleID = '../../chrome/browser/ui/tabs/tab_renderer_data.cc'
source_filename = "../../chrome/browser/ui/tabs/tab_renderer_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TabRendererData = type <{ %"class.gfx::ImageSkia", %class.scoped_refptr.84, i32, [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, i32, i8, i8, i8, i8, %"class.std::__1::vector.115", i8, i8, i8, [5 x i8] }>
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%class.scoped_refptr.84 = type { %class.ThumbnailImage* }
%class.ThumbnailImage = type { i32 (...)**, %"class.base::RefCounted", %"class.ThumbnailImage::Delegate"*, %class.scoped_refptr.85, %"class.base::Token", %"class.std::__1::vector.86", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.93" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ThumbnailImage::Delegate" = type { i32 (...)**, %class.ThumbnailImage* }
%class.scoped_refptr.85 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.ThumbnailImage::Subscription"**, %"class.ThumbnailImage::Subscription"**, %"class.std::__1::__compressed_pair.88" }
%"class.ThumbnailImage::Subscription" = type { %class.scoped_refptr.84, %"class.absl::optional.122", %"class.base::RepeatingCallback.127", %"class.base::RepeatingCallback.128" }
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RepeatingCallback.127" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.81", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.128" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.ThumbnailImage::Subscription"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.93" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.79 }
%class.scoped_refptr.79 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.96 }
%union.anon.96 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.100", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.109" }
%"class.std::__1::basic_string.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.103 }
%union.anon.103 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GURL* }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { i32*, i32*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i32* }
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector", %"class.std::__1::unique_ptr.1", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList", %class.Profile*, i8, %"class.std::__1::unique_ptr.55", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.82" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.TabGroupModel* }
%class.TabGroupModel = type opaque
%class.TabStripModelDelegate = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.5", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.26", i8, i8, i32, %"class.base::ObserverList.32", %"class.std::__1::unique_ptr.49" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.20" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList.32" = type <{ %"class.std::__1::vector.33", %"class.base::LinkedList.46", i64, i32, [4 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.41" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.46" = type { %"class.base::LinkNode.47" }
%"class.base::LinkNode.47" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.TabStripModelOrderController* }
%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.70" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { i32*, i32*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.77, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.77 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.78" }>
%"class.base::RefCountedThreadSafe.78" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.82" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gfx::Image" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%class.TabUIHelper = type { %"class.content::WebContentsObserver", %"class.content::WebContentsUserData", i8, i8, i8, %"class.std::__1::unique_ptr.129", %"class.base::CancelableTaskTracker", %"class.base::WeakPtrFactory.152" }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.content::WebContentsUserData" = type { %"class.base::SupportsUserData::Data" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.TabUIHelper::TabUIData"* }
%"struct.TabUIHelper::TabUIData" = type { %"class.std::__1::basic_string", %"class.gfx::Image" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr.150", %"class.base::WeakPtrFactory.151" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.136 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.136 = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr.137 }
%class.scoped_refptr.137 = type { %"class.base::RefCountedData.138"* }
%"class.base::RefCountedData.138" = type opaque
%"class.base::WeakPtr.150" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.151" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.152" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.content::NavigationController" = type { i32 (...)** }
%"class.content::NavigationEntry" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.104 }
%struct.anon.104 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorI13TabAlertStateNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZN7content24kChromeUIUntrustedSchemeE = external constant [0 x i8], align 1
@_ZN7content15kChromeUISchemeE = external constant [0 x i8], align 1
@_ZN6chrome23kChromeUINewTabPageHostE = external constant [0 x i8], align 1
@_ZN6chrome19kChromeUINewTabHostE = external constant [0 x i8], align 1
@_ZN6chrome28kChromeUIAppLauncherPageHostE = external constant [0 x i8], align 1
@_ZN6chrome17kChromeUIHelpHostE = external constant [0 x i8], align 1
@_ZN6chrome20kChromeUIVersionHostE = external constant [0 x i8], align 1
@_ZN6chrome22kChromeUINetExportHostE = external constant [0 x i8], align 1
@_ZN11TabUIHelper12kUserDataKeyE = external constant i32, align 4
@_ZN18ThumbnailTabHelper12kUserDataKeyE = external constant i32, align 4

@_ZN15TabRendererDataC1Ev = hidden unnamed_addr alias void (%struct.TabRendererData*), void (%struct.TabRendererData*)* @_ZN15TabRendererDataC2Ev
@_ZN15TabRendererDataC1ERKS_ = hidden unnamed_addr alias void (%struct.TabRendererData*, %struct.TabRendererData*), void (%struct.TabRendererData*, %struct.TabRendererData*)* @_ZN15TabRendererDataC2ERKS_
@_ZN15TabRendererDataC1EOS_ = hidden unnamed_addr alias void (%struct.TabRendererData*, %struct.TabRendererData*), void (%struct.TabRendererData*, %struct.TabRendererData*)* @_ZN15TabRendererDataC2EOS_
@_ZN15TabRendererDataD1Ev = hidden unnamed_addr alias void (%struct.TabRendererData*), void (%struct.TabRendererData*)* @_ZN15TabRendererDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TabRendererData14FromTabInModelEP13TabStripModeli(%struct.TabRendererData* noalias sret, %class.TabStripModel*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = alloca %"class.gfx::Image", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.115", align 16
  %8 = bitcast %class.TabStripModel* %1 to %"class.content::WebContents"* (%class.TabStripModel*, i32)***
  %9 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)**, %"class.content::WebContents"* (%class.TabStripModel*, i32)*** %8, align 8
  %10 = getelementptr inbounds %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %9, i64 7
  %11 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %10, align 8
  %12 = tail call %"class.content::WebContents"* %11(%class.TabStripModel* %1, i32 %2) #11
  %13 = bitcast %struct.TabRendererData* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 328, i1 false)
  %14 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %14) #11
  %15 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1, i32 0
  store %class.ThumbnailImage* null, %class.ThumbnailImage** %15, align 8
  %16 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11
  %19 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1Ev(%class.GURL* %19) #11
  %20 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  tail call void @_ZN4GURLC1Ev(%class.GURL* %20) #11
  %21 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  store i32 4, i32* %21, align 8
  %22 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 8
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 9
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 10
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %24, i8 0, i64 29, i1 false) #11
  %25 = getelementptr inbounds %"class.content::WebContents", %"class.content::WebContents"* %12, i64 0, i32 1
  %26 = bitcast %"class.base::SupportsUserData.base"* %25 to %"class.base::SupportsUserData"*
  %27 = tail call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* %26, i8* bitcast (i32* @_ZN11TabUIHelper12kUserDataKeyE to i8*)) #11
  %28 = icmp eq %"class.base::SupportsUserData::Data"* %27, null
  %29 = getelementptr inbounds %"class.base::SupportsUserData::Data", %"class.base::SupportsUserData::Data"* %27, i64 -2
  %30 = bitcast %"class.base::SupportsUserData::Data"* %29 to %class.TabUIHelper*
  %31 = select i1 %28, %class.TabUIHelper* null, %class.TabUIHelper* %30
  %32 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = bitcast %"class.gfx::Image"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNK11TabUIHelper10GetFaviconEv(%"class.gfx::Image"* nonnull sret %5, %class.TabUIHelper* %31) #11
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* nonnull %5) #11
  %34 = call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %14, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #11
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #11
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %35 = call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* %26, i8* bitcast (i32* @_ZN18ThumbnailTabHelper12kUserDataKeyE to i8*)) #11
  %36 = icmp eq %"class.base::SupportsUserData::Data"* %35, null
  br i1 %36, label %64, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.base::SupportsUserData::Data", %"class.base::SupportsUserData::Data"* %35, i64 11
  %39 = bitcast %"class.base::SupportsUserData::Data"* %38 to %class.ThumbnailImage**
  %40 = load %class.ThumbnailImage*, %class.ThumbnailImage** %39, align 8
  %41 = icmp eq %class.ThumbnailImage* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %40, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %43) #11
  br label %44

44:                                               ; preds = %37, %42
  %45 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1
  %46 = ptrtoint %class.ThumbnailImage* %40 to i64
  %47 = bitcast %class.scoped_refptr.84* %45 to i64*
  %48 = getelementptr inbounds %class.scoped_refptr.84, %class.scoped_refptr.84* %45, i64 0, i32 0
  %49 = load %class.ThumbnailImage*, %class.ThumbnailImage** %48, align 8
  store i64 %46, i64* %47, align 8
  %50 = icmp eq %class.ThumbnailImage* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %49, i64 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #11
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %52, i64 -2
  %59 = bitcast %"class.base::RefCounted"* %58 to %class.ThumbnailImage*
  %60 = bitcast %"class.base::RefCounted"* %58 to void (%class.ThumbnailImage*)***
  %61 = load void (%class.ThumbnailImage*)**, void (%class.ThumbnailImage*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %61, i64 1
  %63 = load void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %62, align 8
  call void %63(%class.ThumbnailImage* nonnull %59) #11
  br label %64

64:                                               ; preds = %57, %51, %44, %3
  %65 = call i32 @_Z29TabNetworkStateForWebContentsPN7content11WebContentsE(%"class.content::WebContents"* %12) #11
  store i32 %65, i32* %16, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  call void @_ZNK11TabUIHelper8GetTitleEv(%"class.std::__1::basic_string"* nonnull sret %6, %class.TabUIHelper* %31) #11
  %67 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::basic_string"* %17 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %71, %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %66, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %75 = bitcast %"class.content::WebContents"* %12 to %class.GURL* (%"class.content::WebContents"*)***
  %76 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %75, align 8
  %77 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %76, i64 8
  %78 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %77, align 8
  %79 = call dereferenceable(120) %class.GURL* %78(%"class.content::WebContents"* %12) #11
  %80 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %19, %class.GURL* dereferenceable(120) %79) #11
  %81 = load i8, i8* %68, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %74
  %84 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  br label %88

86:                                               ; preds = %74
  %87 = zext i8 %81 to i64
  br label %88

88:                                               ; preds = %83, %86
  %89 = phi i64 [ %85, %83 ], [ %87, %86 ]
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %88
  %92 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content24kChromeUIUntrustedSchemeE, i64 0, i64 0)) #11
  %93 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %19, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content24kChromeUIUntrustedSchemeE, i64 0, i64 0), i64 %92) #11
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 14
  store i8 1, i8* %95, align 1
  br label %96

96:                                               ; preds = %88, %94, %91
  %97 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %75, align 8
  %98 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %97, i64 9
  %99 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %98, align 8
  %100 = call dereferenceable(120) %class.GURL* %99(%"class.content::WebContents"* %12) #11
  %101 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %20, %class.GURL* dereferenceable(120) %100) #11
  %102 = bitcast %"class.content::WebContents"* %12 to i32 (%"class.content::WebContents"*)***
  %103 = load i32 (%"class.content::WebContents"*)**, i32 (%"class.content::WebContents"*)*** %102, align 8
  %104 = getelementptr inbounds i32 (%"class.content::WebContents"*)*, i32 (%"class.content::WebContents"*)** %103, i64 67
  %105 = load i32 (%"class.content::WebContents"*)*, i32 (%"class.content::WebContents"*)** %104, align 8
  %106 = call i32 %105(%"class.content::WebContents"* %12) #11
  store i32 %106, i32* %21, align 8
  %107 = bitcast %"class.content::WebContents"* %12 to %"class.content::BrowserContext"* (%"class.content::WebContents"*)***
  %108 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)**, %"class.content::BrowserContext"* (%"class.content::WebContents"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %108, i64 6
  %110 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %109, align 8
  %111 = call %"class.content::BrowserContext"* %110(%"class.content::WebContents"* %12) #11
  %112 = bitcast %"class.content::BrowserContext"* %111 to i1 (%"class.content::BrowserContext"*)***
  %113 = load i1 (%"class.content::BrowserContext"*)**, i1 (%"class.content::BrowserContext"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %113, i64 7
  %115 = load i1 (%"class.content::BrowserContext"*)*, i1 (%"class.content::BrowserContext"*)** %114, align 8
  %116 = call zeroext i1 %115(%"class.content::BrowserContext"* %111) #11
  %117 = zext i1 %116 to i8
  store i8 %117, i8* %22, align 4
  %118 = call zeroext i1 @_ZNK13TabStripModel11IsTabPinnedEi(%class.TabStripModel* %1, i32 %2) #11
  %119 = zext i1 %118 to i8
  store i8 %119, i8* %24, align 2
  br i1 %118, label %129, label %120

120:                                              ; preds = %96
  %121 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %1, i64 0, i32 3
  %122 = load %class.TabStripModelDelegate*, %class.TabStripModelDelegate** %121, align 8
  %123 = bitcast %class.TabStripModelDelegate* %122 to i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)***
  %124 = load i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)**, i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)*, i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)** %124, i64 19
  %126 = load i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)*, i1 (%class.TabStripModelDelegate*, %"class.content::WebContents"*)** %125, align 8
  %127 = call zeroext i1 %126(%class.TabStripModelDelegate* %122, %"class.content::WebContents"* %12) #11
  %128 = zext i1 %127 to i8
  br label %129

129:                                              ; preds = %120, %96
  %130 = phi i8 [ 1, %96 ], [ %128, %120 ]
  store i8 %130, i8* %23, align 1
  %131 = call zeroext i1 @_ZNK13TabStripModel12IsTabBlockedEi(%class.TabStripModel* %1, i32 %2) #11
  %132 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 11
  %133 = zext i1 %131 to i8
  store i8 %133, i8* %132, align 1
  %134 = call zeroext i1 @_ZNK11TabUIHelper18ShouldHideThrobberEv(%class.TabUIHelper* %31) #11
  %135 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %136 = zext i1 %134 to i8
  store i8 %136, i8* %135, align 8
  %137 = bitcast %"class.std::__1::vector.115"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #11
  call void @_ZN6chrome28GetTabAlertStatesForContentsEPN7content11WebContentsE(%"class.std::__1::vector.115"* nonnull sret %7, %"class.content::WebContents"* %12) #11
  %138 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %139 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %138, i64 0, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %129
  %143 = ptrtoint i32* %140 to i64
  %144 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast i32* %140 to i8*
  call void @_ZdlPv(i8* %146) #12
  %147 = bitcast %"class.std::__1::vector.115"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #11
  br label %148

148:                                              ; preds = %129, %142
  %149 = bitcast %"class.std::__1::vector.115"* %7 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 16
  %151 = bitcast %"class.std::__1::vector.115"* %138 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast i32** %152 to i64*
  %154 = load i64, i64* %153, align 16
  %155 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #11
  %157 = bitcast %"class.content::WebContents"* %12 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %158 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %158, i64 5
  %160 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %159, align 8
  %161 = call dereferenceable(8) %"class.content::NavigationController"* %160(%"class.content::WebContents"* %12) #11
  %162 = bitcast %"class.content::NavigationController"* %161 to %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)***
  %163 = load %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)**, %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)*, %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)** %163, i64 8
  %165 = load %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)*, %"class.content::NavigationEntry"* (%"class.content::NavigationController"*)** %164, align 8
  %166 = call %"class.content::NavigationEntry"* %165(%"class.content::NavigationController"* %161) #11
  %167 = icmp eq %"class.content::NavigationEntry"* %166, null
  br i1 %167, label %225, label %168

168:                                              ; preds = %148
  %169 = bitcast %"class.content::NavigationEntry"* %166 to %class.GURL* (%"class.content::NavigationEntry"*)***
  %170 = load %class.GURL* (%"class.content::NavigationEntry"*)**, %class.GURL* (%"class.content::NavigationEntry"*)*** %169, align 8
  %171 = getelementptr inbounds %class.GURL* (%"class.content::NavigationEntry"*)*, %class.GURL* (%"class.content::NavigationEntry"*)** %170, i64 5
  %172 = load %class.GURL* (%"class.content::NavigationEntry"*)*, %class.GURL* (%"class.content::NavigationEntry"*)** %171, align 8
  %173 = call dereferenceable(120) %class.GURL* %172(%"class.content::NavigationEntry"* nonnull %166) #11
  %174 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0)) #11
  %175 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %173, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0), i64 %174) #11
  br i1 %175, label %176, label %225

176:                                              ; preds = %168
  %177 = getelementptr inbounds %class.GURL, %class.GURL* %173, i64 0, i32 2, i32 3, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp slt i32 %178, 1
  br i1 %179, label %194, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %class.GURL, %class.GURL* %173, i64 0, i32 2, i32 3, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = bitcast %class.GURL* %173 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %class.GURL, %class.GURL* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %class.GURL* %173 to i8*
  %191 = select i1 %187, i8* %189, i8* %190
  %192 = getelementptr inbounds i8, i8* %191, i64 %183
  %193 = sext i32 %178 to i64
  br label %194

194:                                              ; preds = %180, %176
  %195 = phi i8* [ %192, %180 ], [ null, %176 ]
  %196 = phi i64 [ %193, %180 ], [ 0, %176 ]
  %197 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome23kChromeUINewTabPageHostE, i64 0, i64 0)) #11
  %198 = icmp eq i64 %196, %197
  br i1 %198, label %199, label %202

199:                                              ; preds = %194
  %200 = call i32 @bcmp(i8* %195, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome23kChromeUINewTabPageHostE, i64 0, i64 0), i64 %196) #11
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %351, label %202

202:                                              ; preds = %199, %194
  br i1 %179, label %217, label %203

203:                                              ; preds = %202
  %204 = getelementptr inbounds %class.GURL, %class.GURL* %173, i64 0, i32 2, i32 3, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = sext i32 %205 to i64
  %207 = bitcast %class.GURL* %173 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  %211 = getelementptr inbounds %class.GURL, %class.GURL* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = bitcast %class.GURL* %173 to i8*
  %214 = select i1 %210, i8* %212, i8* %213
  %215 = getelementptr inbounds i8, i8* %214, i64 %206
  %216 = sext i32 %178 to i64
  br label %217

217:                                              ; preds = %203, %202
  %218 = phi i8* [ %215, %203 ], [ null, %202 ]
  %219 = phi i64 [ %216, %203 ], [ 0, %202 ]
  %220 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome19kChromeUINewTabHostE, i64 0, i64 0)) #11
  %221 = icmp eq i64 %219, %220
  br i1 %221, label %222, label %225

222:                                              ; preds = %217
  %223 = call i32 @bcmp(i8* %218, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome19kChromeUINewTabHostE, i64 0, i64 0), i64 %219) #11
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %351, label %225

225:                                              ; preds = %217, %168, %148, %222
  %226 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %75, align 8
  %227 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %226, i64 8
  %228 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %227, align 8
  %229 = call dereferenceable(120) %class.GURL* %228(%"class.content::WebContents"* %12) #11
  %230 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0)) #11
  %231 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %229, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7content15kChromeUISchemeE, i64 0, i64 0), i64 %230) #11
  br i1 %231, label %232, label %351

232:                                              ; preds = %225
  %233 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = icmp slt i32 %234, 1
  br i1 %235, label %250, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = sext i32 %238 to i64
  %240 = bitcast %class.GURL* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  %244 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = bitcast %class.GURL* %229 to i8*
  %247 = select i1 %243, i8* %245, i8* %246
  %248 = getelementptr inbounds i8, i8* %247, i64 %239
  %249 = sext i32 %234 to i64
  br label %250

250:                                              ; preds = %236, %232
  %251 = phi i8* [ %248, %236 ], [ null, %232 ]
  %252 = phi i64 [ %249, %236 ], [ 0, %232 ]
  %253 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome28kChromeUIAppLauncherPageHostE, i64 0, i64 0)) #11
  %254 = icmp eq i64 %252, %253
  br i1 %254, label %255, label %258

255:                                              ; preds = %250
  %256 = call i32 @bcmp(i8* %251, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome28kChromeUIAppLauncherPageHostE, i64 0, i64 0), i64 %252) #11
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %351, label %258

258:                                              ; preds = %255, %250
  br i1 %235, label %273, label %259

259:                                              ; preds = %258
  %260 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = bitcast %class.GURL* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  %267 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = bitcast %class.GURL* %229 to i8*
  %270 = select i1 %266, i8* %268, i8* %269
  %271 = getelementptr inbounds i8, i8* %270, i64 %262
  %272 = sext i32 %234 to i64
  br label %273

273:                                              ; preds = %259, %258
  %274 = phi i8* [ %271, %259 ], [ null, %258 ]
  %275 = phi i64 [ %272, %259 ], [ 0, %258 ]
  %276 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUIHelpHostE, i64 0, i64 0)) #11
  %277 = icmp eq i64 %275, %276
  br i1 %277, label %278, label %281

278:                                              ; preds = %273
  %279 = call i32 @bcmp(i8* %274, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome17kChromeUIHelpHostE, i64 0, i64 0), i64 %275) #11
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %351, label %281

281:                                              ; preds = %278, %273
  br i1 %235, label %296, label %282

282:                                              ; preds = %281
  %283 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 0
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = bitcast %class.GURL* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %287 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %286, i64 0, i32 1, i32 0
  %288 = load i8, i8* %287, align 1
  %289 = icmp slt i8 %288, 0
  %290 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = bitcast %class.GURL* %229 to i8*
  %293 = select i1 %289, i8* %291, i8* %292
  %294 = getelementptr inbounds i8, i8* %293, i64 %285
  %295 = sext i32 %234 to i64
  br label %296

296:                                              ; preds = %282, %281
  %297 = phi i8* [ %294, %282 ], [ null, %281 ]
  %298 = phi i64 [ %295, %282 ], [ 0, %281 ]
  %299 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUIVersionHostE, i64 0, i64 0)) #11
  %300 = icmp eq i64 %298, %299
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = call i32 @bcmp(i8* %297, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome20kChromeUIVersionHostE, i64 0, i64 0), i64 %298) #11
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %351, label %304

304:                                              ; preds = %301, %296
  br i1 %235, label %319, label %305

305:                                              ; preds = %304
  %306 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = sext i32 %307 to i64
  %309 = bitcast %class.GURL* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = load i8, i8* %310, align 1
  %312 = icmp slt i8 %311, 0
  %313 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = bitcast %class.GURL* %229 to i8*
  %316 = select i1 %312, i8* %314, i8* %315
  %317 = getelementptr inbounds i8, i8* %316, i64 %308
  %318 = sext i32 %234 to i64
  br label %319

319:                                              ; preds = %305, %304
  %320 = phi i8* [ %317, %305 ], [ null, %304 ]
  %321 = phi i64 [ %318, %305 ], [ 0, %304 ]
  %322 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome22kChromeUINetExportHostE, i64 0, i64 0)) #11
  %323 = icmp eq i64 %321, %322
  br i1 %323, label %324, label %327

324:                                              ; preds = %319
  %325 = call i32 @bcmp(i8* %320, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome22kChromeUINetExportHostE, i64 0, i64 0), i64 %321) #11
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %351, label %327

327:                                              ; preds = %324, %319
  br i1 %235, label %342, label %328

328:                                              ; preds = %327
  %329 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 2, i32 3, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = sext i32 %330 to i64
  %332 = bitcast %class.GURL* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %333 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %332, i64 0, i32 1, i32 0
  %334 = load i8, i8* %333, align 1
  %335 = icmp slt i8 %334, 0
  %336 = getelementptr inbounds %class.GURL, %class.GURL* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = bitcast %class.GURL* %229 to i8*
  %339 = select i1 %335, i8* %337, i8* %338
  %340 = getelementptr inbounds i8, i8* %339, i64 %331
  %341 = sext i32 %234 to i64
  br label %342

342:                                              ; preds = %328, %327
  %343 = phi i8* [ %340, %328 ], [ null, %327 ]
  %344 = phi i64 [ %341, %328 ], [ 0, %327 ]
  %345 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome19kChromeUINewTabHostE, i64 0, i64 0)) #11
  %346 = icmp eq i64 %344, %345
  br i1 %346, label %347, label %351

347:                                              ; preds = %342
  %348 = call i32 @bcmp(i8* %343, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6chrome19kChromeUINewTabHostE, i64 0, i64 0), i64 %344) #11
  %349 = icmp ne i32 %348, 0
  %350 = zext i1 %349 to i8
  br label %351

351:                                              ; preds = %347, %342, %324, %301, %278, %255, %225, %199, %222
  %352 = phi i8 [ 1, %222 ], [ 1, %199 ], [ 0, %324 ], [ 0, %301 ], [ 0, %278 ], [ 0, %255 ], [ 0, %225 ], [ 1, %342 ], [ %350, %347 ]
  %353 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 15
  store i8 %352, i8* %353, align 2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK11TabUIHelper10GetFaviconEv(%"class.gfx::Image"* sret, %class.TabUIHelper*) local_unnamed_addr #2

declare void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* sret, %"class.gfx::Image"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_Z29TabNetworkStateForWebContentsPN7content11WebContentsE(%"class.content::WebContents"*) local_unnamed_addr #2

declare void @_ZNK11TabUIHelper8GetTitleEv(%"class.std::__1::basic_string"* sret, %class.TabUIHelper*) local_unnamed_addr #2

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK13TabStripModel11IsTabPinnedEi(%class.TabStripModel*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK13TabStripModel12IsTabBlockedEi(%class.TabStripModel*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK11TabUIHelper18ShouldHideThrobberEv(%class.TabUIHelper*) local_unnamed_addr #2

declare void @_ZN6chrome28GetTabAlertStatesForContentsEPN7content11WebContentsE(%"class.std::__1::vector.115"* sret, %"class.content::WebContents"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TabRendererDataC2Ev(%struct.TabRendererData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %2) #11
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1, i32 0
  store %class.ThumbnailImage* null, %class.ThumbnailImage** %3, align 8
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1Ev(%class.GURL* %7) #11
  %8 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  tail call void @_ZN4GURLC1Ev(%class.GURL* %8) #11
  %9 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  store i32 4, i32* %9, align 8
  %10 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 8
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 9
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 10
  call void @llvm.memset.p0i8.i64(i8* align 2 %12, i8 0, i64 29, i1 false)
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TabRendererDataC2ERKS_(%struct.TabRendererData*, %struct.TabRendererData* dereferenceable(328)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %4) #11
  %5 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 1, i32 0
  %6 = load %class.ThumbnailImage*, %class.ThumbnailImage** %5, align 8
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1, i32 0
  store %class.ThumbnailImage* %6, %class.ThumbnailImage** %7, align 8
  %8 = icmp eq %class.ThumbnailImage* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %6, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #11
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  %13 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %16 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #11
  br label %199

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %28, 11
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %32 = trunc i64 %28 to i8
  %33 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  store i8 %32, i8* %34, align 1
  br label %52

35:                                               ; preds = %24
  %36 = icmp ugt i64 %28, 9223372036854775791
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %38) #13
  unreachable

39:                                               ; preds = %35
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  %50 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %51, align 8
  br label %52

52:                                               ; preds = %44, %30
  %53 = phi i16* [ %31, %30 ], [ %47, %44 ]
  %54 = add nuw nsw i64 %28, 1
  %55 = add i64 %28, 1
  %56 = icmp ult i64 %55, 16
  br i1 %56, label %146, label %57

57:                                               ; preds = %52
  %58 = add i64 %28, 1
  %59 = getelementptr i16, i16* %53, i64 %58
  %60 = getelementptr i16, i16* %26, i64 %58
  %61 = icmp ult i16* %53, %60
  %62 = icmp ult i16* %26, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %57
  %65 = and i64 %55, -16
  %66 = sub i64 %54, %65
  %67 = getelementptr i16, i16* %26, i64 %65
  %68 = getelementptr i16, i16* %53, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %26, i64 %77
  %80 = getelementptr i16, i16* %53, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %26, i64 %89
  %91 = getelementptr i16, i16* %53, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %26, i64 %100
  %102 = getelementptr i16, i16* %53, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %26, i64 %111
  %113 = getelementptr i16, i16* %53, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !2
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !2
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !5, !noalias !2
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !5, !noalias !2
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !7

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %26, i64 %129
  %132 = getelementptr i16, i16* %53, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !9

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %55, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %57, %52
  %147 = phi i64 [ %54, %57 ], [ %54, %52 ], [ %66, %144 ]
  %148 = phi i16* [ %26, %57 ], [ %26, %52 ], [ %67, %144 ]
  %149 = phi i16* [ %53, %57 ], [ %53, %52 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !11

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !12

199:                                              ; preds = %164, %169, %144, %21
  %200 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  %201 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 5
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %200, %class.GURL* dereferenceable(120) %201) #11
  %202 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  %203 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 6
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %202, %class.GURL* dereferenceable(120) %203) #11
  %204 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %205 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 7
  %206 = bitcast i32* %205 to i64*
  %207 = bitcast i32* %204 to i64*
  %208 = load i64, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %210 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12
  %211 = bitcast %"class.std::__1::vector.115"* %209 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 24, i1 false) #11
  %212 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 1
  %213 = bitcast i32** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.std::__1::vector.115"* %210 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = sub i64 %214, %216
  %218 = ashr exact i64 %217, 2
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %247, label %220

220:                                              ; preds = %199
  %221 = icmp ugt i64 %218, 4611686018427387903
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = bitcast %"class.std::__1::vector.115"* %209 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %223) #13
  unreachable

224:                                              ; preds = %220
  %225 = tail call i8* @_Znwm(i64 %217) #12
  %226 = bitcast i8* %225 to i32*
  %227 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %228 = bitcast i32** %227 to i8**
  store i8* %225, i8** %228, align 8
  %229 = bitcast %"class.std::__1::vector.115"* %209 to i8**
  store i8* %225, i8** %229, align 8
  %230 = getelementptr inbounds i32, i32* %226, i64 %218
  %231 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store i32* %230, i32** %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %210, i64 0, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = load i64, i64* %213, align 8
  %235 = bitcast i32** %227 to i64*
  %236 = ptrtoint i8* %225 to i64
  %237 = ptrtoint i32* %233 to i64
  %238 = sub i64 %234, %237
  %239 = icmp sgt i64 %238, 0
  br i1 %239, label %240, label %245

240:                                              ; preds = %224
  %241 = lshr exact i64 %238, 2
  %242 = bitcast i32* %233 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %225, i8* align 4 %242, i64 %238, i1 false) #11
  %243 = getelementptr inbounds i32, i32* %226, i64 %241
  %244 = ptrtoint i32* %243 to i64
  br label %245

245:                                              ; preds = %240, %224
  %246 = phi i64 [ %244, %240 ], [ %236, %224 ]
  store i64 %246, i64* %235, align 8
  br label %247

247:                                              ; preds = %199, %245
  %248 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %249 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* align 8 %249, i64 3, i1 false)
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TabRendererDataC2EOS_(%struct.TabRendererData*, %struct.TabRendererData* dereferenceable(328)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 0
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %4) #11
  %5 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1
  %6 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 1
  %7 = getelementptr inbounds %class.scoped_refptr.84, %class.scoped_refptr.84* %6, i64 0, i32 0
  %8 = bitcast %class.scoped_refptr.84* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %class.scoped_refptr.84* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %class.ThumbnailImage* null, %class.ThumbnailImage** %7, align 8
  %11 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  %12 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %15 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  %19 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 5
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %18, %class.GURL* dereferenceable(120) %19) #11
  %20 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  %21 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 6
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %20, %class.GURL* dereferenceable(120) %21) #11
  %22 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %23 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 7
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %28 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12
  %29 = bitcast %"class.std::__1::vector.115"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  %30 = bitcast %"class.std::__1::vector.115"* %28 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.115"* %27 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i32** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.std::__1::vector.115"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #11
  %44 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %45 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 3, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(328) %struct.TabRendererData* @_ZN15TabRendererDataaSERKS_(%struct.TabRendererData* returned, %struct.TabRendererData* dereferenceable(328)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %4) #11
  %6 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 1, i32 0
  %8 = load %class.ThumbnailImage*, %class.ThumbnailImage** %7, align 8
  %9 = icmp eq %class.ThumbnailImage* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %8, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #11
  br label %12

12:                                               ; preds = %2, %10
  %13 = ptrtoint %class.ThumbnailImage* %8 to i64
  %14 = bitcast %class.scoped_refptr.84* %6 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr.84, %class.scoped_refptr.84* %6, i64 0, i32 0
  %16 = load %class.ThumbnailImage*, %class.ThumbnailImage** %15, align 8
  store i64 %13, i64* %14, align 8
  %17 = icmp eq %class.ThumbnailImage* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #11
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %19, i64 -2
  %26 = bitcast %"class.base::RefCounted"* %25 to %class.ThumbnailImage*
  %27 = bitcast %"class.base::RefCounted"* %25 to void (%class.ThumbnailImage*)***
  %28 = load void (%class.ThumbnailImage*)**, void (%class.ThumbnailImage*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %28, i64 1
  %30 = load void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %29, align 8
  tail call void %30(%class.ThumbnailImage* nonnull %26) #11
  br label %31

31:                                               ; preds = %12, %18, %24
  %32 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %36 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"* dereferenceable(24) %36)
  %38 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  %39 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 5
  %40 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %39) #11
  %41 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  %42 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 6
  %43 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %41, %class.GURL* dereferenceable(120) %42) #11
  %44 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %45 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 7
  %46 = bitcast i32* %45 to i64*
  %47 = bitcast i32* %44 to i64*
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = icmp eq %struct.TabRendererData* %0, %1
  br i1 %49, label %56, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %52 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  tail call void @_ZNSt3__16vectorI13TabAlertStateNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.115"* %51, i32* %53, i32* %55) #11
  br label %56

56:                                               ; preds = %31, %50
  %57 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %58 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 3, i1 false)
  ret %struct.TabRendererData* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !13
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !13
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !16, !noalias !13
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !16, !noalias !13
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !13
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !13
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !16, !noalias !13
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !16, !noalias !13
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !13
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !13
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !16, !noalias !13
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !16, !noalias !13
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !13
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !13
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !16, !noalias !13
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !16, !noalias !13
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !18

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !13
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !13
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !16, !noalias !13
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !16, !noalias !13
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !19

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !20

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !21

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !22
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !22
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !25, !noalias !22
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !25, !noalias !22
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !22
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !22
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !25, !noalias !22
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !25, !noalias !22
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !22
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !22
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !25, !noalias !22
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !25, !noalias !22
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !22
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !22
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !25, !noalias !22
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !25, !noalias !22
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !27

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !22
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !22
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !25, !noalias !22
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !25, !noalias !22
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !28

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !29

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !30

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !31
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !31
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !34, !noalias !31
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !34, !noalias !31
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !31
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !31
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !34, !noalias !31
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !34, !noalias !31
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !31
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !31
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !34, !noalias !31
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !34, !noalias !31
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !31
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !31
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !34, !noalias !31
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !34, !noalias !31
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !36

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !31
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !31
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !34, !noalias !31
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !34, !noalias !31
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !37

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !38

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !39

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(328) %struct.TabRendererData* @_ZN15TabRendererDataaSEOS_(%struct.TabRendererData* returned, %struct.TabRendererData* dereferenceable(328)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.gfx::ImageSkia"* @_ZN3gfx9ImageSkiaaSERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %4) #11
  %6 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 1
  %8 = getelementptr inbounds %class.scoped_refptr.84, %class.scoped_refptr.84* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr.84* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.ThumbnailImage* null, %class.ThumbnailImage** %8, align 8
  %11 = bitcast %class.scoped_refptr.84* %6 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.84, %class.scoped_refptr.84* %6, i64 0, i32 0
  %13 = load %class.ThumbnailImage*, %class.ThumbnailImage** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %class.ThumbnailImage* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #11
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 -2
  %23 = bitcast %"class.base::RefCounted"* %22 to %class.ThumbnailImage*
  %24 = bitcast %"class.base::RefCounted"* %22 to void (%class.ThumbnailImage*)***
  %25 = load void (%class.ThumbnailImage*)**, void (%class.ThumbnailImage*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %25, i64 1
  %27 = load void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %26, align 8
  tail call void %27(%class.ThumbnailImage* nonnull %23) #11
  br label %28

28:                                               ; preds = %2, %15, %21
  %29 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %33 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4
  %34 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %28, %38
  %42 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  %44 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  store i8 0, i8* %45, align 1
  %46 = bitcast %"class.std::__1::basic_string"* %33 to i16*
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  %48 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 5
  %49 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %47, %class.GURL* dereferenceable(120) %48) #11
  %50 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  %51 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 6
  %52 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %50, %class.GURL* dereferenceable(120) %51) #11
  %53 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %54 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 7
  %55 = bitcast i32* %54 to i64*
  %56 = bitcast i32* %53 to i64*
  %57 = load i64, i64* %55, align 8
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %59 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12
  %60 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %58, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %41
  %64 = ptrtoint i32* %61 to i64
  %65 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast i32* %61 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  %68 = bitcast %"class.std::__1::vector.115"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11
  br label %69

69:                                               ; preds = %41, %63
  %70 = bitcast %"class.std::__1::vector.115"* %59 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.115"* %58 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 1
  %74 = bitcast i32** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %77 = bitcast i32** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast i32** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast i32** %81 to i64*
  store i64 %80, i64* %82, align 8
  %83 = bitcast %"class.std::__1::vector.115"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #11
  %84 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %85 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 3, i1 false)
  ret %struct.TabRendererData* %0
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15TabRendererDataD2Ev(%struct.TabRendererData*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #11
  %12 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #11
  %13 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %10, %18
  %22 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1, i32 0
  %23 = load %class.ThumbnailImage*, %class.ThumbnailImage** %22, align 8
  %24 = icmp eq %class.ThumbnailImage* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.ThumbnailImage, %class.ThumbnailImage* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #11
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %26, i64 -2
  %33 = bitcast %"class.base::RefCounted"* %32 to %class.ThumbnailImage*
  %34 = bitcast %"class.base::RefCounted"* %32 to void (%class.ThumbnailImage*)***
  %35 = load void (%class.ThumbnailImage*)**, void (%class.ThumbnailImage*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %35, i64 1
  %37 = load void (%class.ThumbnailImage*)*, void (%class.ThumbnailImage*)** %36, align 8
  tail call void %37(%class.ThumbnailImage* nonnull %33) #11
  br label %38

38:                                               ; preds = %21, %25, %31
  %39 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %39) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15TabRendererDataeqERKS_(%struct.TabRendererData*, %struct.TabRendererData* dereferenceable(328)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3gfx9ImageSkia20BackedBySameObjectAsERKS0_(%"class.gfx::ImageSkia"* %3, %"class.gfx::ImageSkia"* dereferenceable(8) %4) #11
  br i1 %5, label %6, label %137

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 1, i32 0
  %8 = load %class.ThumbnailImage*, %class.ThumbnailImage** %7, align 8
  %9 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 1, i32 0
  %10 = load %class.ThumbnailImage*, %class.ThumbnailImage** %9, align 8
  %11 = icmp eq %class.ThumbnailImage* %8, %10
  br i1 %11, label %12, label %137

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %137

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4
  %20 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4
  %21 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp eq i64 %28, %36
  br i1 %37, label %38, label %137

38:                                               ; preds = %18
  %39 = icmp eq i64 %28, 0
  br i1 %39, label %61, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  %44 = select i1 %32, i16* %42, i16* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  %48 = select i1 %24, i16* %46, i16* %47
  br label %49

49:                                               ; preds = %56, %40
  %50 = phi i64 [ %57, %56 ], [ %28, %40 ]
  %51 = phi i16* [ %59, %56 ], [ %44, %40 ]
  %52 = phi i16* [ %58, %56 ], [ %48, %40 ]
  %53 = load i16, i16* %52, align 2
  %54 = load i16, i16* %51, align 2
  %55 = icmp eq i16 %54, %53
  br i1 %55, label %56, label %137

56:                                               ; preds = %49
  %57 = add i64 %50, -1
  %58 = getelementptr inbounds i16, i16* %52, i64 1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %61, label %49

61:                                               ; preds = %56, %38
  %62 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 5
  %63 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 5
  %64 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %62, %class.GURL* dereferenceable(120) %63) #11
  br i1 %64, label %65, label %137

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 6
  %67 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 6
  %68 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %66, %class.GURL* dereferenceable(120) %67) #11
  br i1 %68, label %69, label %137

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 7
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %137

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 8
  %77 = load i8, i8* %76, align 4, !range !40
  %78 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 8
  %79 = load i8, i8* %78, align 4, !range !40
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %81, label %137

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 9
  %83 = load i8, i8* %82, align 1, !range !40
  %84 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 9
  %85 = load i8, i8* %84, align 1, !range !40
  %86 = icmp eq i8 %83, %85
  br i1 %86, label %87, label %137

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 10
  %89 = load i8, i8* %88, align 2, !range !40
  %90 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 10
  %91 = load i8, i8* %90, align 2, !range !40
  %92 = icmp eq i8 %89, %91
  br i1 %92, label %93, label %137

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 11
  %95 = load i8, i8* %94, align 1, !range !40
  %96 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 11
  %97 = load i8, i8* %96, align 1, !range !40
  %98 = icmp eq i8 %95, %97
  br i1 %98, label %99, label %137

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12
  %101 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12
  %102 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 12, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector.115"* %100 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 12, i32 0, i32 1
  %109 = bitcast i32** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::vector.115"* %101 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %110, %112
  %114 = icmp eq i64 %107, %113
  %115 = inttoptr i64 %106 to i32*
  %116 = inttoptr i64 %104 to i32*
  br i1 %114, label %117, label %137

117:                                              ; preds = %99
  %118 = icmp eq i32* %115, %116
  br i1 %118, label %131, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %112 to i32*
  br label %121

121:                                              ; preds = %119, %127
  %122 = phi i32* [ %129, %127 ], [ %120, %119 ]
  %123 = phi i32* [ %128, %127 ], [ %115, %119 ]
  %124 = load i32, i32* %123, align 4
  %125 = load i32, i32* %122, align 4
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %127, label %137

127:                                              ; preds = %121
  %128 = getelementptr inbounds i32, i32* %123, i64 1
  %129 = getelementptr inbounds i32, i32* %122, i64 1
  %130 = icmp eq i32* %128, %116
  br i1 %130, label %131, label %121

131:                                              ; preds = %127, %117
  %132 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 13
  %133 = load i8, i8* %132, align 8, !range !40
  %134 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %1, i64 0, i32 13
  %135 = load i8, i8* %134, align 8, !range !40
  %136 = icmp eq i8 %133, %135
  br label %137

137:                                              ; preds = %49, %121, %99, %18, %131, %93, %87, %81, %75, %69, %65, %61, %12, %6, %2
  %138 = phi i1 [ false, %93 ], [ false, %87 ], [ false, %81 ], [ false, %75 ], [ false, %69 ], [ false, %65 ], [ false, %61 ], [ false, %12 ], [ false, %6 ], [ false, %2 ], [ %136, %131 ], [ false, %18 ], [ false, %99 ], [ false, %121 ], [ false, %49 ]
  ret i1 %138
}

declare zeroext i1 @_ZNK3gfx9ImageSkia20BackedBySameObjectAsERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15TabRendererData9IsCrashedEv(%struct.TabRendererData* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %struct.TabRendererData, %struct.TabRendererData* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 5
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i5
  %8 = lshr i5 -9, %7
  %9 = and i5 %8, 1
  %10 = icmp ne i5 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"*, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !41
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !41
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !44, !noalias !41
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !44, !noalias !41
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !41
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !41
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !44, !noalias !41
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !44, !noalias !41
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !41
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !41
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !44, !noalias !41
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !44, !noalias !41
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !41
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !41
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !44, !noalias !41
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !44, !noalias !41
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !46

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !41
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !41
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !44, !noalias !41
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !44, !noalias !41
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !47

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !48

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !49

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !50

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !51

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !52

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !54
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !54
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !57, !noalias !54
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !57, !noalias !54
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !54
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !54
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !57, !noalias !54
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !57, !noalias !54
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !54
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !54
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !57, !noalias !54
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !57, !noalias !54
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !54
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !54
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !57, !noalias !54
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !57, !noalias !54
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !59

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !54
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !54
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !57, !noalias !54
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !57, !noalias !54
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !60

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !61

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !62

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13TabAlertStateNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.115"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.115"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.115"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.115"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.115"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.115", %"class.std::__1::vector.115"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.115"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{i8 0, i8 2}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !8}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !53, !8}
!53 = !{!"llvm.loop.unroll.runtime.disable"}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !8}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !10}
!62 = distinct !{!62, !8}
