; ModuleID = '../../third_party/webrtc/modules/audio_processing/level_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/level_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::LevelEstimator" = type { %"class.webrtc::RmsLevel" }
%"class.webrtc::RmsLevel" = type { float, i64, float, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.std::__1::vector.23", %"class.std::__1::vector.23", i8, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", i64, i64, i64, i64, i64, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { float* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.10"*, %"class.std::__1::vector.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::vector.10" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::vector.10"* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.25"* }

@_ZN6webrtc14LevelEstimatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::LevelEstimator"*), void (%"class.webrtc::LevelEstimator"*)* @_ZN6webrtc14LevelEstimatorC2Ev
@_ZN6webrtc14LevelEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::LevelEstimator"*), void (%"class.webrtc::LevelEstimator"*)* @_ZN6webrtc14LevelEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14LevelEstimatorC2Ev(%"class.webrtc::LevelEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LevelEstimator", %"class.webrtc::LevelEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RmsLevelC1Ev(%"class.webrtc::RmsLevel"* %2) #3
  tail call void @_ZN6webrtc8RmsLevel5ResetEv(%"class.webrtc::RmsLevel"* %2) #3
  ret void
}

declare void @_ZN6webrtc8RmsLevelC1Ev(%"class.webrtc::RmsLevel"*) unnamed_addr #1

declare void @_ZN6webrtc8RmsLevel5ResetEv(%"class.webrtc::RmsLevel"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14LevelEstimatorD2Ev(%"class.webrtc::LevelEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LevelEstimator", %"class.webrtc::LevelEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc8RmsLevelD1Ev(%"class.webrtc::RmsLevel"* %2) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc8RmsLevelD1Ev(%"class.webrtc::RmsLevel"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14LevelEstimator13ProcessStreamERKNS_11AudioBufferE(%"class.webrtc::LevelEstimator"*, %"class.webrtc::AudioBuffer"* nocapture readonly dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::LevelEstimator", %"class.webrtc::LevelEstimator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 3
  br label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %6, %11
  %12 = phi i64 [ 0, %6 ], [ %21, %11 ]
  %13 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %8, align 8
  %14 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load float**, float*** %14, align 8
  %16 = getelementptr inbounds float*, float** %15, i64 %12
  %17 = load float*, float** %16, align 8
  %18 = load i64, i64* %9, align 8
  %19 = icmp eq i64 %18, 0
  %20 = select i1 %19, float* null, float* %17
  tail call void @_ZN6webrtc8RmsLevel7AnalyzeEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::RmsLevel"* %7, float* %20, i64 %18) #3
  %21 = add nuw i64 %12, 1
  %22 = load i64, i64* %3, align 8
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %11, label %10
}

declare void @_ZN6webrtc8RmsLevel7AnalyzeEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::RmsLevel"*, float*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
