; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_layout_overflow_calculator.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_layout_overflow_calculator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.1913 = type { %"class.blink::TransformationMatrix" }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::NGLayoutOverflowCalculator" = type { %"class.blink::NGBlockNode", %"class.blink::WritingDirectionMode", i8, i8, i8, i8, %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::PhysicalSize", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1636, %"class.WTF::Vector.1809", %"class.std::__1::unique_ptr.1814", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1835, %"class.blink::Persistent.1836" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1941 }
%class.scoped_refptr.1941 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1942", %"class.WTF::Vector.630", %"class.WTF::Vector.1944", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1942" = type { %"class.base::RefCounted.1943" }
%"class.base::RefCounted.1943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946" }
%"class.WTF::VectorBufferBase.1946" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1947 }
%union.anon.1947 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1932" }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1934" }
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1955 }
%class.scoped_refptr.1955 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1965" }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1956", %"class.WTF::Vector.1956" }
%"class.WTF::Vector.1956" = type { %"class.WTF::VectorBuffer.1957" }
%"class.WTF::VectorBuffer.1957" = type { %"class.WTF::VectorBufferBase.1958" }
%"class.WTF::VectorBufferBase.1958" = type { %class.scoped_refptr.1955*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1936" }
%"class.WTF::Vector.1936" = type { %"class.WTF::VectorBuffer.1937" }
%"class.WTF::VectorBuffer.1937" = type { %"class.WTF::VectorBufferBase.1938" }
%"class.WTF::VectorBufferBase.1938" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1646", %"class.absl::optional.1646", %"class.absl::optional.1646" }
%"class.absl::optional.1646" = type { %"class.absl::optional_internal::optional_data.1647" }
%"class.absl::optional_internal::optional_data.1647" = type { %"class.absl::optional_internal::optional_data_base.1648" }
%"class.absl::optional_internal::optional_data_base.1648" = type { %"class.absl::optional_internal::optional_data_dtor_base.1649" }
%"class.absl::optional_internal::optional_data_dtor_base.1649" = type { i8, %union.anon.1650 }
%union.anon.1650 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1951" }
%"class.WTF::VectorBuffer.1951" = type { %"class.WTF::VectorBufferBase.1952", [32 x i8] }
%"class.WTF::VectorBufferBase.1952" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1636 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1637", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1784, %union.anon.1785, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1637" = type { %"class.base::RefCounted.1638" }
%"class.base::RefCounted.1638" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1639, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1639 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1640 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1640 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1674 }
%class.scoped_refptr.1674 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1675", [4 x i8], %"class.std::__1::unique_ptr.1677", i64, %"class.WTF::Vector.1681", %"class.WTF::Vector.1686", %"class.WTF::Vector.1692", %"class.WTF::Vector.1710", %class.scoped_refptr.1546, %"class.WTF::HashMap.1716", %"class.WTF::Vector.1721", %"class.WTF::Vector.1681", %"class.WTF::Vector.1726", %"class.WTF::HashMap.1731", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1675" = type { %"class.base::RefCountedThreadSafe.1676" }
%"class.base::RefCountedThreadSafe.1676" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { i8* }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688", [8 x i8] }
%"class.WTF::VectorBufferBase.1688" = type { %class.scoped_refptr.1689*, i32, i32 }
%class.scoped_refptr.1689 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694" }
%"class.WTF::VectorBufferBase.1694" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1696", %"class.std::__1::unique_ptr.1702" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1695 }
%class.scoped_refptr.1695 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1710" = type { %"class.WTF::VectorBuffer.1711" }
%"class.WTF::VectorBuffer.1711" = type { %"class.WTF::VectorBufferBase.1712" }
%"class.WTF::VectorBufferBase.1712" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1713", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1713" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1716" = type { %"class.WTF::HashTable.1717" }
%"class.WTF::HashTable.1717" = type <{ %"struct.WTF::KeyValuePair.1720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1720" = type opaque
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [16 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1726" = type { %"class.WTF::VectorBuffer.1727" }
%"class.WTF::VectorBuffer.1727" = type { %"class.WTF::VectorBufferBase.1728" }
%"class.WTF::VectorBufferBase.1728" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"struct.WTF::KeyValuePair.1735"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1735" = type { i8**, %"class.std::__1::unique_ptr.1967" }
%"class.std::__1::unique_ptr.1967" = type { %"class.std::__1::__compressed_pair.1968" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1736" }
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1739, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1756" }
%class.scoped_refptr.1739 = type { %"class.base::RefCountedData.1740"* }
%"class.base::RefCountedData.1740" = type { %"class.base::RefCountedThreadSafe.1741", %"class.WTF::Vector.1742" }
%"class.base::RefCountedThreadSafe.1741" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1742" = type { %"class.WTF::VectorBuffer.1743" }
%"class.WTF::VectorBuffer.1743" = type { %"class.WTF::VectorBufferBase.1744" }
%"class.WTF::VectorBufferBase.1744" = type { %class.scoped_refptr.1745*, i32, i32 }
%class.scoped_refptr.1745 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1746", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1748" }
%"class.WTF::RefCounted.1746" = type { %"class.base::RefCounted.1747" }
%"class.base::RefCounted.1747" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1748" = type { %"class.std::__1::__compressed_pair.1749" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1756" = type { %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1759", %"class.WTF::Vector.1772", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1759" = type { %"class.WTF::VectorBuffer.1760" }
%"class.WTF::VectorBuffer.1760" = type { %"class.WTF::VectorBufferBase.1761", [320 x i8] }
%"class.WTF::VectorBufferBase.1761" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1762", %"class.WTF::Vector.1762", %class.scoped_refptr.1767, i8, [7 x i8] }>
%"class.WTF::Vector.1762" = type { %"class.WTF::VectorBuffer.1763" }
%"class.WTF::VectorBuffer.1763" = type { %"class.WTF::VectorBufferBase.1764", [8 x i8] }
%"class.WTF::VectorBufferBase.1764" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1767 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1768", %"class.WTF::Vector.1742", %"class.WTF::Vector.1742" }
%"class.WTF::RefCounted.1768" = type { %"class.base::RefCounted.1769" }
%"class.base::RefCounted.1769" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774", [288 x i8] }
%"class.WTF::VectorBufferBase.1774" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1762", %"class.WTF::Vector.1762" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1775 }
%class.scoped_refptr.1775 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1784 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1631", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1633, %"class.std::__1::unique_ptr.1852" }
%"class.WTF::RefCounted.1631" = type { %"class.base::RefCounted.1632" }
%"class.base::RefCounted.1632" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1633 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1634", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1634" = type { %"class.base::RefCounted.1635" }
%"class.base::RefCounted.1635" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1852" = type { %"class.std::__1::__compressed_pair.1853" }
%"class.std::__1::__compressed_pair.1853" = type { %"struct.std::__1::__compressed_pair_elem.1854" }
%"struct.std::__1::__compressed_pair_elem.1854" = type { %"class.WTF::Vector.1855"* }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1858 }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1858 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1785 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1641", %class.scoped_refptr.1786, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1787, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1674, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1788", %"class.absl::optional.1804" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1786 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1865", [4 x i8], %union.anon.1867, %class.scoped_refptr.1786, i32, [4 x i8] }>
%"class.WTF::RefCounted.1865" = type { %"class.base::RefCounted.1866" }
%"class.base::RefCounted.1866" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1867 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%union.anon.1787 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1791", %"class.WTF::Vector.1796", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793" }
%"class.WTF::VectorBufferBase.1793" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1796" = type { %"class.WTF::VectorBuffer.1797" }
%"class.WTF::VectorBuffer.1797" = type { %"class.WTF::VectorBufferBase.1798" }
%"class.WTF::VectorBufferBase.1798" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1804" = type { %"class.absl::optional_internal::optional_data.1805" }
%"class.absl::optional_internal::optional_data.1805" = type { %"class.absl::optional_internal::optional_data_base.1806" }
%"class.absl::optional_internal::optional_data_base.1806" = type { %"class.absl::optional_internal::optional_data_dtor_base.1807" }
%"class.absl::optional_internal::optional_data_dtor_base.1807" = type { i8, %union.anon.1808 }
%union.anon.1808 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1809" = type { %"class.WTF::VectorBuffer.1810" }
%"class.WTF::VectorBuffer.1810" = type { %"class.WTF::VectorBufferBase.1811", [8 x i8] }
%"class.WTF::VectorBufferBase.1811" = type { %class.scoped_refptr.1636*, i32, i32 }
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1817", %"class.absl::optional.1822", %"class.absl::optional.1827" }
%"class.absl::optional.1817" = type { %"class.absl::optional_internal::optional_data.1818" }
%"class.absl::optional_internal::optional_data.1818" = type { %"class.absl::optional_internal::optional_data_base.1819" }
%"class.absl::optional_internal::optional_data_base.1819" = type { %"class.absl::optional_internal::optional_data_dtor_base.1820" }
%"class.absl::optional_internal::optional_data_dtor_base.1820" = type { i8, %union.anon.1821 }
%union.anon.1821 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1822" = type { %"class.absl::optional_internal::optional_data.1823" }
%"class.absl::optional_internal::optional_data.1823" = type { %"class.absl::optional_internal::optional_data_base.1824" }
%"class.absl::optional_internal::optional_data_base.1824" = type { %"class.absl::optional_internal::optional_data_dtor_base.1825" }
%"class.absl::optional_internal::optional_data_dtor_base.1825" = type { i8, [3 x i8], %union.anon.1826 }
%union.anon.1826 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1827" = type { %"class.absl::optional_internal::optional_data.1828" }
%"class.absl::optional_internal::optional_data.1828" = type { %"class.absl::optional_internal::optional_data_base.1829" }
%"class.absl::optional_internal::optional_data_base.1829" = type { %"class.absl::optional_internal::optional_data_dtor_base.1830" }
%"class.absl::optional_internal::optional_data_dtor_base.1830" = type { i8, %union.anon.1831 }
%union.anon.1831 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1835 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1836" = type { %"class.blink::PersistentBase.1837" }
%"class.blink::PersistentBase.1837" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1840", %"struct.blink::PhysicalRect", %"class.blink::Member.1850" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1840" = type { %"class.std::__1::__compressed_pair.1841" }
%"class.std::__1::__compressed_pair.1841" = type { %"struct.std::__1::__compressed_pair_elem.1842" }
%"struct.std::__1::__compressed_pair_elem.1842" = type { %"class.WTF::HashSet.1843"* }
%"class.WTF::HashSet.1843" = type { %"class.WTF::HashTable.1844" }
%"class.WTF::HashTable.1844" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1850" = type { %"class.blink::MemberBase.1851" }
%"class.blink::MemberBase.1851" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.blink::NGPhysicalBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.1864 }
%union.anon.1864 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.1868, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.1868 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.1869, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.1869 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1870", %class.scoped_refptr.1872, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1873] }
%"class.WTF::RefCounted.1870" = type { %"class.base::RefCounted.1871" }
%"class.base::RefCounted.1871" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1872 = type { %"class.blink::SimpleFontData"* }
%struct.anon.1873 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.absl::optional.1899" = type { %"class.absl::optional_internal::optional_data.1900" }
%"class.absl::optional_internal::optional_data.1900" = type { %"class.absl::optional_internal::optional_data_base.1901" }
%"class.absl::optional_internal::optional_data_base.1901" = type { %"class.absl::optional_internal::optional_data_dtor_base.1902" }
%"class.absl::optional_internal::optional_data_dtor_base.1902" = type { i8, %union.anon.1903 }
%union.anon.1903 = type { %"struct.blink::PhysicalRect" }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.1882", [4 x i8], %"class.WTF::Vector.1884", %"class.WTF::Vector.1889", i32, %"class.absl::optional.1894", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1882" = type { %"class.base::RefCounted.1883" }
%"class.base::RefCounted.1883" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1891" }
%"class.WTF::VectorBufferBase.1891" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.1894" = type { %"class.absl::optional_internal::optional_data.1895" }
%"class.absl::optional_internal::optional_data.1895" = type { %"class.absl::optional_internal::optional_data_base.1896" }
%"class.absl::optional_internal::optional_data_base.1896" = type { %"class.absl::optional_internal::optional_data_dtor_base.1897" }
%"class.absl::optional_internal::optional_data_dtor_base.1897" = type { i8, %union.anon.1898 }
%union.anon.1898 = type { %"struct.blink::NGBoxStrut" }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.1904" = type { %"class.WTF::VectorBuffer.1905" }
%"class.WTF::VectorBuffer.1905" = type { %"class.WTF::VectorBufferBase.1906", [9216 x i8] }
%"class.WTF::VectorBufferBase.1906" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.absl::optional.1909" = type { %"class.absl::optional_internal::optional_data.1910" }
%"class.absl::optional_internal::optional_data.1910" = type { %"class.absl::optional_internal::optional_data_base.1911" }
%"class.absl::optional_internal::optional_data_base.1911" = type { %"class.absl::optional_internal::optional_data_dtor_base.1912" }
%"class.absl::optional_internal::optional_data_dtor_base.1912" = type { i8, %union.anon.1913 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink26NGLayoutOverflowCalculator8AddChildERKNS_21NGPhysicalBoxFragmentENS_14PhysicalOffsetE = comdat any

$_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN3WTF6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS2_18PartitionAllocatorEEEEEvRKT_ = comdat any

$_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN4base4spanIKNS_14NGFragmentItemELm18446744073709551615EEEEEvRKT_ = comdat any

$_ZNK5blink21NGPhysicalBoxFragment14LayoutOverflowEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_ = comdat any

@__const._ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE.transform = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1913 } } } } { { { { i8, [7 x i8], %union.anon.1913 } } } { { { i8, [7 x i8], %union.anon.1913 } } { { i8, [7 x i8], %union.anon.1913 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1913 { %"class.blink::TransformationMatrix" { %"struct.blink::TransformationMatrix::Matrix4" { [4 x [4 x double]] [[4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF], [4 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF]] } } } } } } }, align 8
@.str = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1

@_ZN5blink26NGLayoutOverflowCalculatorC1ERKNS_11NGBlockNodeEbRKNS_18NGPhysicalBoxStrutES6_S6_NS_12PhysicalSizeENS_20WritingDirectionModeE = hidden unnamed_addr alias void (%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGBlockNode"*, i1, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGPhysicalBoxStrut"*, i64, i16), void (%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGBlockNode"*, i1, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGPhysicalBoxStrut"*, %"struct.blink::NGPhysicalBoxStrut"*, i64, i16)* @_ZN5blink26NGLayoutOverflowCalculatorC2ERKNS_11NGBlockNodeEbRKNS_18NGPhysicalBoxStrutES6_S6_NS_12PhysicalSizeENS_20WritingDirectionModeE

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator36RecalculateLayoutOverflowForFragmentERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGPhysicalBoxFragment"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::span", align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.blink::NGBlockNode", align 8
  %5 = alloca %"struct.blink::NGPhysicalBoxStrut", align 8
  %6 = alloca %"class.blink::NGLayoutOverflowCalculator", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.blink::NGPhysicalBoxStrut"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.blink::NGPhysicalBoxStrut"*
  %11 = alloca %"class.absl::optional.1899", align 8
  %12 = bitcast %"class.blink::NGBlockNode"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %4, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.blink::LayoutObject"** %14 to i64*
  %16 = bitcast %"class.blink::NGBlockNode"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.blink::NGBlockNode"* %4 to i64*
  store i64 %17, i64* %18, align 8
  store i8 -86, i8* %13, align 8
  %19 = inttoptr i64 %17 to %"class.blink::LayoutObject"*
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = lshr i160 %24, 102
  %26 = trunc i160 %25 to i16
  %27 = and i16 %26, 3
  %28 = lshr i160 %24, 107
  %29 = trunc i160 %28 to i16
  %30 = and i16 %29, 256
  %31 = or i16 %30, %27
  %32 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #8
  %33 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 3
  %34 = bitcast i24* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 64
  %37 = icmp eq i32 %36, 0
  %38 = and i32 %35, 960
  %39 = icmp ne i32 %38, 256
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %84

41:                                               ; preds = %1
  %42 = call { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* nonnull dereferenceable(16) %4) #8
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = extractvalue { i64, i64 } %42, 1
  %48 = trunc i16 %27 to i8
  %49 = icmp ugt i16 %31, 255
  %50 = select i1 %49, i32 %46, i32 %44
  %51 = select i1 %49, i32 %44, i32 %46
  switch i8 %48, label %69 [
    i8 0, label %52
    i8 1, label %58
    i8 3, label %58
    i8 2, label %63
  ]

52:                                               ; preds = %41
  %53 = trunc i64 %47 to i32
  %54 = lshr i64 %47, 32
  %55 = zext i32 %50 to i64
  %56 = shl nuw i64 %55, 32
  %57 = or i64 %56, %54
  br label %70

58:                                               ; preds = %41, %41
  %59 = trunc i64 %47 to i32
  %60 = and i64 %47, -4294967296
  %61 = zext i32 %51 to i64
  %62 = or i64 %60, %61
  br label %70

63:                                               ; preds = %41
  %64 = lshr i64 %47, 32
  %65 = trunc i64 %64 to i32
  %66 = zext i32 %51 to i64
  %67 = shl i64 %47, 32
  %68 = or i64 %67, %66
  br label %70

69:                                               ; preds = %41
  unreachable

70:                                               ; preds = %52, %58, %63
  %71 = phi i64 [ %68, %63 ], [ %62, %58 ], [ %57, %52 ]
  %72 = phi i32 [ %65, %63 ], [ %59, %58 ], [ %51, %52 ]
  %73 = phi i32 [ %50, %63 ], [ %50, %58 ], [ %53, %52 ]
  %74 = zext i32 %72 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %73 to i64
  %77 = or i64 %75, %76
  %78 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %5 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %5, i64 0, i32 2
  %80 = bitcast %"class.blink::LayoutUnit"* %79 to i64*
  store i64 %71, i64* %80, align 8
  %81 = load i32, i32* %34, align 8
  %82 = and i32 %81, 64
  %83 = and i32 %81, 960
  br label %84

84:                                               ; preds = %70, %1
  %85 = phi i32 [ %83, %70 ], [ %38, %1 ]
  %86 = phi i32 [ %82, %70 ], [ %36, %1 ]
  %87 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %87) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 80, i1 false)
  %88 = icmp eq i32 %86, 0
  %89 = icmp ne i32 %85, 256
  %90 = and i1 %88, %89
  %91 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #8
  %92 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 1
  %93 = bitcast i24* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 1024
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %124, label %97

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %100
  %102 = and i32 %94, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = bitcast %"struct.blink::NGLink"* %101 to %"struct.blink::PhysicalRect"*
  br label %116

106:                                              ; preds = %97
  %107 = bitcast %"struct.blink::NGLink"* %101 to i8*
  %108 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %101, i64 1
  %109 = bitcast %"struct.blink::NGLink"* %108 to i32*
  %110 = load i32, i32* %109, align 8
  %111 = shl i32 %110, 6
  %112 = or i32 %111, 24
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %107, i64 %113
  %115 = bitcast i8* %114 to %"struct.blink::PhysicalRect"*
  br label %116

116:                                              ; preds = %106, %104
  %117 = phi %"struct.blink::PhysicalRect"* [ %115, %106 ], [ %105, %104 ]
  %118 = and i32 %94, 64
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %117, i64 1
  %121 = select i1 %119, %"struct.blink::PhysicalRect"* %117, %"struct.blink::PhysicalRect"* %120
  %122 = bitcast %"struct.blink::PhysicalRect"* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 4
  br label %124

124:                                              ; preds = %84, %116
  %125 = phi <2 x i64> [ %123, %116 ], [ zeroinitializer, %84 ]
  store <2 x i64> %125, <2 x i64>* %7, align 16
  %126 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #8
  %127 = and i32 %94, 2048
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %158, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %132
  %134 = and i32 %94, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  %137 = bitcast %"struct.blink::NGLink"* %133 to %"struct.blink::PhysicalRect"*
  br label %148

138:                                              ; preds = %129
  %139 = bitcast %"struct.blink::NGLink"* %133 to i8*
  %140 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %133, i64 1
  %141 = bitcast %"struct.blink::NGLink"* %140 to i32*
  %142 = load i32, i32* %141, align 8
  %143 = shl i32 %142, 6
  %144 = or i32 %143, 24
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %139, i64 %145
  %147 = bitcast i8* %146 to %"struct.blink::PhysicalRect"*
  br label %148

148:                                              ; preds = %138, %136
  %149 = phi %"struct.blink::PhysicalRect"* [ %147, %138 ], [ %137, %136 ]
  %150 = and i32 %94, 64
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %149, i64 1
  %153 = select i1 %151, %"struct.blink::PhysicalRect"* %149, %"struct.blink::PhysicalRect"* %152
  %154 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %153, i64 1
  %155 = select i1 %96, %"struct.blink::PhysicalRect"* %153, %"struct.blink::PhysicalRect"* %154
  %156 = bitcast %"struct.blink::PhysicalRect"* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 4
  br label %158

158:                                              ; preds = %124, %148
  %159 = phi <2 x i64> [ %157, %148 ], [ zeroinitializer, %124 ]
  store <2 x i64> %159, <2 x i64>* %9, align 16
  %160 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 2
  %161 = bitcast %"struct.blink::PhysicalSize"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  call void @_ZN5blink26NGLayoutOverflowCalculatorC2ERKNS_11NGBlockNodeEbRKNS_18NGPhysicalBoxStrutES6_S6_NS_12PhysicalSizeENS_20WritingDirectionModeE(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %4, i1 zeroext %90, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %8, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %5, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %10, i64 %162, i16 %31)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  %163 = load i32, i32* %93, align 8
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 2
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %169
  %171 = icmp eq %"struct.blink::NGLink"* %170, null
  br i1 %171, label %182, label %172

172:                                              ; preds = %166
  %173 = bitcast %"class.base::span"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #8
  %174 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %170, i64 1, i32 1
  %175 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %170, i64 1
  %176 = bitcast %"struct.blink::NGLink"* %175 to i32*
  %177 = load i32, i32* %176, align 8
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %"class.base::span", %"class.base::span"* %2, i64 0, i32 0, i32 0
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.base::span", %"class.base::span"* %2, i64 0, i32 1
  %181 = bitcast %"class.blink::NGFragmentItem"** %180 to %"struct.blink::PhysicalOffset"**
  store %"struct.blink::PhysicalOffset"* %174, %"struct.blink::PhysicalOffset"** %181, align 8
  call void @_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN4base4spanIKNS_14NGFragmentItemELm18446744073709551615EEEEEvRKT_(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"class.base::span"* nonnull dereferenceable(16) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #8
  br label %182

182:                                              ; preds = %158, %166, %172
  %183 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 2
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 0
  %186 = zext i32 %184 to i64
  %187 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %186
  %188 = icmp eq i32 %184, 0
  br i1 %188, label %206, label %189

189:                                              ; preds = %182, %203
  %190 = phi %"struct.blink::NGLink"* [ %204, %203 ], [ %185, %182 ]
  %191 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %190, i64 0, i32 0
  %192 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %191, align 8, !noalias !2
  %193 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %192, i64 0, i32 1
  %194 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %193, align 8, !noalias !2
  %195 = icmp eq %"class.blink::LayoutObject"* %194, null
  br i1 %195, label %203, label %196, !prof !5

196:                                              ; preds = %189
  %197 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %192) #8, !noalias !2
  %198 = icmp eq %"class.blink::NGPhysicalFragment"* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %190, i64 0, i32 1
  %201 = bitcast %"struct.blink::PhysicalOffset"* %200 to i64*
  %202 = load i64, i64* %201, align 4, !noalias !2
  br label %206

203:                                              ; preds = %196, %189
  %204 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %190, i64 1
  %205 = icmp eq %"struct.blink::NGLink"* %204, %187
  br i1 %205, label %218, label %189

206:                                              ; preds = %182, %199
  %207 = phi %"struct.blink::NGLink"* [ %185, %182 ], [ %190, %199 ]
  %208 = phi %"class.blink::NGPhysicalFragment"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::NGPhysicalFragment"*), %182 ], [ %197, %199 ]
  %209 = phi i64 [ 0, %182 ], [ %202, %199 ]
  %210 = icmp eq %"struct.blink::NGLink"* %207, %187
  br i1 %210, label %218, label %211

211:                                              ; preds = %206
  %212 = bitcast { i64, i64 }* %3 to i8*
  %213 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %214 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %215 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %216 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %6, i64 0, i32 2
  %217 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %6, i64 0, i32 9
  br label %229

218:                                              ; preds = %203, %278, %294, %291, %206
  %219 = load i32, i32* %34, align 8
  %220 = and i32 %219, 262144
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %341, label %222

222:                                              ; preds = %218
  %223 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %224 = bitcast %"class.blink::LayoutObject"* %223 to i1 (%"class.blink::LayoutObject"*, i32)***
  %225 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %224, align 8
  %226 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %225, i64 92
  %227 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %226, align 8
  %228 = call zeroext i1 %227(%"class.blink::LayoutObject"* %223, i32 44) #8
  br i1 %228, label %299, label %341

229:                                              ; preds = %211, %294
  %230 = phi i64 [ %209, %211 ], [ %297, %294 ]
  %231 = phi %"class.blink::NGPhysicalFragment"* [ %208, %211 ], [ %289, %294 ]
  %232 = phi %"struct.blink::NGLink"* [ %207, %211 ], [ %282, %294 ]
  %233 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %231, i64 0, i32 3
  %234 = bitcast i24* %233 to i32*
  %235 = load i32, i32* %234, align 8
  %236 = and i32 %235, 64
  %237 = icmp ne i32 %236, 0
  %238 = bitcast %"class.blink::NGPhysicalFragment"* %231 to %"class.blink::NGPhysicalBoxFragment"*
  %239 = icmp eq %"class.blink::NGPhysicalFragment"* %231, null
  %240 = or i1 %239, %237
  br i1 %240, label %278, label %241

241:                                              ; preds = %229
  %242 = and i32 %235, 960
  %243 = icmp eq i32 %242, 256
  br i1 %243, label %244, label %277

244:                                              ; preds = %241
  %245 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator36RecalculateLayoutOverflowForFragmentERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGPhysicalBoxFragment"* nonnull dereferenceable(72) %238)
  %246 = extractvalue { i64, i64 } %245, 0
  %247 = trunc i64 %246 to i32
  %248 = lshr i64 %246, 32
  %249 = trunc i64 %248 to i32
  %250 = extractvalue { i64, i64 } %245, 1
  %251 = trunc i64 %230 to i32
  %252 = icmp slt i32 %251, 0
  %253 = select i1 %252, i32 -2147483648, i32 2147483647
  %254 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %247, i32 %251) #8
  %255 = extractvalue { i32, i1 } %254, 1
  %256 = extractvalue { i32, i1 } %254, 0
  %257 = select i1 %255, i32 %253, i32 %256, !prof !5
  %258 = lshr i64 %230, 32
  %259 = trunc i64 %258 to i32
  %260 = icmp slt i32 %259, 0
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %249, i32 %259) #8
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !5
  %266 = zext i32 %265 to i64
  %267 = shl nuw i64 %266, 32
  %268 = zext i32 %257 to i64
  %269 = or i64 %267, %268
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212)
  store i64 %269, i64* %214, align 8
  store i64 %250, i64* %215, align 8
  %270 = load i8, i8* %216, align 2, !range !6
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %276, label %272

272:                                              ; preds = %244
  %273 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %213) #8
  %274 = extractvalue { i64, i64 } %273, 0
  %275 = extractvalue { i64, i64 } %273, 1
  store i64 %274, i64* %214, align 8
  store i64 %275, i64* %215, align 8
  br label %276

276:                                              ; preds = %244, %272
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %217, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %213) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212)
  br label %278

277:                                              ; preds = %241
  call void @_ZN5blink26NGLayoutOverflowCalculator8AddChildERKNS_21NGPhysicalBoxFragmentENS_14PhysicalOffsetE(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"class.blink::NGPhysicalBoxFragment"* nonnull dereferenceable(72) %238, i64 %230)
  br label %278

278:                                              ; preds = %229, %276, %277
  %279 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %232, i64 1
  %280 = icmp eq %"struct.blink::NGLink"* %279, %187
  br i1 %280, label %218, label %281

281:                                              ; preds = %278, %291
  %282 = phi %"struct.blink::NGLink"* [ %292, %291 ], [ %279, %278 ]
  %283 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %282, i64 0, i32 0
  %284 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %284, i64 0, i32 1
  %286 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %285, align 8
  %287 = icmp eq %"class.blink::LayoutObject"* %286, null
  br i1 %287, label %291, label %288, !prof !5

288:                                              ; preds = %281
  %289 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %284) #8
  %290 = icmp eq %"class.blink::NGPhysicalFragment"* %289, null
  br i1 %290, label %291, label %294

291:                                              ; preds = %288, %281
  %292 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %282, i64 1
  %293 = icmp eq %"struct.blink::NGLink"* %292, %187
  br i1 %293, label %218, label %281

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %282, i64 0, i32 1
  %296 = bitcast %"struct.blink::PhysicalOffset"* %295 to i64*
  %297 = load i64, i64* %296, align 4
  %298 = icmp eq %"struct.blink::NGLink"* %282, %187
  br i1 %298, label %218, label %229

299:                                              ; preds = %222
  %300 = load i32, i32* %183, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %301
  %303 = load i32, i32* %93, align 8
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %299
  %307 = bitcast %"struct.blink::NGLink"* %302 to %"struct.blink::PhysicalRect"*
  br label %318

308:                                              ; preds = %299
  %309 = bitcast %"struct.blink::NGLink"* %302 to i8*
  %310 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %302, i64 1
  %311 = bitcast %"struct.blink::NGLink"* %310 to i32*
  %312 = load i32, i32* %311, align 8
  %313 = shl i32 %312, 6
  %314 = or i32 %313, 24
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %309, i64 %315
  %317 = bitcast i8* %316 to %"struct.blink::PhysicalRect"*
  br label %318

318:                                              ; preds = %306, %308
  %319 = phi %"struct.blink::PhysicalRect"* [ %317, %308 ], [ %307, %306 ]
  %320 = and i32 %303, 64
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %319, i64 1
  %323 = select i1 %321, %"struct.blink::PhysicalRect"* %319, %"struct.blink::PhysicalRect"* %322
  %324 = and i32 %303, 1024
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %323, i64 1
  %327 = select i1 %325, %"struct.blink::PhysicalRect"* %323, %"struct.blink::PhysicalRect"* %326
  %328 = and i32 %303, 2048
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %327, i64 1
  %331 = select i1 %329, %"struct.blink::PhysicalRect"* %327, %"struct.blink::PhysicalRect"* %330
  %332 = and i32 %303, 4096
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %331, i64 1
  %335 = select i1 %333, %"struct.blink::PhysicalRect"* %331, %"struct.blink::PhysicalRect"* %334
  %336 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %335, i64 5
  %337 = bitcast %"struct.blink::PhysicalRect"* %336 to %"class.blink::NGTableBorders"**
  %338 = load %"class.blink::NGTableBorders"*, %"class.blink::NGTableBorders"** %337, align 8
  %339 = icmp eq %"class.blink::NGTableBorders"* %338, null
  br i1 %339, label %341, label %340

340:                                              ; preds = %318
  call void @_ZN5blink26NGLayoutOverflowCalculator24AddTableCollapsedBordersERKNS_14NGTableBordersE(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"class.blink::NGTableBorders"* nonnull dereferenceable(80) %338)
  br label %341

341:                                              ; preds = %218, %340, %318, %222
  %342 = load i32, i32* %93, align 8, !noalias !7
  %343 = and i32 %342, 4096
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %347

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %346, align 8, !alias.scope !7
  br label %383

347:                                              ; preds = %341
  %348 = load i32, i32* %183, align 4, !noalias !7
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %349
  %351 = and i32 %342, 2
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %347
  %354 = bitcast %"struct.blink::NGLink"* %350 to %"struct.blink::PhysicalRect"*
  br label %365

355:                                              ; preds = %347
  %356 = bitcast %"struct.blink::NGLink"* %350 to i8*
  %357 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %350, i64 1
  %358 = bitcast %"struct.blink::NGLink"* %357 to i32*
  %359 = load i32, i32* %358, align 8, !noalias !7
  %360 = shl i32 %359, 6
  %361 = or i32 %360, 24
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds i8, i8* %356, i64 %362
  %364 = bitcast i8* %363 to %"struct.blink::PhysicalRect"*
  br label %365

365:                                              ; preds = %355, %353
  %366 = phi %"struct.blink::PhysicalRect"* [ %364, %355 ], [ %354, %353 ]
  %367 = and i32 %342, 64
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %366, i64 1
  %370 = select i1 %368, %"struct.blink::PhysicalRect"* %366, %"struct.blink::PhysicalRect"* %369
  %371 = and i32 %342, 1024
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %370, i64 1
  %374 = select i1 %372, %"struct.blink::PhysicalRect"* %370, %"struct.blink::PhysicalRect"* %373
  %375 = and i32 %342, 2048
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %374, i64 1
  %378 = select i1 %376, %"struct.blink::PhysicalRect"* %374, %"struct.blink::PhysicalRect"* %377
  %379 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %379, align 8, !alias.scope !7
  %380 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %381 = bitcast %"struct.blink::PhysicalRect"* %380 to i8*
  %382 = bitcast %"struct.blink::PhysicalRect"* %378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %382, i64 16, i1 false) #8
  br label %383

383:                                              ; preds = %345, %365
  %384 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator6ResultEN4absl8optionalINS_12PhysicalRectEEE(%"class.blink::NGLayoutOverflowCalculator"* nonnull %6, %"class.absl::optional.1899"* nonnull byval(%"class.absl::optional.1899") align 8 %11)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  ret { i64, i64 } %384
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGLayoutOverflowCalculator8AddItemsERKNS_15NGFragmentItemsE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGFragmentItems"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::span", align 8
  %4 = bitcast %"class.base::span"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %1, i64 0, i32 4, i64 0
  %6 = getelementptr inbounds %"class.blink::NGFragmentItems", %"class.blink::NGFragmentItems"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %3, i64 0, i32 1
  store %"class.blink::NGFragmentItem"* %5, %"class.blink::NGFragmentItem"** %10, align 8
  call void @_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN4base4spanIKNS_14NGFragmentItemELm18446744073709551615EEEEEvRKT_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"class.base::span"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGLayoutOverflowCalculator8AddChildERKNS_21NGPhysicalBoxFragmentENS_14PhysicalOffsetE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = tail call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %1)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = extractvalue { i64, i64 } %8, 1
  %14 = icmp slt i32 %5, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %5) #8
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !5
  %20 = icmp slt i32 %7, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %7) #8
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !5
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %19 to i64
  %29 = or i64 %27, %28
  %30 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 3
  %31 = bitcast i24* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 960
  %34 = icmp eq i32 %33, 256
  %35 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  %36 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %29, i64* %37, align 8
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %13, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  %40 = load i8, i8* %39, align 2, !range !6
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %3
  %43 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #8
  %44 = extractvalue { i64, i64 } %43, 0
  %45 = extractvalue { i64, i64 } %43, 1
  store i64 %44, i64* %37, align 8
  store i64 %45, i64* %38, align 8
  br label %46

46:                                               ; preds = %42, %3
  %47 = phi i64 [ %13, %3 ], [ %45, %42 ]
  %48 = trunc i64 %47 to i32
  %49 = icmp ne i32 %48, 0
  %50 = icmp ugt i64 %47, 4294967295
  %51 = and i1 %50, %49
  %52 = or i1 %34, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %54, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #8
  br label %55

55:                                               ; preds = %46, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGLayoutOverflowCalculator24AddTableCollapsedBordersERKNS_14NGTableBordersE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGTableBorders"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to { i64, i64 }*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::NGPhysicalBoxStrut"*
  %9 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 7
  %11 = getelementptr inbounds <2 x i64>, <2 x i64>* %5, i64 0, i64 0
  store i64 0, i64* %11, align 16
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %13 = bitcast %"struct.blink::PhysicalSize"* %10 to i64*
  %14 = bitcast %"struct.blink::PhysicalSize"* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 8
  %16 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = tail call { i64, i64 } @_ZNK5blink14NGTableBorders32GetCollapsedBorderVisualSizeDiffEv(%"class.blink::NGTableBorders"* %1) #8
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = trunc i64 %18 to i32
  %20 = lshr i64 %18, 32
  %21 = trunc i64 %20 to i32
  %22 = extractvalue { i64, i64 } %17, 1
  %23 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1
  %24 = bitcast %"class.blink::WritingDirectionMode"* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = trunc i16 %25 to i8
  %27 = icmp ugt i16 %25, 255
  %28 = select i1 %27, i32 %21, i32 %19
  %29 = select i1 %27, i32 %19, i32 %21
  switch i8 %26, label %53 [
    i8 0, label %30
    i8 1, label %36
    i8 3, label %36
    i8 2, label %41
    i8 4, label %47
  ]

30:                                               ; preds = %2
  %31 = trunc i64 %22 to i32
  %32 = lshr i64 %22, 32
  %33 = zext i32 %28 to i64
  %34 = shl nuw i64 %33, 32
  %35 = or i64 %34, %32
  br label %53

36:                                               ; preds = %2, %2
  %37 = trunc i64 %22 to i32
  %38 = and i64 %22, -4294967296
  %39 = zext i32 %29 to i64
  %40 = or i64 %38, %39
  br label %53

41:                                               ; preds = %2
  %42 = lshr i64 %22, 32
  %43 = trunc i64 %42 to i32
  %44 = zext i32 %29 to i64
  %45 = shl i64 %22, 32
  %46 = or i64 %45, %44
  br label %53

47:                                               ; preds = %2
  %48 = lshr i64 %22, 32
  %49 = trunc i64 %48 to i32
  %50 = zext i32 %28 to i64
  %51 = shl i64 %22, 32
  %52 = or i64 %51, %50
  br label %53

53:                                               ; preds = %2, %30, %36, %41, %47
  %54 = phi i64 [ %52, %47 ], [ %46, %41 ], [ %40, %36 ], [ %35, %30 ], [ 0, %2 ]
  %55 = phi i32 [ %49, %47 ], [ %43, %41 ], [ %37, %36 ], [ %29, %30 ], [ 0, %2 ]
  %56 = phi i32 [ %29, %47 ], [ %28, %41 ], [ %28, %36 ], [ %31, %30 ], [ 0, %2 ]
  %57 = zext i32 %55 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %56 to i64
  %60 = or i64 %58, %59
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %54, i64* %62, align 8
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_18NGPhysicalBoxStrutE(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  %63 = load <2 x i64>, <2 x i64>* %5, align 16
  %64 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  %65 = bitcast <2 x i64>* %3 to %"struct.blink::PhysicalRect"*
  store <2 x i64> %63, <2 x i64>* %3, align 16
  %66 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  %67 = load i8, i8* %66, align 2, !range !6
  %68 = icmp eq i8 %67, 0
  %69 = extractelement <2 x i64> %63, i32 1
  br i1 %68, label %76, label %70

70:                                               ; preds = %53
  %71 = getelementptr inbounds <2 x i64>, <2 x i64>* %3, i64 0, i64 0
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %73 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %65) #8
  %74 = extractvalue { i64, i64 } %73, 0
  %75 = extractvalue { i64, i64 } %73, 1
  store i64 %74, i64* %71, align 16
  store i64 %75, i64* %72, align 8
  br label %76

76:                                               ; preds = %70, %53
  %77 = phi i64 [ %69, %53 ], [ %75, %70 ]
  %78 = trunc i64 %77 to i32
  %79 = icmp ne i32 %78, 0
  %80 = icmp ugt i64 %77, 4294967295
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %83, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %65) #8
  br label %84

84:                                               ; preds = %76, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator6ResultEN4absl8optionalINS_12PhysicalRectEEE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.absl::optional.1899"* byval(%"class.absl::optional.1899") align 8) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"class.blink::WritingModeConverter", align 4
  %7 = alloca %"struct.blink::LogicalRect", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.blink::PhysicalRect"*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.blink::PhysicalRect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"struct.blink::PhysicalRect"*
  %14 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !6
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  %19 = load i8, i8* %18, align 2, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %2, %17
  %22 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  %23 = bitcast %"struct.blink::PhysicalRect"* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  br label %324

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"struct.blink::PhysicalRect"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 6, i32 3, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 6, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp sgt i32 %33, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %29, i32 %33) #8
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !5
  %42 = icmp sgt i32 %35, -1
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %35) #8
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !5
  %48 = zext i32 %47 to i64
  %49 = shl nuw i64 %48, 32
  %50 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %51) #8
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !5
  %58 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.absl::optional.1899", %"class.absl::optional.1899"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %61) #8
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !5
  %68 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 6, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 6, i32 2, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %69, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %69) #8
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !5
  %78 = icmp slt i32 %71, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %71) #8
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !5
  %84 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #8
  %85 = icmp sgt i32 %41, -1
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %41) #8
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !5
  %91 = icmp sgt i32 %47, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %47) #8
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !5
  %97 = bitcast %"struct.blink::PhysicalRect"* %3 to i64*
  %98 = zext i32 %41 to i64
  %99 = or i64 %49, %98
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1
  %101 = bitcast %"struct.blink::PhysicalSize"* %100 to i64*
  %102 = zext i32 %96 to i64
  %103 = shl nuw i64 %102, 32
  %104 = zext i32 %90 to i64
  %105 = or i64 %103, %104
  store i64 %105, i64* %101, align 8
  %106 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3)
  %107 = extractvalue { i64, i64 } %106, 0
  %108 = extractvalue { i64, i64 } %106, 1
  store i64 %107, i64* %97, align 8
  store i64 %108, i64* %101, align 8
  %109 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  %110 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  %112 = bitcast %"struct.blink::PhysicalRect"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %109, i8* align 8 %112, i64 16, i1 false)
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3) #8
  %113 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0
  %114 = call zeroext i1 @_ZNK5blink11NGBlockNode29IsInlineFormattingContextRootEPNS_17NGLayoutInputNodeE(%"class.blink::NGBlockNode"* %113, %"class.blink::NGLayoutInputNode"* null) #8
  br i1 %114, label %147, label %115

115:                                              ; preds = %25
  %116 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0, i32 0, i32 1
  %117 = load i8, i8* %116, align 8
  %118 = and i8 %117, 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %130

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to %"class.blink::LayoutObject"**
  %122 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %121, align 8
  %123 = bitcast %"class.blink::LayoutObject"* %122 to i1 (%"class.blink::LayoutObject"*)***
  %124 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %124, i64 80
  %126 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %125, align 8
  %127 = call zeroext i1 %126(%"class.blink::LayoutObject"* %122) #8
  br i1 %127, label %147, label %128

128:                                              ; preds = %120
  %129 = load i8, i8* %116, align 8
  br label %130

130:                                              ; preds = %128, %115
  %131 = phi i8 [ %129, %128 ], [ %117, %115 ]
  %132 = and i8 %131, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %149

134:                                              ; preds = %130
  %135 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to %"class.blink::LayoutObject"**
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %135, align 8
  %137 = bitcast %"class.blink::LayoutObject"* %136 to i1 (%"class.blink::LayoutObject"*, i32)***
  %138 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %137, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, i64 92
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, align 8
  %141 = call zeroext i1 %140(%"class.blink::LayoutObject"* %136, i32 10) #8
  br i1 %141, label %147, label %142

142:                                              ; preds = %134
  %143 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %137, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %143, i64 92
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, align 8
  %146 = call zeroext i1 %145(%"class.blink::LayoutObject"* %136, i32 27) #8
  br i1 %146, label %147, label %149

147:                                              ; preds = %134, %142, %120, %25
  %148 = load <2 x i64>, <2 x i64>* %4, align 16
  br label %322

149:                                              ; preds = %130, %142
  %150 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %150) #8
  %151 = bitcast %"class.blink::WritingModeConverter"* %6 to i32*
  store i32 -1431655766, i32* %151, align 4
  %152 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1
  %153 = bitcast %"class.blink::WritingDirectionMode"* %152 to i16*
  %154 = load i16, i16* %153, align 8
  %155 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 7
  %156 = bitcast %"class.blink::WritingModeConverter"* %6 to i16*
  store i16 %154, i16* %156, align 4
  %157 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 1
  %158 = bitcast %"struct.blink::PhysicalSize"* %155 to i64*
  %159 = bitcast %"struct.blink::PhysicalSize"* %157 to i64*
  %160 = load i64, i64* %158, align 4
  store i64 %160, i64* %159, align 4
  %161 = bitcast %"struct.blink::LogicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #8
  %162 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8
  %163 = trunc i16 %154 to i8
  %164 = icmp eq i8 %163, 0
  %165 = bitcast %"struct.blink::LogicalRect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 -86, i64 16, i1 false)
  %166 = icmp ult i16 %154, 256
  %167 = and i1 %164, %166
  br i1 %167, label %168, label %171

168:                                              ; preds = %149
  %169 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %162, i64 0, i32 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  br label %175

171:                                              ; preds = %149
  %172 = call { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"* nonnull %6, %"struct.blink::PhysicalRect"* dereferenceable(16) %162) #8
  %173 = extractvalue { i64, i64 } %172, 0
  %174 = trunc i64 %173 to i32
  br label %175

175:                                              ; preds = %168, %171
  %176 = phi i32 [ %170, %168 ], [ %174, %171 ]
  %177 = load i8, i8* %14, align 8, !range !6
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %180, !prof !5

179:                                              ; preds = %175
  call void @llvm.trap() #8
  unreachable

180:                                              ; preds = %175
  %181 = load i8, i8* %150, align 4
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %183, label %190

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 0, i32 1
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %183
  %188 = load i32, i32* %58, align 4
  %189 = load i32, i32* %60, align 4
  br label %198

190:                                              ; preds = %183, %180
  %191 = call { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"* nonnull %6, %"struct.blink::PhysicalRect"* dereferenceable(16) %26) #8
  %192 = extractvalue { i64, i64 } %191, 0
  %193 = lshr i64 %192, 32
  %194 = trunc i64 %193 to i32
  %195 = extractvalue { i64, i64 } %191, 1
  %196 = lshr i64 %195, 32
  %197 = trunc i64 %196 to i32
  br label %198

198:                                              ; preds = %187, %190
  %199 = phi i32 [ %189, %187 ], [ %197, %190 ]
  %200 = phi i32 [ %188, %187 ], [ %194, %190 ]
  %201 = icmp slt i32 %199, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %199) #8
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !5
  %207 = load i16, i16* %153, align 8
  %208 = trunc i16 %207 to i8
  switch i8 %208, label %217 [
    i8 0, label %212
    i8 1, label %209
    i8 3, label %209
    i8 2, label %210
    i8 4, label %211
  ]

209:                                              ; preds = %198, %198
  br label %212

210:                                              ; preds = %198
  br label %212

211:                                              ; preds = %198
  br label %212

212:                                              ; preds = %198, %211, %210, %209
  %213 = phi i32* [ %32, %209 ], [ %68, %210 ], [ %68, %211 ], [ %70, %198 ]
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = shl nuw i64 %215, 32
  br label %217

217:                                              ; preds = %212, %198
  %218 = phi i64 [ 0, %198 ], [ %216, %212 ]
  %219 = bitcast %"struct.blink::LogicalRect"* %7 to i64*
  %220 = zext i32 %206 to i64
  %221 = shl nuw i64 %220, 32
  %222 = zext i32 %176 to i64
  %223 = or i64 %221, %222
  store i64 %223, i64* %219, align 8
  %224 = getelementptr inbounds %"struct.blink::LogicalRect", %"struct.blink::LogicalRect"* %7, i64 0, i32 1
  %225 = bitcast %"struct.blink::LogicalSize"* %224 to i64*
  store i64 %218, i64* %225, align 8
  %226 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %226) #8
  %227 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %226, i8* align 8 %112, i64 16, i1 false)
  %228 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %228) #8
  %229 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %229) #8
  %230 = load i8, i8* %150, align 4
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %217
  %233 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %6, i64 0, i32 0, i32 1
  %234 = load i8, i8* %233, align 1
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %243, label %236

236:                                              ; preds = %232, %217
  %237 = call { i64, i64 } @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_11LogicalRectE(%"class.blink::WritingModeConverter"* nonnull %6, %"struct.blink::LogicalRect"* nonnull dereferenceable(16) %7) #8
  %238 = extractvalue { i64, i64 } %237, 0
  %239 = trunc i64 %238 to i32
  %240 = and i64 %238, -4294967296
  %241 = extractvalue { i64, i64 } %237, 1
  %242 = and i64 %241, 4294967295
  br label %243

243:                                              ; preds = %232, %236
  %244 = phi i64 [ %240, %236 ], [ %221, %232 ]
  %245 = phi i64 [ %241, %236 ], [ %218, %232 ]
  %246 = phi i64 [ %242, %236 ], [ 0, %232 ]
  %247 = phi i32 [ %239, %236 ], [ %176, %232 ]
  %248 = and i64 %245, -4294967296
  %249 = zext i32 %247 to i64
  %250 = or i64 %244, %249
  %251 = or i64 %248, %246
  %252 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %250, i64* %252, align 8
  %253 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %251, i64* %253, align 8
  %254 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13)
  %255 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %256 = extractvalue { i64, i64 } %254, 0
  store i64 %256, i64* %255, align 8
  %257 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %258 = extractvalue { i64, i64 } %254, 1
  store i64 %258, i64* %257, align 8
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* nonnull %9, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #8
  %259 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to %"class.blink::LayoutObject"**
  %260 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %260, i64 0, i32 5, i32 0
  %262 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %262, i64 0, i32 0, i32 9
  %264 = bitcast [20 x i8]* %263 to i160*
  %265 = load i160, i160* %264, align 8
  %266 = and i160 %265, 15211807202738752817960438464512
  %267 = icmp eq i160 %266, 0
  %268 = select i1 %267, i160 74, i160 77
  %269 = lshr i160 %265, %268
  %270 = trunc i160 %269 to i32
  %271 = and i32 %270, 7
  switch i32 %271, label %320 [
    i32 1, label %272
    i32 4, label %272
  ]

272:                                              ; preds = %243, %243
  %273 = load i32, i32* %227, align 8
  %274 = load i32, i32* %110, align 8
  %275 = icmp eq i32 %273, %274
  br i1 %275, label %320, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %273, %278
  %280 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %260, i64 0, i32 6, i32 0, i32 0
  %281 = load %"class.blink::Node"*, %"class.blink::Node"** %280, align 8
  %282 = icmp eq %"class.blink::Node"* %281, null
  br i1 %282, label %283, label %290

283:                                              ; preds = %276, %283
  %284 = phi %"class.blink::LayoutObject"* [ %286, %283 ], [ %260, %276 ]
  %285 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %284, i64 0, i32 7
  %286 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %286, i64 0, i32 6, i32 0, i32 0
  %288 = load %"class.blink::Node"*, %"class.blink::Node"** %287, align 8
  %289 = icmp eq %"class.blink::Node"* %288, null
  br i1 %289, label %283, label %290

290:                                              ; preds = %283, %276
  %291 = phi %"class.blink::Node"* [ %281, %276 ], [ %288, %283 ]
  %292 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %291, i64 0, i32 3, i32 0, i32 0
  %293 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %293, i64 0, i32 2, i32 0, i32 0
  %295 = load %"class.blink::Document"*, %"class.blink::Document"** %294, align 8
  %296 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %295, i64 0, i32 2
  %297 = load i8, i8* %116, align 8
  %298 = and i8 %297, 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %300, label %306

300:                                              ; preds = %290
  %301 = bitcast %"class.blink::LayoutObject"* %260 to i1 (%"class.blink::LayoutObject"*)***
  %302 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %301, align 8
  %303 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %302, i64 80
  %304 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %303, align 8
  %305 = call zeroext i1 %304(%"class.blink::LayoutObject"* %260) #8
  br label %306

306:                                              ; preds = %290, %300
  %307 = phi i1 [ false, %290 ], [ %305, %300 ]
  br i1 %279, label %314, label %308

308:                                              ; preds = %306
  %309 = select i1 %307, i32 3705, i32 3704
  %310 = bitcast %"class.blink::UseCounter"* %296 to void (%"class.blink::UseCounter"*, i32)***
  %311 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %310, align 8
  %312 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %311, i64 3
  %313 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %312, align 8
  call void %313(%"class.blink::UseCounter"* %296, i32 %309) #8
  br label %320

314:                                              ; preds = %306
  %315 = select i1 %307, i32 3703, i32 3702
  %316 = bitcast %"class.blink::UseCounter"* %296 to void (%"class.blink::UseCounter"*, i32)***
  %317 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %317, i64 3
  %319 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %318, align 8
  call void %319(%"class.blink::UseCounter"* %296, i32 %315) #8
  br label %320

320:                                              ; preds = %272, %243, %314, %308
  %321 = load <2 x i64>, <2 x i64>* %8, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %226) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %150) #8
  br label %322

322:                                              ; preds = %320, %147
  %323 = phi <2 x i64> [ %148, %147 ], [ %321, %320 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #8
  br label %324

324:                                              ; preds = %322, %21
  %325 = phi <2 x i64> [ %323, %322 ], [ %24, %21 ]
  %326 = extractelement <2 x i64> %325, i32 0
  %327 = insertvalue { i64, i64 } undef, i64 %326, 0
  %328 = extractelement <2 x i64> %325, i32 1
  %329 = insertvalue { i64, i64 } %327, i64 %328, 1
  ret { i64, i64 } %329
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGLayoutOverflowCalculatorC2ERKNS_11NGBlockNodeEbRKNS_18NGPhysicalBoxStrutES6_S6_NS_12PhysicalSizeENS_20WritingDirectionModeE(%"class.blink::NGLayoutOverflowCalculator"* nocapture, %"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), i1 zeroext, %"struct.blink::NGPhysicalBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::NGPhysicalBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::NGPhysicalBoxStrut"* nocapture readonly dereferenceable(16), i64, i16) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to i8*
  %10 = bitcast %"class.blink::NGBlockNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::WritingDirectionMode"* %11 to i16*
  store i16 %7, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  br i1 %2, label %14, label %45

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, align 8
  %22 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to %"class.blink::LayoutObject"**
  br label %48

23:                                               ; preds = %14
  %24 = bitcast %"class.blink::NGLayoutOverflowCalculator"* %0 to %"class.blink::LayoutObject"**
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 8589934592
  %30 = icmp eq i96 %29, 0
  %31 = bitcast %"class.blink::LayoutObject"* %25 to %"class.blink::LayoutBox"*
  br i1 %30, label %48, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 74
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 7
  %41 = icmp ne i32 %40, 2
  %42 = icmp ne i32 %40, 5
  %43 = and i1 %41, %42
  %44 = zext i1 %43 to i8
  br label %48

45:                                               ; preds = %8
  store i8 0, i8* %13, align 2
  %46 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 3
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 4
  store i8 0, i8* %47, align 4
  br label %75

48:                                               ; preds = %19, %32, %23
  %49 = phi %"class.blink::LayoutObject"** [ %22, %19 ], [ %24, %32 ], [ %24, %23 ]
  %50 = phi %"class.blink::LayoutBox"* [ %21, %19 ], [ %31, %32 ], [ %31, %23 ]
  %51 = phi i8 [ 0, %19 ], [ %44, %32 ], [ 0, %23 ]
  store i8 %51, i8* %13, align 2
  %52 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 3
  %53 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.blink::LayoutBox"* %50 to i1 (%"class.blink::LayoutBox"*)***
  %55 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %55, i64 149
  %57 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutBox"* %50) #8
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %52, align 1
  %60 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 4
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %53, align 8
  %62 = bitcast %"class.blink::LayoutBox"* %61 to i1 (%"class.blink::LayoutBox"*)***
  %63 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %63, i64 148
  %65 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutBox"* %61) #8
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %60, align 4
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  %71 = load i96, i96* %70, align 4
  %72 = lshr i96 %71, 33
  %73 = trunc i96 %72 to i8
  %74 = and i8 %73, 1
  br label %75

75:                                               ; preds = %45, %48
  %76 = phi i8 [ 0, %45 ], [ %74, %48 ]
  %77 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 5
  store i8 %76, i8* %77, align 1
  %78 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 6
  %79 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %78 to i8*
  %80 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 4 %80, i64 16, i1 false)
  %81 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 7
  %82 = bitcast %"struct.blink::PhysicalSize"* %81 to i64*
  store i64 %6, i64* %82, align 8
  %83 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8
  %84 = bitcast %"struct.blink::PhysicalRect"* %83 to i8*
  %85 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  %86 = bitcast %"struct.blink::PhysicalRect"* %85 to i8*
  %87 = bitcast %"struct.blink::NGPhysicalBoxStrut"* %3 to i64*
  %88 = bitcast %"struct.blink::PhysicalRect"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %88, i8 0, i64 32, i1 false)
  %89 = load i64, i64* %87, align 4
  %90 = trunc i64 %89 to i32
  %91 = lshr i64 %89, 32
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %3, i64 0, i32 2
  %94 = bitcast %"class.blink::LayoutUnit"* %93 to i64*
  %95 = load i64, i64* %94, align 4
  %96 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %4, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %97) #8
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !5
  %104 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %4, i64 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %105, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %105) #8
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !5
  %112 = trunc i64 %95 to i32
  %113 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %4, i64 0, i32 2, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp slt i32 %114, 0
  %116 = select i1 %115, i32 -2147483648, i32 2147483647
  %117 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %114) #8
  %118 = extractvalue { i32, i1 } %117, 1
  %119 = extractvalue { i32, i1 } %117, 0
  %120 = select i1 %118, i32 %116, i32 %119, !prof !5
  %121 = lshr i64 %95, 32
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %4, i64 0, i32 3, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 0
  %126 = select i1 %125, i32 -2147483648, i32 2147483647
  %127 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 %124) #8
  %128 = extractvalue { i32, i1 } %127, 1
  %129 = extractvalue { i32, i1 } %127, 0
  %130 = select i1 %128, i32 %126, i32 %129, !prof !5
  %131 = zext i32 %130 to i64
  %132 = icmp slt i32 %111, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %111) #8
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !5
  %138 = trunc i64 %6 to i32
  %139 = icmp sgt i32 %137, -1
  %140 = select i1 %139, i32 -2147483648, i32 2147483647
  %141 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %138, i32 %137) #8
  %142 = extractvalue { i32, i1 } %141, 1
  %143 = extractvalue { i32, i1 } %141, 0
  %144 = select i1 %142, i32 %140, i32 %143, !prof !5
  %145 = icmp sgt i32 %144, 0
  %146 = select i1 %145, i32 %144, i32 0
  %147 = icmp slt i32 %120, 0
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %120) #8
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !5
  %153 = lshr i64 %6, 32
  %154 = trunc i64 %153 to i32
  %155 = icmp sgt i32 %152, -1
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %154, i32 %152) #8
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !5
  %161 = icmp sgt i32 %160, 0
  %162 = select i1 %161, i32 %160, i32 0
  %163 = zext i32 %103 to i64
  %164 = shl nuw i64 %163, 32
  %165 = or i64 %164, %131
  %166 = zext i32 %162 to i64
  %167 = shl nuw nsw i64 %166, 32
  %168 = zext i32 %146 to i64
  %169 = or i64 %167, %168
  %170 = bitcast %"struct.blink::PhysicalRect"* %83 to i64*
  store i64 %165, i64* %170, align 8
  %171 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1
  %172 = bitcast %"struct.blink::PhysicalSize"* %171 to i64*
  store i64 %169, i64* %172, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 4 %84, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !6
  %13 = icmp eq i8 %12, 0
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %15 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8
  br i1 %13, label %33, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %20) #8
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !5
  store i32 %26, i32* %3, align 4
  %27 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, %26
  %31 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %32 = select i1 %30, %"class.blink::LayoutUnit"* %27, %"class.blink::LayoutUnit"* %31
  br label %42

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %37, %39
  %41 = select i1 %40, %"class.blink::LayoutUnit"* %35, %"class.blink::LayoutUnit"* %34
  br label %42

42:                                               ; preds = %33, %16
  %43 = phi i32 [ %29, %16 ], [ %39, %33 ]
  %44 = phi i32 [ %18, %16 ], [ %37, %33 ]
  %45 = phi %"class.blink::LayoutUnit"* [ %32, %16 ], [ %41, %33 ]
  %46 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %48 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48)
  %49 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  %50 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50)
  br i1 %13, label %71, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %53) #8
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !5
  store i32 %59, i32* %4, align 4
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %61) #8
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !5
  store i32 %67, i32* %5, align 4
  %68 = icmp slt i32 %67, %59
  %69 = select i1 %68, i32* %5, i32* %4
  %70 = bitcast i32* %69 to %"class.blink::LayoutUnit"*
  br label %84

71:                                               ; preds = %42
  %72 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %74) #8
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !5
  store i32 %80, i32* %6, align 4
  %81 = icmp slt i32 %44, %80
  %82 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %83 = select i1 %81, %"class.blink::LayoutUnit"* %82, %"class.blink::LayoutUnit"* %72
  br label %84

84:                                               ; preds = %71, %51
  %85 = phi %"class.blink::LayoutUnit"* [ %70, %51 ], [ %83, %71 ]
  %86 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %85, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48)
  %88 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 4
  %89 = load i8, i8* %88, align 4, !range !6
  %90 = icmp eq i8 %89, 0
  %91 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  br i1 %90, label %109, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %96) #8
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !5
  store i32 %102, i32* %7, align 4
  %103 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %105, %102
  %107 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %108 = select i1 %106, %"class.blink::LayoutUnit"* %103, %"class.blink::LayoutUnit"* %107
  br label %118

109:                                              ; preds = %84
  %110 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %110, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %111, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %113, %115
  %117 = select i1 %116, %"class.blink::LayoutUnit"* %111, %"class.blink::LayoutUnit"* %110
  br label %118

118:                                              ; preds = %109, %92
  %119 = phi i32 [ %105, %92 ], [ %115, %109 ]
  %120 = phi i32 [ %94, %92 ], [ %113, %109 ]
  %121 = phi %"class.blink::LayoutUnit"* [ %108, %92 ], [ %117, %109 ]
  %122 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %121, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  %124 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124)
  %125 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125)
  %126 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %126)
  br i1 %90, label %147, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 1, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %120, i32 %129) #8
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !5
  store i32 %135, i32* %8, align 4
  %136 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp slt i32 %137, 0
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %137) #8
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !5
  store i32 %143, i32* %9, align 4
  %144 = icmp slt i32 %143, %135
  %145 = select i1 %144, i32* %9, i32* %8
  %146 = bitcast i32* %145 to %"class.blink::LayoutUnit"*
  br label %160

147:                                              ; preds = %118
  %148 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 8, i32 0, i32 1
  %149 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %150, 0
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %150) #8
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !5
  store i32 %156, i32* %10, align 4
  %157 = icmp slt i32 %120, %156
  %158 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %159 = select i1 %157, %"class.blink::LayoutUnit"* %158, %"class.blink::LayoutUnit"* %148
  br label %160

160:                                              ; preds = %147, %127
  %161 = phi %"class.blink::LayoutUnit"* [ %146, %127 ], [ %159, %147 ]
  %162 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %161, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %126)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124)
  %164 = icmp sgt i32 %47, -1
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %47) #8
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !5
  %170 = icmp sgt i32 %123, -1
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %163, i32 %123) #8
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !5
  %176 = zext i32 %123 to i64
  %177 = shl nuw i64 %176, 32
  %178 = zext i32 %47 to i64
  %179 = or i64 %177, %178
  %180 = zext i32 %175 to i64
  %181 = shl nuw i64 %180, 32
  %182 = zext i32 %169 to i64
  %183 = or i64 %181, %182
  %184 = insertvalue { i64, i64 } undef, i64 %179, 0
  %185 = insertvalue { i64, i64 } %184, i64 %183, 1
  ret { i64, i64 } %185
}

declare void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink11NGBlockNode29IsInlineFormattingContextRootEPNS_17NGLayoutInputNodeE(%"class.blink::NGBlockNode"*, %"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGLayoutOverflowCalculator8AddItemsERKN3WTF6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS1_18PartitionAllocatorEEE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.WTF::Vector.1904"* dereferenceable(9232)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN3WTF6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS2_18PartitionAllocatorEEEEEvRKT_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"class.WTF::Vector.1904"* dereferenceable(9232) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN3WTF6VectorINS_22NGFragmentItemsBuilder14ItemWithOffsetELj128ENS2_18PartitionAllocatorEEEEEvRKT_(%"class.blink::NGLayoutOverflowCalculator"*, %"class.WTF::Vector.1904"* dereferenceable(9232)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 4
  %6 = alloca %"struct.blink::PhysicalRect", align 4
  %7 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 0, i64 16, i1 false) #8
  %10 = getelementptr inbounds %"class.WTF::Vector.1904", %"class.WTF::Vector.1904"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1904", %"class.WTF::Vector.1904"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %32, label %17

17:                                               ; preds = %2
  %18 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  %19 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %21 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  %23 = bitcast { i64, i64 }* %4 to i8*
  %24 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  %28 = bitcast { i64, i64 }* %3 to i8*
  %29 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  br label %33

32:                                               ; preds = %166, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void

33:                                               ; preds = %17, %166
  %34 = phi i8 [ 0, %17 ], [ %167, %166 ]
  %35 = phi %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* [ %11, %17 ], [ %168, %166 ]
  %36 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 6
  %37 = load i16, i16* %36, align 8
  %38 = and i16 %37, 7
  %39 = icmp eq i16 %38, 3
  br i1 %39, label %40, label %63

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 1
  %42 = bitcast %union.anon.1868* %41 to %"class.blink::NGPhysicalLineBoxFragment"**
  %43 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %42, align 8
  %44 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %43, null
  br i1 %44, label %166, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %43, i64 0, i32 0, i32 3
  %47 = bitcast i24* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = lshr i32 %48, 5
  %50 = trunc i32 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 2
  %53 = bitcast %"struct.blink::PhysicalRect"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %53, i64 16, i1 false)
  %54 = load i32, i32* %8, align 4
  %55 = icmp eq i32 %54, 0
  %56 = load i32, i32* %9, align 4
  %57 = icmp eq i32 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %166, label %59

59:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* nonnull align 4 %7, i64 16, i1 false)
  %60 = load i8, i8* %21, align 1
  %61 = icmp eq i8 %60, 0
  %62 = select i1 %61, i32* %20, i32* %19
  store i32 0, i32* %62, align 4
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %22, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br label %166

63:                                               ; preds = %33
  %64 = icmp ult i16 %38, 3
  br i1 %64, label %65, label %95

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 2
  %67 = bitcast %"struct.blink::PhysicalRect"* %66 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 2, i32 1
  %70 = bitcast %"struct.blink::PhysicalSize"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = and i8 %34, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %78, label %74, !prof !10

74:                                               ; preds = %65
  %75 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator24AdjustOverflowForHangingERKNS_12PhysicalRectES1_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i64 %68, i64 %71)
  %76 = extractvalue { i64, i64 } %75, 0
  %77 = extractvalue { i64, i64 } %75, 1
  br label %78

78:                                               ; preds = %65, %74
  %79 = phi i64 [ %77, %74 ], [ %71, %65 ]
  %80 = phi i64 [ %76, %74 ], [ %68, %65 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28)
  store i64 %80, i64* %30, align 8
  store i64 %79, i64* %31, align 8
  %81 = load i8, i8* %27, align 2, !range !6
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %29) #8
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = extractvalue { i64, i64 } %84, 1
  store i64 %85, i64* %30, align 8
  store i64 %86, i64* %31, align 8
  br label %87

87:                                               ; preds = %83, %78
  %88 = phi i64 [ %79, %78 ], [ %86, %83 ]
  %89 = trunc i64 %88 to i32
  %90 = icmp ne i32 %89, 0
  %91 = icmp ugt i64 %88, 4294967295
  %92 = and i1 %91, %90
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %22, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %29) #8
  br label %94

94:                                               ; preds = %87, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28)
  br label %166

95:                                               ; preds = %63
  %96 = icmp eq i16 %38, 4
  br i1 %96, label %97, label %166

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 1
  %99 = bitcast %union.anon.1868* %98 to %"class.blink::NGPhysicalBoxFragment"**
  %100 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %99, align 8
  %101 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %100, null
  br i1 %101, label %166, label %102

102:                                              ; preds = %97
  %103 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"class.blink::NGPhysicalBoxFragment"* nonnull dereferenceable(72) %100)
  %104 = extractvalue { i64, i64 } %103, 0
  %105 = trunc i64 %104 to i32
  %106 = lshr i64 %104, 32
  %107 = trunc i64 %106 to i32
  %108 = extractvalue { i64, i64 } %103, 1
  %109 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %110) #8
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !5
  %117 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp slt i32 %118, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %118) #8
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !5
  %125 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %100, i64 0, i32 0, i32 3
  %126 = bitcast i24* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 960
  %129 = icmp ne i32 %128, 128
  %130 = and i8 %34, 1
  %131 = icmp eq i8 %130, 0
  %132 = or i1 %131, %129
  br i1 %132, label %144, label %133

133:                                              ; preds = %102
  %134 = zext i32 %124 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %116 to i64
  %137 = or i64 %135, %136
  %138 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator24AdjustOverflowForHangingERKNS_12PhysicalRectES1_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i64 %137, i64 %108)
  %139 = extractvalue { i64, i64 } %138, 0
  %140 = extractvalue { i64, i64 } %138, 1
  %141 = trunc i64 %139 to i32
  %142 = lshr i64 %139, 32
  %143 = trunc i64 %142 to i32
  br label %144

144:                                              ; preds = %102, %133
  %145 = phi i32 [ %124, %102 ], [ %143, %133 ]
  %146 = phi i32 [ %116, %102 ], [ %141, %133 ]
  %147 = phi i64 [ %108, %102 ], [ %140, %133 ]
  %148 = zext i32 %145 to i64
  %149 = shl nuw i64 %148, 32
  %150 = zext i32 %146 to i64
  %151 = or i64 %149, %150
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  store i64 %151, i64* %25, align 8
  store i64 %147, i64* %26, align 8
  %152 = load i8, i8* %27, align 2, !range !6
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %144
  %155 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %24) #8
  %156 = extractvalue { i64, i64 } %155, 0
  %157 = extractvalue { i64, i64 } %155, 1
  store i64 %156, i64* %25, align 8
  store i64 %157, i64* %26, align 8
  br label %158

158:                                              ; preds = %154, %144
  %159 = phi i64 [ %147, %144 ], [ %157, %154 ]
  %160 = trunc i64 %159 to i32
  %161 = icmp ne i32 %160, 0
  %162 = icmp ugt i64 %159, 4294967295
  %163 = and i1 %162, %161
  br i1 %163, label %164, label %165

164:                                              ; preds = %158
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %22, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %24) #8
  br label %165

165:                                              ; preds = %158, %164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  br label %166

166:                                              ; preds = %40, %95, %45, %59, %97, %165, %94
  %167 = phi i8 [ %34, %94 ], [ %34, %97 ], [ %34, %165 ], [ %51, %59 ], [ %51, %45 ], [ %34, %95 ], [ %34, %40 ]
  %168 = getelementptr inbounds %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset", %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %35, i64 1
  %169 = icmp eq %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"* %168, %15
  br i1 %169, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGLayoutOverflowCalculator16AddItemsInternalIN4base4spanIKNS_14NGFragmentItemELm18446744073709551615EEEEEvRKT_(%"class.blink::NGLayoutOverflowCalculator"*, %"class.base::span"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 4
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"struct.blink::PhysicalRect", align 4
  %9 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 16, i1 false) #8
  %12 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %14, align 8, !noalias !11
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !11
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %16, i64 %18
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.blink::NGFragmentItem"* %16, %"class.blink::NGFragmentItem"* %16, %"class.blink::NGFragmentItem"* %19) #8
  %20 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %14, align 8, !noalias !14
  %24 = load i64, i64* %17, align 8, !noalias !14
  %25 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %23, i64 %24
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.blink::NGFragmentItem"* %23, %"class.blink::NGFragmentItem"* %25, %"class.blink::NGFragmentItem"* %25) #8
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #8
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %13, align 8
  %27 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %21, align 8
  %28 = icmp eq %"class.blink::NGFragmentItem"* %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %2
  %30 = bitcast %"struct.blink::PhysicalRect"* %8 to i8*
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %8, i64 0, i32 1, i32 1, i32 0
  %33 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 9
  %35 = bitcast { i64, i64 }* %4 to i8*
  %36 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %39 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 2
  %40 = bitcast { i64, i64 }* %3 to i8*
  %41 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  br label %45

44:                                               ; preds = %178, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void

45:                                               ; preds = %29, %178
  %46 = phi i8 [ 0, %29 ], [ %179, %178 ]
  %47 = call dereferenceable(64) %"class.blink::NGFragmentItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  %48 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 6
  %49 = load i16, i16* %48, align 8
  %50 = and i16 %49, 7
  %51 = icmp eq i16 %50, 3
  br i1 %51, label %52, label %75

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 1
  %54 = bitcast %union.anon.1868* %53 to %"class.blink::NGPhysicalLineBoxFragment"**
  %55 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %54, align 8
  %56 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %55, null
  br i1 %56, label %178, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %55, i64 0, i32 0, i32 3
  %59 = bitcast i24* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 5
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 1
  %64 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 2
  %65 = bitcast %"struct.blink::PhysicalRect"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 %65, i64 16, i1 false)
  %66 = load i32, i32* %10, align 4
  %67 = icmp eq i32 %66, 0
  %68 = load i32, i32* %11, align 4
  %69 = icmp eq i32 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %178, label %71

71:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* nonnull align 4 %9, i64 16, i1 false)
  %72 = load i8, i8* %33, align 1
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32* %32, i32* %31
  store i32 0, i32* %74, align 4
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %34, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  br label %178

75:                                               ; preds = %45
  %76 = icmp ult i16 %50, 3
  br i1 %76, label %77, label %107

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 2
  %79 = bitcast %"struct.blink::PhysicalRect"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 2, i32 1
  %82 = bitcast %"struct.blink::PhysicalSize"* %81 to i64*
  %83 = load i64, i64* %82, align 4
  %84 = and i8 %46, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %90, label %86, !prof !10

86:                                               ; preds = %77
  %87 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator24AdjustOverflowForHangingERKNS_12PhysicalRectES1_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i64 %80, i64 %83)
  %88 = extractvalue { i64, i64 } %87, 0
  %89 = extractvalue { i64, i64 } %87, 1
  br label %90

90:                                               ; preds = %77, %86
  %91 = phi i64 [ %89, %86 ], [ %83, %77 ]
  %92 = phi i64 [ %88, %86 ], [ %80, %77 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  store i64 %92, i64* %42, align 8
  store i64 %91, i64* %43, align 8
  %93 = load i8, i8* %39, align 2, !range !6
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %41) #8
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  store i64 %97, i64* %42, align 8
  store i64 %98, i64* %43, align 8
  br label %99

99:                                               ; preds = %95, %90
  %100 = phi i64 [ %91, %90 ], [ %98, %95 ]
  %101 = trunc i64 %100 to i32
  %102 = icmp ne i32 %101, 0
  %103 = icmp ugt i64 %100, 4294967295
  %104 = and i1 %103, %102
  br i1 %104, label %105, label %106

105:                                              ; preds = %99
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %34, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %41) #8
  br label %106

106:                                              ; preds = %99, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  br label %178

107:                                              ; preds = %75
  %108 = icmp eq i16 %50, 4
  br i1 %108, label %109, label %178

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 1
  %111 = bitcast %union.anon.1868* %110 to %"class.blink::NGPhysicalBoxFragment"**
  %112 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %111, align 8
  %113 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %112, null
  br i1 %113, label %178, label %114

114:                                              ; preds = %109
  %115 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"class.blink::NGPhysicalBoxFragment"* nonnull dereferenceable(72) %112)
  %116 = extractvalue { i64, i64 } %115, 0
  %117 = trunc i64 %116 to i32
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = extractvalue { i64, i64 } %115, 1
  %121 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 2, i32 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp slt i32 %122, 0
  %124 = select i1 %123, i32 -2147483648, i32 2147483647
  %125 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %122) #8
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 %124, i32 %127, !prof !5
  %129 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %47, i64 0, i32 2, i32 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp slt i32 %130, 0
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %130) #8
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !5
  %137 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %112, i64 0, i32 0, i32 3
  %138 = bitcast i24* %137 to i32*
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 960
  %141 = icmp ne i32 %140, 128
  %142 = and i8 %46, 1
  %143 = icmp eq i8 %142, 0
  %144 = or i1 %143, %141
  br i1 %144, label %156, label %145

145:                                              ; preds = %114
  %146 = zext i32 %136 to i64
  %147 = shl nuw i64 %146, 32
  %148 = zext i32 %128 to i64
  %149 = or i64 %147, %148
  %150 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator24AdjustOverflowForHangingERKNS_12PhysicalRectES1_(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i64 %149, i64 %120)
  %151 = extractvalue { i64, i64 } %150, 0
  %152 = extractvalue { i64, i64 } %150, 1
  %153 = trunc i64 %151 to i32
  %154 = lshr i64 %151, 32
  %155 = trunc i64 %154 to i32
  br label %156

156:                                              ; preds = %114, %145
  %157 = phi i32 [ %136, %114 ], [ %155, %145 ]
  %158 = phi i32 [ %128, %114 ], [ %153, %145 ]
  %159 = phi i64 [ %120, %114 ], [ %152, %145 ]
  %160 = zext i32 %157 to i64
  %161 = shl nuw i64 %160, 32
  %162 = zext i32 %158 to i64
  %163 = or i64 %161, %162
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  store i64 %163, i64* %37, align 8
  store i64 %159, i64* %38, align 8
  %164 = load i8, i8* %39, align 2, !range !6
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %156
  %167 = call { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator29AdjustOverflowForScrollOriginERKNS_12PhysicalRectE(%"class.blink::NGLayoutOverflowCalculator"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #8
  %168 = extractvalue { i64, i64 } %167, 0
  %169 = extractvalue { i64, i64 } %167, 1
  store i64 %168, i64* %37, align 8
  store i64 %169, i64* %38, align 8
  br label %170

170:                                              ; preds = %166, %156
  %171 = phi i64 [ %159, %156 ], [ %169, %166 ]
  %172 = trunc i64 %171 to i32
  %173 = icmp ne i32 %172, 0
  %174 = icmp ugt i64 %171, 4294967295
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %177

176:                                              ; preds = %170
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %34, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %36) #8
  br label %177

177:                                              ; preds = %170, %176
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  br label %178

178:                                              ; preds = %52, %107, %57, %71, %109, %177, %106
  %179 = phi i8 [ %46, %106 ], [ %46, %109 ], [ %46, %177 ], [ %63, %71 ], [ %63, %57 ], [ %46, %107 ], [ %46, %52 ]
  %180 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %6)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %7) #8
  %181 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %13, align 8
  %182 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %21, align 8
  %183 = icmp eq %"class.blink::NGFragmentItem"* %181, %182
  br i1 %183, label %44, label %45
}

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_18NGPhysicalBoxStrutE(%"struct.blink::PhysicalRect"*, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink14NGTableBorders32GetCollapsedBorderVisualSizeDiffEv(%"class.blink::NGTableBorders"*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator24AdjustOverflowForHangingERKNS_12PhysicalRectES1_(%"class.blink::NGLayoutOverflowCalculator"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i64, i64) local_unnamed_addr #3 align 2 {
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = trunc i64 %3 to i32
  %9 = lshr i64 %3, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %49

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %5
  %18 = select i1 %17, i32 %16, i32 %5
  %19 = icmp slt i32 %8, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %8) #8
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !5
  %25 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %26) #8
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !5
  %33 = icmp sgt i32 %24, %32
  br i1 %33, label %34, label %84

34:                                               ; preds = %14
  %35 = icmp sgt i32 %24, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %24) #8
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !5
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %40) #8
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !5
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  br label %84

49:                                               ; preds = %4
  %50 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %7
  %53 = select i1 %52, i32 %51, i32 %7
  %54 = icmp slt i32 %10, 0
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %10) #8
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !5
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %61) #8
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !5
  %68 = icmp sgt i32 %59, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %49
  %70 = icmp sgt i32 %59, -1
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %67, i32 %59) #8
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !5
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %75) #8
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !5
  %82 = icmp sgt i32 %81, 0
  %83 = select i1 %82, i32 %81, i32 0
  br label %84

84:                                               ; preds = %49, %69, %14, %34
  %85 = phi i32 [ %18, %34 ], [ %18, %14 ], [ %5, %69 ], [ %5, %49 ]
  %86 = phi i32 [ %7, %34 ], [ %7, %14 ], [ %53, %69 ], [ %53, %49 ]
  %87 = phi i32 [ %48, %34 ], [ %8, %14 ], [ %8, %69 ], [ %8, %49 ]
  %88 = phi i32 [ %10, %34 ], [ %10, %14 ], [ %83, %69 ], [ %10, %49 ]
  %89 = zext i32 %86 to i64
  %90 = shl nuw i64 %89, 32
  %91 = zext i32 %85 to i64
  %92 = or i64 %90, %91
  %93 = zext i32 %88 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %87 to i64
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } undef, i64 %92, 0
  %98 = insertvalue { i64, i64 } %97, i64 %96, 1
  ret { i64, i64 } %98
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGLayoutOverflowCalculator"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"struct.blink::PhysicalRect", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.blink::NGPhysicalBoxStrut"*
  %9 = alloca %"class.absl::optional.1909", align 8
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %"class.blink::FloatRect"*
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 3
  %13 = bitcast i24* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %14, 960
  %18 = icmp ne i32 %17, 256
  %19 = and i1 %16, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment14LayoutOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %1)
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  br label %366

24:                                               ; preds = %2
  %25 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 2
  %31 = bitcast %"struct.blink::PhysicalSize"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.blink::PhysicalRect"* %3 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1
  %35 = bitcast %"struct.blink::PhysicalSize"* %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0, i32 1
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = lshr i32 %14, 10
  %39 = and i32 %38, 3
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %48

44:                                               ; preds = %24
  %45 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %37, i32 %39) #8
  %46 = load i32, i32* %13, align 8
  %47 = and i32 %46, 960
  br label %48

48:                                               ; preds = %41, %44
  %49 = phi i32 [ %17, %41 ], [ %47, %44 ]
  %50 = phi i32 [ %14, %41 ], [ %46, %44 ]
  %51 = phi %"class.blink::ComputedStyle"* [ %43, %41 ], [ %45, %44 ]
  %52 = and i32 %50, 64
  %53 = icmp eq i32 %52, 0
  %54 = icmp ne i32 %49, 256
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %113

56:                                               ; preds = %48
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %65, i64 0, i32 45
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %113, label %70

70:                                               ; preds = %56
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = and i96 %73, 1207959552
  %75 = icmp eq i96 %74, 134217728
  br i1 %75, label %113, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.blink::LayoutObject"* %57 to i1 (%"class.blink::LayoutObject"*, i32)***
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, i64 92
  %80 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* %57, i32 43) #8
  br i1 %81, label %113, label %82

82:                                               ; preds = %76
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, i64 92
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %57, i32 46) #8
  br i1 %86, label %107, label %87

87:                                               ; preds = %82
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, i64 92
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* %57, i32 48) #8
  br i1 %91, label %107, label %92

92:                                               ; preds = %87
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %93, i64 92
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* %57, i32 45) #8
  br i1 %96, label %107, label %97

97:                                               ; preds = %92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, i64 92
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::LayoutObject"* %57, i32 49) #8
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %77, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, i64 92
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.blink::LayoutObject"* %57, i32 50) #8
  br i1 %106, label %107, label %266

107:                                              ; preds = %82, %87, %92, %97, %102
  %108 = bitcast %"class.blink::LayoutObject"* %57 to i1 (%"class.blink::LayoutObject"*)***
  %109 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %109, i64 24
  %111 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutObject"* %57) #8
  br i1 %112, label %266, label %113

113:                                              ; preds = %70, %76, %56, %48, %107
  %114 = load i32, i32* %13, align 8
  %115 = and i32 %114, 960
  %116 = icmp eq i32 %115, 128
  br i1 %116, label %266, label %117

117:                                              ; preds = %113
  %118 = and i32 %114, 64
  %119 = icmp eq i32 %118, 0
  %120 = icmp ne i32 %115, 256
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %137

122:                                              ; preds = %117
  %123 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %124 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 0, i32 4
  %125 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %124 to i96*
  %126 = load i96, i96* %125, align 4
  %127 = and i96 %126, 464227514732017603087171584
  %128 = icmp eq i96 %127, 464227514732017603087171584
  br i1 %128, label %129, label %137

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 3, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %131, i64 0, i32 3, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %133, i64 0, i32 38, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %266, label %137

137:                                              ; preds = %117, %129, %122
  %138 = and i32 %114, 4096
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %266

140:                                              ; preds = %137
  %141 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #8
  %142 = bitcast { i64, i64 }* %4 to i32*
  %143 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %145 = bitcast i64* %144 to i32*
  %146 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %147 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment14LayoutOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %1)
  %148 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %149 = extractvalue { i64, i64 } %147, 0
  store i64 %149, i64* %148, align 8
  %150 = extractvalue { i64, i64 } %147, 1
  store i64 %150, i64* %144, align 8
  %151 = load i32, i32* %13, align 8
  %152 = and i32 %151, 64
  %153 = icmp eq i32 %152, 0
  %154 = and i32 %151, 960
  %155 = icmp ne i32 %154, 256
  %156 = and i1 %153, %155
  br i1 %156, label %157, label %265

157:                                              ; preds = %140
  %158 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 4
  %160 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %159 to i96*
  %161 = load i96, i96* %160, align 4
  %162 = and i96 %161, 8589934592
  %163 = icmp eq i96 %162, 0
  br i1 %163, label %265, label %164

164:                                              ; preds = %157
  %165 = icmp eq %"class.blink::LayoutObject"* %158, null
  %166 = lshr i96 %161, 87
  %167 = trunc i96 %166 to i32
  %168 = and i32 %167, 3
  %169 = select i1 %165, i32 0, i32 %168
  %170 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 3, i32 0, i32 0
  %171 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %171, i64 0, i32 3, i32 0, i32 0
  %173 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %173, i64 0, i32 38, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %252, label %177

177:                                              ; preds = %164
  %178 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178) #8
  %179 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 1, i32 0
  %181 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %183 = load i64, i64* %31, align 8
  %184 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  store i64 0, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1
  %186 = bitcast %"struct.blink::PhysicalSize"* %185 to i64*
  store i64 %183, i64* %186, align 8
  %187 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #8
  %188 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 1
  %189 = bitcast i24* %188 to i32*
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 1024
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %220, label %193

193:                                              ; preds = %177
  %194 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 6, i64 %196
  %198 = and i32 %190, 2
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %193
  %201 = bitcast %"struct.blink::NGLink"* %197 to %"struct.blink::PhysicalRect"*
  br label %212

202:                                              ; preds = %193
  %203 = bitcast %"struct.blink::NGLink"* %197 to i8*
  %204 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %197, i64 1
  %205 = bitcast %"struct.blink::NGLink"* %204 to i32*
  %206 = load i32, i32* %205, align 8
  %207 = shl i32 %206, 6
  %208 = or i32 %207, 24
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %203, i64 %209
  %211 = bitcast i8* %210 to %"struct.blink::PhysicalRect"*
  br label %212

212:                                              ; preds = %202, %200
  %213 = phi %"struct.blink::PhysicalRect"* [ %211, %202 ], [ %201, %200 ]
  %214 = and i32 %190, 64
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %213, i64 1
  %217 = select i1 %215, %"struct.blink::PhysicalRect"* %213, %"struct.blink::PhysicalRect"* %216
  %218 = bitcast %"struct.blink::PhysicalRect"* %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 4
  br label %220

220:                                              ; preds = %177, %212
  %221 = phi <2 x i64> [ %219, %212 ], [ zeroinitializer, %177 ]
  store <2 x i64> %221, <2 x i64>* %7, align 16
  call void @_ZN5blink12PhysicalRect8ContractERKNS_18NGPhysicalBoxStrutE(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::NGPhysicalBoxStrut"* nonnull dereferenceable(16) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #8
  %222 = load i32, i32* %180, align 4
  %223 = icmp sgt i32 %175, -1
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %222, i32 %175) #8
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !5
  store i32 %228, i32* %180, align 4
  %229 = load i32, i32* %179, align 8
  %230 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %229, i32 %175) #8
  %231 = extractvalue { i32, i1 } %230, 1
  %232 = extractvalue { i32, i1 } %230, 0
  %233 = select i1 %231, i32 %224, i32 %232, !prof !5
  store i32 %233, i32* %179, align 8
  %234 = icmp slt i32 %175, 0
  %235 = select i1 %234, i32 -2147483648, i32 2147483647
  %236 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %175, i32 %175) #8
  %237 = extractvalue { i32, i1 } %236, 1
  %238 = extractvalue { i32, i1 } %236, 0
  %239 = select i1 %237, i32 %235, i32 %238, !prof !5
  %240 = load i32, i32* %181, align 8
  %241 = icmp slt i32 %239, 0
  %242 = select i1 %241, i32 -2147483648, i32 2147483647
  %243 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %239) #8
  %244 = extractvalue { i32, i1 } %243, 1
  %245 = extractvalue { i32, i1 } %243, 0
  %246 = select i1 %244, i32 %242, i32 %245, !prof !5
  store i32 %246, i32* %181, align 8
  %247 = load i32, i32* %182, align 4
  %248 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %247, i32 %239) #8
  %249 = extractvalue { i32, i1 } %248, 1
  %250 = extractvalue { i32, i1 } %248, 0
  %251 = select i1 %249, i32 %242, i32 %250, !prof !5
  store i32 %251, i32* %182, align 4
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178) #8
  br label %265

252:                                              ; preds = %164
  %253 = and i32 %169, 1
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %258, label %255

255:                                              ; preds = %252
  store i32 0, i32* %142, align 8
  %256 = load i64, i64* %31, align 8
  %257 = trunc i64 %256 to i32
  store i32 %257, i32* %145, align 8
  br label %258

258:                                              ; preds = %252, %255
  %259 = and i32 %169, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %258
  store i32 0, i32* %143, align 4
  %262 = load i64, i64* %31, align 8
  %263 = lshr i64 %262, 32
  %264 = trunc i64 %263 to i32
  store i32 %264, i32* %146, align 4
  br label %265

265:                                              ; preds = %157, %140, %220, %261, %258
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #8
  br label %266

266:                                              ; preds = %137, %102, %107, %113, %129, %265
  %267 = getelementptr inbounds %"class.absl::optional.1909", %"class.absl::optional.1909"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %267) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %267, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1913 } } } }, { { { { i8, [7 x i8], %union.anon.1913 } } } }* @__const._ZN5blink26NGLayoutOverflowCalculator28LayoutOverflowForPropagationERKNS_21NGPhysicalBoxFragmentE.transform, i64 0, i32 0, i32 0, i32 0, i32 0), i64 136, i1 false)
  %268 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 0
  %269 = getelementptr inbounds %"class.blink::NGLayoutOverflowCalculator", %"class.blink::NGLayoutOverflowCalculator"* %0, i64 0, i32 7
  %270 = bitcast %"struct.blink::PhysicalSize"* %269 to i64*
  %271 = load i64, i64* %270, align 8
  call void @_ZNK5blink11NGBlockNode28GetTransformForChildFragmentERKNS_21NGPhysicalBoxFragmentENS_12PhysicalSizeE(%"class.absl::optional.1909"* nonnull sret %9, %"class.blink::NGBlockNode"* %268, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %1, i64 %271) #8
  %272 = load i8, i8* %267, align 8, !range !6
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %266
  %275 = load i64, i64* %33, align 8
  %276 = load i64, i64* %35, align 8
  br label %363

277:                                              ; preds = %266
  %278 = getelementptr inbounds %"class.absl::optional.1909", %"class.absl::optional.1909"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %279 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %279) #8
  %280 = load i32, i32* %26, align 8
  %281 = sitofp i32 %280 to float
  %282 = fmul float %281, 1.562500e-02
  %283 = load i32, i32* %27, align 4
  %284 = sitofp i32 %283 to float
  %285 = fmul float %284, 1.562500e-02
  %286 = load i32, i32* %28, align 8
  %287 = sitofp i32 %286 to float
  %288 = fmul float %287, 1.562500e-02
  %289 = load i32, i32* %29, align 4
  %290 = sitofp i32 %289 to float
  %291 = fmul float %290, 1.562500e-02
  %292 = insertelement <2 x float> undef, float %282, i32 0
  %293 = insertelement <2 x float> %292, float %285, i32 1
  %294 = insertelement <2 x float> undef, float %288, i32 0
  %295 = insertelement <2 x float> %294, float %291, i32 1
  %296 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> %293, <2 x float>* %296, align 8
  %297 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %295, <2 x float>* %297, align 8
  %298 = call { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"* %278, %"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #8
  %299 = extractvalue { <2 x float>, <2 x float> } %298, 0
  %300 = extractvalue { <2 x float>, <2 x float> } %298, 1
  %301 = extractelement <2 x float> %299, i32 0
  %302 = fmul float %301, 6.400000e+01
  %303 = call float @llvm.floor.f32(float %302) #8
  %304 = fcmp ult float %303, 0xC1E0000000000000
  %305 = fcmp ugt float %303, 0x41DFFFFFE0000000
  %306 = fcmp ogt float %303, 0xC1E0000000000000
  %307 = select i1 %306, float %303, float 0xC1E0000000000000
  %308 = fptosi float %307 to i32
  %309 = select i1 %304, i32 0, i32 2147483647
  %310 = select i1 %305, i32 %309, i32 %308
  %311 = extractelement <2 x float> %299, i32 1
  %312 = fmul float %311, 6.400000e+01
  %313 = call float @llvm.floor.f32(float %312) #8
  %314 = fcmp ult float %313, 0xC1E0000000000000
  %315 = fcmp ugt float %313, 0x41DFFFFFE0000000
  %316 = fcmp ogt float %313, 0xC1E0000000000000
  %317 = select i1 %316, float %313, float 0xC1E0000000000000
  %318 = fptosi float %317 to i32
  %319 = select i1 %314, i32 0, i32 2147483647
  %320 = select i1 %315, i32 %319, i32 %318
  %321 = extractelement <2 x float> %300, i32 0
  %322 = fadd float %301, %321
  %323 = fmul float %322, 6.400000e+01
  %324 = call float @llvm.ceil.f32(float %323) #8
  %325 = fcmp ult float %324, 0xC1E0000000000000
  %326 = fcmp ugt float %324, 0x41DFFFFFE0000000
  %327 = fcmp ogt float %324, 0xC1E0000000000000
  %328 = select i1 %327, float %324, float 0xC1E0000000000000
  %329 = fptosi float %328 to i32
  %330 = select i1 %325, i32 0, i32 2147483647
  %331 = select i1 %326, i32 %330, i32 %329
  %332 = icmp sgt i32 %310, -1
  %333 = select i1 %332, i32 -2147483648, i32 2147483647
  %334 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %331, i32 %310) #8
  %335 = extractvalue { i32, i1 } %334, 1
  %336 = extractvalue { i32, i1 } %334, 0
  %337 = select i1 %335, i32 %333, i32 %336, !prof !5
  %338 = extractelement <2 x float> %300, i32 1
  %339 = fadd float %311, %338
  %340 = fmul float %339, 6.400000e+01
  %341 = call float @llvm.ceil.f32(float %340) #8
  %342 = fcmp ult float %341, 0xC1E0000000000000
  %343 = fcmp ugt float %341, 0x41DFFFFFE0000000
  %344 = fcmp ogt float %341, 0xC1E0000000000000
  %345 = select i1 %344, float %341, float 0xC1E0000000000000
  %346 = fptosi float %345 to i32
  %347 = select i1 %342, i32 0, i32 2147483647
  %348 = select i1 %343, i32 %347, i32 %346
  %349 = icmp sgt i32 %320, -1
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %348, i32 %320) #8
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %350, i32 %353, !prof !5
  %355 = zext i32 %320 to i64
  %356 = shl nuw i64 %355, 32
  %357 = zext i32 %310 to i64
  %358 = or i64 %356, %357
  %359 = zext i32 %354 to i64
  %360 = shl nuw i64 %359, 32
  %361 = zext i32 %337 to i64
  %362 = or i64 %360, %361
  store i64 %358, i64* %33, align 8
  store i64 %362, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %279) #8
  br label %363

363:                                              ; preds = %274, %277
  %364 = phi i64 [ %276, %274 ], [ %362, %277 ]
  %365 = phi i64 [ %275, %274 ], [ %358, %277 ]
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %267) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  br label %366

366:                                              ; preds = %363, %20
  %367 = phi i64 [ %365, %363 ], [ %22, %20 ]
  %368 = phi i64 [ %364, %363 ], [ %23, %20 ]
  %369 = insertvalue { i64, i64 } undef, i64 %367, 0
  %370 = insertvalue { i64, i64 } %369, i64 %368, 1
  ret { i64, i64 } %370
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment14LayoutOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 3
  %3 = bitcast i24* %2 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 524288
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %62, label %7

7:                                                ; preds = %1
  %8 = and i32 %4, 64
  %9 = icmp eq i32 %8, 0
  %10 = and i32 %4, 960
  %11 = icmp ne i32 %10, 256
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.blink::LayoutObject"** %14 to %"class.blink::LayoutBox"**
  %16 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %17 = bitcast %"class.blink::LayoutBox"* %16 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  br label %18

18:                                               ; preds = %7, %13
  %19 = phi i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** [ %17, %13 ], [ null, %7 ]
  %20 = phi %"class.blink::LayoutBox"* [ %16, %13 ], [ null, %7 ]
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 9, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %22, align 8
  %24 = icmp eq %"struct.blink::BoxOverflowModel"* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.blink::LayoutRect"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = bitcast %"class.blink::LayoutSize"* %33 to i64*
  %35 = load i64, i64* %34, align 4
  br label %40

36:                                               ; preds = %25, %18
  %37 = tail call { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"* %20) #8
  %38 = extractvalue { i64, i64 } %37, 0
  %39 = extractvalue { i64, i64 } %37, 1
  br label %40

40:                                               ; preds = %36, %29
  %41 = phi i64 [ %32, %29 ], [ %38, %36 ]
  %42 = phi i64 [ %35, %29 ], [ %39, %36 ]
  %43 = trunc i64 %41 to i32
  %44 = and i64 %41, -4294967296
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 5070602400912917605986812821504
  br i1 %51, label %52, label %58, !prof !5

52:                                               ; preds = %40
  %53 = trunc i64 %42 to i32
  %54 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %19, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %54, i64 106
  %56 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutObject"* %21, i32 %43, i32 %53, %"class.blink::LayoutBox"* null) #8
  br label %58

58:                                               ; preds = %40, %52
  %59 = phi i32 [ %57, %52 ], [ %43, %40 ]
  %60 = zext i32 %59 to i64
  %61 = or i64 %44, %60
  br label %98

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 1
  %64 = bitcast i24* %63 to i32*
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 64
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 0, i32 2
  %70 = bitcast %"struct.blink::PhysicalSize"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  br label %98

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %0, i64 0, i32 6, i64 %75
  %77 = and i32 %65, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"struct.blink::NGLink"* %76 to %"struct.blink::PhysicalRect"*
  br label %91

81:                                               ; preds = %72
  %82 = bitcast %"struct.blink::NGLink"* %76 to i8*
  %83 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %76, i64 1
  %84 = bitcast %"struct.blink::NGLink"* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = shl i32 %85, 6
  %87 = or i32 %86, 24
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %82, i64 %88
  %90 = bitcast i8* %89 to %"struct.blink::PhysicalRect"*
  br label %91

91:                                               ; preds = %79, %81
  %92 = phi %"struct.blink::PhysicalRect"* [ %90, %81 ], [ %80, %79 ]
  %93 = bitcast %"struct.blink::PhysicalRect"* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %92, i64 0, i32 1
  %96 = bitcast %"struct.blink::PhysicalSize"* %95 to i64*
  %97 = load i64, i64* %96, align 4
  br label %98

98:                                               ; preds = %91, %68, %58
  %99 = phi i64 [ 0, %68 ], [ %94, %91 ], [ %61, %58 ]
  %100 = phi i64 [ %71, %68 ], [ %97, %91 ], [ %42, %58 ]
  %101 = insertvalue { i64, i64 } undef, i64 %99, 0
  %102 = insertvalue { i64, i64 } %101, i64 %100, 1
  ret { i64, i64 } %102
}

declare void @_ZN5blink12PhysicalRect8ContractERKNS_18NGPhysicalBoxStrutE(%"struct.blink::PhysicalRect"*, %"struct.blink::NGPhysicalBoxStrut"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink11NGBlockNode28GetTransformForChildFragmentERKNS_21NGPhysicalBoxFragmentENS_12PhysicalSizeE(%"class.absl::optional.1909"* sret, %"class.blink::NGBlockNode"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), i64) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

declare { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare { i64, i64 } @_ZNK5blink20WritingModeConverter14SlowToPhysicalERKNS_11LogicalRectE(%"class.blink::WritingModeConverter"*, %"struct.blink::LogicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::NGFragmentItem"* @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %11 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGFragmentItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %17 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  ret %"class.blink::NGFragmentItem"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %11 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %12 = icmp eq %"class.blink::NGFragmentItem"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %17 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %16, i8* %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #8
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %26, i64 1
  store %"class.blink::NGFragmentItem"* %27, %"class.blink::NGFragmentItem"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::NGFragmentItem"**
  %4 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.blink::NGFragmentItem"* %4) #8
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14NGFragmentItemE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::NGFragmentItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGFragmentItem"*, align 8
  %8 = alloca %"class.blink::NGFragmentItem"*, align 8
  %9 = alloca %"class.blink::NGFragmentItem"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::NGFragmentItem"* %1, %"class.blink::NGFragmentItem"** %7, align 8
  store %"class.blink::NGFragmentItem"* %2, %"class.blink::NGFragmentItem"** %8, align 8
  store %"class.blink::NGFragmentItem"* %3, %"class.blink::NGFragmentItem"** %9, align 8
  %14 = ptrtoint %"class.blink::NGFragmentItem"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::NGFragmentItem"* %2 to i64
  %18 = bitcast %"class.blink::NGFragmentItem"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::NGFragmentItem"* %3 to i64
  %21 = bitcast %"class.blink::NGFragmentItem"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::NGFragmentItem"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::NGFragmentItem"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %30 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %29, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %8, align 8
  %43 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %9, align 8
  %44 = icmp ugt %"class.blink::NGFragmentItem"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NGFragmentItem"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %49 = bitcast %"class.blink::NGFragmentItem"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %48, i8* %50) #8
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #8
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink14NGFragmentItemEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %11, align 8
  %15 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %12, align 8
  %16 = icmp eq %"class.blink::NGFragmentItem"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %20, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %32, align 8
  %36 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %33, align 8
  %37 = icmp eq %"class.blink::NGFragmentItem"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::NGFragmentItem"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  %42 = bitcast %"class.blink::NGFragmentItem"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink14NGFragmentItemEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %43) #8
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #8
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink21NGPhysicalBoxFragment12InflowBoundsEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink21NGPhysicalBoxFragment12InflowBoundsEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base4spanIKN5blink14NGFragmentItemELm18446744073709551615EE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base4spanIKN5blink14NGFragmentItemELm18446744073709551615EE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base4spanIKN5blink14NGFragmentItemELm18446744073709551615EE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base4spanIKN5blink14NGFragmentItemELm18446744073709551615EE3endEv"}
