; ModuleID = '../../third_party/dawn/src/dawn_native/CommandAllocator.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/CommandAllocator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::CommandIterator" = type <{ %"class.std::__1::vector", i8*, i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"*, %"class.std::__1::__compressed_pair" }
%"struct.dawn_native::BlockDef" = type { i64, i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.dawn_native::BlockDef"* }
%"class.dawn_native::CommandAllocator" = type <{ %"class.std::__1::vector", i64, i8*, i8*, [1 x i32], [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN11dawn_native15CommandIteratorC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::CommandIterator"*), void (%"class.dawn_native::CommandIterator"*)* @_ZN11dawn_native15CommandIteratorC2Ev
@_ZN11dawn_native15CommandIteratorD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::CommandIterator"*), void (%"class.dawn_native::CommandIterator"*)* @_ZN11dawn_native15CommandIteratorD2Ev
@_ZN11dawn_native15CommandIteratorC1EOS0_ = hidden unnamed_addr alias void (%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandIterator"*), void (%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandIterator"*)* @_ZN11dawn_native15CommandIteratorC2EOS0_
@_ZN11dawn_native15CommandIteratorC1EONS_16CommandAllocatorE = hidden unnamed_addr alias void (%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandAllocator"*), void (%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandAllocator"*)* @_ZN11dawn_native15CommandIteratorC2EONS_16CommandAllocatorE
@_ZN11dawn_native16CommandAllocatorC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::CommandAllocator"*), void (%"class.dawn_native::CommandAllocator"*)* @_ZN11dawn_native16CommandAllocatorC2Ev
@_ZN11dawn_native16CommandAllocatorD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::CommandAllocator"*), void (%"class.dawn_native::CommandAllocator"*)* @_ZN11dawn_native16CommandAllocatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIteratorC2Ev(%"class.dawn_native::CommandIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %3 = bitcast %"class.dawn_native::CommandIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  store i32 -1, i32* %2, align 8
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 2
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %3, align 8
  %5 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %5, align 8
  %7 = icmp eq %"struct.dawn_native::BlockDef"* %4, %6
  %8 = ptrtoint %"struct.dawn_native::BlockDef"* %4 to i64
  %9 = ptrtoint %"struct.dawn_native::BlockDef"* %6 to i64
  br i1 %7, label %10, label %66

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i32**
  store i32* %11, i32** %13, align 8
  %14 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %14, align 8
  %16 = icmp ult %"struct.dawn_native::BlockDef"* %4, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = bitcast %"struct.dawn_native::BlockDef"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #10
  %19 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %4, i64 1
  %20 = ptrtoint %"struct.dawn_native::BlockDef"* %19 to i64
  %21 = bitcast %"struct.dawn_native::BlockDef"** %5 to i64*
  store i64 %20, i64* %21, align 8
  br label %58

22:                                               ; preds = %10
  %23 = ptrtoint %"struct.dawn_native::BlockDef"* %15 to i64
  %24 = bitcast %"struct.dawn_native::BlockDef"** %5 to i64*
  %25 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  %26 = bitcast %"struct.dawn_native::BlockDef"** %14 to i64*
  %27 = sub i64 %23, %8
  %28 = ashr exact i64 %27, 4
  %29 = icmp ult i64 %28, 576460752303423487
  br i1 %29, label %30, label %36

30:                                               ; preds = %22
  %31 = ashr exact i64 %27, 3
  %32 = icmp eq i64 %27, 0
  %33 = select i1 %32, i64 1, i64 %31
  %34 = icmp ugt i64 %33, 1152921504606846975
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @abort() #11
  unreachable

36:                                               ; preds = %22, %30
  %37 = phi i64 [ %33, %30 ], [ 1152921504606846975, %22 ]
  %38 = shl i64 %37, 4
  %39 = tail call i8* @_Znwm(i64 %38) #12
  %40 = bitcast i8* %39 to %"struct.dawn_native::BlockDef"*
  %41 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %40, i64 %37
  %42 = ptrtoint %"struct.dawn_native::BlockDef"* %41 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %39, i64 16
  %44 = ptrtoint i8* %43 to i64
  %45 = sub i64 %9, %8
  %46 = ashr exact i64 %45, 4
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %40, i64 %47
  %49 = ptrtoint %"struct.dawn_native::BlockDef"* %48 to i64
  %50 = icmp sgt i64 %45, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %36
  %52 = bitcast %"struct.dawn_native::BlockDef"* %48 to i8*
  %53 = bitcast %"struct.dawn_native::BlockDef"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 %45, i1 false) #10
  br label %54

54:                                               ; preds = %51, %36
  store i64 %49, i64* %25, align 8
  store i64 %44, i64* %24, align 8
  store i64 %42, i64* %26, align 8
  %55 = icmp eq %"struct.dawn_native::BlockDef"* %4, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = bitcast %"struct.dawn_native::BlockDef"* %4 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %17, %54, %56
  %59 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %3, align 8
  %60 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %59, i64 0, i32 0
  store i64 4, i64* %60, align 8
  %61 = bitcast i8** %12 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %3, align 8
  %64 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %63, i64 0, i32 1
  %65 = bitcast i8** %64 to i64*
  store i64 %62, i64* %65, align 8
  br label %74

66:                                               ; preds = %1
  %67 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %4, i64 0, i32 1
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 3
  %71 = and i64 %70, -4
  %72 = inttoptr i64 %71 to i8*
  %73 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 1
  store i8* %72, i8** %73, align 8
  br label %74

74:                                               ; preds = %66, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIteratorD2Ev(%"class.dawn_native::CommandIterator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %2, align 8
  %4 = icmp eq %"struct.dawn_native::BlockDef"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.dawn_native::BlockDef"* %3 to i64
  %7 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.dawn_native::BlockDef"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.dawn_native::BlockDef"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIteratorC2EOS0_(%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandIterator"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %4 = bitcast %"class.dawn_native::CommandIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  store i32 -1, i32* %3, align 8
  %5 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %5, align 8
  %7 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %6, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 3
  %10 = bitcast i32* %9 to i8*
  %11 = icmp eq i8* %8, %10
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = ptrtoint %"struct.dawn_native::BlockDef"* %6 to i64
  %14 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.dawn_native::BlockDef"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.dawn_native::BlockDef"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.dawn_native::BlockDef"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.dawn_native::BlockDef"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.dawn_native::CommandIterator"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %1)
  br label %26

26:                                               ; preds = %12, %2
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native15CommandIterator7IsEmptyEv(%"class.dawn_native::CommandIterator"* readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %2, align 8
  %4 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %3, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %7 = bitcast i32* %6 to i8*
  %8 = icmp eq i8* %5, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.dawn_native::CommandIterator"* @_ZN11dawn_native15CommandIteratoraSEOS0_(%"class.dawn_native::CommandIterator"* returned, %"class.dawn_native::CommandIterator"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %3, align 8
  %5 = icmp eq %"struct.dawn_native::BlockDef"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"struct.dawn_native::BlockDef"* %4 to i64
  %8 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.dawn_native::BlockDef"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.dawn_native::BlockDef"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  %11 = bitcast %"class.dawn_native::CommandIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #10
  br label %12

12:                                               ; preds = %2, %6
  %13 = bitcast %"class.dawn_native::CommandIterator"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.dawn_native::BlockDef"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.dawn_native::BlockDef"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.dawn_native::BlockDef"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.dawn_native::BlockDef"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.dawn_native::CommandIterator"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %1)
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  ret %"class.dawn_native::CommandIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIteratorC2EONS_16CommandAllocatorE(%"class.dawn_native::CommandIterator"*, %"class.dawn_native::CommandAllocator"* nocapture dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 2
  %4 = bitcast i8** %3 to i32**
  %5 = load i32*, i32** %4, align 8
  store i32 -1, i32* %5, align 4
  %6 = bitcast i8** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = bitcast %"class.dawn_native::CommandIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.dawn_native::CommandAllocator"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.dawn_native::BlockDef"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.dawn_native::BlockDef"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.dawn_native::BlockDef"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.dawn_native::BlockDef"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.dawn_native::CommandAllocator"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #10
  %22 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %24 = bitcast i8** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  store i32 -1, i32* %23, align 8
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN11dawn_native16CommandAllocator13AcquireBlocksEv(%"class.dawn_native::CommandAllocator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 2
  %3 = bitcast i8** %2 to i32**
  %4 = load i32*, i32** %3, align 8
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0
  %6 = bitcast i8** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret %"class.std::__1::vector"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.dawn_native::CommandIterator"* @_ZN11dawn_native15CommandIteratoraSEONS_16CommandAllocatorE(%"class.dawn_native::CommandIterator"* returned, %"class.dawn_native::CommandAllocator"* nocapture dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 2
  %4 = bitcast i8** %3 to i32**
  %5 = load i32*, i32** %4, align 8
  store i32 -1, i32* %5, align 4
  %6 = bitcast i8** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %7, align 8
  %9 = icmp eq %"struct.dawn_native::BlockDef"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %"struct.dawn_native::BlockDef"* %8 to i64
  %12 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.dawn_native::BlockDef"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.dawn_native::BlockDef"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  %15 = bitcast %"class.dawn_native::CommandIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #10
  br label %16

16:                                               ; preds = %2, %10
  %17 = bitcast %"class.dawn_native::CommandAllocator"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.dawn_native::BlockDef"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.dawn_native::BlockDef"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"struct.dawn_native::BlockDef"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"struct.dawn_native::BlockDef"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.dawn_native::CommandAllocator"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #10
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  ret %"class.dawn_native::CommandIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native15CommandIterator23NextCommandIdInNewBlockEPj(%"class.dawn_native::CommandIterator"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.dawn_native::BlockDef"** %4 to i64*
  %6 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  %7 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 1
  %8 = load i64, i64* %3, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = inttoptr i64 %10 to %"struct.dawn_native::BlockDef"*
  %12 = sub i64 %9, %10
  %13 = ashr exact i64 %12, 4
  br label %14

14:                                               ; preds = %19, %2
  %15 = phi i64 [ %16, %19 ], [ %8, %2 ]
  %16 = add i64 %15, 1
  store i64 %16, i64* %3, align 8
  %17 = icmp ult i64 %16, %13
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  br label %32

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %11, i64 %16, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 3
  %24 = and i64 %23, -4
  %25 = inttoptr i64 %24 to i8*
  store i8* %25, i8** %7, align 8
  %26 = inttoptr i64 %24 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %14, label %29

29:                                               ; preds = %19
  %30 = inttoptr i64 %24 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  store i8* %31, i8** %7, align 8
  br label %32

32:                                               ; preds = %29, %18
  %33 = phi i32 [ -1, %18 ], [ %27, %29 ]
  %34 = phi i1 [ false, %18 ], [ true, %29 ]
  store i32 %33, i32* %1, align 4
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native15CommandIterator27MakeEmptyAsDataWasDestroyedEv(%"class.dawn_native::CommandIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %2, align 8
  %4 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %3, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 3
  %7 = bitcast i32* %6 to i8*
  %8 = icmp eq i8* %5, %7
  br i1 %8, label %30, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"struct.dawn_native::BlockDef"* %3 to i64
  %11 = getelementptr inbounds %"class.dawn_native::CommandIterator", %"class.dawn_native::CommandIterator"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %11, align 8
  %13 = icmp eq %"struct.dawn_native::BlockDef"* %3, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  tail call void @free(i8* %5) #10
  %15 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %3, i64 1
  %16 = icmp eq %"struct.dawn_native::BlockDef"* %15, %12
  br i1 %16, label %17, label %23

17:                                               ; preds = %23, %14
  %18 = bitcast %"class.dawn_native::CommandIterator"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %19, %17 ], [ %10, %9 ]
  %22 = bitcast %"struct.dawn_native::BlockDef"** %11 to i64*
  store i64 %21, i64* %22, align 8
  tail call void @_ZN11dawn_native15CommandIterator5ResetEv(%"class.dawn_native::CommandIterator"* %0)
  br label %30

23:                                               ; preds = %14, %23
  %24 = phi %"struct.dawn_native::BlockDef"* [ %28, %23 ], [ %15, %14 ]
  %25 = phi %"struct.dawn_native::BlockDef"* [ %24, %23 ], [ %3, %14 ]
  %26 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %25, i64 1, i32 1
  %27 = load i8*, i8** %26, align 8
  tail call void @free(i8* %27) #10
  %28 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %24, i64 1
  %29 = icmp eq %"struct.dawn_native::BlockDef"* %28, %12
  br i1 %29, label %17, label %23

30:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native16CommandAllocatorC2Ev(%"class.dawn_native::CommandAllocator"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.dawn_native::CommandAllocator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  %3 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 1
  store i64 2048, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 4
  %6 = getelementptr inbounds [1 x i32], [1 x i32]* %5, i64 0, i64 0
  %7 = bitcast i8** %4 to [1 x i32]**
  store [1 x i32]* %5, [1 x i32]** %7, align 8
  %8 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 4, i64 1
  %10 = bitcast i8** %8 to i32**
  store i32* %9, i32** %10, align 8
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native16CommandAllocatorD2Ev(%"class.dawn_native::CommandAllocator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %2, align 8
  %4 = icmp eq %"struct.dawn_native::BlockDef"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.dawn_native::BlockDef"* %3 to i64
  %7 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.dawn_native::BlockDef"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.dawn_native::BlockDef"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN11dawn_native16CommandAllocator18AllocateInNewBlockEjmm(%"class.dawn_native::CommandAllocator"*, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 2
  %6 = bitcast i8** %5 to i32**
  %7 = icmp ugt i64 %2, -21
  %8 = add nuw i64 %2, 20
  %9 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 3
  %10 = bitcast i8** %9 to i64*
  %11 = load i32*, i32** %6, align 8
  br label %12

12:                                               ; preds = %16, %4
  %13 = phi i32* [ %25, %16 ], [ %11, %4 ]
  store i32 -1, i32* %13, align 4
  br i1 %7, label %41, label %14, !prof !2

14:                                               ; preds = %12
  %15 = tail call zeroext i1 @_ZN11dawn_native16CommandAllocator11GetNewBlockEm(%"class.dawn_native::CommandAllocator"* %0, i64 %8)
  br i1 %15, label %16, label %41, !prof !3

16:                                               ; preds = %14
  %17 = load i64, i64* %10, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = sub i64 %17, %19
  %21 = icmp ult i64 %20, 20
  %22 = add i64 %20, -20
  %23 = icmp ult i64 %22, %2
  %24 = or i1 %21, %23
  %25 = bitcast i8* %18 to i32*
  br i1 %24, label %12, label %26

26:                                               ; preds = %16
  %27 = bitcast i8* %18 to i32*
  store i32 %1, i32* %27, align 4
  %28 = load i8*, i8** %5, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 4
  %30 = ptrtoint i8* %29 to i64
  %31 = add i64 %3, -1
  %32 = add i64 %31, %30
  %33 = sub i64 0, %3
  %34 = and i64 %32, %33
  %35 = inttoptr i64 %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 %2
  %37 = ptrtoint i8* %36 to i64
  %38 = add i64 %37, 3
  %39 = and i64 %38, -4
  %40 = inttoptr i64 %39 to i8*
  store i8* %40, i8** %5, align 8
  br label %41

41:                                               ; preds = %14, %12, %26
  %42 = phi i8* [ %35, %26 ], [ null, %12 ], [ null, %14 ]
  ret i8* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native16CommandAllocator11GetNewBlockEm(%"class.dawn_native::CommandAllocator"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %4, 1
  %6 = icmp ult i64 %5, 16384
  %7 = select i1 %6, i64 %5, i64 16384
  %8 = icmp ugt i64 %7, %1
  %9 = select i1 %8, i64 %7, i64 %1
  store i64 %9, i64* %3, align 8
  %10 = tail call noalias i8* @malloc(i64 %9) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %92, label %12, !prof !2

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %13, align 8
  %15 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %15, align 8
  %17 = icmp ult %"struct.dawn_native::BlockDef"* %14, %16
  %18 = ptrtoint %"struct.dawn_native::BlockDef"* %16 to i64
  br i1 %17, label %19, label %25

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %14, i64 0, i32 0
  store i64 %9, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %14, i64 0, i32 1
  store i8* %10, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %14, i64 1
  %23 = ptrtoint %"struct.dawn_native::BlockDef"* %22 to i64
  %24 = bitcast %"struct.dawn_native::BlockDef"** %13 to i64*
  store i64 %23, i64* %24, align 8
  br label %83

25:                                               ; preds = %12
  %26 = ptrtoint %"struct.dawn_native::BlockDef"* %14 to i64
  %27 = bitcast %"struct.dawn_native::BlockDef"** %13 to i64*
  %28 = bitcast %"class.dawn_native::CommandAllocator"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 4
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 1152921504606846975
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.dawn_native::CommandAllocator"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #11
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"struct.dawn_native::BlockDef"** %15 to i64*
  %38 = sub i64 %18, %29
  %39 = ashr exact i64 %38, 4
  %40 = icmp ult i64 %39, 576460752303423487
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 3
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 1152921504606846975
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 1152921504606846975, %36 ]
  %51 = shl i64 %50, 4
  %52 = tail call i8* @_Znwm(i64 %51) #12
  %53 = bitcast i8* %52 to %"struct.dawn_native::BlockDef"*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"struct.dawn_native::BlockDef"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %56, i64 %31
  %58 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %56, i64 %55
  %59 = ptrtoint %"struct.dawn_native::BlockDef"* %58 to i64
  %60 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %57, i64 0, i32 0
  store i64 %9, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %56, i64 %31, i32 1
  store i8* %10, i8** %61, align 8
  %62 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %57, i64 1
  %63 = ptrtoint %"struct.dawn_native::BlockDef"* %62 to i64
  %64 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %64, align 8
  %66 = load i64, i64* %27, align 8
  %67 = ptrtoint %"struct.dawn_native::BlockDef"* %65 to i64
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 4
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.dawn_native::BlockDef", %"struct.dawn_native::BlockDef"* %57, i64 %70
  %72 = ptrtoint %"struct.dawn_native::BlockDef"* %71 to i64
  %73 = icmp sgt i64 %68, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %54
  %75 = bitcast %"struct.dawn_native::BlockDef"* %71 to i8*
  %76 = bitcast %"struct.dawn_native::BlockDef"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 %68, i1 false) #10
  %77 = load %"struct.dawn_native::BlockDef"*, %"struct.dawn_native::BlockDef"** %64, align 8
  br label %78

78:                                               ; preds = %74, %54
  %79 = phi %"struct.dawn_native::BlockDef"* [ %65, %54 ], [ %77, %74 ]
  store i64 %72, i64* %28, align 8
  store i64 %63, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %80 = icmp eq %"struct.dawn_native::BlockDef"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast %"struct.dawn_native::BlockDef"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %19, %78, %81
  %84 = ptrtoint i8* %10 to i64
  %85 = add i64 %84, 3
  %86 = and i64 %85, -4
  %87 = inttoptr i64 %86 to i8*
  %88 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 2
  store i8* %87, i8** %88, align 8
  %89 = load i64, i64* %3, align 8
  %90 = getelementptr inbounds i8, i8* %10, i64 %89
  %91 = getelementptr inbounds %"class.dawn_native::CommandAllocator", %"class.dawn_native::CommandAllocator"* %0, i64 0, i32 3
  store i8* %90, i8** %91, align 8
  br label %92

92:                                               ; preds = %2, %83
  %93 = phi i1 [ true, %83 ], [ false, %2 ]
  ret i1 %93
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
