; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemb.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemb.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.scan_order = type { i16*, i16*, i16* }
%struct.TOKENVALUE = type { i16, i32 }
%struct.macroblock = type { [3 x %struct.macroblock_plane], %struct.macroblockd, %struct.MB_MODE_INFO_EXT*, %struct.MB_MODE_INFO_EXT*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [4 x i32], [4 x i32], i32, [4 x i32], [4 x i32], [4 x i32], [2 x i32*], [2 x i32*], i32**, [4 x i32], [2 x i32*], [2 x i32*], i32**, i32, i32, %struct.MvLimits, [4 x [256 x i8]], [4 x i32], i32, i32, [4 x [2 x [2 x [6 x [2 x [6 x [12 x i32]]]]]]], i32, i32, i32, i32, i32, [12 x i8], [12 x i64], [4 x %struct.mv], [2 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, [25 x i8], i8, i8, void (i16*, i32*, i32)*, void (i32*, i8*, i32, i32)*, void (i32*, i16*, i32, i32, i32)*, [8 x i8], [4096 x i8], %struct.scale_factors*, [8 x i8] }
%struct.macroblock_plane = type { [4096 x i16], i32*, i32*, i16*, %struct.buf_2d, [8 x i8], [8 x i16], i16*, i16*, i16*, i16*, i16*, [2 x i64], [8 x i8] }
%struct.buf_2d = type { i8*, i32 }
%struct.macroblockd = type { [3 x %struct.macroblockd_plane], i8, i8, %struct.FRAME_COUNTS*, %struct.TileInfo, i32, %struct.MODE_INFO**, %struct.MODE_INFO*, %struct.MODE_INFO*, i32, i32, [3 x i8]*, i32, i32, i32, i32, %struct.frame_contexts*, [2 x %struct.RefBuffer*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [16 x i8]], i8*, [8 x i8], i32, i32, i32, %struct.vpx_internal_error_info*, i32* }
%struct.macroblockd_plane = type { i32*, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i16, i16, i8, i8, i16*, i32* }
%struct.FRAME_COUNTS = type { [4 x [10 x i32]], [10 x [10 x i32]], [16 x [4 x i32]], [4 x [2 x [2 x [6 x [6 x [4 x i32]]]]]], [4 x [2 x [2 x [6 x [6 x i32]]]]], [4 x [3 x i32]], [7 x [4 x i32]], [4 x [2 x i32]], [5 x [2 x i32]], [5 x [2 x [2 x i32]]], [5 x [2 x i32]], %struct.tx_counts, [3 x [2 x i32]], %struct.nmv_context_counts }
%struct.tx_counts = type { [2 x [4 x i32]], [2 x [3 x i32]], [2 x [2 x i32]], [4 x i32] }
%struct.nmv_context_counts = type { [4 x i32], [2 x %struct.nmv_component_counts] }
%struct.nmv_component_counts = type { [2 x i32], [11 x i32], [2 x i32], [10 x [2 x i32]], [2 x [4 x i32]], [4 x i32], [2 x i32], [2 x i32] }
%struct.TileInfo = type { i32, i32, i32, i32 }
%struct.MODE_INFO = type { i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x %union.int_mv], [4 x %struct.b_mode_info] }
%union.int_mv = type { i32 }
%struct.b_mode_info = type { i8, [2 x %union.int_mv] }
%struct.frame_contexts = type { [4 x [9 x i8]], [10 x [9 x i8]], [16 x [3 x i8]], [4 x [2 x [2 x [6 x [6 x [3 x i8]]]]]], [4 x [2 x i8]], [7 x [3 x i8]], [4 x i8], [5 x i8], [5 x [2 x i8]], [5 x i8], %struct.tx_probs, [3 x i8], %struct.nmv_context, i32 }
%struct.tx_probs = type { [2 x [3 x i8]], [2 x [2 x i8]], [2 x [1 x i8]] }
%struct.nmv_context = type { [3 x i8], [2 x %struct.nmv_component] }
%struct.nmv_component = type { i8, [10 x i8], [1 x i8], [10 x i8], [2 x [3 x i8]], [3 x i8], i8, i8 }
%struct.RefBuffer = type { i32, %struct.yv12_buffer_config*, %struct.scale_factors }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)*, [2 x [2 x [2 x void (i8*, i64, i8*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32)*]]], [2 x [2 x [2 x void (i16*, i64, i16*, i64, [8 x i16]*, i32, i32, i32, i32, i32, i32, i32)*]]] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.MB_MODE_INFO_EXT = type { [4 x [2 x %union.int_mv]], [4 x i8] }
%struct.MvLimits = type { i32, i32, i32, i32 }
%struct.mv = type { i16, i16 }
%struct.optimize_ctx = type { [3 x [16 x i8]], [3 x [16 x i8]] }
%struct.encode_b_args = type { %struct.macroblock*, i32, i8*, i8*, i8* }

@num_4x4_blocks_wide_lookup = external local_unnamed_addr constant [13 x i8], align 1
@num_4x4_blocks_high_lookup = external local_unnamed_addr constant [13 x i8], align 1
@plane_rd_mult = internal unnamed_addr constant [2 x [2 x i32]] [[2 x i32] [i32 10, i32 6], [2 x i32] [i32 8, i32 5]], align 16
@vp9_pt_energy_class = external local_unnamed_addr constant [12 x i8], align 16
@vp9_default_scan_orders = external local_unnamed_addr constant [4 x %struct.scan_order], align 16
@vp9_quantize_fp_32x32 = external local_unnamed_addr global void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, align 8
@vp9_quantize_fp = external local_unnamed_addr global void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, align 8
@vpx_quantize_b_32x32 = external local_unnamed_addr global void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, align 8
@vpx_quantize_b = external local_unnamed_addr global void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, align 8
@b_width_log2_lookup = external local_unnamed_addr constant [13 x i8], align 1
@vp9_scan_orders = external local_unnamed_addr constant [4 x [4 x %struct.scan_order]], align 16
@vp9_highbd_iht4x4_16_add = external local_unnamed_addr global void (i32*, i16*, i32, i32, i32)*, align 8
@ss_size_lookup = external local_unnamed_addr constant [13 x [2 x [2 x i8]]], align 16
@vp9_coefband_trans_4x4 = external local_unnamed_addr constant [16 x i8], align 16
@vp9_coefband_trans_8x8plus = external local_unnamed_addr constant [1024 x i8], align 16
@intra_mode_to_tx_type_lookup = external local_unnamed_addr constant [10 x i32], align 16
@vp9_cat6_high_cost = external local_unnamed_addr constant [64 x i16], align 16
@vp9_cat6_high10_high_cost = external local_unnamed_addr constant [256 x i16], align 16
@vp9_cat6_high12_high_cost = external local_unnamed_addr constant [1024 x i16], align 16
@vp9_dct_cat_lt_10_value_tokens = external local_unnamed_addr global %struct.TOKENVALUE*, align 8
@vp9_cat6_low_cost = external local_unnamed_addr constant [256 x i16], align 16
@vp9_dct_cat_lt_10_value_cost = external local_unnamed_addr global i32*, align 8
@uv_txsize_lookup = external local_unnamed_addr constant [13 x [4 x [2 x [2 x i8]]]], align 16
@max_txsize_lookup = external local_unnamed_addr constant [13 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_subtract_plane(%struct.macroblock*, i8 zeroext, i32) local_unnamed_addr #0 {
  %4 = sext i32 %2 to i64
  %5 = zext i8 %1 to i64
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %4, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %4, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [13 x [2 x [2 x i8]]], [13 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %5, i64 %8, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 2
  %19 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_high_lookup, i64 0, i64 %14
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %24 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %23, align 16
  %25 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %24, i64 0, i32 29
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 8
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %4, i32 0, i64 0
  %30 = zext i32 %18 to i64
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %4, i32 4, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %4, i32 4, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %4, i32 3, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %4, i32 3, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = sext i32 %39 to i64
  br i1 %28, label %44, label %41

41:                                               ; preds = %3
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 23
  %43 = load i32, i32* %42, align 16
  tail call void @vpx_highbd_subtract_block_c(i32 %22, i32 %18, i16* %29, i64 %30, i8* %32, i64 %35, i8* %37, i64 %40, i32 %43) #3
  br label %45

44:                                               ; preds = %3
  tail call void @vpx_subtract_block_sse2(i32 %22, i32 %18, i16* %29, i64 %30, i8* %32, i64 %35, i8* %37, i64 %40) #3
  br label %45

45:                                               ; preds = %44, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @vpx_highbd_subtract_block_c(i32, i32, i16*, i64, i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @vpx_subtract_block_sse2(i32, i32, i16*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vp9_optimize_b(%struct.macroblock* nocapture readonly, i32, i32, i8 zeroext, i32) local_unnamed_addr #0 {
  %6 = alloca [1024 x i8], align 16
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 6
  %9 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %8, align 8
  %10 = load %struct.MODE_INFO*, %struct.MODE_INFO** %9, align 8
  %11 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %10, i64 0, i32 8, i64 0
  %12 = load i8, i8* %11, align 4
  %13 = icmp sgt i8 %12, 0
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %14) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 1024, i1 false)
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %7, i32 2
  %16 = load i32*, i32** %15, align 8
  %17 = shl nsw i32 %2, 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %7, i32 1
  %21 = load i32*, i32** %20, align 16
  %22 = getelementptr inbounds i32, i32* %21, i64 %18
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %7, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %18
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %7, i32 3
  %27 = load i16*, i16** %26, align 16
  %28 = sext i32 %2 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp sgt i32 %1, 0
  %33 = zext i8 %3 to i32
  %34 = shl nuw nsw i32 %33, 1
  %35 = shl i32 16, %34
  %36 = icmp eq i8 %3, 3
  %37 = zext i1 %36 to i32
  %38 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %7, i32 12
  %39 = load i16*, i16** %38, align 8
  %40 = icmp eq i8 %3, 0
  %41 = select i1 %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @vp9_coefband_trans_4x4, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @vp9_coefband_trans_8x8plus, i64 0, i64 0)
  %42 = or i1 %32, %13
  br i1 %42, label %47, label %43

43:                                               ; preds = %5
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 24
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %5, %43
  %48 = zext i8 %3 to i64
  %49 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %48
  br label %64

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %10, i64 0, i32 0
  %52 = load i8, i8* %51, align 4
  %53 = icmp ult i8 %52, 3
  %54 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %10, i64 0, i32 10, i64 %28, i32 0
  %55 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %10, i64 0, i32 1
  %56 = select i1 %53, i8* %54, i8* %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %3 to i64
  %59 = zext i8 %57 to i64
  %60 = getelementptr inbounds [10 x i32], [10 x i32]* @intra_mode_to_tx_type_lookup, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [4 x [4 x %struct.scan_order]], [4 x [4 x %struct.scan_order]]* @vp9_scan_orders, i64 0, i64 %58, i64 %62
  br label %64

64:                                               ; preds = %47, %50
  %65 = phi %struct.scan_order* [ %49, %47 ], [ %63, %50 ]
  %66 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %65, i64 0, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %65, i64 0, i32 2
  %69 = load i16*, i16** %68, align 8
  %70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 34
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 15
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = zext i1 %13 to i64
  %76 = zext i1 %32 to i64
  %77 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* @plane_rd_mult, i64 0, i64 %75, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %79, %74
  %81 = icmp eq i32 %71, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %64
  %83 = ashr i64 %80, 1
  br label %93

84:                                               ; preds = %64
  %85 = sub i32 8, %71
  %86 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %10, i64 0, i32 4
  %87 = load i8, i8* %86, align 4
  %88 = sext i8 %87 to i32
  %89 = add nsw i32 %85, %88
  %90 = sext i32 %89 to i64
  %91 = mul nsw i64 %80, %90
  %92 = ashr i64 %91, 4
  br label %93

93:                                               ; preds = %84, %82
  %94 = phi i64 [ %83, %82 ], [ %92, %84 ]
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 14
  %96 = load i32, i32* %95, align 8
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 23
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 8
  %101 = icmp eq i32 %99, 10
  %102 = select i1 %101, i16* getelementptr inbounds ([256 x i16], [256 x i16]* @vp9_cat6_high10_high_cost, i64 0, i64 0), i16* getelementptr inbounds ([1024 x i16], [1024 x i16]* @vp9_cat6_high12_high_cost, i64 0, i64 0)
  %103 = select i1 %100, i16* getelementptr inbounds ([64 x i16], [64 x i16]* @vp9_cat6_high_cost, i64 0, i64 0), i16* %102
  %104 = zext i8 %3 to i64
  %105 = icmp eq i16 %30, 0
  br i1 %105, label %563, label %106

106:                                              ; preds = %93
  %107 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp9_dct_cat_lt_10_value_tokens, align 8
  %108 = zext i16 %30 to i64
  %109 = and i64 %108, 1
  %110 = icmp eq i16 %30, 1
  br i1 %110, label %141, label %111

111:                                              ; preds = %106
  %112 = sub nsw i64 %108, %109
  br label %113

113:                                              ; preds = %626, %111
  %114 = phi i64 [ 0, %111 ], [ %632, %626 ]
  %115 = phi i64 [ %112, %111 ], [ %633, %626 ]
  %116 = getelementptr inbounds i16, i16* %67, i64 %114
  %117 = load i16, i16* %116, align 2
  %118 = sext i16 %117 to i64
  %119 = getelementptr inbounds i32, i32* %22, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 66
  %122 = icmp ugt i32 %121, 132
  br i1 %122, label %127, label %123

123:                                              ; preds = %113
  %124 = sext i32 %120 to i64
  %125 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %107, i64 %124, i32 0
  %126 = load i16, i16* %125, align 4
  br label %127

127:                                              ; preds = %113, %123
  %128 = phi i16 [ %126, %123 ], [ 10, %113 ]
  %129 = sext i16 %128 to i64
  %130 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %118
  store i8 %131, i8* %132, align 1
  %133 = or i64 %114, 1
  %134 = getelementptr inbounds i16, i16* %67, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = sext i16 %135 to i64
  %137 = getelementptr inbounds i32, i32* %22, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = add i32 %138, 66
  %140 = icmp ugt i32 %139, 132
  br i1 %140, label %626, label %622

141:                                              ; preds = %626, %106
  %142 = phi i64 [ 0, %106 ], [ %632, %626 ]
  %143 = icmp eq i64 %109, 0
  br i1 %143, label %162, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds i16, i16* %67, i64 %142
  %146 = load i16, i16* %145, align 2
  %147 = sext i16 %146 to i64
  %148 = getelementptr inbounds i32, i32* %22, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = add i32 %149, 66
  %151 = icmp ugt i32 %150, 132
  br i1 %151, label %157, label %152

152:                                              ; preds = %144
  %153 = sext i32 %149 to i64
  %154 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %107, i64 %153, i32 0
  %155 = load i16, i16* %154, align 4
  %156 = sext i16 %155 to i64
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %156, %152 ], [ 10, %144 ]
  %159 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %147
  store i8 %160, i8* %161, align 1
  br label %162

162:                                              ; preds = %141, %157
  br i1 %105, label %563, label %163

163:                                              ; preds = %162
  %164 = load i8, i8* %41, align 16
  %165 = zext i8 %164 to i64
  %166 = sext i32 %4 to i64
  %167 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %165, i64 0, i64 %166, i64 11
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i64
  %170 = mul nsw i64 %94, %169
  %171 = add nsw i64 %170, 256
  %172 = ashr i64 %171, 9
  %173 = shl i64 1125899906842624, %97
  %174 = add nsw i64 %172, %173
  %175 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %176 = add nsw i32 %35, -1
  %177 = icmp sgt i32 %71, 0
  %178 = sext i32 %176 to i64
  %179 = zext i16 %30 to i64
  br label %180

180:                                              ; preds = %535, %163
  %181 = phi i8 [ %164, %163 ], [ %537, %535 ]
  %182 = phi i64 [ 0, %163 ], [ %533, %535 ]
  %183 = phi i32 [ 0, %163 ], [ %532, %535 ]
  %184 = phi i32 [ 0, %163 ], [ %531, %535 ]
  %185 = phi i32 [ 1, %163 ], [ %530, %535 ]
  %186 = phi i64 [ %174, %163 ], [ %529, %535 ]
  %187 = phi i64 [ 1125899906842624, %163 ], [ %528, %535 ]
  %188 = phi i64 [ 0, %163 ], [ %527, %535 ]
  %189 = phi i32 [ 0, %163 ], [ %526, %535 ]
  %190 = phi i32 [ 0, %163 ], [ %525, %535 ]
  %191 = getelementptr inbounds i16, i16* %67, i64 %182
  %192 = load i16, i16* %191, align 2
  %193 = sext i16 %192 to i64
  %194 = getelementptr inbounds i32, i32* %22, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i64 %182, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %180
  %198 = shl nuw nsw i64 %182, 1
  %199 = getelementptr inbounds i16, i16* %69, i64 %198
  %200 = load i16, i16* %199, align 2
  %201 = sext i16 %200 to i64
  %202 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = add nuw nsw i32 %204, 1
  %206 = or i64 %198, 1
  %207 = getelementptr inbounds i16, i16* %69, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = sext i16 %208 to i64
  %210 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = add nuw nsw i32 %205, %212
  %214 = lshr i32 %213, 1
  br label %215

215:                                              ; preds = %180, %197
  %216 = phi i32 [ %214, %197 ], [ %4, %180 ]
  %217 = icmp eq i32 %185, 0
  %218 = zext i8 %181 to i64
  %219 = icmp eq i32 %195, 0
  br i1 %219, label %220, label %231

220:                                              ; preds = %215
  %221 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp9_dct_cat_lt_10_value_tokens, align 8
  %222 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %221, i64 0, i32 0
  %223 = load i16, i16* %222, align 4
  %224 = zext i1 %217 to i64
  %225 = sext i32 %216 to i64
  %226 = sext i16 %223 to i64
  %227 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %218, i64 %224, i64 %225, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = add nsw i64 %188, %229
  br label %524

231:                                              ; preds = %215
  %232 = icmp ne i16 %192, 0
  %233 = zext i1 %232 to i64
  %234 = getelementptr inbounds i16, i16* %39, i64 %233
  %235 = load i16, i16* %234, align 2
  %236 = sext i16 %235 to i32
  %237 = getelementptr inbounds i32, i32* %19, i64 %193
  %238 = load i32, i32* %237, align 4
  %239 = shl i32 %238, %37
  %240 = sub i32 0, %239
  %241 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %175, align 8
  %242 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %241, i64 0, i32 29
  %243 = load i32, i32* %242, align 8
  %244 = and i32 %243, 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %261, label %246

246:                                              ; preds = %231
  %247 = icmp sgt i32 %240, -1
  %248 = load i32, i32* %98, align 8
  %249 = add nsw i32 %248, -8
  %250 = ashr i32 %239, %249
  %251 = sub nsw i32 0, %250
  %252 = lshr i32 %240, %249
  %253 = select i1 %247, i32 %252, i32 %251
  %254 = sext i32 %253 to i64
  %255 = mul nsw i64 %254, %254
  %256 = getelementptr inbounds i32, i32* %25, i64 %193
  %257 = load i32, i32* %256, align 4
  %258 = sub nsw i32 %257, %238
  %259 = shl i32 %258, %37
  %260 = icmp sgt i32 %259, -1
  br i1 %260, label %268, label %270

261:                                              ; preds = %231
  %262 = sext i32 %240 to i64
  %263 = mul nsw i64 %262, %262
  %264 = getelementptr inbounds i32, i32* %25, i64 %193
  %265 = load i32, i32* %264, align 4
  %266 = sub nsw i32 %265, %238
  %267 = shl i32 %266, %37
  br label %274

268:                                              ; preds = %246
  %269 = lshr i32 %259, %249
  br label %274

270:                                              ; preds = %246
  %271 = sub nsw i32 0, %259
  %272 = ashr i32 %271, %249
  %273 = sub nsw i32 0, %272
  br label %274

274:                                              ; preds = %261, %268, %270
  %275 = phi i32 [ %257, %268 ], [ %257, %270 ], [ %265, %261 ]
  %276 = phi i32* [ %256, %268 ], [ %256, %270 ], [ %264, %261 ]
  %277 = phi i64 [ %255, %268 ], [ %255, %270 ], [ %263, %261 ]
  %278 = phi i32 [ %269, %268 ], [ %273, %270 ], [ %267, %261 ]
  %279 = sext i32 %278 to i64
  %280 = mul nsw i64 %279, %279
  %281 = ashr i32 %195, 31
  %282 = shl nsw i32 %281, 1
  %283 = xor i32 %282, -1
  %284 = add i32 %195, %283
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %298

286:                                              ; preds = %274
  br i1 %245, label %291, label %287

287:                                              ; preds = %286
  %288 = load i32, i32* %98, align 8
  %289 = add nsw i32 %288, -8
  %290 = ashr i32 %236, %289
  br label %291

291:                                              ; preds = %286, %287
  %292 = phi i32 [ %290, %287 ], [ %236, %286 ]
  %293 = add nsw i32 %292, %281
  %294 = xor i32 %293, %281
  %295 = sub nsw i32 %278, %294
  %296 = sext i32 %295 to i64
  %297 = mul nsw i64 %296, %296
  br label %298

298:                                              ; preds = %274, %291
  %299 = phi i64 [ %297, %291 ], [ %277, %274 ]
  %300 = add i32 %195, 66
  %301 = icmp ugt i32 %300, 132
  br i1 %301, label %302, label %318

302:                                              ; preds = %298
  %303 = icmp slt i32 %195, 0
  %304 = sub nsw i32 0, %195
  %305 = select i1 %303, i32 %304, i32 %195
  %306 = add nsw i32 %305, -67
  %307 = and i32 %306, 255
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds [256 x i16], [256 x i16]* @vp9_cat6_low_cost, i64 0, i64 %308
  %310 = load i16, i16* %309, align 2
  %311 = sext i16 %310 to i32
  %312 = ashr i32 %306, 8
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i16, i16* %103, i64 %313
  %315 = load i16, i16* %314, align 2
  %316 = zext i16 %315 to i32
  %317 = add nsw i32 %316, %311
  br label %326

318:                                              ; preds = %298
  %319 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp9_dct_cat_lt_10_value_tokens, align 8
  %320 = sext i32 %195 to i64
  %321 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %319, i64 %320, i32 0
  %322 = load i16, i16* %321, align 4
  %323 = load i32*, i32** @vp9_dct_cat_lt_10_value_cost, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 %320
  %325 = load i32, i32* %324, align 4
  br label %326

326:                                              ; preds = %302, %318
  %327 = phi i16 [ 10, %302 ], [ %322, %318 ]
  %328 = phi i32 [ %317, %302 ], [ %325, %318 ]
  %329 = sext i32 %328 to i64
  %330 = add i32 %284, 66
  %331 = icmp ugt i32 %330, 132
  br i1 %331, label %332, label %348

332:                                              ; preds = %326
  %333 = icmp slt i32 %284, 0
  %334 = sub nsw i32 0, %284
  %335 = select i1 %333, i32 %334, i32 %284
  %336 = add nsw i32 %335, -67
  %337 = and i32 %336, 255
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds [256 x i16], [256 x i16]* @vp9_cat6_low_cost, i64 0, i64 %338
  %340 = load i16, i16* %339, align 2
  %341 = sext i16 %340 to i32
  %342 = ashr i32 %336, 8
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i16, i16* %103, i64 %343
  %345 = load i16, i16* %344, align 2
  %346 = zext i16 %345 to i32
  %347 = add nsw i32 %346, %341
  br label %356

348:                                              ; preds = %326
  %349 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp9_dct_cat_lt_10_value_tokens, align 8
  %350 = sext i32 %284 to i64
  %351 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %349, i64 %350, i32 0
  %352 = load i16, i16* %351, align 4
  %353 = load i32*, i32** @vp9_dct_cat_lt_10_value_cost, align 8
  %354 = getelementptr inbounds i32, i32* %353, i64 %350
  %355 = load i32, i32* %354, align 4
  br label %356

356:                                              ; preds = %332, %348
  %357 = phi i16 [ 10, %332 ], [ %352, %348 ]
  %358 = phi i32 [ %347, %332 ], [ %355, %348 ]
  %359 = sext i32 %358 to i64
  %360 = zext i1 %217 to i64
  %361 = sext i32 %216 to i64
  %362 = sext i16 %327 to i64
  %363 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %218, i64 %360, i64 %361, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = zext i32 %364 to i64
  %366 = add nsw i64 %365, %329
  %367 = sext i16 %357 to i64
  %368 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %218, i64 %360, i64 %361, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = zext i32 %369 to i64
  %371 = add nsw i64 %370, %359
  %372 = icmp slt i64 %182, %178
  br i1 %372, label %373, label %441

373:                                              ; preds = %356
  %374 = add nuw nsw i64 %182, 1
  %375 = getelementptr inbounds i8, i8* %41, i64 %374
  %376 = load i8, i8* %375, align 1
  %377 = icmp eq i64 %374, %179
  br i1 %377, label %394, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds i16, i16* %67, i64 %374
  %380 = load i16, i16* %379, align 2
  %381 = sext i16 %380 to i64
  %382 = getelementptr inbounds i32, i32* %22, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = add i32 %383, 66
  %385 = icmp ugt i32 %384, 132
  br i1 %385, label %391, label %386

386:                                              ; preds = %378
  %387 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp9_dct_cat_lt_10_value_tokens, align 8
  %388 = sext i32 %383 to i64
  %389 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %387, i64 %388, i32 0
  %390 = load i16, i16* %389, align 4
  br label %391

391:                                              ; preds = %378, %386
  %392 = phi i16 [ %390, %386 ], [ 10, %378 ]
  %393 = sext i16 %392 to i64
  br label %394

394:                                              ; preds = %373, %391
  %395 = phi i64 [ %393, %391 ], [ 11, %373 ]
  %396 = zext i8 %376 to i64
  %397 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %362
  %398 = load i8, i8* %397, align 1
  %399 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %193
  store i8 %398, i8* %399, align 1
  %400 = shl nuw nsw i64 %374, 1
  %401 = getelementptr inbounds i16, i16* %69, i64 %400
  %402 = load i16, i16* %401, align 2
  %403 = sext i16 %402 to i64
  %404 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %403
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i64
  %407 = add nuw nsw i64 %406, 1
  %408 = or i64 %400, 1
  %409 = getelementptr inbounds i16, i16* %69, i64 %408
  %410 = load i16, i16* %409, align 2
  %411 = sext i16 %410 to i64
  %412 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %411
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i64
  %415 = add nuw nsw i64 %407, %414
  %416 = lshr i64 %415, 1
  %417 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %396, i64 0, i64 %416, i64 %395
  %418 = load i32, i32* %417, align 4
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %396, i64 0, i64 %416, i64 11
  %421 = load i32, i32* %420, align 4
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %367
  %424 = load i8, i8* %423, align 1
  store i8 %424, i8* %399, align 1
  %425 = load i8, i8* %404, align 1
  %426 = zext i8 %425 to i64
  %427 = add nuw nsw i64 %426, 1
  %428 = load i8, i8* %412, align 1
  %429 = zext i8 %428 to i64
  %430 = add nuw nsw i64 %427, %429
  %431 = lshr i64 %430, 1
  %432 = icmp eq i32 %284, 0
  %433 = zext i1 %432 to i64
  %434 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %396, i64 %433, i64 %431, i64 %395
  %435 = load i32, i32* %434, align 4
  %436 = zext i32 %435 to i64
  br i1 %285, label %437, label %441

437:                                              ; preds = %394
  %438 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 41, i64 %104, i64 %76, i64 %75, i64 %396, i64 %433, i64 %431, i64 11
  %439 = load i32, i32* %438, align 4
  %440 = zext i32 %439 to i64
  br label %441

441:                                              ; preds = %394, %437, %356
  %442 = phi i64 [ 0, %356 ], [ %419, %437 ], [ %419, %394 ]
  %443 = phi i64 [ 0, %356 ], [ %436, %437 ], [ %436, %394 ]
  %444 = phi i64 [ 0, %356 ], [ %422, %437 ], [ %422, %394 ]
  %445 = phi i64 [ 0, %356 ], [ %440, %437 ], [ 0, %394 ]
  %446 = add nsw i64 %442, %366
  %447 = mul nsw i64 %446, %94
  %448 = add nsw i64 %447, 256
  %449 = ashr i64 %448, 9
  %450 = shl i64 %280, %97
  %451 = add nsw i64 %449, %450
  %452 = add nsw i64 %443, %371
  %453 = mul nsw i64 %452, %94
  %454 = add nsw i64 %453, 256
  %455 = ashr i64 %454, 9
  %456 = shl i64 %299, %97
  %457 = add nsw i64 %455, %456
  %458 = icmp slt i64 %457, %451
  %459 = add nsw i64 %366, %188
  %460 = add nsw i64 %444, %459
  %461 = mul nsw i64 %460, %94
  %462 = add nsw i64 %461, 256
  %463 = ashr i64 %462, 9
  %464 = sub i64 %187, %277
  %465 = add i64 %464, %280
  %466 = shl i64 %465, %97
  %467 = add nsw i64 %463, %466
  br i1 %285, label %468, label %490

468:                                              ; preds = %441
  %469 = add nsw i64 %371, %188
  %470 = add nsw i64 %469, %445
  %471 = mul nsw i64 %470, %94
  %472 = add nsw i64 %471, 256
  %473 = ashr i64 %472, 9
  %474 = add i64 %464, %299
  %475 = shl i64 %474, %97
  %476 = add nsw i64 %473, %475
  %477 = icmp slt i64 %476, %467
  %478 = zext i1 %477 to i32
  %479 = sext i1 %458 to i32
  %480 = icmp eq i32 %478, %479
  br i1 %480, label %490, label %481

481:                                              ; preds = %468
  %482 = mul nsw i32 %284, %236
  %483 = icmp sgt i32 %482, -1
  br i1 %483, label %484, label %486

484:                                              ; preds = %481
  %485 = lshr i32 %482, %37
  br label %490

486:                                              ; preds = %481
  %487 = sub nsw i32 0, %482
  %488 = ashr i32 %487, %37
  %489 = sub nsw i32 0, %488
  br label %490

490:                                              ; preds = %441, %468, %484, %486
  %491 = phi i32 [ %478, %468 ], [ %478, %484 ], [ %478, %486 ], [ 0, %441 ]
  %492 = phi i64 [ %476, %468 ], [ %476, %484 ], [ %476, %486 ], [ %467, %441 ]
  %493 = phi i32 [ 0, %468 ], [ %485, %484 ], [ %489, %486 ], [ 0, %441 ]
  br i1 %458, label %494, label %496

494:                                              ; preds = %490
  store i32 %284, i32* %194, align 4
  store i32 %493, i32* %276, align 4
  %495 = add nsw i64 %371, %188
  br label %496

496:                                              ; preds = %490, %494
  %497 = phi i64 [ %367, %494 ], [ %362, %490 ]
  %498 = phi i64 [ %495, %494 ], [ %459, %490 ]
  %499 = phi i64 [ %299, %494 ], [ %280, %490 ]
  %500 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %497
  %501 = load i8, i8* %500, align 1
  %502 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %193
  store i8 %501, i8* %502, align 1
  %503 = sub nsw i64 %499, %277
  %504 = add nsw i64 %503, %187
  %505 = load i32, i32* %194, align 4
  br i1 %177, label %506, label %513

506:                                              ; preds = %496
  %507 = icmp slt i32 %505, 0
  %508 = sub nsw i32 0, %505
  %509 = select i1 %507, i32 %508, i32 %505
  %510 = icmp sgt i32 %509, 1
  %511 = zext i1 %510 to i32
  %512 = add nsw i32 %189, %511
  br label %513

513:                                              ; preds = %496, %506
  %514 = phi i32 [ %512, %506 ], [ %189, %496 ]
  %515 = icmp ne i32 %491, 0
  %516 = and i1 %285, %515
  %517 = select i1 %516, i64 %492, i64 %467
  %518 = icmp slt i64 %517, %186
  br i1 %518, label %519, label %524

519:                                              ; preds = %513
  %520 = select i1 %516, i32 %284, i32 %195
  %521 = select i1 %516, i32 %493, i32 %275
  %522 = trunc i64 %182 to i32
  %523 = add i32 %522, 1
  br label %524

524:                                              ; preds = %513, %519, %220
  %525 = phi i32 [ %190, %220 ], [ %190, %513 ], [ %523, %519 ]
  %526 = phi i32 [ %189, %220 ], [ %514, %513 ], [ 0, %519 ]
  %527 = phi i64 [ %230, %220 ], [ %498, %513 ], [ %498, %519 ]
  %528 = phi i64 [ %187, %220 ], [ %504, %513 ], [ %504, %519 ]
  %529 = phi i64 [ %186, %220 ], [ %186, %513 ], [ %517, %519 ]
  %530 = phi i32 [ 0, %220 ], [ %505, %513 ], [ %505, %519 ]
  %531 = phi i32 [ %184, %220 ], [ %184, %513 ], [ %520, %519 ]
  %532 = phi i32 [ %183, %220 ], [ %183, %513 ], [ %521, %519 ]
  %533 = add nuw nsw i64 %182, 1
  %534 = icmp eq i64 %533, %179
  br i1 %534, label %538, label %535

535:                                              ; preds = %524
  %536 = getelementptr inbounds i8, i8* %41, i64 %533
  %537 = load i8, i8* %536, align 1
  br label %180

538:                                              ; preds = %524
  %539 = icmp sgt i32 %526, 0
  br i1 %539, label %540, label %553

540:                                              ; preds = %538
  %541 = zext i16 %30 to i64
  br label %542

542:                                              ; preds = %540, %546
  %543 = phi i64 [ %541, %540 ], [ %544, %546 ]
  %544 = add nsw i64 %543, -1
  %545 = icmp sgt i64 %543, 0
  br i1 %545, label %546, label %615

546:                                              ; preds = %542
  %547 = getelementptr inbounds i16, i16* %67, i64 %544
  %548 = load i16, i16* %547, align 2
  %549 = sext i16 %548 to i64
  %550 = getelementptr inbounds i32, i32* %22, i64 %549
  %551 = load i32, i32* %550, align 4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %542, label %615

553:                                              ; preds = %538
  %554 = icmp sgt i32 %525, 0
  br i1 %554, label %555, label %563

555:                                              ; preds = %553
  %556 = add nsw i32 %525, -1
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds i16, i16* %67, i64 %557
  %559 = load i16, i16* %558, align 2
  %560 = sext i16 %559 to i64
  %561 = getelementptr inbounds i32, i32* %22, i64 %560
  store i32 %531, i32* %561, align 4
  %562 = getelementptr inbounds i32, i32* %25, i64 %560
  store i32 %532, i32* %562, align 4
  br label %563

563:                                              ; preds = %162, %93, %555, %553
  %564 = phi i32 [ %525, %555 ], [ %525, %553 ], [ 0, %93 ], [ 0, %162 ]
  %565 = icmp slt i32 %564, %31
  br i1 %565, label %566, label %617

566:                                              ; preds = %563
  %567 = sext i32 %564 to i64
  %568 = zext i16 %30 to i64
  %569 = sub nsw i64 %568, %567
  %570 = xor i64 %567, -1
  %571 = add nsw i64 %570, %568
  %572 = and i64 %569, 3
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %585, label %574

574:                                              ; preds = %566, %574
  %575 = phi i64 [ %582, %574 ], [ %567, %566 ]
  %576 = phi i64 [ %583, %574 ], [ %572, %566 ]
  %577 = getelementptr inbounds i16, i16* %67, i64 %575
  %578 = load i16, i16* %577, align 2
  %579 = sext i16 %578 to i64
  %580 = getelementptr inbounds i32, i32* %22, i64 %579
  store i32 0, i32* %580, align 4
  %581 = getelementptr inbounds i32, i32* %25, i64 %579
  store i32 0, i32* %581, align 4
  %582 = add nsw i64 %575, 1
  %583 = add i64 %576, -1
  %584 = icmp eq i64 %583, 0
  br i1 %584, label %585, label %574, !llvm.loop !2

585:                                              ; preds = %574, %566
  %586 = phi i64 [ %567, %566 ], [ %582, %574 ]
  %587 = icmp ult i64 %571, 3
  br i1 %587, label %617, label %588

588:                                              ; preds = %585, %588
  %589 = phi i64 [ %613, %588 ], [ %586, %585 ]
  %590 = getelementptr inbounds i16, i16* %67, i64 %589
  %591 = load i16, i16* %590, align 2
  %592 = sext i16 %591 to i64
  %593 = getelementptr inbounds i32, i32* %22, i64 %592
  store i32 0, i32* %593, align 4
  %594 = getelementptr inbounds i32, i32* %25, i64 %592
  store i32 0, i32* %594, align 4
  %595 = add nsw i64 %589, 1
  %596 = getelementptr inbounds i16, i16* %67, i64 %595
  %597 = load i16, i16* %596, align 2
  %598 = sext i16 %597 to i64
  %599 = getelementptr inbounds i32, i32* %22, i64 %598
  store i32 0, i32* %599, align 4
  %600 = getelementptr inbounds i32, i32* %25, i64 %598
  store i32 0, i32* %600, align 4
  %601 = add nsw i64 %589, 2
  %602 = getelementptr inbounds i16, i16* %67, i64 %601
  %603 = load i16, i16* %602, align 2
  %604 = sext i16 %603 to i64
  %605 = getelementptr inbounds i32, i32* %22, i64 %604
  store i32 0, i32* %605, align 4
  %606 = getelementptr inbounds i32, i32* %25, i64 %604
  store i32 0, i32* %606, align 4
  %607 = add nsw i64 %589, 3
  %608 = getelementptr inbounds i16, i16* %67, i64 %607
  %609 = load i16, i16* %608, align 2
  %610 = sext i16 %609 to i64
  %611 = getelementptr inbounds i32, i32* %22, i64 %610
  store i32 0, i32* %611, align 4
  %612 = getelementptr inbounds i32, i32* %25, i64 %610
  store i32 0, i32* %612, align 4
  %613 = add nsw i64 %589, 4
  %614 = icmp eq i64 %613, %568
  br i1 %614, label %617, label %588

615:                                              ; preds = %546, %542
  %616 = trunc i64 %543 to i32
  br label %617

617:                                              ; preds = %585, %588, %615, %563
  %618 = phi i32 [ %564, %563 ], [ %616, %615 ], [ %564, %588 ], [ %564, %585 ]
  %619 = trunc i32 %618 to i16
  %620 = load i16*, i16** %26, align 16
  %621 = getelementptr inbounds i16, i16* %620, i64 %28
  store i16 %619, i16* %621, align 2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %14) #3
  ret i32 %618

622:                                              ; preds = %127
  %623 = sext i32 %138 to i64
  %624 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %107, i64 %623, i32 0
  %625 = load i16, i16* %624, align 4
  br label %626

626:                                              ; preds = %622, %127
  %627 = phi i16 [ %625, %622 ], [ 10, %127 ]
  %628 = sext i16 %627 to i64
  %629 = getelementptr inbounds [12 x i8], [12 x i8]* @vp9_pt_energy_class, i64 0, i64 %628
  %630 = load i8, i8* %629, align 1
  %631 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %136
  store i8 %630, i8* %631, align 1
  %632 = add nuw nsw i64 %114, 2
  %633 = add i64 %115, -2
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %141, label %113
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_xform_quant_fp(%struct.macroblock*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %8 = sext i32 %1 to i64
  %9 = zext i8 %6 to i64
  %10 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 2
  %12 = load i32*, i32** %11, align 8
  %13 = shl nsw i32 %2, 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 1
  %17 = load i32*, i32** %16, align 16
  %18 = getelementptr inbounds i32, i32* %17, i64 %14
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %14
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 3
  %23 = load i16*, i16** %22, align 16
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds i16, i16* %23, i64 %24
  %26 = zext i8 %5 to i64
  %27 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 2
  %31 = mul nsw i32 %30, %3
  %32 = add nsw i32 %31, %4
  %33 = shl nsw i32 %32, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 0, i64 %34
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %37 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %36, align 8
  %38 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %37, i64 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %99, label %42

42:                                               ; preds = %7
  switch i8 %6, label %85 [
    i8 3, label %43
    i8 2, label %61
    i8 1, label %73
  ]

43:                                               ; preds = %42
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @vpx_highbd_fdct32x32_rd_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %49

48:                                               ; preds = %43
  tail call void @vpx_highbd_fdct32x32_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %49

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 16
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %54 = load i16*, i16** %53, align 16
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %60 = load i16*, i16** %59, align 8
  tail call void @vp9_highbd_quantize_fp_32x32_c(i32* %15, i64 1024, i32 %51, i16* %52, i16* %54, i32* %18, i32* %21, i16* %56, i16* %25, i16* %58, i16* %60) #3
  br label %160

61:                                               ; preds = %42
  tail call void @vpx_highbd_fdct16x16_sse2(i16* %35, i32* %15, i32 %30) #3
  %62 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 16
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %66 = load i16*, i16** %65, align 16
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %68 = load i16*, i16** %67, align 8
  %69 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %70 = load i16*, i16** %69, align 8
  %71 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %72 = load i16*, i16** %71, align 8
  tail call void @vp9_highbd_quantize_fp_c(i32* %15, i64 256, i32 %63, i16* %64, i16* %66, i32* %18, i32* %21, i16* %68, i16* %25, i16* %70, i16* %72) #3
  br label %160

73:                                               ; preds = %42
  tail call void @vpx_highbd_fdct8x8_sse2(i16* %35, i32* %15, i32 %30) #3
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %75 = load i32, i32* %74, align 16
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %78 = load i16*, i16** %77, align 16
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %80 = load i16*, i16** %79, align 8
  %81 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %82 = load i16*, i16** %81, align 8
  %83 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %84 = load i16*, i16** %83, align 8
  tail call void @vp9_highbd_quantize_fp_c(i32* %15, i64 64, i32 %75, i16* %76, i16* %78, i32* %18, i32* %21, i16* %80, i16* %25, i16* %82, i16* %84) #3
  br label %160

85:                                               ; preds = %42
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %87 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %86, align 16
  tail call void %87(i16* %35, i32* %15, i32 %30) #3
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %89 = load i32, i32* %88, align 16
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %92 = load i16*, i16** %91, align 16
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %94 = load i16*, i16** %93, align 8
  %95 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %98 = load i16*, i16** %97, align 8
  tail call void @vp9_highbd_quantize_fp_c(i32* %15, i64 16, i32 %89, i16* %90, i16* %92, i32* %18, i32* %21, i16* %94, i16* %25, i16* %96, i16* %98) #3
  br label %160

99:                                               ; preds = %7
  switch i8 %6, label %145 [
    i8 3, label %100
    i8 2, label %119
    i8 1, label %132
  ]

100:                                              ; preds = %99
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 43
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  tail call void @vpx_fdct32x32_rd_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %106

105:                                              ; preds = %100
  tail call void @vpx_fdct32x32_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %106

106:                                              ; preds = %104, %105
  %107 = load void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vp9_quantize_fp_32x32, align 8
  %108 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %109 = load i32, i32* %108, align 16
  %110 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %112 = load i16*, i16** %111, align 16
  %113 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %114 = load i16*, i16** %113, align 8
  %115 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %116 = load i16*, i16** %115, align 8
  %117 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %118 = load i16*, i16** %117, align 8
  tail call void %107(i32* %15, i64 1024, i32 %109, i16* %110, i16* %112, i32* %18, i32* %21, i16* %114, i16* %25, i16* %116, i16* %118) #3
  br label %160

119:                                              ; preds = %99
  tail call void @vpx_fdct16x16_sse2(i16* %35, i32* %15, i32 %30) #3
  %120 = load void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vp9_quantize_fp, align 8
  %121 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %122 = load i32, i32* %121, align 16
  %123 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %124 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %125 = load i16*, i16** %124, align 16
  %126 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %127 = load i16*, i16** %126, align 8
  %128 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %129 = load i16*, i16** %128, align 8
  %130 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %131 = load i16*, i16** %130, align 8
  tail call void %120(i32* %15, i64 256, i32 %122, i16* %123, i16* %125, i32* %18, i32* %21, i16* %127, i16* %25, i16* %129, i16* %131) #3
  br label %160

132:                                              ; preds = %99
  tail call void @vpx_fdct8x8_sse2(i16* %35, i32* %15, i32 %30) #3
  %133 = load void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vp9_quantize_fp, align 8
  %134 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %135 = load i32, i32* %134, align 16
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %138 = load i16*, i16** %137, align 16
  %139 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %140 = load i16*, i16** %139, align 8
  %141 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %142 = load i16*, i16** %141, align 8
  %143 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %144 = load i16*, i16** %143, align 8
  tail call void %133(i32* %15, i64 64, i32 %135, i16* %136, i16* %138, i32* %18, i32* %21, i16* %140, i16* %25, i16* %142, i16* %144) #3
  br label %160

145:                                              ; preds = %99
  %146 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %147 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %146, align 16
  tail call void %147(i16* %35, i32* %15, i32 %30) #3
  %148 = load void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vp9_quantize_fp, align 8
  %149 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %150 = load i32, i32* %149, align 16
  %151 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 6, i64 0
  %152 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %153 = load i16*, i16** %152, align 16
  %154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %155 = load i16*, i16** %154, align 8
  %156 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %157 = load i16*, i16** %156, align 8
  %158 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %159 = load i16*, i16** %158, align 8
  tail call void %148(i32* %15, i64 16, i32 %150, i16* %151, i16* %153, i32* %18, i32* %21, i16* %155, i16* %25, i16* %157, i16* %159) #3
  br label %160

160:                                              ; preds = %106, %119, %132, %145, %49, %61, %73, %85
  ret void
}

declare void @vp9_highbd_quantize_fp_32x32_c(i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) local_unnamed_addr #2

declare void @vpx_highbd_fdct16x16_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vp9_highbd_quantize_fp_c(i32*, i64, i32, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) local_unnamed_addr #2

declare void @vpx_highbd_fdct8x8_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_fdct16x16_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_fdct8x8_sse2(i16*, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_xform_quant_dc(%struct.macroblock*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 2
  %10 = load i32*, i32** %9, align 8
  %11 = shl nsw i32 %2, 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 1
  %15 = load i32*, i32** %14, align 16
  %16 = getelementptr inbounds i32, i32* %15, i64 %12
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 %12
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 3
  %21 = load i16*, i16** %20, align 16
  %22 = sext i32 %2 to i64
  %23 = getelementptr inbounds i16, i16* %21, i64 %22
  %24 = zext i8 %5 to i64
  %25 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = shl nuw nsw i32 %27, 2
  %29 = mul nsw i32 %28, %3
  %30 = add nsw i32 %29, %4
  %31 = shl nsw i32 %30, 2
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 0, i64 %32
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %35 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %34, align 8
  %36 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %35, i64 0, i32 29
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %87, label %40

40:                                               ; preds = %7
  switch i8 %6, label %74 [
    i8 3, label %41
    i8 2, label %52
    i8 1, label %63
  ]

41:                                               ; preds = %40
  tail call void @vpx_highbd_fdct32x32_1_c(i16* %33, i32* %13, i32 %28) #3
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %43 = load i32, i32* %42, align 16
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %45 = load i16*, i16** %44, align 16
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %47 = load i16*, i16** %46, align 16
  %48 = load i16, i16* %47, align 2
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %50 = load i16*, i16** %49, align 8
  %51 = load i16, i16* %50, align 2
  tail call void @vpx_highbd_quantize_dc_32x32(i32* %13, i32 %43, i16* %45, i16 signext %48, i32* %16, i32* %19, i16 signext %51, i16* %23) #3
  br label %134

52:                                               ; preds = %40
  tail call void @vpx_highbd_fdct16x16_1_c(i16* %33, i32* %13, i32 %28) #3
  %53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %54 = load i32, i32* %53, align 16
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %56 = load i16*, i16** %55, align 16
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %58 = load i16*, i16** %57, align 16
  %59 = load i16, i16* %58, align 2
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %61 = load i16*, i16** %60, align 8
  %62 = load i16, i16* %61, align 2
  tail call void @vpx_highbd_quantize_dc(i32* %13, i32 256, i32 %54, i16* %56, i16 signext %59, i32* %16, i32* %19, i16 signext %62, i16* %23) #3
  br label %134

63:                                               ; preds = %40
  tail call void @vpx_highbd_fdct8x8_1_c(i16* %33, i32* %13, i32 %28) #3
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %65 = load i32, i32* %64, align 16
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %67 = load i16*, i16** %66, align 16
  %68 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %69 = load i16*, i16** %68, align 16
  %70 = load i16, i16* %69, align 2
  %71 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %72 = load i16*, i16** %71, align 8
  %73 = load i16, i16* %72, align 2
  tail call void @vpx_highbd_quantize_dc(i32* %13, i32 64, i32 %65, i16* %67, i16 signext %70, i32* %16, i32* %19, i16 signext %73, i16* %23) #3
  br label %134

74:                                               ; preds = %40
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %76 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %75, align 16
  tail call void %76(i16* %33, i32* %13, i32 %28) #3
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %78 = load i32, i32* %77, align 16
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %80 = load i16*, i16** %79, align 16
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %82 = load i16*, i16** %81, align 16
  %83 = load i16, i16* %82, align 2
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %85 = load i16*, i16** %84, align 8
  %86 = load i16, i16* %85, align 2
  tail call void @vpx_highbd_quantize_dc(i32* %13, i32 16, i32 %78, i16* %80, i16 signext %83, i32* %16, i32* %19, i16 signext %86, i16* %23) #3
  br label %134

87:                                               ; preds = %7
  switch i8 %6, label %121 [
    i8 3, label %88
    i8 2, label %99
    i8 1, label %110
  ]

88:                                               ; preds = %87
  tail call void @vpx_fdct32x32_1_sse2(i16* %33, i32* %13, i32 %28) #3
  %89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %90 = load i32, i32* %89, align 16
  %91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %92 = load i16*, i16** %91, align 16
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %94 = load i16*, i16** %93, align 16
  %95 = load i16, i16* %94, align 2
  %96 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %97 = load i16*, i16** %96, align 8
  %98 = load i16, i16* %97, align 2
  tail call void @vpx_quantize_dc_32x32(i32* %13, i32 %90, i16* %92, i16 signext %95, i32* %16, i32* %19, i16 signext %98, i16* %23) #3
  br label %134

99:                                               ; preds = %87
  tail call void @vpx_fdct16x16_1_sse2(i16* %33, i32* %13, i32 %28) #3
  %100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %101 = load i32, i32* %100, align 16
  %102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %103 = load i16*, i16** %102, align 16
  %104 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %105 = load i16*, i16** %104, align 16
  %106 = load i16, i16* %105, align 2
  %107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %108 = load i16*, i16** %107, align 8
  %109 = load i16, i16* %108, align 2
  tail call void @vpx_quantize_dc(i32* %13, i32 256, i32 %101, i16* %103, i16 signext %106, i32* %16, i32* %19, i16 signext %109, i16* %23) #3
  br label %134

110:                                              ; preds = %87
  tail call void @vpx_fdct8x8_1_sse2(i16* %33, i32* %13, i32 %28) #3
  %111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %112 = load i32, i32* %111, align 16
  %113 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %114 = load i16*, i16** %113, align 16
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %116 = load i16*, i16** %115, align 16
  %117 = load i16, i16* %116, align 2
  %118 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %119 = load i16*, i16** %118, align 8
  %120 = load i16, i16* %119, align 2
  tail call void @vpx_quantize_dc(i32* %13, i32 64, i32 %112, i16* %114, i16 signext %117, i32* %16, i32* %19, i16 signext %120, i16* %23) #3
  br label %134

121:                                              ; preds = %87
  %122 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %123 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %122, align 16
  tail call void %123(i16* %33, i32* %13, i32 %28) #3
  %124 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %125 = load i32, i32* %124, align 16
  %126 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %127 = load i16*, i16** %126, align 16
  %128 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 7
  %129 = load i16*, i16** %128, align 16
  %130 = load i16, i16* %129, align 2
  %131 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %132 = load i16*, i16** %131, align 8
  %133 = load i16, i16* %132, align 2
  tail call void @vpx_quantize_dc(i32* %13, i32 16, i32 %125, i16* %127, i16 signext %130, i32* %16, i32* %19, i16 signext %133, i16* %23) #3
  br label %134

134:                                              ; preds = %88, %99, %110, %121, %41, %52, %63, %74
  ret void
}

declare void @vpx_highbd_fdct32x32_1_c(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_highbd_quantize_dc_32x32(i32*, i32, i16*, i16 signext, i32*, i32*, i16 signext, i16*) local_unnamed_addr #2

declare void @vpx_highbd_fdct16x16_1_c(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_highbd_quantize_dc(i32*, i32, i32, i16*, i16 signext, i32*, i32*, i16 signext, i16*) local_unnamed_addr #2

declare void @vpx_highbd_fdct8x8_1_c(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_fdct32x32_1_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_quantize_dc_32x32(i32*, i32, i16*, i16 signext, i32*, i32*, i16 signext, i16*) local_unnamed_addr #2

declare void @vpx_fdct16x16_1_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_quantize_dc(i32*, i32, i32, i16*, i16 signext, i32*, i32*, i16 signext, i16*) local_unnamed_addr #2

declare void @vpx_fdct8x8_1_sse2(i16*, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_xform_quant(%struct.macroblock*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %8 = sext i32 %1 to i64
  %9 = zext i8 %6 to i64
  %10 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 2
  %12 = load i32*, i32** %11, align 8
  %13 = shl nsw i32 %2, 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 1
  %17 = load i32*, i32** %16, align 16
  %18 = getelementptr inbounds i32, i32* %17, i64 %14
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %14
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 3
  %23 = load i16*, i16** %22, align 16
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds i16, i16* %23, i64 %24
  %26 = zext i8 %5 to i64
  %27 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 2
  %31 = mul nsw i32 %30, %3
  %32 = add nsw i32 %31, %4
  %33 = shl nsw i32 %32, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 0, i64 %34
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %37 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %36, align 8
  %38 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %37, i64 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %119, label %42

42:                                               ; preds = %7
  switch i8 %6, label %100 [
    i8 3, label %43
    i8 2, label %66
    i8 1, label %83
  ]

43:                                               ; preds = %42
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 43
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  tail call void @vpx_highbd_fdct32x32_rd_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %49

48:                                               ; preds = %43
  tail call void @vpx_highbd_fdct32x32_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %49

49:                                               ; preds = %47, %48
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 16
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %55 = load i16*, i16** %54, align 16
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %57 = load i16*, i16** %56, align 8
  %58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %59 = load i16*, i16** %58, align 16
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %61 = load i16*, i16** %60, align 8
  %62 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %65 = load i16*, i16** %64, align 8
  tail call void @vpx_highbd_quantize_b_32x32_sse2(i32* %15, i64 1024, i32 %51, i16* %53, i16* %55, i16* %57, i16* %59, i32* %18, i32* %21, i16* %61, i16* %25, i16* %63, i16* %65) #3
  br label %200

66:                                               ; preds = %42
  tail call void @vpx_highbd_fdct16x16_sse2(i16* %35, i32* %15, i32 %30) #3
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %68 = load i32, i32* %67, align 16
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %70 = load i16*, i16** %69, align 8
  %71 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %72 = load i16*, i16** %71, align 16
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %74 = load i16*, i16** %73, align 8
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %76 = load i16*, i16** %75, align 16
  %77 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %78 = load i16*, i16** %77, align 8
  %79 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %82 = load i16*, i16** %81, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %15, i64 256, i32 %68, i16* %70, i16* %72, i16* %74, i16* %76, i32* %18, i32* %21, i16* %78, i16* %25, i16* %80, i16* %82) #3
  br label %200

83:                                               ; preds = %42
  tail call void @vpx_highbd_fdct8x8_sse2(i16* %35, i32* %15, i32 %30) #3
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %85 = load i32, i32* %84, align 16
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %87 = load i16*, i16** %86, align 8
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %89 = load i16*, i16** %88, align 16
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %91 = load i16*, i16** %90, align 8
  %92 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %93 = load i16*, i16** %92, align 16
  %94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %97 = load i16*, i16** %96, align 8
  %98 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %99 = load i16*, i16** %98, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %15, i64 64, i32 %85, i16* %87, i16* %89, i16* %91, i16* %93, i32* %18, i32* %21, i16* %95, i16* %25, i16* %97, i16* %99) #3
  br label %200

100:                                              ; preds = %42
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %102 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %101, align 16
  tail call void %102(i16* %35, i32* %15, i32 %30) #3
  %103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %104 = load i32, i32* %103, align 16
  %105 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %106 = load i16*, i16** %105, align 8
  %107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %108 = load i16*, i16** %107, align 16
  %109 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %110 = load i16*, i16** %109, align 8
  %111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %112 = load i16*, i16** %111, align 16
  %113 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %114 = load i16*, i16** %113, align 8
  %115 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %116 = load i16*, i16** %115, align 8
  %117 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %118 = load i16*, i16** %117, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %15, i64 16, i32 %104, i16* %106, i16* %108, i16* %110, i16* %112, i32* %18, i32* %21, i16* %114, i16* %25, i16* %116, i16* %118) #3
  br label %200

119:                                              ; preds = %7
  switch i8 %6, label %180 [
    i8 3, label %120
    i8 2, label %144
    i8 1, label %162
  ]

120:                                              ; preds = %119
  %121 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 43
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  tail call void @vpx_fdct32x32_rd_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %126

125:                                              ; preds = %120
  tail call void @vpx_fdct32x32_sse2(i16* %35, i32* %15, i32 %30) #3
  br label %126

126:                                              ; preds = %124, %125
  %127 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b_32x32, align 8
  %128 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %129 = load i32, i32* %128, align 16
  %130 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %131 = load i16*, i16** %130, align 8
  %132 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %133 = load i16*, i16** %132, align 16
  %134 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %135 = load i16*, i16** %134, align 8
  %136 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %137 = load i16*, i16** %136, align 16
  %138 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %139 = load i16*, i16** %138, align 8
  %140 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %141 = load i16*, i16** %140, align 8
  %142 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %143 = load i16*, i16** %142, align 8
  tail call void %127(i32* %15, i64 1024, i32 %129, i16* %131, i16* %133, i16* %135, i16* %137, i32* %18, i32* %21, i16* %139, i16* %25, i16* %141, i16* %143) #3
  br label %200

144:                                              ; preds = %119
  tail call void @vpx_fdct16x16_sse2(i16* %35, i32* %15, i32 %30) #3
  %145 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %146 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %147 = load i32, i32* %146, align 16
  %148 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %149 = load i16*, i16** %148, align 8
  %150 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %151 = load i16*, i16** %150, align 16
  %152 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %153 = load i16*, i16** %152, align 8
  %154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %155 = load i16*, i16** %154, align 16
  %156 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %157 = load i16*, i16** %156, align 8
  %158 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %159 = load i16*, i16** %158, align 8
  %160 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %161 = load i16*, i16** %160, align 8
  tail call void %145(i32* %15, i64 256, i32 %147, i16* %149, i16* %151, i16* %153, i16* %155, i32* %18, i32* %21, i16* %157, i16* %25, i16* %159, i16* %161) #3
  br label %200

162:                                              ; preds = %119
  tail call void @vpx_fdct8x8_sse2(i16* %35, i32* %15, i32 %30) #3
  %163 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %164 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %165 = load i32, i32* %164, align 16
  %166 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %167 = load i16*, i16** %166, align 8
  %168 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %169 = load i16*, i16** %168, align 16
  %170 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %171 = load i16*, i16** %170, align 8
  %172 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %173 = load i16*, i16** %172, align 16
  %174 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %175 = load i16*, i16** %174, align 8
  %176 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %177 = load i16*, i16** %176, align 8
  %178 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %179 = load i16*, i16** %178, align 8
  tail call void %163(i32* %15, i64 64, i32 %165, i16* %167, i16* %169, i16* %171, i16* %173, i32* %18, i32* %21, i16* %175, i16* %25, i16* %177, i16* %179) #3
  br label %200

180:                                              ; preds = %119
  %181 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 64
  %182 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %181, align 16
  tail call void %182(i16* %35, i32* %15, i32 %30) #3
  %183 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %184 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4
  %185 = load i32, i32* %184, align 16
  %186 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 10
  %187 = load i16*, i16** %186, align 8
  %188 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 11
  %189 = load i16*, i16** %188, align 16
  %190 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 8
  %191 = load i16*, i16** %190, align 8
  %192 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 %8, i32 9
  %193 = load i16*, i16** %192, align 16
  %194 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %8, i32 12
  %195 = load i16*, i16** %194, align 8
  %196 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %10, i64 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds [4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 %9, i32 1
  %199 = load i16*, i16** %198, align 8
  tail call void %183(i32* %15, i64 16, i32 %185, i16* %187, i16* %189, i16* %191, i16* %193, i32* %18, i32* %21, i16* %195, i16* %25, i16* %197, i16* %199) #3
  br label %200

200:                                              ; preds = %126, %144, %162, %180, %49, %66, %83, %100
  ret void
}

declare void @vpx_highbd_quantize_b_32x32_sse2(i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) local_unnamed_addr #2

declare void @vpx_highbd_quantize_b_sse2(i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_encode_sby_pass1(%struct.macroblock*, i8 zeroext) local_unnamed_addr #0 {
  %3 = zext i8 %1 to i64
  %4 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [13 x [2 x [2 x i8]]], [13 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %3, i64 %6, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_wide_lookup, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 2
  %17 = getelementptr inbounds [13 x i8], [13 x i8]* @num_4x4_blocks_high_lookup, i64 0, i64 %12
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 18
  %22 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %21, align 16
  %23 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %22, i64 0, i32 29
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 8
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 0, i64 0
  %28 = zext i32 %16 to i64
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 3, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 0, i32 3, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  br i1 %26, label %42, label %39

39:                                               ; preds = %2
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 23
  %41 = load i32, i32* %40, align 16
  tail call void @vpx_highbd_subtract_block_c(i32 %20, i32 %16, i16* %27, i64 %28, i8* %30, i64 %33, i8* %35, i64 %38, i32 %41) #3
  br label %43

42:                                               ; preds = %2
  tail call void @vpx_subtract_block_sse2(i32 %20, i32 %16, i16* %27, i64 %28, i8* %30, i64 %33, i8* %35, i64 %38) #3
  br label %43

43:                                               ; preds = %39, %42
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %45 = bitcast %struct.macroblock* %0 to i8*
  tail call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %44, i8 zeroext %1, i32 0, void (i32, i32, i32, i32, i8, i8, i8*)* nonnull @encode_block_pass1, i8* %45) #3
  ret void
}

declare void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd*, i8 zeroext, i32, void (i32, i32, i32, i32, i8, i8, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @encode_block_pass1(i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8*) #0 {
  %8 = bitcast i8* %6 to %struct.macroblock*
  %9 = getelementptr inbounds i8, i8* %6, i64 24960
  %10 = bitcast i8* %6 to [3 x %struct.macroblock_plane]*
  %11 = sext i32 %0 to i64
  %12 = bitcast i8* %9 to [3 x %struct.macroblockd_plane]*
  %13 = getelementptr inbounds [3 x %struct.macroblockd_plane], [3 x %struct.macroblockd_plane]* %12, i64 0, i64 %11, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = shl nsw i32 %1, 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = getelementptr inbounds [3 x %struct.macroblockd_plane], [3 x %struct.macroblockd_plane]* %12, i64 0, i64 %11, i32 3, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds [3 x %struct.macroblockd_plane], [3 x %struct.macroblockd_plane]* %12, i64 0, i64 %11, i32 3, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = mul i32 %21, %2
  %23 = add i32 %22, %3
  %24 = shl i32 %23, 2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  tail call void @vp9_xform_quant(%struct.macroblock* %8, i32 %0, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i8 zeroext %5)
  %27 = getelementptr inbounds [3 x %struct.macroblock_plane], [3 x %struct.macroblock_plane]* %10, i64 0, i64 %11, i32 3
  %28 = load i16*, i16** %27, align 16
  %29 = sext i32 %1 to i64
  %30 = getelementptr inbounds i16, i16* %28, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = icmp eq i16 %31, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %7
  %35 = getelementptr inbounds i8, i8* %6, i64 25488
  %36 = bitcast i8* %35 to %struct.yv12_buffer_config**
  %37 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %36, align 8
  %38 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %37, i64 0, i32 29
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds i8, i8* %6, i64 82464
  %44 = bitcast i8* %43 to void (i32*, i16*, i32, i32, i32)**
  %45 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** %44, align 16
  %46 = ptrtoint i8* %26 to i64
  %47 = shl i64 %46, 1
  %48 = inttoptr i64 %47 to i16*
  %49 = load i32, i32* %20, align 8
  %50 = getelementptr inbounds i8, i8* %6, i64 25584
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 8
  tail call void %45(i32* %17, i16* %48, i32 %49, i32 %32, i32 %52) #3
  br label %58

53:                                               ; preds = %34
  %54 = getelementptr inbounds i8, i8* %6, i64 82456
  %55 = bitcast i8* %54 to void (i32*, i8*, i32, i32)**
  %56 = load void (i32*, i8*, i32, i32)*, void (i32*, i8*, i32, i32)** %55, align 8
  %57 = load i32, i32* %20, align 8
  tail call void %56(i32* %17, i8* %26, i32 %57, i32 %32) #3
  br label %58

58:                                               ; preds = %53, %7, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_encode_sb(%struct.macroblock*, i8 zeroext, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.optimize_ctx, align 1
  %7 = alloca %struct.encode_b_args, align 8
  %8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %6, i64 0, i32 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %9) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 -86, i64 96, i1 false)
  %10 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 6
  %11 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %10, align 8
  %12 = load %struct.MODE_INFO*, %struct.MODE_INFO** %11, align 8
  %13 = bitcast %struct.encode_b_args* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %7, i64 0, i32 0
  store %struct.macroblock* %0, %struct.macroblock** %14, align 8
  %15 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %7, i64 0, i32 1
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %7, i64 0, i32 2
  %17 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %7, i64 0, i32 3
  %18 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %7, i64 0, i32 4
  %19 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %12, i64 0, i32 3
  %20 = bitcast i8** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  store i8* %19, i8** %18, align 8
  store i8 1, i8* %19, align 1
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 39
  %22 = load i32, i32* %21, align 16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %72

24:                                               ; preds = %5
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 42
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 7
  %28 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %12, i64 0, i32 0
  %29 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %12, i64 0, i32 2
  br label %30

30:                                               ; preds = %65, %24
  %31 = phi i64 [ 0, %24 ], [ %70, %65 ]
  %32 = load i32, i32* %25, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = trunc i64 %31 to i32
  call void @vp9_subtract_plane(%struct.macroblock* %0, i8 zeroext %1, i32 %35)
  br label %36

36:                                               ; preds = %30, %34
  %37 = load i32, i32* %26, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %25, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %27, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %65

45:                                               ; preds = %42, %39
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %31
  %47 = icmp eq i64 %31, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %45
  %49 = load i8, i8* %28, align 4
  %50 = zext i8 %49 to i64
  %51 = load i8, i8* %29, align 2
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %31, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %31, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [13 x [4 x [2 x [2 x i8]]]], [13 x [4 x [2 x [2 x i8]]]]* @uv_txsize_lookup, i64 0, i64 %50, i64 %52, i64 %55, i64 %58
  br label %60

60:                                               ; preds = %45, %48
  %61 = phi i8* [ %59, %48 ], [ %29, %45 ]
  %62 = load i8, i8* %61, align 1
  %63 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %6, i64 0, i32 0, i64 %31, i64 0
  %64 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %6, i64 0, i32 1, i64 %31, i64 0
  call void @vp9_get_entropy_contexts(i8 zeroext %1, i8 zeroext %62, %struct.macroblockd_plane* %46, i8* %63, i8* %64) #3
  br label %65

65:                                               ; preds = %36, %42, %60
  %66 = phi i32 [ 1, %60 ], [ 0, %42 ], [ 0, %36 ]
  store i32 %66, i32* %15, align 8
  %67 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %6, i64 0, i32 0, i64 %31, i64 0
  store i8* %67, i8** %16, align 8
  %68 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %6, i64 0, i32 1, i64 %31, i64 0
  store i8* %68, i8** %17, align 8
  %69 = trunc i64 %31 to i32
  call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %8, i8 zeroext %1, i32 %69, void (i32, i32, i32, i32, i8, i8, i8*)* nonnull @encode_block, i8* nonnull %13) #3
  %70 = add nuw nsw i64 %31, 1
  %71 = icmp eq i64 %70, 3
  br i1 %71, label %72, label %30

72:                                               ; preds = %65, %5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %9) #3
  ret void
}

declare void @vp9_get_entropy_contexts(i8 zeroext, i8 zeroext, %struct.macroblockd_plane*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @encode_block(i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8* nocapture readonly) #0 {
  %8 = bitcast i8* %6 to %struct.macroblock**
  %9 = load %struct.macroblock*, %struct.macroblock** %8, align 8
  %10 = sext i32 %0 to i64
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %10, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = shl nsw i32 %1, 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %12, i64 %14
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %10, i32 3, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %10, i32 3, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = mul i32 %19, %2
  %21 = add i32 %20, %3
  %22 = shl i32 %21, 2
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %17, i64 %23
  %25 = getelementptr inbounds i8, i8* %6, i64 16
  %26 = bitcast i8* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = sext i32 %3 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = getelementptr inbounds i8, i8* %6, i64 24
  %31 = bitcast i8* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %2 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = zext i8 %5 to i64
  %36 = sext i32 %1 to i64
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 37, i64 %35, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  %40 = icmp eq i32 %0, 0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %46

42:                                               ; preds = %7
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %10, i32 3
  %44 = load i16*, i16** %43, align 16
  %45 = getelementptr inbounds i16, i16* %44, i64 %36
  store i16 0, i16* %45, align 2
  store i8 0, i8* %34, align 1
  store i8 0, i8* %29, align 1
  br label %174

46:                                               ; preds = %7
  %47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %85

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 46
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 47, i64 0
  %56 = load i8, i8* %55, align 4
  %57 = icmp eq i8 %56, 1
  %58 = and i1 %40, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %10, i32 3
  %61 = load i16*, i16** %60, align 16
  %62 = getelementptr inbounds i16, i16* %61, i64 %36
  store i16 0, i16* %62, align 2
  store i8 0, i8* %34, align 1
  store i8 0, i8* %29, align 1
  br label %174

63:                                               ; preds = %54
  tail call void @vp9_xform_quant_fp(%struct.macroblock* %9, i32 %0, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i8 zeroext %5)
  br label %85

64:                                               ; preds = %50
  %65 = zext i8 %4 to i64
  %66 = getelementptr inbounds [13 x i8], [13 x i8]* @max_txsize_lookup, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, %5
  br i1 %68, label %69, label %84

69:                                               ; preds = %64
  %70 = zext i8 %5 to i32
  %71 = shl i32 %0, 2
  %72 = shl nuw nsw i32 %70, 1
  %73 = ashr i32 %1, %72
  %74 = add nsw i32 %73, %71
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 47, i64 %75
  %77 = load i8, i8* %76, align 1
  switch i8 %77, label %80 [
    i8 0, label %78
    i8 2, label %79
  ]

78:                                               ; preds = %69
  tail call void @vp9_xform_quant(%struct.macroblock* %9, i32 %0, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i8 zeroext %5)
  br label %85

79:                                               ; preds = %69
  tail call void @vp9_xform_quant_dc(%struct.macroblock* %9, i32 %0, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i8 zeroext %5)
  br label %85

80:                                               ; preds = %69
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %10, i32 3
  %82 = load i16*, i16** %81, align 16
  %83 = getelementptr inbounds i16, i16* %82, i64 %36
  store i16 0, i16* %83, align 2
  store i8 0, i8* %34, align 1
  store i8 0, i8* %29, align 1
  br label %174

84:                                               ; preds = %64
  tail call void @vp9_xform_quant(%struct.macroblock* %9, i32 %0, i32 %1, i32 %2, i32 %3, i8 zeroext %4, i8 zeroext %5)
  br label %85

85:                                               ; preds = %79, %78, %46, %63, %84
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 42
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %106, label %89

89:                                               ; preds = %85
  %90 = load i32, i32* %47, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 7
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %106

96:                                               ; preds = %92, %89
  %97 = load i8, i8* %29, align 1
  %98 = load i8, i8* %34, align 1
  %99 = icmp ne i8 %97, 0
  %100 = zext i1 %99 to i32
  %101 = icmp ne i8 %98, 0
  %102 = zext i1 %101 to i32
  %103 = add nuw nsw i32 %102, %100
  %104 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext %5, i32 %103)
  %105 = icmp sgt i32 %104, 0
  br label %112

106:                                              ; preds = %92, %85
  %107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %10, i32 3
  %108 = load i16*, i16** %107, align 16
  %109 = getelementptr inbounds i16, i16* %108, i64 %36
  %110 = load i16, i16* %109, align 2
  %111 = icmp ne i16 %110, 0
  br label %112

112:                                              ; preds = %106, %96
  %113 = phi i1 [ %105, %96 ], [ %111, %106 ]
  %114 = zext i1 %113 to i8
  store i8 %114, i8* %34, align 1
  store i8 %114, i8* %29, align 1
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %10, i32 3
  %116 = load i16*, i16** %115, align 16
  %117 = getelementptr inbounds i16, i16* %116, i64 %36
  %118 = load i16, i16* %117, align 2
  %119 = icmp eq i16 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds i8, i8* %6, i64 32
  %122 = bitcast i8* %121 to i8**
  %123 = load i8*, i8** %122, align 8
  store i8 0, i8* %123, align 1
  br label %124

124:                                              ; preds = %112, %120
  %125 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 44
  %126 = load i32, i32* %125, align 16
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %174

128:                                              ; preds = %124
  %129 = load i16*, i16** %115, align 16
  %130 = getelementptr inbounds i16, i16* %129, i64 %36
  %131 = load i16, i16* %130, align 2
  %132 = zext i16 %131 to i32
  %133 = icmp eq i16 %131, 0
  br i1 %133, label %174, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 18
  %136 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %135, align 8
  %137 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %136, i64 0, i32 29
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %163, label %141

141:                                              ; preds = %134
  %142 = ptrtoint i8* %24 to i64
  %143 = shl i64 %142, 1
  %144 = inttoptr i64 %143 to i16*
  switch i8 %5, label %157 [
    i8 3, label %145
    i8 2, label %149
    i8 1, label %153
  ]

145:                                              ; preds = %141
  %146 = load i32, i32* %18, align 8
  %147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %148 = load i32, i32* %147, align 8
  tail call void @vp9_highbd_idct32x32_add(i32* %15, i16* %144, i32 %146, i32 %132, i32 %148) #3
  br label %174

149:                                              ; preds = %141
  %150 = load i32, i32* %18, align 8
  %151 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %152 = load i32, i32* %151, align 8
  tail call void @vp9_highbd_idct16x16_add(i32* %15, i16* %144, i32 %150, i32 %132, i32 %152) #3
  br label %174

153:                                              ; preds = %141
  %154 = load i32, i32* %18, align 8
  %155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %156 = load i32, i32* %155, align 8
  tail call void @vp9_highbd_idct8x8_add(i32* %15, i16* %144, i32 %154, i32 %132, i32 %156) #3
  br label %174

157:                                              ; preds = %141
  %158 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 66
  %159 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** %158, align 16
  %160 = load i32, i32* %18, align 8
  %161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %162 = load i32, i32* %161, align 8
  tail call void %159(i32* %15, i16* %144, i32 %160, i32 %132, i32 %162) #3
  br label %174

163:                                              ; preds = %134
  switch i8 %5, label %170 [
    i8 3, label %164
    i8 2, label %166
    i8 1, label %168
  ]

164:                                              ; preds = %163
  %165 = load i32, i32* %18, align 8
  tail call void @vp9_idct32x32_add(i32* %15, i8* %24, i32 %165, i32 %132) #3
  br label %174

166:                                              ; preds = %163
  %167 = load i32, i32* %18, align 8
  tail call void @vp9_idct16x16_add(i32* %15, i8* %24, i32 %167, i32 %132) #3
  br label %174

168:                                              ; preds = %163
  %169 = load i32, i32* %18, align 8
  tail call void @vp9_idct8x8_add(i32* %15, i8* %24, i32 %169, i32 %132) #3
  br label %174

170:                                              ; preds = %163
  %171 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 65
  %172 = load void (i32*, i8*, i32, i32)*, void (i32*, i8*, i32, i32)** %171, align 8
  %173 = load i32, i32* %18, align 8
  tail call void %172(i32* %15, i8* %24, i32 %173, i32 %132) #3
  br label %174

174:                                              ; preds = %164, %166, %168, %170, %145, %149, %153, %157, %128, %124, %80, %59, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_encode_block_intra(i32, i32, i32, i32, i8 zeroext, i8 zeroext, i8* nocapture readonly) #0 {
  %8 = bitcast i8* %6 to %struct.macroblock**
  %9 = load %struct.macroblock*, %struct.macroblock** %8, align 8
  %10 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 6
  %12 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %11, align 8
  %13 = load %struct.MODE_INFO*, %struct.MODE_INFO** %12, align 8
  %14 = sext i32 %0 to i64
  %15 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 2
  %16 = load i32*, i32** %15, align 8
  %17 = shl nsw i32 %1, 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 1
  %21 = load i32*, i32** %20, align 16
  %22 = getelementptr inbounds i32, i32* %21, i64 %18
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 %18
  %26 = zext i8 %4 to i64
  %27 = getelementptr inbounds [13 x i8], [13 x i8]* @b_width_log2_lookup, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 4, %29
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 3
  %32 = load i16*, i16** %31, align 16
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i16, i16* %32, i64 %33
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 4, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 3, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 3, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = mul nsw i32 %38, %2
  %42 = add nsw i32 %41, %3
  %43 = shl nsw i32 %42, 2
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %40, i64 %44
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 4, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = mul nsw i32 %36, %2
  %49 = add nsw i32 %48, %3
  %50 = shl nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  %53 = mul nsw i32 %30, %2
  %54 = add nsw i32 %53, %3
  %55 = shl nsw i32 %54, 2
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 0, i64 %56
  %58 = getelementptr inbounds i8, i8* %6, i64 8
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %80, label %62

62:                                               ; preds = %7
  %63 = getelementptr inbounds i8, i8* %6, i64 16
  %64 = bitcast i8* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = sext i32 %3 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = getelementptr inbounds i8, i8* %6, i64 24
  %69 = bitcast i8* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = sext i32 %2 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = load i8, i8* %67, align 1
  %74 = load i8, i8* %72, align 1
  %75 = icmp ne i8 %73, 0
  %76 = zext i1 %75 to i32
  %77 = icmp ne i8 %74, 0
  %78 = zext i1 %77 to i32
  %79 = add nuw nsw i32 %78, %76
  br label %80

80:                                               ; preds = %7, %62
  %81 = phi i8* [ %67, %62 ], [ null, %7 ]
  %82 = phi i8* [ %72, %62 ], [ null, %7 ]
  %83 = phi i32 [ %79, %62 ], [ 0, %7 ]
  %84 = icmp eq i8 %5, 0
  br i1 %84, label %85, label %124

85:                                               ; preds = %80
  %86 = icmp slt i32 %0, 1
  br i1 %86, label %87, label %119

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 24
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %106

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 8, i64 0
  %93 = load i8, i8* %92, align 4
  %94 = icmp slt i8 %93, 1
  br i1 %94, label %95, label %106

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 0
  %97 = load i8, i8* %96, align 4
  %98 = icmp ult i8 %97, 3
  %99 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 10, i64 %33, i32 0
  %100 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 1
  %101 = select i1 %98, i8* %99, i8* %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [10 x i32], [10 x i32]* @intra_mode_to_tx_type_lookup, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  br label %106

106:                                              ; preds = %87, %91, %95
  %107 = phi i32 [ %105, %95 ], [ 0, %91 ], [ 0, %87 ]
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds [4 x [4 x %struct.scan_order]], [4 x [4 x %struct.scan_order]]* @vp9_scan_orders, i64 0, i64 0, i64 %108
  %110 = icmp eq i32 %0, 0
  br i1 %110, label %111, label %119

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 0
  %113 = load i8, i8* %112, align 4
  %114 = icmp ult i8 %113, 3
  %115 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 10, i64 %33, i32 0
  %116 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 1
  %117 = select i1 %114, i8* %115, i8* %116
  %118 = load i8, i8* %117, align 1
  br label %151

119:                                              ; preds = %85, %106
  %120 = phi %struct.scan_order* [ %109, %106 ], [ getelementptr inbounds ([4 x [4 x %struct.scan_order]], [4 x [4 x %struct.scan_order]]* @vp9_scan_orders, i64 0, i64 0, i64 0), %85 ]
  %121 = phi i32 [ %107, %106 ], [ 0, %85 ]
  %122 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 6
  %123 = load i8, i8* %122, align 2
  br label %151

124:                                              ; preds = %80
  %125 = icmp eq i32 %0, 0
  %126 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 1
  %127 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 6
  %128 = select i1 %125, i8* %126, i8* %127
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %5, 3
  br i1 %130, label %151, label %131

131:                                              ; preds = %124
  %132 = icmp slt i32 %0, 1
  br i1 %132, label %133, label %146

133:                                              ; preds = %131
  %134 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 24
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %146

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %13, i64 0, i32 8, i64 0
  %139 = load i8, i8* %138, align 4
  %140 = icmp slt i8 %139, 1
  br i1 %140, label %141, label %146

141:                                              ; preds = %137
  %142 = load i8, i8* %126, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds [10 x i32], [10 x i32]* @intra_mode_to_tx_type_lookup, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  br label %146

146:                                              ; preds = %131, %133, %137, %141
  %147 = phi i32 [ %145, %141 ], [ 0, %137 ], [ 0, %133 ], [ 0, %131 ]
  %148 = zext i8 %5 to i64
  %149 = zext i32 %147 to i64
  %150 = getelementptr inbounds [4 x [4 x %struct.scan_order]], [4 x [4 x %struct.scan_order]]* @vp9_scan_orders, i64 0, i64 %148, i64 %149
  br label %151

151:                                              ; preds = %124, %111, %119, %146
  %152 = phi %struct.scan_order* [ %150, %146 ], [ %120, %119 ], [ %109, %111 ], [ getelementptr inbounds ([4 x %struct.scan_order], [4 x %struct.scan_order]* @vp9_default_scan_orders, i64 0, i64 3), %124 ]
  %153 = phi i32 [ %147, %146 ], [ %121, %119 ], [ %107, %111 ], [ 0, %124 ]
  %154 = phi i8 [ %129, %146 ], [ %123, %119 ], [ %118, %111 ], [ %129, %124 ]
  %155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 44
  %156 = load i32, i32* %155, align 16
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %164

158:                                              ; preds = %151
  %159 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 45
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, i8* %45, i8* %52
  %163 = select i1 %161, i32 %38, i32 %36
  br label %164

164:                                              ; preds = %151, %158
  %165 = phi i8* [ %162, %158 ], [ %52, %151 ]
  %166 = phi i32 [ %163, %158 ], [ %36, %151 ]
  tail call void @vp9_predict_intra_block(%struct.macroblockd* %10, i32 %29, i8 zeroext %5, i8 zeroext %154, i8* %165, i32 %166, i8* %45, i32 %38, i32 %3, i32 %2, i32 %0) #3
  %167 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 18
  %168 = load %struct.yv12_buffer_config*, %struct.yv12_buffer_config** %167, align 8
  %169 = getelementptr inbounds %struct.yv12_buffer_config, %struct.yv12_buffer_config* %168, i64 0, i32 29
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %396, label %173

173:                                              ; preds = %164
  %174 = ptrtoint i8* %45 to i64
  %175 = shl i64 %174, 1
  %176 = inttoptr i64 %175 to i16*
  switch i8 %5, label %329 [
    i8 3, label %177
    i8 2, label %229
    i8 1, label %279
  ]

177:                                              ; preds = %173
  %178 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %209

181:                                              ; preds = %177
  %182 = sext i32 %30 to i64
  %183 = sext i32 %36 to i64
  %184 = sext i32 %38 to i64
  %185 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %186 = load i32, i32* %185, align 8
  tail call void @vpx_highbd_subtract_block_c(i32 32, i32 32, i16* %57, i64 %182, i8* %52, i64 %183, i8* %45, i64 %184, i32 %186) #3
  %187 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 43
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %181
  tail call void @vpx_highbd_fdct32x32_rd_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %192

191:                                              ; preds = %181
  tail call void @vpx_highbd_fdct32x32_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %192

192:                                              ; preds = %190, %191
  %193 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %194 = load i32, i32* %193, align 16
  %195 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %196 = load i16*, i16** %195, align 8
  %197 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %198 = load i16*, i16** %197, align 16
  %199 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %200 = load i16*, i16** %199, align 8
  %201 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %202 = load i16*, i16** %201, align 16
  %203 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %204 = load i16*, i16** %203, align 8
  %205 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %206 = load i16*, i16** %205, align 8
  %207 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %208 = load i16*, i16** %207, align 8
  tail call void @vpx_highbd_quantize_b_32x32_sse2(i32* %19, i64 1024, i32 %194, i16* %196, i16* %198, i16* %200, i16* %202, i32* %22, i32* %25, i16* %204, i16* %34, i16* %206, i16* %208) #3
  br label %209

209:                                              ; preds = %177, %192
  %210 = load i32, i32* %59, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %219, label %212

212:                                              ; preds = %209
  %213 = load i32, i32* %178, align 8
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %219

215:                                              ; preds = %212
  %216 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 3, i32 %83)
  %217 = icmp sgt i32 %216, 0
  %218 = zext i1 %217 to i8
  store i8 %218, i8* %82, align 1
  store i8 %218, i8* %81, align 1
  br label %219

219:                                              ; preds = %212, %209, %215
  %220 = load i32, i32* %155, align 16
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %389

222:                                              ; preds = %219
  %223 = load i16, i16* %34, align 2
  %224 = icmp eq i16 %223, 0
  br i1 %224, label %593, label %225

225:                                              ; preds = %222
  %226 = zext i16 %223 to i32
  %227 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %228 = load i32, i32* %227, align 8
  tail call void @vp9_highbd_idct32x32_add(i32* %25, i16* %176, i32 %38, i32 %226, i32 %228) #3
  br label %389

229:                                              ; preds = %173
  %230 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %259

233:                                              ; preds = %229
  %234 = sext i32 %30 to i64
  %235 = sext i32 %36 to i64
  %236 = sext i32 %38 to i64
  %237 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %238 = load i32, i32* %237, align 8
  tail call void @vpx_highbd_subtract_block_c(i32 16, i32 16, i16* %57, i64 %234, i8* %52, i64 %235, i8* %45, i64 %236, i32 %238) #3
  %239 = icmp eq i32 %153, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %233
  tail call void @vpx_highbd_fdct16x16_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %242

241:                                              ; preds = %233
  tail call void @vp9_highbd_fht16x16_c(i16* %57, i32* %19, i32 %30, i32 %153) #3
  br label %242

242:                                              ; preds = %241, %240
  %243 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %244 = load i32, i32* %243, align 16
  %245 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %246 = load i16*, i16** %245, align 8
  %247 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %248 = load i16*, i16** %247, align 16
  %249 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %250 = load i16*, i16** %249, align 8
  %251 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %252 = load i16*, i16** %251, align 16
  %253 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %254 = load i16*, i16** %253, align 8
  %255 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %256 = load i16*, i16** %255, align 8
  %257 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %258 = load i16*, i16** %257, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %19, i64 256, i32 %244, i16* %246, i16* %248, i16* %250, i16* %252, i32* %22, i32* %25, i16* %254, i16* %34, i16* %256, i16* %258) #3
  br label %259

259:                                              ; preds = %229, %242
  %260 = load i32, i32* %59, align 8
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %269, label %262

262:                                              ; preds = %259
  %263 = load i32, i32* %230, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %262
  %266 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 2, i32 %83)
  %267 = icmp sgt i32 %266, 0
  %268 = zext i1 %267 to i8
  store i8 %268, i8* %82, align 1
  store i8 %268, i8* %81, align 1
  br label %269

269:                                              ; preds = %262, %259, %265
  %270 = load i32, i32* %155, align 16
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %389

272:                                              ; preds = %269
  %273 = load i16, i16* %34, align 2
  %274 = icmp eq i16 %273, 0
  br i1 %274, label %593, label %275

275:                                              ; preds = %272
  %276 = zext i16 %273 to i32
  %277 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %278 = load i32, i32* %277, align 8
  tail call void @vp9_highbd_iht16x16_add(i32 %153, i32* %25, i16* %176, i32 %38, i32 %276, i32 %278) #3
  br label %389

279:                                              ; preds = %173
  %280 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %309

283:                                              ; preds = %279
  %284 = sext i32 %30 to i64
  %285 = sext i32 %36 to i64
  %286 = sext i32 %38 to i64
  %287 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %288 = load i32, i32* %287, align 8
  tail call void @vpx_highbd_subtract_block_c(i32 8, i32 8, i16* %57, i64 %284, i8* %52, i64 %285, i8* %45, i64 %286, i32 %288) #3
  %289 = icmp eq i32 %153, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %283
  tail call void @vpx_highbd_fdct8x8_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %292

291:                                              ; preds = %283
  tail call void @vp9_highbd_fht8x8_c(i16* %57, i32* %19, i32 %30, i32 %153) #3
  br label %292

292:                                              ; preds = %291, %290
  %293 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %294 = load i32, i32* %293, align 16
  %295 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %296 = load i16*, i16** %295, align 8
  %297 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %298 = load i16*, i16** %297, align 16
  %299 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %300 = load i16*, i16** %299, align 8
  %301 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %302 = load i16*, i16** %301, align 16
  %303 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %304 = load i16*, i16** %303, align 8
  %305 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %306 = load i16*, i16** %305, align 8
  %307 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %308 = load i16*, i16** %307, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %19, i64 64, i32 %294, i16* %296, i16* %298, i16* %300, i16* %302, i32* %22, i32* %25, i16* %304, i16* %34, i16* %306, i16* %308) #3
  br label %309

309:                                              ; preds = %279, %292
  %310 = load i32, i32* %59, align 8
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %319, label %312

312:                                              ; preds = %309
  %313 = load i32, i32* %280, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %319

315:                                              ; preds = %312
  %316 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 1, i32 %83)
  %317 = icmp sgt i32 %316, 0
  %318 = zext i1 %317 to i8
  store i8 %318, i8* %82, align 1
  store i8 %318, i8* %81, align 1
  br label %319

319:                                              ; preds = %312, %309, %315
  %320 = load i32, i32* %155, align 16
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %389

322:                                              ; preds = %319
  %323 = load i16, i16* %34, align 2
  %324 = icmp eq i16 %323, 0
  br i1 %324, label %593, label %325

325:                                              ; preds = %322
  %326 = zext i16 %323 to i32
  %327 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %328 = load i32, i32* %327, align 8
  tail call void @vp9_highbd_iht8x8_add(i32 %153, i32* %25, i16* %176, i32 %38, i32 %326, i32 %328) #3
  br label %389

329:                                              ; preds = %173
  %330 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %331 = load i32, i32* %330, align 8
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %361

333:                                              ; preds = %329
  %334 = sext i32 %30 to i64
  %335 = sext i32 %36 to i64
  %336 = sext i32 %38 to i64
  %337 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %338 = load i32, i32* %337, align 8
  tail call void @vpx_highbd_subtract_block_c(i32 4, i32 4, i16* %57, i64 %334, i8* %52, i64 %335, i8* %45, i64 %336, i32 %338) #3
  %339 = icmp eq i32 %153, 0
  br i1 %339, label %341, label %340

340:                                              ; preds = %333
  tail call void @vp9_highbd_fht4x4_c(i16* %57, i32* %19, i32 %30, i32 %153) #3
  br label %344

341:                                              ; preds = %333
  %342 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 64
  %343 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %342, align 16
  tail call void %343(i16* %57, i32* %19, i32 %30) #3
  br label %344

344:                                              ; preds = %341, %340
  %345 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %346 = load i32, i32* %345, align 16
  %347 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %348 = load i16*, i16** %347, align 8
  %349 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %350 = load i16*, i16** %349, align 16
  %351 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %352 = load i16*, i16** %351, align 8
  %353 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %354 = load i16*, i16** %353, align 16
  %355 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %358 = load i16*, i16** %357, align 8
  %359 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %360 = load i16*, i16** %359, align 8
  tail call void @vpx_highbd_quantize_b_sse2(i32* %19, i64 16, i32 %346, i16* %348, i16* %350, i16* %352, i16* %354, i32* %22, i32* %25, i16* %356, i16* %34, i16* %358, i16* %360) #3
  br label %361

361:                                              ; preds = %329, %344
  %362 = load i32, i32* %59, align 8
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %371, label %364

364:                                              ; preds = %361
  %365 = load i32, i32* %330, align 8
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %371

367:                                              ; preds = %364
  %368 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext %5, i32 %83)
  %369 = icmp sgt i32 %368, 0
  %370 = zext i1 %369 to i8
  store i8 %370, i8* %82, align 1
  store i8 %370, i8* %81, align 1
  br label %371

371:                                              ; preds = %364, %361, %367
  %372 = load i32, i32* %155, align 16
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %389

374:                                              ; preds = %371
  %375 = load i16, i16* %34, align 2
  %376 = zext i16 %375 to i32
  %377 = icmp eq i16 %375, 0
  br i1 %377, label %593, label %378

378:                                              ; preds = %374
  %379 = icmp eq i32 %153, 0
  br i1 %379, label %380, label %385

380:                                              ; preds = %378
  %381 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 66
  %382 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** %381, align 16
  %383 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %384 = load i32, i32* %383, align 8
  tail call void %382(i32* %25, i16* %176, i32 %38, i32 %376, i32 %384) #3
  br label %389

385:                                              ; preds = %378
  %386 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** @vp9_highbd_iht4x4_16_add, align 8
  %387 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 23
  %388 = load i32, i32* %387, align 8
  tail call void %386(i32* %25, i16* %176, i32 %38, i32 %153, i32 %388) #3
  br label %389

389:                                              ; preds = %371, %219, %269, %319, %385, %380, %325, %275, %225
  %390 = load i16, i16* %34, align 2
  %391 = icmp eq i16 %390, 0
  br i1 %391, label %593, label %392

392:                                              ; preds = %389
  %393 = getelementptr inbounds i8, i8* %6, i64 32
  %394 = bitcast i8* %393 to i8**
  %395 = load i8*, i8** %394, align 8
  store i8 0, i8* %395, align 1
  br label %593

396:                                              ; preds = %164
  switch i8 %5, label %532 [
    i8 3, label %397
    i8 2, label %446
    i8 1, label %489
  ]

397:                                              ; preds = %396
  %398 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %399 = load i32, i32* %398, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %428

401:                                              ; preds = %397
  %402 = sext i32 %30 to i64
  %403 = sext i32 %36 to i64
  %404 = sext i32 %38 to i64
  tail call void @vpx_subtract_block_sse2(i32 32, i32 32, i16* %57, i64 %402, i8* %52, i64 %403, i8* %45, i64 %404) #3
  %405 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 43
  %406 = load i32, i32* %405, align 4
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %409, label %408

408:                                              ; preds = %401
  tail call void @vpx_fdct32x32_rd_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %410

409:                                              ; preds = %401
  tail call void @vpx_fdct32x32_sse2(i16* %57, i32* %19, i32 %30) #3
  br label %410

410:                                              ; preds = %408, %409
  %411 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b_32x32, align 8
  %412 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %413 = load i32, i32* %412, align 16
  %414 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %415 = load i16*, i16** %414, align 8
  %416 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %417 = load i16*, i16** %416, align 16
  %418 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %419 = load i16*, i16** %418, align 8
  %420 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %421 = load i16*, i16** %420, align 16
  %422 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %423 = load i16*, i16** %422, align 8
  %424 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %425 = load i16*, i16** %424, align 8
  %426 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %427 = load i16*, i16** %426, align 8
  tail call void %411(i32* %19, i64 1024, i32 %413, i16* %415, i16* %417, i16* %419, i16* %421, i32* %22, i32* %25, i16* %423, i16* %34, i16* %425, i16* %427) #3
  br label %428

428:                                              ; preds = %397, %410
  %429 = load i32, i32* %59, align 8
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %438, label %431

431:                                              ; preds = %428
  %432 = load i32, i32* %398, align 8
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %438

434:                                              ; preds = %431
  %435 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 3, i32 %83)
  %436 = icmp sgt i32 %435, 0
  %437 = zext i1 %436 to i8
  store i8 %437, i8* %82, align 1
  store i8 %437, i8* %81, align 1
  br label %438

438:                                              ; preds = %431, %428, %434
  %439 = load i32, i32* %155, align 16
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %586

441:                                              ; preds = %438
  %442 = load i16, i16* %34, align 2
  %443 = icmp eq i16 %442, 0
  br i1 %443, label %593, label %444

444:                                              ; preds = %441
  %445 = zext i16 %442 to i32
  tail call void @vp9_idct32x32_add(i32* %25, i8* %45, i32 %38, i32 %445) #3
  br label %586

446:                                              ; preds = %396
  %447 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %448 = load i32, i32* %447, align 8
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %471

450:                                              ; preds = %446
  %451 = sext i32 %30 to i64
  %452 = sext i32 %36 to i64
  %453 = sext i32 %38 to i64
  tail call void @vpx_subtract_block_sse2(i32 16, i32 16, i16* %57, i64 %451, i8* %52, i64 %452, i8* %45, i64 %453) #3
  tail call void @vp9_fht16x16_sse2(i16* %57, i32* %19, i32 %30, i32 %153) #3
  %454 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %455 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %456 = load i32, i32* %455, align 16
  %457 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %458 = load i16*, i16** %457, align 8
  %459 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %460 = load i16*, i16** %459, align 16
  %461 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %462 = load i16*, i16** %461, align 8
  %463 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %464 = load i16*, i16** %463, align 16
  %465 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %466 = load i16*, i16** %465, align 8
  %467 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %468 = load i16*, i16** %467, align 8
  %469 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %470 = load i16*, i16** %469, align 8
  tail call void %454(i32* %19, i64 256, i32 %456, i16* %458, i16* %460, i16* %462, i16* %464, i32* %22, i32* %25, i16* %466, i16* %34, i16* %468, i16* %470) #3
  br label %471

471:                                              ; preds = %446, %450
  %472 = load i32, i32* %59, align 8
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %481, label %474

474:                                              ; preds = %471
  %475 = load i32, i32* %447, align 8
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %481

477:                                              ; preds = %474
  %478 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 2, i32 %83)
  %479 = icmp sgt i32 %478, 0
  %480 = zext i1 %479 to i8
  store i8 %480, i8* %82, align 1
  store i8 %480, i8* %81, align 1
  br label %481

481:                                              ; preds = %474, %471, %477
  %482 = load i32, i32* %155, align 16
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %586

484:                                              ; preds = %481
  %485 = load i16, i16* %34, align 2
  %486 = icmp eq i16 %485, 0
  br i1 %486, label %593, label %487

487:                                              ; preds = %484
  %488 = zext i16 %485 to i32
  tail call void @vp9_iht16x16_add(i32 %153, i32* %25, i8* %45, i32 %38, i32 %488) #3
  br label %586

489:                                              ; preds = %396
  %490 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %491 = load i32, i32* %490, align 8
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %514

493:                                              ; preds = %489
  %494 = sext i32 %30 to i64
  %495 = sext i32 %36 to i64
  %496 = sext i32 %38 to i64
  tail call void @vpx_subtract_block_sse2(i32 8, i32 8, i16* %57, i64 %494, i8* %52, i64 %495, i8* %45, i64 %496) #3
  tail call void @vp9_fht8x8_sse2(i16* %57, i32* %19, i32 %30, i32 %153) #3
  %497 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %498 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %499 = load i32, i32* %498, align 16
  %500 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %501 = load i16*, i16** %500, align 8
  %502 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %503 = load i16*, i16** %502, align 16
  %504 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %505 = load i16*, i16** %504, align 8
  %506 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %507 = load i16*, i16** %506, align 16
  %508 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %509 = load i16*, i16** %508, align 8
  %510 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %511 = load i16*, i16** %510, align 8
  %512 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %513 = load i16*, i16** %512, align 8
  tail call void %497(i32* %19, i64 64, i32 %499, i16* %501, i16* %503, i16* %505, i16* %507, i32* %22, i32* %25, i16* %509, i16* %34, i16* %511, i16* %513) #3
  br label %514

514:                                              ; preds = %489, %493
  %515 = load i32, i32* %59, align 8
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %524, label %517

517:                                              ; preds = %514
  %518 = load i32, i32* %490, align 8
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %524

520:                                              ; preds = %517
  %521 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext 1, i32 %83)
  %522 = icmp sgt i32 %521, 0
  %523 = zext i1 %522 to i8
  store i8 %523, i8* %82, align 1
  store i8 %523, i8* %81, align 1
  br label %524

524:                                              ; preds = %517, %514, %520
  %525 = load i32, i32* %155, align 16
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %527, label %586

527:                                              ; preds = %524
  %528 = load i16, i16* %34, align 2
  %529 = icmp eq i16 %528, 0
  br i1 %529, label %593, label %530

530:                                              ; preds = %527
  %531 = zext i16 %528 to i32
  tail call void @vp9_iht8x8_add(i32 %153, i32* %25, i8* %45, i32 %38, i32 %531) #3
  br label %586

532:                                              ; preds = %396
  %533 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 6
  %534 = load i32, i32* %533, align 8
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %563

536:                                              ; preds = %532
  %537 = sext i32 %30 to i64
  %538 = sext i32 %36 to i64
  %539 = sext i32 %38 to i64
  tail call void @vpx_subtract_block_sse2(i32 4, i32 4, i16* %57, i64 %537, i8* %52, i64 %538, i8* %45, i64 %539) #3
  %540 = icmp eq i32 %153, 0
  br i1 %540, label %542, label %541

541:                                              ; preds = %536
  tail call void @vp9_fht4x4_sse2(i16* %57, i32* %19, i32 %30, i32 %153) #3
  br label %545

542:                                              ; preds = %536
  %543 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 64
  %544 = load void (i16*, i32*, i32)*, void (i16*, i32*, i32)** %543, align 16
  tail call void %544(i16* %57, i32* %19, i32 %30) #3
  br label %545

545:                                              ; preds = %542, %541
  %546 = load void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)*, void (i32*, i64, i32, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @vpx_quantize_b, align 8
  %547 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 4
  %548 = load i32, i32* %547, align 16
  %549 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 10
  %550 = load i16*, i16** %549, align 8
  %551 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 11
  %552 = load i16*, i16** %551, align 16
  %553 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 8
  %554 = load i16*, i16** %553, align 8
  %555 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 0, i64 %14, i32 9
  %556 = load i16*, i16** %555, align 16
  %557 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 1, i32 0, i64 %14, i32 12
  %558 = load i16*, i16** %557, align 8
  %559 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 0
  %560 = load i16*, i16** %559, align 8
  %561 = getelementptr inbounds %struct.scan_order, %struct.scan_order* %152, i64 0, i32 1
  %562 = load i16*, i16** %561, align 8
  tail call void %546(i32* %19, i64 16, i32 %548, i16* %550, i16* %552, i16* %554, i16* %556, i32* %22, i32* %25, i16* %558, i16* %34, i16* %560, i16* %562) #3
  br label %563

563:                                              ; preds = %532, %545
  %564 = load i32, i32* %59, align 8
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %573, label %566

566:                                              ; preds = %563
  %567 = load i32, i32* %533, align 8
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %573

569:                                              ; preds = %566
  %570 = tail call i32 @vp9_optimize_b(%struct.macroblock* %9, i32 %0, i32 %1, i8 zeroext %5, i32 %83)
  %571 = icmp sgt i32 %570, 0
  %572 = zext i1 %571 to i8
  store i8 %572, i8* %82, align 1
  store i8 %572, i8* %81, align 1
  br label %573

573:                                              ; preds = %566, %563, %569
  %574 = load i32, i32* %155, align 16
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %586

576:                                              ; preds = %573
  %577 = load i16, i16* %34, align 2
  %578 = zext i16 %577 to i32
  %579 = icmp eq i16 %577, 0
  br i1 %579, label %593, label %580

580:                                              ; preds = %576
  %581 = icmp eq i32 %153, 0
  br i1 %581, label %582, label %585

582:                                              ; preds = %580
  %583 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %9, i64 0, i32 65
  %584 = load void (i32*, i8*, i32, i32)*, void (i32*, i8*, i32, i32)** %583, align 8
  tail call void %584(i32* %25, i8* %45, i32 %38, i32 %578) #3
  br label %586

585:                                              ; preds = %580
  tail call void @vp9_iht4x4_16_add_sse2(i32* %25, i8* %45, i32 %38, i32 %153) #3
  br label %586

586:                                              ; preds = %573, %438, %481, %524, %585, %582, %530, %487, %444
  %587 = load i16, i16* %34, align 2
  %588 = icmp eq i16 %587, 0
  br i1 %588, label %593, label %589

589:                                              ; preds = %586
  %590 = getelementptr inbounds i8, i8* %6, i64 32
  %591 = bitcast i8* %590 to i8**
  %592 = load i8*, i8** %591, align 8
  store i8 0, i8* %592, align 1
  br label %593

593:                                              ; preds = %527, %484, %441, %576, %322, %272, %222, %374, %589, %586, %392, %389
  ret void
}

declare void @vp9_predict_intra_block(%struct.macroblockd*, i32, i8 zeroext, i8 zeroext, i8*, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_idct32x32_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_fht16x16_c(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_iht16x16_add(i32, i32*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_fht8x8_c(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_iht8x8_add(i32, i32*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_fht4x4_c(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_idct32x32_add(i32*, i8*, i32, i32) local_unnamed_addr #2

declare void @vp9_fht16x16_sse2(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_iht16x16_add(i32, i32*, i8*, i32, i32) local_unnamed_addr #2

declare void @vp9_fht8x8_sse2(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_iht8x8_add(i32, i32*, i8*, i32, i32) local_unnamed_addr #2

declare void @vp9_fht4x4_sse2(i16*, i32*, i32, i32) local_unnamed_addr #2

declare void @vp9_iht4x4_16_add_sse2(i32*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_encode_intra_block_plane(%struct.macroblock*, i8 zeroext, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.optimize_ctx, align 1
  %6 = alloca %struct.encode_b_args, align 8
  %7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %5, i64 0, i32 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 -86, i64 96, i1 false)
  %9 = bitcast %struct.encode_b_args* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  %10 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %6, i64 0, i32 0
  store %struct.macroblock* %0, %struct.macroblock** %10, align 8
  %11 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %6, i64 0, i32 1
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %6, i64 0, i32 2
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %5, i64 0, i32 0, i64 %13, i64 0
  store i8* %14, i8** %12, align 8
  %15 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %6, i64 0, i32 3
  %16 = getelementptr inbounds %struct.optimize_ctx, %struct.optimize_ctx* %5, i64 0, i32 1, i64 %13, i64 0
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds %struct.encode_b_args, %struct.encode_b_args* %6, i64 0, i32 4
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 6
  %19 = load %struct.MODE_INFO**, %struct.MODE_INFO*** %18, align 8
  %20 = load %struct.MODE_INFO*, %struct.MODE_INFO** %19, align 8
  %21 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %20, i64 0, i32 3
  store i8* %21, i8** %17, align 8
  %22 = icmp eq i32 %3, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 42
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 7
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %58

35:                                               ; preds = %31, %27
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %13
  %37 = icmp eq i32 %2, 0
  %38 = load %struct.MODE_INFO*, %struct.MODE_INFO** %19, align 8
  br i1 %37, label %53, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %38, i64 0, i32 0
  %41 = load i8, i8* %40, align 4
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %38, i64 0, i32 2
  %44 = load i8, i8* %43, align 2
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %13, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i32 0, i64 %13, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [13 x [4 x [2 x [2 x i8]]]], [13 x [4 x [2 x [2 x i8]]]]* @uv_txsize_lookup, i64 0, i64 %42, i64 %45, i64 %48, i64 %51
  br label %55

53:                                               ; preds = %35
  %54 = getelementptr inbounds %struct.MODE_INFO, %struct.MODE_INFO* %38, i64 0, i32 2
  br label %55

55:                                               ; preds = %53, %39
  %56 = phi i8* [ %52, %39 ], [ %54, %53 ]
  %57 = load i8, i8* %56, align 1
  call void @vp9_get_entropy_contexts(i8 zeroext %1, i8 zeroext %57, %struct.macroblockd_plane* %36, i8* %14, i8* %16) #3
  br label %59

58:                                               ; preds = %31, %23, %4
  store i32 0, i32* %11, align 8
  br label %59

59:                                               ; preds = %58, %55
  call void @vp9_foreach_transformed_block_in_plane(%struct.macroblockd* %7, i8 zeroext %1, i32 %2, void (i32, i32, i32, i32, i8, i8, i8*)* nonnull @vp9_encode_block_intra, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #3
  ret void
}

declare void @vpx_highbd_fdct32x32_rd_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_highbd_fdct32x32_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_fdct32x32_rd_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vpx_fdct32x32_sse2(i16*, i32*, i32) local_unnamed_addr #2

declare void @vp9_highbd_idct16x16_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_highbd_idct8x8_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #2

declare void @vp9_idct16x16_add(i32*, i8*, i32, i32) local_unnamed_addr #2

declare void @vp9_idct8x8_add(i32*, i8*, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
