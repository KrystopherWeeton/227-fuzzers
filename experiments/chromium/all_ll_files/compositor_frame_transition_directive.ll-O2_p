; ModuleID = '../../components/viz/common/quads/compositor_frame_transition_directive.cc'
source_filename = "../../components/viz/common/quads/compositor_frame_transition_directive.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.util::IdType"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

@_ZN3viz34CompositorFrameTransitionDirectiveC1Ev = hidden unnamed_addr alias void (%"class.viz::CompositorFrameTransitionDirective"*), void (%"class.viz::CompositorFrameTransitionDirective"*)* @_ZN3viz34CompositorFrameTransitionDirectiveC2Ev
@_ZN3viz34CompositorFrameTransitionDirectiveC1EjNS0_4TypeENS0_6EffectENSt3__16vectorIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS3_9allocatorIS8_EEEE = hidden unnamed_addr alias void (%"class.viz::CompositorFrameTransitionDirective"*, i32, i32, i32, %"class.std::__1::vector"*), void (%"class.viz::CompositorFrameTransitionDirective"*, i32, i32, i32, %"class.std::__1::vector"*)* @_ZN3viz34CompositorFrameTransitionDirectiveC2EjNS0_4TypeENS0_6EffectENSt3__16vectorIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS3_9allocatorIS8_EEEE
@_ZN3viz34CompositorFrameTransitionDirectiveC1ERKS0_ = hidden unnamed_addr alias void (%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*), void (%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*)* @_ZN3viz34CompositorFrameTransitionDirectiveC2ERKS0_
@_ZN3viz34CompositorFrameTransitionDirectiveD1Ev = hidden unnamed_addr alias void (%"class.viz::CompositorFrameTransitionDirective"*), void (%"class.viz::CompositorFrameTransitionDirective"*)* @_ZN3viz34CompositorFrameTransitionDirectiveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz34CompositorFrameTransitionDirectiveC2Ev(%"class.viz::CompositorFrameTransitionDirective"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz34CompositorFrameTransitionDirectiveC2EjNS0_4TypeENS0_6EffectENSt3__16vectorIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS3_9allocatorIS8_EEEE(%"class.viz::CompositorFrameTransitionDirective"* nocapture, i32, i32, i32, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #5
  %11 = bitcast %"class.std::__1::vector"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %15 = bitcast %"class.util::IdType"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"class.util::IdType"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.util::IdType"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.util::IdType"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz34CompositorFrameTransitionDirectiveC2ERKS0_(%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %0 to i8*
  %4 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #5
  %8 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.util::IdType"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #6
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #7
  %22 = bitcast i8* %21 to %"class.util::IdType"*
  %23 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = bitcast %"class.util::IdType"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 %14
  %27 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.util::IdType"* %26, %"class.util::IdType"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load %"class.util::IdType"*, %"class.util::IdType"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"class.util::IdType"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"class.util::IdType"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 3
  %38 = bitcast %"class.util::IdType"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 %34, i1 false) #5
  %39 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %22, i64 %37
  %40 = ptrtoint %"class.util::IdType"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz34CompositorFrameTransitionDirectiveD2Ev(%"class.viz::CompositorFrameTransitionDirective"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.util::IdType"*, %"class.util::IdType"** %2, align 8
  %4 = icmp eq %"class.util::IdType"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.util::IdType"* %3 to i64
  %7 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.util::IdType"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.util::IdType"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.viz::CompositorFrameTransitionDirective"* @_ZN3viz34CompositorFrameTransitionDirectiveaSERKS0_(%"class.viz::CompositorFrameTransitionDirective"* returned, %"class.viz::CompositorFrameTransitionDirective"* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %0 to i8*
  %4 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = icmp eq %"class.viz::CompositorFrameTransitionDirective"* %0, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.util::IdType"*, %"class.util::IdType"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::CompositorFrameTransitionDirective", %"class.viz::CompositorFrameTransitionDirective"* %1, i64 0, i32 3, i32 0, i32 1
  %11 = load %"class.util::IdType"*, %"class.util::IdType"** %10, align 8
  tail call void @_ZNSt3__16vectorIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %7, %"class.util::IdType"* %9, %"class.util::IdType"* %11) #5
  br label %12

12:                                               ; preds = %2, %6
  ret %"class.viz::CompositorFrameTransitionDirective"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.util::IdType"*, %"class.util::IdType"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.util::IdType"* %2 to i64
  %5 = ptrtoint %"class.util::IdType"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.util::IdType"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.util::IdType"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.util::IdType"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 %22
  %25 = select i1 %23, %"class.util::IdType"* %24, %"class.util::IdType"* %2
  %26 = ptrtoint %"class.util::IdType"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.util::IdType"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #5
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.util::IdType"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #5
  %42 = inttoptr i64 %35 to %"class.util::IdType"*
  %43 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %42, i64 %39
  %44 = ptrtoint %"class.util::IdType"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %16, i64 %28
  store %"class.util::IdType"* %48, %"class.util::IdType"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.util::IdType"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #7
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #5
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #6
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #6
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #7
  %75 = bitcast i8* %74 to %"class.util::IdType"*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.util::IdType"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %75, i64 %72
  store %"class.util::IdType"* %79, %"class.util::IdType"** %8, align 8
  %80 = bitcast %"class.util::IdType"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.util::IdType"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #5
  %86 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %75, i64 %84
  %87 = ptrtoint %"class.util::IdType"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
