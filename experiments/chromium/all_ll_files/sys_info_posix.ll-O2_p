; ModuleID = '../../base/system/sys_info_posix.cc'
source_filename = "../../base/system/sys_info_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [4 x i8] }
%"class.base::LazyInstance.0" = type { i64, [8 x i8] }
%struct.cpu_set_t = type { [16 x i64] }
%"class.base::internal::LazySysInfoValue" = type { i32 }
%struct.rlimit = type { i64, i64 }
%"class.base::internal::LazySysInfoValue.1" = type { i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.4 }
%struct.anon.4 = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic", i32, i64, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.statvfs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE = internal global %"class.base::LazyInstance.0" zeroinitializer, align 8
@.str = private unnamed_addr constant [22 x i8] c"AmountOfFreeDiskSpace\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../base/system/sys_info_posix.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"AmountOfTotalDiskSpace\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"%d.%d.%d\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"i386\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"i486\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"i586\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"i686\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"x86\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"amd64\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"x86_64\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"AIX\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"ppc64\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %26, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 0)) #11
  br i1 %4, label %5, label %24

5:                                                ; preds = %3
  %6 = tail call i64 @sysconf(i32 83) #11
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %22, label %8

8:                                                ; preds = %5
  %9 = trunc i64 %6 to i32
  %10 = shl i64 %6, 32
  %11 = ashr exact i64 %10, 32
  %12 = tail call %struct.cpu_set_t* @__sched_cpualloc(i64 %11) #11
  %13 = add nsw i64 %11, 63
  %14 = lshr i64 %13, 6
  %15 = shl nuw nsw i64 %14, 3
  %16 = tail call i32 @sched_getaffinity(i32 0, i64 %15, %struct.cpu_set_t* %12) #11
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %8
  %19 = tail call i32 @__sched_cpucount(i64 %15, %struct.cpu_set_t* %12) #11
  br label %20

20:                                               ; preds = %18, %8
  %21 = phi i32 [ %19, %18 ], [ %9, %8 ]
  tail call void @__sched_cpufree(%struct.cpu_set_t* %12) #11
  br label %22

22:                                               ; preds = %20, %5
  %23 = phi i32 [ %21, %20 ], [ 1, %5 ]
  store i32 %23, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 1, i64 0) to i32*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE to i8*)) #11
  br label %26

24:                                               ; preds = %3
  %25 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 0) acquire, align 8
  br label %26

26:                                               ; preds = %0, %22, %24
  %27 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN12_GLOBAL__N_127g_lazy_number_of_processorsE, i64 0, i32 1, i64 0) to i64), %22 ], [ %25, %24 ]
  %28 = inttoptr i64 %27 to %"class.base::internal::LazySysInfoValue"*
  %29 = getelementptr inbounds %"class.base::internal::LazySysInfoValue", %"class.base::internal::LazySysInfoValue"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base7SysInfo21AmountOfVirtualMemoryEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %struct.rlimit, align 8
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %19, label %4

4:                                                ; preds = %0
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %17

6:                                                ; preds = %4
  %7 = bitcast %struct.rlimit* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  %8 = call i32 @getrlimit64(i32 2, %struct.rlimit* nonnull %1) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, -1
  %14 = select i1 %13, i64 0, i64 %12
  br label %15

15:                                               ; preds = %10, %6
  %16 = phi i64 [ %14, %10 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  store i64 %16, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 1, i64 0) to i64*), align 8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE to i8*)) #11
  br label %19

17:                                               ; preds = %4
  %18 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 0) acquire, align 8
  br label %19

19:                                               ; preds = %0, %15, %17
  %20 = phi i64 [ %2, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.0", %"class.base::LazyInstance.0"* @_ZN12_GLOBAL__N_121g_lazy_virtual_memoryE, i64 0, i32 1, i64 0) to i64), %15 ], [ %18, %17 ]
  %21 = inttoptr i64 %20 to %"class.base::internal::LazySysInfoValue.1"*
  %22 = getelementptr inbounds %"class.base::internal::LazySysInfoValue.1", %"class.base::internal::LazySysInfoValue.1"* %21, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base7SysInfo21AmountOfFreeDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca i64, align 8
  %5 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 159) #11
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_116GetDiskSpaceInfoERKN4base8FilePathEPlS4_(%"class.base::FilePath"* dereferenceable(24) %0, i64* nonnull %4, i64* null)
  %9 = load i64, i64* %4, align 8
  %10 = select i1 %8, i64 %9, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #11
  ret i64 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_116GetDiskSpaceInfoERKN4base8FilePathEPlS4_(%"class.base::FilePath"* dereferenceable(24), i64*, i64*) unnamed_addr #0 {
  %4 = alloca %struct.statfs, align 8
  %5 = alloca %struct.statvfs, align 8
  %6 = bitcast %struct.statvfs* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false)
  %7 = bitcast %"class.base::FilePath"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::FilePath"* %0 to i8*
  br label %11

11:                                               ; preds = %17, %3
  %12 = load i8, i8* %8, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i8*, i8** %9, align 8
  %15 = select i1 %13, i8* %14, i8* %10
  %16 = call i32 @statvfs64(i8* %15, %struct.statvfs* nonnull %5) #11
  switch i32 %16, label %62 [
    i32 -1, label %17
    i32 0, label %21
  ]

17:                                               ; preds = %11
  %18 = tail call i32* @__errno_location() #12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %11, label %62

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %5, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %43

25:                                               ; preds = %21
  %26 = bitcast %struct.statfs* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 120, i1 false) #11
  br label %27

27:                                               ; preds = %33, %25
  %28 = load i8, i8* %8, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %9, align 8
  %31 = select i1 %29, i8* %30, i8* %10
  %32 = call i32 @statfs64(i8* %31, %struct.statfs* nonnull %4) #11
  switch i32 %32, label %41 [
    i32 -1, label %33
    i32 0, label %37
  ]

33:                                               ; preds = %27
  %34 = tail call i32* @__errno_location() #12
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %27, label %41

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.statfs, %struct.statfs* %4, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %40 [
    i64 16914836, label %41
    i64 2508478710, label %41
    i64 2240043254, label %41
  ]

40:                                               ; preds = %37
  br label %41

41:                                               ; preds = %27, %33, %37, %37, %37, %40
  %42 = phi i1 [ false, %40 ], [ true, %37 ], [ true, %37 ], [ true, %37 ], [ false, %33 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #11
  br label %43

43:                                               ; preds = %41, %21
  %44 = phi i1 [ false, %21 ], [ %42, %41 ]
  %45 = icmp eq i64* %1, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %43
  br i1 %44, label %53, label %47

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %5, i64 0, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %5, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = mul i64 %51, %49
  br label %53

53:                                               ; preds = %46, %47
  %54 = phi i64 [ %52, %47 ], [ 9223372036854775807, %46 ]
  store i64 %54, i64* %1, align 8
  br label %55

55:                                               ; preds = %43, %53
  %56 = icmp eq i64* %2, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.statvfs, %struct.statvfs* %5, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = mul i64 %59, %23
  %61 = select i1 %44, i64 9223372036854775807, i64 %60
  store i64 %61, i64* %2, align 8
  br label %62

62:                                               ; preds = %17, %11, %57, %55
  %63 = phi i1 [ true, %55 ], [ true, %57 ], [ false, %11 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #11
  ret i1 %63
}

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base7SysInfo22AmountOfTotalDiskSpaceERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca i64, align 8
  %5 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 170) #11
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = call fastcc zeroext i1 @_ZN12_GLOBAL__N_116GetDiskSpaceInfoERKN4base8FilePathEPlS4_(%"class.base::FilePath"* dereferenceable(24) %0, i64* null, i64* nonnull %4)
  %9 = load i64, i64* %4, align 8
  %10 = select i1 %8, i64 %9, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #11
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7SysInfo19OperatingSystemNameEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.utsname, align 1
  %3 = getelementptr inbounds %struct.utsname, %struct.utsname* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %3, i8 -86, i64 390, i1 false)
  %4 = call i32 @uname(%struct.utsname* nonnull %2) #11
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  br label %34

8:                                                ; preds = %1
  %9 = call i64 @strlen(i8* nonnull %3) #11
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  br label %29

23:                                               ; preds = %13
  %24 = trunc i64 %9 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23, %15
  %30 = phi i8* [ %18, %15 ], [ %27, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %3, i64 %9, i1 false) #11
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i8* [ %27, %23 ], [ %30, %29 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 %9
  store i8 0, i8* %33, align 1
  br label %34

34:                                               ; preds = %31, %6
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @uname(%struct.utsname* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7SysInfo22OperatingSystemVersionEv(%"class.std::__1::basic_string"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.utsname, align 1
  %3 = getelementptr inbounds %struct.utsname, %struct.utsname* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %3, i8 -86, i64 390, i1 false)
  %4 = call i32 @uname(%struct.utsname* nonnull %2) #11
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  br label %35

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.utsname, %struct.utsname* %2, i64 0, i32 2, i64 0
  %10 = call i64 @strlen(i8* %9) #11
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #13
  unreachable

14:                                               ; preds = %8
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #14
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %9, i64 %10, i1 false) #11
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  br label %35

35:                                               ; preds = %32, %6
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7SysInfo29OperatingSystemVersionNumbersEPiS1_S1_(i32*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.utsname, align 1
  %5 = getelementptr inbounds %struct.utsname, %struct.utsname* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 390, i1 false)
  %6 = call i32 @uname(%struct.utsname* nonnull %4) #11
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.utsname, %struct.utsname* %4, i64 0, i32 2, i64 0
  %10 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32* %0, i32* %1, i32* %2) #11
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = icmp eq i32 %10, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %10, 3
  br i1 %15, label %18, label %19

16:                                               ; preds = %8, %3
  store i32 0, i32* %0, align 4
  br label %17

17:                                               ; preds = %16, %12
  store i32 0, i32* %1, align 4
  br label %18

18:                                               ; preds = %17, %14
  store i32 0, i32* %2, align 4
  br label %19

19:                                               ; preds = %18, %14
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7SysInfo27OperatingSystemArchitectureEv(%"class.std::__1::basic_string"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.utsname, align 1
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %struct.utsname, %struct.utsname* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 390, i1 false)
  %6 = call i32 @uname(%struct.utsname* nonnull %2) #11
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  br label %187

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %struct.utsname, %struct.utsname* %2, i64 0, i32 4, i64 0
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = call i64 @strlen(i8* %15) #11
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %10
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #13
  unreachable

21:                                               ; preds = %10
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %29, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #14
  store i8* %26, i8** %12, align 8
  %27 = or i64 %25, -9223372036854775808
  store i64 %27, i64* %14, align 8
  store i64 %17, i64* %13, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %21
  %30 = trunc i64 %17 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %17, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %23
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %23 ]
  %36 = phi i8* [ %11, %29 ], [ %26, %23 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %15, i64 %17, i1 false) #11
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %11, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %17
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %13, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %48, label %55

48:                                               ; preds = %37
  %49 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %97, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %41, align 1
  %53 = load i64, i64* %13, align 8
  %54 = zext i8 %52 to i64
  br label %55

55:                                               ; preds = %51, %37
  %56 = phi i64 [ %54, %51 ], [ %45, %37 ]
  %57 = phi i64 [ %53, %51 ], [ %44, %37 ]
  %58 = phi i8 [ %52, %51 ], [ %42, %37 ]
  %59 = icmp slt i8 %58, 0
  %60 = select i1 %59, i64 %57, i64 %56
  %61 = icmp eq i64 %60, 4
  br i1 %61, label %62, label %69

62:                                               ; preds = %55
  %63 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #11
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %97, label %65

65:                                               ; preds = %62
  %66 = load i8, i8* %41, align 1
  %67 = load i64, i64* %13, align 8
  %68 = zext i8 %66 to i64
  br label %69

69:                                               ; preds = %65, %55
  %70 = phi i64 [ %68, %65 ], [ %56, %55 ]
  %71 = phi i64 [ %67, %65 ], [ %57, %55 ]
  %72 = phi i8 [ %66, %65 ], [ %58, %55 ]
  %73 = icmp slt i8 %72, 0
  %74 = select i1 %73, i64 %71, i64 %70
  %75 = icmp eq i64 %74, 4
  br i1 %75, label %76, label %83

76:                                               ; preds = %69
  %77 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #11
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %97, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %41, align 1
  %81 = load i64, i64* %13, align 8
  %82 = zext i8 %80 to i64
  br label %83

83:                                               ; preds = %79, %69
  %84 = phi i64 [ %82, %79 ], [ %70, %69 ]
  %85 = phi i64 [ %81, %79 ], [ %71, %69 ]
  %86 = phi i8 [ %80, %79 ], [ %72, %69 ]
  %87 = icmp slt i8 %86, 0
  %88 = select i1 %87, i64 %85, i64 %84
  %89 = icmp eq i64 %88, 4
  br i1 %89, label %90, label %106

90:                                               ; preds = %83
  %91 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #11
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = load i8, i8* %41, align 1
  %95 = load i64, i64* %13, align 8
  %96 = zext i8 %94 to i64
  br label %106

97:                                               ; preds = %48, %62, %76, %90
  %98 = load i8, i8* %41, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  store i64 3, i64* %13, align 8
  %101 = load i8*, i8** %12, align 8
  br label %103

102:                                              ; preds = %97
  store i8 3, i8* %41, align 1
  br label %103

103:                                              ; preds = %100, %102
  %104 = phi i8* [ %101, %100 ], [ %11, %102 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i1 false) #11
  %105 = getelementptr inbounds i8, i8* %104, i64 3
  br label %183

106:                                              ; preds = %93, %83
  %107 = phi i64 [ %96, %93 ], [ %84, %83 ]
  %108 = phi i64 [ %95, %93 ], [ %85, %83 ]
  %109 = phi i8 [ %94, %93 ], [ %86, %83 ]
  %110 = icmp slt i8 %109, 0
  %111 = select i1 %110, i64 %108, i64 %107
  %112 = icmp eq i64 %111, 5
  br i1 %112, label %113, label %125

113:                                              ; preds = %106
  %114 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5) #11
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %125

116:                                              ; preds = %113
  %117 = load i8, i8* %41, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  store i64 6, i64* %13, align 8
  %120 = load i8*, i8** %12, align 8
  br label %122

121:                                              ; preds = %116
  store i8 6, i8* %41, align 1
  br label %122

122:                                              ; preds = %119, %121
  %123 = phi i8* [ %120, %119 ], [ %11, %121 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 false) #11
  %124 = getelementptr inbounds i8, i8* %123, i64 6
  br label %183

125:                                              ; preds = %106, %113
  %126 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #11
  %127 = call i64 @strlen(i8* nonnull %5) #11
  %128 = icmp ugt i64 %127, -17
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %130) #13
  unreachable

131:                                              ; preds = %125
  %132 = icmp ult i64 %127, 23
  br i1 %132, label %142, label %133

133:                                              ; preds = %131
  %134 = add nuw i64 %127, 16
  %135 = and i64 %134, -16
  %136 = call i8* @_Znwm(i64 %135) #14
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %136, i8** %137, align 8
  %138 = or i64 %135, -9223372036854775808
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %127, i64* %140, align 8
  %141 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %147

142:                                              ; preds = %131
  %143 = trunc i64 %127 to i8
  %144 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  store i8 %143, i8* %145, align 1
  %146 = icmp eq i64 %127, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %142, %133
  %148 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %144, %142 ], [ %141, %133 ]
  %149 = phi i8* [ %126, %142 ], [ %136, %133 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %149, i8* nonnull align 1 %5, i64 %127, i1 false) #11
  br label %150

150:                                              ; preds = %142, %147
  %151 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %144, %142 ], [ %148, %147 ]
  %152 = phi i8* [ %126, %142 ], [ %149, %147 ]
  %153 = getelementptr inbounds i8, i8* %152, i64 %127
  store i8 0, i8* %153, align 1
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = zext i8 %155 to i64
  %160 = select i1 %156, i64 %158, i64 %159
  %161 = icmp eq i64 %160, 3
  br i1 %161, label %162, label %166

162:                                              ; preds = %150
  %163 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i64 3) #11
  %164 = icmp eq i32 %163, 0
  %165 = load i8, i8* %154, align 1
  br label %166

166:                                              ; preds = %150, %162
  %167 = phi i8 [ %165, %162 ], [ %155, %150 ]
  %168 = phi i1 [ %164, %162 ], [ false, %150 ]
  %169 = icmp slt i8 %167, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %166, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #11
  br i1 %168, label %174, label %185

174:                                              ; preds = %173
  %175 = load i8, i8* %41, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %174
  store i64 5, i64* %13, align 8
  %178 = load i8*, i8** %12, align 8
  br label %180

179:                                              ; preds = %174
  store i8 5, i8* %41, align 1
  br label %180

180:                                              ; preds = %177, %179
  %181 = phi i8* [ %178, %177 ], [ %11, %179 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5, i1 false) #11
  %182 = getelementptr inbounds i8, i8* %181, i64 5
  br label %183

183:                                              ; preds = %180, %122, %103
  %184 = phi i8* [ %105, %103 ], [ %124, %122 ], [ %182, %180 ]
  store i8 0, i8* %184, align 1
  br label %185

185:                                              ; preds = %183, %173
  %186 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* nonnull align 8 %11, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  br label %187

187:                                              ; preds = %185, %8
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #5 align 2 {
  %1 = tail call i32 @getpagesize() #12
  %2 = sext i32 %1 to i64
  ret i64 %2
}

; Function Attrs: nounwind readnone
declare i32 @getpagesize() local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @statvfs64(i8* nocapture readonly, %struct.statvfs* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @statfs64(i8*, %struct.statfs*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare %struct.cpu_set_t* @__sched_cpualloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sched_getaffinity(i32, i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__sched_cpucount(i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @__sched_cpufree(%struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @getrlimit64(i32, %struct.rlimit*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
