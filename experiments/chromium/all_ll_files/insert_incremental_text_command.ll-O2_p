; ModuleID = '../../third_party/blink/renderer/core/editing/commands/insert_incremental_text_command.cc'
source_filename = "../../third_party/blink/renderer/core/editing/commands/insert_incremental_text_command.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InsertIncrementalTextCommand" = type { %"class.blink::InsertTextCommand.base", [4 x i8] }
%"class.blink::InsertTextCommand.base" = type <{ %"class.blink::CompositeEditCommand", %"class.WTF::String", i32 }>
%"class.blink::CompositeEditCommand" = type { %"class.blink::EditCommand.base", %"class.blink::HeapVector", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::Member.35" }
%"class.blink::EditCommand.base" = type <{ i32 (...)**, %"class.blink::Member", %"class.blink::Member.0", i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.4"*, i32, i32 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::EditCommand"* }
%"class.blink::EditCommand" = type <{ i32 (...)**, %"class.blink::Member", %"class.blink::Member.0", i8, [7 x i8] }>
%"class.blink::SelectionForUndoStep" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, %"class.blink::Member.8" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.6", i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.6", %"class.blink::Member.12", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::Member.14" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.47", %"class.blink::Member", %"class.blink::Member.12", %"class.blink::Member.49", %"class.blink::Member.49", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.76", %"class.blink::HeapVector.78" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.56" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.8", i32, %"class.blink::HeapVector.60" }
%"class.blink::HeapVector.60" = type { %"class.WTF::Vector.63" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::HeapHashMap.75"* }
%"class.blink::HeapHashMap.75" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.78" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.86", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.88, %"class.WTF::Vector.89", %"class.WTF::Vector.89", %"class.blink::Member.6", %"class.blink::Member.94", %"class.blink::HeapHashSet", %"class.blink::Member", %"class.WTF::HashSet.102", %"class.WTF::TextPosition", %"class.blink::Member.106", %"class.blink::HeapVector.108", %"class.blink::Member.115" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.88 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.96" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.13" }
%"class.WTF::HashSet.102" = type { %"class.WTF::HashTable.103" }
%"class.WTF::HashTable.103" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.108" = type { %"class.WTF::Vector.111" }
%"class.WTF::Vector.111" = type { %"class.WTF::VectorBuffer.112" }
%"class.WTF::VectorBuffer.112" = type { %"class.WTF::VectorBufferBase.113" }
%"class.WTF::VectorBufferBase.113" = type { %"class.blink::Member.94"*, i32, i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.20" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.24", %"class.blink::Member.26", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.24" = type { %"class.WTF::SingleThreadedBitField.25" }
%"class.WTF::SingleThreadedBitField.25" = type { i32 }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.29", %"class.WTF::AtomicString", %"class.WTF::Vector.31" }
%"class.WTF::RefCounted.29" = type { %"class.base::RefCounted.30" }
%"class.base::RefCounted.30" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [32 x i8] }
%"class.WTF::VectorBufferBase.33" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::UndoStep"* }
%"class.blink::UndoStep" = type <{ %"class.blink::Member", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::HeapVector.39", i64, i8, [7 x i8] }>
%"class.blink::HeapVector.39" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.125", %"class.WTF::Vector.125", i8, i32, %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.149", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.155", %"class.blink::Member.157", %"class.blink::Member.84", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.160", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.60", %"class.blink::Member.8", %"class.blink::Member.370", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::UserActionElementSet", %"class.blink::Member.379", double, double, i64, i64, %"class.blink::HeapHashSet.381", %"class.blink::HeapHashSet.388", i16, i8, %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::TextLinkColors", %"class.blink::Member.403", i8, [7 x i8], %"class.blink::HeapHashMap.405", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.8", %"class.WTF::Vector.412", %"class.blink::Member.417", %"class.blink::Member.419", i8, %"class.blink::Member.8", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.421", %"class.blink::HeapVector.423", %"class.std::__1::unique_ptr.431", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.437", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.450", %"class.WTF::Vector.452", i8, i8, %"class.std::__1::unique_ptr.457", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.60", %"class.blink::HeapVector.463", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.471", i8, i32, %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.479", %"class.WTF::HashMap.481", %"class.blink::Member.486", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.492", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.494", i8, i32, %"class.blink::Member.501", %"class.blink::Member.503", i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", %"class.std::__1::unique_ptr.511", i64, %"class.std::__1::unique_ptr.517", i32, i32, %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::Member.527", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.529", %"class.WTF::Vector.531", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.536", %"class.blink::Member.543", %"class.std::__1::unique_ptr.545", %"class.blink::Member.551", i8, i8, %"class.WTF::String", %"class.blink::Member.553", i8, [7 x i8], %"class.blink::HeapHashMap.555", %"class.blink::HeapObserverSet", %"class.blink::Member.569", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.571", i32, i8, i8, %"class.blink::WeakMember.573", %"class.blink::Member.574" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.118" }
%"class.blink::HeapHashMap.118" = type { %"class.WTF::HashMap.121" }
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.124" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.125" = type { %"class.WTF::VectorBuffer.126" }
%"class.WTF::VectorBuffer.126" = type { %"class.WTF::VectorBufferBase.127" }
%"class.WTF::VectorBufferBase.127" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.129" }
%"struct.std::__1::atomic.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__cxx_atomic_impl.132" }
%"struct.std::__1::__cxx_atomic_impl.132" = type { %"struct.std::__1::__cxx_atomic_base_impl.133" }
%"struct.std::__1::__cxx_atomic_base_impl.133" = type { i32 }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.592", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.660", i32, i8, [3 x i8], %"class.blink::HeapVector.662", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.670", %"class.blink::Member.672", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.681", %"class.blink::Member.687", %"class.blink::Member.689", i8, [7 x i8] }>
%"class.blink::Supplementable.592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.593" }
%"class.blink::HeapHashMap.593" = type { %"class.WTF::HashMap.596" }
%"class.WTF::HashMap.596" = type { %"class.WTF::HashTable.597" }
%"class.WTF::HashTable.597" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.608" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.600" }
%"class.blink::HeapObserverSet.600" = type { i32, [4 x i8], %"class.blink::HeapHashSet.601" }
%"class.blink::HeapHashSet.601" = type { %"class.WTF::HashSet.604" }
%"class.WTF::HashSet.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ %"class.blink::WeakMember.607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.607" = type opaque
%"class.blink::Supplementable.608" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.609" }
%"class.blink::HeapHashMap.609" = type { %"class.WTF::HashMap.612" }
%"class.WTF::HashMap.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"struct.WTF::KeyValuePair.615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.615" = type { i8*, %"class.blink::Member.723" }
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.725" }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.616, %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.650", %"class.std::__1::unique_ptr.650", %"class.blink::Member.138", i32, [4 x i8], %"class.WTF::HashSet.656", i32, i32 }
%class.scoped_refptr.616 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.617", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.619 }
%"class.WTF::RefCounted.617" = type { %"class.base::RefCounted.618" }
%"class.base::RefCounted.618" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.619 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.637", %"class.std::__1::map.646"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.625 }
%union.anon.625 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { i64 }
%"class.std::__1::map.637" = type { %"class.std::__1::__tree.638" }
%"class.std::__1::__tree.638" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::map.646" = type opaque
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.656" = type { %"class.WTF::HashTable.657" }
%"class.WTF::HashTable.657" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.662" = type { %"class.WTF::Vector.665" }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::Member.668"*, i32, i32 }
%"class.blink::Member.668" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.674", i32, i32 }
%"class.blink::HeapHashMap.674" = type { %"class.WTF::HashMap.677" }
%"class.WTF::HashMap.677" = type { %"class.WTF::HashTable.678" }
%"class.WTF::HashTable.678" = type <{ %"struct.WTF::KeyValuePair.680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.680" = type opaque
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.160" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.163 }
%class.scoped_refptr.163 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.164", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.164" = type { %"class.base::RefCounted.165" }
%"class.base::RefCounted.165" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.168" }
%"class.blink::HeapHashMap.168" = type { %"class.WTF::HashMap.171" }
%"class.WTF::HashMap.171" = type { %"class.WTF::HashTable.172" }
%"class.WTF::HashTable.172" = type <{ %"struct.WTF::KeyValuePair.174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.174" = type { %"class.blink::WeakMember.175", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.177", i32, [4 x i8], %"class.std::__1::unique_ptr.313", %"class.std::__1::unique_ptr.313", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.329", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.347", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.354", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.293", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__cxx_atomic_impl.216" }
%"struct.std::__1::__cxx_atomic_impl.216" = type { %"struct.std::__1::__cxx_atomic_base_impl.217" }
%"struct.std::__1::__cxx_atomic_base_impl.217" = type { i64 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.213" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.273", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { float }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.296", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.305" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.335" }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.587" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.353 }
%class.scoped_refptr.353 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__cxx_atomic_impl.356" }
%"struct.std::__1::__cxx_atomic_impl.356" = type { %"struct.std::__1::__cxx_atomic_base_impl.357" }
%"struct.std::__1::__cxx_atomic_base_impl.357" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.6", %"class.blink::Member.6", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.372" }
%"class.blink::HeapHashMap.372" = type { %"class.WTF::HashMap.375" }
%"class.WTF::HashMap.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"struct.WTF::KeyValuePair.378"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.378" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.381" = type { %"class.WTF::HashSet.384" }
%"class.WTF::HashSet.384" = type { %"class.WTF::HashTable.385" }
%"class.WTF::HashTable.385" = type <{ %"class.blink::WeakMember.387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.387" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.12", %"class.blink::HeapVector.78" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.405" = type { %"class.WTF::HashMap.408" }
%"class.WTF::HashMap.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.423" = type { %"class.WTF::Vector.426" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { %"class.blink::Member.429"*, i32, i32 }
%"class.blink::Member.429" = type opaque
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.437" = type { %"class.WTF::HashSet.440" }
%"class.WTF::HashSet.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"class.blink::WeakMember.443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.443" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.444", i32, [4 x i8] }>
%"class.WTF::Vector.444" = type { %"class.WTF::VectorBuffer.445" }
%"class.WTF::VectorBuffer.445" = type { %"class.WTF::VectorBufferBase.446" }
%"class.WTF::VectorBufferBase.446" = type { %"struct.std::__1::pair.447"*, i32, i32 }
%"struct.std::__1::pair.447" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.463" = type { %"class.WTF::Vector.466" }
%"class.WTF::Vector.466" = type { %"class.WTF::VectorBuffer.467" }
%"class.WTF::VectorBuffer.467" = type { %"class.WTF::VectorBufferBase.468" }
%"class.WTF::VectorBufferBase.468" = type { %"class.blink::Member.469"*, i32, i32 }
%"class.blink::Member.469" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.471" = type { %"class.blink::MemberBase.472" }
%"class.blink::MemberBase.472" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"struct.WTF::KeyValuePair.485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.485" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.369", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.360, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.360 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.361" }>
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.363", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.363" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.364" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.blink::WeakMember.369" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashSet.494" = type { %"class.WTF::HashSet.497" }
%"class.WTF::HashSet.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"class.blink::Member.500"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.500" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.531" = type { %"class.WTF::VectorBuffer.532" }
%"class.WTF::VectorBuffer.532" = type { %"class.WTF::VectorBufferBase.533" }
%"class.WTF::VectorBufferBase.533" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.536" = type { %"class.WTF::HashMap.539" }
%"class.WTF::HashMap.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.555" = type { %"class.WTF::HashMap.558" }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.562" }
%"class.blink::HeapHashSet.562" = type { %"class.WTF::HashSet.565" }
%"class.WTF::HashSet.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"class.blink::WeakMember.568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.568" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.578", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.585", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.578" = type { %"class.WTF::HashSet.581" }
%"class.WTF::HashSet.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"class.blink::Member.584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.584" = type opaque
%"class.blink::HeapTaskRunnerTimer.585" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.586", { i64, i64 } }
%"class.blink::WeakMember.586" = type { %"class.blink::MemberBase.572" }
%"class.blink::WeakMember.573" = type { %"class.blink::MemberBase.7" }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::InsertTextCommand" = type <{ %"class.blink::CompositeEditCommand", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::EditingState" = type { i8 }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::PlainTextRange" = type { i32, i32 }
%"class.blink::ForwardCodePointStateMachine" = type { i32, i32 }
%"class.blink::CharacterIteratorAlgorithm" = type { i32, i32, i8, %"class.blink::TextIteratorAlgorithm" }
%"class.blink::TextIteratorAlgorithm" = type { %"class.blink::Node"*, i32, %"class.blink::Node"*, i32, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, i32, [4 x i8], %"class.blink::FullyClippedStateStackAlgorithm", i32, i8, i8, %"class.blink::Text"*, %"class.blink::TextIteratorBehavior", i8, i8, %"class.blink::TextIteratorTextState", %"class.blink::TextIteratorTextNodeHandler" }
%"class.blink::FullyClippedStateStackAlgorithm" = type { %"class.blink::BitStack" }
%"class.blink::BitStack" = type { i32, [4 x i8], %"class.WTF::Vector.727" }
%"class.WTF::Vector.727" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.729", [4 x i8] }>
%"class.WTF::VectorBufferBase.729" = type { i32*, i32, i32 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.693 }
%class.scoped_refptr.693 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.694", %"class.WTF::String", %"class.std::__1::unique_ptr.696" }
%"class.WTF::RefCounted.694" = type { %"class.base::RefCounted.695" }
%"class.base::RefCounted.695" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.710", %"class.WTF::Vector.716", i8, i32 }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.WTF::Vector.702"* }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.704", [32 x i8] }
%"class.blink::TextIteratorBehavior" = type { %union.anon.691 }
%union.anon.691 = type { i32 }
%"class.blink::TextIteratorTextState" = type { %"class.blink::TextIteratorBehavior", i32, i16, %"class.WTF::String", i32, %"class.blink::Node"*, %"class.blink::Node"*, %"class.absl::optional.732", %"class.absl::optional.732", i32, i8, i16 }
%"class.absl::optional.732" = type { %"class.absl::optional_internal::optional_data.733" }
%"class.absl::optional_internal::optional_data.733" = type { %"class.absl::optional_internal::optional_data_base.734" }
%"class.absl::optional_internal::optional_data_base.734" = type { %"class.absl::optional_internal::optional_data_dtor_base.735" }
%"class.absl::optional_internal::optional_data_dtor_base.735" = type { i8, %union.anon.736 }
%union.anon.736 = type { i32 }
%"class.blink::TextIteratorTextNodeHandler" = type { %"class.blink::Text"*, i32, i32, i8, %"class.WTF::Vector.737", i32, %"class.blink::InlineTextBox"*, i8, i8, %"class.blink::InlineTextBox"*, %"class.blink::LayoutText"*, i8, %"class.WTF::Vector.742", i32, %"class.blink::TextIteratorBehavior", %"class.blink::TextIteratorTextState"* }
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.blink::LayoutObject" = type opaque
%"class.blink::InlineTextBox" = type opaque
%"class.blink::LayoutText" = type opaque
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.744" }
%"class.WTF::VectorBufferBase.744" = type { %"class.blink::InlineTextBox"**, i32, i32 }
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>

$_ZN5blink17InsertTextCommandD2Ev = comdat any

$_ZN5blink28InsertIncrementalTextCommandD0Ev = comdat any

$_ZNK5blink11EditCommand19IsSimpleEditCommandEv = comdat any

$_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv = comdat any

@_ZTVN5blink28InsertIncrementalTextCommandE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InsertTextCommand"*)* @_ZN5blink17InsertTextCommandD2Ev to i8*), i8* bitcast (void (%"class.blink::InsertIncrementalTextCommand"*)* @_ZN5blink28InsertIncrementalTextCommandD0Ev to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand9SetParentEPS0_ to i8*), i8* bitcast (i32 (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand12GetInputTypeEv to i8*), i8* bitcast (i1 (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand19IsSimpleEditCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv to i8*), i8* bitcast (void (%"class.blink::InsertIncrementalTextCommand"*, %"class.blink::EditingState"*)* @_ZN5blink28InsertIncrementalTextCommand7DoApplyEPNS_12EditingStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InsertTextCommand"*)* @_ZNK5blink17InsertTextCommand21TextDataForInputEventEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Visitor"*)* @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand25IsReplaceSelectionCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand14AppliedEditingEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32)* @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32)* @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE to i8*)] }, align 8
@_ZTVN5blink17InsertTextCommandE = external unnamed_addr constant { [19 x i8*] }, align 8

@_ZN5blink28InsertIncrementalTextCommandC1ERNS_8DocumentERKN3WTF6StringENS_17InsertTextCommand13RebalanceTypeE = hidden unnamed_addr alias void (%"class.blink::InsertIncrementalTextCommand"*, %"class.blink::Document"*, %"class.WTF::String"*, i32), void (%"class.blink::InsertIncrementalTextCommand"*, %"class.blink::Document"*, %"class.WTF::String"*, i32)* @_ZN5blink28InsertIncrementalTextCommandC2ERNS_8DocumentERKN3WTF6StringENS_17InsertTextCommand13RebalanceTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28InsertIncrementalTextCommandC2ERNS_8DocumentERKN3WTF6StringENS_17InsertTextCommand13RebalanceTypeE(%"class.blink::InsertIncrementalTextCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::InsertIncrementalTextCommand"* %0 to %"class.blink::InsertTextCommand"*
  tail call void @_ZN5blink17InsertTextCommandC2ERNS_8DocumentERKN3WTF6StringENS0_13RebalanceTypeE(%"class.blink::InsertTextCommand"* %5, %"class.blink::Document"* dereferenceable(2848) %1, %"class.WTF::String"* dereferenceable(8) %2, i32 %3) #7
  %6 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink28InsertIncrementalTextCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

declare void @_ZN5blink17InsertTextCommandC2ERNS_8DocumentERKN3WTF6StringENS0_13RebalanceTypeE(%"class.blink::InsertTextCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28InsertIncrementalTextCommand7DoApplyEPNS_12EditingStateE(%"class.blink::InsertIncrementalTextCommand"*, %"class.blink::EditingState"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %4 = alloca %"class.blink::PlainTextRange", align 4
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::ForwardCodePointStateMachine", align 4
  %7 = alloca %"class.blink::CharacterIteratorAlgorithm", align 8
  %8 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %9 = alloca %"class.blink::TextIteratorBehavior", align 4
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %13 = alloca %"class.blink::PlainTextRange", align 4
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::CharacterIteratorAlgorithm", align 8
  %16 = alloca %"class.blink::TextIteratorBehavior", align 4
  %17 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %18 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %19 = alloca %"class.blink::PositionTemplate", align 8
  %20 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %21 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %22 = alloca %"class.blink::PositionTemplate", align 8
  %23 = alloca %"class.blink::PositionTemplate", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.blink::TextIteratorBehavior", align 4
  %26 = alloca %"class.blink::PositionTemplate", align 8
  %27 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %28 = alloca %"class.blink::SelectionTemplate", align 8
  %29 = alloca %"class.blink::PositionTemplate", align 8
  %30 = alloca %"class.blink::PositionTemplate", align 8
  %31 = bitcast %"class.blink::PositionTemplate"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %19, %"class.blink::PositionTemplate"* dereferenceable(16) %33) #7
  %34 = call %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %19) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  %35 = bitcast %"class.blink::VisibleSelectionTemplate"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #7
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %20, %"class.blink::CompositeEditCommand"* %32) #7
  %36 = bitcast %"class.blink::EphemeralRangeTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #7
  %37 = bitcast %"class.blink::PositionTemplate"* %22 to i8*
  %38 = bitcast %"class.blink::EphemeralRangeTemplate"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %22, %"class.blink::VisibleSelectionTemplate"* nonnull %20) #7
  %39 = bitcast %"class.blink::PositionTemplate"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %23, %"class.blink::VisibleSelectionTemplate"* nonnull %20) #7
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %21, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %23) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  %40 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::TextIteratorBehavior"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #7
  call void @_ZN5blink20TextIteratorBehavior39EmitsObjectReplacementCharacterBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %25) #7
  %43 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %21, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %25) #7
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #7
  %44 = bitcast %"class.blink::InsertIncrementalTextCommand"* %0 to %"class.blink::InsertTextCommand"*
  %45 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 1
  %46 = bitcast %"class.blink::PositionTemplate"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #7
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %26, %"class.blink::VisibleSelectionTemplate"* nonnull %20) #7
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %2, %50
  %54 = phi i32 [ %52, %50 ], [ 0, %2 ]
  %55 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %53, %56
  %60 = phi i32 [ %58, %56 ], [ 0, %53 ]
  br i1 %49, label %64, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i32 [ %63, %61 ], [ 0, %59 ]
  %66 = icmp ult i32 %65, %60
  %67 = select i1 %66, i32 %65, i32 %60
  %68 = bitcast %"class.blink::ForwardCodePointStateMachine"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #7
  %69 = getelementptr inbounds %"class.blink::ForwardCodePointStateMachine", %"class.blink::ForwardCodePointStateMachine"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::ForwardCodePointStateMachine", %"class.blink::ForwardCodePointStateMachine"* %6, i64 0, i32 1
  store i32 -1431655766, i32* %70, align 4
  call void @_ZN5blink28ForwardCodePointStateMachineC1Ev(%"class.blink::ForwardCodePointStateMachine"* nonnull %6) #7
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %155, label %72

72:                                               ; preds = %64
  %73 = zext i32 %67 to i64
  br label %74

74:                                               ; preds = %147, %72
  %75 = phi i64 [ 0, %72 ], [ %153, %147 ]
  %76 = phi i32 [ 0, %72 ], [ %152, %147 ]
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %99, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %75, %82
  br i1 %83, label %84, label %99

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 1
  br i1 %88, label %95, label %90

90:                                               ; preds = %84
  %91 = bitcast %"class.WTF::StringImpl"* %89 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 %75
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  br label %99

95:                                               ; preds = %84
  %96 = bitcast %"class.WTF::StringImpl"* %89 to i16*
  %97 = getelementptr inbounds i16, i16* %96, i64 %75
  %98 = load i16, i16* %97, align 2
  br label %99

99:                                               ; preds = %95, %90, %79, %74
  %100 = phi i16 [ 0, %79 ], [ 0, %74 ], [ %94, %90 ], [ %98, %95 ]
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = icmp ult i64 %75, %106
  br i1 %107, label %108, label %123

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  br i1 %112, label %119, label %114

114:                                              ; preds = %108
  %115 = bitcast %"class.WTF::StringImpl"* %113 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %75
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  br label %123

119:                                              ; preds = %108
  %120 = bitcast %"class.WTF::StringImpl"* %113 to i16*
  %121 = getelementptr inbounds i16, i16* %120, i64 %75
  %122 = load i16, i16* %121, align 2
  br label %123

123:                                              ; preds = %119, %114, %103, %99
  %124 = phi i16 [ 0, %103 ], [ 0, %99 ], [ %118, %114 ], [ %122, %119 ]
  %125 = icmp eq i16 %100, %124
  br i1 %125, label %126, label %155

126:                                              ; preds = %123
  br i1 %78, label %147, label %127

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %75, %130
  br i1 %131, label %132, label %147

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 1
  br i1 %136, label %143, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  %140 = getelementptr inbounds i8, i8* %139, i64 %75
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i16
  br label %147

143:                                              ; preds = %132
  %144 = bitcast %"class.WTF::StringImpl"* %137 to i16*
  %145 = getelementptr inbounds i16, i16* %144, i64 %75
  %146 = load i16, i16* %145, align 2
  br label %147

147:                                              ; preds = %143, %138, %127, %126
  %148 = phi i16 [ 0, %127 ], [ 0, %126 ], [ %142, %138 ], [ %146, %143 ]
  %149 = call i32 @_ZN5blink28ForwardCodePointStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::ForwardCodePointStateMachine"* nonnull %6, i16 zeroext %148) #7
  %150 = call zeroext i1 @_ZN5blink28ForwardCodePointStateMachine19AtCodePointBoundaryEv(%"class.blink::ForwardCodePointStateMachine"* nonnull %6) #7
  %151 = trunc i64 %75 to i32
  %152 = select i1 %150, i32 %151, i32 %76
  %153 = add nuw nsw i64 %75, 1
  %154 = icmp ult i64 %153, %73
  br i1 %154, label %74, label %155

155:                                              ; preds = %147, %123, %64
  %156 = phi i32 [ 0, %64 ], [ %67, %147 ], [ %76, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #7
  %157 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %26) #7
  %158 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %26) #7
  %159 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %158) #7
  %160 = bitcast %"class.blink::CharacterIteratorAlgorithm"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %160) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 328, i1 false) #7
  %161 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #7
  %162 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %159, i64 0, i32 0
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %162) #7
  %163 = bitcast %"class.blink::TextIteratorBehavior"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #7
  call void @_ZN5blink20TextIteratorBehavior39EmitsObjectReplacementCharacterBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %9) #7
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::CharacterIteratorAlgorithm"* nonnull %7, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %8, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #7
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #7
  %164 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #7
  %165 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %167 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 16, i1 false) #7
  %168 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %26) #7
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::Node"* %168, i32 0) #7
  %169 = getelementptr inbounds %"class.blink::CharacterIteratorAlgorithm", %"class.blink::CharacterIteratorAlgorithm"* %7, i64 0, i32 3, i32 17, i32 5
  %170 = load %"class.blink::Node"*, %"class.blink::Node"** %169, align 8
  %171 = icmp eq %"class.blink::Node"* %170, null
  br i1 %171, label %205, label %172

172:                                              ; preds = %155
  %173 = getelementptr inbounds %"class.blink::CharacterIteratorAlgorithm", %"class.blink::CharacterIteratorAlgorithm"* %7, i64 0, i32 3, i32 15
  %174 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  %175 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 2
  %177 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  br label %178

178:                                              ; preds = %201, %172
  %179 = phi i32 [ 0, %172 ], [ %202, %201 ]
  %180 = load i8, i8* %173, align 4, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %205

182:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #7
  call void @_ZNK5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::CharacterIteratorAlgorithm"* nonnull %7) #7
  %183 = load %"class.blink::Node"*, %"class.blink::Node"** %175, align 8
  %184 = icmp eq %"class.blink::Node"* %183, null
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %165, align 8
  br i1 %184, label %186, label %188

186:                                              ; preds = %182
  %187 = icmp eq %"class.blink::Node"* %185, null
  br i1 %187, label %200, label %201

188:                                              ; preds = %182
  %189 = icmp eq %"class.blink::Node"* %183, %185
  br i1 %189, label %190, label %201

190:                                              ; preds = %188
  %191 = load i32, i32* %176, align 4
  %192 = load i32, i32* %167, align 4
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %201

194:                                              ; preds = %190
  %195 = icmp eq i32 %191, 0
  br i1 %195, label %196, label %200

196:                                              ; preds = %194
  %197 = load i32, i32* %177, align 8
  %198 = load i32, i32* %166, align 8
  %199 = icmp eq i32 %197, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %196, %194, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #7
  br label %205

201:                                              ; preds = %196, %190, %188, %186
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AdvanceEi(%"class.blink::CharacterIteratorAlgorithm"* nonnull %7, i32 1) #7
  %202 = add nuw nsw i32 %179, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #7
  %203 = load %"class.blink::Node"*, %"class.blink::Node"** %169, align 8
  %204 = icmp eq %"class.blink::Node"* %203, null
  br i1 %204, label %205, label %178

205:                                              ; preds = %201, %178, %200, %155
  %206 = phi i32 [ %179, %200 ], [ 0, %155 ], [ %179, %178 ], [ %202, %201 ]
  %207 = bitcast %"class.blink::EphemeralRangeTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #7
  %208 = bitcast %"class.blink::PlainTextRange"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #7
  %209 = add i32 %157, %156
  %210 = add i32 %209, %206
  call void @_ZN5blink14PlainTextRangeC1Ejj(%"class.blink::PlainTextRange"* nonnull %13, i32 %206, i32 %210) #7
  call void @_ZNK5blink14PlainTextRange11CreateRangeERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %12, %"class.blink::PlainTextRange"* nonnull %13, %"class.blink::ContainerNode"* dereferenceable(80) %159) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #7
  %211 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"class.blink::Node"*, %"class.blink::Node"** %211, align 8
  %213 = icmp eq %"class.blink::Node"* %212, null
  br i1 %213, label %218, label %214

214:                                              ; preds = %205
  %215 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #7
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::EphemeralRangeTemplate"* nonnull %12) #7
  %216 = call i32 @_ZN5blink37ComputeDistanceToLeftGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %14) #7
  %217 = sub i32 %156, %216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #7
  br label %218

218:                                              ; preds = %205, %214
  %219 = phi i32 [ %217, %214 ], [ 0, %205 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #7
  %220 = getelementptr inbounds %"class.blink::CharacterIteratorAlgorithm", %"class.blink::CharacterIteratorAlgorithm"* %7, i64 0, i32 3
  call void @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::TextIteratorAlgorithm"* %220) #7
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %160) #7
  %221 = sub i32 %60, %219
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  br label %227

227:                                              ; preds = %218, %224
  %228 = phi i32 [ %226, %224 ], [ 0, %218 ]
  %229 = sub i32 %228, %221
  %230 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %24, i32 %229, i32 %221) #7
  %231 = sub i32 %54, %219
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %227, %234
  %238 = phi i32 [ %236, %234 ], [ 0, %227 ]
  %239 = sub i32 %238, %231
  %240 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %45, i32 %239, i32 %231) #7
  %241 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  br label %245

245:                                              ; preds = %242, %237
  %246 = phi i32 [ %244, %242 ], [ 0, %237 ]
  %247 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 1
  %250 = load i32, i32* %249, align 4
  br label %251

251:                                              ; preds = %248, %245
  %252 = phi i32 [ %250, %248 ], [ 0, %245 ]
  %253 = icmp ult i32 %252, %246
  %254 = select i1 %253, i32 %252, i32 %246
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %315, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 1
  %260 = bitcast %"class.WTF::StringImpl"* %259 to i8*
  %261 = bitcast %"class.WTF::StringImpl"* %259 to i16*
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 1
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 1
  %265 = bitcast %"class.WTF::StringImpl"* %264 to i8*
  %266 = bitcast %"class.WTF::StringImpl"* %264 to i16*
  %267 = zext i32 %254 to i64
  br label %268

268:                                              ; preds = %309, %256
  %269 = phi i64 [ 0, %256 ], [ %310, %309 ]
  %270 = phi i32 [ 0, %256 ], [ %311, %309 ]
  %271 = xor i32 %270, -1
  %272 = add i32 %246, %271
  br i1 %241, label %288, label %273

273:                                              ; preds = %268
  %274 = load i32, i32* %257, align 4
  %275 = icmp ugt i32 %274, %272
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load atomic i32, i32* %258 monotonic, align 4
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = zext i32 %272 to i64
  br i1 %279, label %285, label %281

281:                                              ; preds = %276
  %282 = getelementptr inbounds i8, i8* %260, i64 %280
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i16
  br label %288

285:                                              ; preds = %276
  %286 = getelementptr inbounds i16, i16* %261, i64 %280
  %287 = load i16, i16* %286, align 2
  br label %288

288:                                              ; preds = %285, %281, %273, %268
  %289 = phi i16 [ 0, %273 ], [ 0, %268 ], [ %284, %281 ], [ %287, %285 ]
  %290 = add i32 %252, %271
  br i1 %247, label %306, label %291

291:                                              ; preds = %288
  %292 = load i32, i32* %262, align 4
  %293 = icmp ugt i32 %292, %290
  br i1 %293, label %294, label %306

294:                                              ; preds = %291
  %295 = load atomic i32, i32* %263 monotonic, align 4
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = zext i32 %290 to i64
  br i1 %297, label %303, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds i8, i8* %265, i64 %298
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  br label %306

303:                                              ; preds = %294
  %304 = getelementptr inbounds i16, i16* %266, i64 %298
  %305 = load i16, i16* %304, align 2
  br label %306

306:                                              ; preds = %303, %299, %291, %288
  %307 = phi i16 [ 0, %291 ], [ 0, %288 ], [ %302, %299 ], [ %305, %303 ]
  %308 = icmp eq i16 %289, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %306
  %310 = add nuw nsw i64 %269, 1
  %311 = add nuw i32 %270, 1
  %312 = icmp ult i64 %310, %267
  br i1 %312, label %268, label %315

313:                                              ; preds = %306
  %314 = trunc i64 %269 to i32
  br label %315

315:                                              ; preds = %309, %313, %251
  %316 = phi i32 [ 0, %251 ], [ %314, %313 ], [ %254, %309 ]
  %317 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %26) #7
  %318 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %26) #7
  %319 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %318) #7
  %320 = bitcast %"class.blink::EphemeralRangeTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %320) #7
  %321 = bitcast %"class.blink::PlainTextRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #7
  br i1 %241, label %325, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  br label %325

325:                                              ; preds = %322, %315
  %326 = phi i32 [ %324, %322 ], [ 0, %315 ]
  %327 = sub i32 %317, %316
  %328 = add i32 %327, %326
  call void @_ZN5blink14PlainTextRangeC1Ejj(%"class.blink::PlainTextRange"* nonnull %4, i32 0, i32 %328) #7
  call void @_ZNK5blink14PlainTextRange11CreateRangeERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %3, %"class.blink::PlainTextRange"* nonnull %4, %"class.blink::ContainerNode"* dereferenceable(80) %319) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #7
  %329 = getelementptr inbounds %"class.blink::EphemeralRangeTemplate", %"class.blink::EphemeralRangeTemplate"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %330 = load %"class.blink::Node"*, %"class.blink::Node"** %329, align 8
  %331 = icmp eq %"class.blink::Node"* %330, null
  br i1 %331, label %336, label %332

332:                                              ; preds = %325
  %333 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %333) #7
  call void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::EphemeralRangeTemplate"* nonnull %3) #7
  %334 = call i32 @_ZN5blink38ComputeDistanceToRightGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #7
  %335 = call i32 @llvm.usub.sat.i32(i32 %316, i32 %334) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %333) #7
  br label %336

336:                                              ; preds = %325, %332
  %337 = phi i32 [ %335, %332 ], [ 0, %325 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %320) #7
  br i1 %247, label %351, label %338

338:                                              ; preds = %336
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #7
  br label %351

351:                                              ; preds = %336, %347, %350
  br i1 %241, label %365, label %352

352:                                              ; preds = %351
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #7
  br label %365

365:                                              ; preds = %351, %361, %364
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %371, label %368

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 1
  %370 = load i32, i32* %369, align 4
  br label %371

371:                                              ; preds = %365, %368
  %372 = phi i32 [ %370, %368 ], [ 0, %365 ]
  %373 = add i32 %337, %219
  %374 = sub i32 %372, %373
  %375 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %45, i32 %219, i32 %374) #7
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %394, label %377

377:                                              ; preds = %371
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %394

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  %385 = zext i32 %384 to i33
  %386 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %385, i33 1) #7
  %387 = extractvalue { i33, i1 } %386, 1
  %388 = extractvalue { i33, i1 } %386, 0
  %389 = icmp slt i33 %388, 0
  %390 = or i1 %387, %389
  br i1 %390, label %391, label %392, !prof !3

391:                                              ; preds = %382
  call void @llvm.trap() #7
  unreachable

392:                                              ; preds = %382
  %393 = trunc i33 %388 to i32
  store i32 %393, i32* %383, align 4
  br label %394

394:                                              ; preds = %392, %377, %371
  %395 = ptrtoint %"class.WTF::StringImpl"* %375 to i64
  %396 = bitcast %"class.WTF::String"* %45 to i64*
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store i64 %395, i64* %396, align 8
  %398 = icmp eq %"class.WTF::StringImpl"* %397, null
  br i1 %398, label %412, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load atomic i32, i32* %400 monotonic, align 4
  %402 = and i32 %401, 2
  %403 = icmp eq i32 %402, 0
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %397, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  br i1 %403, label %406, label %408

406:                                              ; preds = %399
  %407 = add i32 %405, -1
  store i32 %407, i32* %404, align 4
  br label %408

408:                                              ; preds = %406, %399
  %409 = phi i32 [ %407, %406 ], [ %405, %399 ]
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %397) #7
  br label %412

412:                                              ; preds = %394, %408, %411
  br i1 %376, label %426, label %413

413:                                              ; preds = %412
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #7
  br label %426

426:                                              ; preds = %412, %422, %425
  %427 = sub i32 %221, %337
  %428 = bitcast %"class.blink::VisibleSelectionTemplate"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %428) #7
  %429 = bitcast %"class.blink::SelectionTemplate"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %429) #7
  %430 = bitcast %"class.blink::CharacterIteratorAlgorithm"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %430) #7, !noalias !4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %430, i8 -86, i64 328, i1 false) #7, !noalias !4
  %431 = bitcast %"class.blink::TextIteratorBehavior"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %431) #7, !noalias !4
  call void @_ZN5blink20TextIteratorBehavior39EmitsObjectReplacementCharacterBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %16) #7, !noalias !4
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::CharacterIteratorAlgorithm"* nonnull %15, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %21, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %16) #7, !noalias !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %431) #7, !noalias !4
  %432 = bitcast %"class.blink::EphemeralRangeTemplate"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %432) #7, !noalias !4
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE26CalculateCharacterSubrangeEii(%"class.blink::EphemeralRangeTemplate"* nonnull sret %17, %"class.blink::CharacterIteratorAlgorithm"* nonnull %15, i32 %219, i32 %427) #7, !noalias !4
  %433 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %433) #7, !noalias !4
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %18) #7, !noalias !4
  %434 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %18, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %17) #7, !noalias !4
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %28, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %434) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %433) #7, !noalias !4
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %432) #7, !noalias !4
  %435 = getelementptr inbounds %"class.blink::CharacterIteratorAlgorithm", %"class.blink::CharacterIteratorAlgorithm"* %15, i64 0, i32 3
  call void @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::TextIteratorAlgorithm"* %435) #7
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %430) #7, !noalias !4
  call void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* nonnull sret %27, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %28) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %429) #7
  %436 = bitcast %"class.blink::PositionTemplate"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %436) #7
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %29, %"class.blink::VisibleSelectionTemplate"* nonnull %27) #7
  %437 = bitcast %"class.blink::PositionTemplate"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %437) #7
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %30, %"class.blink::VisibleSelectionTemplate"* nonnull %27) #7
  call void @_ZN5blink17InsertTextCommand35SetEndingSelectionWithoutValidationERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::InsertTextCommand"* %44, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %29, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %30) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %437) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %436) #7
  call void @_ZN5blink17InsertTextCommand7DoApplyEPNS_12EditingStateE(%"class.blink::InsertTextCommand"* %44, %"class.blink::EditingState"* %1) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %428) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #7
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %426
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #7
  br label %453

453:                                              ; preds = %426, %449, %452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %21) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::Element"* @_ZN5blink21RootEditableElementOfERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::CompositeEditCommand"*) local_unnamed_addr #1

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #1

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior39EmitsObjectReplacementCharacterBehaviorEv(%"class.blink::TextIteratorBehavior"* sret) local_unnamed_addr #1

declare void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN5blink17InsertTextCommand35SetEndingSelectionWithoutValidationERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::InsertTextCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink17InsertTextCommand7DoApplyEPNS_12EditingStateE(%"class.blink::InsertTextCommand"*, %"class.blink::EditingState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InsertTextCommandD2Ev(%"class.blink::InsertTextCommand"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InsertTextCommand", %"class.blink::InsertTextCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17InsertTextCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InsertTextCommand", %"class.blink::InsertTextCommand"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InsertTextCommand", %"class.blink::InsertTextCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"* %20) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28InsertIncrementalTextCommandD0Ev(%"class.blink::InsertIncrementalTextCommand"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink17InsertTextCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InsertIncrementalTextCommand", %"class.blink::InsertIncrementalTextCommand"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"* %20) #7
  ret void
}

declare void @_ZN5blink20CompositeEditCommand9SetParentEPS0_(%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare i32 @_ZNK5blink11EditCommand12GetInputTypeEv(%"class.blink::EditCommand"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EditCommand19IsSimpleEditCommandEv(%"class.blink::EditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZNK5blink17InsertTextCommand21TextDataForInputEventEv(%"class.blink::InsertTextCommand"*) unnamed_addr #1

declare void @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE(%"class.blink::CompositeEditCommand"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CompositeEditCommand25IsReplaceSelectionCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare void @_ZN5blink20CompositeEditCommand14AppliedEditingEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #1

declare void @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32) unnamed_addr #1

declare void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28ComputeOffsetInContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_22EphemeralRangeTemplateIS3_EERKNS_20TextIteratorBehaviorE(%"class.blink::CharacterIteratorAlgorithm"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

declare void @_ZNK5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE13StartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::CharacterIteratorAlgorithm"*) local_unnamed_addr #1

declare void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AdvanceEi(%"class.blink::CharacterIteratorAlgorithm"*, i32) local_unnamed_addr #1

declare void @_ZN5blink14PlainTextRangeC1Ejj(%"class.blink::PlainTextRange"*, i32, i32) unnamed_addr #1

declare void @_ZNK5blink14PlainTextRange11CreateRangeERKNS_13ContainerNodeE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::PlainTextRange"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZNK5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::EphemeralRangeTemplate"*) local_unnamed_addr #1

declare i32 @_ZN5blink37ComputeDistanceToLeftGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink28ForwardCodePointStateMachineC1Ev(%"class.blink::ForwardCodePointStateMachine"*) unnamed_addr #1

declare i32 @_ZN5blink28ForwardCodePointStateMachine21FeedFollowingCodeUnitEDs(%"class.blink::ForwardCodePointStateMachine"*, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink28ForwardCodePointStateMachine19AtCodePointBoundaryEv(%"class.blink::ForwardCodePointStateMachine"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::TextIteratorAlgorithm"*) unnamed_addr #3

declare i32 @_ZN5blink38ComputeDistanceToRightGraphemeBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE26CalculateCharacterSubrangeEii(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::CharacterIteratorAlgorithm"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_22EphemeralRangeTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink12_GLOBAL__N_128ComputeSelectionForInsertionERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEii: argument 0"}
!6 = distinct !{!6, !"_ZN5blink12_GLOBAL__N_128ComputeSelectionForInsertionERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEii"}
