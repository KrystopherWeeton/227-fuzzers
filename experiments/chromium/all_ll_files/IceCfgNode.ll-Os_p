; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceCfgNode.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceCfgNode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::ClFlags" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.std::__1::vector.92", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i32, i8, i8, i32, i8, %"class.std::__1::basic_string", i32, i8, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::vector.92", i8, i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", i8, [7 x i8], %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec", %"class.Ice::RangeSpec" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.Ice::RangeSpec" = type { %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc" }
%"struct.Ice::RangeSpec::Desc" = type <{ %"class.std::__1::unordered_set.360", %"class.llvm::BitVector", i32, i8, [3 x i8] }>
%"class.std::__1::unordered_set.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.379", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { float }
%"class.llvm::BitVector" = type { i64*, i32, i32 }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.308", i32, i8, i8, i8, i32, %"class.std::__1::vector.202", %"class.std::__1::vector.202", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.202", i32, [4 x i8], %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::vector.207", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.145", %"class.std::__1::vector.273", %"class.Ice::CfgNode"*, %"class.std::__1::vector.279", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.19", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.33", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.58", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.64", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.125", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.141", %"class.std::__1::unique_ptr.178", i8, %"class.std::__1::unique_ptr.184", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.190", %"class.llvm::SmallVector.196", %"class.llvm::SmallVector.196" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.19", %"class.std::__1::vector.26" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.14" }
%"class.Ice::VariableDeclaration" = type <{ %"class.Ice::GlobalDeclaration", %"class.std::__1::vector.9", i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.Ice::GlobalDeclaration" = type { i32 (...)**, i32, i32, %"class.Ice::StringID" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"**, %"class.std::__1::__compressed_pair.11" }
%"class.Ice::VariableDeclaration::Initializer" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.Ice::VariableDeclaration::Initializer"** }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.73" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.66" }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { i64*, i64*, %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { i64* }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.120" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.92", %"class.std::__1::vector.99", %"class.std::__1::vector.113", %"class.std::__1::vector.101", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.108" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.101", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { double*, double*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { double* }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { i64*, i64*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.131"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.137, %union.anon.139, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.137 = type { i64 }
%union.anon.139 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.141" = type <{ [128 x %"class.std::__1::unique_ptr.142"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.309", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.309" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.310", %"class.std::__1::unordered_map.317", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"struct.std::__1::pair.312"*, %"struct.std::__1::pair.312"*, %"class.std::__1::__compressed_pair.313" }
%"struct.std::__1::pair.312" = type { i32, i32 }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::pair.312"* }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.Ice::sz_allocator.316" }
%"struct.Ice::sz_allocator.316" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.317" = type { %"class.std::__1::__hash_table.318" }
%"class.std::__1::__hash_table.318" = type <{ %"class.std::__1::unique_ptr.319", %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", [4 x i8] }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321", %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::__hash_node_base.322"** }
%"struct.std::__1::__hash_node_base.322" = type { %"struct.std::__1::__hash_node_base.322"* }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.std::__1::__bucket_list_deallocator.324" }
%"class.std::__1::__bucket_list_deallocator.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.Ice::sz_allocator.327" }
%"struct.Ice::sz_allocator.327" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329", %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::__hash_node_base.322" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.Ice::sz_allocator.331" }
%"struct.Ice::sz_allocator.331" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair.312"* }
%"class.llvm::SmallVector.190" = type { %"class.llvm::SmallVectorImpl.191", %"struct.llvm::SmallVectorStorage.195" }
%"class.llvm::SmallVectorImpl.191" = type { %"class.llvm::SmallVectorTemplateBase.192" }
%"class.llvm::SmallVectorTemplateBase.192" = type { %"class.llvm::SmallVectorTemplateCommon.193" }
%"class.llvm::SmallVectorTemplateCommon.193" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.194" }
%"struct.llvm::AlignedCharArrayUnion.194" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.195" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.194"] }
%"class.llvm::SmallVector.196" = type { %"class.llvm::SmallVectorImpl.197", %"struct.llvm::SmallVectorStorage.201" }
%"class.llvm::SmallVectorImpl.197" = type { %"class.llvm::SmallVectorTemplateBase.198" }
%"class.llvm::SmallVectorTemplateBase.198" = type { %"class.llvm::SmallVectorTemplateCommon.199" }
%"class.llvm::SmallVectorTemplateCommon.199" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.200" }
%"struct.llvm::AlignedCharArrayUnion.200" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.201" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.200"] }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.Ice::sz_allocator.212" }
%"struct.Ice::sz_allocator.212" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.52", [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type { %"class.std::__1::unique_ptr", %"struct.Ice::sz_allocator_scope", %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.216", %"class.std::__1::vector.234", %"class.std::__1::vector.218", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", i32, i32 }
%"struct.Ice::sz_allocator_scope" = type { i8 }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.230" }
%"class.Ice::Liveness::LivenessNode" = type { i32, i32, %"class.std::__1::vector.218", %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl", %"class.std::__1::vector.224", %"class.std::__1::vector.224" }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.Ice::sz_allocator.229" }
%"struct.Ice::sz_allocator.229" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.Ice::Liveness::LivenessNode"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.Ice::sz_allocator.233" }
%"struct.Ice::sz_allocator.233" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { i32*, i32*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.Ice::sz_allocator.222" }
%"struct.Ice::sz_allocator.222" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::BitVectorTmpl" = type { i64*, i32, i32, %"struct.Ice::sz_allocator.223" }
%"struct.Ice::sz_allocator.223" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.258" }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.266" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.260", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.Ice::sz_allocator.265" }
%"struct.Ice::sz_allocator.265" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.Ice::sz_allocator.269" }
%"struct.Ice::sz_allocator.269" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.154", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.154" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.157", i8, [7 x i8] }>
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.160" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.159 }
%union.anon.159 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.275" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.246", i32 }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249", %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.Ice::sz_allocator.251" }
%"struct.Ice::sz_allocator.251" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.Ice::sz_allocator.278" }
%"struct.Ice::sz_allocator.278" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.304" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.281" }
%"class.std::__1::__hash_table.281" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.299", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base.285"** }
%"struct.std::__1::__hash_node_base.285" = type { %"struct.std::__1::__hash_node_base.285"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator.287" }
%"class.std::__1::__bucket_list_deallocator.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.Ice::sz_allocator.290" }
%"struct.Ice::sz_allocator.290" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.285" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.Ice::sz_allocator.294" }
%"struct.Ice::sz_allocator.294" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305", %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.Ice::sz_allocator.307" }
%"struct.Ice::sz_allocator.307" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::StringID.308" = type { i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.246", i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::InstPhi" = type { %"class.Ice::InstHighLevel.base", %"class.std::__1::vector.202" }
%"class.Ice::InstBr" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"* }
%"class.Ice::InstAssign" = type { %"class.Ice::InstHighLevel.base", [4 x i8] }
%"class.llvm::SmallVector.346" = type { %"class.llvm::SmallVectorImpl.347", %"struct.llvm::SmallVectorStorage.352" }
%"class.llvm::SmallVectorImpl.347" = type { %"class.llvm::SmallVectorTemplateBase.348" }
%"class.llvm::SmallVectorTemplateBase.348" = type { %"class.llvm::SmallVectorTemplateCommon.349" }
%"class.llvm::SmallVectorTemplateCommon.349" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.350" }
%"struct.llvm::AlignedCharArrayUnion.350" = type { %"struct.llvm::AlignedCharArray.351" }
%"struct.llvm::AlignedCharArray.351" = type { [48 x i8] }
%"struct.llvm::SmallVectorStorage.352" = type { [31 x %"struct.llvm::AlignedCharArrayUnion.350"] }
%"class.Ice::(anonymous namespace)::PhiDesc" = type <{ %"class.Ice::InstPhi"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*, i8, [7 x i8], i64, i32, [4 x i8] }>
%"class.Ice::SmallBitVector" = type <{ [2 x i64], i32, [4 x i8] }>
%"struct.std::__1::__less.395" = type { i8 }
%"class.Ice::InstBundleLock" = type { %"class.Ice::InstHighLevel.base", i32 }
%"struct.std::__1::pair.384" = type { i8*, i64 }
%"struct.std::__1::__split_buffer" = type { %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"*, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.Ice::sz_allocator.233"* }

$_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE = comdat any

$_ZN3Ice8Liveness12getLiveBeginEPKNS_7CfgNodeE = comdat any

$_ZN3Ice8Liveness10getLiveEndEPKNS_7CfgNodeE = comdat any

$_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEoRERKS2_ = comdat any

$_ZN3Ice8Liveness10getLiveOutEPKNS_7CfgNodeE = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaSERKS2_ = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb = comdat any

$_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEE9find_nextEj = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaNERKS2_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_ = comdat any

$_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE = comdat any

$_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN3Ice8Liveness12LivenessNodeC2ERKS1_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_ = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_ = comdat any

$_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_ = comdat any

$_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm = comdat any

$_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb = comdat any

$_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj = comdat any

$_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEEeqERKS2_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEbT0_S7_T_ = comdat any

@.str = private unnamed_addr constant [47 x i8] c"Phi instruction added to the middle of a block\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"Phi error: missing label for incoming edge\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"Fatal inconsistency in liveness analysis\00", align 1
@_ZN3Ice7ClFlags5FlagsE = external local_unnamed_addr global %"class.Ice::ClFlags", align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"*, %"class.Ice::Inst"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 12
  %10 = icmp eq %"class.Ice::Inst"* %1, null
  %11 = or i1 %10, %9
  %12 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0
  br i1 %11, label %44, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.llvm::iplist_impl"* %12 to %"class.llvm::ilist_node_impl"**
  %16 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %15, align 8
  %17 = icmp eq %"class.llvm::ilist_node_impl"* %14, %16
  br i1 %17, label %34, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %20 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  %22 = tail call i8* @_Znwm(i64 48) #11
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %25, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i64 46, i1 false) #10
  %26 = getelementptr inbounds i8, i8* %22, i64 46
  store i8 0, i8* %26, align 1
  call void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"* %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %27 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %18, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  br label %54

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0
  %36 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %36, i64 0, i32 0
  %39 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %39, align 8
  %41 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %37, %"class.llvm::ilist_node_base"** %41, align 8
  %42 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %36, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %40, %"class.llvm::ilist_node_base"** %42, align 8
  %43 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %40, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %38, %"class.llvm::ilist_node_base"** %43, align 8
  store %"class.llvm::ilist_node_base"* %38, %"class.llvm::ilist_node_base"** %39, align 8
  br label %54

44:                                               ; preds = %2
  %45 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %1, i64 0, i32 1, i32 0
  %46 = select i1 %10, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %45
  %47 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %46, i64 0, i32 0
  %49 = getelementptr inbounds %"class.llvm::iplist_impl", %"class.llvm::iplist_impl"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %46, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %47, %"class.llvm::ilist_node_base"** %51, align 8
  %52 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %46, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %50, %"class.llvm::ilist_node_base"** %52, align 8
  %53 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %50, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %48, %"class.llvm::ilist_node_base"** %53, align 8
  store %"class.llvm::ilist_node_base"* %48, %"class.llvm::ilist_node_base"** %49, align 8
  br label %54

54:                                               ; preds = %34, %44, %33
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: optsize
declare void @_ZN3Ice3Cfg8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::Cfg"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode13replaceInEdgeEPS0_S1_(%"class.Ice::CfgNode"*, %"class.Ice::CfgNode"* readnone, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %6 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.202"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %29, %3
  %12 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.llvm::ilist_node_base"** %12 to %"class.llvm::ilist_node_impl"**
  %15 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %14, align 8
  %16 = icmp eq %"class.llvm::ilist_node_impl"* %15, %13
  br i1 %16, label %37, label %38

17:                                               ; preds = %3, %29
  %18 = phi i64 [ %30, %29 ], [ %9, %3 ]
  %19 = phi i64 [ %31, %29 ], [ %7, %3 ]
  %20 = phi i64 [ %33, %29 ], [ 0, %3 ]
  %21 = phi i32 [ %32, %29 ], [ 0, %3 ]
  %22 = inttoptr i64 %18 to %"class.Ice::CfgNode"**
  %23 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, i64 %20
  %24 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %23, align 8
  %25 = icmp eq %"class.Ice::CfgNode"* %24, %1
  br i1 %25, label %26, label %29

26:                                               ; preds = %17
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %23, align 8
  %27 = load i64, i64* %6, align 8
  %28 = load i64, i64* %8, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %31 = phi i64 [ %19, %17 ], [ %27, %26 ]
  %32 = add i32 %21, 1
  %33 = zext i32 %32 to i64
  %34 = sub i64 %31, %30
  %35 = ashr exact i64 %34, 3
  %36 = icmp ugt i64 %35, %33
  br i1 %36, label %17, label %11

37:                                               ; preds = %57, %11
  ret void

38:                                               ; preds = %11, %57
  %39 = phi %"class.llvm::ilist_node_impl"* [ %60, %57 ], [ %15, %11 ]
  %40 = icmp eq %"class.llvm::ilist_node_impl"* %39, null
  %41 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %39, i64 -1, i32 0, i32 1
  %42 = bitcast %"class.llvm::ilist_node_base"** %41 to %"class.Ice::Inst"*
  %43 = select i1 %40, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %42
  %44 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %43, i64 0, i32 13
  %45 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %43, i64 0, i32 13, i32 0, i32 1
  %46 = bitcast %"class.Ice::Operand"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.246"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = lshr exact i64 %50, 3
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %43, i64 1
  %56 = bitcast %"class.Ice::Inst"* %55 to %"class.Ice::CfgNode"***
  br label %62

57:                                               ; preds = %73, %38
  %58 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %39, i64 0, i32 0, i32 1
  %59 = bitcast %"class.llvm::ilist_node_base"** %58 to %"class.llvm::ilist_node_impl"**
  %60 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %59, align 8
  %61 = icmp eq %"class.llvm::ilist_node_impl"* %60, %13
  br i1 %61, label %37, label %38

62:                                               ; preds = %54, %73
  %63 = phi i64 [ %49, %54 ], [ %74, %73 ]
  %64 = phi i64 [ %47, %54 ], [ %75, %73 ]
  %65 = phi i64 [ 0, %54 ], [ %76, %73 ]
  %66 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %56, align 8
  %67 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %66, i64 %65
  %68 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, align 8
  %69 = icmp eq %"class.Ice::CfgNode"* %68, %1
  br i1 %69, label %70, label %73

70:                                               ; preds = %62
  store %"class.Ice::CfgNode"* %2, %"class.Ice::CfgNode"** %67, align 8
  %71 = load i64, i64* %46, align 8
  %72 = load i64, i64* %48, align 8
  br label %73

73:                                               ; preds = %62, %70
  %74 = phi i64 [ %63, %62 ], [ %72, %70 ]
  %75 = phi i64 [ %64, %62 ], [ %71, %70 ]
  %76 = add nuw nsw i64 %65, 1
  %77 = sub i64 %75, %74
  %78 = lshr exact i64 %77, 3
  %79 = and i64 %78, 4294967295
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %62, label %57
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode20renumberInstructionsEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_124removeDeletedAndRenumberIN4llvm6iplistINS_4InstEJEEEEEvPT_PNS_3CfgE(%"class.llvm::iplist"* %6, %"class.Ice::Cfg"* %3) #13
  %7 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %8 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_124removeDeletedAndRenumberIN4llvm6iplistINS_4InstEJEEEEEvPT_PNS_3CfgE(%"class.llvm::iplist"* %7, %"class.Ice::Cfg"* %8) #13
  %9 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %10 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %9, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = sub nsw i32 %11, %5
  %13 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 8
  store i32 %12, i32* %13, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN3Ice12_GLOBAL__N_124removeDeletedAndRenumberIN4llvm6iplistINS_4InstEJEEEEEvPT_PNS_3CfgE(%"class.llvm::iplist"*, %"class.Ice::Cfg"*) unnamed_addr #0 {
  %3 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 35), align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.llvm::ilist_node_base"** %5 to %"class.llvm::ilist_node_impl"**
  %7 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %6, align 8
  %8 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = icmp eq %"class.llvm::ilist_node_impl"* %7, %8
  br i1 %9, label %40, label %10

10:                                               ; preds = %2, %38
  %11 = phi %"class.llvm::ilist_node_impl"* [ %14, %38 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 0, i32 0, i32 1
  %13 = bitcast %"class.llvm::ilist_node_base"** %12 to %"class.llvm::ilist_node_impl"**
  %14 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %13, align 8
  br i1 %4, label %15, label %33

15:                                               ; preds = %10
  %16 = icmp eq %"class.llvm::ilist_node_impl"* %11, null
  %17 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 -1, i32 0, i32 1
  %18 = bitcast %"class.llvm::ilist_node_base"** %17 to %"class.Ice::Inst"*
  %19 = select i1 %16, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %18
  %20 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %19, i64 0, i32 1, i32 0
  %25 = select i1 %16, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %24
  %26 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %26, align 8
  %28 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %25, i64 0, i32 0, i32 1
  %29 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %28, align 8
  %30 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %29, i64 0, i32 0
  store %"class.llvm::ilist_node_base"* %27, %"class.llvm::ilist_node_base"** %30, align 8
  %31 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %27, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %29, %"class.llvm::ilist_node_base"** %31, align 8
  %32 = bitcast %"class.llvm::ilist_node_impl"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #10
  br label %38

33:                                               ; preds = %10, %15
  %34 = icmp eq %"class.llvm::ilist_node_impl"* %11, null
  %35 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %11, i64 -1, i32 0, i32 1
  %36 = bitcast %"class.llvm::ilist_node_base"** %35 to %"class.Ice::Inst"*
  %37 = select i1 %34, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %36
  tail call void @_ZN3Ice4Inst8renumberEPNS_3CfgE(%"class.Ice::Inst"* %37, %"class.Ice::Cfg"* %1) #12
  br label %38

38:                                               ; preds = %23, %33
  %39 = icmp eq %"class.llvm::ilist_node_impl"* %14, %8
  br i1 %39, label %40, label %10

40:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode19computePredecessorsEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %5 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %4, align 8
  %6 = icmp eq %"class.Ice::CfgNode"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.Ice::CfgNode"* %0 to i64
  br label %10

9:                                                ; preds = %77, %1
  ret void

10:                                               ; preds = %7, %77
  %11 = phi %"class.Ice::CfgNode"** [ %3, %7 ], [ %78, %77 ]
  %12 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %12, i64 0, i32 9
  %14 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %12, i64 0, i32 9, i32 0, i32 1
  %15 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %14, align 8
  %16 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %12, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %16, align 8
  %18 = icmp ult %"class.Ice::CfgNode"** %15, %17
  %19 = ptrtoint %"class.Ice::CfgNode"** %17 to i64
  br i1 %18, label %20, label %25

20:                                               ; preds = %10
  %21 = bitcast %"class.Ice::CfgNode"** %15 to i64*
  store i64 %8, i64* %21, align 8
  %22 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %15, i64 1
  %23 = ptrtoint %"class.Ice::CfgNode"** %22 to i64
  %24 = bitcast %"class.Ice::CfgNode"*** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %77

25:                                               ; preds = %10
  %26 = ptrtoint %"class.Ice::CfgNode"** %15 to i64
  %27 = bitcast %"class.Ice::CfgNode"*** %14 to i64*
  %28 = bitcast %"class.std::__1::vector.202"* %13 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.202"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #14
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"class.Ice::CfgNode"*** %16 to i64*
  %38 = sub i64 %19, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %41, %36
  %47 = phi i64 [ %44, %41 ], [ 2305843009213693951, %36 ]
  %48 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %49 = shl i64 %47, 3
  %50 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %48, i64 %49, i64 8) #12
  %51 = bitcast i8* %50 to %"class.Ice::CfgNode"**
  br label %52

52:                                               ; preds = %46, %41
  %53 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %54 = phi %"class.Ice::CfgNode"** [ %51, %46 ], [ null, %41 ]
  %55 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %54, i64 %31
  %56 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %54, i64 %53
  %57 = ptrtoint %"class.Ice::CfgNode"** %56 to i64
  %58 = bitcast %"class.Ice::CfgNode"** %55 to i64*
  store i64 %8, i64* %58, align 8
  %59 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, i64 1
  %60 = ptrtoint %"class.Ice::CfgNode"** %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %13, i64 0, i32 0, i32 0
  %62 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %61, align 8
  %63 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %14, align 8
  %64 = icmp eq %"class.Ice::CfgNode"** %63, %62
  br i1 %64, label %74, label %65

65:                                               ; preds = %52, %65
  %66 = phi %"class.Ice::CfgNode"** [ %68, %65 ], [ %55, %52 ]
  %67 = phi %"class.Ice::CfgNode"** [ %69, %65 ], [ %63, %52 ]
  %68 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %66, i64 -1
  %69 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, i64 -1
  %70 = bitcast %"class.Ice::CfgNode"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.Ice::CfgNode"** %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = icmp eq %"class.Ice::CfgNode"** %69, %62
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %52
  %75 = phi %"class.Ice::CfgNode"** [ %55, %52 ], [ %68, %65 ]
  %76 = ptrtoint %"class.Ice::CfgNode"** %75 to i64
  store i64 %76, i64* %28, align 8
  store i64 %60, i64* %27, align 8
  store i64 %57, i64* %37, align 8
  br label %77

77:                                               ; preds = %20, %74
  %78 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %11, i64 1
  %79 = icmp eq %"class.Ice::CfgNode"** %78, %5
  br i1 %79, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode17computeSuccessorsEv(%"class.Ice::CfgNode"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.202", align 16
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10
  %4 = bitcast %"class.std::__1::vector.202"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %7 = bitcast %"class.Ice::CfgNode"*** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9
  %9 = bitcast %"class.std::__1::vector.202"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %12 = bitcast %"class.Ice::CfgNode"*** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %"class.std::__1::vector.202"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0
  %15 = bitcast %"class.llvm::simple_ilist"* %14 to %"class.llvm::ilist_node_impl"**
  %16 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %15, align 8
  %17 = icmp eq %"class.llvm::ilist_node_impl"* %16, null
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %16, i64 -1, i32 0, i32 1
  %19 = bitcast %"class.llvm::ilist_node_base"** %18 to %"class.Ice::Inst"*
  %20 = select i1 %17, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %19
  %21 = bitcast %"class.Ice::Inst"* %20 to void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)***
  %22 = load void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)**, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)** %22, i64 1
  %24 = load void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)** %23, align 8
  call void %24(%"class.std::__1::vector.202"* nonnull sret %2, %"class.Ice::Inst"* %20) #12
  %25 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %25, align 8
  %27 = icmp eq %"class.Ice::CfgNode"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %1
  %29 = bitcast %"class.std::__1::vector.202"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #10
  br label %30

30:                                               ; preds = %28, %1
  %31 = bitcast %"class.std::__1::vector.202"* %2 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 16
  %33 = bitcast %"class.std::__1::vector.202"* %3 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.Ice::CfgNode"*** %34 to i64*
  %36 = load i64, i64* %35, align 16
  %37 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.Ice::CfgNode"*** %37 to i64*
  store i64 %36, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode21enforcePhiConsistencyEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.llvm::ilist_node_base"** %2 to %"class.llvm::ilist_node_impl"**
  %5 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %4, align 8
  %6 = icmp eq %"class.llvm::ilist_node_impl"* %5, %3
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 0
  %9 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  br label %11

10:                                               ; preds = %78, %1
  ret void

11:                                               ; preds = %7, %78
  %12 = phi %"class.llvm::ilist_node_impl"* [ %5, %7 ], [ %81, %78 ]
  %13 = icmp eq %"class.llvm::ilist_node_impl"* %12, null
  %14 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %12, i64 -1, i32 0, i32 1
  %15 = bitcast %"class.llvm::ilist_node_base"** %14 to %"class.Ice::Inst"*
  %16 = select i1 %13, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %15
  %17 = bitcast %"class.Ice::Inst"* %16 to %"class.Ice::InstPhi"*
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %16, i64 0, i32 13
  %19 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %16, i64 0, i32 13, i32 0, i32 1
  %20 = bitcast %"class.Ice::Operand"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.246"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %16, i64 1
  %30 = bitcast %"class.Ice::Inst"* %29 to %"class.Ice::CfgNode"***
  br label %43

31:                                               ; preds = %68
  %32 = trunc i64 %73 to i32
  br label %33

33:                                               ; preds = %11, %31
  %34 = phi i32 [ %32, %31 ], [ 0, %11 ]
  %35 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %8, align 8
  %36 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %9, align 8
  %37 = icmp eq %"class.Ice::CfgNode"** %35, %36
  br i1 %37, label %78, label %38

38:                                               ; preds = %33
  %39 = icmp eq i32 %34, 0
  %40 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %16, i64 1
  %41 = bitcast %"class.Ice::Inst"* %40 to %"class.Ice::CfgNode"***
  %42 = zext i32 %34 to i64
  br label %83

43:                                               ; preds = %28, %68
  %44 = phi i64 [ %23, %28 ], [ %69, %68 ]
  %45 = phi i64 [ %21, %28 ], [ %70, %68 ]
  %46 = phi i64 [ 0, %28 ], [ %71, %68 ]
  %47 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %30, align 8
  %48 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %47, i64 %46
  %49 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %48, align 8
  %50 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %8, align 8
  %51 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %9, align 8
  %52 = icmp eq %"class.Ice::CfgNode"** %50, %51
  br i1 %52, label %65, label %53

53:                                               ; preds = %43, %53
  %54 = phi i8 [ %58, %53 ], [ 0, %43 ]
  %55 = phi %"class.Ice::CfgNode"** [ %59, %53 ], [ %50, %43 ]
  %56 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, align 8
  %57 = icmp eq %"class.Ice::CfgNode"* %56, %49
  %58 = select i1 %57, i8 1, i8 %54
  %59 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, i64 1
  %60 = icmp eq %"class.Ice::CfgNode"** %59, %51
  %61 = or i1 %57, %60
  br i1 %61, label %62, label %53

62:                                               ; preds = %53
  %63 = and i8 %58, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %43, %62
  tail call void @_ZN3Ice7InstPhi21clearOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"* %17, %"class.Ice::CfgNode"* %49) #12
  %66 = load i64, i64* %20, align 8
  %67 = load i64, i64* %22, align 8
  br label %68

68:                                               ; preds = %62, %65
  %69 = phi i64 [ %44, %62 ], [ %67, %65 ]
  %70 = phi i64 [ %45, %62 ], [ %66, %65 ]
  %71 = add nuw nsw i64 %46, 1
  %72 = sub i64 %70, %69
  %73 = lshr exact i64 %72, 3
  %74 = and i64 %73, 4294967295
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %43, label %31

76:                                               ; preds = %99
  %77 = icmp eq %"class.Ice::CfgNode"** %102, %36
  br i1 %77, label %78, label %83

78:                                               ; preds = %76, %33
  %79 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %12, i64 0, i32 0, i32 1
  %80 = bitcast %"class.llvm::ilist_node_base"** %79 to %"class.llvm::ilist_node_impl"**
  %81 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %80, align 8
  %82 = icmp eq %"class.llvm::ilist_node_impl"* %81, %3
  br i1 %82, label %10, label %11

83:                                               ; preds = %38, %76
  %84 = phi %"class.Ice::CfgNode"** [ %35, %38 ], [ %102, %76 ]
  %85 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %84, align 8
  br i1 %39, label %103, label %86

86:                                               ; preds = %83
  %87 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %41, align 8
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ %95, %88 ], [ 0, %86 ]
  %90 = phi i8 [ %94, %88 ], [ 0, %86 ]
  %91 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %87, i64 %89
  %92 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %91, align 8
  %93 = icmp eq %"class.Ice::CfgNode"* %85, %92
  %94 = select i1 %93, i8 1, i8 %90
  %95 = add nuw nsw i64 %89, 1
  %96 = xor i1 %93, true
  %97 = icmp ult i64 %95, %42
  %98 = and i1 %97, %96
  br i1 %98, label %88, label %99

99:                                               ; preds = %88
  %100 = and i8 %94, 1
  %101 = icmp eq i8 %100, 0
  %102 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %84, i64 1
  br i1 %101, label %103, label %76

103:                                              ; preds = %83, %99
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true) #14
  unreachable
}

; Function Attrs: optsize
declare void @_ZN3Ice7InstPhi21clearOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode13placePhiLoadsEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.llvm::ilist_node_base"** %2 to %"class.llvm::ilist_node_impl"**
  %5 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %4, align 8
  %6 = icmp eq %"class.llvm::ilist_node_impl"* %5, %3
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.llvm::ilist_node_base"** %8 to %"class.llvm::ilist_node_impl"**
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  br label %12

11:                                               ; preds = %12, %1
  ret void

12:                                               ; preds = %7, %12
  %13 = phi %"class.llvm::ilist_node_impl"* [ %5, %7 ], [ %38, %12 ]
  %14 = icmp eq %"class.llvm::ilist_node_impl"* %13, null
  %15 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 -1, i32 0, i32 1
  %16 = bitcast %"class.llvm::ilist_node_base"** %15 to %"class.Ice::Inst"*
  %17 = select i1 %14, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %16
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 12
  %21 = bitcast %"class.Ice::Inst"* %17 to %"class.Ice::InstPhi"*
  %22 = select i1 %20, %"class.Ice::InstPhi"* %21, %"class.Ice::InstPhi"* null
  %23 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %9, align 8
  %24 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %10, align 8
  %25 = tail call %"class.Ice::Inst"* @_ZN3Ice7InstPhi5lowerEPNS_3CfgE(%"class.Ice::InstPhi"* %22, %"class.Ice::Cfg"* %24) #12
  %26 = icmp eq %"class.Ice::Inst"* %25, null
  %27 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %25, i64 0, i32 1, i32 0
  %28 = select i1 %26, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %27
  %29 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %23, i64 0, i32 0
  %30 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %23, i64 0, i32 0, i32 0
  %32 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %29, %"class.llvm::ilist_node_base"** %33, align 8
  %34 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %28, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %32, %"class.llvm::ilist_node_base"** %34, align 8
  %35 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %32, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %30, %"class.llvm::ilist_node_base"** %35, align 8
  store %"class.llvm::ilist_node_base"* %30, %"class.llvm::ilist_node_base"** %31, align 8
  %36 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %13, i64 0, i32 0, i32 1
  %37 = bitcast %"class.llvm::ilist_node_base"** %36 to %"class.llvm::ilist_node_impl"**
  %38 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %37, align 8
  %39 = icmp eq %"class.llvm::ilist_node_impl"* %38, %3
  br i1 %39, label %11, label %12
}

; Function Attrs: optsize
declare %"class.Ice::Inst"* @_ZN3Ice7InstPhi5lowerEPNS_3CfgE(%"class.Ice::InstPhi"*, %"class.Ice::Cfg"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode14placePhiStoresEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.202", align 8
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = bitcast %"class.llvm::simple_ilist"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to %"class.llvm::ilist_node_impl"*
  %7 = icmp eq i64 %5, 0
  %8 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %6, i64 -1, i32 0, i32 1
  %9 = bitcast %"class.llvm::ilist_node_base"** %8 to %"class.Ice::Inst"*
  %10 = select i1 %7, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %9
  %11 = bitcast %"class.Ice::Inst"* %10 to void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)***
  %12 = load void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)**, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)** %12, i64 1
  %14 = load void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)*, void (%"class.std::__1::vector.202"*, %"class.Ice::Inst"*)** %13, align 8
  call void %14(%"class.std::__1::vector.202"* nonnull sret %2, %"class.Ice::Inst"* %10) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %15, align 8
  %17 = icmp eq %"class.Ice::CfgNode"** %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = ptrtoint %"class.Ice::CfgNode"** %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"class.Ice::CfgNode"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %10, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 3
  %26 = bitcast %"class.llvm::ilist_node_base"** %8 to %"class.Ice::InstBr"*
  %27 = select i1 %7, %"class.Ice::InstBr"* null, %"class.Ice::InstBr"* %26
  %28 = icmp eq %"class.Ice::InstBr"* %27, null
  %29 = or i1 %28, %25
  br i1 %29, label %58, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.Ice::InstBr", %"class.Ice::InstBr"* %27, i64 0, i32 2
  %32 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %31, align 8
  %33 = icmp eq %"class.Ice::CfgNode"* %32, null
  br i1 %33, label %58, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.llvm::ilist_node_base"** %35 to %"class.llvm::ilist_node_impl"**
  %37 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %36, align 8
  %38 = icmp eq %"class.llvm::ilist_node_impl"* %37, %6
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = inttoptr i64 %5 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = inttoptr i64 %41 to %"class.llvm::ilist_node_impl"*
  %43 = icmp eq i64 %41, 0
  %44 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %42, i64 -1, i32 0, i32 1
  %45 = bitcast %"class.llvm::ilist_node_base"** %44 to %"class.Ice::Inst"*
  %46 = select i1 %43, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %45
  %47 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -7
  %50 = icmp ult i32 %49, 2
  br i1 %50, label %51, label %54

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 10
  %53 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %52, align 8
  br label %58

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %42, i64 0, i32 0, i32 1
  %56 = bitcast %"class.llvm::ilist_node_base"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %34, %22, %30, %51, %54
  %59 = phi i64 [ %5, %22 ], [ %5, %30 ], [ %41, %51 ], [ %57, %54 ], [ %5, %34 ]
  %60 = phi %"class.Ice::Variable"* [ null, %22 ], [ null, %30 ], [ %53, %51 ], [ null, %54 ], [ null, %34 ]
  %61 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 0
  %62 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %61, align 8
  %63 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %64 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %63, align 8
  %65 = icmp eq %"class.Ice::CfgNode"** %62, %64
  br i1 %65, label %74, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %68 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %60, i64 0, i32 0
  %69 = inttoptr i64 %59 to %"class.llvm::ilist_node_impl"*
  %70 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %69, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %6, i64 0, i32 0
  %73 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %6, i64 0, i32 0, i32 0
  br label %75

74:                                               ; preds = %83, %58
  ret void

75:                                               ; preds = %66, %83
  %76 = phi %"class.Ice::CfgNode"** [ %62, %66 ], [ %84, %83 ]
  %77 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %76, align 8
  %78 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %77, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %77, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.llvm::ilist_node_base"** %78 to %"class.llvm::ilist_node_impl"**
  %81 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %80, align 8
  %82 = icmp eq %"class.llvm::ilist_node_impl"* %81, %79
  br i1 %82, label %83, label %86

83:                                               ; preds = %86, %75
  %84 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %76, i64 1
  %85 = icmp eq %"class.Ice::CfgNode"** %84, %64
  br i1 %85, label %74, label %75

86:                                               ; preds = %75, %86
  %87 = phi %"class.llvm::ilist_node_impl"* [ %120, %86 ], [ %81, %75 ]
  %88 = icmp eq %"class.llvm::ilist_node_impl"* %87, null
  %89 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %87, i64 -1, i32 0, i32 1
  %90 = bitcast %"class.llvm::ilist_node_base"** %89 to %"class.Ice::Inst"*
  %91 = select i1 %88, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %90
  %92 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %91, i64 0, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 12
  %95 = bitcast %"class.Ice::Inst"* %91 to %"class.Ice::InstPhi"*
  %96 = select i1 %94, %"class.Ice::InstPhi"* %95, %"class.Ice::InstPhi"* null
  %97 = call %"class.Ice::Operand"* @_ZNK3Ice7InstPhi19getOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"* %96, %"class.Ice::CfgNode"* %0) #12
  %98 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %91, i64 0, i32 10
  %99 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %98, align 8
  %100 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %67, align 8
  %101 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %101, align 8
  %103 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %102, i64 104, i64 8) #12
  %104 = bitcast i8* %103 to %"class.Ice::InstAssign"*
  call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %104, %"class.Ice::Cfg"* %100, %"class.Ice::Variable"* %99, %"class.Ice::Operand"* %97) #12
  %105 = icmp eq %"class.Ice::Operand"* %68, %97
  %106 = icmp eq i8* %103, null
  %107 = getelementptr inbounds i8, i8* %103, i64 8
  %108 = bitcast i8* %107 to %"class.llvm::ilist_node_impl"*
  %109 = select i1 %106, %"class.llvm::ilist_node_impl"* null, %"class.llvm::ilist_node_impl"* %108
  %110 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %109, i64 0, i32 0
  %111 = select i1 %105, %"class.llvm::ilist_node_base"** %73, %"class.llvm::ilist_node_base"** %71
  %112 = select i1 %105, %"class.llvm::ilist_node_base"* %72, %"class.llvm::ilist_node_base"* %70
  %113 = select i1 %105, %"class.llvm::ilist_node_base"** %73, %"class.llvm::ilist_node_base"** %71
  %114 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %111, align 8
  %115 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %109, i64 0, i32 0, i32 1
  store %"class.llvm::ilist_node_base"* %112, %"class.llvm::ilist_node_base"** %115, align 8
  %116 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %109, i64 0, i32 0, i32 0
  store %"class.llvm::ilist_node_base"* %114, %"class.llvm::ilist_node_base"** %116, align 8
  %117 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %114, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %110, %"class.llvm::ilist_node_base"** %117, align 8
  store %"class.llvm::ilist_node_base"* %110, %"class.llvm::ilist_node_base"** %113, align 8
  %118 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %87, i64 0, i32 0, i32 1
  %119 = bitcast %"class.llvm::ilist_node_base"** %118 to %"class.llvm::ilist_node_impl"**
  %120 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %119, align 8
  %121 = icmp eq %"class.llvm::ilist_node_impl"* %120, %79
  br i1 %121, label %83, label %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare %"class.Ice::Operand"* @_ZNK3Ice7InstPhi19getOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode10deletePhisEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.llvm::ilist_node_base"** %2 to %"class.llvm::ilist_node_impl"**
  %5 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %4, align 8
  %6 = icmp eq %"class.llvm::ilist_node_impl"* %5, %3
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %1
  ret void

8:                                                ; preds = %1, %8
  %9 = phi %"class.llvm::ilist_node_impl"* [ %17, %8 ], [ %5, %1 ]
  %10 = icmp eq %"class.llvm::ilist_node_impl"* %9, null
  %11 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %9, i64 -1, i32 0, i32 1
  %12 = bitcast %"class.llvm::ilist_node_base"** %11 to %"class.Ice::Inst"*
  %13 = select i1 %10, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %12
  %14 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %13, i64 0, i32 4
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %9, i64 0, i32 0, i32 1
  %16 = bitcast %"class.llvm::ilist_node_base"** %15 to %"class.llvm::ilist_node_impl"**
  %17 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %16, align 8
  %18 = icmp eq %"class.llvm::ilist_node_impl"* %17, %3
  br i1 %18, label %7, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::CfgNode"* @_ZN3Ice7CfgNode17splitIncomingEdgeEPS0_j(%"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, i32) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.Ice::CfgNode"* %1 to i64
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %6 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %5, align 8
  %7 = tail call %"class.Ice::CfgNode"* @_ZN3Ice3Cfg8makeNodeEv(%"class.Ice::Cfg"* %6) #12
  %8 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %9
  %13 = select i1 %12, i32 %11, i32 %9
  %14 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 4
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 6
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 10, i32 0, i32 0
  %17 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %16, align 8
  %18 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 10, i32 0, i32 1
  %19 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %18, align 8
  %20 = icmp eq %"class.Ice::CfgNode"** %17, %19
  br i1 %20, label %93, label %21

21:                                               ; preds = %3, %90
  %22 = phi %"class.Ice::CfgNode"** [ %91, %90 ], [ %17, %3 ]
  %23 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, align 8
  %24 = icmp eq %"class.Ice::CfgNode"* %23, %0
  br i1 %24, label %25, label %90

25:                                               ; preds = %21
  store %"class.Ice::CfgNode"* %7, %"class.Ice::CfgNode"** %22, align 8
  %26 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 9
  %27 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 9, i32 0, i32 1
  %28 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %27, align 8
  %29 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %29, align 8
  %31 = icmp eq %"class.Ice::CfgNode"** %28, %30
  %32 = ptrtoint %"class.Ice::CfgNode"** %30 to i64
  br i1 %31, label %38, label %33

33:                                               ; preds = %25
  %34 = bitcast %"class.Ice::CfgNode"** %28 to i64*
  store i64 %4, i64* %34, align 8
  %35 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %28, i64 1
  %36 = ptrtoint %"class.Ice::CfgNode"** %35 to i64
  %37 = bitcast %"class.Ice::CfgNode"*** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %93

38:                                               ; preds = %25
  %39 = ptrtoint %"class.Ice::CfgNode"** %28 to i64
  %40 = bitcast %"class.Ice::CfgNode"*** %27 to i64*
  %41 = bitcast %"class.std::__1::vector.202"* %26 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::vector.202"* %26 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #14
  unreachable

49:                                               ; preds = %38
  %50 = bitcast %"class.Ice::CfgNode"*** %29 to i64*
  %51 = sub i64 %32, %42
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, 1152921504606846975
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = ashr exact i64 %51, 2
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %54, %49
  %60 = phi i64 [ %57, %54 ], [ 2305843009213693951, %49 ]
  %61 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %62 = shl i64 %60, 3
  %63 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %61, i64 %62, i64 8) #12
  %64 = bitcast i8* %63 to %"class.Ice::CfgNode"**
  br label %65

65:                                               ; preds = %59, %54
  %66 = phi i64 [ %60, %59 ], [ 0, %54 ]
  %67 = phi %"class.Ice::CfgNode"** [ %64, %59 ], [ null, %54 ]
  %68 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, i64 %44
  %69 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %67, i64 %66
  %70 = ptrtoint %"class.Ice::CfgNode"** %69 to i64
  %71 = bitcast %"class.Ice::CfgNode"** %68 to i64*
  store i64 %4, i64* %71, align 8
  %72 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %68, i64 1
  %73 = ptrtoint %"class.Ice::CfgNode"** %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %26, i64 0, i32 0, i32 0
  %75 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %74, align 8
  %76 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %27, align 8
  %77 = icmp eq %"class.Ice::CfgNode"** %76, %75
  br i1 %77, label %87, label %78

78:                                               ; preds = %65, %78
  %79 = phi %"class.Ice::CfgNode"** [ %81, %78 ], [ %68, %65 ]
  %80 = phi %"class.Ice::CfgNode"** [ %82, %78 ], [ %76, %65 ]
  %81 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %79, i64 -1
  %82 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %80, i64 -1
  %83 = bitcast %"class.Ice::CfgNode"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.Ice::CfgNode"** %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = icmp eq %"class.Ice::CfgNode"** %82, %75
  br i1 %86, label %87, label %78

87:                                               ; preds = %78, %65
  %88 = phi %"class.Ice::CfgNode"** [ %68, %65 ], [ %81, %78 ]
  %89 = ptrtoint %"class.Ice::CfgNode"** %88 to i64
  store i64 %89, i64* %41, align 8
  store i64 %73, i64* %40, align 8
  store i64 %70, i64* %50, align 8
  br label %93

90:                                               ; preds = %21
  %91 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %22, i64 1
  %92 = icmp eq %"class.Ice::CfgNode"** %91, %19
  br i1 %92, label %93, label %21

93:                                               ; preds = %90, %3, %87, %33
  %94 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 0
  %95 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %94, align 8
  %96 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %97 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %96, align 8
  %98 = icmp eq %"class.Ice::CfgNode"** %95, %97
  br i1 %98, label %172, label %99

99:                                               ; preds = %93, %169
  %100 = phi %"class.Ice::CfgNode"** [ %170, %169 ], [ %95, %93 ]
  %101 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %100, align 8
  %102 = icmp eq %"class.Ice::CfgNode"* %101, %1
  br i1 %102, label %103, label %169

103:                                              ; preds = %99
  store %"class.Ice::CfgNode"* %7, %"class.Ice::CfgNode"** %100, align 8
  %104 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 10
  %105 = ptrtoint %"class.Ice::CfgNode"* %0 to i64
  %106 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 10, i32 0, i32 1
  %107 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %106, align 8
  %108 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %7, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %109 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %108, align 8
  %110 = icmp ult %"class.Ice::CfgNode"** %107, %109
  %111 = ptrtoint %"class.Ice::CfgNode"** %109 to i64
  br i1 %110, label %112, label %117

112:                                              ; preds = %103
  %113 = bitcast %"class.Ice::CfgNode"** %107 to i64*
  store i64 %105, i64* %113, align 8
  %114 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %107, i64 1
  %115 = ptrtoint %"class.Ice::CfgNode"** %114 to i64
  %116 = bitcast %"class.Ice::CfgNode"*** %106 to i64*
  store i64 %115, i64* %116, align 8
  br label %172

117:                                              ; preds = %103
  %118 = ptrtoint %"class.Ice::CfgNode"** %107 to i64
  %119 = bitcast %"class.Ice::CfgNode"*** %106 to i64*
  %120 = bitcast %"class.std::__1::vector.202"* %104 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %118, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %117
  %127 = bitcast %"class.std::__1::vector.202"* %104 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #14
  unreachable

128:                                              ; preds = %117
  %129 = bitcast %"class.Ice::CfgNode"*** %108 to i64*
  %130 = sub i64 %111, %121
  %131 = ashr exact i64 %130, 3
  %132 = icmp ult i64 %131, 1152921504606846975
  br i1 %132, label %133, label %138

133:                                              ; preds = %128
  %134 = ashr exact i64 %130, 2
  %135 = icmp ult i64 %134, %124
  %136 = select i1 %135, i64 %124, i64 %134
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %133, %128
  %139 = phi i64 [ %136, %133 ], [ 2305843009213693951, %128 ]
  %140 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %141 = shl i64 %139, 3
  %142 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %140, i64 %141, i64 8) #12
  %143 = bitcast i8* %142 to %"class.Ice::CfgNode"**
  br label %144

144:                                              ; preds = %138, %133
  %145 = phi i64 [ %139, %138 ], [ 0, %133 ]
  %146 = phi %"class.Ice::CfgNode"** [ %143, %138 ], [ null, %133 ]
  %147 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %146, i64 %123
  %148 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %146, i64 %145
  %149 = ptrtoint %"class.Ice::CfgNode"** %148 to i64
  %150 = bitcast %"class.Ice::CfgNode"** %147 to i64*
  store i64 %105, i64* %150, align 8
  %151 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %147, i64 1
  %152 = ptrtoint %"class.Ice::CfgNode"** %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %104, i64 0, i32 0, i32 0
  %154 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %153, align 8
  %155 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %106, align 8
  %156 = icmp eq %"class.Ice::CfgNode"** %155, %154
  br i1 %156, label %166, label %157

157:                                              ; preds = %144, %157
  %158 = phi %"class.Ice::CfgNode"** [ %160, %157 ], [ %147, %144 ]
  %159 = phi %"class.Ice::CfgNode"** [ %161, %157 ], [ %155, %144 ]
  %160 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %158, i64 -1
  %161 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %159, i64 -1
  %162 = bitcast %"class.Ice::CfgNode"** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.Ice::CfgNode"** %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = icmp eq %"class.Ice::CfgNode"** %161, %154
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %144
  %167 = phi %"class.Ice::CfgNode"** [ %147, %144 ], [ %160, %157 ]
  %168 = ptrtoint %"class.Ice::CfgNode"** %167 to i64
  store i64 %168, i64* %120, align 8
  store i64 %152, i64* %119, align 8
  store i64 %149, i64* %129, align 8
  br label %172

169:                                              ; preds = %99
  %170 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %100, i64 1
  %171 = icmp eq %"class.Ice::CfgNode"** %170, %97
  br i1 %171, label %172, label %99

172:                                              ; preds = %169, %93, %166, %112
  %173 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.llvm::ilist_node_base"** %173 to %"class.llvm::ilist_node_impl"**
  %176 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %175, align 8
  %177 = icmp eq %"class.llvm::ilist_node_impl"* %176, %174
  br i1 %177, label %178, label %179

178:                                              ; preds = %194, %172
  ret %"class.Ice::CfgNode"* %7

179:                                              ; preds = %172, %194
  %180 = phi %"class.llvm::ilist_node_impl"* [ %197, %194 ], [ %176, %172 ]
  %181 = icmp eq %"class.llvm::ilist_node_impl"* %180, null
  %182 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %180, i64 -1, i32 0, i32 1
  %183 = bitcast %"class.llvm::ilist_node_base"** %182 to %"class.Ice::Inst"*
  %184 = select i1 %181, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %183
  %185 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %184, i64 0, i32 4
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %194

188:                                              ; preds = %179
  %189 = bitcast %"class.Ice::Inst"* %184 to i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)***
  %190 = load i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)**, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*** %189, align 8
  %191 = getelementptr inbounds i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)** %190, i64 3
  %192 = load i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)** %191, align 8
  %193 = tail call zeroext i1 %192(%"class.Ice::Inst"* %184, %"class.Ice::CfgNode"* %0, %"class.Ice::CfgNode"* %7) #12
  br label %194

194:                                              ; preds = %179, %188
  %195 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %180, i64 0, i32 0, i32 1
  %196 = bitcast %"class.llvm::ilist_node_base"** %195 to %"class.llvm::ilist_node_impl"**
  %197 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %196, align 8
  %198 = icmp eq %"class.llvm::ilist_node_impl"* %197, %174
  br i1 %198, label %178, label %179
}

; Function Attrs: optsize
declare %"class.Ice::CfgNode"* @_ZN3Ice3Cfg8makeNodeEv(%"class.Ice::Cfg"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode19advancedPhiLoweringEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.llvm::SmallVector.346", align 8
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = getelementptr inbounds %"class.llvm::simple_ilist", %"class.llvm::simple_ilist"* %3, i64 0, i32 0, i32 0
  %5 = bitcast %"class.llvm::simple_ilist"* %3 to %"class.llvm::ilist_node_impl"**
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %4, %6
  br i1 %7, label %352, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.llvm::SmallVector.346"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1560, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 1536, i1 false)
  %11 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 1536
  store i8* %15, i8** %14, align 8
  %16 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.llvm::ilist_node_base"** %16 to %"class.llvm::ilist_node_impl"**
  %19 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %18, align 8
  %20 = icmp eq %"class.llvm::ilist_node_impl"* %19, %17
  br i1 %20, label %351, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast i8** %13 to %"class.Ice::(anonymous namespace)::PhiDesc"**
  %24 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  br label %29

25:                                               ; preds = %92
  %26 = load i8*, i8** %12, align 8
  %27 = load i8*, i8** %13, align 8
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %347, label %97

29:                                               ; preds = %21, %92
  %30 = phi %"class.llvm::ilist_node_impl"* [ %19, %21 ], [ %95, %92 ]
  %31 = icmp eq %"class.llvm::ilist_node_impl"* %30, null
  %32 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %30, i64 -1, i32 0, i32 1
  %33 = bitcast %"class.llvm::ilist_node_base"** %32 to %"class.Ice::Inst"*
  %34 = select i1 %31, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %33
  %35 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 12
  %38 = bitcast %"class.Ice::Inst"* %34 to %"class.Ice::InstPhi"*
  %39 = select i1 %37, %"class.Ice::InstPhi"* %38, %"class.Ice::InstPhi"* null
  %40 = ptrtoint %"class.Ice::InstPhi"* %39 to i64
  %41 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %39, i64 0, i32 0, i32 0, i32 4
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %92

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.Ice::InstPhi", %"class.Ice::InstPhi"* %39, i64 0, i32 0, i32 0, i32 10
  %46 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %45, align 8
  %47 = ptrtoint %"class.Ice::Variable"* %46 to i64
  %48 = load i8*, i8** %13, align 8
  %49 = load i8*, i8** %14, align 8
  %50 = icmp ult i8* %48, %49
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %44
  %52 = bitcast i8* %48 to %"class.Ice::(anonymous namespace)::PhiDesc"*
  br label %55

53:                                               ; preds = %44
  call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* nonnull %22, i8* %11, i64 0, i64 48) #12
  %54 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %23, align 8
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %52, %51 ], [ %54, %53 ]
  %57 = bitcast %"class.Ice::(anonymous namespace)::PhiDesc"* %56 to i64*
  store i64 %40, i64* %57, align 8
  %58 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %56, i64 0, i32 1
  %59 = bitcast %"class.Ice::Variable"** %58 to i64*
  store i64 %47, i64* %59, align 8
  %60 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %56, i64 0, i32 2
  store %"class.Ice::Operand"* null, %"class.Ice::Operand"** %60, align 8
  %61 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %56, i64 0, i32 3
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %56, i64 0, i32 5
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %56, i64 0, i32 6
  store i32 0, i32* %63, align 8
  %64 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %23, align 8
  %65 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %64, i64 1
  store %"class.Ice::(anonymous namespace)::PhiDesc"* %65, %"class.Ice::(anonymous namespace)::PhiDesc"** %23, align 8
  %66 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %24, align 8
  %67 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %66, i64 0, i32 22, i32 0, i32 0, i32 0
  %68 = load %"class.Ice::Liveness"*, %"class.Ice::Liveness"** %67, align 8
  %69 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %46, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %68, i64 0, i32 5, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %68, %"class.Ice::CfgNode"* %0) #13
  %77 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp ult i32 %75, %78
  br i1 %79, label %80, label %91

80:                                               ; preds = %55
  %81 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %76, i64 0, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = lshr i32 %75, 6
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i64, i64* %82, i64 %84
  %86 = and i32 %75, 63
  %87 = zext i32 %86 to i64
  %88 = shl i64 1, %87
  %89 = load i64, i64* %85, align 8
  %90 = or i64 %89, %88
  store i64 %90, i64* %85, align 8
  br label %91

91:                                               ; preds = %80, %55
  store i8 1, i8* %41, align 8
  br label %92

92:                                               ; preds = %29, %91
  %93 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %30, i64 0, i32 0, i32 1
  %94 = bitcast %"class.llvm::ilist_node_base"** %93 to %"class.llvm::ilist_node_impl"**
  %95 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %94, align 8
  %96 = icmp eq %"class.llvm::ilist_node_impl"* %95, %17
  br i1 %96, label %25, label %29

97:                                               ; preds = %25
  %98 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %99 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %100 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %99, i64 0, i32 23, i32 0, i32 0, i32 0
  %101 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %100, align 8
  %102 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 0
  %103 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %102, align 8
  %104 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %105 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %104, align 8
  %106 = icmp eq %"class.Ice::CfgNode"** %103, %105
  br i1 %106, label %347, label %107

107:                                              ; preds = %97
  %108 = bitcast i8** %13 to i64*
  %109 = bitcast %"class.llvm::SmallVector.346"* %2 to i64*
  %110 = bitcast %"class.llvm::SmallVector.346"* %2 to %"class.Ice::(anonymous namespace)::PhiDesc"**
  %111 = bitcast i8** %13 to %"class.Ice::(anonymous namespace)::PhiDesc"**
  br label %112

112:                                              ; preds = %107, %333
  %113 = phi %"class.Ice::CfgNode"** [ %103, %107 ], [ %343, %333 ]
  %114 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %113, align 8
  %115 = call %"class.Ice::CfgNode"* @_ZN3Ice7CfgNode17splitIncomingEdgeEPS0_j(%"class.Ice::CfgNode"* %0, %"class.Ice::CfgNode"* %114, i32 undef) #13
  %116 = load i64, i64* %108, align 8
  %117 = load i64, i64* %109, align 8
  %118 = sub i64 %116, %117
  %119 = sdiv exact i64 %118, 48
  %120 = trunc i64 %119 to i32
  %121 = inttoptr i64 %117 to %"class.Ice::(anonymous namespace)::PhiDesc"*
  %122 = inttoptr i64 %116 to %"class.Ice::(anonymous namespace)::PhiDesc"*
  %123 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %121, %122
  br i1 %123, label %193, label %128

124:                                              ; preds = %151
  %125 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %110, align 8
  %126 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %111, align 8
  %127 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %125, %126
  br i1 %127, label %158, label %162

128:                                              ; preds = %112, %151
  %129 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %153, %151 ], [ %121, %112 ]
  %130 = phi i32 [ %152, %151 ], [ %120, %112 ]
  %131 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 0, i32 1
  %132 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %131, align 8
  %133 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 0, i32 0
  %134 = load %"class.Ice::InstPhi"*, %"class.Ice::InstPhi"** %133, align 8
  %135 = call %"class.Ice::Operand"* @_ZNK3Ice7InstPhi19getOperandForTargetEPNS_7CfgNodeE(%"class.Ice::InstPhi"* %134, %"class.Ice::CfgNode"* %114) #12
  %136 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 0, i32 2
  store %"class.Ice::Operand"* %135, %"class.Ice::Operand"** %136, align 8
  %137 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 0, i32 3
  store i8 0, i8* %137, align 8
  %138 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 0, i32 5
  store i64 0, i64* %138, align 8
  %139 = call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112sameVarOrRegEPNS_14TargetLoweringEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::TargetLowering"* %101, %"class.Ice::Variable"* %132, %"class.Ice::Operand"* %135) #13
  br i1 %139, label %140, label %151

140:                                              ; preds = %128
  store i8 1, i8* %137, align 8
  %141 = add i32 %130, -1
  %142 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %132, i64 0, i32 0
  %143 = icmp eq %"class.Ice::Operand"* %142, %135
  br i1 %143, label %151, label %144

144:                                              ; preds = %140
  %145 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %146 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %145, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %146, align 8
  %148 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %147, i64 104, i64 8) #12
  %149 = bitcast i8* %148 to %"class.Ice::InstAssign"*
  call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %149, %"class.Ice::Cfg"* %145, %"class.Ice::Variable"* %132, %"class.Ice::Operand"* %135) #12
  %150 = bitcast i8* %148 to %"class.Ice::Inst"*
  call void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"* %115, %"class.Ice::Inst"* %150) #13
  br label %151

151:                                              ; preds = %140, %144, %128
  %152 = phi i32 [ %141, %144 ], [ %141, %140 ], [ %130, %128 ]
  %153 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %129, i64 1
  %154 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %153, %122
  br i1 %154, label %124, label %128

155:                                              ; preds = %190
  %156 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %110, align 8
  %157 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %111, align 8
  br label %158

158:                                              ; preds = %155, %124
  %159 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %157, %155 ], [ %126, %124 ]
  %160 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %156, %155 ], [ %125, %124 ]
  %161 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %160, %159
  br i1 %161, label %193, label %198

162:                                              ; preds = %124, %190
  %163 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %191, %190 ], [ %125, %124 ]
  %164 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %163, i64 0, i32 3
  %165 = load i8, i8* %164, align 8, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %190

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %163, i64 0, i32 1
  %169 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %168, align 8
  %170 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %110, align 8
  %171 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %111, align 8
  %172 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %170, %171
  br i1 %172, label %190, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %163, i64 0, i32 5
  br label %175

175:                                              ; preds = %173, %187
  %176 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %170, %173 ], [ %188, %187 ]
  %177 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %176, i64 0, i32 3
  %178 = load i8, i8* %177, align 8, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %187

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %176, i64 0, i32 2
  %182 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %181, align 8
  %183 = call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112sameVarOrRegEPNS_14TargetLoweringEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::TargetLowering"* %101, %"class.Ice::Variable"* %169, %"class.Ice::Operand"* %182) #13
  br i1 %183, label %184, label %187

184:                                              ; preds = %180
  %185 = load i64, i64* %174, align 8
  %186 = add i64 %185, 1
  store i64 %186, i64* %174, align 8
  br label %187

187:                                              ; preds = %180, %184, %175
  %188 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %176, i64 1
  %189 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %188, %171
  br i1 %189, label %190, label %175

190:                                              ; preds = %187, %167, %162
  %191 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %163, i64 1
  %192 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %191, %126
  br i1 %192, label %155, label %162

193:                                              ; preds = %236, %112, %158
  %194 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %160, %158 ], [ %121, %112 ], [ %160, %236 ]
  %195 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %159, %158 ], [ %121, %112 ], [ %159, %236 ]
  %196 = phi i32 [ %152, %158 ], [ %120, %112 ], [ %152, %236 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %333, label %239

198:                                              ; preds = %158, %236
  %199 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %237, %236 ], [ %160, %158 ]
  %200 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 0, i32 3
  %201 = load i8, i8* %200, align 8, !range !2
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %203, label %236

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 0, i32 5
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  %207 = select i1 %206, i32 8, i32 0
  %208 = icmp eq i64 %205, 1
  %209 = zext i1 %208 to i32
  %210 = or i32 %207, %209
  %211 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 0, i32 2
  %212 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %211, align 8
  %213 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %212, i64 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = add i32 %214, -18
  %216 = icmp ugt i32 %215, 14
  %217 = icmp eq %"class.Ice::Operand"* %212, null
  %218 = or i1 %217, %216
  br i1 %218, label %226, label %219

219:                                              ; preds = %203
  %220 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %212, i64 1, i32 4
  %221 = bitcast %"class.Ice::Variable"*** %220 to i32*
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, -1
  %224 = or i32 %210, 4
  %225 = select i1 %223, i32 %210, i32 %224
  br label %226

226:                                              ; preds = %219, %203
  %227 = phi i32 [ %210, %203 ], [ %225, %219 ]
  %228 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 0, i32 1
  %229 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %228, align 8
  %230 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %229, i64 0, i32 9, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = icmp eq i32 %231, -1
  %233 = add nsw i32 %227, 2
  %234 = select i1 %232, i32 %233, i32 %227
  %235 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 0, i32 6
  store i32 %234, i32* %235, align 8
  br label %236

236:                                              ; preds = %198, %226
  %237 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %199, i64 1
  %238 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %237, %159
  br i1 %238, label %193, label %198

239:                                              ; preds = %193, %330
  %240 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %332, %330 ], [ %195, %193 ]
  %241 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %331, %330 ], [ %194, %193 ]
  %242 = phi i32 [ %328, %330 ], [ %196, %193 ]
  %243 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %241, %240
  br i1 %243, label %244, label %253

244:                                              ; preds = %266, %239
  %245 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ null, %239 ], [ %268, %266 ]
  %246 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %245, i64 0, i32 1
  %247 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %246, align 8
  %248 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %245, i64 0, i32 2
  %249 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %248, align 8
  %250 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %245, i64 0, i32 5
  %251 = load i64, i64* %250, align 8
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %311, label %271

253:                                              ; preds = %239, %266
  %254 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %269, %266 ], [ %241, %239 ]
  %255 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %268, %266 ], [ null, %239 ]
  %256 = phi i32 [ %267, %266 ], [ -1, %239 ]
  %257 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %254, i64 0, i32 3
  %258 = load i8, i8* %257, align 8, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %266

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %254, i64 0, i32 6
  %262 = load i32, i32* %261, align 8
  %263 = icmp sgt i32 %262, %256
  %264 = select i1 %263, i32 %262, i32 %256
  %265 = select i1 %263, %"class.Ice::(anonymous namespace)::PhiDesc"* %254, %"class.Ice::(anonymous namespace)::PhiDesc"* %255
  br label %266

266:                                              ; preds = %253, %260
  %267 = phi i32 [ %264, %260 ], [ %256, %253 ]
  %268 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %265, %260 ], [ %255, %253 ]
  %269 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %254, i64 1
  %270 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %269, %240
  br i1 %270, label %244, label %253

271:                                              ; preds = %244, %308
  %272 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %310, %308 ], [ %240, %244 ]
  %273 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %309, %308 ], [ %241, %244 ]
  %274 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %273, %272
  br i1 %274, label %305, label %275

275:                                              ; preds = %271, %302
  %276 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %303, %302 ], [ %273, %271 ]
  %277 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %276, i64 0, i32 3
  %278 = load i8, i8* %277, align 8, !range !2
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %280, label %302

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %276, i64 0, i32 2
  %282 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %281, align 8
  %283 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %276, i64 0, i32 5
  %284 = load i64, i64* %283, align 8
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %280
  %287 = call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112sameVarOrRegEPNS_14TargetLoweringEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::TargetLowering"* %101, %"class.Ice::Variable"* %247, %"class.Ice::Operand"* %282) #13
  br i1 %287, label %288, label %302

288:                                              ; preds = %286
  %289 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %276, i64 0, i32 2
  %290 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %291 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %282, i64 0, i32 1
  %292 = load i32, i32* %291, align 8
  %293 = call %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"* %290, i32 %292) #12
  %294 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %295 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %294, i64 0, i32 0, i32 0, i32 0, i32 0
  %296 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %295, align 8
  %297 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %296, i64 104, i64 8) #12
  %298 = bitcast i8* %297 to %"class.Ice::InstAssign"*
  call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %298, %"class.Ice::Cfg"* %294, %"class.Ice::Variable"* %293, %"class.Ice::Operand"* %282) #12
  %299 = bitcast i8* %297 to %"class.Ice::Inst"*
  call void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"* %115, %"class.Ice::Inst"* %299) #13
  %300 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %293, i64 0, i32 0
  store %"class.Ice::Operand"* %300, %"class.Ice::Operand"** %289, align 8
  %301 = bitcast %"class.Ice::Operand"* %282 to %"class.Ice::Variable"*
  call fastcc void @_ZN3Ice12_GLOBAL__N_111updatePredsERN4llvm11SmallVectorINS0_7PhiDescELj32EEEPNS_14TargetLoweringEPNS_8VariableE(%"class.llvm::SmallVector.346"* nonnull dereferenceable(1560) %2, %"class.Ice::TargetLowering"* %101, %"class.Ice::Variable"* %301) #13
  br label %305

302:                                              ; preds = %286, %280, %275
  %303 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %276, i64 1
  %304 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %303, %272
  br i1 %304, label %305, label %275

305:                                              ; preds = %302, %271, %288
  %306 = load i64, i64* %250, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %305
  %309 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %110, align 8
  %310 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %111, align 8
  br label %271

311:                                              ; preds = %305, %244
  %312 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %313 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %312, i64 0, i32 0, i32 0, i32 0, i32 0
  %314 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %313, align 8
  %315 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %314, i64 104, i64 8) #12
  %316 = bitcast i8* %315 to %"class.Ice::InstAssign"*
  call void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"* %316, %"class.Ice::Cfg"* %312, %"class.Ice::Variable"* %247, %"class.Ice::Operand"* %249) #12
  %317 = bitcast i8* %315 to %"class.Ice::Inst"*
  call void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"* %115, %"class.Ice::Inst"* %317) #13
  %318 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %249, i64 0, i32 2
  %319 = load i32, i32* %318, align 4
  %320 = add i32 %319, -18
  %321 = icmp ugt i32 %320, 14
  %322 = icmp eq %"class.Ice::Operand"* %249, null
  %323 = or i1 %322, %321
  br i1 %323, label %326, label %324

324:                                              ; preds = %311
  %325 = bitcast %"class.Ice::Operand"* %249 to %"class.Ice::Variable"*
  call fastcc void @_ZN3Ice12_GLOBAL__N_111updatePredsERN4llvm11SmallVectorINS0_7PhiDescELj32EEEPNS_14TargetLoweringEPNS_8VariableE(%"class.llvm::SmallVector.346"* nonnull dereferenceable(1560) %2, %"class.Ice::TargetLowering"* %101, %"class.Ice::Variable"* nonnull %325) #13
  br label %326

326:                                              ; preds = %311, %324
  %327 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %245, i64 0, i32 3
  store i8 1, i8* %327, align 8
  %328 = add i32 %242, -1
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %326
  %331 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %110, align 8
  %332 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %111, align 8
  br label %239

333:                                              ; preds = %326, %193
  %334 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %335 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %334, i64 0, i32 0, i32 0, i32 0, i32 0
  %336 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %335, align 8
  %337 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %336, i64 120, i64 8) #12
  %338 = bitcast i8* %337 to %"class.Ice::InstBr"*
  call void @_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7CfgNodeE(%"class.Ice::InstBr"* %338, %"class.Ice::Cfg"* %334, %"class.Ice::CfgNode"* %0) #12
  %339 = bitcast i8* %337 to %"class.Ice::Inst"*
  call void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"* %115, %"class.Ice::Inst"* %339) #13
  call void @_ZN3Ice7CfgNode7genCodeEv(%"class.Ice::CfgNode"* %115) #13
  %340 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %98, align 8
  %341 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %340, i64 0, i32 24, i32 0, i32 0, i32 0
  %342 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %341, align 8
  call void @_ZN3Ice17VariablesMetadata7addNodeEPNS_7CfgNodeE(%"class.Ice::VariablesMetadata"* %342, %"class.Ice::CfgNode"* %115) #12
  %343 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %113, i64 1
  %344 = icmp eq %"class.Ice::CfgNode"** %343, %105
  br i1 %344, label %345, label %112

345:                                              ; preds = %333
  %346 = load i8*, i8** %12, align 8
  br label %347

347:                                              ; preds = %345, %97, %25
  %348 = phi i8* [ %346, %345 ], [ %26, %97 ], [ %27, %25 ]
  %349 = icmp eq i8* %348, %11
  br i1 %349, label %351, label %350

350:                                              ; preds = %347
  call void @free(i8* %348) #12
  br label %351

351:                                              ; preds = %8, %347, %350
  call void @llvm.lifetime.end.p0i8(i64 1560, i8* nonnull %9) #10
  br label %352

352:                                              ; preds = %1, %351
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.216"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 152
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %14, label %21, label %16

16:                                               ; preds = %2
  %17 = add i32 %4, 1
  %18 = zext i32 %17 to i64
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.216"* %6, i64 %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %19, align 8
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %"class.Ice::Liveness::LivenessNode"* [ %15, %2 ], [ %20, %16 ]
  %23 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %22, i64 %5, i32 3
  ret %"class.Ice::BitVectorTmpl"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112sameVarOrRegEPNS_14TargetLoweringEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::TargetLowering"*, %"class.Ice::Variable"* readonly, %"class.Ice::Operand"* readonly) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 0
  %5 = icmp eq %"class.Ice::Operand"* %4, %2
  br i1 %5, label %39, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -18
  %10 = icmp ugt i32 %9, 14
  %11 = icmp eq %"class.Ice::Operand"* %2, null
  %12 = or i1 %11, %10
  br i1 %12, label %39, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %1, i64 0, i32 9, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %39, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %2, i64 1, i32 4
  %19 = bitcast %"class.Ice::Variable"*** %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = icmp eq i32 %15, %20
  br i1 %23, label %39, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.Ice::TargetLowering"* %0 to %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)***
  %26 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)**, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*** %25, align 8
  %27 = getelementptr inbounds %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)** %26, i64 27
  %28 = load %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)*, %"class.Ice::SmallBitVector"* (%"class.Ice::TargetLowering"*, i32)** %27, align 8
  %29 = tail call dereferenceable(24) %"class.Ice::SmallBitVector"* %28(%"class.Ice::TargetLowering"* %0, i32 %15) #12
  %30 = lshr i32 %20, 6
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.Ice::SmallBitVector", %"class.Ice::SmallBitVector"* %29, i64 0, i32 0, i64 %31
  %33 = load i64, i64* %32, align 8
  %34 = and i32 %20, 63
  %35 = zext i32 %34 to i64
  %36 = shl i64 1, %35
  %37 = and i64 %33, %36
  %38 = icmp ne i64 %37, 0
  br label %39

39:                                               ; preds = %17, %13, %24, %22, %6, %3
  %40 = phi i1 [ true, %3 ], [ false, %6 ], [ false, %13 ], [ false, %17 ], [ %38, %24 ], [ true, %22 ]
  ret i1 %40
}

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZN3Ice3Cfg12makeVariableINS_8VariableEEEPT_NS_4TypeE(%"class.Ice::Cfg"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN3Ice12_GLOBAL__N_111updatePredsERN4llvm11SmallVectorINS0_7PhiDescELj32EEEPNS_14TargetLoweringEPNS_8VariableE(%"class.llvm::SmallVector.346"* nocapture readonly dereferenceable(1560), %"class.Ice::TargetLowering"*, %"class.Ice::Variable"*) unnamed_addr #0 {
  %4 = bitcast %"class.llvm::SmallVector.346"* %0 to %"class.Ice::(anonymous namespace)::PhiDesc"**
  %5 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %4, align 8
  %6 = getelementptr inbounds %"class.llvm::SmallVector.346", %"class.llvm::SmallVector.346"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to %"class.Ice::(anonymous namespace)::PhiDesc"**
  %8 = load %"class.Ice::(anonymous namespace)::PhiDesc"*, %"class.Ice::(anonymous namespace)::PhiDesc"** %7, align 8
  %9 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %5, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %33, %3
  ret void

11:                                               ; preds = %3, %33
  %12 = phi %"class.Ice::(anonymous namespace)::PhiDesc"* [ %34, %33 ], [ %5, %3 ]
  %13 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 0, i32 1
  %18 = bitcast %"class.Ice::Variable"** %17 to %"class.Ice::Operand"**
  %19 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %18, align 8
  %20 = tail call fastcc zeroext i1 @_ZN3Ice12_GLOBAL__N_112sameVarOrRegEPNS_14TargetLoweringEPKNS_8VariableEPKNS_7OperandE(%"class.Ice::TargetLowering"* %1, %"class.Ice::Variable"* %2, %"class.Ice::Operand"* %19) #13
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  store i64 %24, i64* %22, align 8
  switch i64 %23, label %33 [
    i64 2, label %25
    i64 1, label %29
  ]

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 8
  br label %33

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, 7
  store i32 %32, i32* %30, align 8
  br label %33

33:                                               ; preds = %21, %11, %25, %29, %16
  %34 = getelementptr inbounds %"class.Ice::(anonymous namespace)::PhiDesc", %"class.Ice::(anonymous namespace)::PhiDesc"* %12, i64 1
  %35 = icmp eq %"class.Ice::(anonymous namespace)::PhiDesc"* %34, %8
  br i1 %35, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode7genCodeEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 23, i32 0, i32 0, i32 0
  %5 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12
  tail call void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"* %6, %"class.Ice::CfgNode"* %0) #12
  %7 = bitcast %"class.Ice::TargetLowering"* %5 to void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)***
  %8 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)**, void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)** %8, i64 38
  %10 = load void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)*, void (%"class.Ice::TargetLowering"*, %"class.Ice::CfgNode"*)** %9, align 8
  tail call void %10(%"class.Ice::TargetLowering"* %5, %"class.Ice::CfgNode"* %0) #12
  %11 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12, i32 2, i32 0
  %12 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %11, align 8
  %13 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12, i32 5, i32 0
  %14 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %13, align 8
  %15 = icmp eq %"class.llvm::ilist_node_impl"* %12, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 5
  br label %18

18:                                               ; preds = %16, %28
  %19 = phi %"class.llvm::ilist_node_impl"* [ %12, %16 ], [ %29, %28 ]
  %20 = icmp eq %"class.llvm::ilist_node_impl"* %19, null
  %21 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %19, i64 -1, i32 0, i32 1
  %22 = bitcast %"class.llvm::ilist_node_base"** %21 to %"class.Ice::Inst"*
  %23 = select i1 %20, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %22
  %24 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 13
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  store i8 1, i8* %17, align 4
  br label %28

28:                                               ; preds = %27, %18
  tail call void @_ZN3Ice14TargetLowering5lowerEv(%"class.Ice::TargetLowering"* %5) #12
  %29 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %11, align 8
  %30 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %13, align 8
  %31 = icmp eq %"class.llvm::ilist_node_impl"* %29, %30
  br i1 %31, label %32, label %18

32:                                               ; preds = %28, %1
  tail call void @_ZN3Ice15LoweringContext17availabilityResetEv(%"class.Ice::LoweringContext"* %6) #12
  %33 = bitcast %"class.Ice::TargetLowering"* %5 to void (%"class.Ice::TargetLowering"*)***
  %34 = load void (%"class.Ice::TargetLowering"*)**, void (%"class.Ice::TargetLowering"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %34, i64 5
  %36 = load void (%"class.Ice::TargetLowering"*)*, void (%"class.Ice::TargetLowering"*)** %35, align 8
  tail call void %36(%"class.Ice::TargetLowering"* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice17VariablesMetadata7addNodeEPNS_7CfgNodeE(%"class.Ice::VariablesMetadata"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode12doAddressOptEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 23, i32 0, i32 0, i32 0
  %5 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %4, align 8
  %6 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12
  tail call void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"* %6, %"class.Ice::CfgNode"* %0) #12
  %7 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12, i32 2, i32 0
  %8 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %7, align 8
  %9 = getelementptr inbounds %"class.Ice::TargetLowering", %"class.Ice::TargetLowering"* %5, i64 0, i32 12, i32 5, i32 0
  %10 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %9, align 8
  %11 = icmp eq %"class.llvm::ilist_node_impl"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %1, %12
  tail call void @_ZN3Ice14TargetLowering12doAddressOptEv(%"class.Ice::TargetLowering"* %5) #12
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %7, align 8
  %14 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %9, align 8
  %15 = icmp eq %"class.llvm::ilist_node_impl"* %13, %14
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: optsize
declare void @_ZN3Ice15LoweringContext4initEPNS_7CfgNodeE(%"class.Ice::LoweringContext"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice14TargetLowering12doAddressOptEv(%"class.Ice::TargetLowering"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice14TargetLowering5lowerEv(%"class.Ice::TargetLowering"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice15LoweringContext17availabilityResetEv(%"class.Ice::LoweringContext"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode19livenessLightweightEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.Ice::BitVectorTmpl", align 8
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 17
  %6 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 17, i32 0, i32 1
  %7 = bitcast %"class.Ice::Variable"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.207"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = bitcast %"class.Ice::BitVectorTmpl"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 2
  %18 = bitcast %"class.Ice::BitVectorTmpl"* %2 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  store i32 %13, i32* %16, align 8
  %19 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %2, i64 0, i32 3
  %20 = bitcast %"struct.Ice::sz_allocator.223"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = add i32 %13, 63
  %22 = lshr i32 %21, 6
  store i32 %22, i32* %17, align 4
  %23 = zext i32 %22 to i64
  %24 = call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.223"* %19, i64 %23) #12
  store i64* %24, i64** %15, align 8
  %25 = load i32, i32* %17, align 4
  %26 = bitcast i64* %24 to i8*
  %27 = zext i32 %25 to i64
  %28 = shl nuw nsw i64 %27, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 %28, i1 false) #10
  %29 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %30 = bitcast %"class.llvm::iplist"* %29 to i64*
  %31 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %30, align 8
  %33 = inttoptr i64 %32 to %"class.llvm::ilist_node_impl"*
  %34 = icmp eq %"class.llvm::ilist_node_impl"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %53, %1
  %36 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.llvm::ilist_node_base"** %36 to %"class.llvm::ilist_node_impl"**
  %39 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %38, align 8
  %40 = icmp eq %"class.llvm::ilist_node_impl"* %39, %37
  br i1 %40, label %58, label %59

41:                                               ; preds = %1, %53
  %42 = phi %"class.llvm::ilist_node_impl"* [ %56, %53 ], [ %33, %1 ]
  %43 = phi i64 [ %55, %53 ], [ %32, %1 ]
  %44 = icmp eq i64 %43, 0
  %45 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %42, i64 -1, i32 0, i32 1
  %46 = bitcast %"class.llvm::ilist_node_base"** %45 to %"class.Ice::Inst"*
  %47 = select i1 %44, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %46
  %48 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %41
  %52 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  call void @_ZN3Ice4Inst19livenessLightweightEPNS_3CfgERNS_13BitVectorTmplINS_17LivenessAllocatorEEE(%"class.Ice::Inst"* %47, %"class.Ice::Cfg"* %52, %"class.Ice::BitVectorTmpl"* nonnull dereferenceable(24) %2) #12
  br label %53

53:                                               ; preds = %41, %51
  %54 = inttoptr i64 %43 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = inttoptr i64 %55 to %"class.llvm::ilist_node_impl"*
  %57 = icmp eq %"class.llvm::ilist_node_impl"* %31, %56
  br i1 %57, label %35, label %41

58:                                               ; preds = %70, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  ret void

59:                                               ; preds = %35, %70
  %60 = phi %"class.llvm::ilist_node_impl"* [ %73, %70 ], [ %39, %35 ]
  %61 = icmp eq %"class.llvm::ilist_node_impl"* %60, null
  %62 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %60, i64 -1, i32 0, i32 1
  %63 = bitcast %"class.llvm::ilist_node_base"** %62 to %"class.Ice::Inst"*
  %64 = select i1 %61, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %63
  %65 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %64, i64 0, i32 4
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %59
  %69 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  call void @_ZN3Ice4Inst19livenessLightweightEPNS_3CfgERNS_13BitVectorTmplINS_17LivenessAllocatorEEE(%"class.Ice::Inst"* %64, %"class.Ice::Cfg"* %69, %"class.Ice::BitVectorTmpl"* nonnull dereferenceable(24) %2) #12
  br label %70

70:                                               ; preds = %59, %68
  %71 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %60, i64 0, i32 0, i32 1
  %72 = bitcast %"class.llvm::ilist_node_base"** %71 to %"class.llvm::ilist_node_impl"**
  %73 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %72, align 8
  %74 = icmp eq %"class.llvm::ilist_node_impl"* %73, %37
  br i1 %74, label %58, label %59
}

; Function Attrs: optsize
declare void @_ZN3Ice4Inst19livenessLightweightEPNS_3CfgERNS_13BitVectorTmplINS_17LivenessAllocatorEEE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice7CfgNode8livenessEPNS_8LivenessE(%"class.Ice::CfgNode"*, %"class.Ice::Liveness"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %8, align 8
  %10 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %9, i64 %7, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %4
  %13 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 8
  %14 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 8, i32 1
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %34

18:                                               ; preds = %2
  %19 = tail call %"class.std::__1::vector.224"* @_ZN3Ice8Liveness12getLiveBeginEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %20 = tail call %"class.std::__1::vector.224"* @_ZN3Ice8Liveness10getLiveEndEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %21 = bitcast %"class.std::__1::vector.224"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %19, i64 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::pair"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector.224"* %20 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %20, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.std::__1::pair"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 8
  %30 = load i32, i32* %29, align 8
  %31 = sext i32 %30 to i64
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.224"* %19, i64 %31) #13
  %32 = load i32, i32* %29, align 8
  %33 = sext i32 %32 to i64
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.224"* %20, i64 %33) #13
  br label %34

34:                                               ; preds = %18, %2
  %35 = phi %"class.std::__1::vector.224"* [ %20, %18 ], [ null, %2 ]
  %36 = phi %"class.std::__1::vector.224"* [ %19, %18 ], [ null, %2 ]
  %37 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 0
  %38 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %37, align 8
  %39 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %40 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %39, align 8
  %41 = icmp eq %"class.Ice::CfgNode"** %38, %40
  br i1 %41, label %42, label %51

42:                                               ; preds = %61, %34
  %43 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness10getLiveOutEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %44 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaSERKS2_(%"class.Ice::BitVectorTmpl"* %43, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %13) #13
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %13, i32 %12, i1 zeroext false) #13
  %45 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %46 = bitcast %"class.llvm::iplist"* %45 to i64*
  %47 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %46, align 8
  %49 = inttoptr i64 %48 to %"class.llvm::ilist_node_impl"*
  %50 = icmp eq %"class.llvm::ilist_node_impl"* %47, %49
  br i1 %50, label %80, label %86

51:                                               ; preds = %34, %61
  %52 = phi %"class.Ice::CfgNode"** [ %62, %61 ], [ %38, %34 ]
  %53 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %52, align 8
  %54 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %53) #13
  %55 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEoRERKS2_(%"class.Ice::BitVectorTmpl"* %13, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %54) #13
  %56 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %53, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %53, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.llvm::ilist_node_base"** %56 to %"class.llvm::ilist_node_impl"**
  %59 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %58, align 8
  %60 = icmp eq %"class.llvm::ilist_node_impl"* %59, %57
  br i1 %60, label %61, label %64

61:                                               ; preds = %75, %51
  %62 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %52, i64 1
  %63 = icmp eq %"class.Ice::CfgNode"** %62, %40
  br i1 %63, label %42, label %51

64:                                               ; preds = %51, %75
  %65 = phi %"class.llvm::ilist_node_impl"* [ %78, %75 ], [ %59, %51 ]
  %66 = icmp eq %"class.llvm::ilist_node_impl"* %65, null
  %67 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %65, i64 -1, i32 0, i32 1
  %68 = bitcast %"class.llvm::ilist_node_base"** %67 to %"class.Ice::Inst"*
  %69 = select i1 %66, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %68
  %70 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %69, i64 0, i32 4
  %71 = load i8, i8* %70, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = bitcast %"class.Ice::Inst"* %69 to %"class.Ice::InstPhi"*
  tail call void @_ZN3Ice7InstPhi18livenessPhiOperandERNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_7CfgNodeEPNS_8LivenessE(%"class.Ice::InstPhi"* %74, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %13, %"class.Ice::CfgNode"* %0, %"class.Ice::Liveness"* %1) #12
  br label %75

75:                                               ; preds = %64, %73
  %76 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %65, i64 0, i32 0, i32 1
  %77 = bitcast %"class.llvm::ilist_node_base"** %76 to %"class.llvm::ilist_node_impl"**
  %78 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %77, align 8
  %79 = icmp eq %"class.llvm::ilist_node_impl"* %78, %57
  br i1 %79, label %61, label %64

80:                                               ; preds = %100, %42
  %81 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.llvm::ilist_node_base"** %81 to %"class.llvm::ilist_node_impl"**
  %84 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %83, align 8
  %85 = icmp eq %"class.llvm::ilist_node_impl"* %84, %82
  br i1 %85, label %105, label %109

86:                                               ; preds = %42, %100
  %87 = phi %"class.llvm::ilist_node_impl"* [ %103, %100 ], [ %49, %42 ]
  %88 = phi i64 [ %102, %100 ], [ %48, %42 ]
  %89 = icmp eq i64 %88, 0
  %90 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %87, i64 -1, i32 0, i32 1
  %91 = bitcast %"class.llvm::ilist_node_base"** %90 to %"class.Ice::Inst"*
  %92 = select i1 %89, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %91
  %93 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %92, i64 0, i32 4
  %94 = load i8, i8* %93, align 8, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %92, i64 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = tail call zeroext i1 @_ZN3Ice4Inst8livenessEiRNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_8LivenessEPNSt3__16vectorINS7_4pairIjiEENS_12sz_allocatorISA_NS_23LivenessAllocatorTraitsEEEEESF_(%"class.Ice::Inst"* %92, i32 %98, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %13, %"class.Ice::Liveness"* %1, %"class.std::__1::vector.224"* %36, %"class.std::__1::vector.224"* %35) #12
  br label %100

100:                                              ; preds = %86, %96
  %101 = inttoptr i64 %88 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %102 to %"class.llvm::ilist_node_impl"*
  %104 = icmp eq %"class.llvm::ilist_node_impl"* %47, %103
  br i1 %104, label %80, label %86

105:                                              ; preds = %130, %80
  %106 = phi i32 [ 0, %80 ], [ %131, %130 ]
  %107 = tail call i32 @_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEE9find_nextEj(%"class.Ice::BitVectorTmpl"* %13, i32 %4) #13
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %138, label %137

109:                                              ; preds = %80, %130
  %110 = phi %"class.llvm::ilist_node_impl"* [ %135, %130 ], [ %84, %80 ]
  %111 = phi i32 [ %132, %130 ], [ 0, %80 ]
  %112 = phi i32 [ %131, %130 ], [ 0, %80 ]
  %113 = icmp eq %"class.llvm::ilist_node_impl"* %110, null
  %114 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %110, i64 -1, i32 0, i32 1
  %115 = bitcast %"class.llvm::ilist_node_base"** %114 to %"class.Ice::Inst"*
  %116 = select i1 %113, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %115
  %117 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %116, i64 0, i32 4
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %130

120:                                              ; preds = %109
  %121 = icmp eq i32 %111, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %116, i64 0, i32 3
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %122, %120
  %126 = phi i32 [ %124, %122 ], [ %111, %120 ]
  %127 = tail call zeroext i1 @_ZN3Ice4Inst8livenessEiRNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_8LivenessEPNSt3__16vectorINS7_4pairIjiEENS_12sz_allocatorISA_NS_23LivenessAllocatorTraitsEEEEESF_(%"class.Ice::Inst"* %116, i32 %126, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %13, %"class.Ice::Liveness"* %1, %"class.std::__1::vector.224"* %36, %"class.std::__1::vector.224"* %35) #12
  %128 = zext i1 %127 to i32
  %129 = add i32 %112, %128
  br label %130

130:                                              ; preds = %109, %125
  %131 = phi i32 [ %129, %125 ], [ %112, %109 ]
  %132 = phi i32 [ %126, %125 ], [ %111, %109 ]
  %133 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %110, i64 0, i32 0, i32 1
  %134 = bitcast %"class.llvm::ilist_node_base"** %133 to %"class.llvm::ilist_node_impl"**
  %135 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %134, align 8
  %136 = icmp eq %"class.llvm::ilist_node_impl"* %135, %82
  br i1 %136, label %105, label %109

137:                                              ; preds = %105
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true) #14
  unreachable

138:                                              ; preds = %105
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %13, i32 %4, i1 zeroext false) #13
  %139 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %140 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEoRERKS2_(%"class.Ice::BitVectorTmpl"* %13, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %139) #13
  %141 = load i32, i32* %5, align 8
  %142 = zext i32 %141 to i64
  %143 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %8, align 8
  %144 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %143, i64 %142, i32 1
  %145 = tail call zeroext i1 @_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEEeqERKS2_(%"class.Ice::BitVectorTmpl"* %13, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %139) #12
  %146 = xor i1 %145, true
  %147 = load i32, i32* %144, align 4
  %148 = icmp ne i32 %106, %147
  %149 = or i1 %148, %146
  br i1 %145, label %152, label %150

150:                                              ; preds = %138
  %151 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaSERKS2_(%"class.Ice::BitVectorTmpl"* %139, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %13) #13
  br label %152

152:                                              ; preds = %138, %150
  store i32 %106, i32* %144, align 4
  ret i1 %149
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::vector.224"* @_ZN3Ice8Liveness12getLiveBeginEPKNS_7CfgNodeE(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.216"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 152
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %14, label %21, label %16

16:                                               ; preds = %2
  %17 = add i32 %4, 1
  %18 = zext i32 %17 to i64
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.216"* %6, i64 %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %19, align 8
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %"class.Ice::Liveness::LivenessNode"* [ %15, %2 ], [ %20, %16 ]
  %23 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %22, i64 %5, i32 5
  ret %"class.std::__1::vector.224"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.std::__1::vector.224"* @_ZN3Ice8Liveness10getLiveEndEPKNS_7CfgNodeE(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.216"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 152
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %14, label %21, label %16

16:                                               ; preds = %2
  %17 = add i32 %4, 1
  %18 = zext i32 %17 to i64
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.216"* %6, i64 %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %19, align 8
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %"class.Ice::Liveness::LivenessNode"* [ %15, %2 ], [ %20, %16 ]
  %23 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %22, i64 %5, i32 6
  ret %"class.std::__1::vector.224"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.224"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.224"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %11, label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = ashr exact i64 %16, 3
  %18 = tail call %"struct.std::__1::pair"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.229"* %12, i64 %1) #12
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %17
  %20 = ptrtoint %"struct.std::__1::pair"* %19 to i64
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %1
  %22 = ptrtoint %"struct.std::__1::pair"* %21 to i64
  %23 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %26 = icmp eq %"struct.std::__1::pair"* %25, %24
  br i1 %26, label %38, label %27

27:                                               ; preds = %11, %27
  %28 = phi %"struct.std::__1::pair"* [ %30, %27 ], [ %19, %11 ]
  %29 = phi %"struct.std::__1::pair"* [ %31, %27 ], [ %25, %11 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 -1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 -1
  %32 = bitcast %"struct.std::__1::pair"* %31 to i64*
  %33 = bitcast %"struct.std::__1::pair"* %30 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 4
  %35 = icmp eq %"struct.std::__1::pair"* %31, %24
  br i1 %35, label %36, label %27

36:                                               ; preds = %27
  %37 = ptrtoint %"struct.std::__1::pair"* %30 to i64
  br label %38

38:                                               ; preds = %11, %36
  %39 = phi i64 [ %37, %36 ], [ %20, %11 ]
  store i64 %39, i64* %6, align 8
  store i64 %20, i64* %14, align 8
  store i64 %22, i64* %4, align 8
  ret void

40:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEoRERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"* %0, i32 %6, i1 zeroext false) #13
  %9 = load i32, i32* %5, align 8
  br label %10

10:                                               ; preds = %8, %2
  %11 = phi i32 [ %9, %8 ], [ %6, %2 ]
  %12 = add i32 %11, 63
  %13 = lshr i32 %12, 6
  %14 = zext i32 %13 to i64
  %15 = icmp eq i32 %13, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  br label %20

19:                                               ; preds = %20, %10
  ret %"class.Ice::BitVectorTmpl"* %0

20:                                               ; preds = %16, %20
  %21 = phi i64 [ 0, %16 ], [ %29, %20 ]
  %22 = load i64*, i64** %17, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 %21
  %24 = load i64, i64* %23, align 8
  %25 = load i64*, i64** %18, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 %21
  %27 = load i64, i64* %26, align 8
  %28 = or i64 %27, %24
  store i64 %28, i64* %26, align 8
  %29 = add nuw nsw i64 %21, 1
  %30 = icmp eq i64 %29, %14
  br i1 %30, label %19, label %20
}

; Function Attrs: optsize
declare void @_ZN3Ice7InstPhi18livenessPhiOperandERNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_7CfgNodeEPNS_8LivenessE(%"class.Ice::InstPhi"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24), %"class.Ice::CfgNode"*, %"class.Ice::Liveness"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness10getLiveOutEPKNS_7CfgNodeE(%"class.Ice::Liveness"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.216"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 152
  %14 = icmp ugt i64 %13, %5
  %15 = inttoptr i64 %11 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %14, label %21, label %16

16:                                               ; preds = %2
  %17 = add i32 %4, 1
  %18 = zext i32 %17 to i64
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.216"* %6, i64 %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %6, i64 0, i32 0, i32 0
  %20 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %19, align 8
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %"class.Ice::Liveness::LivenessNode"* [ %15, %2 ], [ %20, %16 ]
  %23 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %22, i64 %5, i32 4
  ret %"class.Ice::BitVectorTmpl"* %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaSERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.Ice::BitVectorTmpl"* %0, %1
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 8
  %8 = add i32 %6, 63
  %9 = lshr i32 %8, 6
  %10 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = shl i32 %11, 6
  %13 = icmp ugt i32 %6, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %4
  %15 = icmp eq i32 %6, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.Ice::BitVectorTmpl"* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.Ice::BitVectorTmpl"* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = shl nuw nsw i32 %9, 3
  %22 = zext i32 %21 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %20, i64 %22, i1 false)
  br label %23

23:                                               ; preds = %14, %16
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext false) #12
  br label %35

24:                                               ; preds = %4
  store i32 %9, i32* %10, align 4
  %25 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 3
  %26 = zext i32 %9 to i64
  %27 = tail call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.223"* %25, i64 %26) #13
  %28 = bitcast i64* %27 to i8*
  %29 = bitcast %"class.Ice::BitVectorTmpl"* %1 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = load i32, i32* %10, align 4
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %30, i64 %33, i1 false)
  %34 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  store i64* %27, i64** %34, align 8
  br label %35

35:                                               ; preds = %23, %24, %2
  ret %"class.Ice::BitVectorTmpl"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE6resizeEjb(%"class.Ice::BitVectorTmpl"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %5, 6
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj(%"class.Ice::BitVectorTmpl"* %0, i32 %1) #13
  %9 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = load i32, i32* %4, align 4
  %14 = sub i32 %13, %5
  %15 = bitcast i64* %12 to i8*
  %16 = sext i1 %2 to i8
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 %16, i64 %18, i1 false) #10
  br label %19

19:                                               ; preds = %8, %3
  %20 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext %2) #13
  %24 = load i32, i32* %20, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i32 [ %24, %23 ], [ %21, %19 ]
  store i32 %1, i32* %20, align 8
  %27 = icmp ugt i32 %26, %1
  %28 = or i1 %27, %2
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext false) #12
  br label %30

30:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN3Ice4Inst8livenessEiRNS_13BitVectorTmplINS_17LivenessAllocatorEEEPNS_8LivenessEPNSt3__16vectorINS7_4pairIjiEENS_12sz_allocatorISA_NS_23LivenessAllocatorTraitsEEEEESF_(%"class.Ice::Inst"*, i32, %"class.Ice::BitVectorTmpl"* dereferenceable(24), %"class.Ice::Liveness"*, %"class.std::__1::vector.224"*, %"class.std::__1::vector.224"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEE9find_nextEj(%"class.Ice::BitVectorTmpl"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %3, %5
  br i1 %6, label %7, label %44

7:                                                ; preds = %2
  %8 = lshr i32 %3, 6
  %9 = and i32 %3, 63
  %10 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = zext i32 %8 to i64
  %13 = getelementptr inbounds i64, i64* %11, i64 %12
  %14 = load i64, i64* %13, align 8
  %15 = zext i32 %9 to i64
  %16 = shl i64 -1, %15
  %17 = and i64 %14, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %7
  %20 = add i32 %5, 63
  %21 = lshr i32 %20, 6
  %22 = lshr i32 %3, 6
  %23 = zext i32 %22 to i64
  %24 = zext i32 %21 to i64
  br label %30

25:                                               ; preds = %7
  %26 = and i32 %3, -64
  %27 = tail call i64 @llvm.cttz.i64(i64 %17, i1 true) #10, !range !4
  %28 = trunc i64 %27 to i32
  %29 = or i32 %26, %28
  br label %44

30:                                               ; preds = %19, %34
  %31 = phi i64 [ %23, %19 ], [ %32, %34 ]
  %32 = add nuw nsw i64 %31, 1
  %33 = icmp ult i64 %32, %24
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = getelementptr inbounds i64, i64* %11, i64 %32
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %30, label %38

38:                                               ; preds = %34
  %39 = trunc i64 %32 to i32
  %40 = shl i32 %39, 6
  %41 = tail call i64 @llvm.cttz.i64(i64 %36, i1 true) #10, !range !4
  %42 = trunc i64 %41 to i32
  %43 = or i32 %40, %42
  br label %44

44:                                               ; preds = %30, %2, %25, %38
  %45 = phi i32 [ %43, %38 ], [ -1, %2 ], [ %29, %25 ], [ -1, %30 ]
  ret i32 %45
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i1 @_ZNK3Ice7CfgNode25livenessValidateIntervalsEPNS_8LivenessE(%"class.Ice::CfgNode"* nocapture readnone, %"class.Ice::Liveness"* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode20livenessAddIntervalsEPNS_8LivenessEii(%"class.Ice::CfgNode"*, %"class.Ice::Liveness"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.std::__1::__less.395", align 1
  %6 = alloca %"struct.std::__1::__less.395", align 1
  %7 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %12, align 8
  %14 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %13, i64 %11, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, %8
  %17 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness9getLiveInEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %18 = tail call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice8Liveness10getLiveOutEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %19 = tail call %"class.std::__1::vector.224"* @_ZN3Ice8Liveness12getLiveBeginEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %20 = tail call %"class.std::__1::vector.224"* @_ZN3Ice8Liveness10getLiveEndEPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, %"class.Ice::CfgNode"* %0) #13
  %21 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %19, i64 0, i32 0, i32 0
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %19, i64 0, i32 0, i32 1
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__less.395", %"struct.std::__1::__less.395"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #10
  call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %22, %"struct.std::__1::pair"* %24, %"struct.std::__1::__less.395"* nonnull dereferenceable(1) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %20, i64 0, i32 0, i32 0
  %27 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %20, i64 0, i32 0, i32 1
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__less.395", %"struct.std::__1::__less.395"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #10
  call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %29, %"struct.std::__1::__less.395"* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 8
  %32 = call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaSERKS2_(%"class.Ice::BitVectorTmpl"* %31, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %17) #13
  %33 = call dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaNERKS2_(%"class.Ice::BitVectorTmpl"* %31, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %18) #13
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  %35 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %26, align 8
  %36 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %38 = icmp ne %"struct.std::__1::pair"* %34, %36
  %39 = icmp ne %"struct.std::__1::pair"* %35, %37
  %40 = or i1 %39, %38
  br i1 %40, label %41, label %96

41:                                               ; preds = %4
  %42 = add nsw i32 %3, 1
  %43 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %31, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %88
  %45 = phi %"struct.std::__1::pair"* [ %34, %41 ], [ %90, %88 ]
  %46 = phi %"struct.std::__1::pair"* [ %35, %41 ], [ %92, %88 ]
  %47 = icmp eq %"struct.std::__1::pair"* %45, %36
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi i32 [ %50, %48 ], [ %16, %44 ]
  %53 = icmp eq %"struct.std::__1::pair"* %46, %37
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %51, %54
  %58 = phi i32 [ %56, %54 ], [ %16, %51 ]
  %59 = icmp ult i32 %58, %52
  %60 = select i1 %59, i32 %58, i32 %52
  %61 = icmp ule i32 %52, %58
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  br label %65

65:                                               ; preds = %57, %62
  %66 = phi i32 [ %64, %62 ], [ %2, %57 ]
  %67 = icmp ule i32 %58, %52
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi i32 [ %70, %68 ], [ %42, %65 ]
  %73 = call %"class.Ice::Variable"* @_ZNK3Ice8Liveness11getVariableEjPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, i32 %60, %"class.Ice::CfgNode"* %0) #12
  %74 = icmp sgt i32 %66, %72
  %75 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %73, i64 0, i32 12
  br i1 %74, label %76, label %87

76:                                               ; preds = %71
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %75, i32 %2, i32 %72, %"class.Ice::CfgNode"* %0) #12
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %75, i32 %66, i32 %42, %"class.Ice::CfgNode"* %0) #12
  %77 = load i64*, i64** %43, align 8
  %78 = lshr i32 %60, 6
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i64, i64* %77, i64 %79
  %81 = and i32 %60, 63
  %82 = zext i32 %81 to i64
  %83 = shl i64 1, %82
  %84 = xor i64 %83, -1
  %85 = load i64, i64* %80, align 8
  %86 = and i64 %85, %84
  store i64 %86, i64* %80, align 8
  br label %88

87:                                               ; preds = %71
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %75, i32 %66, i32 %72, %"class.Ice::CfgNode"* %0) #12
  br label %88

88:                                               ; preds = %87, %76
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %90 = select i1 %61, %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"* %45
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 1
  %92 = select i1 %67, %"struct.std::__1::pair"* %91, %"struct.std::__1::pair"* %46
  %93 = icmp ne %"struct.std::__1::pair"* %90, %36
  %94 = icmp ne %"struct.std::__1::pair"* %92, %37
  %95 = or i1 %94, %93
  br i1 %95, label %44, label %96

96:                                               ; preds = %88, %4
  %97 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 8, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, 63
  %100 = icmp ugt i32 %99, 63
  br i1 %100, label %101, label %124

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %31, i64 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = lshr i32 %99, 6
  %105 = zext i32 %104 to i64
  br label %106

106:                                              ; preds = %111, %101
  %107 = phi i64 [ 0, %101 ], [ %112, %111 ]
  %108 = getelementptr inbounds i64, i64* %103, i64 %107
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = add nuw nsw i64 %107, 1
  %113 = icmp ult i64 %112, %105
  br i1 %113, label %106, label %124

114:                                              ; preds = %106
  %115 = trunc i64 %107 to i32
  %116 = shl i32 %115, 6
  %117 = call i64 @llvm.cttz.i64(i64 %109, i1 true) #10, !range !4
  %118 = trunc i64 %117 to i32
  %119 = or i32 %116, %118
  %120 = icmp eq i32 %119, -1
  br i1 %120, label %124, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.Ice::Liveness", %"class.Ice::Liveness"* %1, i64 0, i32 7, i32 0
  %123 = add nsw i32 %3, 1
  br label %125

124:                                              ; preds = %111, %142, %96, %114
  ret void

125:                                              ; preds = %121, %142
  %126 = phi i32 [ %119, %121 ], [ %143, %142 ]
  %127 = call %"class.Ice::Variable"* @_ZNK3Ice8Liveness11getVariableEjPKNS_7CfgNodeE(%"class.Ice::Liveness"* %1, i32 %126, %"class.Ice::CfgNode"* %0) #12
  %128 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %127, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 63
  %131 = zext i32 %130 to i64
  %132 = shl i64 1, %131
  %133 = load i64*, i64** %122, align 8
  %134 = lshr i32 %129, 6
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i64, i64* %133, i64 %135
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %132, %137
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %125
  %141 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %127, i64 0, i32 12
  call void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"* %141, i32 %2, i32 %123, %"class.Ice::CfgNode"* %0) #12
  br label %142

142:                                              ; preds = %125, %140
  %143 = call i32 @_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEE9find_nextEj(%"class.Ice::BitVectorTmpl"* %31, i32 %126) #13
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %124, label %125
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.Ice::BitVectorTmpl"* @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEaNERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 63
  %6 = lshr i32 %5, 6
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 63
  %10 = lshr i32 %9, 6
  %11 = icmp ult i32 %10, %6
  %12 = select i1 %11, i32 %10, i32 %6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %17 = zext i32 %12 to i64
  br label %22

18:                                               ; preds = %22, %2
  %19 = icmp ugt i32 %6, %10
  br i1 %19, label %20, label %40

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  br label %33

22:                                               ; preds = %14, %22
  %23 = phi i64 [ 0, %14 ], [ %31, %22 ]
  %24 = load i64*, i64** %15, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 %23
  %26 = load i64, i64* %25, align 8
  %27 = load i64*, i64** %16, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 %23
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, %26
  store i64 %30, i64* %28, align 8
  %31 = add nuw nsw i64 %23, 1
  %32 = icmp eq i64 %31, %17
  br i1 %32, label %18, label %22

33:                                               ; preds = %20, %33
  %34 = phi i32 [ %12, %20 ], [ %38, %33 ]
  %35 = load i64*, i64** %21, align 8
  %36 = zext i32 %34 to i64
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64 0, i64* %37, align 8
  %38 = add i32 %34, 1
  %39 = icmp eq i32 %38, %6
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %18
  ret %"class.Ice::BitVectorTmpl"* %0
}

; Function Attrs: optsize
declare %"class.Ice::Variable"* @_ZNK3Ice8Liveness11getVariableEjPKNS_7CfgNodeE(%"class.Ice::Liveness"*, i32, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode15contractIfEmptyEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %6 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %7 = icmp eq %"class.Ice::CfgNode"** %4, %6
  br i1 %7, label %202, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.llvm::ilist_node_base"** %9 to %"class.llvm::ilist_node_impl"**
  %12 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %11, align 8
  %13 = icmp eq %"class.llvm::ilist_node_impl"* %12, %10
  br i1 %13, label %41, label %14

14:                                               ; preds = %8, %35
  %15 = phi %"class.llvm::ilist_node_impl"* [ %39, %35 ], [ %12, %8 ]
  %16 = phi %"class.Ice::Inst"* [ %36, %35 ], [ null, %8 ]
  %17 = icmp eq %"class.llvm::ilist_node_impl"* %15, null
  %18 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %15, i64 -1, i32 0, i32 1
  %19 = bitcast %"class.llvm::ilist_node_base"** %18 to %"class.Ice::Inst"*
  %20 = select i1 %17, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %19
  %21 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %20, i64 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %14
  %25 = bitcast %"class.Ice::Inst"* %20 to i1 (%"class.Ice::Inst"*)***
  %26 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %26, i64 2
  %28 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.Ice::Inst"* %20) #12
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %25, align 8
  %32 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %31, i64 13
  %33 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.Ice::Inst"* %20) #12
  br i1 %34, label %35, label %202

35:                                               ; preds = %14, %30, %24
  %36 = phi %"class.Ice::Inst"* [ %16, %14 ], [ %16, %30 ], [ %20, %24 ]
  %37 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %15, i64 0, i32 0, i32 1
  %38 = bitcast %"class.llvm::ilist_node_base"** %37 to %"class.llvm::ilist_node_impl"**
  %39 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %38, align 8
  %40 = icmp eq %"class.llvm::ilist_node_impl"* %39, %10
  br i1 %40, label %41, label %14

41:                                               ; preds = %35, %8
  %42 = phi %"class.Ice::Inst"* [ null, %8 ], [ %36, %35 ]
  %43 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 0
  %44 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %43, align 8
  %45 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %46 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %45, align 8
  %47 = icmp eq %"class.Ice::CfgNode"** %44, %46
  br i1 %47, label %202, label %48

48:                                               ; preds = %41
  %49 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %44, align 8
  %50 = icmp eq %"class.Ice::CfgNode"* %49, %0
  %51 = icmp eq %"class.Ice::Inst"* %42, null
  %52 = or i1 %51, %50
  br i1 %52, label %202, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %42, i64 0, i32 4
  store i8 1, i8* %54, align 8
  %55 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %43, align 8
  %56 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %55, align 8
  %57 = icmp eq %"class.Ice::CfgNode"* %56, %0
  br i1 %57, label %198, label %58

58:                                               ; preds = %53
  %59 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %60 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %61 = icmp eq %"class.Ice::CfgNode"** %59, %60
  br i1 %61, label %70, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %56, i64 0, i32 9
  %64 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %56, i64 0, i32 9, i32 0, i32 1
  %65 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %56, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.Ice::CfgNode"*** %64 to i64*
  %67 = bitcast %"class.std::__1::vector.202"* %63 to i64*
  %68 = bitcast %"class.Ice::CfgNode"*** %65 to i64*
  %69 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %63, i64 0, i32 0, i32 0
  br label %96

70:                                               ; preds = %175, %58
  %71 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %56, i64 0, i32 9, i32 0, i32 0
  %72 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %71, align 8
  %73 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %56, i64 0, i32 9, i32 0, i32 1
  %74 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %73, align 8
  %75 = icmp eq %"class.Ice::CfgNode"** %72, %74
  %76 = ptrtoint %"class.Ice::CfgNode"** %74 to i64
  br i1 %75, label %84, label %77

77:                                               ; preds = %70, %81
  %78 = phi %"class.Ice::CfgNode"** [ %82, %81 ], [ %72, %70 ]
  %79 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %78, align 8
  %80 = icmp eq %"class.Ice::CfgNode"* %79, %0
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %78, i64 1
  %83 = icmp eq %"class.Ice::CfgNode"** %82, %74
  br i1 %83, label %84, label %77

84:                                               ; preds = %77, %81, %70
  %85 = phi %"class.Ice::CfgNode"** [ %72, %70 ], [ %78, %77 ], [ %74, %81 ]
  %86 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %85, i64 1
  %87 = ptrtoint %"class.Ice::CfgNode"** %86 to i64
  %88 = sub i64 %76, %87
  %89 = ashr exact i64 %88, 3
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %84
  %92 = bitcast %"class.Ice::CfgNode"** %85 to i8*
  %93 = bitcast %"class.Ice::CfgNode"** %86 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %88, i1 false) #10
  br label %94

94:                                               ; preds = %84, %91
  %95 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %85, i64 %89
  store %"class.Ice::CfgNode"** %95, %"class.Ice::CfgNode"*** %73, align 8
  br label %198

96:                                               ; preds = %62, %175
  %97 = phi %"class.Ice::CfgNode"** [ %59, %62 ], [ %176, %175 ]
  %98 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %97, align 8
  %99 = ptrtoint %"class.Ice::CfgNode"* %98 to i64
  %100 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %98, i64 0, i32 10, i32 0, i32 0
  %101 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %100, align 8
  %102 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %98, i64 0, i32 10, i32 0, i32 1
  %103 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %102, align 8
  %104 = icmp eq %"class.Ice::CfgNode"** %101, %103
  br i1 %104, label %105, label %111

105:                                              ; preds = %172, %96
  %106 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %98, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %98, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.llvm::ilist_node_base"** %106 to %"class.llvm::ilist_node_impl"**
  %109 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %108, align 8
  %110 = icmp eq %"class.llvm::ilist_node_impl"* %109, %107
  br i1 %110, label %175, label %178

111:                                              ; preds = %96, %172
  %112 = phi %"class.Ice::CfgNode"** [ %173, %172 ], [ %101, %96 ]
  %113 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %112, align 8
  %114 = icmp eq %"class.Ice::CfgNode"* %113, %0
  br i1 %114, label %115, label %172

115:                                              ; preds = %111
  store %"class.Ice::CfgNode"* %56, %"class.Ice::CfgNode"** %112, align 8
  %116 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %64, align 8
  %117 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %65, align 8
  %118 = icmp eq %"class.Ice::CfgNode"** %116, %117
  %119 = ptrtoint %"class.Ice::CfgNode"** %117 to i64
  br i1 %118, label %124, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.Ice::CfgNode"** %116 to i64*
  store i64 %99, i64* %121, align 8
  %122 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %116, i64 1
  %123 = ptrtoint %"class.Ice::CfgNode"** %122 to i64
  store i64 %123, i64* %66, align 8
  br label %172

124:                                              ; preds = %115
  %125 = ptrtoint %"class.Ice::CfgNode"** %116 to i64
  %126 = load i64, i64* %67, align 8
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %124
  %132 = bitcast %"class.std::__1::vector.202"* %63 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #14
  unreachable

133:                                              ; preds = %124
  %134 = sub i64 %119, %126
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, 1152921504606846975
  br i1 %136, label %137, label %142

137:                                              ; preds = %133
  %138 = ashr exact i64 %134, 2
  %139 = icmp ult i64 %138, %129
  %140 = select i1 %139, i64 %129, i64 %138
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %137, %133
  %143 = phi i64 [ %140, %137 ], [ 2305843009213693951, %133 ]
  %144 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %145 = shl i64 %143, 3
  %146 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %144, i64 %145, i64 8) #12
  %147 = bitcast i8* %146 to %"class.Ice::CfgNode"**
  br label %148

148:                                              ; preds = %142, %137
  %149 = phi i64 [ %143, %142 ], [ 0, %137 ]
  %150 = phi %"class.Ice::CfgNode"** [ %147, %142 ], [ null, %137 ]
  %151 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %150, i64 %128
  %152 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %150, i64 %149
  %153 = ptrtoint %"class.Ice::CfgNode"** %152 to i64
  %154 = bitcast %"class.Ice::CfgNode"** %151 to i64*
  store i64 %99, i64* %154, align 8
  %155 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %151, i64 1
  %156 = ptrtoint %"class.Ice::CfgNode"** %155 to i64
  %157 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %69, align 8
  %158 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %64, align 8
  %159 = icmp eq %"class.Ice::CfgNode"** %158, %157
  br i1 %159, label %169, label %160

160:                                              ; preds = %148, %160
  %161 = phi %"class.Ice::CfgNode"** [ %163, %160 ], [ %151, %148 ]
  %162 = phi %"class.Ice::CfgNode"** [ %164, %160 ], [ %158, %148 ]
  %163 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %161, i64 -1
  %164 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %162, i64 -1
  %165 = bitcast %"class.Ice::CfgNode"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.Ice::CfgNode"** %163 to i64*
  store i64 %166, i64* %167, align 8
  %168 = icmp eq %"class.Ice::CfgNode"** %164, %157
  br i1 %168, label %169, label %160

169:                                              ; preds = %160, %148
  %170 = phi %"class.Ice::CfgNode"** [ %151, %148 ], [ %163, %160 ]
  %171 = ptrtoint %"class.Ice::CfgNode"** %170 to i64
  store i64 %171, i64* %67, align 8
  store i64 %156, i64* %66, align 8
  store i64 %153, i64* %68, align 8
  br label %172

172:                                              ; preds = %169, %120, %111
  %173 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %112, i64 1
  %174 = icmp eq %"class.Ice::CfgNode"** %173, %103
  br i1 %174, label %105, label %111

175:                                              ; preds = %193, %105
  %176 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %97, i64 1
  %177 = icmp eq %"class.Ice::CfgNode"** %176, %60
  br i1 %177, label %70, label %96

178:                                              ; preds = %105, %193
  %179 = phi %"class.llvm::ilist_node_impl"* [ %196, %193 ], [ %109, %105 ]
  %180 = icmp eq %"class.llvm::ilist_node_impl"* %179, null
  %181 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %179, i64 -1, i32 0, i32 1
  %182 = bitcast %"class.llvm::ilist_node_base"** %181 to %"class.Ice::Inst"*
  %183 = select i1 %180, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %182
  %184 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %183, i64 0, i32 4
  %185 = load i8, i8* %184, align 8, !range !2
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %193

187:                                              ; preds = %178
  %188 = bitcast %"class.Ice::Inst"* %183 to i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)***
  %189 = load i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)**, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)** %189, i64 3
  %191 = load i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::Inst"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*)** %190, align 8
  %192 = tail call zeroext i1 %191(%"class.Ice::Inst"* %183, %"class.Ice::CfgNode"* %0, %"class.Ice::CfgNode"* %56) #12
  br label %193

193:                                              ; preds = %178, %187
  %194 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %179, i64 0, i32 0, i32 1
  %195 = bitcast %"class.llvm::ilist_node_base"** %194 to %"class.llvm::ilist_node_impl"**
  %196 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %195, align 8
  %197 = icmp eq %"class.llvm::ilist_node_impl"* %196, %107
  br i1 %197, label %175, label %178

198:                                              ; preds = %53, %94
  %199 = bitcast %"class.std::__1::vector.202"* %2 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.Ice::CfgNode"*** %5 to i64*
  store i64 %200, i64* %201, align 8
  br label %202

202:                                              ; preds = %30, %198, %41, %48, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode11doBranchOptEPKS0_(%"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %4 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %4, i64 0, i32 23, i32 0, i32 0, i32 0
  %6 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %5, align 8
  %7 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %8 = bitcast %"class.llvm::iplist"* %7 to i64*
  %9 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %8, align 8
  %11 = inttoptr i64 %10 to %"class.llvm::ilist_node_impl"*
  %12 = icmp eq %"class.llvm::ilist_node_impl"* %9, %11
  br i1 %12, label %34, label %13

13:                                               ; preds = %2, %29
  %14 = phi %"class.llvm::ilist_node_impl"* [ %32, %29 ], [ %11, %2 ]
  %15 = phi i64 [ %31, %29 ], [ %10, %2 ]
  %16 = icmp eq i64 %15, 0
  %17 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %14, i64 -1, i32 0, i32 1
  %18 = bitcast %"class.llvm::ilist_node_base"** %17 to %"class.Ice::Inst"*
  %19 = select i1 %16, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %18
  %20 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %13
  %24 = bitcast %"class.Ice::TargetLowering"* %6 to i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)***
  %25 = load i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)**, i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)** %25, i64 6
  %27 = load i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)*, i1 (%"class.Ice::TargetLowering"*, %"class.Ice::Inst"*, %"class.Ice::CfgNode"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.Ice::TargetLowering"* %6, %"class.Ice::Inst"* %19, %"class.Ice::CfgNode"* %1) #12
  br label %34

29:                                               ; preds = %13
  %30 = inttoptr i64 %15 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %31 to %"class.llvm::ilist_node_impl"*
  %33 = icmp eq %"class.llvm::ilist_node_impl"* %9, %32
  br i1 %33, label %34, label %13

34:                                               ; preds = %29, %2, %23
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice7CfgNode4emitEPNS_3CfgE(%"class.Ice::CfgNode"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK3Ice7CfgNode7emitIASEPNS_3CfgE(%"class.Ice::CfgNode"*, %"class.Ice::Cfg"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 28
  store %"class.Ice::CfgNode"* %0, %"class.Ice::CfgNode"** %3, align 8
  %4 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %"class.Ice::Assembler"*, %"class.Ice::Assembler"** %4, align 8
  %6 = bitcast %"class.Ice::Assembler"* %5 to void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)***
  %7 = load void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)**, void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)*, void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)** %7, i64 8
  %9 = load void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)*, void (%"class.Ice::Assembler"*, %"class.Ice::CfgNode"*)** %8, align 8
  tail call void %9(%"class.Ice::Assembler"* %5, %"class.Ice::CfgNode"* %0) #12
  %10 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.llvm::ilist_node_base"** %10 to %"class.llvm::ilist_node_impl"**
  %13 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %12, align 8
  %14 = icmp eq %"class.llvm::ilist_node_impl"* %13, %11
  br i1 %14, label %15, label %18

15:                                               ; preds = %32, %2
  %16 = load i8, i8* getelementptr inbounds (%"class.Ice::ClFlags", %"class.Ice::ClFlags"* @_ZN3Ice7ClFlags5FlagsE, i64 0, i32 61), align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %37, label %68

18:                                               ; preds = %2, %32
  %19 = phi %"class.llvm::ilist_node_impl"* [ %35, %32 ], [ %13, %2 ]
  %20 = icmp eq %"class.llvm::ilist_node_impl"* %19, null
  %21 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %19, i64 -1, i32 0, i32 1
  %22 = bitcast %"class.llvm::ilist_node_base"** %21 to %"class.Ice::Inst"*
  %23 = select i1 %20, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %22
  %24 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %23, i64 0, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %18
  %28 = bitcast %"class.Ice::Inst"* %23 to void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)***
  %29 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %29, i64 10
  %31 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %30, align 8
  tail call void %31(%"class.Ice::Inst"* %23, %"class.Ice::Cfg"* %1) #12
  br label %32

32:                                               ; preds = %18, %27
  %33 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %19, i64 0, i32 0, i32 1
  %34 = bitcast %"class.llvm::ilist_node_base"** %33 to %"class.llvm::ilist_node_impl"**
  %35 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %34, align 8
  %36 = icmp eq %"class.llvm::ilist_node_impl"* %35, %11
  br i1 %36, label %15, label %18

37:                                               ; preds = %15
  %38 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.llvm::ilist_node_base"** %38 to %"class.llvm::ilist_node_impl"**
  %41 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %40, align 8
  %42 = icmp eq %"class.llvm::ilist_node_impl"* %41, %39
  br i1 %42, label %230, label %43

43:                                               ; preds = %37, %63
  %44 = phi %"class.llvm::ilist_node_impl"* [ %66, %63 ], [ %41, %37 ]
  %45 = icmp eq %"class.llvm::ilist_node_impl"* %44, null
  %46 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %44, i64 -1, i32 0, i32 1
  %47 = bitcast %"class.llvm::ilist_node_base"** %46 to %"class.Ice::Inst"*
  %48 = select i1 %45, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %47
  %49 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %43
  %53 = bitcast %"class.Ice::Inst"* %48 to i1 (%"class.Ice::Inst"*)***
  %54 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %54, i64 13
  %56 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.Ice::Inst"* %48) #12
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.Ice::Inst"* %48 to void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)***
  %60 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %60, i64 10
  %62 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %61, align 8
  tail call void %62(%"class.Ice::Inst"* %48, %"class.Ice::Cfg"* %1) #12
  br label %63

63:                                               ; preds = %43, %58, %52
  %64 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %44, i64 0, i32 0, i32 1
  %65 = bitcast %"class.llvm::ilist_node_base"** %64 to %"class.llvm::ilist_node_impl"**
  %66 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %65, align 8
  %67 = icmp eq %"class.llvm::ilist_node_impl"* %66, %39
  br i1 %67, label %230, label %43

68:                                               ; preds = %15
  %69 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = ptrtoint %"class.llvm::iplist"* %69 to i64
  %72 = bitcast %"class.Ice::Assembler"* %5 to i32 (%"class.Ice::Assembler"*)***
  %73 = load i32 (%"class.Ice::Assembler"*)**, i32 (%"class.Ice::Assembler"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.Ice::Assembler"*)*, i32 (%"class.Ice::Assembler"*)** %73, i64 4
  %75 = load i32 (%"class.Ice::Assembler"*)*, i32 (%"class.Ice::Assembler"*)** %74, align 8
  %76 = tail call i32 %75(%"class.Ice::Assembler"* %5) #12
  %77 = shl i32 1, %76
  %78 = sext i32 %77 to i64
  %79 = add nsw i64 %78, -1
  %80 = sub nsw i64 0, %78
  %81 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.llvm::ilist_node_base"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %83 to %"class.llvm::ilist_node_impl"*
  %85 = icmp eq %"class.llvm::ilist_node_impl"* %70, %84
  br i1 %85, label %230, label %86

86:                                               ; preds = %68
  %87 = getelementptr inbounds %"class.Ice::Assembler", %"class.Ice::Assembler"* %5, i64 0, i32 8, i32 3
  %88 = getelementptr inbounds %"class.Ice::Assembler", %"class.Ice::Assembler"* %5, i64 0, i32 8, i32 2
  %89 = bitcast %"class.Ice::Assembler"* %5 to void (%"class.Ice::Assembler"*, i64)***
  %90 = getelementptr inbounds %"class.Ice::Assembler", %"class.Ice::Assembler"* %5, i64 0, i32 6
  br label %91

91:                                               ; preds = %86, %219
  %92 = phi %"class.llvm::ilist_node_impl"* [ %84, %86 ], [ %228, %219 ]
  %93 = phi i64 [ %83, %86 ], [ %227, %219 ]
  %94 = phi i8 [ 0, %86 ], [ %223, %219 ]
  %95 = phi i64 [ 0, %86 ], [ %221, %219 ]
  %96 = phi i64 [ %71, %86 ], [ %220, %219 ]
  %97 = icmp eq i64 %93, 0
  %98 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %92, i64 -1, i32 0, i32 1
  %99 = bitcast %"class.llvm::ilist_node_base"** %98 to %"class.Ice::Inst"*
  %100 = select i1 %97, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %99
  %101 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %100, i64 0, i32 4
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %219

104:                                              ; preds = %91
  %105 = bitcast %"class.Ice::Inst"* %100 to i1 (%"class.Ice::Inst"*)***
  %106 = load i1 (%"class.Ice::Inst"*)**, i1 (%"class.Ice::Inst"*)*** %105, align 8
  %107 = getelementptr inbounds i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %106, i64 13
  %108 = load i1 (%"class.Ice::Inst"*)*, i1 (%"class.Ice::Inst"*)** %107, align 8
  %109 = tail call zeroext i1 %108(%"class.Ice::Inst"* %100) #12
  br i1 %109, label %219, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %100, i64 0, i32 2
  %112 = load i32, i32* %111, align 8
  switch i32 %112, label %181 [
    i32 19, label %113
    i32 20, label %117
  ]

113:                                              ; preds = %110
  %114 = load i64, i64* %87, align 8
  %115 = load i64, i64* %88, align 8
  %116 = sub i64 %114, %115
  store i8 1, i8* %90, align 1
  br label %219

117:                                              ; preds = %110
  %118 = load i64, i64* %87, align 8
  %119 = load i64, i64* %88, align 8
  %120 = sub i64 %118, %119
  %121 = and i8 %94, 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %143, label %123

123:                                              ; preds = %117
  %124 = inttoptr i64 %96 to %"class.llvm::ilist_node_impl"*
  %125 = icmp eq i64 %96, 0
  %126 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %124, i64 -1, i32 0, i32 1
  %127 = bitcast %"class.llvm::ilist_node_base"** %126 to %"class.Ice::InstBundleLock"*
  %128 = select i1 %125, %"class.Ice::InstBundleLock"* null, %"class.Ice::InstBundleLock"* %127
  %129 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %128, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 2
  br i1 %131, label %132, label %219

132:                                              ; preds = %123
  %133 = and i64 %120, %79
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %219, label %135

135:                                              ; preds = %132
  %136 = sub nsw i64 %78, %133
  %137 = load void (%"class.Ice::Assembler"*, i64)**, void (%"class.Ice::Assembler"*, i64)*** %89, align 8
  %138 = getelementptr inbounds void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %137, i64 3
  %139 = load void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %138, align 8
  tail call void %139(%"class.Ice::Assembler"* %5, i64 %136) #12
  %140 = load i64, i64* %87, align 8
  %141 = load i64, i64* %88, align 8
  %142 = sub i64 %140, %141
  br label %219

143:                                              ; preds = %117
  %144 = add i64 %119, %95
  store i64 %144, i64* %87, align 8
  store i8 0, i8* %90, align 1
  %145 = icmp eq i64 %95, %120
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = add nsw i64 %120, -1
  %148 = xor i64 %147, %95
  %149 = and i64 %148, %80
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %146
  %152 = and i64 %95, %79
  %153 = sub nsw i64 %78, %152
  %154 = load void (%"class.Ice::Assembler"*, i64)**, void (%"class.Ice::Assembler"*, i64)*** %89, align 8
  %155 = getelementptr inbounds void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %154, i64 3
  %156 = load void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %155, align 8
  tail call void %156(%"class.Ice::Assembler"* %5, i64 %153) #12
  %157 = add nsw i64 %153, %95
  %158 = add nsw i64 %120, %153
  br label %159

159:                                              ; preds = %143, %146, %151
  %160 = phi i64 [ %95, %143 ], [ %95, %146 ], [ %157, %151 ]
  %161 = phi i64 [ %95, %143 ], [ %120, %146 ], [ %158, %151 ]
  %162 = inttoptr i64 %96 to %"class.llvm::ilist_node_impl"*
  %163 = icmp eq i64 %96, 0
  %164 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %162, i64 -1, i32 0, i32 1
  %165 = bitcast %"class.llvm::ilist_node_base"** %164 to %"class.Ice::InstBundleLock"*
  %166 = select i1 %163, %"class.Ice::InstBundleLock"* null, %"class.Ice::InstBundleLock"* %165
  %167 = getelementptr inbounds %"class.Ice::InstBundleLock", %"class.Ice::InstBundleLock"* %166, i64 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %219

170:                                              ; preds = %159
  %171 = and i64 %161, %79
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %219, label %173

173:                                              ; preds = %170
  %174 = sub nsw i64 %78, %171
  %175 = load void (%"class.Ice::Assembler"*, i64)**, void (%"class.Ice::Assembler"*, i64)*** %89, align 8
  %176 = getelementptr inbounds void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %175, i64 3
  %177 = load void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %176, align 8
  tail call void %177(%"class.Ice::Assembler"* %5, i64 %174) #12
  %178 = load i64, i64* %87, align 8
  %179 = load i64, i64* %88, align 8
  %180 = sub i64 %178, %179
  br label %219

181:                                              ; preds = %110
  %182 = inttoptr i64 %96 to %"class.llvm::ilist_node_impl"*
  %183 = icmp eq %"class.llvm::ilist_node_impl"* %70, %182
  br i1 %183, label %189, label %184

184:                                              ; preds = %181
  %185 = bitcast %"class.Ice::Inst"* %100 to void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)***
  %186 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %186, i64 10
  %188 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %187, align 8
  tail call void %188(%"class.Ice::Inst"* %100, %"class.Ice::Cfg"* %1) #12
  br label %219

189:                                              ; preds = %181
  %190 = load i64, i64* %87, align 8
  %191 = load i64, i64* %88, align 8
  %192 = sub i64 %190, %191
  store i8 1, i8* %90, align 1
  %193 = bitcast %"class.Ice::Inst"* %100 to void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)***
  %194 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %194, i64 10
  %196 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %195, align 8
  tail call void %196(%"class.Ice::Inst"* %100, %"class.Ice::Cfg"* %1) #12
  %197 = load i64, i64* %87, align 8
  %198 = load i64, i64* %88, align 8
  %199 = sub i64 %197, %198
  %200 = add i64 %198, %192
  store i64 %200, i64* %87, align 8
  store i8 0, i8* %90, align 1
  %201 = icmp eq i64 %192, %199
  br i1 %201, label %214, label %202

202:                                              ; preds = %189
  %203 = add nsw i64 %199, -1
  %204 = xor i64 %203, %192
  %205 = and i64 %204, %80
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %202
  %208 = and i64 %192, %79
  %209 = sub nsw i64 %78, %208
  %210 = load void (%"class.Ice::Assembler"*, i64)**, void (%"class.Ice::Assembler"*, i64)*** %89, align 8
  %211 = getelementptr inbounds void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %210, i64 3
  %212 = load void (%"class.Ice::Assembler"*, i64)*, void (%"class.Ice::Assembler"*, i64)** %211, align 8
  tail call void %212(%"class.Ice::Assembler"* %5, i64 %209) #12
  %213 = add nsw i64 %209, %192
  br label %214

214:                                              ; preds = %189, %202, %207
  %215 = phi i64 [ %192, %189 ], [ %192, %202 ], [ %213, %207 ]
  %216 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)**, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*** %193, align 8
  %217 = getelementptr inbounds void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %216, i64 10
  %218 = load void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)*, void (%"class.Ice::Inst"*, %"class.Ice::Cfg"*)** %217, align 8
  tail call void %218(%"class.Ice::Inst"* %100, %"class.Ice::Cfg"* %1) #12
  br label %219

219:                                              ; preds = %91, %184, %173, %170, %159, %135, %132, %123, %214, %104, %113
  %220 = phi i64 [ %96, %91 ], [ %96, %104 ], [ %93, %113 ], [ %71, %214 ], [ %71, %123 ], [ %71, %132 ], [ %71, %135 ], [ %96, %159 ], [ %96, %170 ], [ %96, %173 ], [ %96, %184 ]
  %221 = phi i64 [ %95, %91 ], [ %95, %104 ], [ %116, %113 ], [ %215, %214 ], [ %95, %123 ], [ %95, %132 ], [ %142, %135 ], [ %160, %159 ], [ %160, %170 ], [ %180, %173 ], [ %95, %184 ]
  %222 = phi i64 [ %93, %91 ], [ %93, %104 ], [ %93, %113 ], [ %93, %214 ], [ %93, %123 ], [ %93, %132 ], [ %93, %135 ], [ %96, %159 ], [ %96, %170 ], [ %96, %173 ], [ %93, %184 ]
  %223 = phi i8 [ %94, %91 ], [ %94, %104 ], [ %94, %113 ], [ %94, %214 ], [ 0, %123 ], [ 0, %132 ], [ 0, %135 ], [ 1, %159 ], [ 1, %170 ], [ 1, %173 ], [ %94, %184 ]
  %224 = inttoptr i64 %222 to %"class.llvm::ilist_node_impl"*
  %225 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %224, i64 0, i32 0, i32 1
  %226 = bitcast %"class.llvm::ilist_node_base"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = inttoptr i64 %227 to %"class.llvm::ilist_node_impl"*
  %229 = icmp eq %"class.llvm::ilist_node_impl"* %70, %228
  br i1 %229, label %230, label %91

230:                                              ; preds = %219, %63, %68, %37
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice7CfgNode4dumpEPNS_3CfgE(%"class.Ice::CfgNode"* nocapture, %"class.Ice::Cfg"* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice7CfgNode12removeInEdgeEPS0_(%"class.Ice::CfgNode"* nocapture, %"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 9, i32 0, i32 1
  %6 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %5, align 8
  %7 = icmp eq %"class.Ice::CfgNode"** %4, %6
  %8 = ptrtoint %"class.Ice::CfgNode"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.Ice::CfgNode"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %10, align 8
  %12 = icmp eq %"class.Ice::CfgNode"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %10, i64 1
  %15 = icmp eq %"class.Ice::CfgNode"** %14, %6
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %13, %2
  %17 = phi %"class.Ice::CfgNode"** [ %4, %2 ], [ %10, %9 ], [ %6, %13 ]
  %18 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %17, i64 1
  %19 = ptrtoint %"class.Ice::CfgNode"** %18 to i64
  %20 = sub i64 %8, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.Ice::CfgNode"** %17 to i8*
  %25 = bitcast %"class.Ice::CfgNode"** %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 %20, i1 false) #10
  br label %26

26:                                               ; preds = %16, %23
  %27 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %17, i64 %21
  store %"class.Ice::CfgNode"** %27, %"class.Ice::CfgNode"*** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.Ice::CfgNode"* @_ZN3Ice7CfgNode12shortCircuitEv(%"class.Ice::CfgNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 0
  %3 = load %"class.Ice::Cfg"*, %"class.Ice::Cfg"** %2, align 8
  %4 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12
  %5 = bitcast %"class.llvm::iplist"* %4 to %"class.llvm::ilist_node_impl"**
  %6 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %5, align 8
  %7 = icmp eq %"class.llvm::ilist_node_impl"* %6, null
  %8 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %6, i64 -1, i32 0, i32 1
  %9 = bitcast %"class.llvm::ilist_node_base"** %8 to %"class.Ice::Inst"*
  %10 = select i1 %7, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %9
  %11 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 3
  %14 = icmp eq %"class.Ice::Inst"* %10, null
  %15 = or i1 %13, %14
  %16 = ptrtoint %"class.llvm::ilist_node_impl"* %6 to i64
  br i1 %15, label %693, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %10, i64 1, i32 1
  %19 = bitcast %"class.llvm::ilist_node"* %18 to %"class.Ice::CfgNode"**
  %20 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %19, align 8
  %21 = icmp eq %"class.Ice::CfgNode"* %20, null
  br i1 %21, label %693, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %10, i64 0, i32 13, i32 0, i32 0
  %24 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %23, align 8
  %25 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %24, align 8
  %26 = getelementptr inbounds %"class.Ice::Operand", %"class.Ice::Operand"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -18
  %29 = icmp ugt i32 %28, 14
  %30 = bitcast %"class.Ice::Operand"* %25 to %"class.Ice::Variable"*
  %31 = icmp eq %"class.Ice::Operand"* %25, null
  %32 = or i1 %31, %29
  br i1 %32, label %693, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %10, i64 1
  %35 = bitcast %"class.Ice::Inst"* %34 to %"class.Ice::CfgNode"**
  %36 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %35, align 8
  %37 = bitcast %"class.llvm::iplist"* %4 to i64*
  %38 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = icmp eq %"class.llvm::ilist_node_impl"* %38, %6
  br i1 %39, label %693, label %40

40:                                               ; preds = %33, %66
  %41 = phi %"class.llvm::ilist_node_impl"* [ %69, %66 ], [ %6, %33 ]
  %42 = phi i64 [ %68, %66 ], [ %16, %33 ]
  %43 = icmp eq i64 %42, 0
  %44 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %41, i64 -1, i32 0, i32 1
  %45 = bitcast %"class.llvm::ilist_node_base"** %44 to %"class.Ice::Inst"*
  %46 = select i1 %43, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %45
  %47 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 4
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %66

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 10
  %52 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %51, align 8
  %53 = icmp eq %"class.Ice::Variable"* %52, %30
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp ne i32 %56, 2
  %58 = icmp eq %"class.Ice::Inst"* %46, null
  %59 = or i1 %58, %57
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 15
  %62 = bitcast [4 x i8]* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, -15
  %65 = icmp ult i32 %64, 2
  br i1 %65, label %71, label %66

66:                                               ; preds = %40, %60, %54, %50
  %67 = inttoptr i64 %42 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = inttoptr i64 %68 to %"class.llvm::ilist_node_impl"*
  %70 = icmp eq %"class.llvm::ilist_node_impl"* %38, %69
  br i1 %70, label %693, label %40

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 4
  %73 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.llvm::ilist_node_base"** %73 to %"class.llvm::ilist_node_impl"**
  %75 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %74, align 8
  %76 = icmp eq %"class.llvm::ilist_node_impl"* %75, %38
  br i1 %76, label %693, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 13
  %79 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 13, i32 0, i32 1
  %80 = bitcast %"class.Ice::Operand"*** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.246"* %78 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = lshr exact i64 %84, 3
  %86 = trunc i64 %85 to i32
  %87 = icmp eq i32 %86, 0
  %88 = inttoptr i64 %83 to %"class.Ice::Operand"**
  %89 = and i64 %85, 4294967295
  br label %90

90:                                               ; preds = %77, %107
  %91 = phi %"class.llvm::ilist_node_impl"* [ %75, %77 ], [ %110, %107 ]
  %92 = icmp eq %"class.llvm::ilist_node_impl"* %91, null
  %93 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %91, i64 -1, i32 0, i32 1
  %94 = bitcast %"class.llvm::ilist_node_base"** %93 to %"class.Ice::Inst"*
  %95 = select i1 %92, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %94
  %96 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %95, i64 0, i32 10
  %97 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %96, align 8
  %98 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %97, i64 0, i32 0
  br i1 %87, label %107, label %101

99:                                               ; preds = %101
  %100 = icmp eq i64 %106, %89
  br i1 %100, label %107, label %101

101:                                              ; preds = %90, %99
  %102 = phi i64 [ %106, %99 ], [ 0, %90 ]
  %103 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %88, i64 %102
  %104 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %103, align 8
  %105 = icmp eq %"class.Ice::Operand"* %104, %98
  %106 = add nuw nsw i64 %102, 1
  br i1 %105, label %112, label %99

107:                                              ; preds = %99, %90
  %108 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %91, i64 0, i32 0, i32 1
  %109 = bitcast %"class.llvm::ilist_node_base"** %108 to %"class.llvm::ilist_node_impl"**
  %110 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %109, align 8
  %111 = icmp eq %"class.llvm::ilist_node_impl"* %110, %38
  br i1 %111, label %693, label %90

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %95, i64 0, i32 10
  %114 = icmp eq %"class.Ice::Inst"* %95, null
  br i1 %114, label %693, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %95, i64 0, i32 1, i32 0
  %117 = icmp eq %"class.llvm::ilist_node_impl"* %116, %38
  br i1 %117, label %148, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 24, i32 0, i32 0, i32 0
  br label %120

120:                                              ; preds = %118, %129
  %121 = phi %"class.llvm::ilist_node_impl"* [ %116, %118 ], [ %132, %129 ]
  %122 = icmp eq %"class.llvm::ilist_node_impl"* %121, null
  %123 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %121, i64 -1, i32 0, i32 1
  %124 = bitcast %"class.llvm::ilist_node_base"** %123 to %"class.Ice::Inst"*
  %125 = select i1 %122, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %124
  %126 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 4
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %145, %120
  %130 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %121, i64 0, i32 0, i32 1
  %131 = bitcast %"class.llvm::ilist_node_base"** %130 to %"class.llvm::ilist_node_impl"**
  %132 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %131, align 8
  %133 = icmp eq %"class.llvm::ilist_node_impl"* %132, %38
  br i1 %133, label %148, label %120

134:                                              ; preds = %120
  %135 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 2
  %136 = load i32, i32* %135, align 8
  switch i32 %136, label %137 [
    i32 3, label %148
    i32 13, label %148
  ]

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 10
  %139 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %138, align 8
  %140 = icmp eq %"class.Ice::Variable"* %139, null
  br i1 %140, label %693, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %125, i64 0, i32 6
  %143 = load i8, i8* %142, align 2, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %693

145:                                              ; preds = %141
  %146 = load %"class.Ice::VariablesMetadata"*, %"class.Ice::VariablesMetadata"** %119, align 8
  %147 = tail call zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"* %146, %"class.Ice::Variable"* nonnull %139) #12
  br i1 %147, label %129, label %693

148:                                              ; preds = %134, %134, %129, %115
  %149 = tail call %"class.Ice::CfgNode"* @_ZN3Ice3Cfg8makeNodeEv(%"class.Ice::Cfg"* %3) #12
  %150 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 4
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 4
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %95, i64 0, i32 1, i32 0, i32 0, i32 1
  %154 = bitcast %"class.llvm::ilist_node_base"** %153 to %"class.llvm::ilist_node_impl"**
  %155 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %154, align 8
  %156 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast %"class.llvm::ilist_node_base"** %156 to %"class.llvm::ilist_node_impl"**
  %158 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %157, align 8
  %159 = icmp eq %"class.llvm::ilist_node_impl"* %155, %38
  %160 = icmp eq %"class.llvm::ilist_node_impl"* %158, %38
  %161 = or i1 %159, %160
  br i1 %161, label %177, label %162

162:                                              ; preds = %148
  %163 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %158, i64 0, i32 0
  %164 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %155, i64 0, i32 0
  %166 = getelementptr inbounds %"class.llvm::iplist", %"class.llvm::iplist"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %166, align 8
  %168 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %155, i64 0, i32 0, i32 0
  %169 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %168, align 8
  %170 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %169, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %164, %"class.llvm::ilist_node_base"** %170, align 8
  %171 = bitcast %"class.llvm::ilist_node_impl"* %155 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %37, align 8
  %173 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %158, i64 0, i32 0, i32 0
  %174 = load %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"** %173, align 8
  %175 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %167, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %163, %"class.llvm::ilist_node_base"** %175, align 8
  store %"class.llvm::ilist_node_base"* %174, %"class.llvm::ilist_node_base"** %168, align 8
  %176 = getelementptr inbounds %"class.llvm::ilist_node_base", %"class.llvm::ilist_node_base"* %174, i64 0, i32 1
  store %"class.llvm::ilist_node_base"* %165, %"class.llvm::ilist_node_base"** %176, align 8
  store %"class.llvm::ilist_node_base"* %167, %"class.llvm::ilist_node_base"** %173, align 8
  br label %177

177:                                              ; preds = %148, %162
  %178 = ptrtoint %"class.Ice::CfgNode"* %0 to i64
  %179 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 9
  %180 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 9, i32 0, i32 1
  %181 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %180, align 8
  %182 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %183 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %182, align 8
  %184 = icmp eq %"class.Ice::CfgNode"** %181, %183
  %185 = ptrtoint %"class.Ice::CfgNode"** %183 to i64
  br i1 %184, label %191, label %186

186:                                              ; preds = %177
  %187 = bitcast %"class.Ice::CfgNode"** %181 to i64*
  store i64 %178, i64* %187, align 8
  %188 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %181, i64 1
  %189 = ptrtoint %"class.Ice::CfgNode"** %188 to i64
  %190 = bitcast %"class.Ice::CfgNode"*** %180 to i64*
  store i64 %189, i64* %190, align 8
  br label %243

191:                                              ; preds = %177
  %192 = ptrtoint %"class.Ice::CfgNode"** %181 to i64
  %193 = bitcast %"class.Ice::CfgNode"*** %180 to i64*
  %194 = bitcast %"class.std::__1::vector.202"* %179 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %192, %195
  %197 = ashr exact i64 %196, 3
  %198 = add nsw i64 %197, 1
  %199 = icmp ugt i64 %198, 2305843009213693951
  br i1 %199, label %200, label %202

200:                                              ; preds = %191
  %201 = bitcast %"class.std::__1::vector.202"* %179 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %201) #14
  unreachable

202:                                              ; preds = %191
  %203 = bitcast %"class.Ice::CfgNode"*** %182 to i64*
  %204 = sub i64 %185, %195
  %205 = ashr exact i64 %204, 3
  %206 = icmp ult i64 %205, 1152921504606846975
  br i1 %206, label %207, label %212

207:                                              ; preds = %202
  %208 = ashr exact i64 %204, 2
  %209 = icmp ult i64 %208, %198
  %210 = select i1 %209, i64 %198, i64 %208
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %218, label %212

212:                                              ; preds = %207, %202
  %213 = phi i64 [ %210, %207 ], [ 2305843009213693951, %202 ]
  %214 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %215 = shl i64 %213, 3
  %216 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %214, i64 %215, i64 8) #12
  %217 = bitcast i8* %216 to %"class.Ice::CfgNode"**
  br label %218

218:                                              ; preds = %212, %207
  %219 = phi i64 [ %213, %212 ], [ 0, %207 ]
  %220 = phi %"class.Ice::CfgNode"** [ %217, %212 ], [ null, %207 ]
  %221 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %220, i64 %197
  %222 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %220, i64 %219
  %223 = ptrtoint %"class.Ice::CfgNode"** %222 to i64
  %224 = bitcast %"class.Ice::CfgNode"** %221 to i64*
  store i64 %178, i64* %224, align 8
  %225 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %221, i64 1
  %226 = ptrtoint %"class.Ice::CfgNode"** %225 to i64
  %227 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %179, i64 0, i32 0, i32 0
  %228 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %227, align 8
  %229 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %180, align 8
  %230 = icmp eq %"class.Ice::CfgNode"** %229, %228
  br i1 %230, label %240, label %231

231:                                              ; preds = %218, %231
  %232 = phi %"class.Ice::CfgNode"** [ %234, %231 ], [ %221, %218 ]
  %233 = phi %"class.Ice::CfgNode"** [ %235, %231 ], [ %229, %218 ]
  %234 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %232, i64 -1
  %235 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %233, i64 -1
  %236 = bitcast %"class.Ice::CfgNode"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.Ice::CfgNode"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = icmp eq %"class.Ice::CfgNode"** %235, %228
  br i1 %239, label %240, label %231

240:                                              ; preds = %231, %218
  %241 = phi %"class.Ice::CfgNode"** [ %221, %218 ], [ %234, %231 ]
  %242 = ptrtoint %"class.Ice::CfgNode"** %241 to i64
  store i64 %242, i64* %194, align 8
  store i64 %226, i64* %193, align 8
  store i64 %223, i64* %203, align 8
  br label %243

243:                                              ; preds = %186, %240
  %244 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10
  %245 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %245, align 8
  %247 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 1
  %248 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %249 = icmp eq %"class.Ice::CfgNode"** %246, %248
  br i1 %249, label %250, label %254

250:                                              ; preds = %243
  %251 = ptrtoint %"class.Ice::CfgNode"** %246 to i64
  %252 = bitcast %"class.std::__1::vector.202"* %244 to i64*
  %253 = ptrtoint %"class.Ice::CfgNode"* %149 to i64
  br label %267

254:                                              ; preds = %243
  %255 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 10
  %256 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 10, i32 0, i32 1
  %257 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %258 = bitcast %"class.Ice::CfgNode"*** %256 to i64*
  %259 = bitcast %"class.std::__1::vector.202"* %255 to i64*
  %260 = bitcast %"class.Ice::CfgNode"*** %257 to i64*
  %261 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %255, i64 0, i32 0, i32 0
  %262 = ptrtoint %"class.Ice::CfgNode"* %149 to i64
  br label %309

263:                                              ; preds = %434
  %264 = bitcast %"class.std::__1::vector.202"* %244 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = inttoptr i64 %265 to %"class.Ice::CfgNode"**
  br label %267

267:                                              ; preds = %250, %263
  %268 = phi %"class.Ice::CfgNode"** [ %246, %250 ], [ %266, %263 ]
  %269 = phi i64 [ %253, %250 ], [ %262, %263 ]
  %270 = phi i64* [ %252, %250 ], [ %264, %263 ]
  %271 = phi i64 [ %251, %250 ], [ %265, %263 ]
  %272 = bitcast %"class.Ice::CfgNode"*** %247 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %274 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %273, align 8
  %275 = icmp eq %"class.Ice::CfgNode"** %274, %268
  br i1 %275, label %280, label %276

276:                                              ; preds = %267
  %277 = inttoptr i64 %271 to i64*
  store i64 %269, i64* %277, align 8
  %278 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %268, i64 1
  %279 = ptrtoint %"class.Ice::CfgNode"** %278 to i64
  store i64 %279, i64* %272, align 8
  br label %303

280:                                              ; preds = %267
  %281 = bitcast %"class.Ice::CfgNode"*** %273 to i64*
  %282 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %283 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %282, i64 8, i64 8) #12
  %284 = bitcast i8* %283 to %"class.Ice::CfgNode"**
  %285 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %245, align 8
  %286 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %287 = getelementptr inbounds i8, i8* %283, i64 8
  %288 = ptrtoint i8* %287 to i64
  %289 = bitcast i8* %283 to i64*
  store i64 %269, i64* %289, align 8
  %290 = icmp eq %"class.Ice::CfgNode"** %286, %285
  br i1 %290, label %300, label %291

291:                                              ; preds = %280, %291
  %292 = phi %"class.Ice::CfgNode"** [ %294, %291 ], [ %284, %280 ]
  %293 = phi %"class.Ice::CfgNode"** [ %295, %291 ], [ %286, %280 ]
  %294 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %292, i64 -1
  %295 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %293, i64 -1
  %296 = bitcast %"class.Ice::CfgNode"** %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"class.Ice::CfgNode"** %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = icmp eq %"class.Ice::CfgNode"** %295, %285
  br i1 %299, label %300, label %291

300:                                              ; preds = %291, %280
  %301 = phi %"class.Ice::CfgNode"** [ %284, %280 ], [ %294, %291 ]
  %302 = ptrtoint %"class.Ice::CfgNode"** %301 to i64
  store i64 %302, i64* %270, align 8
  store i64 %288, i64* %272, align 8
  store i64 %288, i64* %281, align 8
  br label %303

303:                                              ; preds = %276, %300
  %304 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 10, i32 0, i32 0
  %305 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %304, align 8
  %306 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %149, i64 0, i32 10, i32 0, i32 1
  %307 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %306, align 8
  %308 = icmp eq %"class.Ice::CfgNode"** %305, %307
  br i1 %308, label %437, label %438

309:                                              ; preds = %254, %434
  %310 = phi %"class.Ice::CfgNode"** [ %246, %254 ], [ %435, %434 ]
  %311 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %310, align 8
  %312 = ptrtoint %"class.Ice::CfgNode"* %311 to i64
  %313 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %256, align 8
  %314 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %257, align 8
  %315 = icmp eq %"class.Ice::CfgNode"** %313, %314
  %316 = ptrtoint %"class.Ice::CfgNode"** %314 to i64
  br i1 %315, label %321, label %317

317:                                              ; preds = %309
  %318 = bitcast %"class.Ice::CfgNode"** %313 to i64*
  store i64 %312, i64* %318, align 8
  %319 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %313, i64 1
  %320 = ptrtoint %"class.Ice::CfgNode"** %319 to i64
  store i64 %320, i64* %258, align 8
  br label %369

321:                                              ; preds = %309
  %322 = ptrtoint %"class.Ice::CfgNode"** %313 to i64
  %323 = load i64, i64* %259, align 8
  %324 = sub i64 %322, %323
  %325 = ashr exact i64 %324, 3
  %326 = add nsw i64 %325, 1
  %327 = icmp ugt i64 %326, 2305843009213693951
  br i1 %327, label %328, label %330

328:                                              ; preds = %321
  %329 = bitcast %"class.std::__1::vector.202"* %255 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %329) #14
  unreachable

330:                                              ; preds = %321
  %331 = sub i64 %316, %323
  %332 = ashr exact i64 %331, 3
  %333 = icmp ult i64 %332, 1152921504606846975
  br i1 %333, label %334, label %339

334:                                              ; preds = %330
  %335 = ashr exact i64 %331, 2
  %336 = icmp ult i64 %335, %326
  %337 = select i1 %336, i64 %326, i64 %335
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %345, label %339

339:                                              ; preds = %334, %330
  %340 = phi i64 [ %337, %334 ], [ 2305843009213693951, %330 ]
  %341 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %342 = shl i64 %340, 3
  %343 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %341, i64 %342, i64 8) #12
  %344 = bitcast i8* %343 to %"class.Ice::CfgNode"**
  br label %345

345:                                              ; preds = %339, %334
  %346 = phi i64 [ %340, %339 ], [ 0, %334 ]
  %347 = phi %"class.Ice::CfgNode"** [ %344, %339 ], [ null, %334 ]
  %348 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %347, i64 %325
  %349 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %347, i64 %346
  %350 = ptrtoint %"class.Ice::CfgNode"** %349 to i64
  %351 = bitcast %"class.Ice::CfgNode"** %348 to i64*
  store i64 %312, i64* %351, align 8
  %352 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %348, i64 1
  %353 = ptrtoint %"class.Ice::CfgNode"** %352 to i64
  %354 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %261, align 8
  %355 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %256, align 8
  %356 = icmp eq %"class.Ice::CfgNode"** %355, %354
  br i1 %356, label %366, label %357

357:                                              ; preds = %345, %357
  %358 = phi %"class.Ice::CfgNode"** [ %360, %357 ], [ %348, %345 ]
  %359 = phi %"class.Ice::CfgNode"** [ %361, %357 ], [ %355, %345 ]
  %360 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %358, i64 -1
  %361 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %359, i64 -1
  %362 = bitcast %"class.Ice::CfgNode"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.Ice::CfgNode"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = icmp eq %"class.Ice::CfgNode"** %361, %354
  br i1 %365, label %366, label %357

366:                                              ; preds = %357, %345
  %367 = phi %"class.Ice::CfgNode"** [ %348, %345 ], [ %360, %357 ]
  %368 = ptrtoint %"class.Ice::CfgNode"** %367 to i64
  store i64 %368, i64* %259, align 8
  store i64 %353, i64* %258, align 8
  store i64 %350, i64* %260, align 8
  br label %369

369:                                              ; preds = %317, %366
  %370 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %311, i64 0, i32 9
  %371 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %311, i64 0, i32 9, i32 0, i32 1
  %372 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %371, align 8
  %373 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %311, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %374 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %373, align 8
  %375 = icmp eq %"class.Ice::CfgNode"** %372, %374
  %376 = ptrtoint %"class.Ice::CfgNode"** %374 to i64
  br i1 %375, label %382, label %377

377:                                              ; preds = %369
  %378 = bitcast %"class.Ice::CfgNode"** %372 to i64*
  store i64 %262, i64* %378, align 8
  %379 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %372, i64 1
  %380 = ptrtoint %"class.Ice::CfgNode"** %379 to i64
  %381 = bitcast %"class.Ice::CfgNode"*** %371 to i64*
  store i64 %380, i64* %381, align 8
  br label %434

382:                                              ; preds = %369
  %383 = ptrtoint %"class.Ice::CfgNode"** %372 to i64
  %384 = bitcast %"class.Ice::CfgNode"*** %371 to i64*
  %385 = bitcast %"class.std::__1::vector.202"* %370 to i64*
  %386 = load i64, i64* %385, align 8
  %387 = sub i64 %383, %386
  %388 = ashr exact i64 %387, 3
  %389 = add nsw i64 %388, 1
  %390 = icmp ugt i64 %389, 2305843009213693951
  br i1 %390, label %391, label %393

391:                                              ; preds = %382
  %392 = bitcast %"class.std::__1::vector.202"* %370 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %392) #14
  unreachable

393:                                              ; preds = %382
  %394 = bitcast %"class.Ice::CfgNode"*** %373 to i64*
  %395 = sub i64 %376, %386
  %396 = ashr exact i64 %395, 3
  %397 = icmp ult i64 %396, 1152921504606846975
  br i1 %397, label %398, label %403

398:                                              ; preds = %393
  %399 = ashr exact i64 %395, 2
  %400 = icmp ult i64 %399, %389
  %401 = select i1 %400, i64 %389, i64 %399
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %409, label %403

403:                                              ; preds = %398, %393
  %404 = phi i64 [ %401, %398 ], [ 2305843009213693951, %393 ]
  %405 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %406 = shl i64 %404, 3
  %407 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %405, i64 %406, i64 8) #12
  %408 = bitcast i8* %407 to %"class.Ice::CfgNode"**
  br label %409

409:                                              ; preds = %403, %398
  %410 = phi i64 [ %404, %403 ], [ 0, %398 ]
  %411 = phi %"class.Ice::CfgNode"** [ %408, %403 ], [ null, %398 ]
  %412 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %411, i64 %388
  %413 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %411, i64 %410
  %414 = ptrtoint %"class.Ice::CfgNode"** %413 to i64
  %415 = bitcast %"class.Ice::CfgNode"** %412 to i64*
  store i64 %262, i64* %415, align 8
  %416 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %412, i64 1
  %417 = ptrtoint %"class.Ice::CfgNode"** %416 to i64
  %418 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %370, i64 0, i32 0, i32 0
  %419 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %418, align 8
  %420 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %371, align 8
  %421 = icmp eq %"class.Ice::CfgNode"** %420, %419
  br i1 %421, label %431, label %422

422:                                              ; preds = %409, %422
  %423 = phi %"class.Ice::CfgNode"** [ %425, %422 ], [ %412, %409 ]
  %424 = phi %"class.Ice::CfgNode"** [ %426, %422 ], [ %420, %409 ]
  %425 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %423, i64 -1
  %426 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %424, i64 -1
  %427 = bitcast %"class.Ice::CfgNode"** %426 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = bitcast %"class.Ice::CfgNode"** %425 to i64*
  store i64 %428, i64* %429, align 8
  %430 = icmp eq %"class.Ice::CfgNode"** %426, %419
  br i1 %430, label %431, label %422

431:                                              ; preds = %422, %409
  %432 = phi %"class.Ice::CfgNode"** [ %412, %409 ], [ %425, %422 ]
  %433 = ptrtoint %"class.Ice::CfgNode"** %432 to i64
  store i64 %433, i64* %385, align 8
  store i64 %417, i64* %384, align 8
  store i64 %414, i64* %394, align 8
  br label %434

434:                                              ; preds = %377, %431
  %435 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %310, i64 1
  %436 = icmp eq %"class.Ice::CfgNode"** %435, %248
  br i1 %436, label %263, label %309

437:                                              ; preds = %446, %303
  switch i32 %63, label %693 [
    i32 16, label %496
    i32 15, label %587
  ]

438:                                              ; preds = %303, %446
  %439 = phi %"class.Ice::CfgNode"** [ %447, %446 ], [ %305, %303 ]
  %440 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %439, align 8
  %441 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %440, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %442 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %440, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %443 = bitcast %"class.llvm::ilist_node_base"** %441 to %"class.llvm::ilist_node_impl"**
  %444 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %443, align 8
  %445 = icmp eq %"class.llvm::ilist_node_impl"* %444, %442
  br i1 %445, label %446, label %449

446:                                              ; preds = %469, %438
  %447 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %439, i64 1
  %448 = icmp eq %"class.Ice::CfgNode"** %447, %307
  br i1 %448, label %437, label %438

449:                                              ; preds = %438, %469
  %450 = phi %"class.llvm::ilist_node_impl"* [ %472, %469 ], [ %444, %438 ]
  %451 = icmp eq %"class.llvm::ilist_node_impl"* %450, null
  %452 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %450, i64 -1, i32 0, i32 1
  %453 = bitcast %"class.llvm::ilist_node_base"** %452 to %"class.Ice::Inst"*
  %454 = select i1 %451, %"class.Ice::Inst"* null, %"class.Ice::Inst"* %453
  %455 = bitcast %"class.Ice::Inst"* %454 to %"class.Ice::InstPhi"*
  %456 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %454, i64 0, i32 13
  %457 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %454, i64 0, i32 13, i32 0, i32 1
  %458 = bitcast %"class.Ice::Operand"*** %457 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = bitcast %"class.std::__1::vector.246"* %456 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = sub i64 %459, %461
  %463 = lshr exact i64 %462, 3
  %464 = trunc i64 %463 to i32
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %469, label %466

466:                                              ; preds = %449
  %467 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %454, i64 1
  %468 = bitcast %"class.Ice::Inst"* %467 to %"class.Ice::CfgNode"***
  br label %474

469:                                              ; preds = %488, %449
  %470 = getelementptr inbounds %"class.llvm::ilist_node_impl", %"class.llvm::ilist_node_impl"* %450, i64 0, i32 0, i32 1
  %471 = bitcast %"class.llvm::ilist_node_base"** %470 to %"class.llvm::ilist_node_impl"**
  %472 = load %"class.llvm::ilist_node_impl"*, %"class.llvm::ilist_node_impl"** %471, align 8
  %473 = icmp eq %"class.llvm::ilist_node_impl"* %472, %442
  br i1 %473, label %446, label %449

474:                                              ; preds = %466, %488
  %475 = phi i64 [ %461, %466 ], [ %489, %488 ]
  %476 = phi i64 [ %459, %466 ], [ %490, %488 ]
  %477 = phi i64 [ 0, %466 ], [ %491, %488 ]
  %478 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %468, align 8
  %479 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %478, i64 %477
  %480 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %479, align 8
  %481 = icmp eq %"class.Ice::CfgNode"* %480, %0
  br i1 %481, label %482, label %488

482:                                              ; preds = %474
  %483 = inttoptr i64 %475 to %"class.Ice::Operand"**
  %484 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %483, i64 %477
  %485 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %484, align 8
  tail call void @_ZN3Ice7InstPhi11addArgumentEPNS_7OperandEPNS_7CfgNodeE(%"class.Ice::InstPhi"* %455, %"class.Ice::Operand"* %485, %"class.Ice::CfgNode"* %149) #12
  %486 = load i64, i64* %458, align 8
  %487 = load i64, i64* %460, align 8
  br label %488

488:                                              ; preds = %474, %482
  %489 = phi i64 [ %475, %474 ], [ %487, %482 ]
  %490 = phi i64 [ %476, %474 ], [ %486, %482 ]
  %491 = add nuw nsw i64 %477, 1
  %492 = sub i64 %490, %489
  %493 = lshr exact i64 %492, 3
  %494 = and i64 %493, 4294967295
  %495 = icmp ult i64 %491, %494
  br i1 %495, label %474, label %469

496:                                              ; preds = %437
  %497 = ptrtoint %"class.Ice::CfgNode"* %20 to i64
  %498 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %499 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %273, align 8
  %500 = icmp eq %"class.Ice::CfgNode"** %498, %499
  %501 = ptrtoint %"class.Ice::CfgNode"** %499 to i64
  br i1 %500, label %506, label %502

502:                                              ; preds = %496
  %503 = bitcast %"class.Ice::CfgNode"** %498 to i64*
  store i64 %497, i64* %503, align 8
  %504 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %498, i64 1
  %505 = ptrtoint %"class.Ice::CfgNode"** %504 to i64
  store i64 %505, i64* %272, align 8
  br label %555

506:                                              ; preds = %496
  %507 = ptrtoint %"class.Ice::CfgNode"** %498 to i64
  %508 = load i64, i64* %270, align 8
  %509 = sub i64 %507, %508
  %510 = ashr exact i64 %509, 3
  %511 = add nsw i64 %510, 1
  %512 = icmp ugt i64 %511, 2305843009213693951
  br i1 %512, label %513, label %515

513:                                              ; preds = %506
  %514 = bitcast %"class.std::__1::vector.202"* %244 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %514) #14
  unreachable

515:                                              ; preds = %506
  %516 = bitcast %"class.Ice::CfgNode"*** %273 to i64*
  %517 = sub i64 %501, %508
  %518 = ashr exact i64 %517, 3
  %519 = icmp ult i64 %518, 1152921504606846975
  br i1 %519, label %520, label %525

520:                                              ; preds = %515
  %521 = ashr exact i64 %517, 2
  %522 = icmp ult i64 %521, %511
  %523 = select i1 %522, i64 %511, i64 %521
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %531, label %525

525:                                              ; preds = %520, %515
  %526 = phi i64 [ %523, %520 ], [ 2305843009213693951, %515 ]
  %527 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %528 = shl i64 %526, 3
  %529 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %527, i64 %528, i64 8) #12
  %530 = bitcast i8* %529 to %"class.Ice::CfgNode"**
  br label %531

531:                                              ; preds = %525, %520
  %532 = phi i64 [ %526, %525 ], [ 0, %520 ]
  %533 = phi %"class.Ice::CfgNode"** [ %530, %525 ], [ null, %520 ]
  %534 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %533, i64 %510
  %535 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %533, i64 %532
  %536 = ptrtoint %"class.Ice::CfgNode"** %535 to i64
  %537 = bitcast %"class.Ice::CfgNode"** %534 to i64*
  store i64 %497, i64* %537, align 8
  %538 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %534, i64 1
  %539 = ptrtoint %"class.Ice::CfgNode"** %538 to i64
  %540 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %245, align 8
  %541 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %542 = icmp eq %"class.Ice::CfgNode"** %541, %540
  br i1 %542, label %552, label %543

543:                                              ; preds = %531, %543
  %544 = phi %"class.Ice::CfgNode"** [ %546, %543 ], [ %534, %531 ]
  %545 = phi %"class.Ice::CfgNode"** [ %547, %543 ], [ %541, %531 ]
  %546 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %544, i64 -1
  %547 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %545, i64 -1
  %548 = bitcast %"class.Ice::CfgNode"** %547 to i64*
  %549 = load i64, i64* %548, align 8
  %550 = bitcast %"class.Ice::CfgNode"** %546 to i64*
  store i64 %549, i64* %550, align 8
  %551 = icmp eq %"class.Ice::CfgNode"** %547, %540
  br i1 %551, label %552, label %543

552:                                              ; preds = %543, %531
  %553 = phi %"class.Ice::CfgNode"** [ %534, %531 ], [ %546, %543 ]
  %554 = ptrtoint %"class.Ice::CfgNode"** %553 to i64
  store i64 %554, i64* %270, align 8
  store i64 %539, i64* %272, align 8
  store i64 %536, i64* %516, align 8
  br label %555

555:                                              ; preds = %502, %552
  %556 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %36, i64 0, i32 9, i32 0, i32 0
  %557 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %556, align 8
  %558 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %36, i64 0, i32 9, i32 0, i32 1
  %559 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %558, align 8
  %560 = icmp eq %"class.Ice::CfgNode"** %557, %559
  %561 = ptrtoint %"class.Ice::CfgNode"** %559 to i64
  br i1 %560, label %569, label %562

562:                                              ; preds = %555, %566
  %563 = phi %"class.Ice::CfgNode"** [ %567, %566 ], [ %557, %555 ]
  %564 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %563, align 8
  %565 = icmp eq %"class.Ice::CfgNode"* %564, %0
  br i1 %565, label %569, label %566

566:                                              ; preds = %562
  %567 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %563, i64 1
  %568 = icmp eq %"class.Ice::CfgNode"** %567, %559
  br i1 %568, label %569, label %562

569:                                              ; preds = %566, %562, %555
  %570 = phi %"class.Ice::CfgNode"** [ %557, %555 ], [ %559, %566 ], [ %563, %562 ]
  %571 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %570, i64 1
  %572 = ptrtoint %"class.Ice::CfgNode"** %571 to i64
  %573 = sub i64 %561, %572
  %574 = ashr exact i64 %573, 3
  %575 = icmp eq i64 %573, 0
  br i1 %575, label %579, label %576

576:                                              ; preds = %569
  %577 = bitcast %"class.Ice::CfgNode"** %570 to i8*
  %578 = bitcast %"class.Ice::CfgNode"** %571 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %577, i8* align 8 %578, i64 %573, i1 false) #10
  br label %579

579:                                              ; preds = %569, %576
  %580 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %570, i64 %574
  store %"class.Ice::CfgNode"** %580, %"class.Ice::CfgNode"*** %558, align 8
  %581 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %113, align 8
  %582 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %581, i64 0, i32 0
  %583 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %584 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %583, align 8
  %585 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %584, i64 120, i64 8) #12
  %586 = bitcast i8* %585 to %"class.Ice::InstBr"*
  tail call void @_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_(%"class.Ice::InstBr"* %586, %"class.Ice::Cfg"* %3, %"class.Ice::Operand"* %582, %"class.Ice::CfgNode"* nonnull %20, %"class.Ice::CfgNode"* %149) #12
  br label %678

587:                                              ; preds = %437
  %588 = ptrtoint %"class.Ice::CfgNode"* %36 to i64
  %589 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %590 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %273, align 8
  %591 = icmp eq %"class.Ice::CfgNode"** %589, %590
  %592 = ptrtoint %"class.Ice::CfgNode"** %590 to i64
  br i1 %591, label %597, label %593

593:                                              ; preds = %587
  %594 = bitcast %"class.Ice::CfgNode"** %589 to i64*
  store i64 %588, i64* %594, align 8
  %595 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %589, i64 1
  %596 = ptrtoint %"class.Ice::CfgNode"** %595 to i64
  store i64 %596, i64* %272, align 8
  br label %646

597:                                              ; preds = %587
  %598 = ptrtoint %"class.Ice::CfgNode"** %589 to i64
  %599 = load i64, i64* %270, align 8
  %600 = sub i64 %598, %599
  %601 = ashr exact i64 %600, 3
  %602 = add nsw i64 %601, 1
  %603 = icmp ugt i64 %602, 2305843009213693951
  br i1 %603, label %604, label %606

604:                                              ; preds = %597
  %605 = bitcast %"class.std::__1::vector.202"* %244 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %605) #14
  unreachable

606:                                              ; preds = %597
  %607 = bitcast %"class.Ice::CfgNode"*** %273 to i64*
  %608 = sub i64 %592, %599
  %609 = ashr exact i64 %608, 3
  %610 = icmp ult i64 %609, 1152921504606846975
  br i1 %610, label %611, label %616

611:                                              ; preds = %606
  %612 = ashr exact i64 %608, 2
  %613 = icmp ult i64 %612, %602
  %614 = select i1 %613, i64 %602, i64 %612
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %622, label %616

616:                                              ; preds = %611, %606
  %617 = phi i64 [ %614, %611 ], [ 2305843009213693951, %606 ]
  %618 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #12
  %619 = shl i64 %617, 3
  %620 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %618, i64 %619, i64 8) #12
  %621 = bitcast i8* %620 to %"class.Ice::CfgNode"**
  br label %622

622:                                              ; preds = %616, %611
  %623 = phi i64 [ %617, %616 ], [ 0, %611 ]
  %624 = phi %"class.Ice::CfgNode"** [ %621, %616 ], [ null, %611 ]
  %625 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %624, i64 %601
  %626 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %624, i64 %623
  %627 = ptrtoint %"class.Ice::CfgNode"** %626 to i64
  %628 = bitcast %"class.Ice::CfgNode"** %625 to i64*
  store i64 %588, i64* %628, align 8
  %629 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %625, i64 1
  %630 = ptrtoint %"class.Ice::CfgNode"** %629 to i64
  %631 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %245, align 8
  %632 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %247, align 8
  %633 = icmp eq %"class.Ice::CfgNode"** %632, %631
  br i1 %633, label %643, label %634

634:                                              ; preds = %622, %634
  %635 = phi %"class.Ice::CfgNode"** [ %637, %634 ], [ %625, %622 ]
  %636 = phi %"class.Ice::CfgNode"** [ %638, %634 ], [ %632, %622 ]
  %637 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %635, i64 -1
  %638 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %636, i64 -1
  %639 = bitcast %"class.Ice::CfgNode"** %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = bitcast %"class.Ice::CfgNode"** %637 to i64*
  store i64 %640, i64* %641, align 8
  %642 = icmp eq %"class.Ice::CfgNode"** %638, %631
  br i1 %642, label %643, label %634

643:                                              ; preds = %634, %622
  %644 = phi %"class.Ice::CfgNode"** [ %625, %622 ], [ %637, %634 ]
  %645 = ptrtoint %"class.Ice::CfgNode"** %644 to i64
  store i64 %645, i64* %270, align 8
  store i64 %630, i64* %272, align 8
  store i64 %627, i64* %607, align 8
  br label %646

646:                                              ; preds = %593, %643
  %647 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %20, i64 0, i32 9, i32 0, i32 0
  %648 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %647, align 8
  %649 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %20, i64 0, i32 9, i32 0, i32 1
  %650 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %649, align 8
  %651 = icmp eq %"class.Ice::CfgNode"** %648, %650
  %652 = ptrtoint %"class.Ice::CfgNode"** %650 to i64
  br i1 %651, label %660, label %653

653:                                              ; preds = %646, %657
  %654 = phi %"class.Ice::CfgNode"** [ %658, %657 ], [ %648, %646 ]
  %655 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %654, align 8
  %656 = icmp eq %"class.Ice::CfgNode"* %655, %0
  br i1 %656, label %660, label %657

657:                                              ; preds = %653
  %658 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %654, i64 1
  %659 = icmp eq %"class.Ice::CfgNode"** %658, %650
  br i1 %659, label %660, label %653

660:                                              ; preds = %657, %653, %646
  %661 = phi %"class.Ice::CfgNode"** [ %648, %646 ], [ %650, %657 ], [ %654, %653 ]
  %662 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %661, i64 1
  %663 = ptrtoint %"class.Ice::CfgNode"** %662 to i64
  %664 = sub i64 %652, %663
  %665 = ashr exact i64 %664, 3
  %666 = icmp eq i64 %664, 0
  br i1 %666, label %670, label %667

667:                                              ; preds = %660
  %668 = bitcast %"class.Ice::CfgNode"** %661 to i8*
  %669 = bitcast %"class.Ice::CfgNode"** %662 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %668, i8* align 8 %669, i64 %664, i1 false) #10
  br label %670

670:                                              ; preds = %660, %667
  %671 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %661, i64 %665
  store %"class.Ice::CfgNode"** %671, %"class.Ice::CfgNode"*** %649, align 8
  %672 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %113, align 8
  %673 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %672, i64 0, i32 0
  %674 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %675 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %674, align 8
  %676 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %675, i64 120, i64 8) #12
  %677 = bitcast i8* %676 to %"class.Ice::InstBr"*
  tail call void @_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_(%"class.Ice::InstBr"* %677, %"class.Ice::Cfg"* %3, %"class.Ice::Operand"* %673, %"class.Ice::CfgNode"* %149, %"class.Ice::CfgNode"* %36) #12
  br label %678

678:                                              ; preds = %670, %579
  %679 = phi %"class.Ice::InstBr"* [ %586, %579 ], [ %677, %670 ]
  %680 = bitcast %"class.Ice::InstBr"* %679 to %"class.Ice::Inst"*
  tail call void @_ZN3Ice7CfgNode10appendInstEPNS_4InstE(%"class.Ice::CfgNode"* %0, %"class.Ice::Inst"* %680) #13
  %681 = getelementptr inbounds %"class.Ice::Inst", %"class.Ice::Inst"* %46, i64 0, i32 13, i32 0, i32 0
  %682 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %681, align 8
  %683 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %682, align 8
  %684 = load %"class.Ice::Variable"*, %"class.Ice::Variable"** %113, align 8
  %685 = getelementptr inbounds %"class.Ice::Variable", %"class.Ice::Variable"* %684, i64 0, i32 0
  %686 = icmp eq %"class.Ice::Operand"* %683, %685
  %687 = getelementptr inbounds %"class.Ice::Operand"*, %"class.Ice::Operand"** %682, i64 1
  %688 = load %"class.Ice::Operand"*, %"class.Ice::Operand"** %687, align 8
  %689 = icmp eq %"class.Ice::Operand"* %688, %685
  %690 = select i1 %689, %"class.Ice::Operand"* %683, %"class.Ice::Operand"* null
  %691 = select i1 %686, %"class.Ice::Operand"* %688, %"class.Ice::Operand"* %690
  %692 = load %"class.Ice::Operand"**, %"class.Ice::Operand"*** %23, align 8
  store %"class.Ice::Operand"* %691, %"class.Ice::Operand"** %692, align 8
  store i8 1, i8* %72, align 8
  br label %693

693:                                              ; preds = %66, %107, %141, %137, %145, %437, %33, %71, %22, %1, %17, %678, %112
  %694 = phi %"class.Ice::CfgNode"* [ null, %112 ], [ %149, %678 ], [ null, %17 ], [ null, %22 ], [ null, %1 ], [ null, %71 ], [ null, %33 ], [ null, %437 ], [ null, %145 ], [ null, %137 ], [ null, %141 ], [ null, %107 ], [ null, %66 ]
  ret %"class.Ice::CfgNode"* %694
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK3Ice17VariablesMetadata13isSingleBlockEPKNS_8VariableE(%"class.Ice::VariablesMetadata"*, %"class.Ice::Variable"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice7InstPhi11addArgumentEPNS_7OperandEPNS_7CfgNodeE(%"class.Ice::InstPhi"*, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice10InstAssignC1EPNS_3CfgEPNS_8VariableEPNS_7OperandE(%"class.Ice::InstAssign"*, %"class.Ice::Cfg"*, %"class.Ice::Variable"*, %"class.Ice::Operand"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.384", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #12
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.384"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"struct.std::__1::pair.384", %"struct.std::__1::pair.384"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.384", %"struct.std::__1::pair.384"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.384"* nonnull dereferenceable(16) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #13
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.384"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !3

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #12
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.384"**
  %15 = bitcast %"struct.std::__1::pair.384"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.384"*, %"struct.std::__1::pair.384"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.384", %"struct.std::__1::pair.384"* %16, i64 1
  store %"struct.std::__1::pair.384"* %17, %"struct.std::__1::pair.384"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = tail call noalias i8* @malloc(i64 %14) #12
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #13
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #12
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE6resizeEm(%"class.std::__1::vector.216"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.Ice::Liveness::LivenessNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 152
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.Ice::Liveness::LivenessNode"*
  br i1 %10, label %12, label %14

12:                                               ; preds = %2
  %13 = sub i64 %1, %9
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.216"* %0, i64 %13) #13
  br label %18

14:                                               ; preds = %2
  %15 = icmp ugt i64 %9, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %11, i64 %1
  tail call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_(%"class.std::__1::vector.216"* %0, %"class.Ice::Liveness::LivenessNode"* %17) #12
  br label %18

18:                                               ; preds = %14, %16, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE8__appendEm(%"class.std::__1::vector.216"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.Ice::Liveness::LivenessNode"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = sdiv exact i64 %10, 152
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %9 to %"class.Ice::Liveness::LivenessNode"*
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %14, i64 %1
  %18 = inttoptr i64 %9 to i8*
  %19 = add i64 %1, -1
  %20 = getelementptr %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %14, i64 %19, i32 0
  %21 = bitcast i32* %20 to i8*
  %22 = sub i64 0, %9
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = ptrtoint i8* %23 to i64
  %25 = urem i64 %24, 152
  %26 = add i64 %24, 152
  %27 = sub i64 %26, %25
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %27, i1 false) #10
  %28 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %17 to i64
  br label %29

29:                                               ; preds = %13, %16
  %30 = phi i64 [ %28, %16 ], [ %9, %13 ]
  store i64 %30, i64* %8, align 8
  br label %108

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %33 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 1, i32 0
  %39 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  %40 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %41 = load i64, i64* %39, align 8
  %42 = sub i64 %9, %41
  %43 = sdiv exact i64 %42, 152
  %44 = add i64 %43, %1
  %45 = icmp ugt i64 %44, 121360158379668102
  br i1 %45, label %46, label %48

46:                                               ; preds = %31
  %47 = bitcast %"class.std::__1::vector.216"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #14
  unreachable

48:                                               ; preds = %31
  %49 = sub i64 %6, %41
  %50 = sdiv exact i64 %49, 152
  %51 = icmp ult i64 %50, 60680079189834051
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  store %"class.Ice::Liveness::LivenessNode"* null, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  store %"struct.Ice::sz_allocator.233"* %32, %"struct.Ice::sz_allocator.233"** %38, align 8
  br label %58

53:                                               ; preds = %48
  %54 = shl nsw i64 %50, 1
  %55 = icmp ult i64 %54, %44
  %56 = select i1 %55, i64 %44, i64 %54
  store %"class.Ice::Liveness::LivenessNode"* null, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  store %"struct.Ice::sz_allocator.233"* %32, %"struct.Ice::sz_allocator.233"** %38, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %52, %53
  %59 = phi i64 [ 121360158379668102, %52 ], [ %56, %53 ]
  %60 = tail call %"class.Ice::Liveness::LivenessNode"* @_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.233"* %32, i64 %59) #12
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %59, %58 ], [ 0, %53 ]
  %63 = phi %"class.Ice::Liveness::LivenessNode"* [ %60, %58 ], [ null, %53 ]
  store %"class.Ice::Liveness::LivenessNode"* %63, %"class.Ice::Liveness::LivenessNode"** %34, align 8
  %64 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %63, i64 %43
  %65 = bitcast %"class.Ice::Liveness::LivenessNode"* %64 to i8*
  store %"class.Ice::Liveness::LivenessNode"* %64, %"class.Ice::Liveness::LivenessNode"** %35, align 8
  %66 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %63, i64 %62
  store %"class.Ice::Liveness::LivenessNode"* %66, %"class.Ice::Liveness::LivenessNode"** %37, align 8
  %67 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %64, i64 %1
  %68 = mul nsw i64 %1, 152
  %69 = add i64 %68, -152
  %70 = urem i64 %69, 152
  %71 = sub i64 %69, %70
  %72 = add i64 %71, 152
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 %72, i1 false)
  %73 = bitcast %"class.Ice::Liveness::LivenessNode"** %36 to i64*
  %74 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %67 to i64
  store i64 %74, i64* %73, align 8
  call void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE(%"class.std::__1::vector.216"* %0, %"struct.std::__1::__split_buffer"* nonnull dereferenceable(40) %3) #13
  %75 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %35, align 8
  %76 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %77 = icmp eq %"class.Ice::Liveness::LivenessNode"* %76, %75
  br i1 %77, label %107, label %78

78:                                               ; preds = %61, %104
  %79 = phi %"class.Ice::Liveness::LivenessNode"* [ %105, %104 ], [ %76, %61 ]
  %80 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1
  store %"class.Ice::Liveness::LivenessNode"* %80, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %81 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 6, i32 0, i32 0
  %82 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %81, align 8
  %83 = icmp eq %"struct.std::__1::pair"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %78
  %85 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  %86 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 6, i32 0, i32 1
  %87 = bitcast %"struct.std::__1::pair"** %86 to i64*
  store i64 %85, i64* %87, align 8
  br label %88

88:                                               ; preds = %84, %78
  %89 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 5, i32 0, i32 0
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = icmp eq %"struct.std::__1::pair"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %94 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 5, i32 0, i32 1
  %95 = bitcast %"struct.std::__1::pair"** %94 to i64*
  store i64 %93, i64* %95, align 8
  br label %96

96:                                               ; preds = %92, %88
  %97 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 2, i32 0, i32 0
  %98 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %97, align 8
  %99 = icmp eq %"class.Ice::Variable"** %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = ptrtoint %"class.Ice::Variable"** %98 to i64
  %102 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %79, i64 -1, i32 2, i32 0, i32 1
  %103 = bitcast %"class.Ice::Variable"*** %102 to i64*
  store i64 %101, i64* %103, align 8
  br label %104

104:                                              ; preds = %100, %96
  %105 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %36, align 8
  %106 = icmp eq %"class.Ice::Liveness::LivenessNode"* %105, %75
  br i1 %106, label %107, label %78

107:                                              ; preds = %104, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #10
  br label %108

108:                                              ; preds = %107, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE17__destruct_at_endEPS3_(%"class.std::__1::vector.216"*, %"class.Ice::Liveness::LivenessNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  %5 = icmp eq %"class.Ice::Liveness::LivenessNode"* %4, %1
  br i1 %5, label %34, label %6

6:                                                ; preds = %2, %32
  %7 = phi %"class.Ice::Liveness::LivenessNode"* [ %8, %32 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1
  %9 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 6, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %14 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 6, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  store i64 %13, i64* %15, align 8
  br label %16

16:                                               ; preds = %12, %6
  %17 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 5, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.std::__1::pair"* %18 to i64
  %22 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 5, i32 0, i32 1
  %23 = bitcast %"struct.std::__1::pair"** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %20, %16
  %25 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 2, i32 0, i32 0
  %26 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %25, align 8
  %27 = icmp eq %"class.Ice::Variable"** %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.Ice::Variable"** %26 to i64
  %30 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %7, i64 -1, i32 2, i32 0, i32 1
  %31 = bitcast %"class.Ice::Variable"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %28, %24
  %33 = icmp eq %"class.Ice::Liveness::LivenessNode"* %8, %1
  br i1 %33, label %34, label %6

34:                                               ; preds = %32, %2
  store %"class.Ice::Liveness::LivenessNode"* %1, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice8Liveness12LivenessNodeENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS6_EE(%"class.std::__1::vector.216"*, %"struct.std::__1::__split_buffer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  %8 = icmp eq %"class.Ice::Liveness::LivenessNode"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %4 to i64
  %11 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  br label %29

14:                                               ; preds = %2
  %15 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.Ice::Liveness::LivenessNode"* [ %22, %16 ], [ %15, %14 ]
  %18 = phi %"class.Ice::Liveness::LivenessNode"* [ %20, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %17, i64 -1
  %20 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %18, i64 -1
  tail call void @_ZN3Ice8Liveness12LivenessNodeC2ERKS1_(%"class.Ice::Liveness::LivenessNode"* %19, %"class.Ice::Liveness::LivenessNode"* dereferenceable(152) %20) #12
  %21 = load %"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  %22 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %21, i64 -1
  store %"class.Ice::Liveness::LivenessNode"* %22, %"class.Ice::Liveness::LivenessNode"** %7, align 8
  %23 = icmp eq %"class.Ice::Liveness::LivenessNode"* %20, %4
  br i1 %23, label %24, label %16

24:                                               ; preds = %16
  %25 = ptrtoint %"class.Ice::Liveness::LivenessNode"* %22 to i64
  %26 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.Ice::Liveness::LivenessNode"** %7 to i64*
  br label %29

29:                                               ; preds = %9, %24
  %30 = phi i64* [ %11, %9 ], [ %28, %24 ]
  %31 = phi i64* [ %13, %9 ], [ %26, %24 ]
  %32 = phi i64 [ %12, %9 ], [ %25, %24 ]
  %33 = phi i64 [ %10, %9 ], [ %27, %24 ]
  store i64 %32, i64* %31, align 8
  store i64 %33, i64* %30, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %35 = bitcast %"class.Ice::Liveness::LivenessNode"** %5 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.Ice::Liveness::LivenessNode"** %34 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.Ice::Liveness::LivenessNode"** %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.Ice::Liveness::LivenessNode"** %40 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %41, align 8
  store i64 %42, i64* %43, align 8
  %45 = load i64, i64* %30, align 8
  %46 = bitcast %"struct.std::__1::__split_buffer"* %1 to i64*
  store i64 %45, i64* %46, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Liveness::LivenessNode"* @_ZN3Ice12sz_allocatorINS_8Liveness12LivenessNodeENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.233"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.233", %"struct.Ice::sz_allocator.233"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #12
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = mul i64 %1, 152
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #12
  %12 = bitcast i8* %11 to %"class.Ice::Liveness::LivenessNode"*
  ret %"class.Ice::Liveness::LivenessNode"* %12
}

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice8Liveness12LivenessNodeC2ERKS1_(%"class.Ice::Liveness::LivenessNode"*, %"class.Ice::Liveness::LivenessNode"* dereferenceable(152)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.Ice::Liveness::LivenessNode"* %1 to i64*
  %4 = bitcast %"class.Ice::Liveness::LivenessNode"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 2
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.218"* %6, %"class.std::__1::vector.218"* dereferenceable(32) %7) #13
  %8 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 3
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"* %8, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %9) #13
  %10 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 4
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"* %10, %"class.Ice::BitVectorTmpl"* dereferenceable(24) %11) #13
  %12 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 5
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.224"* %12, %"class.std::__1::vector.224"* dereferenceable(32) %13) #13
  %14 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.Ice::Liveness::LivenessNode", %"class.Ice::Liveness::LivenessNode"* %1, i64 0, i32 6
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.224"* %14, %"class.std::__1::vector.224"* dereferenceable(32) %15) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.218"*, %"class.std::__1::vector.218"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.221"* %6 to i64*
  %8 = bitcast %"class.std::__1::vector.218"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"class.Ice::Variable"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.218"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = ashr exact i64 %14, 3
  tail call void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.218"* %0, i64 %17) #13
  %18 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %18, align 8
  %20 = load %"class.Ice::Variable"**, %"class.Ice::Variable"*** %9, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.Ice::Variable"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq %"class.Ice::Variable"** %19, %20
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to i64*
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ %23, %25 ], [ %36, %27 ]
  %29 = phi i64* [ %26, %25 ], [ %38, %27 ]
  %30 = phi %"class.Ice::Variable"** [ %19, %25 ], [ %33, %27 ]
  %31 = bitcast %"class.Ice::Variable"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  %33 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %30, i64 1
  %34 = inttoptr i64 %28 to %"class.Ice::Variable"**
  %35 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %34, i64 1
  %36 = ptrtoint %"class.Ice::Variable"** %35 to i64
  %37 = icmp eq %"class.Ice::Variable"** %33, %20
  %38 = bitcast %"class.Ice::Variable"** %35 to i64*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27
  %40 = ptrtoint %"class.Ice::Variable"** %35 to i64
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i64 [ %23, %16 ], [ %40, %39 ]
  store i64 %42, i64* %22, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEEC2ERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 3
  %8 = bitcast %"struct.Ice::sz_allocator.223"* %7 to i64*
  %9 = bitcast %"struct.Ice::sz_allocator.223"* %6 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  store i64* null, i64** %13, align 8
  %14 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  br label %29

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 8
  %17 = add i32 %16, 63
  %18 = lshr i32 %17, 6
  %19 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  store i32 %18, i32* %19, align 4
  %20 = zext i32 %18 to i64
  %21 = tail call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.223"* %6, i64 %20) #13
  %22 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  store i64* %21, i64** %22, align 8
  %23 = bitcast i64* %21 to i8*
  %24 = bitcast %"class.Ice::BitVectorTmpl"* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* %19, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 %28, i1 false)
  br label %29

29:                                               ; preds = %15, %12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEEC2ERKS7_(%"class.std::__1::vector.224"*, %"class.std::__1::vector.224"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %4 = bitcast %"class.llvm::BumpPtrAllocatorImpl"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.228"* %6 to i64*
  %8 = bitcast %"class.std::__1::vector.224"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.224"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = ashr exact i64 %14, 3
  tail call void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.224"* %0, i64 %17) #13
  %18 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %1, i64 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq %"struct.std::__1::pair"* %19, %20
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to i64*
  br label %27

27:                                               ; preds = %27, %25
  %28 = phi i64 [ %23, %25 ], [ %36, %27 ]
  %29 = phi i64* [ %26, %25 ], [ %38, %27 ]
  %30 = phi %"struct.std::__1::pair"* [ %19, %25 ], [ %33, %27 ]
  %31 = bitcast %"struct.std::__1::pair"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  store i64 %32, i64* %29, align 4
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 1
  %34 = inttoptr i64 %28 to %"struct.std::__1::pair"*
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  %36 = ptrtoint %"struct.std::__1::pair"* %35 to i64
  %37 = icmp eq %"struct.std::__1::pair"* %33, %20
  %38 = bitcast %"struct.std::__1::pair"* %35 to i64*
  br i1 %37, label %39, label %27

39:                                               ; preds = %27
  %40 = ptrtoint %"struct.std::__1::pair"* %35 to i64
  br label %41

41:                                               ; preds = %39, %16
  %42 = phi i64 [ %23, %16 ], [ %40, %39 ]
  store i64 %42, i64* %22, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3Ice8VariableENS1_12sz_allocatorIS3_NS1_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.218"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.218"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #14
  unreachable

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %8 = tail call %"class.Ice::Variable"** @_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.222"* %7, i64 %1) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 1
  store %"class.Ice::Variable"** %8, %"class.Ice::Variable"*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 0
  store %"class.Ice::Variable"** %8, %"class.Ice::Variable"*** %10, align 8
  %11 = getelementptr inbounds %"class.Ice::Variable"*, %"class.Ice::Variable"** %8, i64 %1
  %12 = getelementptr inbounds %"class.std::__1::vector.218", %"class.std::__1::vector.218"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.Ice::Variable"** %11, %"class.Ice::Variable"*** %12, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"class.Ice::Variable"** @_ZN3Ice12sz_allocatorIPNS_8VariableENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.222"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.222", %"struct.Ice::sz_allocator.222"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #12
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #12
  %12 = bitcast i8* %11 to %"class.Ice::Variable"**
  ret %"class.Ice::Variable"** %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.223"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.223", %"struct.Ice::sz_allocator.223"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #12
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #12
  %12 = bitcast i8* %11 to i64*
  ret i64* %12
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIjiEEN3Ice12sz_allocatorIS2_NS3_23LivenessAllocatorTraitsEEEE11__vallocateEm(%"class.std::__1::vector.224"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.224"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #14
  unreachable

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %8 = tail call %"struct.std::__1::pair"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.229"* %7, i64 %1) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 1
  store %"struct.std::__1::pair"* %8, %"struct.std::__1::pair"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 0
  store %"struct.std::__1::pair"* %8, %"struct.std::__1::pair"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %1
  %12 = getelementptr inbounds %"class.std::__1::vector.224", %"class.std::__1::vector.224"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"** %12, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3Ice12sz_allocatorINSt3__14pairIjiEENS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.229"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.Ice::sz_allocator.229", %"struct.Ice::sz_allocator.229"* %0, i64 0, i32 0
  %4 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  %5 = icmp eq %"class.llvm::BumpPtrAllocatorImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice23LivenessAllocatorTraits7currentEv() #12
  store %"class.llvm::BumpPtrAllocatorImpl"* %7, %"class.llvm::BumpPtrAllocatorImpl"** %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.llvm::BumpPtrAllocatorImpl"* [ %7, %6 ], [ %4, %2 ]
  %10 = shl i64 %1, 3
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 4) #12
  %12 = bitcast i8* %11 to %"struct.std::__1::pair"*
  ret %"struct.std::__1::pair"* %12
}

; Function Attrs: optsize
declare void @_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7CfgNodeE(%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::CfgNode"*) unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN3Ice9LiveRange10addSegmentEiiPNS_7CfgNodeE(%"class.Ice::LiveRange"*, i32, i32, %"class.Ice::CfgNode"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice6InstBrC1EPNS_3CfgEPNS_7OperandEPNS_7CfgNodeES6_(%"class.Ice::InstBr"*, %"class.Ice::Cfg"*, %"class.Ice::Operand"*, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN3Ice4Inst8renumberEPNS_3CfgE(%"class.Ice::Inst"*, %"class.Ice::Cfg"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 63
  %6 = lshr i32 %5, 6
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %6
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds i64, i64* %12, i64 %13
  %15 = sub i32 %8, %6
  %16 = bitcast i64* %14 to i8*
  %17 = sext i1 %1 to i8
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 %17, i64 %19, i1 false) #10
  %20 = load i32, i32* %3, align 8
  br label %21

21:                                               ; preds = %10, %2
  %22 = phi i32 [ %20, %10 ], [ %4, %2 ]
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  %27 = shl i64 -1, %26
  br i1 %1, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = add nsw i32 %6, -1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = or i64 %34, %27
  store i64 %35, i64* %33, align 8
  br label %45

36:                                               ; preds = %25
  %37 = xor i64 %27, -1
  %38 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = add nsw i32 %6, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %39, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, %37
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %28, %36, %21
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE4growEj(%"class.Ice::BitVectorTmpl"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %1, 63
  %6 = lshr i32 %5, 6
  %7 = shl i32 %4, 1
  %8 = icmp ult i32 %6, %7
  %9 = select i1 %8, i32 %7, i32 %6
  store i32 %9, i32* %3, align 4
  %10 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 3
  %11 = zext i32 %9 to i64
  %12 = tail call i64* @_ZN3Ice12sz_allocatorImNS_23LivenessAllocatorTraitsEE8allocateEm(%"struct.Ice::sz_allocator.223"* %10, i64 %11) #13
  %13 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = bitcast i64* %12 to i8*
  %18 = bitcast i64* %14 to i8*
  %19 = zext i32 %4 to i64
  %20 = shl nuw nsw i64 %19, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %18, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %2, %16
  store i64* %12, i64** %13, align 8
  tail call void @_ZN3Ice13BitVectorTmplINS_17LivenessAllocatorEE15set_unused_bitsEb(%"class.Ice::BitVectorTmpl"* %0, i1 zeroext false) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice13BitVectorTmplINS_17LivenessAllocatorEEeqERKS2_(%"class.Ice::BitVectorTmpl"*, %"class.Ice::BitVectorTmpl"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 63
  %6 = lshr i32 %5, 6
  %7 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 63
  %10 = lshr i32 %9, 6
  %11 = icmp ult i32 %10, %6
  %12 = select i1 %11, i32 %10, i32 %6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %30, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  br label %19

19:                                               ; preds = %14, %27
  %20 = phi i32 [ 0, %14 ], [ %28, %27 ]
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i64, i64* %16, i64 %21
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i64, i64* %18, i64 %21
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %27, label %58

27:                                               ; preds = %19
  %28 = add i32 %20, 1
  %29 = icmp eq i32 %28, %12
  br i1 %29, label %30, label %19

30:                                               ; preds = %27, %2
  %31 = icmp ugt i32 %6, %10
  br i1 %31, label %32, label %44

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  br label %37

35:                                               ; preds = %37
  %36 = icmp eq i32 %43, %6
  br i1 %36, label %58, label %37

37:                                               ; preds = %32, %35
  %38 = phi i32 [ %12, %32 ], [ %43, %35 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i64, i64* %34, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  %43 = add i32 %38, 1
  br i1 %42, label %35, label %58

44:                                               ; preds = %30
  %45 = icmp eq i32 %6, %10
  br i1 %45, label %58, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.Ice::BitVectorTmpl", %"class.Ice::BitVectorTmpl"* %1, i64 0, i32 0
  %48 = load i64*, i64** %47, align 8
  br label %51

49:                                               ; preds = %51
  %50 = icmp eq i32 %57, %10
  br i1 %50, label %58, label %51

51:                                               ; preds = %46, %49
  %52 = phi i32 [ %6, %46 ], [ %57, %49 ]
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i64, i64* %48, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  %57 = add i32 %52, 1
  br i1 %56, label %49, label %58

58:                                               ; preds = %19, %51, %49, %37, %35, %44
  %59 = phi i1 [ true, %44 ], [ false, %37 ], [ true, %35 ], [ false, %51 ], [ true, %49 ], [ false, %19 ]
  ret i1 %59
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %305, %3
  %5 = phi %"struct.std::__1::pair"* [ %1, %3 ], [ %275, %305 ]
  %6 = phi %"struct.std::__1::pair"* [ %0, %3 ], [ %17, %305 ]
  %7 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -2
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %13 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  br label %14

14:                                               ; preds = %314, %4
  %15 = phi %"struct.std::__1::pair"* [ %6, %4 ], [ %315, %314 ]
  br label %16

16:                                               ; preds = %171, %14
  %17 = phi %"struct.std::__1::pair"* [ %15, %14 ], [ %141, %171 ]
  %18 = ptrtoint %"struct.std::__1::pair"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %55 [
    i64 0, label %318
    i64 1, label %318
    i64 2, label %21
    i64 3, label %40
    i64 4, label %44
    i64 5, label %49
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %23, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = icmp ult i32 %25, %23
  br i1 %28, label %318, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %318

35:                                               ; preds = %21, %29
  store i32 %23, i32* %24, align 4
  store i32 %25, i32* %22, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %36, align 4
  store i32 %38, i32* %37, align 4
  br label %318

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %43 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"* %42, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %318

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %45, %"struct.std::__1::pair"* %46, %"struct.std::__1::pair"* %47, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %318

49:                                               ; preds = %16
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 2
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 3
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %50, %"struct.std::__1::pair"* %51, %"struct.std::__1::pair"* %52, %"struct.std::__1::pair"* %53, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %318

55:                                               ; preds = %16
  %56 = icmp slt i64 %19, 56
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %5, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %318

58:                                               ; preds = %55
  %59 = icmp sgt i64 %19, 7992
  %60 = sdiv i64 %20, 2
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %60
  br i1 %59, label %62, label %67

62:                                               ; preds = %58
  %63 = sdiv i64 %20, 4
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %63
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 %63
  %66 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %64, %"struct.std::__1::pair"* %61, %"struct.std::__1::pair"* %65, %"struct.std::__1::pair"* %8, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %69

67:                                               ; preds = %58
  %68 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %61, %"struct.std::__1::pair"* %8, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi i32 [ %66, %62 ], [ %68, %67 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp ult i32 %72, %74
  br i1 %75, label %203, label %76

76:                                               ; preds = %69
  %77 = icmp ult i32 %74, %72
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %60, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %80, %82
  br i1 %83, label %203, label %84

84:                                               ; preds = %78, %76
  %85 = icmp eq %"struct.std::__1::pair"* %17, %9
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %60, i32 1
  br label %180

88:                                               ; preds = %193, %84
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %90 = load i32, i32* %10, align 4
  %91 = icmp ult i32 %72, %90
  br i1 %91, label %124, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %72
  br i1 %93, label %99, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = load i32, i32* %11, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %124, label %99

99:                                               ; preds = %94, %92
  %100 = icmp eq %"struct.std::__1::pair"* %89, %8
  br i1 %100, label %318, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  br label %103

103:                                              ; preds = %101, %121
  %104 = phi %"struct.std::__1::pair"* [ %89, %101 ], [ %122, %121 ]
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp ult i32 %72, %106
  br i1 %107, label %115, label %108

108:                                              ; preds = %103
  %109 = icmp ult i32 %106, %72
  br i1 %109, label %121, label %110

110:                                              ; preds = %108
  %111 = load i32, i32* %102, align 4
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %103, %110
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 0
  store i32 %90, i32* %116, align 4
  store i32 %106, i32* %10, align 4
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %12, align 4
  store i32 %119, i32* %117, align 4
  store i32 %118, i32* %12, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 1
  br label %124

121:                                              ; preds = %108, %110
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 1
  %123 = icmp eq %"struct.std::__1::pair"* %122, %8
  br i1 %123, label %318, label %103

124:                                              ; preds = %88, %94, %115
  %125 = phi %"struct.std::__1::pair"* [ %120, %115 ], [ %89, %94 ], [ %89, %88 ]
  %126 = icmp eq %"struct.std::__1::pair"* %125, %8
  br i1 %126, label %318, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  br label %129

129:                                              ; preds = %127, %173
  %130 = phi %"struct.std::__1::pair"* [ %179, %173 ], [ %125, %127 ]
  %131 = phi %"struct.std::__1::pair"* [ %159, %173 ], [ %8, %127 ]
  %132 = load i32, i32* %71, align 4
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp ult i32 %132, %134
  br i1 %135, label %140, label %144

136:                                              ; preds = %148, %153
  %137 = phi i32* [ %154, %153 ], [ %146, %148 ]
  %138 = phi i32 [ %155, %153 ], [ %145, %148 ]
  %139 = bitcast i32* %137 to %"struct.std::__1::pair"*
  br label %140

140:                                              ; preds = %136, %129
  %141 = phi %"struct.std::__1::pair"* [ %130, %129 ], [ %139, %136 ]
  %142 = phi i32* [ %133, %129 ], [ %137, %136 ]
  %143 = phi i32 [ %134, %129 ], [ %138, %136 ]
  br label %157

144:                                              ; preds = %129, %153
  %145 = phi i32 [ %155, %153 ], [ %134, %129 ]
  %146 = phi i32* [ %154, %153 ], [ %133, %129 ]
  %147 = icmp ult i32 %145, %132
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = load i32, i32* %128, align 4
  %150 = getelementptr inbounds i32, i32* %146, i64 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %136, label %153

153:                                              ; preds = %144, %148
  %154 = getelementptr inbounds i32, i32* %146, i64 2
  %155 = load i32, i32* %154, align 4
  %156 = icmp ult i32 %132, %155
  br i1 %156, label %136, label %144

157:                                              ; preds = %170, %140
  %158 = phi %"struct.std::__1::pair"* [ %131, %140 ], [ %159, %170 ]
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = icmp ult i32 %132, %161
  br i1 %162, label %170, label %163

163:                                              ; preds = %157
  %164 = icmp ult i32 %161, %132
  br i1 %164, label %171, label %165

165:                                              ; preds = %163
  %166 = load i32, i32* %128, align 4
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %166, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %165, %157
  br label %157

171:                                              ; preds = %163, %165
  %172 = icmp ult %"struct.std::__1::pair"* %141, %159
  br i1 %172, label %173, label %16

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 0, i32 0
  store i32 %161, i32* %142, align 4
  store i32 %143, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 0, i32 1
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1, i32 1
  %177 = load i32, i32* %175, align 4
  %178 = load i32, i32* %176, align 4
  store i32 %178, i32* %175, align 4
  store i32 %177, i32* %176, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 1
  br label %129

180:                                              ; preds = %86, %193
  %181 = phi %"struct.std::__1::pair"* [ %9, %86 ], [ %194, %193 ]
  %182 = phi %"struct.std::__1::pair"* [ %8, %86 ], [ %181, %193 ]
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp ult i32 %184, %74
  br i1 %185, label %196, label %186

186:                                              ; preds = %180
  %187 = icmp ult i32 %74, %184
  br i1 %187, label %193, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %182, i64 -1, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = load i32, i32* %87, align 4
  %192 = icmp slt i32 %190, %191
  br i1 %192, label %196, label %193

193:                                              ; preds = %188, %186
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 -1
  %195 = icmp eq %"struct.std::__1::pair"* %17, %194
  br i1 %195, label %88, label %180

196:                                              ; preds = %180, %188
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 0, i32 0
  store i32 %184, i32* %71, align 4
  store i32 %72, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %182, i64 -1, i32 1
  %200 = load i32, i32* %198, align 4
  %201 = load i32, i32* %199, align 4
  store i32 %201, i32* %198, align 4
  store i32 %200, i32* %199, align 4
  %202 = add i32 %70, 1
  br label %203

203:                                              ; preds = %69, %78, %196
  %204 = phi i32 [ %202, %196 ], [ %70, %78 ], [ %70, %69 ]
  %205 = phi %"struct.std::__1::pair"* [ %181, %196 ], [ %8, %78 ], [ %8, %69 ]
  %206 = ptrtoint %"struct.std::__1::pair"* %17 to i64
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %208 = icmp ult %"struct.std::__1::pair"* %207, %205
  br i1 %208, label %209, label %272

209:                                              ; preds = %203, %263
  %210 = phi %"struct.std::__1::pair"* [ %270, %263 ], [ %61, %203 ]
  %211 = phi i32 [ %268, %263 ], [ %204, %203 ]
  %212 = phi %"struct.std::__1::pair"* [ %271, %263 ], [ %207, %203 ]
  %213 = phi %"struct.std::__1::pair"* [ %259, %263 ], [ %205, %203 ]
  %214 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %210, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %210, i64 0, i32 1
  br label %217

217:                                              ; preds = %235, %209
  %218 = phi %"struct.std::__1::pair"* [ %212, %209 ], [ %236, %235 ]
  %219 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = icmp ult i32 %220, %215
  br i1 %221, label %235, label %222

222:                                              ; preds = %217
  %223 = icmp ult i32 %215, %220
  br i1 %223, label %224, label %230

224:                                              ; preds = %230, %222
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %213, i64 -1
  %227 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %226, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = icmp ult i32 %228, %215
  br i1 %229, label %257, label %237

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = load i32, i32* %216, align 4
  %234 = icmp slt i32 %232, %233
  br i1 %234, label %235, label %224

235:                                              ; preds = %217, %230
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 1
  br label %217

237:                                              ; preds = %224, %248
  %238 = phi i32 [ %250, %248 ], [ %228, %224 ]
  %239 = phi i32* [ %249, %248 ], [ %227, %224 ]
  %240 = phi %"struct.std::__1::pair"* [ %241, %248 ], [ %213, %224 ]
  %241 = bitcast i32* %239 to %"struct.std::__1::pair"*
  %242 = icmp ult i32 %215, %238
  br i1 %242, label %248, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %240, i64 -1, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = load i32, i32* %216, align 4
  %247 = icmp slt i32 %245, %246
  br i1 %247, label %255, label %248

248:                                              ; preds = %243, %237
  %249 = getelementptr inbounds i32, i32* %239, i64 -2
  %250 = load i32, i32* %249, align 4
  %251 = icmp ult i32 %250, %215
  br i1 %251, label %252, label %237

252:                                              ; preds = %248
  %253 = bitcast i32* %239 to %"struct.std::__1::pair"*
  %254 = bitcast i32* %249 to %"struct.std::__1::pair"*
  br label %257

255:                                              ; preds = %243
  %256 = bitcast i32* %239 to %"struct.std::__1::pair"*
  br label %257

257:                                              ; preds = %252, %255, %224
  %258 = phi %"struct.std::__1::pair"* [ %213, %224 ], [ %253, %252 ], [ %240, %255 ]
  %259 = phi %"struct.std::__1::pair"* [ %226, %224 ], [ %254, %252 ], [ %256, %255 ]
  %260 = phi i32* [ %227, %224 ], [ %249, %252 ], [ %239, %255 ]
  %261 = phi i32 [ %228, %224 ], [ %250, %252 ], [ %238, %255 ]
  %262 = icmp ugt %"struct.std::__1::pair"* %218, %259
  br i1 %262, label %272, label %263

263:                                              ; preds = %257
  store i32 %261, i32* %225, align 4
  store i32 %220, i32* %260, align 4
  %264 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 0, i32 1
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %258, i64 -1, i32 1
  %266 = load i32, i32* %264, align 4
  %267 = load i32, i32* %265, align 4
  store i32 %267, i32* %264, align 4
  store i32 %266, i32* %265, align 4
  %268 = add i32 %211, 1
  %269 = icmp eq %"struct.std::__1::pair"* %210, %218
  %270 = select i1 %269, %"struct.std::__1::pair"* %259, %"struct.std::__1::pair"* %210
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %218, i64 1
  br label %209

272:                                              ; preds = %257, %203
  %273 = phi %"struct.std::__1::pair"* [ %61, %203 ], [ %210, %257 ]
  %274 = phi i32 [ %204, %203 ], [ %211, %257 ]
  %275 = phi %"struct.std::__1::pair"* [ %207, %203 ], [ %218, %257 ]
  %276 = icmp eq %"struct.std::__1::pair"* %275, %273
  br i1 %276, label %297, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = icmp ult i32 %279, %281
  br i1 %282, label %291, label %283

283:                                              ; preds = %277
  %284 = icmp ult i32 %281, %279
  br i1 %284, label %297, label %285

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 0, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %291, label %297

291:                                              ; preds = %277, %285
  store i32 %279, i32* %280, align 4
  store i32 %281, i32* %278, align 4
  %292 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 0, i32 1
  %293 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 1
  %294 = load i32, i32* %292, align 4
  %295 = load i32, i32* %293, align 4
  store i32 %295, i32* %292, align 4
  store i32 %294, i32* %293, align 4
  %296 = add i32 %274, 1
  br label %297

297:                                              ; preds = %283, %272, %291, %285
  %298 = phi i32 [ %296, %291 ], [ %274, %285 ], [ %274, %272 ], [ %274, %283 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %307

300:                                              ; preds = %297
  %301 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %275, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  %302 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 1
  %303 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"* %302, %"struct.std::__1::pair"* %5, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br i1 %303, label %304, label %306

304:                                              ; preds = %300
  br i1 %301, label %318, label %305

305:                                              ; preds = %304, %316
  br label %4

306:                                              ; preds = %300
  br i1 %301, label %314, label %307

307:                                              ; preds = %306, %297
  %308 = ptrtoint %"struct.std::__1::pair"* %275 to i64
  %309 = sub i64 %308, %206
  %310 = sub i64 %13, %308
  %311 = icmp slt i64 %309, %310
  br i1 %311, label %312, label %316

312:                                              ; preds = %307
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %275, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  %313 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 1
  br label %314

314:                                              ; preds = %312, %306
  %315 = phi %"struct.std::__1::pair"* [ %302, %306 ], [ %313, %312 ]
  br label %14

316:                                              ; preds = %307
  %317 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %317, %"struct.std::__1::pair"* %5, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %305

318:                                              ; preds = %304, %124, %16, %16, %99, %121, %27, %29, %35, %40, %44, %49, %57
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = icmp ult i32 %8, %6
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %14, %16
  br label %18

18:                                               ; preds = %4, %10, %12
  %19 = phi i1 [ true, %4 ], [ false, %10 ], [ %17, %12 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %21, %6
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = icmp ult i32 %6, %21
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %27, %29
  br label %31

31:                                               ; preds = %18, %23, %25
  %32 = phi i1 [ true, %18 ], [ false, %23 ], [ %30, %25 ]
  br i1 %19, label %53, label %33

33:                                               ; preds = %31
  br i1 %32, label %34, label %77

34:                                               ; preds = %33
  store i32 %21, i32* %5, align 4
  store i32 %6, i32* %20, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %36, align 4
  store i32 %38, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %7, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %34
  %43 = icmp ult i32 %40, %39
  br i1 %43, label %77, label %44

44:                                               ; preds = %42
  %45 = load i32, i32* %35, align 4
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %49, label %77

49:                                               ; preds = %34, %44
  store i32 %39, i32* %7, align 4
  store i32 %40, i32* %5, align 4
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %35, align 4
  store i32 %52, i32* %50, align 4
  store i32 %51, i32* %35, align 4
  br label %77

53:                                               ; preds = %31
  br i1 %32, label %54, label %59

54:                                               ; preds = %53
  store i32 %21, i32* %7, align 4
  store i32 %8, i32* %20, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  br label %77

59:                                               ; preds = %53
  store i32 %6, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  store i32 %63, i32* %60, align 4
  store i32 %62, i32* %61, align 4
  %64 = load i32, i32* %20, align 4
  %65 = load i32, i32* %5, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %73, label %67

67:                                               ; preds = %59
  %68 = icmp ult i32 %65, %64
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, %62
  br i1 %72, label %73, label %77

73:                                               ; preds = %59, %69
  store i32 %64, i32* %5, align 4
  store i32 %65, i32* %20, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %75 = load i32, i32* %61, align 4
  %76 = load i32, i32* %74, align 4
  store i32 %76, i32* %61, align 4
  store i32 %75, i32* %74, align 4
  br label %77

77:                                               ; preds = %67, %42, %69, %73, %44, %49, %33, %54
  %78 = phi i32 [ 1, %54 ], [ 0, %33 ], [ 2, %49 ], [ 1, %44 ], [ 2, %73 ], [ 1, %69 ], [ 1, %42 ], [ 1, %67 ]
  ret i32 %78
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::__less.395"* dereferenceable(1) %4) #13
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %5
  %13 = icmp ult i32 %10, %8
  br i1 %13, label %58, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %5, %14
  store i32 %8, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %25 = add i32 %6, 1
  %26 = load i32, i32* %9, align 4
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = icmp ult i32 %28, %26
  br i1 %31, label %58, label %32

32:                                               ; preds = %30
  %33 = load i32, i32* %21, align 4
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %20, %32
  store i32 %26, i32* %27, align 4
  store i32 %28, i32* %9, align 4
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %21, align 4
  store i32 %40, i32* %38, align 4
  store i32 %39, i32* %21, align 4
  %41 = add i32 %6, 2
  %42 = load i32, i32* %27, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp ult i32 %42, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %37
  %47 = icmp ult i32 %44, %42
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %38, align 4
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %37, %48
  store i32 %42, i32* %43, align 4
  store i32 %44, i32* %27, align 4
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %38, align 4
  store i32 %56, i32* %54, align 4
  store i32 %55, i32* %38, align 4
  %57 = add i32 %6, 3
  br label %58

58:                                               ; preds = %46, %30, %12, %32, %53, %48, %14
  %59 = phi i32 [ %57, %53 ], [ %41, %48 ], [ %25, %32 ], [ %6, %14 ], [ %6, %12 ], [ %25, %30 ], [ %41, %46 ]
  ret i32 %59
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"* %3, %"struct.std::__1::__less.395"* dereferenceable(1) %5) #13
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %6
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %75, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %75

21:                                               ; preds = %6, %15
  store i32 %9, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %22, align 4
  store i32 %24, i32* %23, align 4
  %26 = add i32 %7, 1
  %27 = load i32, i32* %10, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %21
  %32 = icmp ult i32 %29, %27
  br i1 %32, label %75, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %22, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %34, %36
  br i1 %37, label %38, label %75

38:                                               ; preds = %21, %33
  store i32 %27, i32* %28, align 4
  store i32 %29, i32* %10, align 4
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %22, align 4
  store i32 %41, i32* %39, align 4
  store i32 %40, i32* %22, align 4
  %42 = add i32 %7, 2
  %43 = load i32, i32* %28, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %38
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %75, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %39, align 4
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %50, %52
  br i1 %53, label %54, label %75

54:                                               ; preds = %38, %49
  store i32 %43, i32* %44, align 4
  store i32 %45, i32* %28, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %39, align 4
  store i32 %57, i32* %55, align 4
  store i32 %56, i32* %39, align 4
  %58 = add i32 %7, 3
  %59 = load i32, i32* %44, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %59, %61
  br i1 %62, label %70, label %63

63:                                               ; preds = %54
  %64 = icmp ult i32 %61, %59
  br i1 %64, label %75, label %65

65:                                               ; preds = %63
  %66 = load i32, i32* %55, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %54, %65
  store i32 %59, i32* %60, align 4
  store i32 %61, i32* %44, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %55, align 4
  store i32 %73, i32* %71, align 4
  store i32 %72, i32* %55, align 4
  %74 = add i32 %7, 4
  br label %75

75:                                               ; preds = %63, %47, %31, %13, %33, %65, %70, %49, %15
  %76 = phi i32 [ %74, %70 ], [ %58, %65 ], [ %42, %49 ], [ %26, %33 ], [ %7, %15 ], [ %7, %13 ], [ %26, %31 ], [ %42, %47 ], [ %58, %63 ]
  ret i32 %76
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"* %4, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %8 = icmp eq %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %60, %3
  ret void

10:                                               ; preds = %3, %60
  %11 = phi %"struct.std::__1::pair"* [ %61, %60 ], [ %7, %3 ]
  %12 = phi %"struct.std::__1::pair"* [ %11, %60 ], [ %4, %3 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %14, %16
  br i1 %17, label %26, label %18

18:                                               ; preds = %10
  %19 = icmp ult i32 %16, %14
  br i1 %19, label %60, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %26, label %60

26:                                               ; preds = %10, %20
  %27 = bitcast %"struct.std::__1::pair"* %11 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  store i32 %16, i32* %13, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1
  store i32 %33, i32* %34, align 4
  %35 = icmp eq %"struct.std::__1::pair"* %12, %0
  br i1 %35, label %57, label %36

36:                                               ; preds = %26, %52
  %37 = phi i32* [ %54, %52 ], [ %32, %26 ]
  %38 = phi i32* [ %39, %52 ], [ %15, %26 ]
  %39 = getelementptr inbounds i32, i32* %38, i64 -2
  %40 = bitcast i32* %39 to %"struct.std::__1::pair"*
  %41 = load i32, i32* %39, align 4
  %42 = icmp ugt i32 %41, %29
  br i1 %42, label %43, label %46

43:                                               ; preds = %36
  %44 = getelementptr inbounds i32, i32* %38, i64 -1
  %45 = load i32, i32* %44, align 4
  br label %52

46:                                               ; preds = %36
  %47 = icmp ult i32 %41, %29
  br i1 %47, label %57, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds i32, i32* %38, i64 -1
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, %31
  br i1 %51, label %52, label %57

52:                                               ; preds = %43, %48
  %53 = phi i32 [ %45, %43 ], [ %50, %48 ]
  store i32 %41, i32* %38, align 4
  %54 = getelementptr inbounds i32, i32* %38, i64 -1
  %55 = getelementptr inbounds i32, i32* %38, i64 1
  store i32 %53, i32* %55, align 4
  %56 = icmp eq %"struct.std::__1::pair"* %40, %0
  br i1 %56, label %57, label %36

57:                                               ; preds = %52, %48, %46, %26
  %58 = phi i32* [ %15, %26 ], [ %38, %46 ], [ %38, %48 ], [ %39, %52 ]
  %59 = phi i32* [ %32, %26 ], [ %37, %46 ], [ %37, %48 ], [ %54, %52 ]
  store i32 %29, i32* %58, align 4
  store i32 %31, i32* %59, align 4
  br label %60

60:                                               ; preds = %18, %57, %20
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 1
  %62 = icmp eq %"struct.std::__1::pair"* %61, %1
  br i1 %62, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjiEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.395"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %42 [
    i64 0, label %108
    i64 1, label %108
    i64 2, label %8
    i64 3, label %27
    i64 4, label %31
    i64 5, label %36
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = icmp ult i32 %12, %10
  br i1 %15, label %108, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %18, %20
  br i1 %21, label %22, label %108

22:                                               ; preds = %8, %16
  store i32 %10, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %23, align 4
  store i32 %25, i32* %24, align 4
  br label %108

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %30 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %28, %"struct.std::__1::pair"* %29, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %108

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %35 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %32, %"struct.std::__1::pair"* %33, %"struct.std::__1::pair"* %34, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %108

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %41 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* %38, %"struct.std::__1::pair"* %39, %"struct.std::__1::pair"* %40, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  br label %108

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %45 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjiEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %44, %"struct.std::__1::pair"* %43, %"struct.std::__1::__less.395"* dereferenceable(1) %2) #13
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %47 = icmp eq %"struct.std::__1::pair"* %46, %1
  br i1 %47, label %108, label %48

48:                                               ; preds = %42, %101
  %49 = phi %"struct.std::__1::pair"* [ %103, %101 ], [ %46, %42 ]
  %50 = phi i32 [ %102, %101 ], [ 0, %42 ]
  %51 = phi %"struct.std::__1::pair"* [ %49, %101 ], [ %43, %42 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %53, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %48
  %58 = icmp ult i32 %55, %53
  br i1 %58, label %101, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %61, %63
  br i1 %64, label %65, label %101

65:                                               ; preds = %48, %59
  %66 = bitcast %"struct.std::__1::pair"* %49 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i32
  store i32 %55, i32* %52, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  store i32 %72, i32* %73, align 4
  %74 = icmp eq %"struct.std::__1::pair"* %51, %0
  br i1 %74, label %96, label %75

75:                                               ; preds = %65, %91
  %76 = phi i32* [ %93, %91 ], [ %71, %65 ]
  %77 = phi i32* [ %78, %91 ], [ %54, %65 ]
  %78 = getelementptr inbounds i32, i32* %77, i64 -2
  %79 = bitcast i32* %78 to %"struct.std::__1::pair"*
  %80 = load i32, i32* %78, align 4
  %81 = icmp ugt i32 %80, %68
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = getelementptr inbounds i32, i32* %77, i64 -1
  %84 = load i32, i32* %83, align 4
  br label %91

85:                                               ; preds = %75
  %86 = icmp ult i32 %80, %68
  br i1 %86, label %96, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds i32, i32* %77, i64 -1
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, %70
  br i1 %90, label %91, label %96

91:                                               ; preds = %82, %87
  %92 = phi i32 [ %84, %82 ], [ %89, %87 ]
  store i32 %80, i32* %77, align 4
  %93 = getelementptr inbounds i32, i32* %77, i64 -1
  %94 = getelementptr inbounds i32, i32* %77, i64 1
  store i32 %92, i32* %94, align 4
  %95 = icmp eq %"struct.std::__1::pair"* %79, %0
  br i1 %95, label %96, label %75

96:                                               ; preds = %91, %87, %85, %65
  %97 = phi i32* [ %54, %65 ], [ %77, %85 ], [ %77, %87 ], [ %78, %91 ]
  %98 = phi i32* [ %71, %65 ], [ %76, %85 ], [ %76, %87 ], [ %93, %91 ]
  store i32 %68, i32* %97, align 4
  store i32 %70, i32* %98, align 4
  %99 = add i32 %50, 1
  %100 = icmp eq i32 %99, 8
  br i1 %100, label %105, label %101

101:                                              ; preds = %96, %57, %59
  %102 = phi i32 [ %99, %96 ], [ %50, %59 ], [ %50, %57 ]
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %104 = icmp eq %"struct.std::__1::pair"* %103, %1
  br i1 %104, label %108, label %48

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %107 = icmp eq %"struct.std::__1::pair"* %106, %1
  br label %108

108:                                              ; preds = %101, %105, %42, %14, %16, %22, %3, %3, %36, %31, %27
  %109 = phi i1 [ true, %36 ], [ true, %31 ], [ true, %27 ], [ true, %3 ], [ true, %3 ], [ true, %22 ], [ true, %16 ], [ true, %14 ], [ true, %42 ], [ %107, %105 ], [ true, %101 ]
  ret i1 %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind optsize }
attributes #12 = { nounwind optsize }
attributes #13 = { optsize }
attributes #14 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i64 0, i64 65}
