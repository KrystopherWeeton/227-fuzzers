; ModuleID = '../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc'
source_filename = "../../third_party/abseil-cpp/absl/time/internal/cctz/src/time_zone_lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::time_internal::cctz::time_zone" = type { %"class.absl::time_internal::cctz::time_zone::Impl"* }
%"class.absl::time_internal::cctz::time_zone::Impl" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.absl::time_internal::cctz::TimeZoneIf"* }
%"class.absl::time_internal::cctz::TimeZoneIf" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.absl::time_internal::cctz::time_zone::absolute_lookup" = type { %"class.absl::time_internal::cctz::detail::civil_time", i32, i8, i8* }
%"class.absl::time_internal::cctz::detail::civil_time" = type { %"struct.absl::time_internal::cctz::detail::fields" }
%"struct.absl::time_internal::cctz::detail::fields" = type <{ i64, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%"struct.absl::time_internal::cctz::time_zone::civil_lookup" = type { i32, %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point", %"class.std::__1::chrono::time_point" }
%"struct.absl::time_internal::cctz::time_zone::civil_transition" = type { %"class.absl::time_internal::cctz::detail::civil_time", %"class.absl::time_internal::cctz::detail::civil_time" }
%"class.std::__1::__basic_string_common" = type { i8 }

@.str = private unnamed_addr constant [11 x i8] c":localtime\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"/etc/localtime\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"LOCALTIME\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz9time_zone4nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::time_zone"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %3, align 8
  %5 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %7, %6 ], [ %4, %2 ]
  %10 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.absl::time_internal::cctz::time_zone::Impl"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #8
  br label %22

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %21) #8
  br label %22

22:                                               ; preds = %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZNK4absl13time_internal4cctz9time_zone14effective_implEv(%"class.absl::time_internal::cctz::time_zone"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %0, i64 0, i32 0
  %3 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %2, align 8
  %4 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %6, %5 ], [ %3, %1 ]
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz9time_zone6lookupERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEE(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* noalias sret, %"class.absl::time_internal::cctz::time_zone"* nocapture readonly, %"class.std::__1::chrono::time_point"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  %5 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  %6 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %8, %7 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %11, align 8, !noalias !2
  %13 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %12 to void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)***
  %14 = load void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)**, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)*, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)** %14, i64 2
  %16 = load void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)*, void (%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*)** %15, align 8, !noalias !2
  tail call void %16(%"struct.absl::time_internal::cctz::time_zone::absolute_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneIf"* %12, %"class.std::__1::chrono::time_point"* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz9time_zone6lookupERKNS1_6detail10civil_timeINS3_10second_tagEEE(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* noalias sret, %"class.absl::time_internal::cctz::time_zone"* nocapture readonly, %"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  %5 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  %6 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %8, %7 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %11, align 8, !noalias !5
  %13 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %12 to void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)***
  %14 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)**, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*** %13, align 8, !noalias !5
  %15 = getelementptr inbounds void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %14, i64 3
  %16 = load void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)*, void (%"struct.absl::time_internal::cctz::time_zone::civil_lookup"*, %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::detail::civil_time"*)** %15, align 8, !noalias !5
  tail call void %16(%"struct.absl::time_internal::cctz::time_zone::civil_lookup"* sret %0, %"class.absl::time_internal::cctz::TimeZoneIf"* %12, %"class.absl::time_internal::cctz::detail::civil_time"* dereferenceable(16) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz9time_zone15next_transitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS2_16civil_transitionE(%"class.absl::time_internal::cctz::time_zone"* nocapture readonly, %"class.std::__1::chrono::time_point"* dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %0, i64 0, i32 0
  %5 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  %6 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %8, %7 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %11, align 8
  %13 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %12 to i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)***
  %14 = load i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)**, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)** %14, i64 4
  %16 = load i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.absl::time_internal::cctz::TimeZoneIf"* %12, %"class.std::__1::chrono::time_point"* dereferenceable(8) %1, %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2) #8
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4absl13time_internal4cctz9time_zone15prev_transitionERKNSt3__16chrono10time_pointINS4_12system_clockENS4_8durationIlNS3_5ratioILl1ELl1EEEEEEEPNS2_16civil_transitionE(%"class.absl::time_internal::cctz::time_zone"* nocapture readonly, %"class.std::__1::chrono::time_point"* dereferenceable(8), %"struct.absl::time_internal::cctz::time_zone::civil_transition"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %0, i64 0, i32 0
  %5 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  %6 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %8, %7 ], [ %5, %3 ]
  %11 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %11, align 8
  %13 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %12 to i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)***
  %14 = load i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)**, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)** %14, i64 5
  %16 = load i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)*, i1 (%"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.std::__1::chrono::time_point"*, %"struct.absl::time_internal::cctz::time_zone::civil_transition"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.absl::time_internal::cctz::TimeZoneIf"* %12, %"class.std::__1::chrono::time_point"* dereferenceable(8) %1, %"struct.absl::time_internal::cctz::time_zone::civil_transition"* %2) #8
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz9time_zone7versionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::time_zone"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %3, align 8
  %5 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %10, align 8, !noalias !8
  %12 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %11 to void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)***
  %13 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)**, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*** %12, align 8, !noalias !8
  %14 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)** %13, i64 6
  %15 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)** %14, align 8, !noalias !8
  tail call void %15(%"class.std::__1::basic_string"* sret %0, %"class.absl::time_internal::cctz::TimeZoneIf"* %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13time_internal4cctz9time_zone11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.absl::time_internal::cctz::time_zone"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  %4 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %3, align 8
  %5 = icmp eq %"class.absl::time_internal::cctz::time_zone::Impl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %"class.absl::time_internal::cctz::time_zone::Impl"* [ %7, %6 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone::Impl", %"class.absl::time_internal::cctz::time_zone::Impl"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.absl::time_internal::cctz::TimeZoneIf"*, %"class.absl::time_internal::cctz::TimeZoneIf"** %10, align 8, !noalias !11
  %12 = bitcast %"class.absl::time_internal::cctz::TimeZoneIf"* %11 to void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)***
  %13 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)**, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*** %12, align 8, !noalias !11
  %14 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)** %13, i64 7
  %15 = load void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)*, void (%"class.std::__1::basic_string"*, %"class.absl::time_internal::cctz::TimeZoneIf"*)** %14, align 8, !noalias !11
  tail call void %15(%"class.std::__1::basic_string"* sret %0, %"class.absl::time_internal::cctz::TimeZoneIf"* %11) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4absl13time_internal4cctz14load_time_zoneERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPNS1_9time_zoneE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::time_internal::cctz::time_zone"*) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN4absl13time_internal4cctz9time_zone4Impl12LoadTimeZoneERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS2_(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.absl::time_internal::cctz::time_zone"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN4absl13time_internal4cctz9time_zone4Impl12LoadTimeZoneERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS2_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::time_internal::cctz::time_zone"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz13utc_time_zoneEv() local_unnamed_addr #0 {
  %1 = tail call %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz9time_zone4Impl3UTCEv() #8
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz15fixed_time_zoneERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::chrono::duration"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.absl::time_internal::cctz::time_zone", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %2, i64 0, i32 0
  store %"class.absl::time_internal::cctz::time_zone::Impl"* null, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  call void @_ZN4absl13time_internal4cctz17FixedOffsetToNameERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::chrono::duration"* dereferenceable(8) %0) #8
  %6 = call zeroext i1 @_ZN4absl13time_internal4cctz9time_zone4Impl12LoadTimeZoneERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS2_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.absl::time_internal::cctz::time_zone"* nonnull %2) #8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  %15 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %4, align 8
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %15
}

declare void @_ZN4absl13time_internal4cctz17FixedOffsetToNameERKNSt3__16chrono8durationIlNS2_5ratioILl1ELl1EEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::chrono::duration"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.absl::time_internal::cctz::time_zone::Impl"* @_ZN4absl13time_internal4cctz15local_time_zoneEv() local_unnamed_addr #0 {
  %1 = alloca %"class.absl::time_internal::cctz::time_zone", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #8
  %4 = icmp eq i8* %3, null
  %5 = select i1 %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %3
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 58
  %8 = getelementptr inbounds i8, i8* %5, i64 1
  %9 = select i1 %7, i8* %8, i8* %5
  %10 = tail call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %0
  %13 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #8
  %14 = icmp eq i8* %13, null
  %15 = select i1 %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %13
  br label %16

16:                                               ; preds = %12, %0
  %17 = phi i8* [ %9, %0 ], [ %15, %12 ]
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = tail call i64 @strlen(i8* %17) #8
  %24 = icmp ugt i64 %23, -17
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %26) #11
  unreachable

27:                                               ; preds = %16
  %28 = icmp ult i64 %23, 23
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = add nuw i64 %23, 16
  %31 = and i64 %30, -16
  %32 = tail call i8* @_Znwm(i64 %31) #9
  store i8* %32, i8** %19, align 8
  %33 = or i64 %31, -9223372036854775808
  store i64 %33, i64* %21, align 8
  store i64 %23, i64* %20, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %40

35:                                               ; preds = %27
  %36 = trunc i64 %23 to i8
  %37 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = icmp eq i64 %23, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %35, %29
  %41 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %34, %29 ]
  %42 = phi i8* [ %18, %35 ], [ %32, %29 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %17, i64 %23, i1 false) #8
  br label %43

43:                                               ; preds = %35, %40
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %41, %40 ]
  %45 = phi i8* [ %18, %35 ], [ %42, %40 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 %23
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.absl::time_internal::cctz::time_zone", %"class.absl::time_internal::cctz::time_zone"* %1, i64 0, i32 0
  store %"class.absl::time_internal::cctz::time_zone::Impl"* null, %"class.absl::time_internal::cctz::time_zone::Impl"** %47, align 8
  %48 = call zeroext i1 @_ZN4absl13time_internal4cctz9time_zone4Impl12LoadTimeZoneERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS2_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.absl::time_internal::cctz::time_zone"* nonnull %1) #8
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %53) #9
  br label %54

54:                                               ; preds = %43, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  %55 = load %"class.absl::time_internal::cctz::time_zone::Impl"*, %"class.absl::time_internal::cctz::time_zone::Impl"** %47, align 8
  ret %"class.absl::time_internal::cctz::time_zone::Impl"* %55
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4absl13time_internal4cctz9time_zone4Impl9BreakTimeERKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIlNS4_5ratioILl1ELl1EEEEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNK4absl13time_internal4cctz9time_zone4Impl9BreakTimeERKNSt3__16chrono10time_pointINS5_12system_clockENS5_8durationIlNS4_5ratioILl1ELl1EEEEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4absl13time_internal4cctz9time_zone4Impl8MakeTimeERKNS1_6detail10civil_timeINS4_10second_tagEEE: argument 0"}
!7 = distinct !{!7, !"_ZNK4absl13time_internal4cctz9time_zone4Impl8MakeTimeERKNS1_6detail10civil_timeINS4_10second_tagEEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4absl13time_internal4cctz9time_zone4Impl7VersionEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4absl13time_internal4cctz9time_zone4Impl7VersionEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4absl13time_internal4cctz9time_zone4Impl11DescriptionEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4absl13time_internal4cctz9time_zone4Impl11DescriptionEv"}
