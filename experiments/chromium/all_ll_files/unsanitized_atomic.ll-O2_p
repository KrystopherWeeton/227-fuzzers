; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/unsanitized_atomic.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/unsanitized_atomic.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::internal::UnsanitizedAtomic" = type { i16 }

$_ZN5blink8internal17UnsanitizedAtomicItEC5Et = comdat any

$_ZN5blink8internal17UnsanitizedAtomicItE5storeEtNSt3__112memory_orderE = comdat any

$_ZNK5blink8internal17UnsanitizedAtomicItE4loadENSt3__112memory_orderE = comdat any

$_ZN5blink8internal17UnsanitizedAtomicItE23compare_exchange_strongERttNSt3__112memory_orderE = comdat any

$_ZN5blink8internal17UnsanitizedAtomicItE23compare_exchange_strongERttNSt3__112memory_orderES5_ = comdat any

$_ZN5blink8internal17UnsanitizedAtomicItE21compare_exchange_weakERttNSt3__112memory_orderE = comdat any

$_ZN5blink8internal17UnsanitizedAtomicItE21compare_exchange_weakERttNSt3__112memory_orderES5_ = comdat any

@_ZN5blink8internal17UnsanitizedAtomicItEC1Et = weak_odr hidden unnamed_addr alias void (%"class.blink::internal::UnsanitizedAtomic"*, i16), void (%"class.blink::internal::UnsanitizedAtomic"*, i16)* @_ZN5blink8internal17UnsanitizedAtomicItEC2Et

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink8internal17UnsanitizedAtomicItEC2Et(%"class.blink::internal::UnsanitizedAtomic"*, i16 zeroext) unnamed_addr #0 comdat($_ZN5blink8internal17UnsanitizedAtomicItEC5Et) align 2 {
  %3 = getelementptr inbounds %"class.blink::internal::UnsanitizedAtomic", %"class.blink::internal::UnsanitizedAtomic"* %0, i64 0, i32 0
  store i16 %1, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5blink8internal17UnsanitizedAtomicItE5storeEtNSt3__112memory_orderE(%"class.blink::internal::UnsanitizedAtomic"*, i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::internal::UnsanitizedAtomic", %"class.blink::internal::UnsanitizedAtomic"* %0, i64 0, i32 0
  switch i32 %2, label %5 [
    i32 5, label %8
    i32 0, label %6
    i32 2, label %6
    i32 3, label %7
    i32 4, label %6
    i32 1, label %6
  ]

5:                                                ; preds = %3
  unreachable

6:                                                ; preds = %3, %3, %3, %3
  store atomic i16 %1, i16* %4 monotonic, align 2
  br label %9

7:                                                ; preds = %3
  store atomic i16 %1, i16* %4 release, align 2
  br label %9

8:                                                ; preds = %3
  store atomic i16 %1, i16* %4 seq_cst, align 2
  br label %9

9:                                                ; preds = %8, %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZNK5blink8internal17UnsanitizedAtomicItE4loadENSt3__112memory_orderE(%"class.blink::internal::UnsanitizedAtomic"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::internal::UnsanitizedAtomic", %"class.blink::internal::UnsanitizedAtomic"* %0, i64 0, i32 0
  switch i32 %1, label %4 [
    i32 5, label %9
    i32 0, label %5
    i32 2, label %7
    i32 3, label %5
    i32 4, label %5
    i32 1, label %7
  ]

4:                                                ; preds = %2
  unreachable

5:                                                ; preds = %2, %2, %2
  %6 = load atomic i16, i16* %3 monotonic, align 2
  br label %11

7:                                                ; preds = %2, %2
  %8 = load atomic i16, i16* %3 acquire, align 2
  br label %11

9:                                                ; preds = %2
  %10 = load atomic i16, i16* %3 seq_cst, align 2
  br label %11

11:                                               ; preds = %9, %7, %5
  %12 = phi i16 [ %6, %5 ], [ %10, %9 ], [ %8, %7 ]
  ret i16 %12
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE23compare_exchange_strongERttNSt3__112memory_orderE(%"class.blink::internal::UnsanitizedAtomic"*, i16* dereferenceable(2), i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE23compare_exchange_strongERttNSt3__112memory_orderES5_(%"class.blink::internal::UnsanitizedAtomic"* %0, i16* dereferenceable(2) %1, i16 zeroext %2, i32 %3, i32 %3)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE23compare_exchange_strongERttNSt3__112memory_orderES5_(%"class.blink::internal::UnsanitizedAtomic"*, i16* dereferenceable(2), i16 zeroext, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::internal::UnsanitizedAtomic", %"class.blink::internal::UnsanitizedAtomic"* %0, i64 0, i32 0
  switch i32 %3, label %18 [
    i32 1, label %7
    i32 2, label %7
    i32 3, label %34
    i32 4, label %11
    i32 5, label %15
  ]

7:                                                ; preds = %5, %5
  %8 = add nsw i32 %4, -1
  %9 = icmp ult i32 %8, 2
  %10 = load i16, i16* %1, align 2
  br i1 %9, label %27, label %24

11:                                               ; preds = %5
  %12 = add nsw i32 %4, -1
  %13 = icmp ult i32 %12, 2
  %14 = load i16, i16* %1, align 2
  br i1 %13, label %43, label %40

15:                                               ; preds = %5
  switch i32 %4, label %50 [
    i32 1, label %54
    i32 2, label %54
    i32 5, label %58
  ]

16:                                               ; preds = %58, %66, %54, %64, %50, %62, %43, %48, %40, %46, %34, %38, %27, %32, %24, %30, %18, %22
  %17 = phi i1 [ false, %22 ], [ true, %18 ], [ false, %30 ], [ true, %24 ], [ false, %32 ], [ true, %27 ], [ false, %38 ], [ true, %34 ], [ false, %46 ], [ true, %40 ], [ false, %48 ], [ true, %43 ], [ false, %62 ], [ true, %50 ], [ false, %64 ], [ true, %54 ], [ false, %66 ], [ true, %58 ]
  ret i1 %17

18:                                               ; preds = %5
  %19 = load i16, i16* %1, align 2
  %20 = cmpxchg i16* %6, i16 %19, i16 %2 monotonic monotonic
  %21 = extractvalue { i16, i1 } %20, 1
  br i1 %21, label %16, label %22

22:                                               ; preds = %18
  %23 = extractvalue { i16, i1 } %20, 0
  store i16 %23, i16* %1, align 2
  br label %16

24:                                               ; preds = %7
  %25 = cmpxchg i16* %6, i16 %10, i16 %2 acquire monotonic
  %26 = extractvalue { i16, i1 } %25, 1
  br i1 %26, label %16, label %30

27:                                               ; preds = %7
  %28 = cmpxchg i16* %6, i16 %10, i16 %2 acquire acquire
  %29 = extractvalue { i16, i1 } %28, 1
  br i1 %29, label %16, label %32

30:                                               ; preds = %24
  %31 = extractvalue { i16, i1 } %25, 0
  store i16 %31, i16* %1, align 2
  br label %16

32:                                               ; preds = %27
  %33 = extractvalue { i16, i1 } %28, 0
  store i16 %33, i16* %1, align 2
  br label %16

34:                                               ; preds = %5
  %35 = load i16, i16* %1, align 2
  %36 = cmpxchg i16* %6, i16 %35, i16 %2 release monotonic
  %37 = extractvalue { i16, i1 } %36, 1
  br i1 %37, label %16, label %38

38:                                               ; preds = %34
  %39 = extractvalue { i16, i1 } %36, 0
  store i16 %39, i16* %1, align 2
  br label %16

40:                                               ; preds = %11
  %41 = cmpxchg i16* %6, i16 %14, i16 %2 acq_rel monotonic
  %42 = extractvalue { i16, i1 } %41, 1
  br i1 %42, label %16, label %46

43:                                               ; preds = %11
  %44 = cmpxchg i16* %6, i16 %14, i16 %2 acq_rel acquire
  %45 = extractvalue { i16, i1 } %44, 1
  br i1 %45, label %16, label %48

46:                                               ; preds = %40
  %47 = extractvalue { i16, i1 } %41, 0
  store i16 %47, i16* %1, align 2
  br label %16

48:                                               ; preds = %43
  %49 = extractvalue { i16, i1 } %44, 0
  store i16 %49, i16* %1, align 2
  br label %16

50:                                               ; preds = %15
  %51 = load i16, i16* %1, align 2
  %52 = cmpxchg i16* %6, i16 %51, i16 %2 seq_cst monotonic
  %53 = extractvalue { i16, i1 } %52, 1
  br i1 %53, label %16, label %62

54:                                               ; preds = %15, %15
  %55 = load i16, i16* %1, align 2
  %56 = cmpxchg i16* %6, i16 %55, i16 %2 seq_cst acquire
  %57 = extractvalue { i16, i1 } %56, 1
  br i1 %57, label %16, label %64

58:                                               ; preds = %15
  %59 = load i16, i16* %1, align 2
  %60 = cmpxchg i16* %6, i16 %59, i16 %2 seq_cst seq_cst
  %61 = extractvalue { i16, i1 } %60, 1
  br i1 %61, label %16, label %66

62:                                               ; preds = %50
  %63 = extractvalue { i16, i1 } %52, 0
  store i16 %63, i16* %1, align 2
  br label %16

64:                                               ; preds = %54
  %65 = extractvalue { i16, i1 } %56, 0
  store i16 %65, i16* %1, align 2
  br label %16

66:                                               ; preds = %58
  %67 = extractvalue { i16, i1 } %60, 0
  store i16 %67, i16* %1, align 2
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE21compare_exchange_weakERttNSt3__112memory_orderE(%"class.blink::internal::UnsanitizedAtomic"*, i16* dereferenceable(2), i16 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE21compare_exchange_weakERttNSt3__112memory_orderES5_(%"class.blink::internal::UnsanitizedAtomic"* %0, i16* dereferenceable(2) %1, i16 zeroext %2, i32 %3, i32 %3)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink8internal17UnsanitizedAtomicItE21compare_exchange_weakERttNSt3__112memory_orderES5_(%"class.blink::internal::UnsanitizedAtomic"*, i16* dereferenceable(2), i16 zeroext, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::internal::UnsanitizedAtomic", %"class.blink::internal::UnsanitizedAtomic"* %0, i64 0, i32 0
  switch i32 %3, label %18 [
    i32 1, label %7
    i32 2, label %7
    i32 3, label %34
    i32 4, label %11
    i32 5, label %15
  ]

7:                                                ; preds = %5, %5
  %8 = add nsw i32 %4, -1
  %9 = icmp ult i32 %8, 2
  %10 = load i16, i16* %1, align 2
  br i1 %9, label %27, label %24

11:                                               ; preds = %5
  %12 = add nsw i32 %4, -1
  %13 = icmp ult i32 %12, 2
  %14 = load i16, i16* %1, align 2
  br i1 %13, label %43, label %40

15:                                               ; preds = %5
  switch i32 %4, label %50 [
    i32 1, label %54
    i32 2, label %54
    i32 5, label %58
  ]

16:                                               ; preds = %58, %66, %54, %64, %50, %62, %43, %48, %40, %46, %34, %38, %27, %32, %24, %30, %18, %22
  %17 = phi i1 [ false, %22 ], [ true, %18 ], [ false, %30 ], [ true, %24 ], [ false, %32 ], [ true, %27 ], [ false, %38 ], [ true, %34 ], [ false, %46 ], [ true, %40 ], [ false, %48 ], [ true, %43 ], [ false, %62 ], [ true, %50 ], [ false, %64 ], [ true, %54 ], [ false, %66 ], [ true, %58 ]
  ret i1 %17

18:                                               ; preds = %5
  %19 = load i16, i16* %1, align 2
  %20 = cmpxchg weak i16* %6, i16 %19, i16 %2 monotonic monotonic
  %21 = extractvalue { i16, i1 } %20, 1
  br i1 %21, label %16, label %22

22:                                               ; preds = %18
  %23 = extractvalue { i16, i1 } %20, 0
  store i16 %23, i16* %1, align 2
  br label %16

24:                                               ; preds = %7
  %25 = cmpxchg weak i16* %6, i16 %10, i16 %2 acquire monotonic
  %26 = extractvalue { i16, i1 } %25, 1
  br i1 %26, label %16, label %30

27:                                               ; preds = %7
  %28 = cmpxchg weak i16* %6, i16 %10, i16 %2 acquire acquire
  %29 = extractvalue { i16, i1 } %28, 1
  br i1 %29, label %16, label %32

30:                                               ; preds = %24
  %31 = extractvalue { i16, i1 } %25, 0
  store i16 %31, i16* %1, align 2
  br label %16

32:                                               ; preds = %27
  %33 = extractvalue { i16, i1 } %28, 0
  store i16 %33, i16* %1, align 2
  br label %16

34:                                               ; preds = %5
  %35 = load i16, i16* %1, align 2
  %36 = cmpxchg weak i16* %6, i16 %35, i16 %2 release monotonic
  %37 = extractvalue { i16, i1 } %36, 1
  br i1 %37, label %16, label %38

38:                                               ; preds = %34
  %39 = extractvalue { i16, i1 } %36, 0
  store i16 %39, i16* %1, align 2
  br label %16

40:                                               ; preds = %11
  %41 = cmpxchg weak i16* %6, i16 %14, i16 %2 acq_rel monotonic
  %42 = extractvalue { i16, i1 } %41, 1
  br i1 %42, label %16, label %46

43:                                               ; preds = %11
  %44 = cmpxchg weak i16* %6, i16 %14, i16 %2 acq_rel acquire
  %45 = extractvalue { i16, i1 } %44, 1
  br i1 %45, label %16, label %48

46:                                               ; preds = %40
  %47 = extractvalue { i16, i1 } %41, 0
  store i16 %47, i16* %1, align 2
  br label %16

48:                                               ; preds = %43
  %49 = extractvalue { i16, i1 } %44, 0
  store i16 %49, i16* %1, align 2
  br label %16

50:                                               ; preds = %15
  %51 = load i16, i16* %1, align 2
  %52 = cmpxchg weak i16* %6, i16 %51, i16 %2 seq_cst monotonic
  %53 = extractvalue { i16, i1 } %52, 1
  br i1 %53, label %16, label %62

54:                                               ; preds = %15, %15
  %55 = load i16, i16* %1, align 2
  %56 = cmpxchg weak i16* %6, i16 %55, i16 %2 seq_cst acquire
  %57 = extractvalue { i16, i1 } %56, 1
  br i1 %57, label %16, label %64

58:                                               ; preds = %15
  %59 = load i16, i16* %1, align 2
  %60 = cmpxchg weak i16* %6, i16 %59, i16 %2 seq_cst seq_cst
  %61 = extractvalue { i16, i1 } %60, 1
  br i1 %61, label %16, label %66

62:                                               ; preds = %50
  %63 = extractvalue { i16, i1 } %52, 0
  store i16 %63, i16* %1, align 2
  br label %16

64:                                               ; preds = %54
  %65 = extractvalue { i16, i1 } %56, 0
  store i16 %65, i16* %1, align 2
  br label %16

66:                                               ; preds = %58
  %67 = extractvalue { i16, i1 } %60, 0
  store i16 %67, i16* %1, align 2
  br label %16
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
