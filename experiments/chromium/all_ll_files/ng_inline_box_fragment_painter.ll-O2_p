; ModuleID = '../../third_party/blink/renderer/core/paint/ng/ng_inline_box_fragment_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/ng/ng_inline_box_fragment_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGInlineBoxFragmentPainter" = type { %"class.blink::NGInlineBoxFragmentPainterBase" }
%"class.blink::NGInlineBoxFragmentPainterBase" = type { %"class.blink::InlineBoxPainterBase", %"class.blink::NGPhysicalFragment"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGInlineCursor"* }
%"class.blink::InlineBoxPainterBase" = type { i32 (...)**, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::Node"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2211" }
%"class.blink::Member.2211" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2213" }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2234 }
%class.scoped_refptr.2234 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2244" }
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2241" }
%"class.blink::MemberBase.2241" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2242" }
%"class.blink::MemberBase.2242" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2235", %"class.WTF::Vector.2235" }
%"class.WTF::Vector.2235" = type { %"class.WTF::VectorBuffer.2236" }
%"class.WTF::VectorBuffer.2236" = type { %"class.WTF::VectorBufferBase.2237" }
%"class.WTF::VectorBufferBase.2237" = type { %class.scoped_refptr.2234*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2220 }
%class.scoped_refptr.2220 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2221", %"class.WTF::Vector.630", %"class.WTF::Vector.2223", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2221" = type { %"class.base::RefCounted.2222" }
%"class.base::RefCounted.2222" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2223" = type { %"class.WTF::VectorBuffer.2224" }
%"class.WTF::VectorBuffer.2224" = type { %"class.WTF::VectorBufferBase.2225" }
%"class.WTF::VectorBufferBase.2225" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2226 }
%union.anon.2226 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2215" }
%"class.WTF::Vector.2215" = type { %"class.WTF::VectorBuffer.2216" }
%"class.WTF::VectorBuffer.2216" = type { %"class.WTF::VectorBufferBase.2217" }
%"class.WTF::VectorBufferBase.2217" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1735", %"class.absl::optional.1735", %"class.absl::optional.1735" }
%"class.absl::optional.1735" = type { %"class.absl::optional_internal::optional_data.1736" }
%"class.absl::optional_internal::optional_data.1736" = type { %"class.absl::optional_internal::optional_data_base.1737" }
%"class.absl::optional_internal::optional_data_base.1737" = type { %"class.absl::optional_internal::optional_data_dtor_base.1738" }
%"class.absl::optional_internal::optional_data_dtor_base.1738" = type { i8, %union.anon.1739 }
%union.anon.1739 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2230" }
%"class.WTF::VectorBuffer.2230" = type { %"class.WTF::VectorBufferBase.2231", [32 x i8] }
%"class.WTF::VectorBufferBase.2231" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1720", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1722, %"class.std::__1::unique_ptr.1941" }
%"class.WTF::RefCounted.1720" = type { %"class.base::RefCounted.1721" }
%"class.base::RefCounted.1721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1631", %"class.blink::Persistent.1637", %"class.std::__1::unique_ptr.1678", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1694" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1637" = type { %"class.blink::PersistentBase.1638" }
%"class.blink::PersistentBase.1638" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1655", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1673" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1645", %"class.blink::Member.1647", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1651", i8, [7 x i8] }>
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1653", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1718", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1718" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1719", { i64, i64 } }
%"class.blink::WeakMember.1719" = type { %"class.blink::MemberBase.1652" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1653", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1658", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1663" }
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1663" = type { %"class.WTF::VectorBuffer.1664" }
%"class.WTF::VectorBuffer.1664" = type { %"class.WTF::VectorBufferBase.1665" }
%"class.WTF::VectorBufferBase.1665" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1671" }
%"class.absl::optional.1673" = type { %"class.absl::optional_internal::optional_data.1674" }
%"class.absl::optional_internal::optional_data.1674" = type { %"class.absl::optional_internal::optional_data_base.1675" }
%"class.absl::optional_internal::optional_data_base.1675" = type { %"class.absl::optional_internal::optional_data_dtor_base.1676" }
%"class.absl::optional_internal::optional_data_dtor_base.1676" = type { i8, %union.anon.1677 }
%union.anon.1677 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681", %"class.WTF::Vector.1681", %"class.WTF::HashMap.1686", %"class.WTF::Vector.1681", i8, [7 x i8] }>
%"class.WTF::HashMap.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ %"struct.WTF::KeyValuePair.1690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1690" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1681" }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1697", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1703", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1709", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1703" = type { %"class.std::__1::__compressed_pair.1704" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.1705" }
%"struct.std::__1::__compressed_pair_elem.1705" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1709" = type { %"class.blink::PersistentBase.1710" }
%"class.blink::PersistentBase.1710" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1722 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1723", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1723" = type { %"class.base::RefCounted.1724" }
%"class.base::RefCounted.1724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1725, %"class.WTF::Vector.1898", %"class.std::__1::unique_ptr.1903", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1924, %"class.blink::Persistent.1925" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1725 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1726", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1873, %union.anon.1874, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1726" = type { %"class.base::RefCounted.1727" }
%"class.base::RefCounted.1727" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1728, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1728 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1729 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1729 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1763 }
%class.scoped_refptr.1763 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1764", [4 x i8], %"class.std::__1::unique_ptr.1766", i64, %"class.WTF::Vector.1770", %"class.WTF::Vector.1775", %"class.WTF::Vector.1781", %"class.WTF::Vector.1799", %class.scoped_refptr.1546, %"class.WTF::HashMap.1805", %"class.WTF::Vector.1810", %"class.WTF::Vector.1770", %"class.WTF::Vector.1815", %"class.WTF::HashMap.1820", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1764" = type { %"class.base::RefCountedThreadSafe.1765" }
%"class.base::RefCountedThreadSafe.1765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { i8* }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777", [8 x i8] }
%"class.WTF::VectorBufferBase.1777" = type { %class.scoped_refptr.1778*, i32, i32 }
%class.scoped_refptr.1778 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1785", %"class.std::__1::unique_ptr.1791" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1784 }
%class.scoped_refptr.1784 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1799" = type { %"class.WTF::VectorBuffer.1800" }
%"class.WTF::VectorBuffer.1800" = type { %"class.WTF::VectorBufferBase.1801" }
%"class.WTF::VectorBufferBase.1801" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1802", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1802" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1805" = type { %"class.WTF::HashTable.1806" }
%"class.WTF::HashTable.1806" = type <{ %"struct.WTF::KeyValuePair.1809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1809" = type opaque
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1770" = type { %"class.WTF::VectorBuffer.1771" }
%"class.WTF::VectorBuffer.1771" = type { %"class.WTF::VectorBufferBase.1772", [16 x i8] }
%"class.WTF::VectorBufferBase.1772" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1815" = type { %"class.WTF::VectorBuffer.1816" }
%"class.WTF::VectorBuffer.1816" = type { %"class.WTF::VectorBufferBase.1817" }
%"class.WTF::VectorBufferBase.1817" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1820" = type { %"class.WTF::HashTable.1821" }
%"class.WTF::HashTable.1821" = type <{ %"struct.WTF::KeyValuePair.1824"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1824" = type { i8**, %"class.std::__1::unique_ptr.2246" }
%"class.std::__1::unique_ptr.2246" = type { %"class.std::__1::__compressed_pair.2247" }
%"class.std::__1::__compressed_pair.2247" = type { %"struct.std::__1::__compressed_pair_elem.2248" }
%"struct.std::__1::__compressed_pair_elem.2248" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1825" }
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1828, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1845" }
%class.scoped_refptr.1828 = type { %"class.base::RefCountedData.1829"* }
%"class.base::RefCountedData.1829" = type { %"class.base::RefCountedThreadSafe.1830", %"class.WTF::Vector.1831" }
%"class.base::RefCountedThreadSafe.1830" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833" }
%"class.WTF::VectorBufferBase.1833" = type { %class.scoped_refptr.1834*, i32, i32 }
%class.scoped_refptr.1834 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1835", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1837" }
%"class.WTF::RefCounted.1835" = type { %"class.base::RefCounted.1836" }
%"class.base::RefCounted.1836" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1837" = type { %"class.std::__1::__compressed_pair.1838" }
%"class.std::__1::__compressed_pair.1838" = type { %"struct.std::__1::__compressed_pair_elem.1839" }
%"struct.std::__1::__compressed_pair_elem.1839" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1845" = type { %"class.std::__1::__compressed_pair.1846" }
%"class.std::__1::__compressed_pair.1846" = type { %"struct.std::__1::__compressed_pair_elem.1847" }
%"struct.std::__1::__compressed_pair_elem.1847" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1848", %"class.WTF::Vector.1861", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1848" = type { %"class.WTF::VectorBuffer.1849" }
%"class.WTF::VectorBuffer.1849" = type { %"class.WTF::VectorBufferBase.1850", [320 x i8] }
%"class.WTF::VectorBufferBase.1850" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1851", %"class.WTF::Vector.1851", %class.scoped_refptr.1856, i8, [7 x i8] }>
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853", [8 x i8] }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1856 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1857", %"class.WTF::Vector.1831", %"class.WTF::Vector.1831" }
%"class.WTF::RefCounted.1857" = type { %"class.base::RefCounted.1858" }
%"class.base::RefCounted.1858" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1861" = type { %"class.WTF::VectorBuffer.1862" }
%"class.WTF::VectorBuffer.1862" = type { %"class.WTF::VectorBufferBase.1863", [288 x i8] }
%"class.WTF::VectorBufferBase.1863" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1851", %"class.WTF::Vector.1851" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1864 }
%class.scoped_refptr.1864 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1873 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.1874 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1730", %class.scoped_refptr.1875, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1876, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1763, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1877", %"class.absl::optional.1893" }
%"class.absl::optional.1730" = type { %"class.absl::optional_internal::optional_data.1731" }
%"class.absl::optional_internal::optional_data.1731" = type { %"class.absl::optional_internal::optional_data_base.1732" }
%"class.absl::optional_internal::optional_data_base.1732" = type { %"class.absl::optional_internal::optional_data_dtor_base.1733" }
%"class.absl::optional_internal::optional_data_dtor_base.1733" = type { i8, %union.anon.1734 }
%union.anon.1734 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1875 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2021", [4 x i8], %union.anon.2023, %class.scoped_refptr.1875, i32, [4 x i8] }>
%"class.WTF::RefCounted.2021" = type { %"class.base::RefCounted.2022" }
%"class.base::RefCounted.2022" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2023 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1876 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1877" = type { %"class.std::__1::__compressed_pair.1878" }
%"class.std::__1::__compressed_pair.1878" = type { %"struct.std::__1::__compressed_pair_elem.1879" }
%"struct.std::__1::__compressed_pair_elem.1879" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1880", %"class.WTF::Vector.1885", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1880" = type { %"class.WTF::VectorBuffer.1881" }
%"class.WTF::VectorBuffer.1881" = type { %"class.WTF::VectorBufferBase.1882" }
%"class.WTF::VectorBufferBase.1882" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1885" = type { %"class.WTF::VectorBuffer.1886" }
%"class.WTF::VectorBuffer.1886" = type { %"class.WTF::VectorBufferBase.1887" }
%"class.WTF::VectorBufferBase.1887" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1893" = type { %"class.absl::optional_internal::optional_data.1894" }
%"class.absl::optional_internal::optional_data.1894" = type { %"class.absl::optional_internal::optional_data_base.1895" }
%"class.absl::optional_internal::optional_data_base.1895" = type { %"class.absl::optional_internal::optional_data_dtor_base.1896" }
%"class.absl::optional_internal::optional_data_dtor_base.1896" = type { i8, %union.anon.1897 }
%union.anon.1897 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1898" = type { %"class.WTF::VectorBuffer.1899" }
%"class.WTF::VectorBuffer.1899" = type { %"class.WTF::VectorBufferBase.1900", [8 x i8] }
%"class.WTF::VectorBufferBase.1900" = type { %class.scoped_refptr.1725*, i32, i32 }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1906", %"class.absl::optional.1911", %"class.absl::optional.1916" }
%"class.absl::optional.1906" = type { %"class.absl::optional_internal::optional_data.1907" }
%"class.absl::optional_internal::optional_data.1907" = type { %"class.absl::optional_internal::optional_data_base.1908" }
%"class.absl::optional_internal::optional_data_base.1908" = type { %"class.absl::optional_internal::optional_data_dtor_base.1909" }
%"class.absl::optional_internal::optional_data_dtor_base.1909" = type { i8, %union.anon.1910 }
%union.anon.1910 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1911" = type { %"class.absl::optional_internal::optional_data.1912" }
%"class.absl::optional_internal::optional_data.1912" = type { %"class.absl::optional_internal::optional_data_base.1913" }
%"class.absl::optional_internal::optional_data_base.1913" = type { %"class.absl::optional_internal::optional_data_dtor_base.1914" }
%"class.absl::optional_internal::optional_data_dtor_base.1914" = type { i8, [3 x i8], %union.anon.1915 }
%union.anon.1915 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1916" = type { %"class.absl::optional_internal::optional_data.1917" }
%"class.absl::optional_internal::optional_data.1917" = type { %"class.absl::optional_internal::optional_data_base.1918" }
%"class.absl::optional_internal::optional_data_base.1918" = type { %"class.absl::optional_internal::optional_data_dtor_base.1919" }
%"class.absl::optional_internal::optional_data_dtor_base.1919" = type { i8, %union.anon.1920 }
%union.anon.1920 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1924 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1925" = type { %"class.blink::PersistentBase.1926" }
%"class.blink::PersistentBase.1926" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1929", %"struct.blink::PhysicalRect", %"class.blink::Member.1939" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1929" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"class.WTF::HashSet.1932"* }
%"class.WTF::HashSet.1932" = type { %"class.WTF::HashTable.1933" }
%"class.WTF::HashTable.1933" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"class.WTF::Vector.1944"* }
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946" }
%"class.WTF::VectorBufferBase.1946" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1947 }
%union.anon.1947 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.1953, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.1953 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.1954, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.1954 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1955", %class.scoped_refptr.1957, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1958] }
%"class.WTF::RefCounted.1955" = type { %"class.base::RefCounted.1956" }
%"class.base::RefCounted.1956" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1957 = type { %"class.blink::SimpleFontData"* }
%struct.anon.1958 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.1967 }
%union.anon.1967 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1968", %"class.std::__1::unique_ptr.1988" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.1968" = type { %"class.blink::PersistentBase.1969" }
%"class.blink::PersistentBase.1969" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1972", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1972" = type { %"class.std::__1::__compressed_pair.1973" }
%"class.std::__1::__compressed_pair.1973" = type { %"struct.std::__1::__compressed_pair_elem.1974" }
%"struct.std::__1::__compressed_pair_elem.1974" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1975", %"class.WTF::HashMap.1980", %"class.WTF::String" }
%"class.WTF::Vector.1975" = type { %"class.WTF::VectorBuffer.1976" }
%"class.WTF::VectorBuffer.1976" = type { %"class.WTF::VectorBufferBase.1977" }
%"class.WTF::VectorBufferBase.1977" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1980" = type { %"class.WTF::HashTable.1981" }
%"class.WTF::HashTable.1981" = type <{ %"struct.WTF::KeyValuePair.1984"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1984" = type opaque
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1991", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1991" = type { %"class.WTF::HashTable.1994", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1994" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1997", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1997" = type { %"class.std::__1::__compressed_pair.1998" }
%"class.std::__1::__compressed_pair.1998" = type { %"struct.std::__1::__compressed_pair_elem.1999" }
%"struct.std::__1::__compressed_pair_elem.1999" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2000, %"class.std::__1::unique_ptr.2001", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2000 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2019", i16, %class.scoped_refptr.2000 }
%"class.WTF::ThreadSafeRefCounted.2019" = type { %"class.base::RefCountedThreadSafe.2020" }
%"class.base::RefCountedThreadSafe.2020" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2001" = type { %"class.std::__1::__compressed_pair.2002" }
%"class.std::__1::__compressed_pair.2002" = type { %"struct.std::__1::__compressed_pair_elem.2003" }
%"struct.std::__1::__compressed_pair_elem.2003" = type { %"class.WTF::Vector.2004"* }
%"class.WTF::Vector.2004" = type { %"class.WTF::VectorBuffer.2005" }
%"class.WTF::VectorBuffer.2005" = type { %"class.WTF::VectorBufferBase.2006" }
%"class.WTF::VectorBufferBase.2006" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2015, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2015 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2094", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.2174", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2024, %class.scoped_refptr.2024, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2074", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2079", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2024 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2025", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2032" }
%"class.WTF::RefCounted.2025" = type { %"class.base::RefCounted.2026" }
%"class.base::RefCounted.2026" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2027", i32, [4 x i8] }>
%"class.WTF::Vector.2027" = type { %"class.WTF::VectorBuffer.2028" }
%"class.WTF::VectorBuffer.2028" = type { %"class.WTF::VectorBufferBase.2029" }
%"class.WTF::VectorBufferBase.2029" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2032" = type { %"class.WTF::VectorBuffer.2033" }
%"class.WTF::VectorBuffer.2033" = type { %"class.WTF::VectorBufferBase.2034" }
%"class.WTF::VectorBufferBase.2034" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2035", %"class.std::__1::unique_ptr.2046", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2035" = type { %"class.std::__1::__compressed_pair.2036" }
%"class.std::__1::__compressed_pair.2036" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__compressed_pair_elem.2037" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2038", %"class.WTF::Vector.1663", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2038" = type { %"class.WTF::VectorBuffer.2039" }
%"class.WTF::VectorBuffer.2039" = type { %"class.WTF::VectorBufferBase.2040" }
%"class.WTF::VectorBufferBase.2040" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.2046" = type { %"class.std::__1::__compressed_pair.2047" }
%"class.std::__1::__compressed_pair.2047" = type { %"struct.std::__1::__compressed_pair_elem.2048" }
%"struct.std::__1::__compressed_pair_elem.2048" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2049", %"class.absl::optional.2049" }
%"class.absl::optional.2049" = type { %"class.absl::optional_internal::optional_data.2050" }
%"class.absl::optional_internal::optional_data.2050" = type { %"class.absl::optional_internal::optional_data_base.2051" }
%"class.absl::optional_internal::optional_data_base.2051" = type { %"class.absl::optional_internal::optional_data_dtor_base.2052" }
%"class.absl::optional_internal::optional_data_dtor_base.2052" = type { i8, [3 x i8], %union.anon.2053 }
%union.anon.2053 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2032"*, %"class.absl::optional.2059", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2059" = type { %"class.absl::optional_internal::optional_data.2060" }
%"class.absl::optional_internal::optional_data.2060" = type { %"class.absl::optional_internal::optional_data_base.2061" }
%"class.absl::optional_internal::optional_data_base.2061" = type { %"class.absl::optional_internal::optional_data_dtor_base.2062" }
%"class.absl::optional_internal::optional_data_dtor_base.2062" = type { i8, %union.anon.2063 }
%union.anon.2063 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2064", %"class.WTF::Vector.2069" }
%"class.WTF::Vector.2064" = type { %"class.WTF::VectorBuffer.2065" }
%"class.WTF::VectorBuffer.2065" = type { %"class.WTF::VectorBufferBase.2066", [128 x i8] }
%"class.WTF::VectorBufferBase.2066" = type { i32*, i32, i32 }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071", [128 x i8] }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2074" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2079" = type { %"class.WTF::HashTable.2080" }
%"class.WTF::HashTable.2080" = type <{ %"struct.WTF::KeyValuePair.2083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2083" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2084", %"class.WTF::Vector.2089" }
%"class.WTF::HashMap.2084" = type { %"class.WTF::HashTable.2085" }
%"class.WTF::HashTable.2085" = type <{ %"struct.WTF::KeyValuePair.2088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2088" = type opaque
%"class.WTF::Vector.2089" = type { %"class.WTF::VectorBuffer.2090" }
%"class.WTF::VectorBuffer.2090" = type { %"class.WTF::VectorBufferBase.2091" }
%"class.WTF::VectorBufferBase.2091" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.2094" = type { %"class.WTF::VectorBuffer.2095" }
%"class.WTF::VectorBuffer.2095" = type { %"class.WTF::VectorBufferBase.2096" }
%"class.WTF::VectorBufferBase.2096" = type { %"class.std::__1::unique_ptr.2097"*, i32, i32 }
%"class.std::__1::unique_ptr.2097" = type { %"class.std::__1::__compressed_pair.2098" }
%"class.std::__1::__compressed_pair.2098" = type { %"struct.std::__1::__compressed_pair_elem.2099" }
%"struct.std::__1::__compressed_pair_elem.2099" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.2100, %class.sk_sp.2101, %class.sk_sp.2139, %class.sk_sp.2140, %class.sk_sp.2141, %class.sk_sp.817, i32, float, float, i32, %union.anon.2142, [4 x i8] }>
%class.sk_sp.2100 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2101 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.2102", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.2110, i32, %"class.absl::optional.2126", %"class.std::__1::vector.842", %"class.std::__1::vector.2131", %class.sk_sp.2138, %class.sk_sp.2107, i32, [4 x i8] }>
%"class.absl::optional.2102" = type { %"class.absl::optional_internal::optional_data.2103" }
%"class.absl::optional_internal::optional_data.2103" = type { %"class.absl::optional_internal::optional_data_base.2104" }
%"class.absl::optional_internal::optional_data_base.2104" = type { %"class.absl::optional_internal::optional_data_dtor_base.2105" }
%"class.absl::optional_internal::optional_data_dtor_base.2105" = type { i8, %union.anon.2106 }
%union.anon.2106 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.2107, %class.sk_sp.2110, %"class.gfx::Rect", i32, %class.sk_sp.2115, %class.sk_sp.2123, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2107, %class.scoped_refptr.2124 }
%class.sk_sp.2115 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2116" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2108, i32, i32 }
%class.sk_sp.2108 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2109, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2109 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.2116" = type { %"class.std::__1::__vector_base.2117" }
%"class.std::__1::__vector_base.2117" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2118" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.2123 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.2124 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2125", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2125" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.2110 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2111", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2111" = type { %"class.std::__1::__compressed_pair.2112" }
%"class.std::__1::__compressed_pair.2112" = type { %"struct.std::__1::__compressed_pair_elem.2113" }
%"struct.std::__1::__compressed_pair_elem.2113" = type { i8* }
%"class.absl::optional.2126" = type { %"class.absl::optional_internal::optional_data.2127" }
%"class.absl::optional_internal::optional_data.2127" = type { %"class.absl::optional_internal::optional_data_base.2128" }
%"class.absl::optional_internal::optional_data_base.2128" = type { %"class.absl::optional_internal::optional_data_dtor_base.2129" }
%"class.absl::optional_internal::optional_data_dtor_base.2129" = type { i8, %union.anon.2130 }
%union.anon.2130 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.2131" = type { %"class.std::__1::__vector_base.2132" }
%"class.std::__1::__vector_base.2132" = type { float*, float*, %"class.std::__1::__compressed_pair.2133" }
%"class.std::__1::__compressed_pair.2133" = type { %"struct.std::__1::__compressed_pair_elem.2134" }
%"struct.std::__1::__compressed_pair_elem.2134" = type { float* }
%class.sk_sp.2138 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.2107 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.2139 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2140 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2141 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.2142 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.2100 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.2148, %"class.std::__1::unique_ptr.2149" }
%class.scoped_refptr.2148 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.2149" = type { %"class.std::__1::__compressed_pair.2150" }
%"class.std::__1::__compressed_pair.2150" = type { %"struct.std::__1::__compressed_pair_elem.2151" }
%"struct.std::__1::__compressed_pair_elem.2151" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.2152", %struct.SkRect }
%"class.absl::optional.2152" = type { %"class.absl::optional_internal::optional_data.2153" }
%"class.absl::optional_internal::optional_data.2153" = type { %"class.absl::optional_internal::optional_data_base.2154" }
%"class.absl::optional_internal::optional_data_base.2154" = type { %"class.absl::optional_internal::optional_data_dtor_base.2155" }
%"class.absl::optional_internal::optional_data_dtor_base.2155" = type { i8, %union.anon.2156 }
%union.anon.2156 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2157, [384 x i64], %class.sk_sp.2158, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.2159", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2165" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2157 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.2158 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.2159" = type { %"class.std::__1::__compressed_pair.2160" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.2161" }
%"struct.std::__1::__compressed_pair_elem.2161" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2165" = type { %"class.std::__1::__compressed_pair.2166" }
%"class.std::__1::__compressed_pair.2166" = type { %"struct.std::__1::__compressed_pair_elem.2167" }
%"struct.std::__1::__compressed_pair_elem.2167" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.2174" = type { %"class.std::__1::__compressed_pair.2175" }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.2195", %"class.std::__1::unique_ptr.2200" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.2177", %"class.std::__1::unique_ptr.2177", %"class.std::__1::unique_ptr.2183", %"class.std::__1::unique_ptr.2189", %class.sk_sp.2140 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2177" = type { %"class.std::__1::__compressed_pair.2178" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.2179" }
%"struct.std::__1::__compressed_pair_elem.2179" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.2183" = type { %"class.std::__1::__compressed_pair.2184" }
%"class.std::__1::__compressed_pair.2184" = type { %"struct.std::__1::__compressed_pair_elem.2185" }
%"struct.std::__1::__compressed_pair_elem.2185" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.2195" = type { %"class.absl::optional_internal::optional_data.2196" }
%"class.absl::optional_internal::optional_data.2196" = type { %"class.absl::optional_internal::optional_data_base.2197" }
%"class.absl::optional_internal::optional_data_base.2197" = type { %"class.absl::optional_internal::optional_data_dtor_base.2198" }
%"class.absl::optional_internal::optional_data_dtor_base.2198" = type { i8, %union.anon.2199 }
%union.anon.2199 = type { i32 }
%"class.std::__1::unique_ptr.2200" = type { %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.2202" }
%"struct.std::__1::__compressed_pair_elem.2202" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::NGBoxFragmentPainter" = type { %"class.blink::BoxPainterBase", %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::DisplayItemClient"*, %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGInlineCursor"* }
%"class.blink::BoxPainterBase" = type { i32 (...)**, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::Node"* }
%"class.blink::DrawingRecorder" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.1735", [4 x i8] }>
%"class.blink::BackgroundImageGeometry" = type <{ %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalSize", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGLineBoxFragmentPainter" = type { %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGPhysicalBoxFragment"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }

$_ZN5blink26NGInlineBoxFragmentPainterC2ERKNS_14NGInlineCursorERKNS_14NGFragmentItemERKNS_21NGPhysicalBoxFragmentE = comdat any

@_ZTVN5blink30NGInlineBoxFragmentPainterBaseE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink30NGInlineBoxFragmentPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast (void (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink30NGInlineBoxFragmentPainterBase19PaintInsetBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PhysicalRect"*, i8)* @_ZNK5blink30NGInlineBoxFragmentPainterBase22PaintRectForImageStripERKNS_12PhysicalRectENS_13TextDirectionE to i8*), i8* bitcast (i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PhysicalRect"*, %"class.blink::IntRect"*, i1)* @_ZNK5blink30NGInlineBoxFragmentPainterBase18GetBorderPaintTypeERKNS_12PhysicalRectERNS_7IntRectEb to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink26NGInlineBoxFragmentPainterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink30NGInlineBoxFragmentPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast (void (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"*, %"class.blink::ComputedStyle"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink30NGInlineBoxFragmentPainterBase19PaintInsetBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PhysicalRect"*, i8)* @_ZNK5blink30NGInlineBoxFragmentPainterBase22PaintRectForImageStripERKNS_12PhysicalRectENS_13TextDirectionE to i8*), i8* bitcast (i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PhysicalRect"*, %"class.blink::IntRect"*, i1)* @_ZNK5blink30NGInlineBoxFragmentPainterBase18GetBorderPaintTypeERKNS_12PhysicalRectERNS_7IntRectEb to i8*), i8* bitcast (i32 (%"class.blink::NGInlineBoxFragmentPainter"*)* @_ZNK5blink26NGInlineBoxFragmentPainter14SidesToIncludeEv to i8*)] }, align 8
@_ZTVN5blink20NGBoxFragmentPainterE = external unnamed_addr constant { [8 x i8*] }, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink26NGInlineBoxFragmentPainter14SidesToIncludeEv(%"class.blink::NGInlineBoxFragmentPainter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.blink::NGPhysicalFragment"** %2 to %"class.blink::NGPhysicalBoxFragment"**
  %4 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %4, i64 0, i32 1
  %6 = bitcast i24* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = and i32 %8, 1
  %10 = shl i32 %7, 19
  %11 = and i32 %10, 16777216
  %12 = shl i32 %7, 12
  %13 = and i32 %12, 65536
  %14 = or i32 %11, %13
  %15 = shl i32 %7, 5
  %16 = and i32 %15, 256
  %17 = or i32 %14, %16
  %18 = or i32 %17, %9
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGInlineBoxFragmentPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = alloca %"class.blink::NGBoxFragmentPainter", align 8
  %7 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %8 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %10, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %8, i64 0, i32 1
  %14 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %14, i64 0, i32 19
  %16 = load i32, i32* %15, align 8
  store i32 %12, i32* %15, align 8
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %9, align 8
  %19 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %22) #6
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %18, i64 0, i32 2, i32 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %32) #6
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %28 to i64
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 5
  br i1 %45, label %46, label %49

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0
  call void @_ZN5blink30NGInlineBoxFragmentPainterBase27PaintBackgroundBorderShadowERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainterBase"* %47, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5)
  %48 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %9, align 8
  br label %49

49:                                               ; preds = %46, %3
  %50 = phi %"class.blink::NGFragmentItem"* [ %48, %46 ], [ %18, %3 ]
  %51 = bitcast %"class.blink::NGBoxFragmentPainter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 72, i1 false)
  %52 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 3
  %53 = bitcast %"class.blink::NGInlineCursor"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 1
  %56 = bitcast %"class.blink::NGPhysicalFragment"** %55 to %"class.blink::NGPhysicalBoxFragment"**
  %57 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %50, i64 0, i32 0
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutObject"* %59, null
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 1
  %62 = bitcast %"class.blink::DisplayItemClient.base"* %61 to %"class.blink::DisplayItemClient"*
  %63 = select i1 %60, %"class.blink::DisplayItemClient"* null, %"class.blink::DisplayItemClient"* %62
  %64 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 0, i32 1
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 6, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %69, label %76

69:                                               ; preds = %49, %69
  %70 = phi %"class.blink::LayoutObject"* [ %72, %69 ], [ %65, %49 ]
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 7
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 6, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %69, label %76

76:                                               ; preds = %69, %49
  %77 = phi %"class.blink::Node"* [ %67, %49 ], [ %74, %69 ]
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.blink::Document"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 0, i32 3
  %84 = bitcast i24* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = lshr i32 %85, 10
  %87 = and i32 %86, 3
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %76
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 5, i32 0
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %90, align 8
  br label %95

92:                                               ; preds = %76
  %93 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %65, i32 %87) #6
  %94 = load i32, i32* %84, align 8
  br label %95

95:                                               ; preds = %92, %89
  %96 = phi i32 [ %85, %89 ], [ %94, %92 ]
  %97 = phi %"class.blink::ComputedStyle"* [ %91, %89 ], [ %93, %92 ]
  %98 = and i32 %96, 64
  %99 = icmp eq i32 %98, 0
  %100 = and i32 %96, 960
  %101 = icmp ne i32 %100, 256
  %102 = and i1 %99, %101
  br i1 %102, label %103, label %137

103:                                              ; preds = %95
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 4
  %106 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %105 to i96*
  %107 = load i96, i96* %106, align 4
  %108 = and i96 %107, 16777216
  %109 = icmp eq i96 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %122, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.blink::Node"* %112 to i8 (%"class.blink::Node"*)***
  %116 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %115, align 8
  %117 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %116, i64 34
  %118 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %117, align 8
  %119 = call zeroext i8 %118(%"class.blink::Node"* nonnull %112) #6
  %120 = icmp ne i8 %119, 0
  %121 = load i96, i96* %106, align 4
  br label %122

122:                                              ; preds = %114, %110, %103
  %123 = phi i96 [ %107, %110 ], [ %121, %114 ], [ %107, %103 ]
  %124 = phi i1 [ false, %110 ], [ %120, %114 ], [ false, %103 ]
  %125 = and i96 %123, 16777216
  %126 = icmp eq i96 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 6, i32 0, i32 0
  %129 = load %"class.blink::Node"*, %"class.blink::Node"** %128, align 8
  br label %130

130:                                              ; preds = %127, %122
  %131 = phi %"class.blink::Node"* [ %129, %127 ], [ null, %122 ]
  br i1 %124, label %132, label %137

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 2, i32 0, i32 0
  %134 = bitcast %"class.blink::Node"** %133 to %"class.blink::ContainerNode"**
  %135 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %135, i64 0, i32 0
  br label %137

137:                                              ; preds = %95, %130, %132
  %138 = phi %"class.blink::Node"* [ null, %95 ], [ %136, %132 ], [ %131, %130 ]
  %139 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 1
  %141 = bitcast %"class.blink::Document"** %140 to i64*
  store i64 %82, i64* %141, align 8
  %142 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 2
  store %"class.blink::ComputedStyle"* %97, %"class.blink::ComputedStyle"** %142, align 8
  %143 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 3
  store %"class.blink::Node"* %138, %"class.blink::Node"** %143, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink20NGBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %144 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 1
  store %"class.blink::NGPhysicalBoxFragment"* %57, %"class.blink::NGPhysicalBoxFragment"** %144, align 8
  %145 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 2
  store %"class.blink::DisplayItemClient"* %63, %"class.blink::DisplayItemClient"** %145, align 8
  %146 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 3
  %147 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 1
  %148 = bitcast i24* %147 to i32*
  %149 = load i32, i32* %148, align 8
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 6, i64 %154
  %156 = bitcast %"struct.blink::NGLink"* %155 to %"class.blink::NGFragmentItems"*
  %157 = select i1 %151, %"class.blink::NGFragmentItems"* null, %"class.blink::NGFragmentItems"* %156
  store %"class.blink::NGFragmentItems"* %157, %"class.blink::NGFragmentItems"** %146, align 8
  %158 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 4
  store %"class.blink::NGFragmentItem"* %50, %"class.blink::NGFragmentItem"** %158, align 8
  %159 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 5
  %160 = bitcast %"class.blink::NGInlineCursor"** %159 to i64*
  store i64 %54, i64* %160, align 8
  call void @_ZN5blink20NGBoxFragmentPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetEb(%"class.blink::NGBoxFragmentPainter"* nonnull %6, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5, i1 zeroext true) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  %161 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %13, align 8
  %162 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %161, i64 0, i32 19
  store i32 %16, i32* %162, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30NGInlineBoxFragmentPainterBase27PaintBackgroundBorderShadowERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = alloca %"class.blink::DrawingRecorder", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %9 = alloca %"class.blink::NGBoxFragmentPainter", align 8
  %10 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %11 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 1
  %12 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %12, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %12, i64 0, i32 3
  %16 = bitcast i24* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 10
  %19 = and i32 %18, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %14, i32 %19) #6
  br label %26

26:                                               ; preds = %21, %24
  %27 = phi %"class.blink::ComputedStyle"* [ %23, %21 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 3802951800684688204490109616128
  %32 = icmp eq i160 %31, 1267650600228229401496703205376
  br i1 %32, label %33, label %251

33:                                               ; preds = %26
  %34 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %11, align 8
  %35 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %34, i64 0, i32 3
  %36 = bitcast i24* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 64
  %39 = icmp eq i32 %38, 0
  %40 = and i32 %37, 960
  %41 = icmp ne i32 %40, 256
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %34, i64 0, i32 1
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  br label %46

46:                                               ; preds = %33, %43
  %47 = phi %"class.blink::LayoutObject"* [ %45, %43 ], [ null, %33 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = and i96 %50, 2251799813685248
  %52 = icmp ne i96 %51, 0
  %53 = and i32 %37, 3072
  %54 = icmp eq i32 %53, 1024
  %55 = or i1 %54, %52
  br i1 %55, label %56, label %251

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 2
  %58 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %58, i64 0, i32 0
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 1
  %63 = bitcast %"class.blink::DisplayItemClient.base"* %62 to %"class.blink::DisplayItemClient"*
  %64 = select i1 %61, %"class.blink::DisplayItemClient"* null, %"class.blink::DisplayItemClient"* %63
  %65 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %66 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %66, i64 0, i32 1
  %68 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %67, align 8
  %69 = tail call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %68, %"class.blink::DisplayItemClient"* dereferenceable(16) %64, i32 14) #6
  br i1 %69, label %251, label %70

70:                                               ; preds = %56
  %71 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %11, align 8
  %72 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %71, i64 0, i32 2
  %73 = bitcast %"struct.blink::PhysicalSize"* %72 to i64*
  %74 = load i64, i64* %73, align 4
  %75 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #6
  %76 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %77 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  %78 = load i64, i64* %76, align 4
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1
  %80 = bitcast %"struct.blink::PhysicalSize"* %79 to i64*
  store i64 %74, i64* %80, align 8
  %81 = bitcast %"class.blink::DrawingRecorder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %81) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 48, i1 false)
  %82 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %65, align 8
  %83 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #6
  %84 = tail call { i64, i64 } @_ZN5blink30NGInlineBoxFragmentPainterBase10VisualRectERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainterBase"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %86 = extractvalue { i64, i64 } %84, 0
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %88 = extractvalue { i64, i64 } %84, 1
  store i64 %88, i64* %87, align 8
  call void @_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nonnull %5, %"class.blink::GraphicsContext"* dereferenceable(112) %82, %"class.blink::DisplayItemClient"* dereferenceable(16) %64, i32 14, %"class.blink::IntRect"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #6
  %89 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %11, align 8
  %90 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %89, i64 0, i32 3
  %91 = bitcast i24* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 64
  %94 = icmp eq i32 %93, 0
  %95 = and i32 %92, 960
  %96 = icmp ne i32 %95, 256
  %97 = and i1 %94, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %70
  %99 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %89, i64 0, i32 1
  %100 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %99, align 8
  br label %101

101:                                              ; preds = %70, %98
  %102 = phi %"class.blink::LayoutObject"* [ %100, %98 ], [ null, %70 ]
  %103 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %57, align 8
  %104 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %103, i64 0, i32 4
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %103, i64 0, i32 6
  %109 = load i16, i16* %108, align 8
  %110 = and i16 %109, 16384
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 4
  %114 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %113 to i96*
  %115 = load i96, i96* %114, align 4
  %116 = and i96 %115, 1099511627776
  %117 = icmp ne i96 %116, 0
  br label %118

118:                                              ; preds = %101, %107, %112
  %119 = phi i1 [ true, %107 ], [ true, %101 ], [ %117, %112 ]
  %120 = bitcast %"class.blink::BackgroundImageGeometry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %120) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 96, i1 false)
  %121 = load i32, i32* %91, align 8
  %122 = and i32 %121, 64
  %123 = icmp eq i32 %122, 0
  %124 = and i32 %121, 960
  %125 = icmp ne i32 %124, 256
  %126 = and i1 %123, %125
  br i1 %126, label %127, label %131

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %89, i64 0, i32 1
  %129 = bitcast %"class.blink::LayoutObject"** %128 to %"class.blink::LayoutBoxModelObject"**
  %130 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %129, align 8
  br label %131

131:                                              ; preds = %118, %127
  %132 = phi %"class.blink::LayoutBoxModelObject"* [ %130, %127 ], [ null, %118 ]
  call void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nonnull %8, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %132) #6
  %133 = bitcast %"class.blink::NGBoxFragmentPainter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %133) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 72, i1 false)
  %134 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 3
  %135 = bitcast %"class.blink::NGInlineCursor"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %57, align 8
  %138 = bitcast %"class.blink::NGPhysicalFragment"** %11 to %"class.blink::NGPhysicalBoxFragment"**
  %139 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %137, i64 0, i32 0
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = icmp eq %"class.blink::LayoutObject"* %141, null
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 1
  %144 = bitcast %"class.blink::DisplayItemClient.base"* %143 to %"class.blink::DisplayItemClient"*
  %145 = select i1 %142, %"class.blink::DisplayItemClient"* null, %"class.blink::DisplayItemClient"* %144
  %146 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %139, i64 0, i32 0, i32 1
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 6, i32 0, i32 0
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %148, align 8
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %151, label %158

151:                                              ; preds = %131, %151
  %152 = phi %"class.blink::LayoutObject"* [ %154, %151 ], [ %147, %131 ]
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 7
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 6, i32 0, i32 0
  %156 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %151, label %158

158:                                              ; preds = %151, %131
  %159 = phi %"class.blink::Node"* [ %149, %131 ], [ %156, %151 ]
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 3, i32 0, i32 0
  %161 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %161, i64 0, i32 2, i32 0, i32 0
  %163 = bitcast %"class.blink::Document"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %139, i64 0, i32 0, i32 3
  %166 = bitcast i24* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = lshr i32 %167, 10
  %169 = and i32 %168, 3
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 5, i32 0
  %173 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %172, align 8
  br label %177

174:                                              ; preds = %158
  %175 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %147, i32 %169) #6
  %176 = load i32, i32* %166, align 8
  br label %177

177:                                              ; preds = %174, %171
  %178 = phi i32 [ %167, %171 ], [ %176, %174 ]
  %179 = phi %"class.blink::ComputedStyle"* [ %173, %171 ], [ %175, %174 ]
  %180 = and i32 %178, 64
  %181 = icmp eq i32 %180, 0
  %182 = and i32 %178, 960
  %183 = icmp ne i32 %182, 256
  %184 = and i1 %181, %183
  br i1 %184, label %185, label %219

185:                                              ; preds = %177
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %187 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 4
  %188 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %187 to i96*
  %189 = load i96, i96* %188, align 4
  %190 = and i96 %189, 16777216
  %191 = icmp eq i96 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 6, i32 0, i32 0
  %194 = load %"class.blink::Node"*, %"class.blink::Node"** %193, align 8
  %195 = icmp eq %"class.blink::Node"* %194, null
  br i1 %195, label %204, label %196

196:                                              ; preds = %192
  %197 = bitcast %"class.blink::Node"* %194 to i8 (%"class.blink::Node"*)***
  %198 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %197, align 8
  %199 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %198, i64 34
  %200 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %199, align 8
  %201 = call zeroext i8 %200(%"class.blink::Node"* nonnull %194) #6
  %202 = icmp ne i8 %201, 0
  %203 = load i96, i96* %188, align 4
  br label %204

204:                                              ; preds = %196, %192, %185
  %205 = phi i96 [ %189, %192 ], [ %203, %196 ], [ %189, %185 ]
  %206 = phi i1 [ false, %192 ], [ %202, %196 ], [ false, %185 ]
  %207 = and i96 %205, 16777216
  %208 = icmp eq i96 %207, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %186, i64 0, i32 6, i32 0, i32 0
  %211 = load %"class.blink::Node"*, %"class.blink::Node"** %210, align 8
  br label %212

212:                                              ; preds = %209, %204
  %213 = phi %"class.blink::Node"* [ %211, %209 ], [ null, %204 ]
  br i1 %206, label %214, label %219

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %213, i64 0, i32 2, i32 0, i32 0
  %216 = bitcast %"class.blink::Node"** %215 to %"class.blink::ContainerNode"**
  %217 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %217, i64 0, i32 0
  br label %219

219:                                              ; preds = %177, %212, %214
  %220 = phi %"class.blink::Node"* [ null, %177 ], [ %218, %214 ], [ %213, %212 ]
  %221 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 1
  %223 = bitcast %"class.blink::Document"** %222 to i64*
  store i64 %164, i64* %223, align 8
  %224 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 2
  store %"class.blink::ComputedStyle"* %179, %"class.blink::ComputedStyle"** %224, align 8
  %225 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 3
  store %"class.blink::Node"* %220, %"class.blink::Node"** %225, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink20NGBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %221, align 8
  %226 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 1
  store %"class.blink::NGPhysicalBoxFragment"* %139, %"class.blink::NGPhysicalBoxFragment"** %226, align 8
  %227 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 2
  store %"class.blink::DisplayItemClient"* %145, %"class.blink::DisplayItemClient"** %227, align 8
  %228 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 3
  %229 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %139, i64 0, i32 1
  %230 = bitcast i24* %229 to i32*
  %231 = load i32, i32* %230, align 8
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %139, i64 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %139, i64 0, i32 6, i64 %236
  %238 = bitcast %"struct.blink::NGLink"* %237 to %"class.blink::NGFragmentItems"*
  %239 = select i1 %233, %"class.blink::NGFragmentItems"* null, %"class.blink::NGFragmentItems"* %238
  store %"class.blink::NGFragmentItems"* %239, %"class.blink::NGFragmentItems"** %228, align 8
  %240 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 4
  store %"class.blink::NGFragmentItem"* %137, %"class.blink::NGFragmentItem"** %240, align 8
  %241 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 5
  %242 = bitcast %"class.blink::NGInlineCursor"** %241 to i64*
  store i64 %136, i64* %242, align 8
  %243 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 0
  %244 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0
  %245 = bitcast %"class.blink::BackgroundImageGeometry"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %245, i8* nonnull align 8 %120, i64 96, i1 false)
  %246 = bitcast %"class.blink::NGInlineBoxFragmentPainterBase"* %0 to i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)***
  %247 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)**, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*** %246, align 8
  %248 = getelementptr inbounds i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %247, i64 4
  %249 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %248, align 8
  %250 = call i32 %249(%"class.blink::NGInlineBoxFragmentPainterBase"* %0) #6
  call void @_ZN5blink20InlineBoxPainterBase28PaintBoxDecorationBackgroundERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_12PhysicalRectENS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"* %243, %"class.blink::BoxPainterBase"* nonnull dereferenceable(32) %244, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.blink::BackgroundImageGeometry"* nonnull byval(%"class.blink::BackgroundImageGeometry") align 8 %10, i1 zeroext %119, i32 %250) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %133) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %120) #6
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %81) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #6
  br label %251

251:                                              ; preds = %46, %56, %219, %26
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink20NGBoxFragmentPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetEb(%"class.blink::NGBoxFragmentPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink30NGInlineBoxFragmentPainterBase10VisualRectERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainterBase"* nocapture readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 2
  %4 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %3, align 8
  %5 = tail call { i64, i64 } @_ZNK5blink14NGFragmentItem15SelfInkOverflowEv(%"class.blink::NGFragmentItem"* %4) #6
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = extractvalue { i64, i64 } %5, 1
  %11 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 0
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %12) #6
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  %19 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %20) #6
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  %27 = icmp slt i32 %18, -2147483584
  %28 = ashr i32 %18, 6
  %29 = select i1 %27, i32 -33554432, i32 %28, !prof !2
  %30 = icmp slt i32 %26, -2147483584
  %31 = ashr i32 %26, 6
  %32 = select i1 %30, i32 -33554432, i32 %31, !prof !2
  %33 = zext i32 %32 to i64
  %34 = shl nuw i64 %33, 32
  %35 = trunc i64 %10 to i32
  %36 = icmp slt i32 %35, 0
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %35) #6
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = lshr i64 %10, 32
  %43 = trunc i64 %42 to i32
  %44 = icmp slt i32 %43, 0
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %43) #6
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp sgt i32 %41, 2147483583
  br i1 %50, label %58, label %51, !prof !2

51:                                               ; preds = %2
  %52 = icmp sgt i32 %41, -1
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = add nuw nsw i32 %41, 63
  %55 = sdiv i32 %54, 64
  br label %58

56:                                               ; preds = %51
  %57 = sdiv i32 %41, 64
  br label %58

58:                                               ; preds = %56, %53, %2
  %59 = phi i32 [ %55, %53 ], [ %57, %56 ], [ 33554431, %2 ]
  %60 = icmp sgt i32 %49, 2147483583
  br i1 %60, label %68, label %61, !prof !2

61:                                               ; preds = %58
  %62 = icmp sgt i32 %49, -1
  br i1 %62, label %63, label %66

63:                                               ; preds = %61
  %64 = add nuw nsw i32 %49, 63
  %65 = sdiv i32 %64, 64
  br label %68

66:                                               ; preds = %61
  %67 = sdiv i32 %49, 64
  br label %68

68:                                               ; preds = %58, %63, %66
  %69 = phi i32 [ %65, %63 ], [ %67, %66 ], [ 33554431, %58 ]
  %70 = sub nsw i32 %59, %29
  %71 = sub nsw i32 %69, %32
  %72 = zext i32 %71 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %70 to i64
  %75 = or i64 %73, %74
  %76 = zext i32 %29 to i64
  %77 = or i64 %34, %76
  %78 = insertvalue { i64, i64 } undef, i64 %77, 0
  %79 = insertvalue { i64, i64 } %78, i64 %75, 1
  ret { i64, i64 } %79
}

declare void @_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"* dereferenceable(88)) unnamed_addr #3

declare void @_ZN5blink20InlineBoxPainterBase28PaintBoxDecorationBackgroundERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_12PhysicalRectENS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"*, %"class.blink::BoxPainterBase"* dereferenceable(32), %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::BackgroundImageGeometry"* byval(%"class.blink::BackgroundImageGeometry") align 8, i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"*) unnamed_addr #4

declare { i64, i64 } @_ZNK5blink14NGFragmentItem15SelfInkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24NGLineBoxFragmentPainter27PaintBackgroundBorderShadowERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::NGLineBoxFragmentPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = alloca %"class.blink::DrawingRecorder", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %9 = alloca %"class.blink::NGBoxFragmentPainter", align 8
  %10 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 5
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink13ComputedStyleeqERKS0_(%"class.blink::ComputedStyle"* %12, %"class.blink::ComputedStyle"* dereferenceable(104) %14) #6
  br i1 %15, label %270, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = and i160 %21, 3802951800684688204490109616128
  %23 = icmp eq i160 %22, 1267650600228229401496703205376
  br i1 %23, label %24, label %270

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0, i32 2
  %27 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %27, i64 0, i32 0
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutObject"* %29, null
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 1
  %32 = bitcast %"class.blink::DisplayItemClient.base"* %31 to %"class.blink::DisplayItemClient"*
  %33 = select i1 %30, %"class.blink::DisplayItemClient"* null, %"class.blink::DisplayItemClient"* %32
  %34 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %35 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %35, i64 0, i32 1
  %37 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %37, %"class.blink::DisplayItemClient"* dereferenceable(16) %33, i32 14) #6
  br i1 %38, label %270, label %39

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 0, i32 1
  %41 = bitcast %"class.blink::NGPhysicalFragment"** %40 to %"class.blink::NGPhysicalLineBoxFragment"**
  %42 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %42, i64 0, i32 1
  %44 = bitcast %"struct.blink::FontHeight"* %43 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = trunc i64 %45 to i32
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %48 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %47) #6
  %49 = tail call i64 @_ZNK5blink13ComputedStyle13GetFontHeightENS_12FontBaselineE(%"class.blink::ComputedStyle"* %47, i32 %48) #6
  %50 = trunc i64 %49 to i32
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  %53 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %53, i64 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #6
  %58 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #6
  %59 = and i160 %56, 15211807202738752817960438464512
  %60 = icmp eq i160 %59, 0
  br i1 %60, label %61, label %82

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %63 = icmp sgt i32 %50, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %46, i32 %50) #6
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  store i32 %68, i32* %62, align 4
  %69 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %42, i64 0, i32 0, i32 2
  %70 = bitcast %"struct.blink::PhysicalSize"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp slt i32 %52, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %52) #6
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !2
  %78 = zext i32 %77 to i64
  %79 = shl nuw i64 %78, 32
  %80 = and i64 %71, 4294967295
  %81 = or i64 %80, %79
  br label %109

82:                                               ; preds = %39
  %83 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %42, i64 0, i32 0, i32 2
  %85 = bitcast %"struct.blink::PhysicalSize"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = trunc i64 %86 to i32
  %88 = and i64 %86, -4294967296
  %89 = icmp sgt i32 %46, -1
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %46) #6
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !2
  %95 = icmp sgt i32 %52, -1
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %94, i32 %52) #6
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  store i32 %100, i32* %83, align 8
  %101 = icmp slt i32 %52, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %52) #6
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !2
  %107 = zext i32 %106 to i64
  %108 = or i64 %88, %107
  br label %109

109:                                              ; preds = %82, %61
  %110 = phi i64 [ %108, %82 ], [ %81, %61 ]
  %111 = phi i32 [ 0, %82 ], [ %68, %61 ]
  %112 = phi i32 [ %100, %82 ], [ 0, %61 ]
  %113 = bitcast %"struct.blink::PhysicalSize"* %58 to i64*
  store i64 %110, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %115) #6
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !2
  %122 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, 0
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %123) #6
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !2
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %121 to i64
  %133 = or i64 %131, %132
  %134 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  store i64 %133, i64* %134, align 8
  %135 = bitcast %"class.blink::DrawingRecorder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %135) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 48, i1 false)
  %136 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %34, align 8
  %137 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #6
  %138 = tail call { i64, i64 } @_ZN5blink30NGInlineBoxFragmentPainterBase10VisualRectERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainterBase"* %25, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %140 = extractvalue { i64, i64 } %138, 0
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %142 = extractvalue { i64, i64 } %138, 1
  store i64 %142, i64* %141, align 8
  call void @_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nonnull %5, %"class.blink::GraphicsContext"* dereferenceable(112) %136, %"class.blink::DisplayItemClient"* dereferenceable(16) %33, i32 14, %"class.blink::IntRect"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #6
  %143 = getelementptr inbounds %"class.blink::NGLineBoxFragmentPainter", %"class.blink::NGLineBoxFragmentPainter"* %0, i64 0, i32 1
  %144 = bitcast %"class.blink::NGPhysicalBoxFragment"** %143 to %"class.blink::NGPhysicalFragment"**
  %145 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %145, i64 0, i32 3
  %147 = bitcast i24* %146 to i32*
  %148 = load i32, i32* %147, align 8
  %149 = and i32 %148, 64
  %150 = icmp eq i32 %149, 0
  %151 = and i32 %148, 960
  %152 = icmp ne i32 %151, 256
  %153 = and i1 %150, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %109
  %155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %145, i64 0, i32 1
  %156 = bitcast %"class.blink::LayoutObject"** %155 to %"class.blink::LayoutBlockFlow"**
  %157 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %156, align 8
  br label %158

158:                                              ; preds = %109, %154
  %159 = phi %"class.blink::LayoutBlockFlow"* [ %157, %154 ], [ null, %109 ]
  %160 = bitcast %"class.blink::BackgroundImageGeometry"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %160) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 96, i1 false)
  %161 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %159, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nonnull %8, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %161) #6
  %162 = bitcast %"class.blink::NGBoxFragmentPainter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %162) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 72, i1 false)
  %163 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %143, align 8
  %164 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %163, i64 0, i32 0, i32 3
  %165 = bitcast i24* %164 to i32*
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 64
  %168 = icmp eq i32 %167, 0
  %169 = and i32 %166, 960
  %170 = icmp ne i32 %169, 256
  %171 = and i1 %168, %170
  %172 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %163, i64 0, i32 0, i32 1
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  %174 = select i1 %171, %"class.blink::LayoutObject"* %173, %"class.blink::LayoutObject"* null
  %175 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %174, i64 0, i32 1
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 6, i32 0, i32 0
  %177 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  %178 = icmp eq %"class.blink::Node"* %177, null
  br i1 %178, label %179, label %186

179:                                              ; preds = %158, %179
  %180 = phi %"class.blink::LayoutObject"* [ %182, %179 ], [ %173, %158 ]
  %181 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %180, i64 0, i32 7
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %182, i64 0, i32 6, i32 0, i32 0
  %184 = load %"class.blink::Node"*, %"class.blink::Node"** %183, align 8
  %185 = icmp eq %"class.blink::Node"* %184, null
  br i1 %185, label %179, label %186

186:                                              ; preds = %179, %158
  %187 = phi %"class.blink::Node"* [ %177, %158 ], [ %184, %179 ]
  %188 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %187, i64 0, i32 3, i32 0, i32 0
  %189 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %189, i64 0, i32 2, i32 0, i32 0
  %191 = bitcast %"class.blink::Document"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = lshr i32 %166, 10
  %194 = and i32 %193, 3
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %186
  %197 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 5, i32 0
  %198 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %197, align 8
  br label %203

199:                                              ; preds = %186
  %200 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %173, i32 %194) #6
  %201 = load i32, i32* %165, align 8
  %202 = and i32 %201, 960
  br label %203

203:                                              ; preds = %199, %196
  %204 = phi i32 [ %202, %199 ], [ %169, %196 ]
  %205 = phi i32 [ %201, %199 ], [ %166, %196 ]
  %206 = phi %"class.blink::ComputedStyle"* [ %200, %199 ], [ %198, %196 ]
  %207 = and i32 %205, 64
  %208 = icmp eq i32 %207, 0
  %209 = icmp ne i32 %204, 256
  %210 = and i1 %208, %209
  br i1 %210, label %211, label %245

211:                                              ; preds = %203
  %212 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 4
  %214 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %213 to i96*
  %215 = load i96, i96* %214, align 4
  %216 = and i96 %215, 16777216
  %217 = icmp eq i96 %216, 0
  br i1 %217, label %218, label %230

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 6, i32 0, i32 0
  %220 = load %"class.blink::Node"*, %"class.blink::Node"** %219, align 8
  %221 = icmp eq %"class.blink::Node"* %220, null
  br i1 %221, label %230, label %222

222:                                              ; preds = %218
  %223 = bitcast %"class.blink::Node"* %220 to i8 (%"class.blink::Node"*)***
  %224 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %223, align 8
  %225 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %224, i64 34
  %226 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %225, align 8
  %227 = call zeroext i8 %226(%"class.blink::Node"* nonnull %220) #6
  %228 = icmp ne i8 %227, 0
  %229 = load i96, i96* %214, align 4
  br label %230

230:                                              ; preds = %222, %218, %211
  %231 = phi i96 [ %215, %218 ], [ %229, %222 ], [ %215, %211 ]
  %232 = phi i1 [ false, %218 ], [ %228, %222 ], [ false, %211 ]
  %233 = and i96 %231, 16777216
  %234 = icmp eq i96 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 6, i32 0, i32 0
  %237 = load %"class.blink::Node"*, %"class.blink::Node"** %236, align 8
  br label %238

238:                                              ; preds = %235, %230
  %239 = phi %"class.blink::Node"* [ %237, %235 ], [ null, %230 ]
  br i1 %232, label %240, label %245

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %239, i64 0, i32 2, i32 0, i32 0
  %242 = bitcast %"class.blink::Node"** %241 to %"class.blink::ContainerNode"**
  %243 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %243, i64 0, i32 0
  br label %245

245:                                              ; preds = %203, %238, %240
  %246 = phi %"class.blink::Node"* [ null, %203 ], [ %244, %240 ], [ %239, %238 ]
  %247 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 0
  %248 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 1
  %249 = bitcast %"class.blink::Document"** %248 to i64*
  store i64 %192, i64* %249, align 8
  %250 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 2
  store %"class.blink::ComputedStyle"* %206, %"class.blink::ComputedStyle"** %250, align 8
  %251 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0, i32 3
  store %"class.blink::Node"* %246, %"class.blink::Node"** %251, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink20NGBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %252 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 1
  store %"class.blink::NGPhysicalBoxFragment"* %163, %"class.blink::NGPhysicalBoxFragment"** %252, align 8
  %253 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 2
  %254 = bitcast %"class.blink::DisplayItemClient"** %253 to %"class.blink::DisplayItemClient.base"**
  store %"class.blink::DisplayItemClient.base"* %175, %"class.blink::DisplayItemClient.base"** %254, align 8
  %255 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 3
  %256 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %163, i64 0, i32 1
  %257 = bitcast i24* %256 to i32*
  %258 = load i32, i32* %257, align 8
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %163, i64 0, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %163, i64 0, i32 6, i64 %263
  %265 = bitcast %"struct.blink::NGLink"* %264 to %"class.blink::NGFragmentItems"*
  %266 = select i1 %260, %"class.blink::NGFragmentItems"* null, %"class.blink::NGFragmentItems"* %265
  store %"class.blink::NGFragmentItems"* %266, %"class.blink::NGFragmentItems"** %255, align 8
  %267 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 4
  %268 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %9, i64 0, i32 0
  %269 = bitcast %"class.blink::NGFragmentItem"** %267 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 16, i1 false)
  call void @_ZN5blink20InlineBoxPainterBase28PaintBoxDecorationBackgroundERNS_14BoxPainterBaseERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_12PhysicalRectENS_23BackgroundImageGeometryEbNS_16PhysicalBoxSidesE(%"class.blink::InlineBoxPainterBase"* %10, %"class.blink::BoxPainterBase"* nonnull dereferenceable(32) %268, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.blink::BackgroundImageGeometry"* nonnull byval(%"class.blink::BackgroundImageGeometry") align 8 %8, i1 zeroext false, i32 16843009) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %162) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %160) #6
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %135) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #6
  br label %270

270:                                              ; preds = %245, %24, %16, %3
  ret void
}

declare zeroext i1 @_ZNK5blink13ComputedStyleeqERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30NGInlineBoxFragmentPainterBase27ComputeFragmentOffsetOnLineENS_13TextDirectionEPNS_10LayoutUnitES3_(%"class.blink::NGInlineBoxFragmentPainterBase"* nocapture readonly, i8 zeroext, %"class.blink::LayoutUnit"* nocapture, %"class.blink::LayoutUnit"* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::NGInlineCursor", align 8
  %6 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 1
  %7 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %7, i64 0, i32 1
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %7, i64 0, i32 3
  %11 = bitcast i24* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 10
  %14 = and i32 %13, 3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  br label %22

19:                                               ; preds = %4
  %20 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %9, i32 %14) #6
  %21 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %6, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi %"class.blink::NGPhysicalFragment"* [ %7, %16 ], [ %21, %19 ]
  %24 = phi %"class.blink::ComputedStyle"* [ %18, %16 ], [ %20, %19 ]
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = lshr i160 %27, 102
  %29 = trunc i160 %28 to i16
  %30 = and i16 %29, 3
  %31 = bitcast %"class.blink::NGInlineCursor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false)
  %32 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 81, i1 false) #6
  %33 = bitcast %"class.blink::LayoutBlockFlow"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #6
  %34 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %23, i64 0, i32 3
  %35 = bitcast i24* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 64
  %38 = icmp eq i32 %37, 0
  %39 = and i32 %36, 960
  %40 = icmp ne i32 %39, 256
  %41 = and i1 %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %22
  %43 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %23, i64 0, i32 1
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  br label %45

45:                                               ; preds = %22, %42
  %46 = phi %"class.blink::LayoutObject"* [ %44, %42 ], [ null, %22 ]
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %5, %"class.blink::LayoutObject"* dereferenceable(88) %46) #6
  %47 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %5, i64 0, i32 0, i32 0
  %48 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %47, align 8
  %49 = icmp eq %"class.blink::NGFragmentItem"* %48, null
  br i1 %49, label %98, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 2
  %52 = icmp eq i16 %30, 0
  br label %53

53:                                               ; preds = %50, %89
  %54 = phi i32 [ 0, %50 ], [ %90, %89 ]
  %55 = phi i32 [ 0, %50 ], [ %91, %89 ]
  %56 = phi %"class.blink::NGFragmentItem"* [ %48, %50 ], [ %93, %89 ]
  %57 = phi i8 [ 1, %50 ], [ %92, %89 ]
  %58 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %51, align 8
  %59 = icmp eq %"class.blink::NGFragmentItem"* %56, %58
  br i1 %59, label %89, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %56, i64 0, i32 6
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 7
  %64 = icmp eq i16 %63, 4
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %56, i64 0, i32 1
  %67 = bitcast %union.anon.1953* %66 to %"class.blink::NGPhysicalBoxFragment"**
  %68 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %67, align 8
  br label %69

69:                                               ; preds = %60, %65
  %70 = phi %"class.blink::NGPhysicalBoxFragment"* [ %68, %65 ], [ null, %60 ]
  %71 = and i8 %57, 1
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %70, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %70, i64 0, i32 0, i32 2, i32 1, i32 0
  %75 = select i1 %52, i32* %73, i32* %74
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  br i1 %72, label %84, label %79

79:                                               ; preds = %69
  %80 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %76) #6
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %78, i32 %82, !prof !2
  br label %89

84:                                               ; preds = %69
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %76) #6
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %78, i32 %87, !prof !2
  br label %89

89:                                               ; preds = %79, %84, %53
  %90 = phi i32 [ %54, %53 ], [ %88, %84 ], [ %54, %79 ]
  %91 = phi i32 [ %55, %53 ], [ %55, %84 ], [ %83, %79 ]
  %92 = phi i8 [ 0, %53 ], [ %57, %84 ], [ %57, %79 ]
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %5) #6
  %93 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %47, align 8
  %94 = icmp eq %"class.blink::NGFragmentItem"* %93, null
  br i1 %94, label %95, label %53

95:                                               ; preds = %89
  %96 = icmp slt i32 %90, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  br label %98

98:                                               ; preds = %95, %45
  %99 = phi i32 [ 0, %45 ], [ %91, %95 ]
  %100 = phi i32 [ 0, %45 ], [ %90, %95 ]
  %101 = phi i32 [ 2147483647, %45 ], [ %97, %95 ]
  %102 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %100) #6
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %6, align 8
  %107 = icmp eq i16 %30, 0
  %108 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %106, i64 0, i32 2, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %106, i64 0, i32 2, i32 1, i32 0
  %110 = select i1 %107, i32* %108, i32* %109
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %111, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %111) #6
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %117, i32* %118, align 4
  %119 = icmp eq i8 %1, 0
  %120 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %121 = select i1 %119, i32 %99, i32 %100
  store i32 %121, i32* %120, align 4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #6
  ret void
}

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #3

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink30NGInlineBoxFragmentPainterBase22PaintRectForImageStripERKNS_12PhysicalRectENS_13TextDirectionE(%"class.blink::NGInlineBoxFragmentPainterBase"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i8 zeroext) unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 0, i32* %9, align 4
  call void @_ZNK5blink30NGInlineBoxFragmentPainterBase27ComputeFragmentOffsetOnLineENS_13TextDirectionEPNS_10LayoutUnitES3_(%"class.blink::NGInlineBoxFragmentPainterBase"* %0, i8 zeroext %2, %"class.blink::LayoutUnit"* nonnull %4, %"class.blink::LayoutUnit"* nonnull %5)
  %10 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 1
  %11 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %11, i64 0, i32 1
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %11, i64 0, i32 3
  %15 = bitcast i24* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 10
  %18 = and i32 %17, 3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  br label %25

23:                                               ; preds = %3
  %24 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %13, i32 %18) #6
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi %"class.blink::ComputedStyle"* [ %22, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = and i160 %29, 15211807202738752817960438464512
  %31 = icmp eq i160 %30, 0
  %32 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %46

34:                                               ; preds = %25
  %35 = load i32, i32* %7, align 4
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %33, i32 %35) #6
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %9, align 4
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  br label %58

46:                                               ; preds = %25
  %47 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp sgt i32 %49, -1
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %49) #6
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  br label %58

58:                                               ; preds = %46, %34
  %59 = phi i32* [ %9, %46 ], [ %45, %34 ]
  %60 = phi i32 [ %55, %46 ], [ %43, %34 ]
  %61 = phi i32 [ %33, %46 ], [ %41, %34 ]
  %62 = phi i32 [ %57, %46 ], [ %44, %34 ]
  %63 = load i32, i32* %59, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6
  %64 = zext i32 %60 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %61 to i64
  %67 = or i64 %65, %66
  %68 = insertvalue { i64, i64 } undef, i64 %67, 0
  %69 = zext i32 %63 to i64
  %70 = shl nuw i64 %69, 32
  %71 = zext i32 %62 to i64
  %72 = or i64 %70, %71
  %73 = insertvalue { i64, i64 } %68, i64 %72, 1
  ret { i64, i64 } %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink30NGInlineBoxFragmentPainterBase18GetBorderPaintTypeERKNS_12PhysicalRectERNS_7IntRectEb(%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::IntRect"* nocapture dereferenceable(16), i1 zeroext) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainterBase", %"class.blink::NGInlineBoxFragmentPainterBase"* %0, i64 0, i32 1
  %6 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %6, i64 0, i32 1
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %6, i64 0, i32 3
  %10 = bitcast i24* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 10
  %13 = and i32 %12, 3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  br label %20

18:                                               ; preds = %4
  %19 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %8, i32 %13) #6
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi %"class.blink::ComputedStyle"* [ %17, %15 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 27
  %25 = load i16, i16* %24, align 8
  %26 = and i16 %25, 224
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 24, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp ne i32 %30, 0
  %32 = and i16 %25, 240
  %33 = icmp ne i16 %32, 0
  %34 = and i1 %33, %31
  br i1 %34, label %72, label %35

35:                                               ; preds = %28, %20
  %36 = and i16 %25, 3584
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 25, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, 0
  %42 = and i16 %25, 3840
  %43 = icmp ne i16 %42, 0
  %44 = and i1 %43, %41
  br i1 %44, label %72, label %45

45:                                               ; preds = %38, %35
  %46 = icmp ult i16 %25, 8192
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 26, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %72

51:                                               ; preds = %47, %45
  %52 = and i16 %25, 14
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 23, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, 0
  %58 = and i16 %25, 15
  %59 = icmp ne i16 %58, 0
  %60 = and i1 %59, %57
  br i1 %60, label %72, label %61

61:                                               ; preds = %54, %51
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %64, align 8
  %66 = icmp eq %"class.blink::StyleImage"* %65, null
  br i1 %66, label %241, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %63, i64 0, i32 1
  %69 = load i8, i8* %68, align 4
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %241, label %72

72:                                               ; preds = %67, %54, %38, %28, %47
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 2
  %74 = getelementptr inbounds %"class.blink::NinePieceImage", %"class.blink::NinePieceImage"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %76, align 8
  %78 = icmp eq %"class.blink::StyleImage"* %77, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.blink::StyleImage"* %77 to i1 (%"class.blink::StyleImage"*)***
  %81 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %81, i64 4
  %83 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::StyleImage"* nonnull %77) #6
  br i1 %84, label %85, label %91

85:                                               ; preds = %79
  %86 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %80, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %86, i64 5
  %88 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::StyleImage"* nonnull %77) #6
  br i1 %89, label %90, label %241

90:                                               ; preds = %85
  br i1 %3, label %163, label %91

91:                                               ; preds = %90, %72, %79
  %92 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = sdiv i32 %93, 64
  %95 = srem i32 %93, 64
  %96 = add nsw i32 %95, 32
  %97 = ashr i32 %96, 6
  %98 = add nsw i32 %97, %94
  %99 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = sdiv i32 %100, 64
  %102 = srem i32 %100, 64
  %103 = add nsw i32 %102, 32
  %104 = ashr i32 %103, 6
  %105 = add nsw i32 %104, %101
  %106 = zext i32 %105 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %98 to i64
  %109 = or i64 %107, %108
  %110 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %111, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %111) #6
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = sdiv i32 %117, 64
  %119 = srem i32 %117, 64
  %120 = add nsw i32 %119, 32
  %121 = ashr i32 %120, 6
  %122 = sub nsw i32 %118, %97
  %123 = add nsw i32 %121, %122
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %131

125:                                              ; preds = %91
  %126 = add i32 %111, 4
  %127 = icmp ugt i32 %126, 8
  br i1 %127, label %128, label %131, !prof !3

128:                                              ; preds = %125
  %129 = icmp sgt i32 %111, 0
  %130 = select i1 %129, i32 1, i32 -1
  br label %131

131:                                              ; preds = %128, %125, %91
  %132 = phi i32 [ %130, %128 ], [ %123, %91 ], [ 0, %125 ]
  %133 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %102, i32 %134) #6
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  %141 = sdiv i32 %140, 64
  %142 = srem i32 %140, 64
  %143 = add nsw i32 %142, 32
  %144 = ashr i32 %143, 6
  %145 = sub nsw i32 %141, %104
  %146 = add nsw i32 %144, %145
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %131
  %149 = add i32 %134, 4
  %150 = icmp ugt i32 %149, 8
  br i1 %150, label %151, label %154, !prof !3

151:                                              ; preds = %148
  %152 = icmp sgt i32 %134, 0
  %153 = select i1 %152, i32 1, i32 -1
  br label %154

154:                                              ; preds = %131, %148, %151
  %155 = phi i32 [ %153, %151 ], [ %146, %131 ], [ 0, %148 ]
  %156 = zext i32 %155 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %132 to i64
  %159 = or i64 %157, %158
  %160 = bitcast %"class.blink::IntRect"* %2 to i64*
  store i64 %109, i64* %160, align 4
  %161 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %162 = bitcast %"class.blink::IntSize"* %161 to i64*
  store i64 %159, i64* %162, align 4
  br label %241

163:                                              ; preds = %90
  %164 = bitcast %"class.blink::NGInlineBoxFragmentPainterBase"* %0 to i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)***
  %165 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)**, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*** %164, align 8
  %166 = getelementptr inbounds i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %165, i64 4
  %167 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %166, align 8
  %168 = tail call i32 %167(%"class.blink::NGInlineBoxFragmentPainterBase"* %0) #6
  %169 = tail call { i64, i64 } @_ZN5blink20InlineBoxPainterBase30ClipRectForNinePieceImageStripERKNS_13ComputedStyleENS_16PhysicalBoxSidesERKNS_14NinePieceImageERKNS_12PhysicalRectE(%"class.blink::ComputedStyle"* dereferenceable(104) %21, i32 %168, %"class.blink::NinePieceImage"* dereferenceable(8) %73, %"struct.blink::PhysicalRect"* dereferenceable(16) %1) #6
  %170 = extractvalue { i64, i64 } %169, 0
  %171 = trunc i64 %170 to i32
  %172 = lshr i64 %170, 32
  %173 = trunc i64 %172 to i32
  %174 = extractvalue { i64, i64 } %169, 1
  %175 = sdiv i32 %171, 64
  %176 = srem i32 %171, 64
  %177 = add nsw i32 %176, 32
  %178 = ashr i32 %177, 6
  %179 = add nsw i32 %178, %175
  %180 = sdiv i32 %173, 64
  %181 = srem i32 %173, 64
  %182 = add nsw i32 %181, 32
  %183 = ashr i32 %182, 6
  %184 = add nsw i32 %183, %180
  %185 = zext i32 %184 to i64
  %186 = shl nuw i64 %185, 32
  %187 = zext i32 %179 to i64
  %188 = or i64 %186, %187
  %189 = trunc i64 %174 to i32
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %176, i32 %189) #6
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  %196 = sdiv i32 %195, 64
  %197 = srem i32 %195, 64
  %198 = add nsw i32 %197, 32
  %199 = ashr i32 %198, 6
  %200 = sub nsw i32 %196, %178
  %201 = add nsw i32 %199, %200
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %209

203:                                              ; preds = %163
  %204 = add i32 %189, 4
  %205 = icmp ugt i32 %204, 8
  br i1 %205, label %206, label %209, !prof !3

206:                                              ; preds = %203
  %207 = icmp sgt i32 %189, 0
  %208 = select i1 %207, i32 1, i32 -1
  br label %209

209:                                              ; preds = %206, %203, %163
  %210 = phi i32 [ %208, %206 ], [ %201, %163 ], [ 0, %203 ]
  %211 = lshr i64 %174, 32
  %212 = trunc i64 %211 to i32
  %213 = icmp slt i32 %212, 0
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %181, i32 %212) #6
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !2
  %219 = sdiv i32 %218, 64
  %220 = srem i32 %218, 64
  %221 = add nsw i32 %220, 32
  %222 = ashr i32 %221, 6
  %223 = sub nsw i32 %219, %183
  %224 = add nsw i32 %222, %223
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %232

226:                                              ; preds = %209
  %227 = add i32 %212, 4
  %228 = icmp ugt i32 %227, 8
  br i1 %228, label %229, label %232, !prof !3

229:                                              ; preds = %226
  %230 = icmp sgt i32 %212, 0
  %231 = select i1 %230, i32 1, i32 -1
  br label %232

232:                                              ; preds = %209, %226, %229
  %233 = phi i32 [ %231, %229 ], [ %224, %209 ], [ 0, %226 ]
  %234 = zext i32 %233 to i64
  %235 = shl nuw i64 %234, 32
  %236 = zext i32 %210 to i64
  %237 = or i64 %235, %236
  %238 = bitcast %"class.blink::IntRect"* %2 to i64*
  store i64 %188, i64* %238, align 4
  %239 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %240 = bitcast %"class.blink::IntSize"* %239 to i64*
  store i64 %237, i64* %240, align 4
  br label %241

241:                                              ; preds = %67, %61, %154, %232, %85
  %242 = phi i32 [ 0, %67 ], [ 2, %232 ], [ 1, %154 ], [ 0, %85 ], [ 0, %61 ]
  ret i32 %242
}

declare { i64, i64 } @_ZN5blink20InlineBoxPainterBase30ClipRectForNinePieceImageStripERKNS_13ComputedStyleENS_16PhysicalBoxSidesERKNS_14NinePieceImageERKNS_12PhysicalRectE(%"class.blink::ComputedStyle"* dereferenceable(104), i32, %"class.blink::NinePieceImage"* dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30NGInlineBoxFragmentPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE(%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1 align 2 {
  %5 = bitcast %"class.blink::NGInlineBoxFragmentPainterBase"* %0 to i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)***
  %6 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)**, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %6, i64 4
  %8 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::NGInlineBoxFragmentPainterBase"* %0) #6
  tail call void @_ZN5blink14BoxPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesEb(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %2, i32 %9, i1 zeroext true) #6
  ret void
}

declare void @_ZN5blink14BoxPainterBase20PaintNormalBoxShadowERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesEb(%"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30NGInlineBoxFragmentPainterBase19PaintInsetBoxShadowERKNS_9PaintInfoERKNS_13ComputedStyleERKNS_12PhysicalRectE(%"class.blink::NGInlineBoxFragmentPainterBase"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1 align 2 {
  %5 = bitcast %"class.blink::NGInlineBoxFragmentPainterBase"* %0 to i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)***
  %6 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)**, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %6, i64 4
  %8 = load i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)*, i32 (%"class.blink::NGInlineBoxFragmentPainterBase"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::NGInlineBoxFragmentPainterBase"* %0) #6
  tail call void @_ZN5blink14BoxPainterBase33PaintInsetBoxShadowWithBorderRectERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesE(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %2, i32 %9) #6
  ret void
}

declare void @_ZN5blink14BoxPainterBase33PaintInsetBoxShadowWithBorderRectERKNS_9PaintInfoERKNS_12PhysicalRectERKNS_13ComputedStyleENS_16PhysicalBoxSidesE(%"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26NGInlineBoxFragmentPainter17PaintAllFragmentsERKNS_12LayoutInlineERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutInline"* dereferenceable(120), %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca %"class.blink::NGInlineBoxFragmentPainter", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %6) #6
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 63
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %50, !prof !4

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutBlockFlow"* dereferenceable(280) %7) #6
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %6) #6
  %15 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %16 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %15, align 8
  %17 = icmp eq %"class.blink::NGFragmentItem"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %22 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %22, i64 0, i32 1
  %24 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %24, i64 0, i32 19
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, %20
  %28 = bitcast %"class.blink::NGInlineBoxFragmentPainter"* %5 to i8*
  br label %29

29:                                               ; preds = %47, %18
  %30 = phi i32 [ %20, %18 ], [ %48, %47 ]
  %31 = phi %"class.blink::NGFragmentItem"* [ %16, %18 ], [ %45, %47 ]
  %32 = icmp eq i32 %27, %30
  br i1 %32, label %33, label %44

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %31, i64 0, i32 6
  %35 = load i16, i16* %34, align 8
  %36 = and i16 %35, 7
  %37 = icmp eq i16 %36, 4
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %31, i64 0, i32 1
  %40 = bitcast %union.anon.1953* %39 to %"class.blink::NGPhysicalBoxFragment"**
  %41 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %40, align 8
  br label %42

42:                                               ; preds = %33, %38
  %43 = phi %"class.blink::NGPhysicalBoxFragment"* [ %41, %38 ], [ null, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #6
  call void @_ZN5blink26NGInlineBoxFragmentPainterC2ERKNS_14NGInlineCursorERKNS_14NGFragmentItemERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGInlineBoxFragmentPainter"* nonnull %5, %"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %4, %"class.blink::NGFragmentItem"* nonnull dereferenceable(64) %31, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %43)
  call void @_ZN5blink26NGInlineBoxFragmentPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::NGInlineBoxFragmentPainter"* nonnull %5, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #6
  br label %44

44:                                               ; preds = %29, %42
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #6
  %45 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %15, align 8
  %46 = icmp eq %"class.blink::NGFragmentItem"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = load i32, i32* %19, align 4
  br label %29

49:                                               ; preds = %44, %13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #6
  br label %50

50:                                               ; preds = %3, %49
  ret void
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutBlockFlow"* dereferenceable(280)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26NGInlineBoxFragmentPainterC2ERKNS_14NGInlineCursorERKNS_14NGFragmentItemERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGInlineBoxFragmentPainter"*, %"class.blink::NGInlineCursor"* dereferenceable(112), %"class.blink::NGFragmentItem"* dereferenceable(64), %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 0, i32 3
  %7 = bitcast i24* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 64
  %10 = icmp eq i32 %9, 0
  %11 = and i32 %8, 960
  %12 = icmp ne i32 %11, 256
  %13 = and i1 %10, %12
  %14 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %3, i64 0, i32 0, i32 1
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = select i1 %13, %"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject"* null
  %17 = lshr i32 %8, 10
  %18 = and i32 %17, 3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  br label %28

23:                                               ; preds = %4
  %24 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %15, i32 %18) #6
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %26 = load i32, i32* %7, align 8
  %27 = lshr i32 %26, 10
  br label %28

28:                                               ; preds = %20, %23
  %29 = phi i32 [ %17, %20 ], [ %27, %23 ]
  %30 = phi %"class.blink::LayoutObject"* [ %15, %20 ], [ %25, %23 ]
  %31 = phi %"class.blink::ComputedStyle"* [ %22, %20 ], [ %24, %23 ]
  %32 = and i32 %29, 3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  br label %39

37:                                               ; preds = %28
  %38 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %30, i32 %32) #6
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi %"class.blink::ComputedStyle"* [ %36, %34 ], [ %38, %37 ]
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %39, %45
  %46 = phi %"class.blink::LayoutObject"* [ %48, %45 ], [ %16, %39 ]
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 7
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 6, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %39
  %53 = phi %"class.blink::Node"* [ %43, %39 ], [ %50, %45 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = bitcast %"class.blink::Document"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = and i96 %61, 16777216
  %63 = icmp ne i96 %62, 0
  %64 = or i1 %44, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %52
  %66 = icmp eq i96 %62, 0
  %67 = select i1 %66, %"class.blink::Node"* %43, %"class.blink::Node"* null
  br label %85

68:                                               ; preds = %52
  %69 = bitcast %"class.blink::Node"* %43 to i8 (%"class.blink::Node"*)***
  %70 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %69, align 8
  %71 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %70, i64 34
  %72 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %71, align 8
  %73 = tail call zeroext i8 %72(%"class.blink::Node"* nonnull %43) #6
  %74 = icmp eq i8 %73, 0
  %75 = load i96, i96* %60, align 4
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %77 = and i96 %75, 16777216
  %78 = icmp eq i96 %77, 0
  %79 = select i1 %78, %"class.blink::Node"* %76, %"class.blink::Node"* null
  br i1 %74, label %85, label %80

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %79, i64 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.blink::Node"** %81 to %"class.blink::ContainerNode"**
  %83 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %83, i64 0, i32 0
  br label %85

85:                                               ; preds = %65, %68, %80
  %86 = phi %"class.blink::Node"* [ %84, %80 ], [ %79, %68 ], [ %67, %65 ]
  %87 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 1
  store %"class.blink::ImageResourceObserver"* %41, %"class.blink::ImageResourceObserver"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.blink::Document"** %89 to i64*
  store i64 %58, i64* %90, align 8
  %91 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 3
  store %"class.blink::Node"* %86, %"class.blink::Node"** %91, align 8
  %92 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 4
  store %"class.blink::ComputedStyle"* %31, %"class.blink::ComputedStyle"** %92, align 8
  %93 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 0, i32 5
  store %"class.blink::ComputedStyle"* %40, %"class.blink::ComputedStyle"** %93, align 8
  %94 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 1
  store %"class.blink::NGPhysicalFragment"* %5, %"class.blink::NGPhysicalFragment"** %94, align 8
  %95 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 2
  store %"class.blink::NGFragmentItem"* %2, %"class.blink::NGFragmentItem"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::NGInlineBoxFragmentPainter", %"class.blink::NGInlineBoxFragmentPainter"* %0, i64 0, i32 0, i32 3
  store %"class.blink::NGInlineCursor"* %1, %"class.blink::NGInlineCursor"** %96, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink26NGInlineBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i32) local_unnamed_addr #3

declare i64 @_ZNK5blink13ComputedStyle13GetFontHeightENS_12FontBaselineE(%"class.blink::ComputedStyle"*, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 4001, i32 4000000}
!4 = !{!"branch_weights", i32 2000, i32 1}
