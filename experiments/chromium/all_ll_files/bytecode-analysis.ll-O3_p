; ModuleID = '../../v8/src/compiler/bytecode-analysis.cc'
source_filename = "../../v8/src/compiler/bytecode-analysis.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::BytecodeLoopAssignments" = type { i32, %"class.v8::internal::BitVector"* }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::ResumeJumpTarget" = type { i32, i32, i32 }
%"class.v8::internal::compiler::BytecodeAnalysis" = type { %"class.v8::internal::Handle", %"class.v8::internal::Zone"*, %"class.v8::internal::BytecodeOffset", i8, %"class.v8::internal::ZoneStack", %"class.v8::internal::ZoneVector.29", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneMap.42", i32, %"class.v8::base::Optional" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::ZoneStack" = type { %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__split_buffer" = type { %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"class.std::__1::__compressed_pair.21" }
%"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry" = type { i32, %"struct.v8::internal::compiler::LoopInfo"* }
%"struct.v8::internal::compiler::LoopInfo" = type { i32, %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::ZoneVector" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.24", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::RecyclingZoneAllocator.27" }
%"class.v8::internal::RecyclingZoneAllocator.27" = type { %"class.v8::internal::ZoneAllocator.28", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.28" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneVector.29" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8::internal::ZoneAllocator.35" }
%"class.v8::internal::ZoneAllocator.35" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.v8::internal::compiler::ResumeJumpTarget"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.v8::internal::ZoneAllocator.39" }
%"class.v8::internal::ZoneAllocator.39" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ZoneMap.42" = type { %"class.std::__1::map.43" }
%"class.std::__1::map.43" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.v8::internal::ZoneAllocator.47" }
%"class.v8::internal::ZoneAllocator.47" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.v8::internal::compiler::BytecodeLivenessMap" }
%"class.v8::internal::compiler::BytecodeLivenessMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<int, v8::internal::compiler::BytecodeLiveness, v8::base::KeyEqualityMatcher<int>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<int, v8::internal::compiler::BytecodeLiveness, v8::base::KeyEqualityMatcher<int>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i32, [4 x i8], %"struct.v8::internal::compiler::BytecodeLiveness", i32, i8, [3 x i8] }>
%"struct.v8::internal::compiler::BytecodeLiveness" = type { %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"* }
%"class.v8::internal::compiler::BytecodeLivenessState" = type { [8 x i8], %"class.v8::internal::BitVector" }
%"class.v8::internal::interpreter::Register" = type { i32 }
%"class.v8::internal::interpreter::BytecodeArrayRandomIterator" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::ZoneVector.29", i32, [4 x i8] }>
%"class.v8::internal::interpreter::BytecodeArrayIterator" = type { %"class.v8::internal::Handle", i8*, i8*, i8*, i8, i32, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.675", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.679", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.523", %"class.std::__1::vector.704", %"class.v8::internal::ConcurrentAllocator" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.75", %"class.std::__1::vector.79", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.195", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.210", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.214", %"class.std::__1::vector.214", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.363", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.477", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.523", %"class.std::__1::shared_ptr.529", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.534", %"class.std::__1::unique_ptr.560", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.566", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.579", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.379", i8, [7 x i8], %"class.std::__1::unordered_map.585", %"class.std::__1::unordered_map.611", %"class.std::__1::unordered_map.585", %"class.std::__1::unordered_map.635", %"class.std::__1::vector.662", i8, %"class.std::__1::unique_ptr.669", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70", %"struct.std::__1::atomic.70" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.718", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.724", %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.755", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.882", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.894", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.904", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.915", %"struct.std::__1::atomic.201", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.990", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1036"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1044", i32, i8, i8, i32, i32, %"class.std::__1::vector.1050", %"class.std::__1::vector.1050", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1057", i64, %"class.std::__1::unordered_map.1058", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.572", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.209", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1114", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1128", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1162", %"class.std::__1::vector.1166", %"class.std::__1::vector.1166", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.712", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.716", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.716" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.572" }
%"class.std::__1::shared_ptr.724" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.188", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.725", %"class.std::__1::unique_ptr.739" }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.190" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.70", %"struct.std::__1::atomic.116", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.728" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.188", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.728" = type { %"class.std::__1::__vector_base.729" }
%"class.std::__1::__vector_base.729" = type { %"class.std::__1::unique_ptr.730"*, %"class.std::__1::unique_ptr.730"*, %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.std::__1::unique_ptr.730"* }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.748", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.748" = type { %"struct.std::__1::__atomic_base.749" }
%"struct.std::__1::__atomic_base.749" = type { %"struct.std::__1::__cxx_atomic_impl.750" }
%"struct.std::__1::__cxx_atomic_impl.750" = type { %"struct.std::__1::__cxx_atomic_base_impl.751" }
%"struct.std::__1::__cxx_atomic_base_impl.751" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.755" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.756", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.756" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.757", %"class.v8::base::Optional.765", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"class.std::__1::unique_ptr.759"*, %"class.std::__1::unique_ptr.759"*, %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::unique_ptr.759" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.std::__1::unique_ptr.759"* }
%"class.v8::base::Optional.765" = type { %"class.v8::base::internal::OptionalBase.766" }
%"class.v8::base::internal::OptionalBase.766" = type { %"struct.v8::base::internal::OptionalStorage.767" }
%"struct.v8::base::internal::OptionalStorage.767" = type { %"struct.v8::base::internal::OptionalStorageBase.768" }
%"struct.v8::base::internal::OptionalStorageBase.768" = type { i8, %union.anon.769 }
%union.anon.769 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.778", %"struct.std::__1::atomic.201", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.796", %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.808", %"class.std::__1::set.814", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.814" = type { %"class.std::__1::__tree.815" }
%"class.std::__1::__tree.815" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.816", %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.823" }
%"class.v8::internal::TaggedImpl.823" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.822" }
%"class.v8::internal::TaggedImpl.822" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.682", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.824", %"class.v8::internal::DetachableVector.825", %"class.v8::internal::DetachableVector.824", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.825" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.824" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.826", %"class.std::__1::vector.832", %"class.std::__1::unique_ptr.839", %"class.std::__1::vector.846", %"class.std::__1::unique_ptr.853", i64, %"class.std::__1::vector.859", %"class.std::__1::vector.867", %"class.std::__1::vector.875", i8, i8, i32 }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.v8::internal::GlobalHandles::NodeSpace.842"* }
%"class.v8::internal::GlobalHandles::NodeSpace.842" = type opaque
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.848" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.859" = type { %"class.std::__1::__vector_base.860" }
%"class.std::__1::__vector_base.860" = type { %"struct.std::__1::pair.861"*, %"struct.std::__1::pair.861"*, %"class.std::__1::__compressed_pair.862" }
%"struct.std::__1::pair.861" = type opaque
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::pair.861"* }
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"struct.std::__1::pair.869"*, %"struct.std::__1::pair.869"*, %"class.std::__1::__compressed_pair.870" }
%"struct.std::__1::pair.869" = type opaque
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.std::__1::pair.869"* }
%"class.std::__1::vector.875" = type { %"class.std::__1::__vector_base.876" }
%"class.std::__1::__vector_base.876" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.877" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.688", %"class.std::__1::vector.882" }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { i64**, i64**, %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { i32*, i32*, %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.894" = type { %"struct.std::__1::__atomic_base.895" }
%"struct.std::__1::__atomic_base.895" = type { %"struct.std::__1::__cxx_atomic_impl.896" }
%"struct.std::__1::__cxx_atomic_impl.896" = type { %"struct.std::__1::__cxx_atomic_base_impl.897" }
%"struct.std::__1::__cxx_atomic_base_impl.897" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.904" = type { %"struct.std::__1::__atomic_base.905" }
%"struct.std::__1::__atomic_base.905" = type { %"struct.std::__1::__cxx_atomic_impl.906" }
%"struct.std::__1::__cxx_atomic_impl.906" = type { %"struct.std::__1::__cxx_atomic_base_impl.907" }
%"struct.std::__1::__cxx_atomic_base_impl.907" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.911 }
%union.anon.911 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.915" = type { %"class.std::__1::__hash_table.916" }
%"class.std::__1::__hash_table.916" = type <{ %"class.std::__1::unique_ptr.917", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.932", %"class.std::__1::__compressed_pair.935", [4 x i8] }>
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919", %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::__hash_node_base.920"** }
%"struct.std::__1::__hash_node_base.920" = type { %"struct.std::__1::__hash_node_base.920"* }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.std::__1::__bucket_list_deallocator.922" }
%"class.std::__1::__bucket_list_deallocator.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"struct.std::__1::__hash_node_base.920" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::atomic.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.941", %"class.v8::internal::Handle.947", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.948", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.947" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.948" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.949", %"class.std::__1::vector.955", %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.969", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.975", %"class.std::__1::vector.981", %"struct.std::__1::pair.989" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.955" = type { %"class.std::__1::__vector_base.956" }
%"class.std::__1::__vector_base.956" = type { %"class.std::__1::unique_ptr.957"*, %"class.std::__1::unique_ptr.957"*, %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::unique_ptr.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.std::__1::unique_ptr.957"* }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { %"struct.std::__1::pair.983"*, %"struct.std::__1::pair.983"*, %"class.std::__1::__compressed_pair.984" }
%"struct.std::__1::pair.983" = type opaque
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.std::__1::pair.983"* }
%"struct.std::__1::pair.989" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.717"*, i16, i8*)*, i8* }
%"class.v8::Local.717" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.993", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1014", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1022" }
%"class.std::__1::deque.1022" = type { %"class.std::__1::__deque_base.1023" }
%"class.std::__1::__deque_base.1023" = type { %"struct.std::__1::__split_buffer.1024", i64, %"class.std::__1::__compressed_pair.1031" }
%"struct.std::__1::__split_buffer.1024" = type { %"struct.std::__1::pair.1025"**, %"struct.std::__1::pair.1025"**, %"struct.std::__1::pair.1025"**, %"class.std::__1::__compressed_pair.1026" }
%"struct.std::__1::pair.1025" = type opaque
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::pair.1025"** }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1036" = type { %"class.std::__1::__vector_base.1037" }
%"class.std::__1::__vector_base.1037" = type { %"class.v8::internal::Handle.1038"*, %"class.v8::internal::Handle.1038"*, %"class.std::__1::__compressed_pair.1039" }
%"class.v8::internal::Handle.1038" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.v8::internal::Handle.1038"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.899", i32, %"class.v8::Local.717" }
%"class.v8::Local.899" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.688", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1050" = type { %"class.std::__1::__vector_base.1051" }
%"class.std::__1::__vector_base.1051" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1057" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1058" = type { %"class.std::__1::__hash_table.1059" }
%"class.std::__1::__hash_table.1059" = type <{ %"class.std::__1::unique_ptr.1060", %"class.std::__1::__compressed_pair.1070", %"class.std::__1::__compressed_pair.1075", %"class.std::__1::__compressed_pair.1078", [4 x i8] }>
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062", %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"struct.std::__1::__hash_node_base.1063"** }
%"struct.std::__1::__hash_node_base.1063" = type { %"struct.std::__1::__hash_node_base.1063"* }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.std::__1::__bucket_list_deallocator.1065" }
%"class.std::__1::__bucket_list_deallocator.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::__hash_node_base.1063" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.209" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1082", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1111", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1112", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1082" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1107, %union.anon.1109, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1107 = type { i64 }
%union.anon.1109 = type { i64 }
%"class.std::__1::weak_ptr.1111" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.209" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1112" = type { %"class.v8::PersistentBase.1113" }
%"class.v8::PersistentBase.1113" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1083", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1083" = type { %"class.std::__1::__hash_table.1084" }
%"class.std::__1::__hash_table.1084" = type <{ %"class.std::__1::unique_ptr.1085", %"class.std::__1::__compressed_pair.1095", %"class.std::__1::__compressed_pair.1100", %"class.std::__1::__compressed_pair.1103", [4 x i8] }>
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087", %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::__hash_node_base.1088"** }
%"struct.std::__1::__hash_node_base.1088" = type { %"struct.std::__1::__hash_node_base.1088"* }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.std::__1::__bucket_list_deallocator.1090" }
%"class.std::__1::__bucket_list_deallocator.1090" = type { %"class.std::__1::__compressed_pair.1091" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::__hash_node_base.1088" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1119", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.900", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.900" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1136" }
%"class.std::__1::unordered_map.1136" = type { %"class.std::__1::__hash_table.1137" }
%"class.std::__1::__hash_table.1137" = type <{ %"class.std::__1::unique_ptr.1138", %"class.std::__1::__compressed_pair.1148", %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1156", [4 x i8] }>
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140", %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"struct.std::__1::__hash_node_base.1141"** }
%"struct.std::__1::__hash_node_base.1141" = type { %"struct.std::__1::__hash_node_base.1141"* }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.std::__1::__bucket_list_deallocator.1143" }
%"class.std::__1::__bucket_list_deallocator.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"struct.std::__1::__hash_node_base.1141" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::atomic.1162" = type { %"struct.std::__1::__atomic_base.1163" }
%"struct.std::__1::__atomic_base.1163" = type { %"struct.std::__1::__cxx_atomic_impl.1164" }
%"struct.std::__1::__cxx_atomic_impl.1164" = type { %"struct.std::__1::__cxx_atomic_base_impl.1165" }
%"struct.std::__1::__cxx_atomic_base_impl.1165" = type { %"class.std::__1::vector.1166"* }
%"class.std::__1::vector.1166" = type { %"class.std::__1::__vector_base.1167" }
%"class.std::__1::__vector_base.1167" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1168" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i32 }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.81" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.152" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.146" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.86", %"class.std::__1::vector.86", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.88" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.93" }
%"class.std::__1::__hash_table.93" = type <{ %"class.std::__1::unique_ptr.94", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::__hash_node_base.97"** }
%"struct.std::__1::__hash_node_base.97" = type { %"struct.std::__1::__hash_node_base.97"* }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::__bucket_list_deallocator.99" }
%"class.std::__1::__bucket_list_deallocator.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base.97" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.70", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.127"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.135", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.70", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.120" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.122" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.127" = type { %"class.std::__1::__tree.128" }
%"class.std::__1::__tree.128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.139", i8, [7 x i8] }>
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { i64*, i64*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"struct.std::__1::pair.154"*, %"struct.std::__1::pair.154"*, %"class.std::__1::__compressed_pair.155" }
%"struct.std::__1::pair.154" = type { i32, i64 }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::pair.154"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.160" }
%"class.std::__1::unordered_map.160" = type { %"class.std::__1::__hash_table.161" }
%"class.std::__1::__hash_table.161" = type <{ %"class.std::__1::unique_ptr.162", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164", %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base.165"** }
%"struct.std::__1::__hash_node_base.165" = type { %"struct.std::__1::__hash_node_base.165"* }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.std::__1::__bucket_list_deallocator.167" }
%"class.std::__1::__bucket_list_deallocator.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::__hash_node_base.165" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.201", %"struct.std::__1::atomic.205", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.205" = type { %"struct.std::__1::__atomic_base.206" }
%"struct.std::__1::__atomic_base.206" = type { %"struct.std::__1::__cxx_atomic_impl.207" }
%"struct.std::__1::__cxx_atomic_impl.207" = type { %"struct.std::__1::__cxx_atomic_base_impl.208" }
%"struct.std::__1::__cxx_atomic_base_impl.208" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.210" = type { %"struct.std::__1::__atomic_base.211" }
%"struct.std::__1::__atomic_base.211" = type { %"struct.std::__1::__cxx_atomic_impl.212" }
%"struct.std::__1::__cxx_atomic_impl.212" = type { %"struct.std::__1::__cxx_atomic_base_impl.213" }
%"struct.std::__1::__cxx_atomic_base_impl.213" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.216" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.329", %"class.std::__1::vector.329", %"class.std::__1::vector.329", %"class.std::__1::vector.336", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.230", %"class.std::__1::vector.231", %"class.std::__1::vector.238", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.230" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.233" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"class.std::__1::unique_ptr.240"*, %"class.std::__1::unique_ptr.240"*, %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::unique_ptr.240" = type opaque
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.std::__1::unique_ptr.240"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.246", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.252", %"class.v8::internal::Worklist.254", %"class.v8::internal::Worklist.256", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.260" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.246" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.248" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.250" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.252" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.254" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.256" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.258" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.260" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.262", i8, i64 }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.278" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.230"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.305" }
%"class.std::__1::unordered_map.305" = type { %"class.std::__1::__hash_table.306" }
%"class.std::__1::__hash_table.306" = type <{ %"class.std::__1::unique_ptr.307", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.325", [4 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309", %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.310"** }
%"struct.std::__1::__hash_node_base.310" = type { %"struct.std::__1::__hash_node_base.310"* }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::__bucket_list_deallocator.312" }
%"class.std::__1::__bucket_list_deallocator.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base.310" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"struct.std::__1::pair.338"*, %"struct.std::__1::pair.338"*, %"class.std::__1::__compressed_pair.339" }
%"struct.std::__1::pair.338" = type opaque
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::pair.338"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.344", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.329"], [3 x %"class.std::__1::vector.329"], i8, %"struct.std::__1::atomic.201", [6 x i8], %"class.std::__1::vector.329", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.354"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.329", %"class.std::__1::vector.329", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.354" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.379", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.372"], %"class.std::__1::unique_ptr.344" }
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.411", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.415", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.420" }
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__cxx_atomic_impl.413" }
%"struct.std::__1::__cxx_atomic_impl.413" = type { %"struct.std::__1::__cxx_atomic_base_impl.414" }
%"struct.std::__1::__cxx_atomic_base_impl.414" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.415" = type { %"struct.std::__1::__atomic_base.416" }
%"struct.std::__1::__atomic_base.416" = type { %"struct.std::__1::__cxx_atomic_impl.417" }
%"struct.std::__1::__cxx_atomic_impl.417" = type { %"struct.std::__1::__cxx_atomic_base_impl.418" }
%"struct.std::__1::__cxx_atomic_base_impl.418" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.420" = type { %"class.std::__1::__hash_table.421" }
%"class.std::__1::__hash_table.421" = type <{ %"class.std::__1::unique_ptr.422", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.440", [4 x i8] }>
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424", %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.425"** }
%"struct.std::__1::__hash_node_base.425" = type { %"struct.std::__1::__hash_node_base.425"* }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__bucket_list_deallocator.427" }
%"class.std::__1::__bucket_list_deallocator.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base.425" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.344", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.201", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.450", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.450" = type { %"class.std::__1::__hash_table.451" }
%"class.std::__1::__hash_table.451" = type <{ %"class.std::__1::unique_ptr.452", %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.467", %"class.std::__1::__compressed_pair.470", [4 x i8] }>
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454", %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.std::__1::__hash_node_base.455"** }
%"struct.std::__1::__hash_node_base.455" = type { %"struct.std::__1::__hash_node_base.455"* }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.std::__1::__bucket_list_deallocator.457" }
%"class.std::__1::__bucket_list_deallocator.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"struct.std::__1::__hash_node_base.455" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.486" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::shared_ptr.529" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.530", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.530" = type { %"struct.std::__1::__atomic_base.531" }
%"struct.std::__1::__atomic_base.531" = type { %"struct.std::__1::__cxx_atomic_impl.532" }
%"struct.std::__1::__cxx_atomic_impl.532" = type { %"struct.std::__1::__cxx_atomic_base_impl.533" }
%"struct.std::__1::__cxx_atomic_base_impl.533" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.534" = type { %"class.std::__1::__hash_table.535" }
%"class.std::__1::__hash_table.535" = type <{ %"class.std::__1::unique_ptr.536", %"class.std::__1::__compressed_pair.546", %"class.std::__1::__compressed_pair.551", %"class.std::__1::__compressed_pair.554", [4 x i8] }>
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538", %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base.539"** }
%"struct.std::__1::__hash_node_base.539" = type { %"struct.std::__1::__hash_node_base.539"* }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.std::__1::__bucket_list_deallocator.541" }
%"class.std::__1::__bucket_list_deallocator.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base.539" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.572", %"class.std::__1::vector.572" }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_set.379" = type { %"class.std::__1::__hash_table.380" }
%"class.std::__1::__hash_table.380" = type <{ %"class.std::__1::unique_ptr.381", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383", %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.384"** }
%"struct.std::__1::__hash_node_base.384" = type { %"struct.std::__1::__hash_node_base.384"* }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.std::__1::__bucket_list_deallocator.386" }
%"class.std::__1::__bucket_list_deallocator.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"struct.std::__1::__hash_node_base.384" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.611" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.631", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.585" = type { %"class.std::__1::__hash_table.586" }
%"class.std::__1::__hash_table.586" = type <{ %"class.std::__1::unique_ptr.587", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.605", [4 x i8] }>
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589", %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"struct.std::__1::__hash_node_base.590"** }
%"struct.std::__1::__hash_node_base.590" = type { %"struct.std::__1::__hash_node_base.590"* }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__bucket_list_deallocator.592" }
%"class.std::__1::__bucket_list_deallocator.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.590" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::unordered_map.635" = type { %"class.std::__1::__hash_table.636" }
%"class.std::__1::__hash_table.636" = type <{ %"class.std::__1::unique_ptr.637", %"class.std::__1::__compressed_pair.647", %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.657", [4 x i8] }>
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639", %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"struct.std::__1::__hash_node_base.640"** }
%"struct.std::__1::__hash_node_base.640" = type { %"struct.std::__1::__hash_node_base.640"* }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.std::__1::__bucket_list_deallocator.642" }
%"class.std::__1::__bucket_list_deallocator.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"struct.std::__1::__hash_node_base.640" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.675" = type { %"struct.std::__1::__atomic_base.676" }
%"struct.std::__1::__atomic_base.676" = type { %"struct.std::__1::__cxx_atomic_impl.677" }
%"struct.std::__1::__cxx_atomic_impl.677" = type { %"struct.std::__1::__cxx_atomic_base_impl.678" }
%"struct.std::__1::__cxx_atomic_base_impl.678" = type { i32 }
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.688" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::vector.704" = type { %"class.std::__1::__vector_base.705" }
%"class.std::__1::__vector_base.705" = type { %"struct.std::__1::pair.706"*, %"struct.std::__1::pair.706"*, %"class.std::__1::__compressed_pair.707" }
%"struct.std::__1::pair.706" = type opaque
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"struct.std::__1::pair.706"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::interpreter::JumpTableTargetOffsets" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator" = type <{ %"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.v8::internal::Smi", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.std::__1::pair.1180" = type { i32, %"struct.v8::internal::compiler::LoopInfo" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1175" }
%"struct.std::__1::pair.1175" = type { i32, i32 }
%"class.v8::internal::HandlerTable" = type { i32, i64 }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__tree_node.1214" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1215" }
%"struct.std::__1::__value_type.1215" = type { %"struct.std::__1::pair.1180" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer.1196" = type { %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal8compiler8LoopInfo15AddResumeTargetERKNS1_16ResumeJumpTargetE = comdat any

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__15dequeIN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8LoopInfoEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal31FLAG_trace_environment_livenessE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c" | \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZN2v88internal11interpreter9Bytecodes13kOperandCountE = external local_unnamed_addr constant [0 x i32], align 4
@_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE = external local_unnamed_addr constant [0 x i8*], align 8
@_ZN2v88internal11interpreter9Bytecodes20kImplicitRegisterUseE = external local_unnamed_addr constant [0 x i8], align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE = external local_unnamed_addr constant [3 x [197 x i8]], align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal8compiler23BytecodeLoopAssignmentsC1EiiPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::BytecodeLoopAssignments"*, i32, i32, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::BytecodeLoopAssignments"*, i32, i32, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler23BytecodeLoopAssignmentsC2EiiPNS0_4ZoneE
@_ZN2v88internal8compiler16ResumeJumpTargetC1Eiii = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ResumeJumpTarget"*, i32, i32, i32), void (%"class.v8::internal::compiler::ResumeJumpTarget"*, i32, i32, i32)* @_ZN2v88internal8compiler16ResumeJumpTargetC2Eiii
@_ZN2v88internal8compiler16BytecodeAnalysisC1ENS0_6HandleINS0_13BytecodeArrayEEEPNS0_4ZoneENS0_14BytecodeOffsetEb = hidden unnamed_addr alias void (%"class.v8::internal::compiler::BytecodeAnalysis"*, i64*, %"class.v8::internal::Zone"*, i32, i1), void (%"class.v8::internal::compiler::BytecodeAnalysis"*, i64*, %"class.v8::internal::Zone"*, i32, i1)* @_ZN2v88internal8compiler16BytecodeAnalysisC2ENS0_6HandleINS0_13BytecodeArrayEEEPNS0_4ZoneENS0_14BytecodeOffsetEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler23BytecodeLoopAssignmentsC2EiiPNS0_4ZoneE(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture, i32, i32, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Zone"*, align 8
  %6 = alloca i32, align 4
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  %10 = add nsw i32 %2, %1
  store i32 %10, i32* %6, align 4
  %11 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %3, i32* nonnull dereferenceable(4) %6, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  store %"class.v8::internal::BitVector"* %11, %"class.v8::internal::BitVector"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #13
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #13
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler23BytecodeLoopAssignments3AddENS0_11interpreter8RegisterE(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::interpreter::Register", align 4
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %3, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = icmp slt i32 %1, 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  br i1 %5, label %10, label %25

10:                                               ; preds = %2
  %11 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %3, i32 %9) #13
  %12 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 2
  %17 = bitcast %"union.v8::internal::BitVector::DataStorage"* %16 to i64*
  br label %40

18:                                               ; preds = %10
  %19 = srem i32 %11, 64
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 2, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = sdiv i32 %11, 64
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i64, i64* %21, i64 %23
  br label %40

25:                                               ; preds = %2
  %26 = add nsw i32 %9, %1
  %27 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 2
  %32 = bitcast %"union.v8::internal::BitVector::DataStorage"* %31 to i64*
  br label %40

33:                                               ; preds = %25
  %34 = srem i32 %26, 64
  %35 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %7, i64 0, i32 2, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = sdiv i32 %26, 64
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i64, i64* %36, i64 %38
  br label %40

40:                                               ; preds = %33, %30, %18, %15
  %41 = phi i64* [ %39, %33 ], [ %32, %30 ], [ %24, %18 ], [ %17, %15 ]
  %42 = phi i32 [ %34, %33 ], [ %26, %30 ], [ %19, %18 ], [ %11, %15 ]
  %43 = zext i32 %42 to i64
  %44 = shl i64 1, %43
  %45 = load i64, i64* %41, align 8
  %46 = or i64 %45, %44
  store i64 %46, i64* %41, align 8
  ret void
}

declare i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler23BytecodeLoopAssignments7AddListENS0_11interpreter8RegisterEj(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::interpreter::Register", align 4
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %4, i64 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = icmp slt i32 %1, 0
  %7 = icmp ne i32 %2, 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %3
  br i1 %7, label %9, label %72

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 0
  br label %44

12:                                               ; preds = %3
  br i1 %7, label %13, label %72

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 0
  br label %16

16:                                               ; preds = %35, %13
  %17 = phi i32 [ 0, %13 ], [ %42, %35 ]
  %18 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %14, align 8
  %19 = load i32, i32* %15, align 8
  %20 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %4, i32 %19) #13
  %21 = add i32 %20, %17
  %22 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %18, i64 0, i32 2
  %27 = bitcast %"union.v8::internal::BitVector::DataStorage"* %26 to i64*
  br label %35

28:                                               ; preds = %16
  %29 = srem i32 %21, 64
  %30 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %18, i64 0, i32 2, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = sdiv i32 %21, 64
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i64, i64* %31, i64 %33
  br label %35

35:                                               ; preds = %25, %28
  %36 = phi i64* [ %27, %25 ], [ %34, %28 ]
  %37 = phi i32 [ %21, %25 ], [ %29, %28 ]
  %38 = zext i32 %37 to i64
  %39 = shl i64 1, %38
  %40 = load i64, i64* %36, align 8
  %41 = or i64 %40, %39
  store i64 %41, i64* %36, align 8
  %42 = add nuw i32 %17, 1
  %43 = icmp eq i32 %42, %2
  br i1 %43, label %72, label %16

44:                                               ; preds = %63, %9
  %45 = phi i32 [ 0, %9 ], [ %70, %63 ]
  %46 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %10, align 8
  %47 = load i32, i32* %11, align 8
  %48 = add i32 %45, %1
  %49 = add i32 %48, %47
  %50 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %46, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %46, i64 0, i32 2
  %55 = bitcast %"union.v8::internal::BitVector::DataStorage"* %54 to i64*
  br label %63

56:                                               ; preds = %44
  %57 = srem i32 %49, 64
  %58 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %46, i64 0, i32 2, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = sdiv i32 %49, 64
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i64, i64* %59, i64 %61
  br label %63

63:                                               ; preds = %53, %56
  %64 = phi i64* [ %55, %53 ], [ %62, %56 ]
  %65 = phi i32 [ %49, %53 ], [ %57, %56 ]
  %66 = zext i32 %65 to i64
  %67 = shl i64 1, %66
  %68 = load i64, i64* %64, align 8
  %69 = or i64 %68, %67
  store i64 %69, i64* %64, align 8
  %70 = add nuw i32 %45, 1
  %71 = icmp eq i32 %70, %2
  br i1 %71, label %72, label %44

72:                                               ; preds = %63, %35, %8, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler23BytecodeLoopAssignments5UnionERKS2_(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly, %"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %1, i64 0, i32 1
  %6 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2, i32 0
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2
  %17 = bitcast %"union.v8::internal::BitVector::DataStorage"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2
  %20 = bitcast %"union.v8::internal::BitVector::DataStorage"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, %18
  store i64 %22, i64* %20, align 8
  br label %36

23:                                               ; preds = %23, %12
  %24 = phi i64 [ 0, %12 ], [ %32, %23 ]
  %25 = load i64*, i64** %13, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 %24
  %27 = load i64, i64* %26, align 8
  %28 = load i64*, i64** %14, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 %24
  %30 = load i64, i64* %29, align 8
  %31 = or i64 %30, %27
  store i64 %31, i64* %29, align 8
  %32 = add nuw nsw i64 %24, 1
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = icmp slt i64 %32, %34
  br i1 %35, label %23, label %36

36:                                               ; preds = %23, %10, %15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler23BytecodeLoopAssignments17ContainsParameterEi(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2
  br i1 %7, label %9, label %11

9:                                                ; preds = %2
  %10 = bitcast %"union.v8::internal::BitVector::DataStorage"* %8 to i64*
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %8, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = sdiv i32 %1, 64
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i64, i64* %13, i64 %15
  br label %17

17:                                               ; preds = %9, %11
  %18 = phi i64* [ %10, %9 ], [ %16, %11 ]
  %19 = load i64, i64* %18, align 8
  %20 = srem i32 %1, 64
  %21 = zext i32 %20 to i64
  %22 = shl i64 1, %21
  %23 = and i64 %19, %22
  %24 = icmp ne i64 %23, 0
  ret i1 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler23BytecodeLoopAssignments13ContainsLocalEi(%"class.v8::internal::compiler::BytecodeLoopAssignments"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, %1
  %8 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2
  br i1 %10, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"union.v8::internal::BitVector::DataStorage"* %11 to i64*
  br label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %11, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = sdiv i32 %7, 64
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %16, i64 %18
  br label %20

20:                                               ; preds = %12, %14
  %21 = phi i64* [ %13, %12 ], [ %19, %14 ]
  %22 = load i64, i64* %21, align 8
  %23 = srem i32 %7, 64
  %24 = zext i32 %23 to i64
  %25 = shl i64 1, %24
  %26 = and i64 %22, %25
  %27 = icmp ne i64 %26, 0
  ret i1 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler16ResumeJumpTargetC2Eiii(%"class.v8::internal::compiler::ResumeJumpTarget"* nocapture, i32, i32, i32) unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal8compiler16ResumeJumpTarget4LeafEii(i32, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = shl nuw i64 %3, 32
  %5 = zext i32 %0 to i64
  %6 = or i64 %4, %5
  %7 = insertvalue { i64, i32 } undef, i64 %6, 0
  %8 = insertvalue { i64, i32 } %7, i32 %1, 1
  ret { i64, i32 } %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZN2v88internal8compiler16ResumeJumpTarget12AtLoopHeaderEiRKS2_(i32, %"class.v8::internal::compiler::ResumeJumpTarget"* nocapture readonly dereferenceable(12)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %0 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  %11 = insertvalue { i64, i32 } undef, i64 %10, 0
  %12 = insertvalue { i64, i32 } %11, i32 %6, 1
  ret { i64, i32 } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16BytecodeAnalysisC2ENS0_6HandleINS0_13BytecodeArrayEEEPNS0_4ZoneENS0_14BytecodeOffsetEb(%"class.v8::internal::compiler::BytecodeAnalysis"*, i64*, %"class.v8::internal::Zone"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %7 = zext i1 %4 to i8
  %8 = bitcast %"class.v8::internal::compiler::BytecodeAnalysis"* %0 to i64*
  %9 = ptrtoint i64* %1 to i64
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 1
  %11 = bitcast %"class.v8::internal::Zone"** %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 2, i32 0
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  store i8 %7, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %15 to i64*
  %17 = bitcast %"class.v8::internal::ZoneStack"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #13
  store i64 %6, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %20 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %19 to i64*
  %21 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  store i64 %6, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %24 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %23 to i64*
  %25 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  store i64 %6, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %28 = bitcast %"struct.std::__1::__compressed_pair_elem.20"* %27 to i64*
  %29 = bitcast %"class.v8::internal::ZoneVector"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #13
  store i64 %6, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.38"* %31 to i64*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::__compressed_pair.37"* %33 to i64*
  store i64 0, i64* %34, align 8
  store i64 %6, i64* %32, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %36, %"class.std::__1::__tree_end_node"** %30, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 1
  %39 = bitcast %"struct.std::__1::__compressed_pair_elem.46"* %38 to i64*
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__compressed_pair.45"* %40 to i64*
  store i64 0, i64* %41, align 8
  store i64 %6, i64* %39, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %37, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 9
  store i32 -1, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon* %46 to i8*
  store i8 0, i8* %47, align 8
  br i1 %4, label %48, label %55

48:                                               ; preds = %5
  %49 = load i64, i64* %1, align 8
  %50 = add i64 %49, 3
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = ashr i32 %52, 1
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2v88internal8compiler19BytecodeLivenessMapC1EiPNS0_4ZoneE(%"class.v8::internal::compiler::BytecodeLivenessMap"* %54, i32 %53, %"class.v8::internal::Zone"* %2) #13
  store i8 1, i8* %45, align 8
  br label %55

55:                                               ; preds = %48, %5
  tail call void @_ZN2v88internal8compiler16BytecodeAnalysis7AnalyzeEv(%"class.v8::internal::compiler::BytecodeAnalysis"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16BytecodeAnalysis7AnalyzeEv(%"class.v8::internal::compiler::BytecodeAnalysis"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::interpreter::Register", align 4
  %3 = alloca %"class.v8::internal::interpreter::Register", align 4
  %4 = alloca %"class.v8::internal::interpreter::Register", align 4
  %5 = alloca %"class.v8::internal::interpreter::Register", align 4
  %6 = alloca %"class.v8::internal::interpreter::Register", align 4
  %7 = alloca %"class.v8::internal::compiler::BytecodeLivenessState"*, align 8
  %8 = alloca %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", align 8
  %9 = alloca %"class.v8::internal::compiler::ResumeJumpTarget", align 8
  %10 = alloca %"class.v8::internal::compiler::ResumeJumpTarget", align 8
  %11 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets", align 8
  %12 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %13 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %14 = alloca %"class.v8::internal::StdoutStream", align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = icmp eq i64 %21, 0
  %23 = shl i64 %21, 5
  %24 = add i64 %23, -1
  %25 = select i1 %22, i64 0, i64 %24
  %26 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %27
  %31 = icmp eq i64 %25, %30
  %32 = inttoptr i64 %20 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %33 = inttoptr i64 %17 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br i1 %31, label %34, label %41

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %35) #13
  %36 = load i64, i64* %28, align 8
  %37 = load i64, i64* %26, align 8
  %38 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %18, align 8
  %39 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %15, align 8
  %40 = add i64 %37, %36
  br label %41

41:                                               ; preds = %34, %1
  %42 = phi i64 [ %40, %34 ], [ %30, %1 ]
  %43 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %39, %34 ], [ %33, %1 ]
  %44 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %38, %34 ], [ %32, %1 ]
  %45 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %43, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = lshr i64 %42, 8
  %48 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %44, i64 %47
  %49 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %48, align 8
  %50 = and i64 %42, 255
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %49, i64 %50
  %52 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %51 to i8*
  br label %53

53:                                               ; preds = %41, %46
  %54 = phi i8* [ %52, %46 ], [ null, %41 ]
  %55 = bitcast i8* %54 to i32*
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 8
  %57 = bitcast i8* %56 to %"struct.v8::internal::compiler::LoopInfo"**
  store %"struct.v8::internal::compiler::LoopInfo"* null, %"struct.v8::internal::compiler::LoopInfo"** %57, align 8
  %58 = load i64, i64* %28, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %28, align 8
  %60 = bitcast %"class.v8::internal::compiler::BytecodeLivenessState"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #13
  store %"class.v8::internal::compiler::BytecodeLivenessState"* null, %"class.v8::internal::compiler::BytecodeLivenessState"** %7, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 2, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = bitcast %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %63) #13
  %64 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 1
  %67 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %66, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEPNS0_4ZoneE(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8, i64* %65, %"class.v8::internal::Zone"* %67) #13
  %68 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.30"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = lshr exact i64 %74, 2
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, -1
  %78 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 2
  store i32 %77, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %79 = call zeroext i1 @_ZNK2v88internal11interpreter27BytecodeArrayRandomIterator7IsValidEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  br i1 %79, label %80, label %1092

80:                                               ; preds = %53
  %81 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 3
  %83 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 1
  %84 = bitcast i8** %83 to i64*
  %85 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 5
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 9
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  %88 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i32** %89 to i64*
  %92 = bitcast %"class.std::__1::vector.30"* %88 to i64*
  %93 = bitcast i32** %90 to i64*
  %94 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %88, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6, i32 0
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %97 to i64*
  %100 = bitcast %"class.std::__1::vector"* %96 to i64*
  %101 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %98 to i64*
  %102 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %103 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %96, i64 0, i32 0, i32 0
  %104 = bitcast %"class.v8::internal::interpreter::Register"* %5 to i8*
  %105 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %5, i64 0, i32 0
  %106 = bitcast %"class.v8::internal::interpreter::Register"* %4 to i8*
  %107 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %4, i64 0, i32 0
  %108 = bitcast %"class.v8::internal::interpreter::Register"* %2 to i8*
  %109 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %2, i64 0, i32 0
  %110 = bitcast %"class.v8::internal::interpreter::Register"* %3 to i8*
  %111 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %3, i64 0, i32 0
  %112 = bitcast %"class.v8::internal::interpreter::Register"* %6 to i8*
  %113 = getelementptr inbounds %"class.v8::internal::interpreter::Register", %"class.v8::internal::interpreter::Register"* %6, i64 0, i32 0
  %114 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %9 to i8*
  %115 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %9 to i64*
  %116 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %9, i64 0, i32 2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %118 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %117 to i64*
  %119 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %117 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %120 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %10 to i8*
  %121 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %10 to i64*
  %122 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %10, i64 0, i32 2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %124

124:                                              ; preds = %80, %1088
  %125 = phi i32 [ -1, %80 ], [ %359, %1088 ]
  %126 = load i8*, i8** %82, align 8
  %127 = load i8, i8* %126, align 1
  %128 = ptrtoint i8* %126 to i64
  %129 = load i64, i64* %84, align 8
  %130 = sub i64 %128, %129
  %131 = load i32, i32* %85, align 4
  %132 = trunc i64 %130 to i32
  %133 = sub i32 %132, %131
  switch i8 %127, label %358 [
    i8 -83, label %134
    i8 -120, label %136
  ]

134:                                              ; preds = %124
  %135 = load i32, i32* %78, align 8
  br label %358

136:                                              ; preds = %124
  %137 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21current_bytecode_sizeEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81) #13
  %138 = add nsw i32 %137, %133
  %139 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81) #13
  call void @_ZN2v88internal8compiler16BytecodeAnalysis8PushLoopEii(%"class.v8::internal::compiler::BytecodeAnalysis"* %0, i32 %139, i32 %138)
  %140 = icmp eq i32 %133, %62
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  store i32 %139, i32* %86, align 8
  br label %142

142:                                              ; preds = %136, %141
  %143 = load i8, i8* %87, align 4, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %358, label %145

145:                                              ; preds = %142
  %146 = load i32, i32* %78, align 8
  %147 = load i32*, i32** %89, align 8
  %148 = load i32*, i32** %90, align 8
  %149 = icmp ult i32* %147, %148
  %150 = ptrtoint i32* %148 to i64
  br i1 %149, label %151, label %154

151:                                              ; preds = %145
  store i32 %146, i32* %147, align 4
  %152 = getelementptr inbounds i32, i32* %147, i64 1
  %153 = ptrtoint i32* %152 to i64
  store i64 %153, i64* %91, align 8
  br label %358

154:                                              ; preds = %145
  %155 = ptrtoint i32* %147 to i64
  %156 = load i64, i64* %92, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 2
  %159 = add nsw i64 %158, 1
  %160 = icmp ugt i64 %159, 536870911
  br i1 %160, label %161, label %163

161:                                              ; preds = %154
  %162 = bitcast %"class.std::__1::vector.30"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %162) #14
  unreachable

163:                                              ; preds = %154
  %164 = sub i64 %150, %156
  %165 = ashr exact i64 %164, 2
  %166 = icmp ult i64 %165, 268435455
  br i1 %166, label %167, label %172

167:                                              ; preds = %163
  %168 = ashr exact i64 %164, 1
  %169 = icmp ult i64 %168, %159
  %170 = select i1 %169, i64 %159, i64 %168
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %191, label %172

172:                                              ; preds = %167, %163
  %173 = phi i64 [ %170, %167 ], [ 536870911, %163 ]
  %174 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %94, align 8
  %175 = shl i64 %173, 2
  %176 = add i64 %175, 7
  %177 = and i64 %176, -8
  %178 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %174, i64 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %174, i64 0, i32 3
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %181, %179
  %183 = icmp ugt i64 %177, %182
  br i1 %183, label %184, label %186, !prof !2

184:                                              ; preds = %172
  %185 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %174, i64 %177) #13
  br label %188

186:                                              ; preds = %172
  %187 = add i64 %177, %179
  store i64 %187, i64* %178, align 8
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i64 [ %185, %184 ], [ %179, %186 ]
  %190 = inttoptr i64 %189 to i32*
  br label %191

191:                                              ; preds = %188, %167
  %192 = phi i64 [ %173, %188 ], [ 0, %167 ]
  %193 = phi i32* [ %190, %188 ], [ null, %167 ]
  %194 = getelementptr inbounds i32, i32* %193, i64 %158
  %195 = getelementptr inbounds i32, i32* %193, i64 %192
  %196 = ptrtoint i32* %195 to i64
  store i32 %146, i32* %194, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 1
  %198 = ptrtoint i32* %197 to i64
  %199 = load i32*, i32** %95, align 8
  %200 = ptrtoint i32* %199 to i64
  %201 = load i32*, i32** %89, align 8
  %202 = icmp eq i32* %201, %199
  br i1 %202, label %355, label %203

203:                                              ; preds = %191
  %204 = getelementptr i32, i32* %201, i64 -1
  %205 = ptrtoint i32* %204 to i64
  %206 = sub i64 %205, %200
  %207 = lshr i64 %206, 2
  %208 = add nuw nsw i64 %207, 1
  %209 = icmp ult i64 %208, 8
  br i1 %209, label %303, label %210

210:                                              ; preds = %203
  %211 = getelementptr i32, i32* %193, i64 -1
  %212 = getelementptr i32, i32* %201, i64 -1
  %213 = ptrtoint i32* %212 to i64
  %214 = sub i64 %213, %200
  %215 = lshr i64 %214, 2
  %216 = sub nsw i64 %158, %215
  %217 = getelementptr i32, i32* %211, i64 %216
  %218 = getelementptr i32, i32* %201, i64 -1
  %219 = sub nsw i64 0, %215
  %220 = getelementptr i32, i32* %218, i64 %219
  %221 = icmp ult i32* %217, %201
  %222 = icmp ult i32* %220, %194
  %223 = and i1 %221, %222
  br i1 %223, label %303, label %224

224:                                              ; preds = %210
  %225 = and i64 %208, 9223372036854775800
  %226 = sub nsw i64 0, %225
  %227 = getelementptr i32, i32* %194, i64 %226
  %228 = sub nsw i64 0, %225
  %229 = getelementptr i32, i32* %201, i64 %228
  %230 = add nsw i64 %225, -8
  %231 = lshr exact i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 1
  %234 = icmp eq i64 %230, 0
  br i1 %234, label %279, label %235

235:                                              ; preds = %224
  %236 = sub nuw nsw i64 %232, %233
  %237 = getelementptr i32, i32* %194, i64 -1
  %238 = getelementptr i32, i32* %201, i64 -1
  %239 = getelementptr i32, i32* %194, i64 -1
  %240 = getelementptr i32, i32* %201, i64 -1
  br label %241

241:                                              ; preds = %241, %235
  %242 = phi i64 [ 0, %235 ], [ %276, %241 ]
  %243 = phi i64 [ %236, %235 ], [ %277, %241 ]
  %244 = sub i64 0, %242
  %245 = sub i64 0, %242
  %246 = getelementptr inbounds i32, i32* %237, i64 %244
  %247 = getelementptr inbounds i32, i32* %238, i64 %245
  %248 = getelementptr inbounds i32, i32* %247, i64 -3
  %249 = bitcast i32* %248 to <4 x i32>*
  %250 = load <4 x i32>, <4 x i32>* %249, align 4, !alias.scope !4
  %251 = getelementptr inbounds i32, i32* %247, i64 -4
  %252 = getelementptr inbounds i32, i32* %251, i64 -3
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !4
  %255 = getelementptr inbounds i32, i32* %246, i64 -3
  %256 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %250, <4 x i32>* %256, align 4, !alias.scope !7, !noalias !4
  %257 = getelementptr inbounds i32, i32* %246, i64 -4
  %258 = getelementptr inbounds i32, i32* %257, i64 -3
  %259 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %259, align 4, !alias.scope !7, !noalias !4
  %260 = sub nuw nsw i64 -8, %242
  %261 = sub nuw nsw i64 -8, %242
  %262 = getelementptr inbounds i32, i32* %239, i64 %260
  %263 = getelementptr inbounds i32, i32* %240, i64 %261
  %264 = getelementptr inbounds i32, i32* %263, i64 -3
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !4
  %267 = getelementptr inbounds i32, i32* %263, i64 -4
  %268 = getelementptr inbounds i32, i32* %267, i64 -3
  %269 = bitcast i32* %268 to <4 x i32>*
  %270 = load <4 x i32>, <4 x i32>* %269, align 4, !alias.scope !4
  %271 = getelementptr inbounds i32, i32* %262, i64 -3
  %272 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %272, align 4, !alias.scope !7, !noalias !4
  %273 = getelementptr inbounds i32, i32* %262, i64 -4
  %274 = getelementptr inbounds i32, i32* %273, i64 -3
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> %270, <4 x i32>* %275, align 4, !alias.scope !7, !noalias !4
  %276 = add i64 %242, 16
  %277 = add i64 %243, -2
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %241, !llvm.loop !9

279:                                              ; preds = %241, %224
  %280 = phi i64 [ 0, %224 ], [ %276, %241 ]
  %281 = icmp eq i64 %233, 0
  br i1 %281, label %301, label %282

282:                                              ; preds = %279
  %283 = sub i64 0, %280
  %284 = getelementptr i32, i32* %194, i64 -1
  %285 = sub i64 0, %280
  %286 = getelementptr i32, i32* %201, i64 -1
  %287 = getelementptr inbounds i32, i32* %284, i64 %283
  %288 = getelementptr inbounds i32, i32* %286, i64 %285
  %289 = getelementptr inbounds i32, i32* %288, i64 -3
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4, !alias.scope !4
  %292 = getelementptr inbounds i32, i32* %288, i64 -4
  %293 = getelementptr inbounds i32, i32* %292, i64 -3
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !4
  %296 = getelementptr inbounds i32, i32* %287, i64 -3
  %297 = bitcast i32* %296 to <4 x i32>*
  store <4 x i32> %291, <4 x i32>* %297, align 4, !alias.scope !7, !noalias !4
  %298 = getelementptr inbounds i32, i32* %287, i64 -4
  %299 = getelementptr inbounds i32, i32* %298, i64 -3
  %300 = bitcast i32* %299 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %300, align 4, !alias.scope !7, !noalias !4
  br label %301

301:                                              ; preds = %279, %282
  %302 = icmp eq i64 %208, %225
  br i1 %302, label %355, label %303

303:                                              ; preds = %301, %210, %203
  %304 = phi i32* [ %194, %210 ], [ %194, %203 ], [ %227, %301 ]
  %305 = phi i32* [ %201, %210 ], [ %201, %203 ], [ %229, %301 ]
  %306 = getelementptr i32, i32* %305, i64 -1
  %307 = ptrtoint i32* %306 to i64
  %308 = sub i64 %307, %200
  %309 = lshr i64 %308, 2
  %310 = add nuw nsw i64 %309, 1
  %311 = and i64 %310, 7
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %322, label %313

313:                                              ; preds = %303, %313
  %314 = phi i32* [ %317, %313 ], [ %304, %303 ]
  %315 = phi i32* [ %318, %313 ], [ %305, %303 ]
  %316 = phi i64 [ %320, %313 ], [ %311, %303 ]
  %317 = getelementptr inbounds i32, i32* %314, i64 -1
  %318 = getelementptr inbounds i32, i32* %315, i64 -1
  %319 = load i32, i32* %318, align 4
  store i32 %319, i32* %317, align 4
  %320 = add i64 %316, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %313, !llvm.loop !11

322:                                              ; preds = %313, %303
  %323 = phi i32* [ undef, %303 ], [ %317, %313 ]
  %324 = phi i32* [ %304, %303 ], [ %317, %313 ]
  %325 = phi i32* [ %305, %303 ], [ %318, %313 ]
  %326 = icmp ult i64 %308, 28
  br i1 %326, label %355, label %327

327:                                              ; preds = %322, %327
  %328 = phi i32* [ %351, %327 ], [ %324, %322 ]
  %329 = phi i32* [ %352, %327 ], [ %325, %322 ]
  %330 = getelementptr inbounds i32, i32* %328, i64 -1
  %331 = getelementptr inbounds i32, i32* %329, i64 -1
  %332 = load i32, i32* %331, align 4
  store i32 %332, i32* %330, align 4
  %333 = getelementptr inbounds i32, i32* %328, i64 -2
  %334 = getelementptr inbounds i32, i32* %329, i64 -2
  %335 = load i32, i32* %334, align 4
  store i32 %335, i32* %333, align 4
  %336 = getelementptr inbounds i32, i32* %328, i64 -3
  %337 = getelementptr inbounds i32, i32* %329, i64 -3
  %338 = load i32, i32* %337, align 4
  store i32 %338, i32* %336, align 4
  %339 = getelementptr inbounds i32, i32* %328, i64 -4
  %340 = getelementptr inbounds i32, i32* %329, i64 -4
  %341 = load i32, i32* %340, align 4
  store i32 %341, i32* %339, align 4
  %342 = getelementptr inbounds i32, i32* %328, i64 -5
  %343 = getelementptr inbounds i32, i32* %329, i64 -5
  %344 = load i32, i32* %343, align 4
  store i32 %344, i32* %342, align 4
  %345 = getelementptr inbounds i32, i32* %328, i64 -6
  %346 = getelementptr inbounds i32, i32* %329, i64 -6
  %347 = load i32, i32* %346, align 4
  store i32 %347, i32* %345, align 4
  %348 = getelementptr inbounds i32, i32* %328, i64 -7
  %349 = getelementptr inbounds i32, i32* %329, i64 -7
  %350 = load i32, i32* %349, align 4
  store i32 %350, i32* %348, align 4
  %351 = getelementptr inbounds i32, i32* %328, i64 -8
  %352 = getelementptr inbounds i32, i32* %329, i64 -8
  %353 = load i32, i32* %352, align 4
  store i32 %353, i32* %351, align 4
  %354 = icmp eq i32* %352, %199
  br i1 %354, label %355, label %327, !llvm.loop !13

355:                                              ; preds = %322, %327, %301, %191
  %356 = phi i32* [ %194, %191 ], [ %227, %301 ], [ %323, %322 ], [ %351, %327 ]
  %357 = ptrtoint i32* %356 to i64
  store i64 %357, i64* %92, align 8
  store i64 %198, i64* %91, align 8
  store i64 %196, i64* %93, align 8
  br label %358

358:                                              ; preds = %355, %151, %142, %124, %134
  %359 = phi i32 [ %135, %134 ], [ %125, %124 ], [ %125, %142 ], [ %125, %151 ], [ %125, %355 ]
  %360 = load i64, i64* %28, align 8
  %361 = icmp ugt i64 %360, 1
  br i1 %361, label %362, label %995

362:                                              ; preds = %358
  %363 = icmp eq i8 %127, -120
  br i1 %363, label %364, label %369

364:                                              ; preds = %362
  %365 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81) #13
  %366 = icmp eq i32 %365, %133
  br i1 %366, label %367, label %1075

367:                                              ; preds = %364
  %368 = load i64, i64* %28, align 8
  br label %369

369:                                              ; preds = %367, %362
  %370 = phi i64 [ %368, %367 ], [ %360, %362 ]
  %371 = load i64, i64* %26, align 8
  %372 = add i64 %370, -1
  %373 = add i64 %372, %371
  %374 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %18, align 8
  %375 = lshr i64 %373, 8
  %376 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %374, i64 %375
  %377 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %376, align 8
  %378 = and i64 %373, 255
  %379 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %377, i64 %378, i32 1
  %380 = load %"struct.v8::internal::compiler::LoopInfo"*, %"struct.v8::internal::compiler::LoopInfo"** %379, align 8
  %381 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 1
  %382 = zext i8 %127 to i64
  %383 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN2v88internal11interpreter9Bytecodes13kOperandCountE, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %382
  %386 = load i8*, i8** %385, align 8
  %387 = icmp sgt i32 %384, 0
  br i1 %387, label %388, label %391

388:                                              ; preds = %369
  %389 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 1, i32 1
  %390 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %381, i64 0, i32 0
  br label %396

391:                                              ; preds = %650, %369
  %392 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN2v88internal11interpreter9Bytecodes20kImplicitRegisterUseE, i64 0, i64 %382
  %393 = load i8, i8* %392, align 1
  %394 = and i8 %393, 4
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %787, label %654

396:                                              ; preds = %650, %388
  %397 = phi i32 [ 0, %388 ], [ %652, %650 ]
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds i8, i8* %386, i64 %398
  %400 = load i8, i8* %399, align 1
  switch i8 %400, label %650 [
    i8 12, label %401
    i8 13, label %443
    i8 14, label %507
    i8 15, label %577
  ]

401:                                              ; preds = %396
  %402 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 %397) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #13
  store i32 %402, i32* %111, align 4
  %403 = icmp slt i32 %402, 0
  %404 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %405 = load i32, i32* %390, align 8
  br i1 %403, label %406, label %421

406:                                              ; preds = %401
  %407 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %3, i32 %405) #13
  %408 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 1
  %409 = load i32, i32* %408, align 4
  %410 = icmp eq i32 %409, 1
  br i1 %410, label %411, label %414

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 2
  %413 = bitcast %"union.v8::internal::BitVector::DataStorage"* %412 to i64*
  br label %436

414:                                              ; preds = %406
  %415 = srem i32 %407, 64
  %416 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 2, i32 0
  %417 = load i64*, i64** %416, align 8
  %418 = sdiv i32 %407, 64
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i64, i64* %417, i64 %419
  br label %436

421:                                              ; preds = %401
  %422 = add nsw i32 %405, %402
  %423 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 1
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 1
  br i1 %425, label %426, label %429

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 2
  %428 = bitcast %"union.v8::internal::BitVector::DataStorage"* %427 to i64*
  br label %436

429:                                              ; preds = %421
  %430 = srem i32 %422, 64
  %431 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %404, i64 0, i32 2, i32 0
  %432 = load i64*, i64** %431, align 8
  %433 = sdiv i32 %422, 64
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i64, i64* %432, i64 %434
  br label %436

436:                                              ; preds = %429, %426, %414, %411
  %437 = phi i64* [ %435, %429 ], [ %428, %426 ], [ %420, %414 ], [ %413, %411 ]
  %438 = phi i32 [ %430, %429 ], [ %422, %426 ], [ %415, %414 ], [ %407, %411 ]
  %439 = zext i32 %438 to i64
  %440 = shl i64 1, %439
  %441 = load i64, i64* %437, align 8
  %442 = or i64 %441, %440
  store i64 %442, i64* %437, align 8
  br label %647

443:                                              ; preds = %396
  %444 = add nsw i32 %397, 1
  %445 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 %397) #13
  %446 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterCountOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 %444) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #13
  store i32 %445, i32* %109, align 4
  %447 = icmp slt i32 %445, 0
  %448 = icmp ne i32 %446, 0
  br i1 %447, label %450, label %449

449:                                              ; preds = %443
  br i1 %448, label %479, label %647

450:                                              ; preds = %443
  br i1 %448, label %451, label %647

451:                                              ; preds = %450, %470
  %452 = phi i32 [ %477, %470 ], [ 0, %450 ]
  %453 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %454 = load i32, i32* %390, align 8
  %455 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %2, i32 %454) #13
  %456 = add i32 %455, %452
  %457 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %453, i64 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = icmp eq i32 %458, 1
  br i1 %459, label %460, label %463

460:                                              ; preds = %451
  %461 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %453, i64 0, i32 2
  %462 = bitcast %"union.v8::internal::BitVector::DataStorage"* %461 to i64*
  br label %470

463:                                              ; preds = %451
  %464 = srem i32 %456, 64
  %465 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %453, i64 0, i32 2, i32 0
  %466 = load i64*, i64** %465, align 8
  %467 = sdiv i32 %456, 64
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i64, i64* %466, i64 %468
  br label %470

470:                                              ; preds = %463, %460
  %471 = phi i64* [ %469, %463 ], [ %462, %460 ]
  %472 = phi i32 [ %464, %463 ], [ %456, %460 ]
  %473 = zext i32 %472 to i64
  %474 = shl i64 1, %473
  %475 = load i64, i64* %471, align 8
  %476 = or i64 %475, %474
  store i64 %476, i64* %471, align 8
  %477 = add nuw i32 %452, 1
  %478 = icmp eq i32 %477, %446
  br i1 %478, label %647, label %451

479:                                              ; preds = %449, %498
  %480 = phi i32 [ %505, %498 ], [ 0, %449 ]
  %481 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %482 = load i32, i32* %390, align 8
  %483 = add i32 %480, %445
  %484 = add i32 %483, %482
  %485 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %481, i64 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %491

488:                                              ; preds = %479
  %489 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %481, i64 0, i32 2
  %490 = bitcast %"union.v8::internal::BitVector::DataStorage"* %489 to i64*
  br label %498

491:                                              ; preds = %479
  %492 = srem i32 %484, 64
  %493 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %481, i64 0, i32 2, i32 0
  %494 = load i64*, i64** %493, align 8
  %495 = sdiv i32 %484, 64
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds i64, i64* %494, i64 %496
  br label %498

498:                                              ; preds = %491, %488
  %499 = phi i64* [ %497, %491 ], [ %490, %488 ]
  %500 = phi i32 [ %492, %491 ], [ %484, %488 ]
  %501 = zext i32 %500 to i64
  %502 = shl i64 1, %501
  %503 = load i64, i64* %499, align 8
  %504 = or i64 %503, %502
  store i64 %504, i64* %499, align 8
  %505 = add nuw i32 %480, 1
  %506 = icmp eq i32 %505, %446
  br i1 %506, label %647, label %479

507:                                              ; preds = %396
  %508 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 %397) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #13
  store i32 %508, i32* %107, align 4
  %509 = icmp slt i32 %508, 0
  %510 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %511 = load i32, i32* %390, align 8
  br i1 %509, label %517, label %512

512:                                              ; preds = %507
  %513 = add i32 %511, %508
  %514 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %546, label %549

517:                                              ; preds = %507
  %518 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %4, i32 %511) #13
  %519 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 1
  %520 = load i32, i32* %519, align 4
  %521 = icmp eq i32 %520, 1
  br i1 %521, label %522, label %525

522:                                              ; preds = %517
  %523 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 2
  %524 = bitcast %"union.v8::internal::BitVector::DataStorage"* %523 to i64*
  br label %532

525:                                              ; preds = %517
  %526 = srem i32 %518, 64
  %527 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 2, i32 0
  %528 = load i64*, i64** %527, align 8
  %529 = sdiv i32 %518, 64
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i64, i64* %528, i64 %530
  br label %532

532:                                              ; preds = %525, %522
  %533 = phi i64* [ %531, %525 ], [ %524, %522 ]
  %534 = phi i32 [ %526, %525 ], [ %518, %522 ]
  %535 = zext i32 %534 to i64
  %536 = shl i64 1, %535
  %537 = load i64, i64* %533, align 8
  %538 = or i64 %537, %536
  store i64 %538, i64* %533, align 8
  %539 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %540 = load i32, i32* %390, align 8
  %541 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %4, i32 %540) #13
  %542 = add i32 %541, 1
  %543 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %539, i64 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = icmp eq i32 %544, 1
  br i1 %545, label %784, label %777

546:                                              ; preds = %512
  %547 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 2
  %548 = bitcast %"union.v8::internal::BitVector::DataStorage"* %547 to i64*
  br label %556

549:                                              ; preds = %512
  %550 = srem i32 %513, 64
  %551 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %510, i64 0, i32 2, i32 0
  %552 = load i64*, i64** %551, align 8
  %553 = sdiv i32 %513, 64
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds i64, i64* %552, i64 %554
  br label %556

556:                                              ; preds = %549, %546
  %557 = phi i64* [ %555, %549 ], [ %548, %546 ]
  %558 = phi i32 [ %550, %549 ], [ %513, %546 ]
  %559 = zext i32 %558 to i64
  %560 = shl i64 1, %559
  %561 = load i64, i64* %557, align 8
  %562 = or i64 %561, %560
  store i64 %562, i64* %557, align 8
  %563 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %564 = load i32, i32* %390, align 8
  %565 = add nuw i32 %508, 1
  %566 = add i32 %565, %564
  %567 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %563, i64 0, i32 1
  %568 = load i32, i32* %567, align 4
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %774, label %767

570:                                              ; preds = %784, %777, %774, %767
  %571 = phi i64* [ %786, %784 ], [ %783, %777 ], [ %776, %774 ], [ %773, %767 ]
  %572 = phi i32 [ %542, %784 ], [ %778, %777 ], [ %566, %774 ], [ %768, %767 ]
  %573 = zext i32 %572 to i64
  %574 = shl i64 1, %573
  %575 = load i64, i64* %571, align 8
  %576 = or i64 %575, %574
  store i64 %576, i64* %571, align 8
  br label %647

577:                                              ; preds = %396
  %578 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 %397) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #13
  store i32 %578, i32* %105, align 4
  %579 = icmp slt i32 %578, 0
  %580 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %581 = load i32, i32* %390, align 8
  br i1 %579, label %587, label %582

582:                                              ; preds = %577
  %583 = add i32 %581, %578
  %584 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = icmp eq i32 %585, 1
  br i1 %586, label %616, label %619

587:                                              ; preds = %577
  %588 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %5, i32 %581) #13
  %589 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 1
  %590 = load i32, i32* %589, align 4
  %591 = icmp eq i32 %590, 1
  br i1 %591, label %592, label %595

592:                                              ; preds = %587
  %593 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 2
  %594 = bitcast %"union.v8::internal::BitVector::DataStorage"* %593 to i64*
  br label %602

595:                                              ; preds = %587
  %596 = srem i32 %588, 64
  %597 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 2, i32 0
  %598 = load i64*, i64** %597, align 8
  %599 = sdiv i32 %588, 64
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i64, i64* %598, i64 %600
  br label %602

602:                                              ; preds = %595, %592
  %603 = phi i64* [ %601, %595 ], [ %594, %592 ]
  %604 = phi i32 [ %596, %595 ], [ %588, %592 ]
  %605 = zext i32 %604 to i64
  %606 = shl i64 1, %605
  %607 = load i64, i64* %603, align 8
  %608 = or i64 %607, %606
  store i64 %608, i64* %603, align 8
  %609 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %610 = load i32, i32* %390, align 8
  %611 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %5, i32 %610) #13
  %612 = add i32 %611, 1
  %613 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 1
  %614 = load i32, i32* %613, align 4
  %615 = icmp eq i32 %614, 1
  br i1 %615, label %740, label %733

616:                                              ; preds = %582
  %617 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 2
  %618 = bitcast %"union.v8::internal::BitVector::DataStorage"* %617 to i64*
  br label %626

619:                                              ; preds = %582
  %620 = srem i32 %583, 64
  %621 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %580, i64 0, i32 2, i32 0
  %622 = load i64*, i64** %621, align 8
  %623 = sdiv i32 %583, 64
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i64, i64* %622, i64 %624
  br label %626

626:                                              ; preds = %619, %616
  %627 = phi i64* [ %625, %619 ], [ %618, %616 ]
  %628 = phi i32 [ %620, %619 ], [ %583, %616 ]
  %629 = zext i32 %628 to i64
  %630 = shl i64 1, %629
  %631 = load i64, i64* %627, align 8
  %632 = or i64 %631, %630
  store i64 %632, i64* %627, align 8
  %633 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %634 = load i32, i32* %390, align 8
  %635 = add nuw i32 %578, 1
  %636 = add i32 %635, %634
  %637 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %633, i64 0, i32 1
  %638 = load i32, i32* %637, align 4
  %639 = icmp eq i32 %638, 1
  br i1 %639, label %706, label %699

640:                                              ; preds = %764, %757, %730, %723
  %641 = phi i64* [ %766, %764 ], [ %763, %757 ], [ %732, %730 ], [ %729, %723 ]
  %642 = phi i32 [ %753, %764 ], [ %758, %757 ], [ %719, %730 ], [ %724, %723 ]
  %643 = zext i32 %642 to i64
  %644 = shl i64 1, %643
  %645 = load i64, i64* %641, align 8
  %646 = or i64 %645, %644
  store i64 %646, i64* %641, align 8
  br label %647

647:                                              ; preds = %498, %470, %449, %450, %436, %570, %640
  %648 = phi i8* [ %104, %640 ], [ %106, %570 ], [ %110, %436 ], [ %108, %450 ], [ %108, %449 ], [ %108, %470 ], [ %108, %498 ]
  %649 = phi i32 [ %397, %640 ], [ %397, %570 ], [ %397, %436 ], [ %444, %450 ], [ %444, %449 ], [ %444, %470 ], [ %444, %498 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %648) #13
  br label %650

650:                                              ; preds = %647, %396
  %651 = phi i32 [ %397, %396 ], [ %649, %647 ]
  %652 = add nsw i32 %651, 1
  %653 = icmp slt i32 %652, %384
  br i1 %653, label %396, label %391

654:                                              ; preds = %391
  %655 = zext i8 %127 to i32
  %656 = sub nsw i32 195, %655
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #13
  store i32 %656, i32* %113, align 4
  %657 = icmp ugt i8 %127, -61
  %658 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 1, i32 1
  %659 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %658, align 8
  %660 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLoopAssignments", %"class.v8::internal::compiler::BytecodeLoopAssignments"* %381, i64 0, i32 0
  %661 = load i32, i32* %660, align 8
  br i1 %657, label %662, label %677

662:                                              ; preds = %654
  %663 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %6, i32 %661) #13
  %664 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 1
  %665 = load i32, i32* %664, align 4
  %666 = icmp eq i32 %665, 1
  br i1 %666, label %667, label %670

667:                                              ; preds = %662
  %668 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 2
  %669 = bitcast %"union.v8::internal::BitVector::DataStorage"* %668 to i64*
  br label %692

670:                                              ; preds = %662
  %671 = srem i32 %663, 64
  %672 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 2, i32 0
  %673 = load i64*, i64** %672, align 8
  %674 = sdiv i32 %663, 64
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i64, i64* %673, i64 %675
  br label %692

677:                                              ; preds = %654
  %678 = add nsw i32 %661, %656
  %679 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 1
  %680 = load i32, i32* %679, align 4
  %681 = icmp eq i32 %680, 1
  br i1 %681, label %682, label %685

682:                                              ; preds = %677
  %683 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 2
  %684 = bitcast %"union.v8::internal::BitVector::DataStorage"* %683 to i64*
  br label %692

685:                                              ; preds = %677
  %686 = srem i32 %678, 64
  %687 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %659, i64 0, i32 2, i32 0
  %688 = load i64*, i64** %687, align 8
  %689 = sdiv i32 %678, 64
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds i64, i64* %688, i64 %690
  br label %692

692:                                              ; preds = %685, %682, %670, %667
  %693 = phi i64* [ %691, %685 ], [ %684, %682 ], [ %676, %670 ], [ %669, %667 ]
  %694 = phi i32 [ %686, %685 ], [ %678, %682 ], [ %671, %670 ], [ %663, %667 ]
  %695 = zext i32 %694 to i64
  %696 = shl i64 1, %695
  %697 = load i64, i64* %693, align 8
  %698 = or i64 %697, %696
  store i64 %698, i64* %693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #13
  br label %787

699:                                              ; preds = %626
  %700 = srem i32 %636, 64
  %701 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %633, i64 0, i32 2, i32 0
  %702 = load i64*, i64** %701, align 8
  %703 = sdiv i32 %636, 64
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i64, i64* %702, i64 %704
  br label %709

706:                                              ; preds = %626
  %707 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %633, i64 0, i32 2
  %708 = bitcast %"union.v8::internal::BitVector::DataStorage"* %707 to i64*
  br label %709

709:                                              ; preds = %706, %699
  %710 = phi i64* [ %708, %706 ], [ %705, %699 ]
  %711 = phi i32 [ %636, %706 ], [ %700, %699 ]
  %712 = zext i32 %711 to i64
  %713 = shl i64 1, %712
  %714 = load i64, i64* %710, align 8
  %715 = or i64 %714, %713
  store i64 %715, i64* %710, align 8
  %716 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %717 = load i32, i32* %390, align 8
  %718 = add nuw i32 %578, 2
  %719 = add i32 %718, %717
  %720 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %716, i64 0, i32 1
  %721 = load i32, i32* %720, align 4
  %722 = icmp eq i32 %721, 1
  br i1 %722, label %730, label %723

723:                                              ; preds = %709
  %724 = srem i32 %719, 64
  %725 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %716, i64 0, i32 2, i32 0
  %726 = load i64*, i64** %725, align 8
  %727 = sdiv i32 %719, 64
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds i64, i64* %726, i64 %728
  br label %640

730:                                              ; preds = %709
  %731 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %716, i64 0, i32 2
  %732 = bitcast %"union.v8::internal::BitVector::DataStorage"* %731 to i64*
  br label %640

733:                                              ; preds = %602
  %734 = srem i32 %612, 64
  %735 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2, i32 0
  %736 = load i64*, i64** %735, align 8
  %737 = sdiv i32 %612, 64
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i64, i64* %736, i64 %738
  br label %743

740:                                              ; preds = %602
  %741 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2
  %742 = bitcast %"union.v8::internal::BitVector::DataStorage"* %741 to i64*
  br label %743

743:                                              ; preds = %740, %733
  %744 = phi i64* [ %742, %740 ], [ %739, %733 ]
  %745 = phi i32 [ %612, %740 ], [ %734, %733 ]
  %746 = zext i32 %745 to i64
  %747 = shl i64 1, %746
  %748 = load i64, i64* %744, align 8
  %749 = or i64 %748, %747
  store i64 %749, i64* %744, align 8
  %750 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %389, align 8
  %751 = load i32, i32* %390, align 8
  %752 = call i32 @_ZNK2v88internal11interpreter8Register16ToParameterIndexEi(%"class.v8::internal::interpreter::Register"* nonnull %5, i32 %751) #13
  %753 = add i32 %752, 2
  %754 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %750, i64 0, i32 1
  %755 = load i32, i32* %754, align 4
  %756 = icmp eq i32 %755, 1
  br i1 %756, label %764, label %757

757:                                              ; preds = %743
  %758 = srem i32 %753, 64
  %759 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %750, i64 0, i32 2, i32 0
  %760 = load i64*, i64** %759, align 8
  %761 = sdiv i32 %753, 64
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds i64, i64* %760, i64 %762
  br label %640

764:                                              ; preds = %743
  %765 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %750, i64 0, i32 2
  %766 = bitcast %"union.v8::internal::BitVector::DataStorage"* %765 to i64*
  br label %640

767:                                              ; preds = %556
  %768 = srem i32 %566, 64
  %769 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %563, i64 0, i32 2, i32 0
  %770 = load i64*, i64** %769, align 8
  %771 = sdiv i32 %566, 64
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds i64, i64* %770, i64 %772
  br label %570

774:                                              ; preds = %556
  %775 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %563, i64 0, i32 2
  %776 = bitcast %"union.v8::internal::BitVector::DataStorage"* %775 to i64*
  br label %570

777:                                              ; preds = %532
  %778 = srem i32 %542, 64
  %779 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %539, i64 0, i32 2, i32 0
  %780 = load i64*, i64** %779, align 8
  %781 = sdiv i32 %542, 64
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds i64, i64* %780, i64 %782
  br label %570

784:                                              ; preds = %532
  %785 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %539, i64 0, i32 2
  %786 = bitcast %"union.v8::internal::BitVector::DataStorage"* %785 to i64*
  br label %570

787:                                              ; preds = %391, %692
  %788 = icmp eq i8 %127, -82
  br i1 %788, label %789, label %797

789:                                              ; preds = %787
  %790 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetUnsignedImmediateOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 3) #13
  %791 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21current_bytecode_sizeEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81) #13
  %792 = add nsw i32 %791, %133
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %114) #13
  %793 = zext i32 %792 to i64
  %794 = shl nuw i64 %793, 32
  %795 = zext i32 %790 to i64
  %796 = or i64 %794, %795
  store i64 %796, i64* %115, align 8
  store i32 %792, i32* %116, align 8
  call void @_ZN2v88internal8compiler8LoopInfo15AddResumeTargetERKNS1_16ResumeJumpTargetE(%"struct.v8::internal::compiler::LoopInfo"* %380, %"class.v8::internal::compiler::ResumeJumpTarget"* nonnull dereferenceable(12) %9)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %114) #13
  br label %797

797:                                              ; preds = %789, %787
  %798 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %377, i64 %378, i32 0
  %799 = load i32, i32* %798, align 8
  %800 = icmp eq i32 %133, %799
  br i1 %800, label %801, label %1075

801:                                              ; preds = %797
  %802 = load i64, i64* %28, align 8
  %803 = load i64, i64* %26, align 8
  %804 = add i64 %802, -1
  store i64 %804, i64* %28, align 8
  %805 = load i64, i64* %16, align 8
  %806 = load i64, i64* %19, align 8
  %807 = sub i64 %805, %806
  %808 = icmp eq i64 %807, 0
  %809 = shl i64 %807, 5
  %810 = add i64 %809, -1
  %811 = select i1 %808, i64 0, i64 %810
  %812 = sub i64 1, %802
  %813 = sub i64 %812, %803
  %814 = add i64 %813, %811
  %815 = icmp ult i64 %814, 512
  %816 = inttoptr i64 %805 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br i1 %815, label %837, label %817

817:                                              ; preds = %801
  %818 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %816, i64 -1
  %819 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %818, align 8
  %820 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %117, align 8
  %821 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %820, null
  br i1 %821, label %826, label %822

822:                                              ; preds = %817
  %823 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %820, i64 0, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp ugt i64 %824, 256
  br i1 %825, label %833, label %826

826:                                              ; preds = %822, %817
  %827 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %819, i64 0, i32 1
  %828 = bitcast %"struct.v8::internal::compiler::LoopInfo"** %827 to i64*
  store i64 256, i64* %828, align 8
  %829 = load i64, i64* %118, align 8
  %830 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %819 to i64*
  store i64 %829, i64* %830, align 8
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %819, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, align 8
  %831 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %15, align 8
  %832 = load i64, i64* %28, align 8
  br label %833

833:                                              ; preds = %826, %822
  %834 = phi i64 [ %804, %822 ], [ %832, %826 ]
  %835 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %816, %822 ], [ %831, %826 ]
  %836 = getelementptr %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %835, i64 -1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %836, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %15, align 8
  br label %837

837:                                              ; preds = %801, %833
  %838 = phi i64 [ %804, %801 ], [ %834, %833 ]
  %839 = icmp ugt i64 %838, 1
  br i1 %839, label %840, label %903

840:                                              ; preds = %837
  %841 = load i64, i64* %26, align 8
  %842 = add i64 %838, -1
  %843 = add i64 %842, %841
  %844 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %18, align 8
  %845 = lshr i64 %843, 8
  %846 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %844, i64 %845
  %847 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %846, align 8
  %848 = and i64 %843, 255
  %849 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %847, i64 %848, i32 1
  %850 = load %"struct.v8::internal::compiler::LoopInfo"*, %"struct.v8::internal::compiler::LoopInfo"** %849, align 8
  %851 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %850, i64 0, i32 1, i32 1
  %852 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %851, align 8
  %853 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 1, i32 1
  %854 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %853, align 8
  %855 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %852, i64 0, i32 1
  %856 = load i32, i32* %855, align 4
  %857 = icmp eq i32 %856, 1
  br i1 %857, label %863, label %858

858:                                              ; preds = %840
  %859 = icmp sgt i32 %856, 0
  br i1 %859, label %860, label %884

860:                                              ; preds = %858
  %861 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %854, i64 0, i32 2, i32 0
  %862 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %852, i64 0, i32 2, i32 0
  br label %871

863:                                              ; preds = %840
  %864 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %854, i64 0, i32 2
  %865 = bitcast %"union.v8::internal::BitVector::DataStorage"* %864 to i64*
  %866 = load i64, i64* %865, align 8
  %867 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %852, i64 0, i32 2
  %868 = bitcast %"union.v8::internal::BitVector::DataStorage"* %867 to i64*
  %869 = load i64, i64* %868, align 8
  %870 = or i64 %869, %866
  store i64 %870, i64* %868, align 8
  br label %884

871:                                              ; preds = %871, %860
  %872 = phi i64 [ 0, %860 ], [ %880, %871 ]
  %873 = load i64*, i64** %861, align 8
  %874 = getelementptr inbounds i64, i64* %873, i64 %872
  %875 = load i64, i64* %874, align 8
  %876 = load i64*, i64** %862, align 8
  %877 = getelementptr inbounds i64, i64* %876, i64 %872
  %878 = load i64, i64* %877, align 8
  %879 = or i64 %878, %875
  store i64 %879, i64* %877, align 8
  %880 = add nuw nsw i64 %872, 1
  %881 = load i32, i32* %855, align 4
  %882 = sext i32 %881 to i64
  %883 = icmp slt i64 %880, %882
  br i1 %883, label %871, label %884

884:                                              ; preds = %871, %858, %863
  %885 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 2, i32 0, i32 0, i32 0
  %886 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %885, align 8
  %887 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 2, i32 0, i32 0, i32 1
  %888 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %887, align 8
  %889 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %886, %888
  br i1 %889, label %1075, label %890

890:                                              ; preds = %884
  %891 = zext i32 %133 to i64
  %892 = shl nuw i64 %891, 32
  br label %893

893:                                              ; preds = %890, %893
  %894 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %886, %890 ], [ %901, %893 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %120) #13
  %895 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %894, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  %897 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %894, i64 0, i32 1
  %898 = load i32, i32* %897, align 4
  %899 = zext i32 %896 to i64
  %900 = or i64 %892, %899
  store i64 %900, i64* %121, align 8
  store i32 %898, i32* %122, align 8
  call void @_ZN2v88internal8compiler8LoopInfo15AddResumeTargetERKNS1_16ResumeJumpTargetE(%"struct.v8::internal::compiler::LoopInfo"* %850, %"class.v8::internal::compiler::ResumeJumpTarget"* nonnull dereferenceable(12) %10)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %120) #13
  %901 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %894, i64 1
  %902 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %901, %888
  br i1 %902, label %1075, label %893

903:                                              ; preds = %837
  %904 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 2, i32 0, i32 0, i32 0
  %905 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %904, align 8
  %906 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %380, i64 0, i32 2, i32 0, i32 0, i32 1
  %907 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %906, align 8
  %908 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %905, %907
  br i1 %908, label %1075, label %909

909:                                              ; preds = %903
  %910 = zext i32 %133 to i64
  %911 = shl nuw i64 %910, 32
  %912 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %97, align 8
  br label %913

913:                                              ; preds = %909, %991
  %914 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %912, %909 ], [ %992, %991 ]
  %915 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %905, %909 ], [ %993, %991 ]
  %916 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %915, i64 0, i32 0
  %917 = load i32, i32* %916, align 4
  %918 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %915, i64 0, i32 1
  %919 = load i32, i32* %918, align 4
  %920 = zext i32 %917 to i64
  %921 = or i64 %911, %920
  %922 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %98, align 8
  %923 = icmp ult %"class.v8::internal::compiler::ResumeJumpTarget"* %914, %922
  %924 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %922 to i64
  br i1 %923, label %925, label %930

925:                                              ; preds = %913
  %926 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %914 to i64*
  store i64 %921, i64* %926, align 4
  %927 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %914, i64 0, i32 2
  store i32 %919, i32* %927, align 4
  %928 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %914, i64 1
  %929 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %928 to i64
  store i64 %929, i64* %99, align 8
  br label %991

930:                                              ; preds = %913
  %931 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %914 to i64
  %932 = load i64, i64* %100, align 8
  %933 = sub i64 %931, %932
  %934 = sdiv exact i64 %933, 12
  %935 = add nsw i64 %934, 1
  %936 = icmp ugt i64 %935, 178956970
  br i1 %936, label %937, label %939

937:                                              ; preds = %930
  %938 = bitcast %"class.std::__1::vector"* %96 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %938) #14
  unreachable

939:                                              ; preds = %930
  %940 = sub i64 %924, %932
  %941 = sdiv exact i64 %940, 12
  %942 = icmp ult i64 %941, 89478485
  br i1 %942, label %943, label %948

943:                                              ; preds = %939
  %944 = shl nsw i64 %941, 1
  %945 = icmp ult i64 %944, %935
  %946 = select i1 %945, i64 %935, i64 %944
  %947 = icmp eq i64 %946, 0
  br i1 %947, label %967, label %948

948:                                              ; preds = %943, %939
  %949 = phi i64 [ %946, %943 ], [ 178956970, %939 ]
  %950 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %102, align 8
  %951 = mul i64 %949, 12
  %952 = add nuw nsw i64 %951, 7
  %953 = and i64 %952, -8
  %954 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %950, i64 0, i32 2
  %955 = load i64, i64* %954, align 8
  %956 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %950, i64 0, i32 3
  %957 = load i64, i64* %956, align 8
  %958 = sub i64 %957, %955
  %959 = icmp ugt i64 %953, %958
  br i1 %959, label %960, label %962, !prof !2

960:                                              ; preds = %948
  %961 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %950, i64 %953) #13
  br label %964

962:                                              ; preds = %948
  %963 = add i64 %953, %955
  store i64 %963, i64* %954, align 8
  br label %964

964:                                              ; preds = %962, %960
  %965 = phi i64 [ %961, %960 ], [ %955, %962 ]
  %966 = inttoptr i64 %965 to %"class.v8::internal::compiler::ResumeJumpTarget"*
  br label %967

967:                                              ; preds = %964, %943
  %968 = phi i64 [ %949, %964 ], [ 0, %943 ]
  %969 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %966, %964 ], [ null, %943 ]
  %970 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %969, i64 %934
  %971 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %969, i64 %968
  %972 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %971 to i64
  %973 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %970 to i64*
  store i64 %921, i64* %973, align 4
  %974 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %969, i64 %934, i32 2
  store i32 %919, i32* %974, align 4
  %975 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %970, i64 1
  %976 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %975 to i64
  %977 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %103, align 8
  %978 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %97, align 8
  %979 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %978, %977
  br i1 %979, label %988, label %980

980:                                              ; preds = %967, %980
  %981 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %983, %980 ], [ %970, %967 ]
  %982 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %984, %980 ], [ %978, %967 ]
  %983 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %981, i64 -1
  %984 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %982, i64 -1
  %985 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %983 to i8*
  %986 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %984 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %985, i8* align 4 %986, i64 12, i1 false) #13
  %987 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %984, %977
  br i1 %987, label %988, label %980

988:                                              ; preds = %980, %967
  %989 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %970, %967 ], [ %983, %980 ]
  %990 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %989 to i64
  store i64 %990, i64* %100, align 8
  store i64 %976, i64* %99, align 8
  store i64 %972, i64* %101, align 8
  br label %991

991:                                              ; preds = %925, %988
  %992 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %928, %925 ], [ %975, %988 ]
  %993 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %915, i64 1
  %994 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %993, %907
  br i1 %994, label %1075, label %913

995:                                              ; preds = %358
  %996 = icmp eq i8 %127, -82
  br i1 %996, label %997, label %1075

997:                                              ; preds = %995
  %998 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetUnsignedImmediateOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81, i32 3) #13
  %999 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21current_bytecode_sizeEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %81) #13
  %1000 = add nsw i32 %999, %133
  %1001 = zext i32 %1000 to i64
  %1002 = shl nuw i64 %1001, 32
  %1003 = zext i32 %998 to i64
  %1004 = or i64 %1002, %1003
  %1005 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %97, align 8
  %1006 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %98, align 8
  %1007 = icmp ult %"class.v8::internal::compiler::ResumeJumpTarget"* %1005, %1006
  %1008 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1006 to i64
  br i1 %1007, label %1009, label %1014

1009:                                             ; preds = %997
  %1010 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1005 to i64*
  store i64 %1004, i64* %1010, align 4
  %1011 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1005, i64 0, i32 2
  store i32 %1000, i32* %1011, align 4
  %1012 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1005, i64 1
  %1013 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1012 to i64
  store i64 %1013, i64* %99, align 8
  br label %1075

1014:                                             ; preds = %997
  %1015 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1005 to i64
  %1016 = load i64, i64* %100, align 8
  %1017 = sub i64 %1015, %1016
  %1018 = sdiv exact i64 %1017, 12
  %1019 = add nsw i64 %1018, 1
  %1020 = icmp ugt i64 %1019, 178956970
  br i1 %1020, label %1021, label %1023

1021:                                             ; preds = %1014
  %1022 = bitcast %"class.std::__1::vector"* %96 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1022) #14
  unreachable

1023:                                             ; preds = %1014
  %1024 = sub i64 %1008, %1016
  %1025 = sdiv exact i64 %1024, 12
  %1026 = icmp ult i64 %1025, 89478485
  br i1 %1026, label %1027, label %1032

1027:                                             ; preds = %1023
  %1028 = shl nsw i64 %1025, 1
  %1029 = icmp ult i64 %1028, %1019
  %1030 = select i1 %1029, i64 %1019, i64 %1028
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1051, label %1032

1032:                                             ; preds = %1027, %1023
  %1033 = phi i64 [ %1030, %1027 ], [ 178956970, %1023 ]
  %1034 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %102, align 8
  %1035 = mul i64 %1033, 12
  %1036 = add nuw nsw i64 %1035, 7
  %1037 = and i64 %1036, -8
  %1038 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1034, i64 0, i32 2
  %1039 = load i64, i64* %1038, align 8
  %1040 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1034, i64 0, i32 3
  %1041 = load i64, i64* %1040, align 8
  %1042 = sub i64 %1041, %1039
  %1043 = icmp ugt i64 %1037, %1042
  br i1 %1043, label %1044, label %1046, !prof !2

1044:                                             ; preds = %1032
  %1045 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1034, i64 %1037) #13
  br label %1048

1046:                                             ; preds = %1032
  %1047 = add i64 %1037, %1039
  store i64 %1047, i64* %1038, align 8
  br label %1048

1048:                                             ; preds = %1046, %1044
  %1049 = phi i64 [ %1045, %1044 ], [ %1039, %1046 ]
  %1050 = inttoptr i64 %1049 to %"class.v8::internal::compiler::ResumeJumpTarget"*
  br label %1051

1051:                                             ; preds = %1048, %1027
  %1052 = phi i64 [ %1033, %1048 ], [ 0, %1027 ]
  %1053 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %1050, %1048 ], [ null, %1027 ]
  %1054 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1053, i64 %1018
  %1055 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1053, i64 %1052
  %1056 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1055 to i64
  %1057 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1054 to i64*
  store i64 %1004, i64* %1057, align 4
  %1058 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1053, i64 %1018, i32 2
  store i32 %1000, i32* %1058, align 4
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1054, i64 1
  %1060 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1059 to i64
  %1061 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %103, align 8
  %1062 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %97, align 8
  %1063 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %1062, %1061
  br i1 %1063, label %1072, label %1064

1064:                                             ; preds = %1051, %1064
  %1065 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %1067, %1064 ], [ %1054, %1051 ]
  %1066 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %1068, %1064 ], [ %1062, %1051 ]
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1065, i64 -1
  %1068 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %1066, i64 -1
  %1069 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1067 to i8*
  %1070 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1068 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1069, i8* align 4 %1070, i64 12, i1 false) #13
  %1071 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %1068, %1061
  br i1 %1071, label %1072, label %1064

1072:                                             ; preds = %1064, %1051
  %1073 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %1054, %1051 ], [ %1067, %1064 ]
  %1074 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %1073 to i64
  store i64 %1074, i64* %100, align 8
  store i64 %1060, i64* %99, align 8
  store i64 %1056, i64* %101, align 8
  br label %1075

1075:                                             ; preds = %991, %893, %903, %884, %364, %1072, %1009, %797, %995
  %1076 = load i8, i8* %87, align 4, !range !3
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1088, label %1078

1078:                                             ; preds = %1075
  %1079 = load i64*, i64** %64, align 8
  %1080 = load i64, i64* %1079, align 8
  %1081 = add i64 %1080, 19
  %1082 = inttoptr i64 %1081 to i32*
  %1083 = load i32, i32* %1082, align 4
  %1084 = sdiv i32 %1083, 8
  %1085 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %66, align 8
  %1086 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap18InitializeLivenessEiiPNS0_4ZoneE(%"class.v8::internal::compiler::BytecodeLivenessMap"* %123, i32 %133, i32 %1084, %"class.v8::internal::Zone"* %1085) #13
  %1087 = load i64*, i64** %64, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_114UpdateLivenessENS0_11interpreter8BytecodeERKNS1_16BytecodeLivenessEPPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext %127, %"struct.v8::internal::compiler::BytecodeLiveness"* dereferenceable(16) %1086, %"class.v8::internal::compiler::BytecodeLivenessState"** nonnull %7, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull dereferenceable(48) %81, i64* %1087, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24) %123)
  br label %1088

1088:                                             ; preds = %1075, %1078
  %1089 = load i32, i32* %78, align 8
  %1090 = add nsw i32 %1089, -1
  store i32 %1090, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1091 = call zeroext i1 @_ZNK2v88internal11interpreter27BytecodeArrayRandomIterator7IsValidEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  br i1 %1091, label %124, label %1092

1092:                                             ; preds = %1088, %53
  %1093 = phi i32 [ -1, %53 ], [ %359, %1088 ]
  %1094 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  %1095 = load i8, i8* %1094, align 4, !range !3
  %1096 = icmp eq i8 %1095, 0
  br i1 %1096, label %1521, label %1097

1097:                                             ; preds = %1092
  %1098 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %1099 = load i32*, i32** %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %1101 = load i32*, i32** %1100, align 8
  %1102 = icmp eq i32* %1099, %1101
  br i1 %1102, label %1112, label %1103

1103:                                             ; preds = %1097
  %1104 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0
  %1105 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 3
  %1106 = bitcast i8** %1105 to i64*
  %1107 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 1
  %1108 = bitcast i8** %1107 to i64*
  %1109 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 5
  %1110 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %1111 = bitcast %"class.v8::internal::compiler::BytecodeLivenessState"** %7 to i64*
  br label %1114

1112:                                             ; preds = %1303, %1097
  %1113 = icmp eq i32 %1093, -1
  br i1 %1113, label %1502, label %1306

1114:                                             ; preds = %1103, %1303
  %1115 = phi i32* [ %1099, %1103 ], [ %1304, %1303 ]
  %1116 = load i32, i32* %1115, align 4
  store i32 %1116, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1117 = call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %1104) #13
  %1118 = load i64, i64* %1106, align 8
  %1119 = load i64, i64* %1108, align 8
  %1120 = sub i64 %1118, %1119
  %1121 = load i32, i32* %1109, align 4
  %1122 = trunc i64 %1120 to i32
  %1123 = sub i32 %1122, %1121
  %1124 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1110, i32 %1117) #13
  %1125 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1110, i32 %1123) #13
  %1126 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1125, i64 0, i32 1
  %1127 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1126, align 8
  %1128 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1124, i64 0, i32 0
  %1129 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1128, align 8
  %1130 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1127, i64 0, i32 1, i32 1
  %1131 = load i32, i32* %1130, align 4
  %1132 = icmp eq i32 %1131, 1
  br i1 %1132, label %1139, label %1133

1133:                                             ; preds = %1114
  %1134 = icmp sgt i32 %1131, 0
  br i1 %1134, label %1135, label %1303

1135:                                             ; preds = %1133
  %1136 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1127, i64 0, i32 1, i32 2, i32 0
  %1137 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1129, i64 0, i32 1, i32 2, i32 0
  %1138 = load i64*, i64** %1136, align 8
  br label %1148

1139:                                             ; preds = %1114
  %1140 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1127, i64 0, i32 1, i32 2
  %1141 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1140 to i64*
  %1142 = load i64, i64* %1141, align 8
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1129, i64 0, i32 1, i32 2
  %1144 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1143 to i64*
  %1145 = load i64, i64* %1144, align 8
  %1146 = or i64 %1145, %1142
  store i64 %1146, i64* %1141, align 8
  %1147 = icmp eq i64 %1146, %1142
  br i1 %1147, label %1303, label %1170

1148:                                             ; preds = %1148, %1135
  %1149 = phi i64* [ %1138, %1135 ], [ %1158, %1148 ]
  %1150 = phi i64 [ 0, %1135 ], [ %1163, %1148 ]
  %1151 = phi i8 [ 0, %1135 ], [ %1162, %1148 ]
  %1152 = getelementptr inbounds i64, i64* %1149, i64 %1150
  %1153 = load i64, i64* %1152, align 8
  %1154 = load i64*, i64** %1137, align 8
  %1155 = getelementptr inbounds i64, i64* %1154, i64 %1150
  %1156 = load i64, i64* %1155, align 8
  %1157 = or i64 %1156, %1153
  store i64 %1157, i64* %1152, align 8
  %1158 = load i64*, i64** %1136, align 8
  %1159 = getelementptr inbounds i64, i64* %1158, i64 %1150
  %1160 = load i64, i64* %1159, align 8
  %1161 = icmp eq i64 %1160, %1153
  %1162 = select i1 %1161, i8 %1151, i8 1
  %1163 = add nuw nsw i64 %1150, 1
  %1164 = load i32, i32* %1130, align 4
  %1165 = sext i32 %1164 to i64
  %1166 = icmp slt i64 %1163, %1165
  br i1 %1166, label %1148, label %1167

1167:                                             ; preds = %1148
  %1168 = and i8 %1162, 1
  %1169 = icmp eq i8 %1168, 0
  br i1 %1169, label %1303, label %1170

1170:                                             ; preds = %1139, %1167
  %1171 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1125, i64 0, i32 0
  %1172 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1171, align 8
  %1173 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1126, align 8
  %1174 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1173, i64 0, i32 1, i32 2, i32 0
  %1175 = load i64*, i64** %1174, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1173, i64 0, i32 1, i32 1
  %1177 = load i32, i32* %1176, align 4
  %1178 = ptrtoint i64* %1175 to i64
  %1179 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1172, i64 0, i32 1, i32 1
  %1180 = load i32, i32* %1179, align 4
  %1181 = icmp eq i32 %1180, 1
  br i1 %1181, label %1182, label %1185

1182:                                             ; preds = %1170
  %1183 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1172, i64 0, i32 1, i32 2
  %1184 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1183 to i64*
  store i64 %1178, i64* %1184, align 8
  br label %1264

1185:                                             ; preds = %1170
  %1186 = icmp eq i32 %1177, 1
  br i1 %1186, label %1197, label %1187

1187:                                             ; preds = %1185
  %1188 = icmp sgt i32 %1177, 0
  br i1 %1188, label %1189, label %1225

1189:                                             ; preds = %1187
  %1190 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1172, i64 0, i32 1, i32 2, i32 0
  %1191 = zext i32 %1177 to i64
  %1192 = add nsw i64 %1191, -1
  %1193 = and i64 %1191, 3
  %1194 = icmp ult i64 %1192, 3
  br i1 %1194, label %1210, label %1195

1195:                                             ; preds = %1189
  %1196 = sub nsw i64 %1191, %1193
  br label %1231

1197:                                             ; preds = %1185
  %1198 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1172, i64 0, i32 1, i32 2, i32 0
  %1199 = load i64*, i64** %1198, align 8
  store i64 %1178, i64* %1199, align 8
  %1200 = load i32, i32* %1179, align 4
  %1201 = icmp sgt i32 %1200, 1
  br i1 %1201, label %1202, label %1264

1202:                                             ; preds = %1197, %1202
  %1203 = phi i64 [ %1206, %1202 ], [ 1, %1197 ]
  %1204 = load i64*, i64** %1198, align 8
  %1205 = getelementptr inbounds i64, i64* %1204, i64 %1203
  store i64 0, i64* %1205, align 8
  %1206 = add nuw nsw i64 %1203, 1
  %1207 = load i32, i32* %1179, align 4
  %1208 = sext i32 %1207 to i64
  %1209 = icmp slt i64 %1206, %1208
  br i1 %1209, label %1202, label %1264

1210:                                             ; preds = %1231, %1189
  %1211 = phi i64 [ 0, %1189 ], [ %1253, %1231 ]
  %1212 = icmp eq i64 %1193, 0
  br i1 %1212, label %1223, label %1213

1213:                                             ; preds = %1210, %1213
  %1214 = phi i64 [ %1220, %1213 ], [ %1211, %1210 ]
  %1215 = phi i64 [ %1221, %1213 ], [ %1193, %1210 ]
  %1216 = getelementptr inbounds i64, i64* %1175, i64 %1214
  %1217 = load i64, i64* %1216, align 8
  %1218 = load i64*, i64** %1190, align 8
  %1219 = getelementptr inbounds i64, i64* %1218, i64 %1214
  store i64 %1217, i64* %1219, align 8
  %1220 = add nuw nsw i64 %1214, 1
  %1221 = add i64 %1215, -1
  %1222 = icmp eq i64 %1221, 0
  br i1 %1222, label %1223, label %1213, !llvm.loop !14

1223:                                             ; preds = %1213, %1210
  %1224 = load i32, i32* %1179, align 4
  br label %1225

1225:                                             ; preds = %1223, %1187
  %1226 = phi i32 [ %1224, %1223 ], [ %1180, %1187 ]
  %1227 = icmp sgt i32 %1226, %1177
  br i1 %1227, label %1228, label %1264

1228:                                             ; preds = %1225
  %1229 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1172, i64 0, i32 1, i32 2, i32 0
  %1230 = sext i32 %1177 to i64
  br label %1256

1231:                                             ; preds = %1231, %1195
  %1232 = phi i64 [ 0, %1195 ], [ %1253, %1231 ]
  %1233 = phi i64 [ %1196, %1195 ], [ %1254, %1231 ]
  %1234 = getelementptr inbounds i64, i64* %1175, i64 %1232
  %1235 = load i64, i64* %1234, align 8
  %1236 = load i64*, i64** %1190, align 8
  %1237 = getelementptr inbounds i64, i64* %1236, i64 %1232
  store i64 %1235, i64* %1237, align 8
  %1238 = or i64 %1232, 1
  %1239 = getelementptr inbounds i64, i64* %1175, i64 %1238
  %1240 = load i64, i64* %1239, align 8
  %1241 = load i64*, i64** %1190, align 8
  %1242 = getelementptr inbounds i64, i64* %1241, i64 %1238
  store i64 %1240, i64* %1242, align 8
  %1243 = or i64 %1232, 2
  %1244 = getelementptr inbounds i64, i64* %1175, i64 %1243
  %1245 = load i64, i64* %1244, align 8
  %1246 = load i64*, i64** %1190, align 8
  %1247 = getelementptr inbounds i64, i64* %1246, i64 %1243
  store i64 %1245, i64* %1247, align 8
  %1248 = or i64 %1232, 3
  %1249 = getelementptr inbounds i64, i64* %1175, i64 %1248
  %1250 = load i64, i64* %1249, align 8
  %1251 = load i64*, i64** %1190, align 8
  %1252 = getelementptr inbounds i64, i64* %1251, i64 %1248
  store i64 %1250, i64* %1252, align 8
  %1253 = add nuw nsw i64 %1232, 4
  %1254 = add i64 %1233, -4
  %1255 = icmp eq i64 %1254, 0
  br i1 %1255, label %1210, label %1231

1256:                                             ; preds = %1256, %1228
  %1257 = phi i64 [ %1230, %1228 ], [ %1260, %1256 ]
  %1258 = load i64*, i64** %1229, align 8
  %1259 = getelementptr inbounds i64, i64* %1258, i64 %1257
  store i64 0, i64* %1259, align 8
  %1260 = add nsw i64 %1257, 1
  %1261 = load i32, i32* %1179, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = icmp slt i64 %1260, %1262
  br i1 %1263, label %1256, label %1264

1264:                                             ; preds = %1256, %1202, %1182, %1197, %1225
  %1265 = bitcast %"struct.v8::internal::compiler::BytecodeLiveness"* %1125 to i64*
  %1266 = load i64, i64* %1265, align 8
  store i64 %1266, i64* %1111, align 8
  %1267 = load i32, i32* %78, align 8
  %1268 = add nsw i32 %1267, -1
  store i32 %1268, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1269 = load i64, i64* %1106, align 8
  %1270 = load i64, i64* %1108, align 8
  %1271 = sub i64 %1269, %1270
  %1272 = load i32, i32* %1109, align 4
  %1273 = trunc i64 %1271 to i32
  %1274 = sub i32 %1273, %1272
  %1275 = icmp sgt i32 %1274, %1117
  %1276 = inttoptr i64 %1269 to i8*
  %1277 = load i8, i8* %1276, align 1
  %1278 = inttoptr i64 %1266 to %"class.v8::internal::compiler::BytecodeLivenessState"*
  br i1 %1275, label %1279, label %1297

1279:                                             ; preds = %1264, %1279
  %1280 = phi i8 [ %1294, %1279 ], [ %1277, %1264 ]
  %1281 = phi i32 [ %1291, %1279 ], [ %1274, %1264 ]
  %1282 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1110, i32 %1281) #13
  %1283 = load i64*, i64** %64, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_114UpdateLivenessENS0_11interpreter8BytecodeERKNS1_16BytecodeLivenessEPPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext %1280, %"struct.v8::internal::compiler::BytecodeLiveness"* dereferenceable(16) %1282, %"class.v8::internal::compiler::BytecodeLivenessState"** nonnull %7, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull dereferenceable(48) %1104, i64* %1283, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24) %1110)
  %1284 = load i32, i32* %78, align 8
  %1285 = add nsw i32 %1284, -1
  store i32 %1285, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1286 = load i64, i64* %1106, align 8
  %1287 = load i64, i64* %1108, align 8
  %1288 = sub i64 %1286, %1287
  %1289 = load i32, i32* %1109, align 4
  %1290 = trunc i64 %1288 to i32
  %1291 = sub i32 %1290, %1289
  %1292 = icmp sgt i32 %1291, %1117
  %1293 = inttoptr i64 %1286 to i8*
  %1294 = load i8, i8* %1293, align 1
  br i1 %1292, label %1279, label %1295

1295:                                             ; preds = %1279
  %1296 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %7, align 8
  br label %1297

1297:                                             ; preds = %1295, %1264
  %1298 = phi %"class.v8::internal::compiler::BytecodeLivenessState"* [ %1278, %1264 ], [ %1296, %1295 ]
  %1299 = phi i8 [ %1277, %1264 ], [ %1294, %1295 ]
  %1300 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1124, i64 0, i32 1
  %1301 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1300, align 8
  %1302 = load i64*, i64** %64, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117UpdateOutLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateES6_RKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext %1299, %"class.v8::internal::compiler::BytecodeLivenessState"* %1301, %"class.v8::internal::compiler::BytecodeLivenessState"* %1298, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull dereferenceable(48) %1104, i64* %1302, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24) %1110)
  br label %1303

1303:                                             ; preds = %1139, %1167, %1133, %1297
  %1304 = getelementptr inbounds i32, i32* %1115, i64 1
  %1305 = icmp eq i32* %1304, %1101
  br i1 %1305, label %1112, label %1114

1306:                                             ; preds = %1112
  store i32 %1093, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1307 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0
  %1308 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 3
  %1309 = bitcast i8** %1308 to i64*
  %1310 = load i64, i64* %1309, align 8
  %1311 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 1
  %1312 = bitcast i8** %1311 to i64*
  %1313 = load i64, i64* %1312, align 8
  %1314 = sub i64 %1310, %1313
  %1315 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0, i32 5
  %1316 = load i32, i32* %1315, align 4
  %1317 = trunc i64 %1314 to i32
  %1318 = sub i32 %1317, %1316
  %1319 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %1320 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1319, i32 %1318) #13
  %1321 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1321) #13
  call void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull sret %11, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %1307) #13
  %1322 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1322) #13
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %12, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %11) #13
  %1323 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1323) #13
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %13, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %11) #13
  %1324 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %12, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %13) #13
  br i1 %1324, label %1325, label %1327

1325:                                             ; preds = %1306
  %1326 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1320, i64 0, i32 1
  br label %1331

1327:                                             ; preds = %1381, %1306
  %1328 = phi i8 [ 0, %1306 ], [ %1382, %1381 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1323) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1322) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1321) #13
  %1329 = and i8 %1328, 1
  %1330 = icmp eq i8 %1329, 0
  br i1 %1330, label %1502, label %1385

1331:                                             ; preds = %1325, %1381
  %1332 = phi i8 [ 0, %1325 ], [ %1382, %1381 ]
  %1333 = call i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %12) #13
  %1334 = lshr i64 %1333, 32
  %1335 = trunc i64 %1334 to i32
  %1336 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1326, align 8
  %1337 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1319, i32 %1335) #13
  %1338 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1337, i64 0, i32 0
  %1339 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1338, align 8
  %1340 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1336, i64 0, i32 1, i32 1
  %1341 = load i32, i32* %1340, align 4
  %1342 = icmp eq i32 %1341, 1
  br i1 %1342, label %1349, label %1343

1343:                                             ; preds = %1331
  %1344 = icmp sgt i32 %1341, 0
  br i1 %1344, label %1345, label %1381

1345:                                             ; preds = %1343
  %1346 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1336, i64 0, i32 1, i32 2, i32 0
  %1347 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1339, i64 0, i32 1, i32 2, i32 0
  %1348 = load i64*, i64** %1346, align 8
  br label %1358

1349:                                             ; preds = %1331
  %1350 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1336, i64 0, i32 1, i32 2
  %1351 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1350 to i64*
  %1352 = load i64, i64* %1351, align 8
  %1353 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1339, i64 0, i32 1, i32 2
  %1354 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1353 to i64*
  %1355 = load i64, i64* %1354, align 8
  %1356 = or i64 %1355, %1352
  store i64 %1356, i64* %1351, align 8
  %1357 = icmp eq i64 %1356, %1352
  br i1 %1357, label %1381, label %1380

1358:                                             ; preds = %1358, %1345
  %1359 = phi i64* [ %1348, %1345 ], [ %1368, %1358 ]
  %1360 = phi i64 [ 0, %1345 ], [ %1373, %1358 ]
  %1361 = phi i8 [ 0, %1345 ], [ %1372, %1358 ]
  %1362 = getelementptr inbounds i64, i64* %1359, i64 %1360
  %1363 = load i64, i64* %1362, align 8
  %1364 = load i64*, i64** %1347, align 8
  %1365 = getelementptr inbounds i64, i64* %1364, i64 %1360
  %1366 = load i64, i64* %1365, align 8
  %1367 = or i64 %1366, %1363
  store i64 %1367, i64* %1362, align 8
  %1368 = load i64*, i64** %1346, align 8
  %1369 = getelementptr inbounds i64, i64* %1368, i64 %1360
  %1370 = load i64, i64* %1369, align 8
  %1371 = icmp eq i64 %1370, %1363
  %1372 = select i1 %1371, i8 %1361, i8 1
  %1373 = add nuw nsw i64 %1360, 1
  %1374 = load i32, i32* %1340, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = icmp slt i64 %1373, %1375
  br i1 %1376, label %1358, label %1377

1377:                                             ; preds = %1358
  %1378 = and i8 %1372, 1
  %1379 = icmp eq i8 %1378, 0
  br i1 %1379, label %1381, label %1380

1380:                                             ; preds = %1349, %1377
  br label %1381

1381:                                             ; preds = %1349, %1377, %1343, %1380
  %1382 = phi i8 [ 1, %1380 ], [ %1332, %1377 ], [ %1332, %1349 ], [ %1332, %1343 ]
  %1383 = call dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %12) #13
  %1384 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %12, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %13) #13
  br i1 %1384, label %1331, label %1327

1385:                                             ; preds = %1327
  %1386 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1320, i64 0, i32 0
  %1387 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1386, align 8
  %1388 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1320, i64 0, i32 1
  %1389 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1388, align 8
  %1390 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1389, i64 0, i32 1, i32 2, i32 0
  %1391 = load i64*, i64** %1390, align 8
  %1392 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1389, i64 0, i32 1, i32 1
  %1393 = load i32, i32* %1392, align 4
  %1394 = ptrtoint i64* %1391 to i64
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1387, i64 0, i32 1, i32 1
  %1396 = load i32, i32* %1395, align 4
  %1397 = icmp eq i32 %1396, 1
  br i1 %1397, label %1398, label %1401

1398:                                             ; preds = %1385
  %1399 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1387, i64 0, i32 1, i32 2
  %1400 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1399 to i64*
  store i64 %1394, i64* %1400, align 8
  br label %1480

1401:                                             ; preds = %1385
  %1402 = icmp eq i32 %1393, 1
  br i1 %1402, label %1413, label %1403

1403:                                             ; preds = %1401
  %1404 = icmp sgt i32 %1393, 0
  br i1 %1404, label %1405, label %1441

1405:                                             ; preds = %1403
  %1406 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1387, i64 0, i32 1, i32 2, i32 0
  %1407 = zext i32 %1393 to i64
  %1408 = add nsw i64 %1407, -1
  %1409 = and i64 %1407, 3
  %1410 = icmp ult i64 %1408, 3
  br i1 %1410, label %1426, label %1411

1411:                                             ; preds = %1405
  %1412 = sub nsw i64 %1407, %1409
  br label %1447

1413:                                             ; preds = %1401
  %1414 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1387, i64 0, i32 1, i32 2, i32 0
  %1415 = load i64*, i64** %1414, align 8
  store i64 %1394, i64* %1415, align 8
  %1416 = load i32, i32* %1395, align 4
  %1417 = icmp sgt i32 %1416, 1
  br i1 %1417, label %1418, label %1480

1418:                                             ; preds = %1413, %1418
  %1419 = phi i64 [ %1422, %1418 ], [ 1, %1413 ]
  %1420 = load i64*, i64** %1414, align 8
  %1421 = getelementptr inbounds i64, i64* %1420, i64 %1419
  store i64 0, i64* %1421, align 8
  %1422 = add nuw nsw i64 %1419, 1
  %1423 = load i32, i32* %1395, align 4
  %1424 = sext i32 %1423 to i64
  %1425 = icmp slt i64 %1422, %1424
  br i1 %1425, label %1418, label %1480

1426:                                             ; preds = %1447, %1405
  %1427 = phi i64 [ 0, %1405 ], [ %1469, %1447 ]
  %1428 = icmp eq i64 %1409, 0
  br i1 %1428, label %1439, label %1429

1429:                                             ; preds = %1426, %1429
  %1430 = phi i64 [ %1436, %1429 ], [ %1427, %1426 ]
  %1431 = phi i64 [ %1437, %1429 ], [ %1409, %1426 ]
  %1432 = getelementptr inbounds i64, i64* %1391, i64 %1430
  %1433 = load i64, i64* %1432, align 8
  %1434 = load i64*, i64** %1406, align 8
  %1435 = getelementptr inbounds i64, i64* %1434, i64 %1430
  store i64 %1433, i64* %1435, align 8
  %1436 = add nuw nsw i64 %1430, 1
  %1437 = add i64 %1431, -1
  %1438 = icmp eq i64 %1437, 0
  br i1 %1438, label %1439, label %1429, !llvm.loop !15

1439:                                             ; preds = %1429, %1426
  %1440 = load i32, i32* %1395, align 4
  br label %1441

1441:                                             ; preds = %1439, %1403
  %1442 = phi i32 [ %1440, %1439 ], [ %1396, %1403 ]
  %1443 = icmp sgt i32 %1442, %1393
  br i1 %1443, label %1444, label %1480

1444:                                             ; preds = %1441
  %1445 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1387, i64 0, i32 1, i32 2, i32 0
  %1446 = sext i32 %1393 to i64
  br label %1472

1447:                                             ; preds = %1447, %1411
  %1448 = phi i64 [ 0, %1411 ], [ %1469, %1447 ]
  %1449 = phi i64 [ %1412, %1411 ], [ %1470, %1447 ]
  %1450 = getelementptr inbounds i64, i64* %1391, i64 %1448
  %1451 = load i64, i64* %1450, align 8
  %1452 = load i64*, i64** %1406, align 8
  %1453 = getelementptr inbounds i64, i64* %1452, i64 %1448
  store i64 %1451, i64* %1453, align 8
  %1454 = or i64 %1448, 1
  %1455 = getelementptr inbounds i64, i64* %1391, i64 %1454
  %1456 = load i64, i64* %1455, align 8
  %1457 = load i64*, i64** %1406, align 8
  %1458 = getelementptr inbounds i64, i64* %1457, i64 %1454
  store i64 %1456, i64* %1458, align 8
  %1459 = or i64 %1448, 2
  %1460 = getelementptr inbounds i64, i64* %1391, i64 %1459
  %1461 = load i64, i64* %1460, align 8
  %1462 = load i64*, i64** %1406, align 8
  %1463 = getelementptr inbounds i64, i64* %1462, i64 %1459
  store i64 %1461, i64* %1463, align 8
  %1464 = or i64 %1448, 3
  %1465 = getelementptr inbounds i64, i64* %1391, i64 %1464
  %1466 = load i64, i64* %1465, align 8
  %1467 = load i64*, i64** %1406, align 8
  %1468 = getelementptr inbounds i64, i64* %1467, i64 %1464
  store i64 %1466, i64* %1468, align 8
  %1469 = add nuw nsw i64 %1448, 4
  %1470 = add i64 %1449, -4
  %1471 = icmp eq i64 %1470, 0
  br i1 %1471, label %1426, label %1447

1472:                                             ; preds = %1472, %1444
  %1473 = phi i64 [ %1446, %1444 ], [ %1476, %1472 ]
  %1474 = load i64*, i64** %1445, align 8
  %1475 = getelementptr inbounds i64, i64* %1474, i64 %1473
  store i64 0, i64* %1475, align 8
  %1476 = add nsw i64 %1473, 1
  %1477 = load i32, i32* %1395, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = icmp slt i64 %1476, %1478
  br i1 %1479, label %1472, label %1480

1480:                                             ; preds = %1472, %1418, %1398, %1413, %1441
  %1481 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %1386, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_116UpdateInLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorE(i8 zeroext -83, %"class.v8::internal::compiler::BytecodeLivenessState"* %1481, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull dereferenceable(48) %1307)
  %1482 = bitcast %"struct.v8::internal::compiler::BytecodeLiveness"* %1320 to i64*
  %1483 = load i64, i64* %1482, align 8
  %1484 = bitcast %"class.v8::internal::compiler::BytecodeLivenessState"** %7 to i64*
  store i64 %1483, i64* %1484, align 8
  %1485 = load i32, i32* %78, align 8
  %1486 = add nsw i32 %1485, -1
  store i32 %1486, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1487 = call zeroext i1 @_ZNK2v88internal11interpreter27BytecodeArrayRandomIterator7IsValidEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  br i1 %1487, label %1488, label %1502

1488:                                             ; preds = %1480, %1488
  %1489 = load i8*, i8** %1308, align 8
  %1490 = load i8, i8* %1489, align 1
  %1491 = ptrtoint i8* %1489 to i64
  %1492 = load i64, i64* %1312, align 8
  %1493 = sub i64 %1491, %1492
  %1494 = load i32, i32* %1315, align 4
  %1495 = trunc i64 %1493 to i32
  %1496 = sub i32 %1495, %1494
  %1497 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %1319, i32 %1496) #13
  %1498 = load i64*, i64** %64, align 8
  call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_114UpdateLivenessENS0_11interpreter8BytecodeERKNS1_16BytecodeLivenessEPPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext %1490, %"struct.v8::internal::compiler::BytecodeLiveness"* dereferenceable(16) %1497, %"class.v8::internal::compiler::BytecodeLivenessState"** nonnull %7, %"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull dereferenceable(48) %1307, i64* %1498, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24) %1319)
  %1499 = load i32, i32* %78, align 8
  %1500 = add nsw i32 %1499, -1
  store i32 %1500, i32* %78, align 8
  call void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  %1501 = call zeroext i1 @_ZNK2v88internal11interpreter27BytecodeArrayRandomIterator7IsValidEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* nonnull %8) #13
  br i1 %1501, label %1488, label %1502

1502:                                             ; preds = %1488, %1480, %1327, %1112
  %1503 = load i8, i8* @_ZN2v88internal31FLAG_trace_environment_livenessE, align 1, !range !3
  %1504 = icmp eq i8 %1503, 0
  br i1 %1504, label %1521, label %1505

1505:                                             ; preds = %1502
  %1506 = bitcast %"class.v8::internal::StdoutStream"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %1506) #13
  %1507 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1507, align 8
  %1508 = bitcast %"class.v8::internal::StdoutStream"* %14 to %"class.v8::internal::OFStream"*
  %1509 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %1508, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %1509) #13
  %1510 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %1510, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %1507, align 8
  %1511 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #13
  %1512 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %1511, %"class.v8::base::RecursiveMutex"** %1512, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %1511) #13
  %1513 = bitcast %"class.v8::internal::StdoutStream"* %14 to %"class.std::__1::basic_ostream"*
  %1514 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNK2v88internal8compiler16BytecodeAnalysis15PrintLivenessToERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::BytecodeAnalysis"* %0, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %1513)
  %1515 = bitcast %"class.v8::internal::StdoutStream"* %14 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %1515, align 8
  %1516 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 2
  %1517 = bitcast %"class.std::__1::basic_ios.base"* %1516 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %1517, align 8
  %1518 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %1512, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %1518) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %1515, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %1517, align 8
  %1519 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %14, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %1519) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %1513, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %1520 = bitcast %"class.std::__1::basic_ios.base"* %1516 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %1520) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %1506) #13
  br label %1521

1521:                                             ; preds = %1505, %1502, %1092
  %1522 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %1523 = load i32*, i32** %1522, align 8
  %1524 = icmp eq i32* %1523, null
  br i1 %1524, label %1527, label %1525

1525:                                             ; preds = %1521
  %1526 = ptrtoint i32* %1523 to i64
  store i64 %1526, i64* %70, align 8
  br label %1527

1527:                                             ; preds = %1521, %1525
  %1528 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayRandomIterator", %"class.v8::internal::interpreter::BytecodeArrayRandomIterator"* %8, i64 0, i32 0
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD2Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %1528) #13
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %63) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  ret void
}

declare void @_ZN2v88internal11interpreter27BytecodeArrayRandomIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEPNS0_4ZoneE(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"*, i64*, %"class.v8::internal::Zone"*) unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal11interpreter27BytecodeArrayRandomIterator7IsValidEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator21current_bytecode_sizeEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16BytecodeAnalysis8PushLoopEii(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Zone"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.std::__1::pair.1180", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, -1
  %12 = add i64 %11, %10
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %13, align 8
  %15 = lshr i64 %12, 8
  %16 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %14, i64 %15
  %17 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %16, align 8
  %18 = and i64 %12, 255
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %17, i64 %18, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %50, %26
  %29 = phi %"class.std::__1::__tree_node"* [ %53, %50 ], [ %24, %26 ]
  %30 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %27, %26 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, %2
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %56

40:                                               ; preds = %28
  %41 = icmp slt i32 %32, %2
  br i1 %41, label %42, label %48

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %56

50:                                               ; preds = %42, %34
  %51 = phi %"class.std::__1::__tree_node_base"* [ %36, %34 ], [ %44, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %35, %34 ], [ %43, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"* %51 to %"class.std::__1::__tree_node"*
  br label %28

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  br label %56

56:                                               ; preds = %54, %48, %46, %38
  %57 = phi %"class.std::__1::__tree_end_node"* [ %22, %54 ], [ %39, %38 ], [ %47, %46 ], [ %49, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %55, %54 ], [ %35, %38 ], [ %43, %46 ], [ %30, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"** %58 to %"class.std::__1::__tree_node"**
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %62, label %103

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %64 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %63, align 8, !noalias !16
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 2
  %66 = load i64, i64* %65, align 8, !noalias !16
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %64, i64 0, i32 3
  %68 = load i64, i64* %67, align 8, !noalias !16
  %69 = sub i64 %68, %66
  %70 = icmp ult i64 %69, 40
  br i1 %70, label %71, label %73, !prof !2

71:                                               ; preds = %62
  %72 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %64, i64 40) #13, !noalias !16
  br label %75

73:                                               ; preds = %62
  %74 = add i64 %66, 40
  store i64 %74, i64* %65, align 8, !noalias !16
  br label %75

75:                                               ; preds = %73, %71
  %76 = phi i64 [ %72, %71 ], [ %66, %73 ]
  %77 = inttoptr i64 %76 to %"class.std::__1::__tree_node"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 1, i32 0
  %79 = bitcast %"struct.std::__1::pair.1175"* %78 to i64*
  %80 = zext i32 %1 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %2 to i64
  %83 = or i64 %81, %82
  store i64 %83, i64* %79, align 4, !noalias !16
  %84 = inttoptr i64 %76 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %84, i64 0, i32 2
  %86 = inttoptr i64 %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"** %58, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree.36", %"class.std::__1::__tree.36"* %21, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %75
  %93 = ptrtoint %"class.std::__1::__tree_node_base"* %90 to i64
  %94 = bitcast %"class.std::__1::__tree.36"* %21 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  br label %96

96:                                               ; preds = %92, %75
  %97 = phi %"class.std::__1::__tree_node_base"* [ %84, %75 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %97) #13
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  br label %103

103:                                              ; preds = %56, %96
  %104 = bitcast %"struct.std::__1::pair.1180"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %104) #13
  %105 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, 23
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = ashr i32 %110, 3
  %112 = add i64 %107, 19
  %113 = inttoptr i64 %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = sdiv i32 %114, 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 1
  %117 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %116, align 8
  %118 = bitcast %"class.v8::internal::Zone"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #13
  store %"class.v8::internal::Zone"* %117, %"class.v8::internal::Zone"** %4, align 8
  %119 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #13
  %120 = add nsw i32 %115, %111
  store i32 %120, i32* %5, align 4
  %121 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %117, i32* nonnull dereferenceable(4) %5, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #13
  %122 = ptrtoint %"class.v8::internal::Zone"* %117 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 0
  store i32 %1, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 0
  store i32 %20, i32* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 1, i32 0
  store i32 %111, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 1, i32 1
  store %"class.v8::internal::BitVector"* %121, %"class.v8::internal::BitVector"** %126, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 2
  %128 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2, i32 1
  %129 = bitcast %"struct.std::__1::__compressed_pair_elem.20"* %128 to i64*
  store i64 %122, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0
  %131 = bitcast %"class.v8::internal::ZoneVector"* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false)
  %132 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8LoopInfoEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.44"* %130, i32* nonnull dereferenceable(4) %123, %"struct.std::__1::pair.1180"* nonnull dereferenceable(64) %6) #13
  %133 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %132, 0
  %134 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %135 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %134, align 8
  %136 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %103
  %138 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %139 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %138 to i64*
  %140 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %135 to i64
  store i64 %140, i64* %139, align 8
  br label %141

141:                                              ; preds = %137, %103
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %104) #13
  %142 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 5
  %143 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %144 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %13 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = icmp eq i64 %148, 0
  %150 = shl i64 %148, 5
  %151 = add i64 %150, -1
  %152 = select i1 %149, i64 0, i64 %151
  %153 = load i64, i64* %9, align 8
  %154 = load i64, i64* %7, align 8
  %155 = add i64 %154, %153
  %156 = icmp eq i64 %152, %155
  %157 = inttoptr i64 %147 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %158 = inttoptr i64 %145 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br i1 %156, label %159, label %166

159:                                              ; preds = %141
  %160 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %160) #13
  %161 = load i64, i64* %7, align 8
  %162 = load i64, i64* %9, align 8
  %163 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %13, align 8
  %164 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %143, align 8
  %165 = add i64 %162, %161
  br label %166

166:                                              ; preds = %159, %141
  %167 = phi i64 [ %165, %159 ], [ %155, %141 ]
  %168 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %164, %159 ], [ %158, %141 ]
  %169 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %163, %159 ], [ %157, %141 ]
  %170 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %168, %169
  br i1 %170, label %178, label %171

171:                                              ; preds = %166
  %172 = lshr i64 %167, 8
  %173 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %169, i64 %172
  %174 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %173, align 8
  %175 = and i64 %167, 255
  %176 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry", %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %174, i64 %175
  %177 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %176 to i8*
  br label %178

178:                                              ; preds = %166, %171
  %179 = phi i8* [ %177, %171 ], [ null, %166 ]
  %180 = bitcast i8* %179 to i32*
  store i32 %1, i32* %180, align 8
  %181 = getelementptr inbounds i8, i8* %179, i64 8
  %182 = bitcast i8* %181 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %142, %"class.std::__1::__tree_end_node"** %182, align 8
  %183 = load i64, i64* %7, align 8
  %184 = add i64 %183, 1
  store i64 %184, i64* %7, align 8
  ret void
}

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator27GetUnsignedImmediateOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler8LoopInfo15AddResumeTargetERKNS1_16ResumeJumpTargetE(%"struct.v8::internal::compiler::LoopInfo"*, %"class.v8::internal::compiler::ResumeJumpTarget"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %5, %7
  %9 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %5 to i8*
  %12 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false) #13
  %13 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %5, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %4 to i64*
  store i64 %14, i64* %15, align 8
  br label %82

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %5 to i64
  %18 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %4 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = sdiv exact i64 %21, 12
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 178956970
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #14
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = sdiv exact i64 %29, 12
  %31 = icmp ult i64 %30, 89478485
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = shl nsw i64 %30, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 178956970, %27 ]
  %39 = getelementptr inbounds %"struct.v8::internal::compiler::LoopInfo", %"struct.v8::internal::compiler::LoopInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = mul i64 %38, 12
  %42 = add nuw nsw i64 %41, 7
  %43 = and i64 %42, -8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ugt i64 %43, %48
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %37
  %51 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %43) #13
  br label %54

52:                                               ; preds = %37
  %53 = add i64 %43, %45
  store i64 %53, i64* %44, align 8
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %51, %50 ], [ %45, %52 ]
  %56 = inttoptr i64 %55 to %"class.v8::internal::compiler::ResumeJumpTarget"*
  br label %57

57:                                               ; preds = %54, %32
  %58 = phi i64 [ %38, %54 ], [ 0, %32 ]
  %59 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %56, %54 ], [ null, %32 ]
  %60 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %59, i64 %22
  %61 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %59, i64 %58
  %62 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %61 to i64
  %63 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %60 to i8*
  %64 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 12, i1 false) #13
  %65 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %60, i64 1
  %66 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %68 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %67, align 8
  %69 = load %"class.v8::internal::compiler::ResumeJumpTarget"*, %"class.v8::internal::compiler::ResumeJumpTarget"** %4, align 8
  %70 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %69, %68
  br i1 %70, label %79, label %71

71:                                               ; preds = %57, %71
  %72 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %74, %71 ], [ %60, %57 ]
  %73 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %75, %71 ], [ %69, %57 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %72, i64 -1
  %75 = getelementptr inbounds %"class.v8::internal::compiler::ResumeJumpTarget", %"class.v8::internal::compiler::ResumeJumpTarget"* %73, i64 -1
  %76 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %74 to i8*
  %77 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false) #13
  %78 = icmp eq %"class.v8::internal::compiler::ResumeJumpTarget"* %75, %68
  br i1 %78, label %79, label %71

79:                                               ; preds = %71, %57
  %80 = phi %"class.v8::internal::compiler::ResumeJumpTarget"* [ %60, %57 ], [ %74, %71 ]
  %81 = ptrtoint %"class.v8::internal::compiler::ResumeJumpTarget"* %80 to i64
  store i64 %81, i64* %19, align 8
  store i64 %66, i64* %18, align 8
  store i64 %62, i64* %28, align 8
  br label %82

82:                                               ; preds = %10, %79
  ret void
}

declare dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap18InitializeLivenessEiiPNS0_4ZoneE(%"class.v8::internal::compiler::BytecodeLivenessMap"*, i32, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_114UpdateLivenessENS0_11interpreter8BytecodeERKNS1_16BytecodeLivenessEPPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext, %"struct.v8::internal::compiler::BytecodeLiveness"* nocapture readonly dereferenceable(16), %"class.v8::internal::compiler::BytecodeLivenessState"** nocapture, %"class.v8::internal::interpreter::BytecodeArrayIterator"* dereferenceable(48), i64*, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24)) unnamed_addr #0 {
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %7, align 8
  %9 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %2, align 8
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117UpdateOutLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateES6_RKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext %0, %"class.v8::internal::compiler::BytecodeLivenessState"* %8, %"class.v8::internal::compiler::BytecodeLivenessState"* %9, %"class.v8::internal::interpreter::BytecodeArrayIterator"* dereferenceable(48) %3, i64* %4, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24) %5)
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %10, align 8
  %12 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %12, i64 0, i32 1, i32 2, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %12, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = ptrtoint i64* %14 to i64
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %11, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %11, i64 0, i32 1, i32 2
  %23 = bitcast %"union.v8::internal::BitVector::DataStorage"* %22 to i64*
  store i64 %17, i64* %23, align 8
  br label %103

24:                                               ; preds = %6
  %25 = icmp eq i32 %16, 1
  br i1 %25, label %36, label %26

26:                                               ; preds = %24
  %27 = icmp sgt i32 %16, 0
  br i1 %27, label %28, label %64

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %11, i64 0, i32 1, i32 2, i32 0
  %30 = zext i32 %16 to i64
  %31 = add nsw i64 %30, -1
  %32 = and i64 %30, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %49, label %34

34:                                               ; preds = %28
  %35 = sub nsw i64 %30, %32
  br label %70

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %11, i64 0, i32 1, i32 2, i32 0
  %38 = load i64*, i64** %37, align 8
  store i64 %17, i64* %38, align 8
  %39 = load i32, i32* %18, align 4
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %103

41:                                               ; preds = %36, %41
  %42 = phi i64 [ %45, %41 ], [ 1, %36 ]
  %43 = load i64*, i64** %37, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 %42
  store i64 0, i64* %44, align 8
  %45 = add nuw nsw i64 %42, 1
  %46 = load i32, i32* %18, align 4
  %47 = sext i32 %46 to i64
  %48 = icmp slt i64 %45, %47
  br i1 %48, label %41, label %103

49:                                               ; preds = %70, %28
  %50 = phi i64 [ 0, %28 ], [ %92, %70 ]
  %51 = icmp eq i64 %32, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %49, %52
  %53 = phi i64 [ %59, %52 ], [ %50, %49 ]
  %54 = phi i64 [ %60, %52 ], [ %32, %49 ]
  %55 = getelementptr inbounds i64, i64* %14, i64 %53
  %56 = load i64, i64* %55, align 8
  %57 = load i64*, i64** %29, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 %53
  store i64 %56, i64* %58, align 8
  %59 = add nuw nsw i64 %53, 1
  %60 = add i64 %54, -1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %52, !llvm.loop !19

62:                                               ; preds = %52, %49
  %63 = load i32, i32* %18, align 4
  br label %64

64:                                               ; preds = %62, %26
  %65 = phi i32 [ %63, %62 ], [ %19, %26 ]
  %66 = icmp sgt i32 %65, %16
  br i1 %66, label %67, label %103

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %11, i64 0, i32 1, i32 2, i32 0
  %69 = sext i32 %16 to i64
  br label %95

70:                                               ; preds = %70, %34
  %71 = phi i64 [ 0, %34 ], [ %92, %70 ]
  %72 = phi i64 [ %35, %34 ], [ %93, %70 ]
  %73 = getelementptr inbounds i64, i64* %14, i64 %71
  %74 = load i64, i64* %73, align 8
  %75 = load i64*, i64** %29, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 %71
  store i64 %74, i64* %76, align 8
  %77 = or i64 %71, 1
  %78 = getelementptr inbounds i64, i64* %14, i64 %77
  %79 = load i64, i64* %78, align 8
  %80 = load i64*, i64** %29, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 %77
  store i64 %79, i64* %81, align 8
  %82 = or i64 %71, 2
  %83 = getelementptr inbounds i64, i64* %14, i64 %82
  %84 = load i64, i64* %83, align 8
  %85 = load i64*, i64** %29, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 %82
  store i64 %84, i64* %86, align 8
  %87 = or i64 %71, 3
  %88 = getelementptr inbounds i64, i64* %14, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = load i64*, i64** %29, align 8
  %91 = getelementptr inbounds i64, i64* %90, i64 %87
  store i64 %89, i64* %91, align 8
  %92 = add nuw nsw i64 %71, 4
  %93 = add i64 %72, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %49, label %70

95:                                               ; preds = %95, %67
  %96 = phi i64 [ %69, %67 ], [ %99, %95 ]
  %97 = load i64*, i64** %68, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 %96
  store i64 0, i64* %98, align 8
  %99 = add nsw i64 %96, 1
  %100 = load i32, i32* %18, align 4
  %101 = sext i32 %100 to i64
  %102 = icmp slt i64 %99, %101
  br i1 %102, label %95, label %103

103:                                              ; preds = %95, %41, %21, %36, %64
  %104 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %10, align 8
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_116UpdateInLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorE(i8 zeroext %0, %"class.v8::internal::compiler::BytecodeLivenessState"* %104, %"class.v8::internal::interpreter::BytecodeArrayIterator"* dereferenceable(48) %3)
  %105 = bitcast %"struct.v8::internal::compiler::BytecodeLiveness"* %1 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.v8::internal::compiler::BytecodeLivenessState"** %2 to i64*
  store i64 %106, i64* %107, align 8
  ret void
}

declare dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZN2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_117UpdateOutLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateES6_RKNS3_21BytecodeArrayIteratorENS0_6HandleINS0_13BytecodeArrayEEERKNS1_19BytecodeLivenessMapE(i8 zeroext, %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"* readonly, %"class.v8::internal::interpreter::BytecodeArrayIterator"* dereferenceable(48), i64*, %"class.v8::internal::compiler::BytecodeLivenessMap"* dereferenceable(24)) unnamed_addr #0 {
  %7 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets", align 8
  %8 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %9 = alloca %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.v8::internal::HandlerTable", align 8
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 3
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %14, %17
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = trunc i64 %18 to i32
  %22 = sub i32 %21, %20
  %23 = or i8 %0, 1
  %24 = icmp eq i8 %23, -81
  br i1 %24, label %25, label %55

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = icmp sgt i32 %27, 0
  br i1 %30, label %31, label %304

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %2, i64 0, i32 1, i32 2, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  br label %42

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %2, i64 0, i32 1, i32 2
  %36 = bitcast %"union.v8::internal::BitVector::DataStorage"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %39 = bitcast %"union.v8::internal::BitVector::DataStorage"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = or i64 %40, %37
  store i64 %41, i64* %39, align 8
  br label %304

42:                                               ; preds = %42, %31
  %43 = phi i64 [ 0, %31 ], [ %51, %42 ]
  %44 = load i64*, i64** %32, align 8
  %45 = getelementptr inbounds i64, i64* %44, i64 %43
  %46 = load i64, i64* %45, align 8
  %47 = load i64*, i64** %33, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 %43
  %49 = load i64, i64* %48, align 8
  %50 = or i64 %49, %46
  store i64 %50, i64* %48, align 8
  %51 = add nuw nsw i64 %43, 1
  %52 = load i32, i32* %26, align 4
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %42, label %304

55:                                               ; preds = %6
  %56 = add i8 %0, 119
  %57 = icmp ult i8 %56, 22
  br i1 %57, label %58, label %92

58:                                               ; preds = %55
  %59 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator19GetJumpTargetOffsetEv(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %3) #13
  %60 = tail call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %5, i32 %59) #13
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %60, i64 0, i32 0
  %62 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %71, label %66

66:                                               ; preds = %58
  %67 = icmp sgt i32 %64, 0
  br i1 %67, label %68, label %139

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %62, i64 0, i32 1, i32 2, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  br label %79

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %62, i64 0, i32 1, i32 2
  %73 = bitcast %"union.v8::internal::BitVector::DataStorage"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %76 = bitcast %"union.v8::internal::BitVector::DataStorage"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = or i64 %77, %74
  store i64 %78, i64* %76, align 8
  br label %139

79:                                               ; preds = %79, %68
  %80 = phi i64 [ 0, %68 ], [ %88, %79 ]
  %81 = load i64*, i64** %69, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 %80
  %83 = load i64, i64* %82, align 8
  %84 = load i64*, i64** %70, align 8
  %85 = getelementptr inbounds i64, i64* %84, i64 %80
  %86 = load i64, i64* %85, align 8
  %87 = or i64 %86, %83
  store i64 %87, i64* %85, align 8
  %88 = add nuw nsw i64 %80, 1
  %89 = load i32, i32* %63, align 4
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %88, %90
  br i1 %91, label %79, label %139

92:                                               ; preds = %55
  switch i8 %0, label %139 [
    i8 -83, label %93
    i8 -97, label %93
  ]

93:                                               ; preds = %92, %92
  %94 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #13
  call void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull sret %7, %"class.v8::internal::interpreter::BytecodeArrayIterator"* %3) #13
  %95 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #13
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %7) #13
  %96 = bitcast %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #13
  call void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull sret %9, %"class.v8::internal::interpreter::JumpTableTargetOffsets"* nonnull %7) #13
  %97 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %9) #13
  br i1 %97, label %98, label %103

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %102 = bitcast %"union.v8::internal::BitVector::DataStorage"* %101 to i64*
  br label %104

103:                                              ; preds = %136, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #13
  br label %139

104:                                              ; preds = %98, %136
  %105 = call i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8) #13
  %106 = lshr i64 %105, 32
  %107 = trunc i64 %106 to i32
  %108 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %5, i32 %107) #13
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %108, i64 0, i32 0
  %110 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %109, align 8
  %111 = load i32, i32* %99, align 4
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %117, label %113

113:                                              ; preds = %104
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %136

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %110, i64 0, i32 1, i32 2, i32 0
  br label %123

117:                                              ; preds = %104
  %118 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %110, i64 0, i32 1, i32 2
  %119 = bitcast %"union.v8::internal::BitVector::DataStorage"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = load i64, i64* %102, align 8
  %122 = or i64 %121, %120
  store i64 %122, i64* %102, align 8
  br label %136

123:                                              ; preds = %123, %115
  %124 = phi i64 [ 0, %115 ], [ %132, %123 ]
  %125 = load i64*, i64** %116, align 8
  %126 = getelementptr inbounds i64, i64* %125, i64 %124
  %127 = load i64, i64* %126, align 8
  %128 = load i64*, i64** %100, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 %124
  %130 = load i64, i64* %129, align 8
  %131 = or i64 %130, %127
  store i64 %131, i64* %129, align 8
  %132 = add nuw nsw i64 %124, 1
  %133 = load i32, i32* %99, align 4
  %134 = sext i32 %133 to i64
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %123, label %136

136:                                              ; preds = %123, %113, %117
  %137 = call dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8) #13
  %138 = call zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull %8, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* nonnull dereferenceable(32) %9) #13
  br i1 %138, label %104, label %103

139:                                              ; preds = %79, %92, %71, %66, %103
  %140 = icmp eq %"class.v8::internal::compiler::BytecodeLivenessState"* %2, null
  br i1 %140, label %174, label %141

141:                                              ; preds = %139
  %142 = add i8 %0, 120
  %143 = icmp ult i8 %142, 3
  br i1 %143, label %177, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = icmp sgt i32 %146, 0
  br i1 %149, label %150, label %174

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %2, i64 0, i32 1, i32 2, i32 0
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  br label %161

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %2, i64 0, i32 1, i32 2
  %155 = bitcast %"union.v8::internal::BitVector::DataStorage"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %158 = bitcast %"union.v8::internal::BitVector::DataStorage"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = or i64 %159, %156
  store i64 %160, i64* %158, align 8
  br label %174

161:                                              ; preds = %161, %150
  %162 = phi i64 [ 0, %150 ], [ %170, %161 ]
  %163 = load i64*, i64** %151, align 8
  %164 = getelementptr inbounds i64, i64* %163, i64 %162
  %165 = load i64, i64* %164, align 8
  %166 = load i64*, i64** %152, align 8
  %167 = getelementptr inbounds i64, i64* %166, i64 %162
  %168 = load i64, i64* %167, align 8
  %169 = or i64 %168, %165
  store i64 %169, i64* %167, align 8
  %170 = add nuw nsw i64 %162, 1
  %171 = load i32, i32* %145, align 4
  %172 = sext i32 %171 to i64
  %173 = icmp slt i64 %170, %172
  br i1 %173, label %161, label %174

174:                                              ; preds = %161, %153, %148, %139
  %175 = add i8 %0, -11
  %176 = icmp ult i8 %175, 13
  br i1 %176, label %304, label %177

177:                                              ; preds = %141, %174
  %178 = add i8 %0, 76
  %179 = icmp ult i8 %178, 16
  %180 = and i8 %0, -4
  %181 = icmp eq i8 %180, 24
  %182 = or i1 %179, %181
  %183 = add i8 %0, -28
  %184 = icmp ult i8 %183, 5
  %185 = or i1 %184, %182
  br i1 %185, label %304, label %186

186:                                              ; preds = %177
  %187 = add i8 %0, 120
  %188 = icmp ult i8 %187, 23
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  switch i8 %0, label %304 [
    i8 -120, label %191
    i8 -109, label %191
    i8 -108, label %191
    i8 -107, label %191
    i8 -106, label %191
  ]

190:                                              ; preds = %186
  switch i8 %0, label %191 [
    i8 -83, label %304
    i8 -97, label %304
  ]

191:                                              ; preds = %189, %189, %189, %189, %189, %190
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #13
  %193 = bitcast %"class.v8::internal::HandlerTable"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #13
  %194 = load i64, i64* %4, align 8
  call void @_ZN2v88internal12HandlerTableC1ENS0_13BytecodeArrayE(%"class.v8::internal::HandlerTable"* nonnull %11, i64 %194) #13
  %195 = call i32 @_ZN2v88internal12HandlerTable11LookupRangeEiPiPNS1_15CatchPredictionE(%"class.v8::internal::HandlerTable"* nonnull %11, i32 %22, i32* nonnull %10, i32* null) #13
  %196 = icmp eq i32 %195, -1
  br i1 %196, label %303, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = add nsw i32 %199, -1
  %201 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 1
  %204 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  br i1 %203, label %205, label %207

205:                                              ; preds = %197
  %206 = bitcast %"union.v8::internal::BitVector::DataStorage"* %204 to i64*
  br label %213

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %204, i64 0, i32 0
  %209 = load i64*, i64** %208, align 8
  %210 = sdiv i32 %200, 64
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i64, i64* %209, i64 %211
  br label %213

213:                                              ; preds = %205, %207
  %214 = phi i64* [ %206, %205 ], [ %212, %207 ]
  %215 = load i64, i64* %214, align 8
  %216 = srem i32 %200, 64
  %217 = zext i32 %216 to i64
  %218 = shl i64 1, %217
  %219 = and i64 %215, %218
  %220 = icmp eq i64 %219, 0
  %221 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %5, i32 %195) #13
  %222 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %221, i64 0, i32 0
  %223 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %222, align 8
  %224 = load i32, i32* %201, align 4
  %225 = icmp eq i32 %224, 1
  br i1 %225, label %233, label %226

226:                                              ; preds = %213
  %227 = icmp sgt i32 %224, 0
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  %229 = load i32, i32* %10, align 4
  br label %263

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %223, i64 0, i32 1, i32 2, i32 0
  %232 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  br label %241

233:                                              ; preds = %213
  %234 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %223, i64 0, i32 1, i32 2
  %235 = bitcast %"union.v8::internal::BitVector::DataStorage"* %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"union.v8::internal::BitVector::DataStorage"* %204 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = or i64 %238, %236
  store i64 %239, i64* %237, align 8
  %240 = load i32, i32* %10, align 4
  br label %257

241:                                              ; preds = %241, %230
  %242 = phi i64 [ 0, %230 ], [ %250, %241 ]
  %243 = load i64*, i64** %231, align 8
  %244 = getelementptr inbounds i64, i64* %243, i64 %242
  %245 = load i64, i64* %244, align 8
  %246 = load i64*, i64** %232, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 %242
  %248 = load i64, i64* %247, align 8
  %249 = or i64 %248, %245
  store i64 %249, i64* %247, align 8
  %250 = add nuw nsw i64 %242, 1
  %251 = load i32, i32* %201, align 4
  %252 = sext i32 %251 to i64
  %253 = icmp slt i64 %250, %252
  br i1 %253, label %241, label %254

254:                                              ; preds = %241
  %255 = icmp eq i32 %251, 1
  %256 = load i32, i32* %10, align 4
  br i1 %255, label %257, label %263

257:                                              ; preds = %233, %254
  %258 = phi i32 [ %240, %233 ], [ %256, %254 ]
  %259 = zext i32 %258 to i64
  %260 = shl i64 1, %259
  %261 = bitcast %"union.v8::internal::BitVector::DataStorage"* %204 to i64*
  %262 = load i64, i64* %261, align 8
  br label %274

263:                                              ; preds = %228, %254
  %264 = phi i32 [ %229, %228 ], [ %256, %254 ]
  %265 = srem i32 %264, 64
  %266 = zext i32 %265 to i64
  %267 = shl i64 1, %266
  %268 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = sdiv i32 %264, 64
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i64, i64* %269, i64 %271
  %273 = load i64, i64* %272, align 8
  br label %274

274:                                              ; preds = %257, %263
  %275 = phi i64 [ %260, %257 ], [ %273, %263 ]
  %276 = phi i64 [ %262, %257 ], [ %267, %263 ]
  %277 = phi i64* [ %261, %257 ], [ %272, %263 ]
  %278 = or i64 %276, %275
  store i64 %278, i64* %277, align 8
  br i1 %220, label %279, label %303

279:                                              ; preds = %274
  %280 = load i32, i32* %198, align 8
  %281 = add nsw i32 %280, -1
  %282 = load i32, i32* %201, align 4
  %283 = icmp eq i32 %282, 1
  br i1 %283, label %284, label %291

284:                                              ; preds = %279
  %285 = zext i32 %281 to i64
  %286 = shl i64 1, %285
  %287 = xor i64 %286, -1
  %288 = bitcast %"union.v8::internal::BitVector::DataStorage"* %204 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %289, %287
  store i64 %290, i64* %288, align 8
  br label %303

291:                                              ; preds = %279
  %292 = srem i32 %281, 64
  %293 = zext i32 %292 to i64
  %294 = shl i64 1, %293
  %295 = xor i64 %294, -1
  %296 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %297 = load i64*, i64** %296, align 8
  %298 = sdiv i32 %281, 64
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i64, i64* %297, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = and i64 %301, %295
  store i64 %302, i64* %300, align 8
  br label %303

303:                                              ; preds = %274, %291, %284, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #13
  br label %304

304:                                              ; preds = %42, %189, %190, %190, %174, %177, %34, %29, %303
  ret void
}

declare void @_ZNK2v88internal11interpreter21BytecodeArrayIterator25GetJumpTableTargetOffsetsEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets"* sret, %"class.v8::internal::interpreter::BytecodeArrayIterator"*) local_unnamed_addr #2

declare void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets5beginEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"*) local_unnamed_addr #2

declare void @_ZNK2v88internal11interpreter22JumpTableTargetOffsets3endEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* sret, %"class.v8::internal::interpreter::JumpTableTargetOffsets"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorneERKS3_(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*, %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* dereferenceable(32)) local_unnamed_addr #2

declare i64 @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratordeEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"* @_ZN2v88internal11interpreter22JumpTableTargetOffsets8iteratorppEv(%"class.v8::internal::interpreter::JumpTableTargetOffsets::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_116UpdateInLivenessENS0_11interpreter8BytecodeEPNS1_21BytecodeLivenessStateERKNS3_21BytecodeArrayIteratorE(i8 zeroext, %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::interpreter::BytecodeArrayIterator"* dereferenceable(48)) unnamed_addr #0 {
  %4 = zext i8 %0 to i64
  %5 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN2v88internal11interpreter9Bytecodes13kOperandCountE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds [0 x i8*], [0 x i8*]* @_ZN2v88internal11interpreter9Bytecodes13kOperandTypesE, i64 0, i64 %4
  %8 = load i8*, i8** %7, align 8
  switch i8 %0, label %82 [
    i8 -82, label %9
    i8 -81, label %59
  ]

9:                                                ; preds = %3
  %10 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 0) #13
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %24

14:                                               ; preds = %9
  %15 = zext i32 %10 to i64
  %16 = shl i64 1, %15
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %18 = bitcast %"union.v8::internal::BitVector::DataStorage"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, %16
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, -1
  br label %40

24:                                               ; preds = %9
  %25 = srem i32 %10, 64
  %26 = zext i32 %25 to i64
  %27 = shl i64 1, %26
  %28 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = sdiv i32 %10, 64
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i64, i64* %29, i64 %31
  %33 = load i64, i64* %32, align 8
  %34 = or i64 %33, %27
  store i64 %34, i64* %32, align 8
  %35 = load i32, i32* %11, align 4
  %36 = icmp eq i32 %35, 1
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, -1
  br i1 %36, label %40, label %48

40:                                               ; preds = %14, %24
  %41 = phi i32 [ %23, %14 ], [ %39, %24 ]
  %42 = zext i32 %41 to i64
  %43 = shl i64 1, %42
  %44 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %45 = bitcast %"union.v8::internal::BitVector::DataStorage"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = or i64 %46, %43
  store i64 %47, i64* %45, align 8
  br label %455

48:                                               ; preds = %24
  %49 = srem i32 %39, 64
  %50 = zext i32 %49 to i64
  %51 = shl i64 1, %50
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = sdiv i32 %39, 64
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i64, i64* %53, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = or i64 %57, %51
  store i64 %58, i64* %56, align 8
  br label %455

59:                                               ; preds = %3
  %60 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 0) #13
  %61 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = zext i32 %60 to i64
  %66 = shl i64 1, %65
  %67 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %68 = bitcast %"union.v8::internal::BitVector::DataStorage"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = or i64 %69, %66
  store i64 %70, i64* %68, align 8
  br label %455

71:                                               ; preds = %59
  %72 = srem i32 %60, 64
  %73 = zext i32 %72 to i64
  %74 = shl i64 1, %73
  %75 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = sdiv i32 %60, 64
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i64, i64* %76, i64 %78
  %80 = load i64, i64* %79, align 8
  %81 = or i64 %80, %74
  store i64 %81, i64* %79, align 8
  br label %455

82:                                               ; preds = %3
  %83 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN2v88internal11interpreter9Bytecodes20kImplicitRegisterUseE, i64 0, i64 %4
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %112, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = add nsw i32 %89, -1
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %96 = bitcast %"union.v8::internal::BitVector::DataStorage"* %95 to i64*
  br label %104

97:                                               ; preds = %87
  %98 = srem i32 %90, 64
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = sdiv i32 %90, 64
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i64, i64* %100, i64 %102
  br label %104

104:                                              ; preds = %94, %97
  %105 = phi i64* [ %103, %97 ], [ %96, %94 ]
  %106 = phi i32 [ %98, %97 ], [ %90, %94 ]
  %107 = zext i32 %106 to i64
  %108 = shl i64 1, %107
  %109 = xor i64 %108, -1
  %110 = load i64, i64* %105, align 8
  %111 = and i64 %110, %109
  store i64 %111, i64* %105, align 8
  br label %112

112:                                              ; preds = %104, %82
  %113 = icmp sgt i32 %6, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %118 = bitcast %"union.v8::internal::BitVector::DataStorage"* %117 to i64*
  br label %122

119:                                              ; preds = %293, %112
  %120 = and i8 %84, 4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %321, label %297

122:                                              ; preds = %114, %293
  %123 = phi i32 [ 0, %114 ], [ %295, %293 ]
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %8, i64 %124
  %126 = load i8, i8* %125, align 1
  switch i8 %126, label %293 [
    i8 12, label %127
    i8 13, label %150
    i8 14, label %181
    i8 15, label %226
  ]

127:                                              ; preds = %122
  %128 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %123) #13
  %129 = icmp slt i32 %128, 0
  br i1 %129, label %293, label %130

130:                                              ; preds = %127
  %131 = load i32, i32* %115, align 4
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %130
  %134 = zext i32 %128 to i64
  %135 = shl i64 1, %134
  %136 = xor i64 %135, -1
  %137 = load i64, i64* %118, align 8
  %138 = and i64 %137, %136
  store i64 %138, i64* %118, align 8
  br label %293

139:                                              ; preds = %130
  %140 = and i32 %128, 63
  %141 = zext i32 %140 to i64
  %142 = shl i64 1, %141
  %143 = xor i64 %142, -1
  %144 = load i64*, i64** %116, align 8
  %145 = lshr i32 %128, 6
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i64, i64* %144, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, %143
  store i64 %149, i64* %147, align 8
  br label %293

150:                                              ; preds = %122
  %151 = add nsw i32 %123, 1
  %152 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %123) #13
  %153 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterCountOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %151) #13
  %154 = icmp sgt i32 %152, -1
  %155 = icmp ne i32 %153, 0
  %156 = and i1 %154, %155
  br i1 %156, label %157, label %293

157:                                              ; preds = %150
  %158 = zext i32 %153 to i64
  br label %159

159:                                              ; preds = %171, %157
  %160 = phi i64 [ 0, %157 ], [ %179, %171 ]
  %161 = trunc i64 %160 to i32
  %162 = add i32 %152, %161
  %163 = load i32, i32* %115, align 4
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %171, label %165

165:                                              ; preds = %159
  %166 = srem i32 %162, 64
  %167 = load i64*, i64** %116, align 8
  %168 = sdiv i32 %162, 64
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i64, i64* %167, i64 %169
  br label %171

171:                                              ; preds = %159, %165
  %172 = phi i64* [ %170, %165 ], [ %118, %159 ]
  %173 = phi i32 [ %166, %165 ], [ %162, %159 ]
  %174 = zext i32 %173 to i64
  %175 = shl i64 1, %174
  %176 = xor i64 %175, -1
  %177 = load i64, i64* %172, align 8
  %178 = and i64 %177, %176
  store i64 %178, i64* %172, align 8
  %179 = add nuw nsw i64 %160, 1
  %180 = icmp eq i64 %179, %158
  br i1 %180, label %293, label %159

181:                                              ; preds = %122
  %182 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %123) #13
  %183 = icmp slt i32 %182, 0
  br i1 %183, label %293, label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %115, align 4
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %194

187:                                              ; preds = %184
  %188 = zext i32 %182 to i64
  %189 = shl i64 1, %188
  %190 = xor i64 %189, -1
  %191 = load i64, i64* %118, align 8
  %192 = and i64 %191, %190
  store i64 %192, i64* %118, align 8
  %193 = add nuw nsw i32 %182, 1
  br label %208

194:                                              ; preds = %184
  %195 = and i32 %182, 63
  %196 = zext i32 %195 to i64
  %197 = shl i64 1, %196
  %198 = xor i64 %197, -1
  %199 = load i64*, i64** %116, align 8
  %200 = lshr i32 %182, 6
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i64, i64* %199, i64 %201
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, %198
  store i64 %204, i64* %202, align 8
  %205 = load i32, i32* %115, align 4
  %206 = add nuw nsw i32 %182, 1
  %207 = icmp eq i32 %205, 1
  br i1 %207, label %208, label %215

208:                                              ; preds = %187, %194
  %209 = phi i32 [ %193, %187 ], [ %206, %194 ]
  %210 = zext i32 %209 to i64
  %211 = shl i64 1, %210
  %212 = xor i64 %211, -1
  %213 = load i64, i64* %118, align 8
  %214 = and i64 %213, %212
  store i64 %214, i64* %118, align 8
  br label %293

215:                                              ; preds = %194
  %216 = srem i32 %206, 64
  %217 = zext i32 %216 to i64
  %218 = shl i64 1, %217
  %219 = xor i64 %218, -1
  %220 = load i64*, i64** %116, align 8
  %221 = sdiv i32 %206, 64
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i64, i64* %220, i64 %222
  %224 = load i64, i64* %223, align 8
  %225 = and i64 %224, %219
  store i64 %225, i64* %223, align 8
  br label %293

226:                                              ; preds = %122
  %227 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %123) #13
  %228 = icmp slt i32 %227, 0
  br i1 %228, label %293, label %229

229:                                              ; preds = %226
  %230 = load i32, i32* %115, align 4
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %239

232:                                              ; preds = %229
  %233 = zext i32 %227 to i64
  %234 = shl i64 1, %233
  %235 = xor i64 %234, -1
  %236 = load i64, i64* %118, align 8
  %237 = and i64 %236, %235
  store i64 %237, i64* %118, align 8
  %238 = add nuw nsw i32 %227, 1
  br label %253

239:                                              ; preds = %229
  %240 = and i32 %227, 63
  %241 = zext i32 %240 to i64
  %242 = shl i64 1, %241
  %243 = xor i64 %242, -1
  %244 = load i64*, i64** %116, align 8
  %245 = lshr i32 %227, 6
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds i64, i64* %244, i64 %246
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %248, %243
  store i64 %249, i64* %247, align 8
  %250 = load i32, i32* %115, align 4
  %251 = add nuw nsw i32 %227, 1
  %252 = icmp eq i32 %250, 1
  br i1 %252, label %253, label %261

253:                                              ; preds = %239, %232
  %254 = phi i32 [ %238, %232 ], [ %251, %239 ]
  %255 = zext i32 %254 to i64
  %256 = shl i64 1, %255
  %257 = xor i64 %256, -1
  %258 = load i64, i64* %118, align 8
  %259 = and i64 %258, %257
  store i64 %259, i64* %118, align 8
  %260 = add nuw nsw i32 %227, 2
  br label %275

261:                                              ; preds = %239
  %262 = srem i32 %251, 64
  %263 = zext i32 %262 to i64
  %264 = shl i64 1, %263
  %265 = xor i64 %264, -1
  %266 = load i64*, i64** %116, align 8
  %267 = sdiv i32 %251, 64
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds i64, i64* %266, i64 %268
  %270 = load i64, i64* %269, align 8
  %271 = and i64 %270, %265
  store i64 %271, i64* %269, align 8
  %272 = load i32, i32* %115, align 4
  %273 = add nuw nsw i32 %227, 2
  %274 = icmp eq i32 %272, 1
  br i1 %274, label %275, label %282

275:                                              ; preds = %253, %261
  %276 = phi i32 [ %260, %253 ], [ %273, %261 ]
  %277 = zext i32 %276 to i64
  %278 = shl i64 1, %277
  %279 = xor i64 %278, -1
  %280 = load i64, i64* %118, align 8
  %281 = and i64 %280, %279
  store i64 %281, i64* %118, align 8
  br label %293

282:                                              ; preds = %261
  %283 = srem i32 %273, 64
  %284 = zext i32 %283 to i64
  %285 = shl i64 1, %284
  %286 = xor i64 %285, -1
  %287 = load i64*, i64** %116, align 8
  %288 = sdiv i32 %273, 64
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i64, i64* %287, i64 %289
  %291 = load i64, i64* %290, align 8
  %292 = and i64 %291, %286
  store i64 %292, i64* %290, align 8
  br label %293

293:                                              ; preds = %171, %150, %226, %275, %282, %181, %208, %215, %127, %133, %139, %122
  %294 = phi i32 [ %123, %122 ], [ %123, %139 ], [ %123, %133 ], [ %123, %127 ], [ %151, %150 ], [ %123, %215 ], [ %123, %208 ], [ %123, %181 ], [ %123, %282 ], [ %123, %275 ], [ %123, %226 ], [ %151, %171 ]
  %295 = add nsw i32 %294, 1
  %296 = icmp slt i32 %295, %6
  br i1 %296, label %122, label %119

297:                                              ; preds = %119
  %298 = zext i8 %0 to i32
  %299 = sub nsw i32 195, %298
  %300 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %301 = load i32, i32* %300, align 4
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %306

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %305 = bitcast %"union.v8::internal::BitVector::DataStorage"* %304 to i64*
  br label %313

306:                                              ; preds = %297
  %307 = srem i32 %299, 64
  %308 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %309 = load i64*, i64** %308, align 8
  %310 = sdiv i32 %299, 64
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds i64, i64* %309, i64 %311
  br label %313

313:                                              ; preds = %303, %306
  %314 = phi i64* [ %312, %306 ], [ %305, %303 ]
  %315 = phi i32 [ %307, %306 ], [ %299, %303 ]
  %316 = zext i32 %315 to i64
  %317 = shl i64 1, %316
  %318 = xor i64 %317, -1
  %319 = load i64, i64* %314, align 8
  %320 = and i64 %319, %318
  store i64 %320, i64* %314, align 8
  br label %321

321:                                              ; preds = %313, %119
  %322 = and i8 %84, 1
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %348, label %324

324:                                              ; preds = %321
  %325 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 0
  %326 = load i32, i32* %325, align 8
  %327 = add nsw i32 %326, -1
  %328 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %334

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %333 = bitcast %"union.v8::internal::BitVector::DataStorage"* %332 to i64*
  br label %341

334:                                              ; preds = %324
  %335 = srem i32 %327, 64
  %336 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %337 = load i64*, i64** %336, align 8
  %338 = sdiv i32 %327, 64
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i64, i64* %337, i64 %339
  br label %341

341:                                              ; preds = %331, %334
  %342 = phi i64* [ %340, %334 ], [ %333, %331 ]
  %343 = phi i32 [ %335, %334 ], [ %327, %331 ]
  %344 = zext i32 %343 to i64
  %345 = shl i64 1, %344
  %346 = load i64, i64* %342, align 8
  %347 = or i64 %346, %345
  store i64 %347, i64* %342, align 8
  br label %348

348:                                              ; preds = %341, %321
  br i1 %113, label %349, label %455

349:                                              ; preds = %348
  %350 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2, i32 0
  %352 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %1, i64 0, i32 1, i32 2
  %353 = bitcast %"union.v8::internal::BitVector::DataStorage"* %352 to i64*
  br label %354

354:                                              ; preds = %349, %451
  %355 = phi i32 [ 0, %349 ], [ %453, %451 ]
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, i8* %8, i64 %356
  %358 = load i8, i8* %357, align 1
  switch i8 %358, label %451 [
    i8 9, label %359
    i8 11, label %380
    i8 10, label %421
  ]

359:                                              ; preds = %354
  %360 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %355) #13
  %361 = icmp slt i32 %360, 0
  br i1 %361, label %451, label %362

362:                                              ; preds = %359
  %363 = load i32, i32* %350, align 4
  %364 = icmp eq i32 %363, 1
  br i1 %364, label %365, label %370

365:                                              ; preds = %362
  %366 = zext i32 %360 to i64
  %367 = shl i64 1, %366
  %368 = load i64, i64* %353, align 8
  %369 = or i64 %368, %367
  store i64 %369, i64* %353, align 8
  br label %451

370:                                              ; preds = %362
  %371 = and i32 %360, 63
  %372 = zext i32 %371 to i64
  %373 = shl i64 1, %372
  %374 = load i64*, i64** %351, align 8
  %375 = lshr i32 %360, 6
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds i64, i64* %374, i64 %376
  %378 = load i64, i64* %377, align 8
  %379 = or i64 %378, %373
  store i64 %379, i64* %377, align 8
  br label %451

380:                                              ; preds = %354
  %381 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %355) #13
  %382 = icmp slt i32 %381, 0
  br i1 %382, label %451, label %383

383:                                              ; preds = %380
  %384 = load i32, i32* %350, align 4
  %385 = icmp eq i32 %384, 1
  br i1 %385, label %386, label %392

386:                                              ; preds = %383
  %387 = zext i32 %381 to i64
  %388 = shl i64 1, %387
  %389 = load i64, i64* %353, align 8
  %390 = or i64 %389, %388
  store i64 %390, i64* %353, align 8
  %391 = add nuw nsw i32 %381, 1
  br label %405

392:                                              ; preds = %383
  %393 = and i32 %381, 63
  %394 = zext i32 %393 to i64
  %395 = shl i64 1, %394
  %396 = load i64*, i64** %351, align 8
  %397 = lshr i32 %381, 6
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds i64, i64* %396, i64 %398
  %400 = load i64, i64* %399, align 8
  %401 = or i64 %400, %395
  store i64 %401, i64* %399, align 8
  %402 = load i32, i32* %350, align 4
  %403 = add nuw nsw i32 %381, 1
  %404 = icmp eq i32 %402, 1
  br i1 %404, label %405, label %411

405:                                              ; preds = %386, %392
  %406 = phi i32 [ %391, %386 ], [ %403, %392 ]
  %407 = zext i32 %406 to i64
  %408 = shl i64 1, %407
  %409 = load i64, i64* %353, align 8
  %410 = or i64 %409, %408
  store i64 %410, i64* %353, align 8
  br label %451

411:                                              ; preds = %392
  %412 = srem i32 %403, 64
  %413 = zext i32 %412 to i64
  %414 = shl i64 1, %413
  %415 = load i64*, i64** %351, align 8
  %416 = sdiv i32 %403, 64
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds i64, i64* %415, i64 %417
  %419 = load i64, i64* %418, align 8
  %420 = or i64 %419, %414
  store i64 %420, i64* %418, align 8
  br label %451

421:                                              ; preds = %354
  %422 = add nsw i32 %355, 1
  %423 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %355) #13
  %424 = tail call i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterCountOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* %2, i32 %422) #13
  %425 = icmp sgt i32 %423, -1
  %426 = icmp ne i32 %424, 0
  %427 = and i1 %425, %426
  br i1 %427, label %428, label %451

428:                                              ; preds = %421
  %429 = zext i32 %424 to i64
  br label %430

430:                                              ; preds = %442, %428
  %431 = phi i64 [ 0, %428 ], [ %449, %442 ]
  %432 = trunc i64 %431 to i32
  %433 = add i32 %423, %432
  %434 = load i32, i32* %350, align 4
  %435 = icmp eq i32 %434, 1
  br i1 %435, label %442, label %436

436:                                              ; preds = %430
  %437 = srem i32 %433, 64
  %438 = load i64*, i64** %351, align 8
  %439 = sdiv i32 %433, 64
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i64, i64* %438, i64 %440
  br label %442

442:                                              ; preds = %430, %436
  %443 = phi i64* [ %441, %436 ], [ %353, %430 ]
  %444 = phi i32 [ %437, %436 ], [ %433, %430 ]
  %445 = zext i32 %444 to i64
  %446 = shl i64 1, %445
  %447 = load i64, i64* %443, align 8
  %448 = or i64 %447, %446
  store i64 %448, i64* %443, align 8
  %449 = add nuw nsw i64 %431, 1
  %450 = icmp eq i64 %449, %429
  br i1 %450, label %451, label %430

451:                                              ; preds = %442, %421, %380, %405, %411, %359, %365, %370, %354
  %452 = phi i32 [ %355, %354 ], [ %355, %370 ], [ %355, %365 ], [ %355, %359 ], [ %355, %411 ], [ %355, %405 ], [ %355, %380 ], [ %422, %421 ], [ %422, %442 ]
  %453 = add nsw i32 %452, 1
  %454 = icmp slt i32 %453, %6
  br i1 %454, label %354, label %455

455:                                              ; preds = %451, %348, %71, %64, %48, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNK2v88internal8compiler16BytecodeAnalysis15PrintLivenessToERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::BytecodeAnalysis"*, %"class.std::__1::basic_ostream"* returned dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.v8::internal::interpreter::BytecodeArrayIterator", align 8
  %5 = bitcast %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4, i64* %7, i32 0) #13
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ult i8* %9, %11
  br i1 %12, label %13, label %159

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::locale"* %3 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::interpreter::BytecodeArrayIterator", %"class.v8::internal::interpreter::BytecodeArrayIterator"* %4, i64 0, i32 4
  br label %21

21:                                               ; preds = %13, %133
  %22 = phi i8* [ %9, %13 ], [ %134, %133 ]
  %23 = ptrtoint i8* %22 to i64
  %24 = load i64, i64* %15, align 8
  %25 = sub i64 %23, %24
  %26 = load i32, i32* %16, align 4
  %27 = trunc i64 %25 to i32
  %28 = sub i32 %27, %26
  %29 = load i8, i8* %17, align 4, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %21
  %32 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %18, i32 %28) #13
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %33, align 8
  %35 = load i8, i8* %17, align 4
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %34, i64 0, i32 1
  %37 = icmp eq i8 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %31
  %39 = call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %18, i32 %28) #13
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %39, i64 0, i32 1
  %41 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %40, align 8
  br label %42

42:                                               ; preds = %21, %31, %38
  %43 = phi %"class.v8::internal::BitVector"* [ %36, %38 ], [ %36, %31 ], [ inttoptr (i64 8 to %"class.v8::internal::BitVector"*), %21 ]
  %44 = phi %"class.v8::internal::compiler::BytecodeLivenessState"* [ %41, %38 ], [ null, %31 ], [ null, %21 ]
  %45 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %43, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %43, i64 0, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %43, i64 0, i32 2
  %51 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %50, i64 0, i32 0
  %52 = bitcast %"union.v8::internal::BitVector::DataStorage"* %50 to i64*
  br label %63

53:                                               ; preds = %72, %42
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #13
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %44, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %86

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %44, i64 0, i32 1, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeLivenessState", %"class.v8::internal::compiler::BytecodeLivenessState"* %44, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %60, i64 0, i32 0
  %62 = bitcast %"union.v8::internal::BitVector::DataStorage"* %60 to i64*
  br label %136

63:                                               ; preds = %48, %72
  %64 = phi i32 [ 0, %48 ], [ %83, %72 ]
  %65 = load i32, i32* %49, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = load i64*, i64** %51, align 8
  %69 = lshr i32 %64, 6
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i64, i64* %68, i64 %70
  br label %72

72:                                               ; preds = %63, %67
  %73 = phi i64* [ %71, %67 ], [ %52, %63 ]
  %74 = load i64, i64* %73, align 8
  %75 = and i32 %64, 63
  %76 = zext i32 %75 to i64
  %77 = shl i64 1, %76
  %78 = and i64 %74, %77
  %79 = icmp eq i64 %78, 0
  %80 = select i1 %79, [2 x i8]* @.str.1, [2 x i8]* @.str
  %81 = getelementptr inbounds [2 x i8], [2 x i8]* %80, i64 0, i64 0
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %81, i64 1) #13
  %83 = add nuw nsw i32 %64, 1
  %84 = load i32, i32* %45, align 8
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %63, label %53

86:                                               ; preds = %145, %53
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #13
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %87, i32 %28) #13
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %88, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #13
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNK2v88internal11interpreter21BytecodeArrayIterator7PrintToERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4, %"class.std::__1::basic_ostream"* dereferenceable(160) %1) #13
  %91 = bitcast %"class.std::__1::basic_ostream"* %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr i8, i8* %92, i64 -24
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::basic_ostream"* %90 to i8*
  %97 = getelementptr inbounds i8, i8* %96, i64 %95
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %98 = bitcast i8* %97 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %98) #13
  %99 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %100 = bitcast %"class.std::__1::locale::facet"* %99 to %"class.std::__1::ctype"*
  %101 = bitcast %"class.std::__1::locale::facet"* %99 to i8 (%"class.std::__1::ctype"*, i8)***
  %102 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %101, align 8
  %103 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %102, i64 7
  %104 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %103, align 8
  %105 = call signext i8 %104(%"class.std::__1::ctype"* %100, i8 signext 10) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %90, i8 signext %105) #13
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %90) #13
  %108 = load i8*, i8** %8, align 8
  %109 = load i8, i8* %108, align 1
  %110 = load i8, i8* %20, align 8
  %111 = lshr i8 %110, 1
  %112 = zext i8 %111 to i64
  %113 = zext i8 %109 to i64
  %114 = getelementptr inbounds [3 x [197 x i8]], [3 x [197 x i8]]* @_ZN2v88internal11interpreter9Bytecodes14kBytecodeSizesE, i64 0, i64 %112, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i64
  %117 = getelementptr inbounds i8, i8* %108, i64 %116
  store i8* %117, i8** %8, align 8
  %118 = load i8*, i8** %10, align 8
  %119 = icmp ult i8* %117, %118
  br i1 %119, label %120, label %133

120:                                              ; preds = %86
  %121 = load i8, i8* %117, align 1
  %122 = icmp ult i8 %121, 4
  br i1 %122, label %123, label %129

123:                                              ; preds = %120
  %124 = zext i8 %121 to i32
  %125 = shl nuw nsw i32 %124, 3
  %126 = lshr i32 67240962, %125
  %127 = trunc i32 %126 to i8
  store i8 %127, i8* %20, align 8
  %128 = getelementptr inbounds i8, i8* %117, i64 1
  store i8* %128, i8** %8, align 8
  br label %130

129:                                              ; preds = %120
  store i8 1, i8* %20, align 8
  br label %130

130:                                              ; preds = %129, %123
  %131 = phi i32 [ 1, %123 ], [ 0, %129 ]
  %132 = phi i8* [ %128, %123 ], [ %117, %129 ]
  store i32 %131, i32* %16, align 4
  br label %133

133:                                              ; preds = %130, %86
  %134 = phi i8* [ %117, %86 ], [ %132, %130 ]
  %135 = icmp ult i8* %134, %118
  br i1 %135, label %21, label %159

136:                                              ; preds = %58, %145
  %137 = phi i32 [ 0, %58 ], [ %156, %145 ]
  %138 = load i32, i32* %59, align 4
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %145, label %140

140:                                              ; preds = %136
  %141 = load i64*, i64** %61, align 8
  %142 = lshr i32 %137, 6
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i64, i64* %141, i64 %143
  br label %145

145:                                              ; preds = %136, %140
  %146 = phi i64* [ %144, %140 ], [ %62, %136 ]
  %147 = load i64, i64* %146, align 8
  %148 = and i32 %137, 63
  %149 = zext i32 %148 to i64
  %150 = shl i64 1, %149
  %151 = and i64 %147, %150
  %152 = icmp eq i64 %151, 0
  %153 = select i1 %152, [2 x i8]* @.str.1, [2 x i8]* @.str
  %154 = getelementptr inbounds [2 x i8], [2 x i8]* %153, i64 0, i64 0
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %154, i64 1) #13
  %156 = add nuw nsw i32 %137, 1
  %157 = load i32, i32* %55, align 8
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %136, label %86

159:                                              ; preds = %133, %2
  call void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #13
  ret %"class.std::__1::basic_ostream"* %1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #13
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #13
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler16BytecodeAnalysis12IsLoopHeaderEi(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1214"**
  %5 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.1214"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node.1214"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node.1214"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node.1214"* %9 to %"class.std::__1::__tree_node.1214"**
  %17 = select i1 %12, %"class.std::__1::__tree_node.1214"** %14, %"class.std::__1::__tree_node.1214"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.1214"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = icmp ne %"class.std::__1::__tree_end_node"* %30, %3
  ret i1 %31
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler16BytecodeAnalysis16GetLoopOffsetForEi(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %8
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %52, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %52

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.1214"**
  %31 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node.1214"* %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %28, %33
  %34 = phi %"class.std::__1::__tree_end_node"* [ %44, %33 ], [ %29, %28 ]
  %35 = phi %"class.std::__1::__tree_node.1214"* [ %45, %33 ], [ %31, %28 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %1
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %35, i64 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_node.1214"* %35 to %"class.std::__1::__tree_node.1214"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %35, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.1214"**
  %43 = select i1 %38, %"class.std::__1::__tree_node.1214"** %40, %"class.std::__1::__tree_node.1214"** %42
  %44 = select i1 %38, %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"* %34
  %45 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.1214"* %45, null
  br i1 %46, label %47, label %33

47:                                               ; preds = %33, %28
  %48 = phi %"class.std::__1::__tree_end_node"* [ %29, %28 ], [ %44, %33 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 5
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to i32*
  %51 = load i32, i32* %50, align 8
  br label %52

52:                                               ; preds = %2, %23, %21, %47
  %53 = phi i32 [ %51, %47 ], [ -1, %21 ], [ %26, %23 ], [ -1, %2 ]
  ret i32 %53
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden dereferenceable(56) %"struct.v8::internal::compiler::LoopInfo"* @_ZNK2v88internal8compiler16BytecodeAnalysis14GetLoopInfoForEi(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1214"**
  %5 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.1214"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node.1214"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node.1214"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node.1214"* %9 to %"class.std::__1::__tree_node.1214"**
  %17 = select i1 %12, %"class.std::__1::__tree_node.1214"** %14, %"class.std::__1::__tree_node.1214"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.1214"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"struct.v8::internal::compiler::LoopInfo"*
  ret %"struct.v8::internal::compiler::LoopInfo"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::BytecodeLivenessState"* @_ZNK2v88internal8compiler16BytecodeAnalysis16GetInLivenessForEi(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = tail call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %7, i32 %1) #13
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %8, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.v8::internal::compiler::BytecodeLivenessState"* [ %10, %6 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::BytecodeLivenessState"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::BytecodeLivenessState"* @_ZNK2v88internal8compiler16BytecodeAnalysis17GetOutLivenessForEi(%"class.v8::internal::compiler::BytecodeAnalysis"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeAnalysis", %"class.v8::internal::compiler::BytecodeAnalysis"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = tail call dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"* %7, i32 %1) #13
  %9 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeLiveness", %"struct.v8::internal::compiler::BytecodeLiveness"* %8, i64 0, i32 1
  %10 = load %"class.v8::internal::compiler::BytecodeLivenessState"*, %"class.v8::internal::compiler::BytecodeLivenessState"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.v8::internal::compiler::BytecodeLivenessState"* [ %10, %6 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::BytecodeLivenessState"* %12
}

declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorC1ENS0_6HandleINS0_13BytecodeArrayEEEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i64*, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNK2v88internal11interpreter21BytecodeArrayIterator7PrintToERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD1Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #9

declare void @_ZN2v88internal11interpreter27BytecodeArrayRandomIterator21UpdateOffsetFromIndexEv(%"class.v8::internal::interpreter::BytecodeArrayRandomIterator"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator18GetRegisterOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32) local_unnamed_addr #2

declare i32 @_ZNK2v88internal11interpreter21BytecodeArrayIterator23GetRegisterCountOperandEi(%"class.v8::internal::interpreter::BytecodeArrayIterator"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal12HandlerTableC1ENS0_13BytecodeArrayE(%"class.v8::internal::HandlerTable"*, i64) unnamed_addr #2

declare i32 @_ZN2v88internal12HandlerTable11LookupRangeEiPiPNS1_15CatchPredictionE(%"class.v8::internal::HandlerTable"*, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #2

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #13
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #13
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #13
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #13
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #13
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #13
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #13
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #13
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #13
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #13
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #13
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal11interpreter21BytecodeArrayIteratorD2Ev(%"class.v8::internal::interpreter::BytecodeArrayIterator"*) unnamed_addr #9

declare dereferenceable(16) %"struct.v8::internal::compiler::BytecodeLiveness"* @_ZNK2v88internal8compiler19BytecodeLivenessMap11GetLivenessEi(%"class.v8::internal::compiler::BytecodeLivenessMap"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #13
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler19BytecodeLivenessMapC1EiPNS0_4ZoneE(%"class.v8::internal::compiler::BytecodeLivenessMap"*, i32, %"class.v8::internal::Zone"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, align 8
  %3 = alloca %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, align 8
  %4 = alloca %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, align 8
  %5 = alloca %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1196", align 16
  %7 = alloca %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 255
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -256
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %16, align 8
  %18 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %17, i64 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %21, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 256
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %45 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #13
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* [ %52, %51 ], [ %71, %69 ]
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %73, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %3, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 256
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %77 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #13
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* [ %84, %83 ], [ %103, %101 ]
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %105, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  %106 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %107 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %27, align 8
  %108 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107, i64 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %111, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1196"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #13
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %6, i64 0, i32 3, i32 0, i32 0
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** null, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %121 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #13
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %6, i64 0, i32 0
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %150, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %151, align 16
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %6, i64 0, i32 2
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %152, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %6, i64 0, i32 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %152, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %150, i64 %116
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %155, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 256
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %157 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.27", %"class.v8::internal::RecyclingZoneAllocator.27"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #13
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #13
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"* %185, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %7, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1196"* nonnull %6, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #13
  %187 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %24, align 8
  %188 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %27, align 8
  %189 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %187, %188
  %190 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1196"* %6 to i64*
  %199 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1196"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %153 to i64*
  %204 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %118 to i64*
  %205 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %210 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %195, %209
  %211 = inttoptr i64 %197 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %209, i64 -1
  %214 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %209, i64 %217
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %218, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %211, i64 1
  %236 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %227 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %211, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #13
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1196"* nonnull %6, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8) %244)
  %245 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %27, align 8
  %246 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %24, i64 %26
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %33, i64 %23
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %35, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #13
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %75 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !20

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %172, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %199, i64 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %200, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %6 to i64
  %9 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64
  %10 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %14, align 8
  %16 = icmp ugt %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13, %15
  %17 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %24 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %24, i64 %26
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %33, i64 %23
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %35, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %36 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #13
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %75 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %76 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82, i64 %44
  %85 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %84 to i64
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82, i64 %43
  %87 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %86 to i64
  %88 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %100, i64 1
  %108 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !21

112:                                              ; preds = %99
  %113 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 1
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 1
  %128 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 2
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 2
  %133 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 3
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 3
  %138 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 4
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 4
  %143 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 5
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 5
  %148 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 6
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 6
  %153 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 7
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 7
  %158 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 8
  %162 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %161 to i64
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %122, i64 8
  %164 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %172, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %45 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %172, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %192, align 8
  %193 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %199, i64 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %200, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i64
  %17 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %30, %27 ], [ %23, %18 ]
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %36, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %35, i64 %22
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %37, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %47 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #13
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %76 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %77 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %83 to i64
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %83, i64 %45
  %86 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %85 to i64
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %83, i64 %43
  %88 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %87 to i64
  %89 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %101, i64 1
  %109 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %108 to i64
  %110 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !22

113:                                              ; preds = %100
  %114 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 1
  %128 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 1
  %129 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 2
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 2
  %134 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 3
  %138 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 3
  %139 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 4
  %143 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 4
  %144 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 5
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 5
  %149 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 6
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 6
  %154 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 7
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 7
  %159 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 8
  %163 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %162 to i64
  %164 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %123, i64 8
  %165 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %173, i64 1
  %188 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %46 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %173, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %192, align 8
  %193 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %195, i64 -1
  %197 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %201 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %200, i64 -1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %201, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.1196"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %6 to i64
  %9 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 1
  %12 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 0
  %14 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %13, align 8
  %15 = icmp ugt %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %12, %14
  %16 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %12, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %23 to i8*
  %30 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %23, i64 %26
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %33, i64 %22
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %35, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %11, align 8
  %36 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1196"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %48 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #13
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %77 to i64
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %77, i64 %44
  %80 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %79 to i64
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %77, i64 %43
  %82 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %81 to i64
  %83 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %11, align 8
  %84 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %98, i64 1
  %106 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %105 to i64
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !23

110:                                              ; preds = %97
  %111 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 1
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 1
  %126 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 2
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 2
  %131 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 3
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 3
  %136 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 4
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 4
  %141 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 5
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 5
  %146 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 6
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 6
  %151 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 7
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 7
  %156 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %118, i64 8
  %160 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %159 to i64
  %161 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %120, i64 8
  %162 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %170, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %47 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %170, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %190, align 8
  %191 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %197, i64 1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %198, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal8compiler16BytecodeAnalysis14LoopStackEntryERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1196"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11, %13
  %15 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %36, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %35, i64 %22
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %37, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1196"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1196", %"struct.std::__1::__split_buffer.1196"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %49 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #13
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %78 to i64
  %80 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %78, i64 %45
  %81 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %80 to i64
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %78, i64 %43
  %83 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %82 to i64
  %84 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %85 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %99, i64 1
  %107 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %106 to i64
  %108 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !24

111:                                              ; preds = %98
  %112 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 1
  %126 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 1
  %127 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 2
  %131 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 2
  %132 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 3
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 3
  %137 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 4
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 4
  %142 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 5
  %146 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 5
  %147 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 6
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 6
  %152 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 7
  %156 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 7
  %157 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %119, i64 8
  %161 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %160 to i64
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %121, i64 8
  %163 = icmp eq %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %171, i64 1
  %186 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BytecodeAnalysis::LoopStackEntry *>::FreeBlock"** %48 to %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"***
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %171, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %190, align 8
  %191 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %193, i64 -1
  %195 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"**, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  %199 = getelementptr inbounds %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %198, i64 -1
  store %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"** %199, %"struct.v8::internal::compiler::BytecodeAnalysis::LoopStackEntry"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8LoopInfoEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE25__emplace_unique_key_argsIiJNS_4pairIKiS5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.44"*, i32* dereferenceable(4), %"struct.std::__1::pair.1180"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1214"**
  %6 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.1214"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32, i32* %1, align 4
  br label %11

11:                                               ; preds = %33, %8
  %12 = phi %"class.std::__1::__tree_node.1214"* [ %36, %33 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %9, %8 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %10
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node.1214"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %4, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node.1214"**
  %43 = load %"class.std::__1::__tree_node.1214"*, %"class.std::__1::__tree_node.1214"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node.1214"* %43, null
  br i1 %44, label %45, label %109

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8, !noalias !25
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8, !noalias !25
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 3
  %51 = load i64, i64* %50, align 8, !noalias !25
  %52 = sub i64 %51, %49
  %53 = icmp ult i64 %52, 96
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %45
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %47, i64 96) #13, !noalias !25
  br label %58

56:                                               ; preds = %45
  %57 = add i64 %49, 96
  store i64 %57, i64* %48, align 8, !noalias !25
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi i64 [ %55, %54 ], [ %49, %56 ]
  %60 = inttoptr i64 %59 to %"class.std::__1::__tree_node.1214"*
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 0
  %63 = load i32, i32* %62, align 8, !noalias !25
  store i32 %63, i32* %61, align 8, !noalias !25
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 1
  %66 = bitcast %"struct.v8::internal::compiler::LoopInfo"* %64 to i8*
  %67 = bitcast %"struct.v8::internal::compiler::LoopInfo"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #13, !noalias !25
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 2, i32 1
  %72 = bitcast %"class.v8::internal::ZoneAllocator"* %70 to i64*
  %73 = bitcast %"struct.std::__1::__compressed_pair_elem.20"* %71 to i64*
  %74 = bitcast %"class.v8::internal::ZoneVector"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #13, !noalias !25
  %75 = load i64, i64* %72, align 8, !noalias !25
  store i64 %75, i64* %73, align 8, !noalias !25
  %76 = bitcast %"class.v8::internal::ZoneVector"* %69 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !25
  %78 = bitcast %"class.v8::internal::ZoneVector"* %68 to i64*
  store i64 %77, i64* %78, align 8, !noalias !25
  %79 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %80 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !25
  %82 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %83 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %82 to i64*
  store i64 %81, i64* %83, align 8, !noalias !25
  %84 = getelementptr inbounds %"struct.std::__1::pair.1180", %"struct.std::__1::pair.1180"* %2, i64 0, i32 1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %84 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !25
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %60, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"class.v8::internal::compiler::ResumeJumpTarget"** %87 to i64*
  store i64 %86, i64* %88, align 8, !noalias !25
  %89 = bitcast %"class.v8::internal::ZoneVector"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #13, !noalias !25
  %90 = inttoptr i64 %59 to %"class.std::__1::__tree_node_base"*
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 2
  %92 = inttoptr i64 %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %91, align 8
  store %"class.std::__1::__tree_node_base"* %90, %"class.std::__1::__tree_node_base"** %41, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %58
  %99 = ptrtoint %"class.std::__1::__tree_node_base"* %96 to i64
  %100 = bitcast %"class.std::__1::__tree.44"* %0 to i64*
  store i64 %99, i64* %100, align 8
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %102

102:                                              ; preds = %98, %58
  %103 = phi %"class.std::__1::__tree_node_base"* [ %90, %58 ], [ %101, %98 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %105, %"class.std::__1::__tree_node_base"* %103) #13
  %106 = getelementptr inbounds %"class.std::__1::__tree.44", %"class.std::__1::__tree.44"* %0, i64 0, i32 2, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %107, 1
  store i64 %108, i64* %106, align 8
  br label %109

109:                                              ; preds = %102, %39
  %110 = phi i8 [ 1, %102 ], [ 0, %39 ]
  %111 = phi %"class.std::__1::__tree_node.1214"* [ %60, %102 ], [ %43, %39 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node.1214", %"class.std::__1::__tree_node.1214"* %111, i64 0, i32 0, i32 0
  %113 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %112, 0
  %114 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %113, i8 %110, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %114
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJNS_4pairIKiiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISJ_EEEEEEDpOT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJNS_4pairIKiiEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISJ_EEEEEEDpOT_"}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !12}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8LoopInfoEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJNS_4pairIKiS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16__treeINS_12__value_typeIiN2v88internal8compiler8LoopInfoEEENS_19__map_value_compareIiS6_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJNS_4pairIKiS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
