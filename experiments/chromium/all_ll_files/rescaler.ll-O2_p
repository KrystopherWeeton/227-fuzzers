; ModuleID = '../../third_party/libwebp/src/dsp/rescaler.c'
source_filename = "../../third_party/libwebp/src/dsp/rescaler.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.WebPRescaler = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32*, i32* }

@WebPRescalerImportRowShrink = common hidden local_unnamed_addr global void (%struct.WebPRescaler*, i8*)* null, align 8
@WebPRescalerImportRowExpand = common hidden local_unnamed_addr global void (%struct.WebPRescaler*, i8*)* null, align 8
@WebPRescalerExportRowExpand = common hidden local_unnamed_addr global void (%struct.WebPRescaler*)* null, align 8
@WebPRescalerExportRowShrink = common hidden local_unnamed_addr global void (%struct.WebPRescaler*)* null, align 8
@WebPRescalerDspInit.WebPRescalerDspInit_body_last_cpuinfo_used = internal global i32 (i32)* bitcast (i32 (i32)** @WebPRescalerDspInit.WebPRescalerDspInit_body_last_cpuinfo_used to i32 (i32)*), align 8
@VP8GetCPUInfo = external local_unnamed_addr global i32 (i32)*, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPRescalerImportRowExpand_C(%struct.WebPRescaler* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %77

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = mul nsw i32 %8, %4
  %10 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 9
  %11 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 11
  %12 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 20
  %13 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 10
  %14 = sext i32 %4 to i64
  %15 = sext i32 %9 to i64
  %16 = zext i32 %4 to i64
  br label %17

17:                                               ; preds = %73, %6
  %18 = phi i64 [ 0, %6 ], [ %74, %73 ]
  %19 = phi i32 [ %4, %6 ], [ %75, %73 ]
  %20 = sext i32 %19 to i64
  %21 = load i32, i32* %10, align 4
  %22 = getelementptr inbounds i8, i8* %1, i64 %18
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i32, i32* %11, align 4
  %26 = icmp sgt i32 %25, 1
  %27 = add nsw i64 %18, %14
  br i1 %26, label %28, label %32

28:                                               ; preds = %17
  %29 = getelementptr inbounds i8, i8* %1, i64 %27
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32 [ %31, %28 ], [ %24, %17 ]
  %34 = mul i32 %21, %24
  %35 = load i32*, i32** %12, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %18
  store i32 %34, i32* %36, align 4
  %37 = icmp slt i64 %27, %15
  br i1 %37, label %38, label %73

38:                                               ; preds = %32
  %39 = trunc i64 %27 to i32
  br label %40

40:                                               ; preds = %38, %59
  %41 = phi i64 [ %20, %38 ], [ %71, %59 ]
  %42 = phi i32 [ %33, %38 ], [ %64, %59 ]
  %43 = phi i32 [ %24, %38 ], [ %63, %59 ]
  %44 = phi i32 [ %21, %38 ], [ %62, %59 ]
  %45 = phi i32 [ %39, %38 ], [ %61, %59 ]
  %46 = load i32, i32* %13, align 8
  %47 = sub nsw i32 %44, %46
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %40
  %50 = load i32, i32* %10, align 4
  br label %59

51:                                               ; preds = %40
  %52 = add nsw i32 %45, %4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load i32, i32* %10, align 4
  %58 = add nsw i32 %57, %47
  br label %59

59:                                               ; preds = %49, %51
  %60 = phi i32 [ %57, %51 ], [ %50, %49 ]
  %61 = phi i32 [ %52, %51 ], [ %45, %49 ]
  %62 = phi i32 [ %58, %51 ], [ %47, %49 ]
  %63 = phi i32 [ %42, %51 ], [ %43, %49 ]
  %64 = phi i32 [ %56, %51 ], [ %42, %49 ]
  %65 = mul nsw i32 %60, %64
  %66 = sub nsw i32 %63, %64
  %67 = mul nsw i32 %66, %62
  %68 = add nsw i32 %65, %67
  %69 = load i32*, i32** %12, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %41
  store i32 %68, i32* %70, align 4
  %71 = add i64 %41, %14
  %72 = icmp slt i64 %71, %15
  br i1 %72, label %40, label %73

73:                                               ; preds = %59, %32
  %74 = add nuw nsw i64 %18, 1
  %75 = add i32 %19, 1
  %76 = icmp eq i64 %74, %16
  br i1 %76, label %77, label %17

77:                                               ; preds = %73, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPRescalerImportRowShrink_C(%struct.WebPRescaler* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 4
  %7 = mul nsw i32 %6, %4
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %9, label %70

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 9
  %11 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 10
  %12 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 20
  %13 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 3
  %14 = sext i32 %4 to i64
  %15 = sext i32 %7 to i64
  %16 = zext i32 %4 to i64
  br label %17

17:                                               ; preds = %66, %9
  %18 = phi i64 [ 0, %9 ], [ %68, %66 ]
  %19 = phi i32 [ 0, %9 ], [ %67, %66 ]
  %20 = icmp slt i32 %19, %7
  br i1 %20, label %21, label %66

21:                                               ; preds = %17, %46
  %22 = phi i64 [ %64, %46 ], [ %18, %17 ]
  %23 = phi i32 [ %49, %46 ], [ 0, %17 ]
  %24 = phi i32 [ %63, %46 ], [ 0, %17 ]
  %25 = phi i32 [ %47, %46 ], [ %19, %17 ]
  %26 = load i32, i32* %10, align 4
  %27 = add nsw i32 %26, %23
  %28 = icmp sgt i32 %27, 0
  %29 = load i32, i32* %11, align 8
  br i1 %28, label %30, label %46

30:                                               ; preds = %21
  %31 = sext i32 %25 to i64
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi i64 [ %31, %30 ], [ %41, %32 ]
  %34 = phi i32 [ %27, %30 ], [ %36, %32 ]
  %35 = phi i32 [ %24, %30 ], [ %40, %32 ]
  %36 = sub nsw i32 %34, %29
  %37 = getelementptr inbounds i8, i8* %1, i64 %33
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = add i32 %35, %39
  %41 = add i64 %33, %14
  %42 = icmp sgt i32 %36, 0
  br i1 %42, label %32, label %43

43:                                               ; preds = %32
  %44 = zext i8 %38 to i32
  %45 = trunc i64 %41 to i32
  br label %46

46:                                               ; preds = %21, %43
  %47 = phi i32 [ %45, %43 ], [ %25, %21 ]
  %48 = phi i32 [ %40, %43 ], [ %24, %21 ]
  %49 = phi i32 [ %36, %43 ], [ %27, %21 ]
  %50 = phi i32 [ %44, %43 ], [ 0, %21 ]
  %51 = mul i32 %50, %49
  %52 = sub i32 0, %51
  %53 = mul i32 %29, %48
  %54 = add i32 %53, %51
  %55 = load i32*, i32** %12, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %22
  store i32 %54, i32* %56, align 4
  %57 = zext i32 %52 to i64
  %58 = load i32, i32* %13, align 4
  %59 = zext i32 %58 to i64
  %60 = mul nuw i64 %59, %57
  %61 = add nuw i64 %60, 2147483648
  %62 = lshr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = add i64 %22, %14
  %65 = icmp slt i64 %64, %15
  br i1 %65, label %21, label %66

66:                                               ; preds = %46, %17
  %67 = add nuw nsw i32 %19, 1
  %68 = add nuw nsw i64 %18, 1
  %69 = icmp eq i64 %68, %16
  br i1 %69, label %70, label %17

70:                                               ; preds = %66, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPRescalerExportRowExpand_C(%struct.WebPRescaler* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 17
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 19
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = mul i32 %9, %7
  %11 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 20
  %12 = load i32*, i32** %11, align 8
  %13 = bitcast i32* %12 to i8*
  %14 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %118

17:                                               ; preds = %1
  %18 = icmp sgt i32 %10, 0
  br i1 %18, label %19, label %158

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 4
  %21 = zext i32 %10 to i64
  %22 = icmp ult i32 %10, 4
  br i1 %22, label %63, label %23

23:                                               ; preds = %19
  %24 = getelementptr i8, i8* %3, i64 %21
  %25 = getelementptr i32, i32* %12, i64 %21
  %26 = bitcast i32* %25 to i8*
  %27 = getelementptr %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 4
  %28 = bitcast i32* %27 to i8*
  %29 = getelementptr i8, i8* %28, i64 1
  %30 = icmp ult i8* %3, %26
  %31 = icmp ugt i8* %24, %13
  %32 = and i1 %30, %31
  %33 = bitcast i32* %20 to i8*
  %34 = icmp ult i8* %3, %29
  %35 = icmp ugt i8* %24, %33
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  br i1 %37, label %63, label %38

38:                                               ; preds = %23
  %39 = and i64 %21, 4294967292
  %40 = load i32, i32* %20, align 8, !alias.scope !2
  %41 = insertelement <4 x i32> undef, i32 %40, i32 0
  %42 = shufflevector <4 x i32> %41, <4 x i32> undef, <4 x i32> zeroinitializer
  %43 = zext <4 x i32> %42 to <4 x i64>
  br label %44

44:                                               ; preds = %44, %38
  %45 = phi i64 [ 0, %38 ], [ %59, %44 ]
  %46 = getelementptr inbounds i32, i32* %12, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4, !alias.scope !5
  %49 = zext <4 x i32> %48 to <4 x i64>
  %50 = mul nuw <4 x i64> %43, %49
  %51 = add nuw <4 x i64> %50, <i64 2147483648, i64 2147483648, i64 2147483648, i64 2147483648>
  %52 = lshr <4 x i64> %51, <i64 32, i64 32, i64 32, i64 32>
  %53 = trunc <4 x i64> %52 to <4 x i32>
  %54 = icmp sgt <4 x i32> %53, <i32 255, i32 255, i32 255, i32 255>
  %55 = trunc <4 x i64> %52 to <4 x i8>
  %56 = select <4 x i1> %54, <4 x i8> <i8 -1, i8 -1, i8 -1, i8 -1>, <4 x i8> %55
  %57 = getelementptr inbounds i8, i8* %3, i64 %45
  %58 = bitcast i8* %57 to <4 x i8>*
  store <4 x i8> %56, <4 x i8>* %58, align 1, !alias.scope !7, !noalias !9
  %59 = add i64 %45, 4
  %60 = icmp eq i64 %59, %39
  br i1 %60, label %61, label %44, !llvm.loop !10

61:                                               ; preds = %44
  %62 = icmp eq i64 %39, %21
  br i1 %62, label %158, label %63

63:                                               ; preds = %61, %23, %19
  %64 = phi i64 [ 0, %23 ], [ 0, %19 ], [ %39, %61 ]
  %65 = xor i64 %64, -1
  %66 = and i64 %21, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i32, i32* %12, i64 %64
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = load i32, i32* %20, align 8
  %73 = zext i32 %72 to i64
  %74 = mul nuw i64 %73, %71
  %75 = add nuw i64 %74, 2147483648
  %76 = lshr i64 %75, 32
  %77 = trunc i64 %76 to i32
  %78 = icmp sgt i32 %77, 255
  %79 = trunc i64 %76 to i8
  %80 = select i1 %78, i8 -1, i8 %79
  %81 = getelementptr inbounds i8, i8* %3, i64 %64
  store i8 %80, i8* %81, align 1
  %82 = or i64 %64, 1
  br label %83

83:                                               ; preds = %63, %68
  %84 = phi i64 [ %64, %63 ], [ %82, %68 ]
  %85 = sub nsw i64 0, %21
  %86 = icmp eq i64 %65, %85
  br i1 %86, label %158, label %87

87:                                               ; preds = %83, %87
  %88 = phi i64 [ %116, %87 ], [ %84, %83 ]
  %89 = getelementptr inbounds i32, i32* %12, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = load i32, i32* %20, align 8
  %93 = zext i32 %92 to i64
  %94 = mul nuw i64 %93, %91
  %95 = add nuw i64 %94, 2147483648
  %96 = lshr i64 %95, 32
  %97 = trunc i64 %96 to i32
  %98 = icmp sgt i32 %97, 255
  %99 = trunc i64 %96 to i8
  %100 = select i1 %98, i8 -1, i8 %99
  %101 = getelementptr inbounds i8, i8* %3, i64 %88
  store i8 %100, i8* %101, align 1
  %102 = add nuw nsw i64 %88, 1
  %103 = getelementptr inbounds i32, i32* %12, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = load i32, i32* %20, align 8
  %107 = zext i32 %106 to i64
  %108 = mul nuw i64 %107, %105
  %109 = add nuw i64 %108, 2147483648
  %110 = lshr i64 %109, 32
  %111 = trunc i64 %110 to i32
  %112 = icmp sgt i32 %111, 255
  %113 = trunc i64 %110 to i8
  %114 = select i1 %112, i8 -1, i8 %113
  %115 = getelementptr inbounds i8, i8* %3, i64 %102
  store i8 %114, i8* %115, align 1
  %116 = add nuw nsw i64 %88, 2
  %117 = icmp eq i64 %116, %21
  br i1 %117, label %158, label %87, !llvm.loop !12

118:                                              ; preds = %1
  %119 = sub nsw i32 0, %15
  %120 = zext i32 %119 to i64
  %121 = shl nuw i64 %120, 32
  %122 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 8
  %123 = load i32, i32* %122, align 8
  %124 = sext i32 %123 to i64
  %125 = udiv i64 %121, %124
  %126 = and i64 %125, 4294967295
  %127 = icmp sgt i32 %10, 0
  br i1 %127, label %128, label %158

128:                                              ; preds = %118
  %129 = sub i64 0, %125
  %130 = and i64 %129, 4294967295
  %131 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 4
  %132 = zext i32 %10 to i64
  br label %133

133:                                              ; preds = %133, %128
  %134 = phi i64 [ 0, %128 ], [ %156, %133 ]
  %135 = getelementptr inbounds i32, i32* %12, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = mul nuw i64 %130, %137
  %139 = getelementptr inbounds i32, i32* %5, i64 %134
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i64
  %142 = mul nuw i64 %126, %141
  %143 = add i64 %138, 2147483648
  %144 = add i64 %143, %142
  %145 = lshr i64 %144, 32
  %146 = load i32, i32* %131, align 8
  %147 = zext i32 %146 to i64
  %148 = mul nuw i64 %145, %147
  %149 = add nuw i64 %148, 2147483648
  %150 = lshr i64 %149, 32
  %151 = trunc i64 %150 to i32
  %152 = icmp sgt i32 %151, 255
  %153 = trunc i64 %150 to i8
  %154 = select i1 %152, i8 -1, i8 %153
  %155 = getelementptr inbounds i8, i8* %3, i64 %134
  store i8 %154, i8* %155, align 1
  %156 = add nuw nsw i64 %134, 1
  %157 = icmp eq i64 %156, %132
  br i1 %157, label %158, label %133

158:                                              ; preds = %133, %83, %87, %61, %118, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPRescalerExportRowShrink_C(%struct.WebPRescaler* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 17
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 19
  %5 = load i32*, i32** %4, align 8
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 13
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = mul i32 %10, %8
  %12 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 20
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = mul i32 %17, %15
  %19 = sub i32 0, %18
  %20 = icmp eq i32 %18, 0
  %21 = icmp sgt i32 %11, 0
  br i1 %20, label %27, label %22

22:                                               ; preds = %1
  br i1 %21, label %23, label %156

23:                                               ; preds = %22
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 5
  %26 = zext i32 %11 to i64
  br label %101

27:                                               ; preds = %1
  br i1 %21, label %28, label %156

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 5
  %30 = zext i32 %11 to i64
  %31 = icmp ult i32 %11, 4
  br i1 %31, label %32, label %56

32:                                               ; preds = %99, %56, %28
  %33 = phi i64 [ 0, %56 ], [ 0, %28 ], [ %76, %99 ]
  %34 = xor i64 %33, -1
  %35 = and i64 %30, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds i32, i32* %5, i64 %33
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = load i32, i32* %29, align 4
  %42 = zext i32 %41 to i64
  %43 = mul nuw i64 %42, %40
  %44 = add nuw i64 %43, 2147483648
  %45 = lshr i64 %44, 32
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, 255
  %48 = trunc i64 %45 to i8
  %49 = select i1 %47, i8 -1, i8 %48
  %50 = getelementptr inbounds i8, i8* %3, i64 %33
  store i8 %49, i8* %50, align 1
  store i32 0, i32* %38, align 4
  %51 = or i64 %33, 1
  br label %52

52:                                               ; preds = %32, %37
  %53 = phi i64 [ %33, %32 ], [ %51, %37 ]
  %54 = sub nsw i64 0, %30
  %55 = icmp eq i64 %34, %54
  br i1 %55, label %156, label %125

56:                                               ; preds = %28
  %57 = getelementptr i8, i8* %3, i64 %30
  %58 = getelementptr i32, i32* %5, i64 %30
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 5
  %61 = bitcast i32* %60 to i8*
  %62 = getelementptr i8, i8* %61, i64 1
  %63 = icmp ult i8* %3, %59
  %64 = icmp ugt i8* %57, %6
  %65 = and i1 %63, %64
  %66 = bitcast i32* %29 to i8*
  %67 = icmp ult i8* %3, %62
  %68 = icmp ugt i8* %57, %66
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = icmp ugt i8* %62, %6
  %72 = icmp ult i32* %29, %58
  %73 = and i1 %71, %72
  %74 = or i1 %70, %73
  br i1 %74, label %32, label %75

75:                                               ; preds = %56
  %76 = and i64 %30, 4294967292
  %77 = load i32, i32* %29, align 4, !alias.scope !13
  %78 = insertelement <4 x i32> undef, i32 %77, i32 0
  %79 = shufflevector <4 x i32> %78, <4 x i32> undef, <4 x i32> zeroinitializer
  %80 = zext <4 x i32> %79 to <4 x i64>
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ 0, %75 ], [ %97, %81 ]
  %83 = getelementptr inbounds i32, i32* %5, i64 %82
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !16, !noalias !13
  %86 = zext <4 x i32> %85 to <4 x i64>
  %87 = mul nuw <4 x i64> %80, %86
  %88 = add nuw <4 x i64> %87, <i64 2147483648, i64 2147483648, i64 2147483648, i64 2147483648>
  %89 = lshr <4 x i64> %88, <i64 32, i64 32, i64 32, i64 32>
  %90 = trunc <4 x i64> %89 to <4 x i32>
  %91 = icmp sgt <4 x i32> %90, <i32 255, i32 255, i32 255, i32 255>
  %92 = trunc <4 x i64> %89 to <4 x i8>
  %93 = select <4 x i1> %91, <4 x i8> <i8 -1, i8 -1, i8 -1, i8 -1>, <4 x i8> %92
  %94 = getelementptr inbounds i8, i8* %3, i64 %82
  %95 = bitcast i8* %94 to <4 x i8>*
  store <4 x i8> %93, <4 x i8>* %95, align 1, !alias.scope !18, !noalias !20
  %96 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %96, align 4, !alias.scope !16, !noalias !13
  %97 = add i64 %82, 4
  %98 = icmp eq i64 %97, %76
  br i1 %98, label %99, label %81, !llvm.loop !21

99:                                               ; preds = %81
  %100 = icmp eq i64 %76, %30
  br i1 %100, label %156, label %32

101:                                              ; preds = %101, %23
  %102 = phi i64 [ 0, %23 ], [ %123, %101 ]
  %103 = getelementptr inbounds i32, i32* %13, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = mul nuw i64 %105, %24
  %107 = lshr i64 %106, 32
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds i32, i32* %5, i64 %102
  %110 = load i32, i32* %109, align 4
  %111 = sub i32 %110, %108
  %112 = zext i32 %111 to i64
  %113 = load i32, i32* %25, align 4
  %114 = zext i32 %113 to i64
  %115 = mul nuw i64 %112, %114
  %116 = add nuw i64 %115, 2147483648
  %117 = lshr i64 %116, 32
  %118 = trunc i64 %117 to i32
  %119 = icmp sgt i32 %118, 255
  %120 = trunc i64 %117 to i8
  %121 = select i1 %119, i8 -1, i8 %120
  %122 = getelementptr inbounds i8, i8* %3, i64 %102
  store i8 %121, i8* %122, align 1
  store i32 %108, i32* %109, align 4
  %123 = add nuw nsw i64 %102, 1
  %124 = icmp eq i64 %123, %26
  br i1 %124, label %156, label %101

125:                                              ; preds = %52, %125
  %126 = phi i64 [ %154, %125 ], [ %53, %52 ]
  %127 = getelementptr inbounds i32, i32* %5, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i64
  %130 = load i32, i32* %29, align 4
  %131 = zext i32 %130 to i64
  %132 = mul nuw i64 %131, %129
  %133 = add nuw i64 %132, 2147483648
  %134 = lshr i64 %133, 32
  %135 = trunc i64 %134 to i32
  %136 = icmp sgt i32 %135, 255
  %137 = trunc i64 %134 to i8
  %138 = select i1 %136, i8 -1, i8 %137
  %139 = getelementptr inbounds i8, i8* %3, i64 %126
  store i8 %138, i8* %139, align 1
  store i32 0, i32* %127, align 4
  %140 = add nuw nsw i64 %126, 1
  %141 = getelementptr inbounds i32, i32* %5, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  %144 = load i32, i32* %29, align 4
  %145 = zext i32 %144 to i64
  %146 = mul nuw i64 %145, %143
  %147 = add nuw i64 %146, 2147483648
  %148 = lshr i64 %147, 32
  %149 = trunc i64 %148 to i32
  %150 = icmp sgt i32 %149, 255
  %151 = trunc i64 %148 to i8
  %152 = select i1 %150, i8 -1, i8 %151
  %153 = getelementptr inbounds i8, i8* %3, i64 %140
  store i8 %152, i8* %153, align 1
  store i32 0, i32* %141, align 4
  %154 = add nuw nsw i64 %126, 2
  %155 = icmp eq i64 %154, %30
  br i1 %155, label %156, label %125, !llvm.loop !22

156:                                              ; preds = %101, %52, %125, %99, %22, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPRescalerImportRow(%struct.WebPRescaler*, i8*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = load void (%struct.WebPRescaler*, i8*)*, void (%struct.WebPRescaler*, i8*)** @WebPRescalerImportRowShrink, align 8
  tail call void %7(%struct.WebPRescaler* %0, i8* %1) #2
  br label %10

8:                                                ; preds = %2
  %9 = load void (%struct.WebPRescaler*, i8*)*, void (%struct.WebPRescaler*, i8*)** @WebPRescalerImportRowExpand, align 8
  tail call void %9(%struct.WebPRescaler* %0, i8* %1) #2
  br label %10

10:                                               ; preds = %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @WebPRescalerExportRow(%struct.WebPRescaler*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %57

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = load void (%struct.WebPRescaler*)*, void (%struct.WebPRescaler*)** @WebPRescalerExportRowExpand, align 8
  tail call void %10(%struct.WebPRescaler* %0) #2
  br label %43

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 13
  %19 = load i32, i32* %18, align 4
  %20 = mul nsw i32 %19, %17
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %43

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 19
  %24 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 17
  br label %27

25:                                               ; preds = %11
  %26 = load void (%struct.WebPRescaler*)*, void (%struct.WebPRescaler*)** @WebPRescalerExportRowShrink, align 8
  tail call void %26(%struct.WebPRescaler* %0) #2
  br label %43

27:                                               ; preds = %22, %27
  %28 = phi i64 [ 0, %22 ], [ %37, %27 ]
  %29 = load i32*, i32** %23, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 %28
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i8
  %33 = load i8*, i8** %24, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %28
  store i8 %32, i8* %34, align 1
  %35 = load i32*, i32** %23, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 %28
  store i32 0, i32* %36, align 4
  %37 = add nuw nsw i64 %28, 1
  %38 = load i32, i32* %16, align 8
  %39 = load i32, i32* %18, align 4
  %40 = mul nsw i32 %39, %38
  %41 = sext i32 %40 to i64
  %42 = icmp slt i64 %37, %41
  br i1 %42, label %27, label %43

43:                                               ; preds = %27, %15, %25, %9
  %44 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 7
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %2, align 8
  %47 = add nsw i32 %46, %45
  store i32 %47, i32* %2, align 8
  %48 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 18
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 17
  %51 = load i8*, i8** %50, align 8
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  store i8* %53, i8** %50, align 8
  %54 = getelementptr inbounds %struct.WebPRescaler, %struct.WebPRescaler* %0, i64 0, i32 16
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %54, align 8
  br label %57

57:                                               ; preds = %43, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebPRescalerDspInit() local_unnamed_addr #0 {
  %1 = load volatile i32 (i32)*, i32 (i32)** @WebPRescalerDspInit.WebPRescalerDspInit_body_last_cpuinfo_used, align 8
  %2 = load i32 (i32)*, i32 (i32)** @VP8GetCPUInfo, align 8
  %3 = icmp eq i32 (i32)* %1, %2
  br i1 %3, label %6, label %4

4:                                                ; preds = %0
  %5 = ptrtoint i32 (i32)* %2 to i64
  store volatile i64 %5, i64* bitcast (i32 (i32)** @WebPRescalerDspInit.WebPRescalerDspInit_body_last_cpuinfo_used to i64*), align 8
  br label %6

6:                                                ; preds = %0, %4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !4}
!9 = !{!6, !3}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = !{!19}
!19 = distinct !{!19, !15}
!20 = !{!17, !14}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !11}
