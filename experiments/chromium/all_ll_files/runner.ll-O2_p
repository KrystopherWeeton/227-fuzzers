; ModuleID = '../../gin/runner.cc'
source_filename = "../../gin/runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gin::Runner" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.gin::Runner::Scope" = type { %"class.v8::Isolate::Scope", %"class.v8::HandleScope", %"class.v8::Context::Scope" }
%"class.v8::Isolate::Scope" = type { %"class.v8::Isolate"* }
%"class.v8::Isolate" = type { i8 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Context::Scope" = type { %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque

@_ZTVN3gin6RunnerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::Runner"*)* @_ZN3gin6RunnerD2Ev to i8*), i8* bitcast (void (%"class.gin::Runner"*)* @_ZN3gin6RunnerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3gin6RunnerD1Ev = hidden unnamed_addr alias void (%"class.gin::Runner"*), void (%"class.gin::Runner"*)* @_ZN3gin6RunnerD2Ev
@_ZN3gin6Runner5ScopeC1EPS0_ = hidden unnamed_addr alias void (%"class.gin::Runner::Scope"*, %"class.gin::Runner"*), void (%"class.gin::Runner::Scope"*, %"class.gin::Runner"*)* @_ZN3gin6Runner5ScopeC2EPS0_
@_ZN3gin6Runner5ScopeD1Ev = hidden unnamed_addr alias void (%"class.gin::Runner::Scope"*), void (%"class.gin::Runner::Scope"*)* @_ZN3gin6Runner5ScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin6RunnerC2Ev(%"class.gin::Runner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::Runner", %"class.gin::Runner"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin6RunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::Runner", %"class.gin::Runner"* %0, i64 0, i32 1, i32 0
  %4 = ptrtoint %"class.gin::Runner"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %3, i64 %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin6RunnerD2Ev(%"class.gin::Runner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::Runner", %"class.gin::Runner"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin6RunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::Runner", %"class.gin::Runner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gin6RunnerD0Ev(%"class.gin::Runner"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin6Runner5ScopeC2EPS0_(%"class.gin::Runner::Scope"*, %"class.gin::Runner"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gin::Runner"* %1 to %"class.gin::ContextHolder"* (%"class.gin::Runner"*)***
  %4 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)**, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %4, i64 3
  %6 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %5, align 8
  %7 = tail call %"class.gin::ContextHolder"* %6(%"class.gin::Runner"* %1) #5
  %8 = getelementptr inbounds %"class.gin::ContextHolder", %"class.gin::ContextHolder"* %7, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 0, i32 0
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %10, align 8
  tail call void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"* %9) #5
  %11 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 1
  %12 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)**, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*** %3, align 8
  %13 = getelementptr inbounds %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %12, i64 3
  %14 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %13, align 8
  %15 = tail call %"class.gin::ContextHolder"* %14(%"class.gin::Runner"* %1) #5
  %16 = getelementptr inbounds %"class.gin::ContextHolder", %"class.gin::ContextHolder"* %15, i64 0, i32 0
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  tail call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* %11, %"class.v8::Isolate"* %17) #5
  %18 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)**, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*** %3, align 8
  %19 = getelementptr inbounds %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %18, i64 3
  %20 = load %"class.gin::ContextHolder"* (%"class.gin::Runner"*)*, %"class.gin::ContextHolder"* (%"class.gin::Runner"*)** %19, align 8
  %21 = tail call %"class.gin::ContextHolder"* %20(%"class.gin::Runner"* %1) #5
  %22 = getelementptr inbounds %"class.gin::ContextHolder", %"class.gin::ContextHolder"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.v8::Context"*, %"class.v8::Context"** %22, align 8
  %24 = icmp eq %"class.v8::Context"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.gin::ContextHolder"* %21 to %"class.v8::internal::Isolate"**
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %26, align 8
  %28 = bitcast %"class.v8::Context"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %29) #5
  %31 = bitcast i64* %30 to %"class.v8::Context"*
  br label %32

32:                                               ; preds = %2, %25
  %33 = phi %"class.v8::Context"* [ %31, %25 ], [ null, %2 ]
  %34 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.v8::Context"* %33, %"class.v8::Context"** %34, align 8
  tail call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %33) #5
  ret void
}

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin6Runner5ScopeD2Ev(%"class.gin::Runner::Scope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.v8::Context"*, %"class.v8::Context"** %2, align 8
  tail call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %3) #5
  %4 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 1
  tail call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %4) #5
  %5 = getelementptr inbounds %"class.gin::Runner::Scope", %"class.gin::Runner::Scope"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  tail call void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"* %6) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN2v87Isolate5EnterEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #4

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #4

declare void @_ZN2v87Isolate4ExitEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
