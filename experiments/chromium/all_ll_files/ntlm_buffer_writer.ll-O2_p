; ModuleID = '../../net/ntlm/ntlm_buffer_writer.cc'
source_filename = "../../net/ntlm/ntlm_buffer_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ntlm::NtlmBufferWriter" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.net::ntlm::AvPair" = type { %"class.std::__1::vector", i64, i32, i16, i16 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.11 }
%struct.anon.11 = type { %"struct.std::__1::__padding.12", i8 }
%"struct.std::__1::__padding.12" = type { [1 x i8] }

@_ZN3net4ntlm16NtlmBufferWriterC1Em = hidden unnamed_addr alias void (%"class.net::ntlm::NtlmBufferWriter"*, i64), void (%"class.net::ntlm::NtlmBufferWriter"*, i64)* @_ZN3net4ntlm16NtlmBufferWriterC2Em
@_ZN3net4ntlm16NtlmBufferWriterD1Ev = hidden unnamed_addr alias void (%"class.net::ntlm::NtlmBufferWriter"*), void (%"class.net::ntlm::NtlmBufferWriter"*)* @_ZN3net4ntlm16NtlmBufferWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm16NtlmBufferWriterC2Em(%"class.net::ntlm::NtlmBufferWriter"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::ntlm::NtlmBufferWriter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = icmp slt i64 %1, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = bitcast %"class.net::ntlm::NtlmBufferWriter"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %8) #10
  unreachable

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 %1) #11
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 %1
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 %1, i1 false)
  %15 = bitcast i8** %11 to i64*
  %16 = ptrtoint i8* %13 to i64
  store i64 %16, i64* %15, align 8
  br label %17

17:                                               ; preds = %2, %9
  %18 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  store i64 0, i64* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm16NtlmBufferWriterD2Ev(%"class.net::ntlm::NtlmBufferWriter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #11
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net4ntlm16NtlmBufferWriter8CanWriteEm(%"class.net::ntlm::NtlmBufferWriter"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %4
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %9
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %13, %1
  %19 = icmp ule i64 %17, %18
  br label %20

20:                                               ; preds = %15, %8, %4, %2
  %21 = phi i1 [ true, %2 ], [ false, %4 ], [ false, %8 ], [ %19, %15 ]
  ret i1 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter11WriteUInt16Et(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i16 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %29, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -2
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %13
  %19 = trunc i16 %1 to i8
  %20 = getelementptr inbounds i8, i8* %4, i64 %15
  store i8 %19, i8* %20, align 1
  %21 = lshr i16 %1, 8
  %22 = trunc i16 %21 to i8
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %14, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %22, i8* %26, align 1
  %27 = load i64, i64* %14, align 8
  %28 = add i64 %27, 2
  store i64 %28, i64* %14, align 8
  br label %29

29:                                               ; preds = %2, %6, %13, %18
  %30 = phi i1 [ true, %18 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter11WriteUInt32Ej(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 4
  br i1 %12, label %41, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -4
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %41, label %18

18:                                               ; preds = %13
  %19 = trunc i32 %1 to i8
  %20 = getelementptr inbounds i8, i8* %4, i64 %15
  store i8 %19, i8* %20, align 1
  %21 = lshr i32 %1, 8
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %14, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %22, i8* %26, align 1
  %27 = lshr i32 %1, 16
  %28 = trunc i32 %27 to i8
  %29 = load i8*, i8** %3, align 8
  %30 = load i64, i64* %14, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %28, i8* %32, align 1
  %33 = lshr i32 %1, 24
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %3, align 8
  %36 = load i64, i64* %14, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %34, i8* %38, align 1
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, 4
  store i64 %40, i64* %14, align 8
  br label %41

41:                                               ; preds = %2, %6, %13, %18
  %42 = phi i1 [ true, %18 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter11WriteUInt64Em(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 8
  br i1 %12, label %65, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -8
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %65, label %18

18:                                               ; preds = %13
  %19 = trunc i64 %1 to i8
  %20 = getelementptr inbounds i8, i8* %4, i64 %15
  store i8 %19, i8* %20, align 1
  %21 = lshr i64 %1, 8
  %22 = trunc i64 %21 to i8
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %14, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %22, i8* %26, align 1
  %27 = lshr i64 %1, 16
  %28 = trunc i64 %27 to i8
  %29 = load i8*, i8** %3, align 8
  %30 = load i64, i64* %14, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %28, i8* %32, align 1
  %33 = lshr i64 %1, 24
  %34 = trunc i64 %33 to i8
  %35 = load i8*, i8** %3, align 8
  %36 = load i64, i64* %14, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %34, i8* %38, align 1
  %39 = lshr i64 %1, 32
  %40 = trunc i64 %39 to i8
  %41 = load i8*, i8** %3, align 8
  %42 = load i64, i64* %14, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 4
  store i8 %40, i8* %44, align 1
  %45 = lshr i64 %1, 40
  %46 = trunc i64 %45 to i8
  %47 = load i8*, i8** %3, align 8
  %48 = load i64, i64* %14, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = getelementptr inbounds i8, i8* %49, i64 5
  store i8 %46, i8* %50, align 1
  %51 = lshr i64 %1, 48
  %52 = trunc i64 %51 to i8
  %53 = load i8*, i8** %3, align 8
  %54 = load i64, i64* %14, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = getelementptr inbounds i8, i8* %55, i64 6
  store i8 %52, i8* %56, align 1
  %57 = lshr i64 %1, 56
  %58 = trunc i64 %57 to i8
  %59 = load i8*, i8** %3, align 8
  %60 = load i64, i64* %14, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 7
  store i8 %58, i8* %62, align 1
  %63 = load i64, i64* %14, align 8
  %64 = add i64 %63, 8
  store i64 %64, i64* %14, align 8
  br label %65

65:                                               ; preds = %2, %6, %13, %18
  %66 = phi i1 [ true, %18 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %66
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter10WriteFlagsENS0_14NegotiateFlagsE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 4
  br i1 %12, label %41, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -4
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %41, label %18

18:                                               ; preds = %13
  %19 = trunc i32 %1 to i8
  %20 = getelementptr inbounds i8, i8* %4, i64 %15
  store i8 %19, i8* %20, align 1
  %21 = lshr i32 %1, 8
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %14, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %22, i8* %26, align 1
  %27 = lshr i32 %1, 16
  %28 = trunc i32 %27 to i8
  %29 = load i8*, i8** %3, align 8
  %30 = load i64, i64* %14, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %28, i8* %32, align 1
  %33 = lshr i32 %1, 24
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %3, align 8
  %36 = load i64, i64* %14, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %34, i8* %38, align 1
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, 4
  store i64 %40, i64* %14, align 8
  br label %41

41:                                               ; preds = %2, %6, %13, %18
  %42 = phi i1 [ true, %18 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter10WriteBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %10
  %15 = icmp ult i64 %14, %1
  br i1 %15, label %25, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %14, %1
  %20 = icmp ugt i64 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds i8, i8* %7, i64 %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %2, i64 %1, i1 false)
  %23 = load i64, i64* %17, align 8
  %24 = add i64 %23, %1
  store i64 %24, i64* %17, align 8
  br label %25

25:                                               ; preds = %16, %9, %5, %3, %21
  %26 = phi i1 [ true, %21 ], [ true, %3 ], [ false, %16 ], [ false, %5 ], [ false, %9 ]
  ret i1 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter10WriteZerosEm(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %9
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %24, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %13, %1
  %19 = icmp ugt i64 %17, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %6, i64 %17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 %1, i1 false)
  %22 = load i64, i64* %16, align 8
  %23 = add i64 %22, %1
  store i64 %23, i64* %16, align 8
  br label %24

24:                                               ; preds = %15, %8, %4, %2, %20
  %25 = phi i1 [ true, %20 ], [ true, %2 ], [ false, %15 ], [ false, %4 ], [ false, %8 ]
  ret i1 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter19WriteSecurityBufferENS0_14SecurityBufferE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %2
  %9 = ptrtoint i8* %6 to i64
  %10 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %9
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %82, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %13, -2
  %19 = icmp ugt i64 %17, %18
  br i1 %19, label %82, label %20

20:                                               ; preds = %15
  %21 = trunc i64 %4 to i8
  %22 = getelementptr inbounds i8, i8* %6, i64 %17
  store i8 %21, i8* %22, align 1
  %23 = lshr i64 %1, 40
  %24 = trunc i64 %23 to i8
  %25 = load i8*, i8** %5, align 8
  %26 = load i64, i64* %16, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 %24, i8* %28, align 1
  %29 = load i64, i64* %16, align 8
  %30 = add i64 %29, 2
  store i64 %30, i64* %16, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %82, label %33

33:                                               ; preds = %20
  %34 = ptrtoint i8* %31 to i64
  %35 = load i64, i64* %11, align 8
  %36 = sub i64 %35, %34
  %37 = icmp ult i64 %36, 2
  %38 = add i64 %36, -2
  %39 = icmp ugt i64 %30, %38
  %40 = or i1 %37, %39
  br i1 %40, label %82, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds i8, i8* %31, i64 %30
  store i8 %21, i8* %42, align 1
  %43 = load i8*, i8** %5, align 8
  %44 = load i64, i64* %16, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 %24, i8* %46, align 1
  %47 = load i64, i64* %16, align 8
  %48 = add i64 %47, 2
  store i64 %48, i64* %16, align 8
  %49 = load i8*, i8** %5, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %82, label %51

51:                                               ; preds = %41
  %52 = ptrtoint i8* %49 to i64
  %53 = load i64, i64* %11, align 8
  %54 = sub i64 %53, %52
  %55 = icmp ult i64 %54, 4
  %56 = add i64 %54, -4
  %57 = icmp ugt i64 %48, %56
  %58 = or i1 %55, %57
  br i1 %58, label %82, label %59

59:                                               ; preds = %51
  %60 = trunc i64 %1 to i8
  %61 = getelementptr inbounds i8, i8* %49, i64 %48
  store i8 %60, i8* %61, align 1
  %62 = lshr i32 %3, 8
  %63 = trunc i32 %62 to i8
  %64 = load i8*, i8** %5, align 8
  %65 = load i64, i64* %16, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  store i8 %63, i8* %67, align 1
  %68 = lshr i32 %3, 16
  %69 = trunc i32 %68 to i8
  %70 = load i8*, i8** %5, align 8
  %71 = load i64, i64* %16, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = getelementptr inbounds i8, i8* %72, i64 2
  store i8 %69, i8* %73, align 1
  %74 = lshr i32 %3, 24
  %75 = trunc i32 %74 to i8
  %76 = load i8*, i8** %5, align 8
  %77 = load i64, i64* %16, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = getelementptr inbounds i8, i8* %78, i64 3
  store i8 %75, i8* %79, align 1
  %80 = load i64, i64* %16, align 8
  %81 = add i64 %80, 4
  store i64 %81, i64* %16, align 8
  br label %82

82:                                               ; preds = %33, %20, %8, %2, %15, %59, %51, %41
  %83 = phi i1 [ true, %59 ], [ false, %41 ], [ false, %51 ], [ false, %15 ], [ false, %2 ], [ false, %8 ], [ false, %20 ], [ false, %33 ]
  ret i1 %83
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter17WriteAvPairHeaderENS0_14TargetInfoAvIdEt(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i16 zeroext, i16 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %54, label %7

7:                                                ; preds = %3
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %8
  %13 = icmp ult i64 %12, 4
  br i1 %13, label %54, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %12, -4
  %18 = icmp ugt i64 %16, %17
  %19 = add i64 %12, -2
  %20 = icmp ugt i64 %16, %19
  %21 = or i1 %18, %20
  br i1 %21, label %54, label %22

22:                                               ; preds = %14
  %23 = trunc i16 %1 to i8
  %24 = getelementptr inbounds i8, i8* %5, i64 %16
  store i8 %23, i8* %24, align 1
  %25 = lshr i16 %1, 8
  %26 = trunc i16 %25 to i8
  %27 = load i8*, i8** %4, align 8
  %28 = load i64, i64* %15, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 %26, i8* %30, align 1
  %31 = load i64, i64* %15, align 8
  %32 = add i64 %31, 2
  store i64 %32, i64* %15, align 8
  %33 = load i8*, i8** %4, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %22
  %36 = ptrtoint i8* %33 to i64
  %37 = load i64, i64* %10, align 8
  %38 = sub i64 %37, %36
  %39 = icmp ult i64 %38, 2
  %40 = add i64 %38, -2
  %41 = icmp ugt i64 %32, %40
  %42 = or i1 %39, %41
  br i1 %42, label %54, label %43

43:                                               ; preds = %35
  %44 = trunc i16 %2 to i8
  %45 = getelementptr inbounds i8, i8* %33, i64 %32
  store i8 %44, i8* %45, align 1
  %46 = lshr i16 %2, 8
  %47 = trunc i16 %46 to i8
  %48 = load i8*, i8** %4, align 8
  %49 = load i64, i64* %15, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 %47, i8* %51, align 1
  %52 = load i64, i64* %15, align 8
  %53 = add i64 %52, 2
  store i64 %53, i64* %15, align 8
  br label %54

54:                                               ; preds = %14, %7, %3, %43, %35, %22
  %55 = phi i1 [ false, %14 ], [ true, %43 ], [ false, %22 ], [ false, %35 ], [ false, %3 ], [ false, %7 ]
  ret i1 %55
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter21WriteAvPairTerminatorEv(%"class.net::ntlm::NtlmBufferWriter"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %6
  %11 = icmp ult i64 %10, 4
  br i1 %11, label %46, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %10, -4
  %16 = icmp ugt i64 %14, %15
  %17 = add i64 %10, -2
  %18 = icmp ugt i64 %14, %17
  %19 = or i1 %16, %18
  br i1 %19, label %46, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds i8, i8* %3, i64 %14
  store i8 0, i8* %21, align 1
  %22 = load i8*, i8** %2, align 8
  %23 = load i64, i64* %13, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 0, i8* %25, align 1
  %26 = load i64, i64* %13, align 8
  %27 = add i64 %26, 2
  store i64 %27, i64* %13, align 8
  %28 = load i8*, i8** %2, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %20
  %31 = ptrtoint i8* %28 to i64
  %32 = load i64, i64* %8, align 8
  %33 = sub i64 %32, %31
  %34 = icmp ult i64 %33, 2
  %35 = add i64 %33, -2
  %36 = icmp ugt i64 %27, %35
  %37 = or i1 %34, %36
  br i1 %37, label %46, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds i8, i8* %28, i64 %27
  store i8 0, i8* %39, align 1
  %40 = load i8*, i8** %2, align 8
  %41 = load i64, i64* %13, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  store i8 0, i8* %43, align 1
  %44 = load i64, i64* %13, align 8
  %45 = add i64 %44, 2
  store i64 %45, i64* %13, align 8
  br label %46

46:                                               ; preds = %1, %5, %12, %20, %30, %38
  %47 = phi i1 [ false, %12 ], [ true, %38 ], [ false, %20 ], [ false, %30 ], [ false, %1 ], [ false, %5 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter11WriteAvPairERKNS0_6AvPairE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, %"struct.net::ntlm::AvPair"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 3
  %4 = load i16, i16* %3, align 4
  %5 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 4
  %6 = load i16, i16* %5, align 2
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %122, label %10

10:                                               ; preds = %2
  %11 = ptrtoint i8* %8 to i64
  %12 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %11
  %16 = icmp ult i64 %15, 4
  br i1 %16, label %122, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %15, -4
  %21 = icmp ugt i64 %19, %20
  %22 = add i64 %15, -2
  %23 = icmp ugt i64 %19, %22
  %24 = or i1 %21, %23
  br i1 %24, label %122, label %25

25:                                               ; preds = %17
  %26 = trunc i16 %4 to i8
  %27 = getelementptr inbounds i8, i8* %8, i64 %19
  store i8 %26, i8* %27, align 1
  %28 = lshr i16 %4, 8
  %29 = trunc i16 %28 to i8
  %30 = load i8*, i8** %7, align 8
  %31 = load i64, i64* %18, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %29, i8* %33, align 1
  %34 = load i64, i64* %18, align 8
  %35 = add i64 %34, 2
  store i64 %35, i64* %18, align 8
  %36 = load i8*, i8** %7, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %122, label %38

38:                                               ; preds = %25
  %39 = ptrtoint i8* %36 to i64
  %40 = load i64, i64* %13, align 8
  %41 = sub i64 %40, %39
  %42 = icmp ult i64 %41, 2
  %43 = add i64 %41, -2
  %44 = icmp ugt i64 %35, %43
  %45 = or i1 %42, %44
  br i1 %45, label %122, label %46

46:                                               ; preds = %38
  %47 = trunc i16 %6 to i8
  %48 = getelementptr inbounds i8, i8* %36, i64 %35
  store i8 %47, i8* %48, align 1
  %49 = lshr i16 %6, 8
  %50 = trunc i16 %49 to i8
  %51 = load i8*, i8** %7, align 8
  %52 = load i64, i64* %18, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %50, i8* %54, align 1
  %55 = load i64, i64* %18, align 8
  %56 = add i64 %55, 2
  store i64 %56, i64* %18, align 8
  %57 = load i16, i16* %3, align 4
  %58 = icmp eq i16 %57, 6
  br i1 %58, label %59, label %98

59:                                               ; preds = %46
  %60 = load i16, i16* %5, align 2
  %61 = icmp eq i16 %60, 4
  br i1 %61, label %62, label %122

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = load i8*, i8** %7, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %122, label %67

67:                                               ; preds = %62
  %68 = ptrtoint i8* %65 to i64
  %69 = load i64, i64* %13, align 8
  %70 = sub i64 %69, %68
  %71 = icmp ult i64 %70, 4
  %72 = add i64 %70, -4
  %73 = icmp ugt i64 %56, %72
  %74 = or i1 %71, %73
  br i1 %74, label %122, label %75

75:                                               ; preds = %67
  %76 = trunc i32 %64 to i8
  %77 = getelementptr inbounds i8, i8* %65, i64 %56
  store i8 %76, i8* %77, align 1
  %78 = lshr i32 %64, 8
  %79 = trunc i32 %78 to i8
  %80 = load i8*, i8** %7, align 8
  %81 = load i64, i64* %18, align 8
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = getelementptr inbounds i8, i8* %82, i64 1
  store i8 %79, i8* %83, align 1
  %84 = lshr i32 %64, 16
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %7, align 8
  %87 = load i64, i64* %18, align 8
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = getelementptr inbounds i8, i8* %88, i64 2
  store i8 %85, i8* %89, align 1
  %90 = lshr i32 %64, 24
  %91 = trunc i32 %90 to i8
  %92 = load i8*, i8** %7, align 8
  %93 = load i64, i64* %18, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  %95 = getelementptr inbounds i8, i8* %94, i64 3
  store i8 %91, i8* %95, align 1
  %96 = load i64, i64* %18, align 8
  %97 = add i64 %96, 4
  store i64 %97, i64* %18, align 8
  br label %122

98:                                               ; preds = %46
  %99 = bitcast %"struct.net::ntlm::AvPair"* %1 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %103, %100
  %105 = inttoptr i64 %100 to i8*
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %98
  %108 = load i8*, i8** %7, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %122, label %110

110:                                              ; preds = %107
  %111 = ptrtoint i8* %108 to i64
  %112 = load i64, i64* %13, align 8
  %113 = sub i64 %112, %111
  %114 = icmp ult i64 %113, %104
  %115 = sub i64 %113, %104
  %116 = icmp ugt i64 %56, %115
  %117 = or i1 %114, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds i8, i8* %108, i64 %56
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %105, i64 %104, i1 false) #9
  %120 = load i64, i64* %18, align 8
  %121 = add i64 %120, %104
  store i64 %121, i64* %18, align 8
  br label %122

122:                                              ; preds = %10, %2, %38, %25, %17, %118, %110, %107, %98, %75, %67, %62, %59
  %123 = phi i1 [ false, %59 ], [ true, %75 ], [ false, %62 ], [ false, %67 ], [ true, %118 ], [ true, %98 ], [ false, %107 ], [ false, %110 ], [ false, %17 ], [ false, %25 ], [ false, %38 ], [ false, %2 ], [ false, %10 ]
  ret i1 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter15WriteUtf8StringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i8* %18 to i64
  %22 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %21
  %26 = icmp ult i64 %25, %14
  br i1 %26, label %36, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %25, %14
  %31 = icmp ugt i64 %29, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds i8, i8* %18, i64 %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %10, i64 %14, i1 false) #9
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, %14
  store i64 %35, i64* %28, align 8
  br label %36

36:                                               ; preds = %2, %16, %20, %27, %32
  %37 = phi i1 [ true, %32 ], [ true, %2 ], [ false, %27 ], [ false, %16 ], [ false, %20 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter22WriteUtf16AsUtf8StringERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, %"class.std::__1::basic_string.7"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string.7"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string.7"* %1 to i16*
  %15 = select i1 %11, i16* %13, i16* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i16* %15, i64 %19) #9
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i8*, i8** %5, align 8
  %25 = select i1 %23, i8* %24, i8* %4
  %26 = load i64, i64* %6, align 8
  %27 = zext i8 %22 to i64
  %28 = select i1 %23, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %30
  %35 = ptrtoint i8* %32 to i64
  %36 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %38, %35
  %40 = icmp ult i64 %39, %28
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %39, %28
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, i8* %32, i64 %43
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %25, i64 %28, i1 false) #9
  %48 = load i64, i64* %42, align 8
  %49 = add i64 %48, %28
  store i64 %49, i64* %42, align 8
  %50 = load i8, i8* %21, align 1
  br label %51

51:                                               ; preds = %2, %30, %34, %41, %46
  %52 = phi i8 [ %50, %46 ], [ %22, %2 ], [ %22, %41 ], [ %22, %30 ], [ %22, %34 ]
  %53 = phi i1 [ true, %46 ], [ true, %2 ], [ false, %41 ], [ false, %30 ], [ false, %34 ]
  %54 = icmp slt i8 %52, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %51, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %53
}

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter22WriteUtf8AsUtf16StringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.7", align 8
  %4 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = select i1 %10, i8* %12, i8* %13
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %9 to i64
  %18 = select i1 %10, i64 %16, i64 %17
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.7"* nonnull sret %3, i8* %14, i64 %18) #9
  %19 = bitcast %"class.std::__1::basic_string.7"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %62, label %29

27:                                               ; preds = %2
  %28 = zext i8 %21 to i64
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %28, %27 ], [ %25, %23 ]
  %31 = shl i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %58, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %58, label %37

37:                                               ; preds = %33
  %38 = ptrtoint i8* %35 to i64
  %39 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %38
  %43 = icmp ult i64 %42, %31
  br i1 %43, label %58, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %42, %31
  %48 = icmp ugt i64 %46, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds i8, i8* %35, i64 %46
  %51 = load i16*, i16** %5, align 8
  %52 = bitcast %"class.std::__1::basic_string.7"* %3 to i16*
  %53 = select i1 %22, i16* %51, i16* %52
  %54 = bitcast i16* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 2 %54, i64 %31, i1 false) #9
  %55 = load i64, i64* %45, align 8
  %56 = add i64 %55, %31
  store i64 %56, i64* %45, align 8
  %57 = load i8, i8* %20, align 1
  br label %58

58:                                               ; preds = %29, %33, %37, %44, %49
  %59 = phi i8 [ %21, %37 ], [ %21, %33 ], [ %21, %44 ], [ %21, %29 ], [ %57, %49 ]
  %60 = phi i1 [ false, %37 ], [ false, %33 ], [ false, %44 ], [ true, %29 ], [ true, %49 ]
  %61 = icmp slt i8 %59, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %23, %58
  %63 = phi i1 [ %60, %58 ], [ false, %23 ]
  %64 = bitcast %"class.std::__1::basic_string.7"* %3 to i8**
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi i1 [ %60, %58 ], [ %63, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i1 %67
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.7"* sret, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter16WriteUtf16StringERKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, %"class.std::__1::basic_string.7"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string.7"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, 0
  br i1 %10, label %42, label %13

11:                                               ; preds = %2
  %12 = zext i8 %5 to i64
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi i64 [ %12, %11 ], [ %9, %7 ]
  %15 = shl i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i8* %19 to i64
  %23 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %22
  %27 = icmp ult i64 %26, %15
  br i1 %27, label %42, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %26, %15
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %19, i64 %30
  %35 = getelementptr inbounds %"class.std::__1::basic_string.7", %"class.std::__1::basic_string.7"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string.7"* %1 to i16*
  %38 = select i1 %6, i16* %36, i16* %37
  %39 = bitcast i16* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 2 %39, i64 %15, i1 false)
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, %15
  store i64 %41, i64* %29, align 8
  br label %42

42:                                               ; preds = %28, %21, %17, %33, %13, %7
  %43 = phi i1 [ false, %7 ], [ true, %33 ], [ true, %13 ], [ false, %28 ], [ false, %17 ], [ false, %21 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter14WriteSignatureEv(%"class.net::ntlm::NtlmBufferWriter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %6
  %11 = icmp ult i64 %10, 8
  br i1 %11, label %22, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %10, -8
  %16 = icmp ugt i64 %14, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %3, i64 %14
  %19 = bitcast i8* %18 to i64*
  store i64 22609615381091406, i64* %19, align 1
  %20 = load i64, i64* %13, align 8
  %21 = add i64 %20, 8
  store i64 %21, i64* %13, align 8
  br label %22

22:                                               ; preds = %1, %5, %12, %17
  %23 = phi i1 [ true, %17 ], [ false, %12 ], [ false, %1 ], [ false, %5 ]
  ret i1 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter16WriteMessageTypeENS0_11MessageTypeE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 4
  br i1 %12, label %41, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -4
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %41, label %18

18:                                               ; preds = %13
  %19 = trunc i32 %1 to i8
  %20 = getelementptr inbounds i8, i8* %4, i64 %15
  store i8 %19, i8* %20, align 1
  %21 = lshr i32 %1, 8
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %14, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 %22, i8* %26, align 1
  %27 = lshr i32 %1, 16
  %28 = trunc i32 %27 to i8
  %29 = load i8*, i8** %3, align 8
  %30 = load i64, i64* %14, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 %28, i8* %32, align 1
  %33 = lshr i32 %1, 24
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %3, align 8
  %36 = load i64, i64* %14, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %34, i8* %38, align 1
  %39 = load i64, i64* %14, align 8
  %40 = add i64 %39, 4
  store i64 %40, i64* %14, align 8
  br label %41

41:                                               ; preds = %2, %6, %13, %18
  %42 = phi i1 [ true, %18 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %42
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net4ntlm16NtlmBufferWriter18WriteMessageHeaderENS0_11MessageTypeE(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %7
  %12 = icmp ult i64 %11, 8
  br i1 %12, label %56, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %11, -8
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %56, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %4, i64 %15
  %20 = bitcast i8* %19 to i64*
  store i64 22609615381091406, i64* %20, align 1
  %21 = load i64, i64* %14, align 8
  %22 = add i64 %21, 8
  store i64 %22, i64* %14, align 8
  %23 = load i8*, i8** %3, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %18
  %26 = ptrtoint i8* %23 to i64
  %27 = load i64, i64* %9, align 8
  %28 = sub i64 %27, %26
  %29 = icmp ult i64 %28, 4
  %30 = add i64 %28, -4
  %31 = icmp ugt i64 %22, %30
  %32 = or i1 %29, %31
  br i1 %32, label %56, label %33

33:                                               ; preds = %25
  %34 = trunc i32 %1 to i8
  %35 = getelementptr inbounds i8, i8* %23, i64 %22
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %1, 8
  %37 = trunc i32 %36 to i8
  %38 = load i8*, i8** %3, align 8
  %39 = load i64, i64* %14, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %37, i8* %41, align 1
  %42 = lshr i32 %1, 16
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %14, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %43, i8* %47, align 1
  %48 = lshr i32 %1, 24
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %3, align 8
  %51 = load i64, i64* %14, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 3
  store i8 %49, i8* %53, align 1
  %54 = load i64, i64* %14, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %14, align 8
  br label %56

56:                                               ; preds = %6, %2, %13, %33, %25, %18
  %57 = phi i1 [ true, %33 ], [ false, %18 ], [ false, %25 ], [ false, %13 ], [ false, %2 ], [ false, %6 ]
  ret i1 %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net4ntlm16NtlmBufferWriter9SetCursorEm(%"class.net::ntlm::NtlmBufferWriter"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::ntlm::NtlmBufferWriter", %"class.net::ntlm::NtlmBufferWriter"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
