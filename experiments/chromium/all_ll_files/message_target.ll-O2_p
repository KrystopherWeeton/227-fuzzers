; ModuleID = '../../extensions/renderer/message_target.cc'
source_filename = "../../extensions/renderer/message_target.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.extensions::MessageTarget" = type { i32, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.2", %"class.absl::optional.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions13MessageTargetC1EOS0_ = hidden unnamed_addr alias void (%"struct.extensions::MessageTarget"*, %"struct.extensions::MessageTarget"*), void (%"struct.extensions::MessageTarget"*, %"struct.extensions::MessageTarget"*)* @_ZN10extensions13MessageTargetC2EOS0_
@_ZN10extensions13MessageTargetC1ERKS0_ = hidden unnamed_addr alias void (%"struct.extensions::MessageTarget"*, %"struct.extensions::MessageTarget"*), void (%"struct.extensions::MessageTarget"*, %"struct.extensions::MessageTarget"*)* @_ZN10extensions13MessageTargetC2ERKS0_
@_ZN10extensions13MessageTargetD1Ev = hidden unnamed_addr alias void (%"struct.extensions::MessageTarget"*), void (%"struct.extensions::MessageTarget"*)* @_ZN10extensions13MessageTargetD2Ev
@_ZN10extensions13MessageTargetC1ENS0_4TypeE = hidden unnamed_addr alias void (%"struct.extensions::MessageTarget"*, i32), void (%"struct.extensions::MessageTarget"*, i32)* @_ZN10extensions13MessageTargetC2ENS0_4TypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTarget6ForTabEii(%"struct.extensions::MessageTarget"* noalias nocapture sret, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.extensions::MessageTarget"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false) #6
  %11 = bitcast %union.anon* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #6
  %12 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast i8* %12 to i64*
  %14 = zext i32 %1 to i64
  %15 = shl nuw i64 %14, 32
  %16 = or i64 %15, 1
  store i64 %16, i64* %13, align 8
  %17 = bitcast i8* %9 to i64*
  %18 = zext i32 %2 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, 1
  store i64 %20, i64* %17, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTarget12ForExtensionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.extensions::MessageTarget"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::MessageTarget"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 88, i1 false)
  %4 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = bitcast %union.anon* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #6
  %10 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false) #6
  %11 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #6
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %21, i64 %23) #6
  br label %24

24:                                               ; preds = %16, %19
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTarget12ForNativeAppERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.extensions::MessageTarget"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.extensions::MessageTarget"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 88, i1 false)
  %4 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  store i32 2, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = bitcast %union.anon* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #6
  %10 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false) #6
  %11 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #6
  br label %25

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %22, i64 %24) #6
  br label %25

25:                                               ; preds = %17, %20
  store i8 1, i8* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTargetC2EOS0_(%"struct.extensions::MessageTarget"* nocapture, %"struct.extensions::MessageTarget"* nocapture dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #6
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %6, align 8
  br label %15

15:                                               ; preds = %2, %10
  %16 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #6
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %16, align 8
  br label %25

25:                                               ; preds = %15, %20
  %26 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTargetC2ERKS0_(%"struct.extensions::MessageTarget"*, %"struct.extensions::MessageTarget"* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #6
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #6
  br label %25

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %22, i64 %24) #6
  br label %25

25:                                               ; preds = %20, %17
  store i8 1, i8* %6, align 8
  br label %26

26:                                               ; preds = %2, %25
  %27 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #6
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #6
  br label %46

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %43, i64 %45) #6
  br label %46

46:                                               ; preds = %41, %38
  store i8 1, i8* %27, align 8
  br label %47

47:                                               ; preds = %26, %46
  %48 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTargetD2Ev(%"struct.extensions::MessageTarget"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #7
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #7
  br label %28

28:                                               ; preds = %25, %19
  store i8 0, i8* %16, align 8
  br label %29

29:                                               ; preds = %15, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions13MessageTargeteqERKS0_(%"struct.extensions::MessageTarget"* nocapture readonly, %"struct.extensions::MessageTarget"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %180

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %11, true
  %17 = or i1 %15, %16
  br i1 %17, label %73, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = icmp eq i8 %13, 0
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %18
  tail call void @llvm.trap() #6
  unreachable

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp eq i64 %31, %39
  br i1 %40, label %41, label %180

41:                                               ; preds = %22
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %45 = select i1 %27, i8* %43, i8* %44
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %49 = select i1 %35, i8* %47, i8* %48
  %50 = icmp eq i64 %31, 0
  br i1 %27, label %57, label %51

51:                                               ; preds = %41
  br i1 %50, label %74, label %52

52:                                               ; preds = %51
  %53 = ptrtoint i8* %43 to i64
  %54 = trunc i64 %53 to i8
  %55 = load i8, i8* %49, align 1
  %56 = icmp eq i8 %55, %54
  br i1 %56, label %61, label %180

57:                                               ; preds = %41
  br i1 %50, label %74, label %58

58:                                               ; preds = %57
  %59 = tail call i32 @bcmp(i8* %45, i8* %49, i64 %31) #6
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %74, label %180

61:                                               ; preds = %52, %68
  %62 = phi i64 [ %65, %68 ], [ %30, %52 ]
  %63 = phi i8* [ %66, %68 ], [ %44, %52 ]
  %64 = phi i8* [ %69, %68 ], [ %49, %52 ]
  %65 = add i64 %62, -1
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = load i8, i8* %66, align 1
  %71 = load i8, i8* %69, align 1
  %72 = icmp eq i8 %70, %71
  br i1 %72, label %61, label %180

73:                                               ; preds = %8
  br i1 %15, label %180, label %74

74:                                               ; preds = %61, %73, %51, %57, %58
  %75 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp ne i8 %76, 0
  %78 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp ne i8 %79, 0
  %81 = xor i1 %77, %80
  %82 = xor i1 %77, true
  %83 = or i1 %81, %82
  br i1 %83, label %139, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %86 = icmp eq i8 %79, 0
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %84
  tail call void @llvm.trap() #6
  unreachable

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = zext i8 %92 to i64
  %97 = select i1 %93, i64 %95, i64 %96
  %98 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i64 %103, i64 %104
  %106 = icmp eq i64 %97, %105
  br i1 %106, label %107, label %180

107:                                              ; preds = %88
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %111 = select i1 %93, i8* %109, i8* %110
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %115 = select i1 %101, i8* %113, i8* %114
  %116 = icmp eq i64 %97, 0
  br i1 %93, label %123, label %117

117:                                              ; preds = %107
  br i1 %116, label %140, label %118

118:                                              ; preds = %117
  %119 = ptrtoint i8* %109 to i64
  %120 = trunc i64 %119 to i8
  %121 = load i8, i8* %115, align 1
  %122 = icmp eq i8 %121, %120
  br i1 %122, label %127, label %180

123:                                              ; preds = %107
  br i1 %116, label %140, label %124

124:                                              ; preds = %123
  %125 = tail call i32 @bcmp(i8* %111, i8* %115, i64 %97) #6
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %140, label %180

127:                                              ; preds = %118, %134
  %128 = phi i64 [ %131, %134 ], [ %96, %118 ]
  %129 = phi i8* [ %132, %134 ], [ %110, %118 ]
  %130 = phi i8* [ %135, %134 ], [ %115, %118 ]
  %131 = add i64 %128, -1
  %132 = getelementptr inbounds i8, i8* %129, i64 1
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds i8, i8* %130, i64 1
  %136 = load i8, i8* %132, align 1
  %137 = load i8, i8* %135, align 1
  %138 = icmp eq i8 %136, %137
  br i1 %138, label %127, label %180

139:                                              ; preds = %74
  br i1 %81, label %180, label %140

140:                                              ; preds = %127, %139, %117, %123, %124
  %141 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %142 = load i8, i8* %141, align 4, !range !2
  %143 = icmp ne i8 %142, 0
  %144 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 4, !range !2
  %146 = icmp ne i8 %145, 0
  %147 = xor i1 %143, %146
  %148 = xor i1 %143, true
  %149 = or i1 %147, %148
  br i1 %149, label %159, label %150

150:                                              ; preds = %140
  %151 = icmp eq i8 %145, 0
  br i1 %151, label %152, label %153, !prof !3

152:                                              ; preds = %150
  tail call void @llvm.trap() #6
  unreachable

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %155, %157
  br i1 %158, label %160, label %180

159:                                              ; preds = %140
  br i1 %147, label %180, label %160

160:                                              ; preds = %159, %153
  %161 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %162 = load i8, i8* %161, align 4, !range !2
  %163 = icmp ne i8 %162, 0
  %164 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %165 = load i8, i8* %164, align 4, !range !2
  %166 = icmp ne i8 %165, 0
  %167 = xor i1 %163, %166
  %168 = xor i1 %163, true
  %169 = or i1 %167, %168
  %170 = xor i1 %167, true
  br i1 %169, label %180, label %171

171:                                              ; preds = %160
  %172 = icmp eq i8 %165, 0
  br i1 %172, label %173, label %174, !prof !3

173:                                              ; preds = %171
  tail call void @llvm.trap() #6
  unreachable

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %176, %178
  br label %180

180:                                              ; preds = %68, %134, %52, %118, %73, %139, %159, %88, %22, %174, %160, %153, %124, %58, %2
  %181 = phi i1 [ false, %159 ], [ false, %139 ], [ false, %73 ], [ false, %2 ], [ false, %58 ], [ false, %124 ], [ false, %153 ], [ %170, %160 ], [ %179, %174 ], [ false, %22 ], [ false, %88 ], [ false, %118 ], [ false, %52 ], [ false, %134 ], [ false, %68 ]
  ret i1 %181
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13MessageTargetC2ENS0_4TypeE(%"struct.extensions::MessageTarget"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.extensions::MessageTarget", %"struct.extensions::MessageTarget"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = bitcast %union.anon* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  %9 = bitcast %union.anon* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
