; ModuleID = '../../ui/gfx/selection_bound.cc'
source_filename = "../../ui/gfx/selection_bound.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [35 x i8] c"SelectionBound(%s, %s, %s, %s, %d)\00", align 1

@_ZN3gfx14SelectionBoundC1Ev = hidden unnamed_addr alias void (%"class.gfx::SelectionBound"*), void (%"class.gfx::SelectionBound"*)* @_ZN3gfx14SelectionBoundC2Ev
@_ZN3gfx14SelectionBoundC1ERKS0_ = hidden unnamed_addr alias void (%"class.gfx::SelectionBound"*, %"class.gfx::SelectionBound"*), void (%"class.gfx::SelectionBound"*, %"class.gfx::SelectionBound"*)* @_ZN3gfx14SelectionBoundC2ERKS0_
@_ZN3gfx14SelectionBoundD1Ev = hidden unnamed_addr alias void (%"class.gfx::SelectionBound"*), void (%"class.gfx::SelectionBound"*)* @_ZN3gfx14SelectionBoundD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx14SelectionBoundC2Ev(%"class.gfx::SelectionBound"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 0
  store i32 3, i32* %2, align 4
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1, i32 0
  %4 = bitcast float* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 49, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBoundC2ERKS0_(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::SelectionBound"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gfx::SelectionBound"* %0 to i8*
  %4 = bitcast %"class.gfx::SelectionBound"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 53, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx14SelectionBoundD2Ev(%"class.gfx::SelectionBound"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound12SetEdgeStartERKNS_6PointFE(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1
  %4 = bitcast %"class.gfx::PointF"* %1 to i64*
  %5 = bitcast %"class.gfx::PointF"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = tail call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %1) #10
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 5
  %9 = bitcast %"class.gfx::Point"* %8 to i64*
  store i64 %7, i64* %9, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound19SetVisibleEdgeStartERKNS_6PointFE(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3
  %4 = bitcast %"class.gfx::PointF"* %1 to i64*
  %5 = bitcast %"class.gfx::PointF"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound10SetEdgeEndERKNS_6PointFE(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2
  %4 = bitcast %"class.gfx::PointF"* %1 to i64*
  %5 = bitcast %"class.gfx::PointF"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = tail call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %1) #10
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 6
  %9 = bitcast %"class.gfx::Point"* %8 to i64*
  store i64 %7, i64* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound17SetVisibleEdgeEndERKNS_6PointFE(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4
  %4 = bitcast %"class.gfx::PointF"* %1 to i64*
  %5 = bitcast %"class.gfx::PointF"* %3 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound7SetEdgeERKNS_6PointFES3_(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1
  %5 = bitcast %"class.gfx::PointF"* %1 to i64*
  %6 = bitcast %"class.gfx::PointF"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 4
  %8 = tail call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %1) #10
  %9 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 5
  %10 = bitcast %"class.gfx::Point"* %9 to i64*
  store i64 %8, i64* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2
  %12 = bitcast %"class.gfx::PointF"* %2 to i64*
  %13 = bitcast %"class.gfx::PointF"* %11 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  %15 = tail call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %2) #10
  %16 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 6
  %17 = bitcast %"class.gfx::Point"* %16 to i64*
  store i64 %15, i64* %17, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx14SelectionBound14SetVisibleEdgeERKNS_6PointFES3_(%"class.gfx::SelectionBound"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3
  %5 = bitcast %"class.gfx::PointF"* %1 to i64*
  %6 = bitcast %"class.gfx::PointF"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4
  %9 = bitcast %"class.gfx::PointF"* %2 to i64*
  %10 = bitcast %"class.gfx::PointF"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx14SelectionBound9GetHeightEv(%"class.gfx::SelectionBound"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 6, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 5, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %3, %5
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx14SelectionBound8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::SelectionBound"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::PointF"* %8) #10
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %7
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::PointF"* %17) #10
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %16
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 5
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.gfx::Point"* %26) #10
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %25
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 6
  call void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.gfx::Point"* %35) #10
  %36 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = select i1 %39, i8* %41, i8* %34
  %43 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = zext i8 %44 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %24, i8* %33, i8* %42, i32 %45) #10
  %46 = load i8, i8* %37, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %2
  %49 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %2, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  %51 = load i8, i8* %28, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %50
  %54 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  %56 = load i8, i8* %19, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  %61 = load i8, i8* %10, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::PointF"*) local_unnamed_addr #4

declare void @_ZNK3gfx5Point8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Point"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gfxeqERKNS_14SelectionBoundES2_(%"class.gfx::SelectionBound"* nocapture readonly dereferenceable(56), %"class.gfx::SelectionBound"* nocapture readonly dereferenceable(56)) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %64

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 7
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 7
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  br i1 %15, label %64, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %64

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %64

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %64

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2, i32 1
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %36, %38
  br i1 %39, label %40, label %64

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3, i32 0
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 3, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %42, %44
  br i1 %45, label %46, label %64

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 3, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %48, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 4, i32 0
  %56 = load float, float* %55, align 4
  %57 = fcmp oeq float %54, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4, i32 1
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 4, i32 1
  %62 = load float, float* %61, align 4
  %63 = fcmp oeq float %60, %62
  br label %64

64:                                               ; preds = %40, %28, %16, %58, %52, %8, %46, %34, %22, %2
  %65 = phi i1 [ false, %46 ], [ false, %34 ], [ false, %22 ], [ false, %8 ], [ false, %2 ], [ false, %52 ], [ %63, %58 ], [ false, %16 ], [ false, %28 ], [ false, %40 ]
  ret i1 %65
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gfxneERKNS_14SelectionBoundES2_(%"class.gfx::SelectionBound"* nocapture readonly dereferenceable(56), %"class.gfx::SelectionBound"* nocapture readonly dereferenceable(56)) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %64

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 7
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 7
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  br i1 %15, label %64, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %64

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %64

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %64

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2, i32 1
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %36, %38
  br i1 %39, label %40, label %64

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3, i32 0
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 3, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %42, %44
  br i1 %45, label %46, label %64

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 3, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %48, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 4, i32 0
  %56 = load float, float* %55, align 4
  %57 = fcmp oeq float %54, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4, i32 1
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 4, i32 1
  %62 = load float, float* %61, align 4
  %63 = fcmp une float %60, %62
  br label %64

64:                                               ; preds = %2, %8, %16, %22, %28, %34, %40, %46, %52, %58
  %65 = phi i1 [ true, %46 ], [ true, %34 ], [ true, %22 ], [ true, %8 ], [ true, %2 ], [ true, %52 ], [ %63, %58 ], [ true, %16 ], [ true, %28 ], [ true, %40 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx26RectBetweenSelectionBoundsERKNS_14SelectionBoundES2_(%"class.gfx::SelectionBound"* dereferenceable(56), %"class.gfx::SelectionBound"* dereferenceable(56)) local_unnamed_addr #1 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Point"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Point"*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast i64* %3 to i32*
  %9 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 5
  %11 = bitcast %"class.gfx::Point"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  store i64 %12, i64* %3, align 8
  %13 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 6
  call void @_ZN3gfx5Point8SetToMinERKS0_(%"class.gfx::Point"* nonnull %4, %"class.gfx::Point"* dereferenceable(8) %13) #10
  %14 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 5
  call void @_ZN3gfx5Point8SetToMinERKS0_(%"class.gfx::Point"* nonnull %4, %"class.gfx::Point"* dereferenceable(8) %14) #10
  %15 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 6
  call void @_ZN3gfx5Point8SetToMinERKS0_(%"class.gfx::Point"* nonnull %4, %"class.gfx::Point"* dereferenceable(8) %15) #10
  %16 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = bitcast i64* %5 to i32*
  %18 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %6, i64 0, i32 1
  %19 = load i64, i64* %11, align 4
  store i64 %19, i64* %5, align 8
  call void @_ZN3gfx5Point8SetToMaxERKS0_(%"class.gfx::Point"* nonnull %6, %"class.gfx::Point"* dereferenceable(8) %13) #10
  call void @_ZN3gfx5Point8SetToMaxERKS0_(%"class.gfx::Point"* nonnull %6, %"class.gfx::Point"* dereferenceable(8) %14) #10
  call void @_ZN3gfx5Point8SetToMaxERKS0_(%"class.gfx::Point"* nonnull %6, %"class.gfx::Point"* dereferenceable(8) %15) #10
  %20 = load i32, i32* %17, align 8
  %21 = load i32, i32* %8, align 8
  %22 = icmp sgt i32 %21, -1
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %21) #10
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !3
  %28 = load i32, i32* %18, align 4
  %29 = load i32, i32* %9, align 4
  %30 = icmp sgt i32 %29, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %29) #10
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !3
  %36 = icmp sgt i32 %27, 0
  %37 = select i1 %36, i32 %27, i32 0
  %38 = icmp sgt i32 %35, 0
  %39 = select i1 %38, i32 %35, i32 0
  %40 = load i64, i64* %3, align 8
  %41 = icmp sgt i32 %21, 0
  %42 = and i1 %41, %36
  %43 = sub nuw nsw i32 2147483647, %21
  %44 = icmp ult i32 %43, %37
  %45 = and i1 %42, %44
  %46 = select i1 %45, i32 %43, i32 %37
  %47 = icmp sgt i32 %29, 0
  %48 = and i1 %47, %38
  %49 = sub nuw nsw i32 2147483647, %29
  %50 = icmp ult i32 %49, %39
  %51 = and i1 %48, %50
  %52 = select i1 %51, i32 %49, i32 %39
  %53 = icmp sgt i32 %46, 0
  %54 = select i1 %53, i32 %46, i32 0
  %55 = icmp sgt i32 %52, 0
  %56 = select i1 %55, i32 %52, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %57 = insertvalue { i64, i64 } undef, i64 %40, 0
  %58 = zext i32 %56 to i64
  %59 = shl nuw nsw i64 %58, 32
  %60 = zext i32 %54 to i64
  %61 = or i64 %59, %60
  %62 = insertvalue { i64, i64 } %57, i64 %61, 1
  ret { i64, i64 } %62
}

declare void @_ZN3gfx5Point8SetToMinERKS0_(%"class.gfx::Point"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3gfx5Point8SetToMaxERKS0_(%"class.gfx::Point"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx27RectFBetweenSelectionBoundsERKNS_14SelectionBoundES2_(%"class.gfx::SelectionBound"* dereferenceable(56), %"class.gfx::SelectionBound"* dereferenceable(56)) local_unnamed_addr #7 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::PointF"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::PointF"*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 1
  %9 = bitcast %"class.gfx::PointF"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  store i64 %10, i64* %3, align 8
  %11 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 2
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %11) #10
  %12 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 1
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %12) #10
  %13 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 2
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %13) #10
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = load i64, i64* %9, align 4
  store i64 %15, i64* %5, align 8
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %11) #10
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %12) #10
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %13) #10
  %16 = bitcast i64* %5 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = bitcast i64* %3 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 8
  %20 = fsub <2 x float> %17, %19
  %21 = fcmp ogt <2 x float> %20, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %22 = select <2 x i1> %21, <2 x float> %20, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

declare void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx34RectFBetweenVisibleSelectionBoundsERKNS_14SelectionBoundES2_(%"class.gfx::SelectionBound"* dereferenceable(56), %"class.gfx::SelectionBound"* dereferenceable(56)) local_unnamed_addr #7 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::PointF"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::PointF"*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 3
  %9 = bitcast %"class.gfx::PointF"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  store i64 %10, i64* %3, align 8
  %11 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %0, i64 0, i32 4
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %11) #10
  %12 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 3
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %12) #10
  %13 = getelementptr inbounds %"class.gfx::SelectionBound", %"class.gfx::SelectionBound"* %1, i64 0, i32 4
  call void @_ZN3gfx6PointF8SetToMinERKS0_(%"class.gfx::PointF"* nonnull %4, %"class.gfx::PointF"* dereferenceable(8) %13) #10
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = load i64, i64* %9, align 4
  store i64 %15, i64* %5, align 8
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %11) #10
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %12) #10
  call void @_ZN3gfx6PointF8SetToMaxERKS0_(%"class.gfx::PointF"* nonnull %6, %"class.gfx::PointF"* dereferenceable(8) %13) #10
  %16 = bitcast i64* %5 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 8
  %18 = bitcast i64* %3 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 8
  %20 = fsub <2 x float> %17, %19
  %21 = fcmp ogt <2 x float> %20, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %22 = select <2 x i1> %21, <2 x float> %20, <2 x float> zeroinitializer
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
